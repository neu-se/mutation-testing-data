*** using precomputed mutations ***
[32m11:05:14 (3160) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m11:05:14 (3160) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m11:05:14 (3160) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m11:05:14 (3160) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m11:05:14 (3160) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m11:05:15 (3160) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2041 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.25/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", "undefined")
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", {})
Mutant 6 in q.js: bootstrap replaced with "promise"
Mutant 7 in q.js: bootstrap replaced with "q"
Mutant 8 in q.js: bootstrap replaced with "Q"
Mutant 9 in q.js: "promise" replaced with "fulfilled"
Mutant 10 in q.js: "promise" replaced with "rejected"
Mutant 11 in q.js: "promise" replaced with "pending"
Mutant 12 in q.js: definition replaced with 0
Mutant 13 in q.js: definition replaced with null
Mutant 14 in q.js: definition replaced with undefined
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "function"
Mutant 16 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof module === "undefined"
Mutant 17 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "string"
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && false
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && true
Mutant 20 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && typeof define.amd.define === "function"
Mutant 21 in q.js: define replaced with undefined
Mutant 22 in q.js: define replaced with console.log
Mutant 23 in q.js: definition replaced with definition()
Mutant 24 in q.js: definition replaced with null
Mutant 25 in q.js: definition replaced with function () {}
Mutant 26 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 27 in q.js: typeof ses !== "undefined" replaced with ses === undefined
Mutant 28 in q.js: typeof ses !== "undefined" replaced with ses !== null
Mutant 29 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 30 in q.js: !ses.ok() replaced with ses.isNotOk()
Mutant 31 in q.js: !ses.ok() replaced with ses.isSecure()
Mutant 32 in q.js: ses.ok replaced with ses.maybeOk
Mutant 33 in q.js: ses.ok replaced with ses.ok && ses.notOk
Mutant 34 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 35 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" ^ typeof self !== "undefined"
Mutant 36 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined" && typeof document !== "undefined"
Mutant 37 in q.js: definition replaced with null
Mutant 38 in q.js: definition replaced with undefined
Mutant 39 in q.js: definition replaced with 0
Mutant 40 in q.js: captureLine replaced with captureLine + 1
Mutant 41 in q.js: captureLine replaced with captureLine - 1
Mutant 42 in q.js: captureLine replaced with captureLine * 2
Mutant 43 in q.js: head.next replaced with head.next.next
Mutant 44 in q.js: head.next replaced with head.next.next.next
Mutant 45 in q.js: head.next replaced with head.next.next.next.next
Mutant 46 in q.js: domain replaced with !domain
Mutant 47 in q.js: domain replaced with domain + 1
Mutant 48 in q.js: domain replaced with domain.foo
Mutant 49 in q.js: runSingle(task, domain) replaced with runSingle(task, domain = null)
Mutant 50 in q.js: runSingle(task, domain) replaced with runSingle(task, domain = undefined)
Mutant 51 in q.js: runSingle(task, domain) replaced with runSingle(task, domain = "foo")
Mutant 52 in q.js: task replaced with task()
Mutant 53 in q.js: task replaced with task + 1
Mutant 54 in q.js: task replaced with task.call()
Mutant 55 in q.js: domain replaced with null
Mutant 56 in q.js: domain replaced with undefined
Mutant 57 in q.js: domain replaced with {}
Mutant 58 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 59 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 60 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 61 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 62 in q.js: laterQueue.pop replaced with laterQueue.length
Mutant 63 in q.js: runSingle replaced with noop
Mutant 64 in q.js: runSingle replaced with undefined
Mutant 65 in q.js: task replaced with null
Mutant 66 in q.js: task replaced with undefined
Mutant 67 in q.js: task replaced with () => {}
Mutant 68 in q.js: task replaced with task + 1
Mutant 69 in q.js: task replaced with task - 1
Mutant 70 in q.js: task replaced with task * 2
Mutant 71 in q.js: isNodeJS replaced with !isNodeJS
Mutant 72 in q.js: isNodeJS replaced with isNodeJS && false
Mutant 73 in q.js: isNodeJS replaced with isNodeJS || true
Mutant 74 in q.js: domain replaced with domain.exit()
Mutant 75 in q.js: domain replaced with domain.enter()
Mutant 76 in q.js: domain replaced with domain.exit() && domain.enter()
Mutant 77 in q.js: domain.exit replaced with domain.enter
Mutant 78 in q.js: domain.exit replaced with domain.run
Mutant 79 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 80 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 81 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 82 in q.js: setTimeout replaced with setInterval
Mutant 83 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 84 in q.js: flush replaced with flush()
Mutant 85 in q.js: flush replaced with flush(1)
Mutant 86 in q.js: flush replaced with flush.call(null)
Mutant 87 in q.js: 0 replaced with 1
Mutant 88 in q.js: 0 replaced with -1
Mutant 89 in q.js: 0 replaced with null
Mutant 90 in q.js: domain replaced with domain.exit()
Mutant 91 in q.js: domain replaced with !domain
Mutant 92 in q.js: domain replaced with domain.enter()
Mutant 93 in q.js: domain.enter replaced with domain.exit
Mutant 94 in q.js: domain replaced with !domain
Mutant 95 in q.js: domain replaced with domain && false
Mutant 96 in q.js: domain replaced with domain || true
Mutant 97 in q.js: domain.exit replaced with domain.enter
Mutant 98 in q.js: domain.exit replaced with domain.remove
Mutant 99 in q.js: domain.exit replaced with domain.pop
Mutant 100 in q.js: !flushing replaced with flushing
Mutant 101 in q.js: !flushing replaced with !flushing && true
Mutant 102 in q.js: !flushing replaced with flushing || false
Mutant 103 in q.js: flush replaced with flush()
Mutant 104 in q.js: flush replaced with flush.call()
Mutant 105 in q.js: flush replaced with flush.apply()
Mutant 106 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 107 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 108 in q.js: typeof window !== "undefined" replaced with typeof window !== "function"
Mutant 109 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null, flush)
Mutant 110 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined, flush)
Mutant 111 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(this, flush)
Mutant 112 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 113 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 114 in q.js: window replaced with null
Mutant 115 in q.js: window replaced with undefined
Mutant 116 in q.js: window replaced with {}
Mutant 117 in q.js: flush replaced with flush()
Mutant 118 in q.js: flush replaced with requestAnimationFrame(flush)
Mutant 119 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 120 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 121 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "function"
Mutant 122 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 123 in q.js: channel.port2.postMessage replaced with channel.port2.onmessage
Mutant 124 in q.js: channel.port2.postMessage replaced with channel.port1.onmessage
Mutant 125 in q.js: 0 replaced with 1
Mutant 126 in q.js: 0 replaced with null
Mutant 127 in q.js: 0 replaced with undefined
Mutant 128 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 129 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 130 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "hello")
Mutant 131 in q.js: setTimeout replaced with setInterval
Mutant 132 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 133 in q.js: flush replaced with flush()
Mutant 134 in q.js: 0 replaced with 1
Mutant 135 in q.js: 0 replaced with -1
Mutant 136 in q.js: 0 replaced with null
Mutant 137 in q.js: requestPortTick replaced with requestTick
Mutant 138 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 139 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 140 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "flush")
Mutant 141 in q.js: setTimeout replaced with setInterval
Mutant 142 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 143 in q.js: flush replaced with flush + 1
Mutant 144 in q.js: flush replaced with flush(1)
Mutant 145 in q.js: flush replaced with flush(undefined)
Mutant 146 in q.js: 0 replaced with 1
Mutant 147 in q.js: 0 replaced with -1
Mutant 148 in q.js: 0 replaced with null
Mutant 149 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 150 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 151 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 152 in q.js: task replaced with null
Mutant 153 in q.js: task replaced with undefined
Mutant 154 in q.js: task replaced with 0
Mutant 155 in q.js: !flushing replaced with flushing
Mutant 156 in q.js: !flushing replaced with !flushing && laterQueue.length > 0
Mutant 157 in q.js: !flushing replaced with typeof laterQueue !== 'undefined' && laterQueue.length > 0
Mutant 158 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 159 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 160 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments.length)
Mutant 161 in q.js: call.apply replaced with call.bind
Mutant 162 in q.js: f replaced with f + 1
Mutant 163 in q.js: f replaced with f * 2
Mutant 164 in q.js: f replaced with f - 1
Mutant 165 in q.js: arguments replaced with [1, 2, 3]
Mutant 166 in q.js: arguments replaced with "hello"
Mutant 167 in q.js: arguments replaced with null
Mutant 168 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(this, 0)
Mutant 169 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(this, 1)
Mutant 170 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(this, -1)
Mutant 171 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 172 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 173 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 174 in q.js: 1 replaced with 2
Mutant 175 in q.js: 1 replaced with 3
Mutant 176 in q.js: 1 replaced with 4
Mutant 177 in q.js: index in this replaced with index > this.length
Mutant 178 in q.js: index in this replaced with index < this.length
Mutant 179 in q.js: index in this replaced with index === this.length
Mutant 180 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index += 2; index < length; index += 2) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 181 in q.js: index < length replaced with index > length
Mutant 182 in q.js: index < length replaced with index <= length
Mutant 183 in q.js: index < length replaced with index >= length
Mutant 184 in q.js: index++ replaced with index--
Mutant 185 in q.js: index++ replaced with index += 2
Mutant 186 in q.js: index++ replaced with index = 0
Mutant 187 in q.js: index in this replaced with index > this.length
Mutant 188 in q.js: index in this replaced with index < this.length
Mutant 189 in q.js: index in this replaced with index === this.length
Mutant 190 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index + 1], index + 1)
Mutant 191 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index - 1], index - 1)
Mutant 192 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index + 2], index + 2)
Mutant 193 in q.js: basis replaced with basis + 1
Mutant 194 in q.js: basis replaced with basis * 2
Mutant 195 in q.js: basis replaced with basis - 1
Mutant 196 in q.js: this[index] replaced with this[index] + 1
Mutant 197 in q.js: this[index] replaced with this[index] - 1
Mutant 198 in q.js: this[index] replaced with this[index] * 2
Mutant 199 in q.js: index replaced with index + 1
Mutant 200 in q.js: index replaced with index - 1
Mutant 201 in q.js: index replaced with index * 2
Mutant 202 in q.js: i < this.length replaced with i <= this.length
Mutant 203 in q.js: i < this.length replaced with i > this.length
Mutant 204 in q.js: i < this.length replaced with i != this.length
Mutant 205 in q.js: i++ replaced with i--
Mutant 206 in q.js: i++ replaced with i += 2
Mutant 207 in q.js: i++ replaced with i *= 2
Mutant 208 in q.js: this[i] === value replaced with this[i] !== value
Mutant 209 in q.js: this[i] === value replaced with this[i] > value
Mutant 210 in q.js: this[i] === value replaced with this[i] < value
Mutant 211 in q.js: collect.push replaced with collect.pop
Mutant 212 in q.js: collect.push replaced with collect.shift
Mutant 213 in q.js: collect.push replaced with collect.unshift
Mutant 214 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) + 1
Mutant 215 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) + 0
Mutant 216 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) - 1
Mutant 217 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self.length)
Mutant 218 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self.push)
Mutant 219 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self.pop)
Mutant 220 in q.js: callback.call replaced with callback.apply
Mutant 221 in q.js: callback.call replaced with callback.bind
Mutant 222 in q.js: thisp replaced with null
Mutant 223 in q.js: thisp replaced with undefined
Mutant 224 in q.js: value replaced with undefined
Mutant 225 in q.js: value replaced with null
Mutant 226 in q.js: value replaced with "foo"
Mutant 227 in q.js: index replaced with index + 1
Mutant 228 in q.js: index replaced with index - 1
Mutant 229 in q.js: index replaced with index * 2
Mutant 230 in q.js: self replaced with self + 1
Mutant 231 in q.js: self replaced with self * 2
Mutant 232 in q.js: self replaced with self - 1
Mutant 233 in q.js: uncurryThis replaced with prop in Object.prototype
Mutant 234 in q.js: object replaced with undefined
Mutant 235 in q.js: object replaced with null
Mutant 236 in q.js: object replaced with {}
Mutant 237 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== undefined
Mutant 238 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || object[key] === undefined
Mutant 239 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== null
Mutant 240 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key + 1)
Mutant 241 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key - 1)
Mutant 242 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, "key")
Mutant 243 in q.js: object replaced with {}
Mutant 244 in q.js: key replaced with key + 1
Mutant 245 in q.js: key replaced with key - 1
Mutant 246 in q.js: key replaced with this[key]
Mutant 247 in q.js: key replaced with key + 1
Mutant 248 in q.js: key replaced with key * 2
Mutant 249 in q.js: Object replaced with null
Mutant 250 in q.js: Object replaced with undefined
Mutant 251 in q.js: Object replaced with NaN
Mutant 252 in q.js: value replaced with value + 1
Mutant 253 in q.js: value replaced with value - 1
Mutant 254 in q.js: value replaced with value * 2
Mutant 255 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 256 in q.js: object_toString replaced with object_defineProperty
Mutant 257 in q.js: object_toString replaced with object_keys
Mutant 258 in q.js: exception replaced with exception.message
Mutant 259 in q.js: exception replaced with exception.name
Mutant 260 in q.js: exception replaced with exception.stack
Mutant 261 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== null
Mutant 262 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" || ReturnValue !== null
Mutant 263 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with promise.stack && typeof error === "object" && error !== null && error.stack
Mutant 264 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks
Mutant 265 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.value) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 266 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.promise) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 267 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.then) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 268 in q.js: !!p replaced with !p
Mutant 269 in q.js: !!p replaced with p && true
Mutant 270 in q.js: p = p.source replaced with p = p.source.slice()
Mutant 271 in q.js: p = p.source replaced with p = p.source.concat()
Mutant 272 in q.js: p = p.source replaced with p = p.source.filter(function () {
  return true;
})
Mutant 273 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 274 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 275 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)
Mutant 276 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 277 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 278 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter * 2,
  configurable: true
})
Mutant 279 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 280 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 281 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__" + 1
Mutant 282 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 283 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 284 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 285 in q.js: stacks.unshift replaced with stacks.push
Mutant 286 in q.js: stacks.unshift replaced with stacks.pop
Mutant 287 in q.js: stacks.unshift replaced with stacks.shift
Mutant 288 in q.js: p.stack replaced with p.stackCounter
Mutant 289 in q.js: p.stack replaced with p.source.stack
Mutant 290 in q.js: p.stack replaced with p.stack.length
Mutant 291 in q.js: stacks.unshift replaced with stacks.push
Mutant 292 in q.js: stacks.unshift replaced with stacks.pop
Mutant 293 in q.js: stacks.unshift replaced with stacks.shift
Mutant 294 in q.js: error.stack replaced with error.message
Mutant 295 in q.js: error.stack replaced with error.name
Mutant 296 in q.js: error.stack replaced with error.code
Mutant 297 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:" + "\n"
Mutant 298 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR.toLowerCase() + "\n"
Mutant 299 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR.split("").reverse().join("") + "\n"
Mutant 300 in q.js: concatedStacks replaced with concatedStacks.split("\n")
Mutant 301 in q.js: concatedStacks replaced with concatedStacks.toLowerCase()
Mutant 302 in q.js: concatedStacks replaced with concatedStacks.replace("From previous event:", "From previous event: ")
Mutant 303 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: false
})
Mutant 304 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 305 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: false
})
Mutant 306 in q.js: "stack" replaced with "stacktrace"
Mutant 307 in q.js: "stack" replaced with "stack" + "trace"
Mutant 308 in q.js: "stack" replaced with "stack" + 1
Mutant 309 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 310 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  enumerable: true
}
Mutant 311 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  writable: false
}
Mutant 312 in q.js: "\n" replaced with " "
Mutant 313 in q.js: "\n" replaced with "\t"
Mutant 314 in q.js: "\n" replaced with "\r\n"
Mutant 315 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 316 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 317 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = array.length; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 318 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = lines.length - 1; i >= 0; --i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 319 in q.js: i < lines.length replaced with i <= lines.length
Mutant 320 in q.js: i < lines.length replaced with i > lines.length
Mutant 321 in q.js: i < lines.length replaced with i == lines.length
Mutant 322 in q.js: ++i replaced with i--
Mutant 323 in q.js: ++i replaced with i += 2
Mutant 324 in q.js: ++i replaced with i *= 2
Mutant 325 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && !line
Mutant 326 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && line.trim()
Mutant 327 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && line.split(" ").length > 1
Mutant 328 in q.js: isInternalFrame replaced with isExternalFrame
Mutant 329 in q.js: line replaced with line.includes("node_modules")
Mutant 330 in q.js: line replaced with line.startsWith("node_modules")
Mutant 331 in q.js: line replaced with line.endsWith("node_modules")
Mutant 332 in q.js: isNodeFrame replaced with isPromiseAlike
Mutant 333 in q.js: isNodeFrame replaced with getFileNameAndLineNumber
Mutant 334 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 335 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 336 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 337 in q.js: line replaced with line + 1
Mutant 338 in q.js: line replaced with line - 1
Mutant 339 in q.js: line replaced with line * 2
Mutant 340 in q.js: desiredLines.join replaced with desiredLines.push
Mutant 341 in q.js: desiredLines.join replaced with desiredLines.reverse
Mutant 342 in q.js: desiredLines.join replaced with desiredLines.slice
Mutant 343 in q.js: "\n" replaced with "\t"
Mutant 344 in q.js: "\n" replaced with " "
Mutant 345 in q.js: "\n" replaced with "<br>"
Mutant 346 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 347 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 348 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 349 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 350 in q.js: stackLine.indexOf replaced with stackLine.startsWith
Mutant 351 in q.js: stackLine.indexOf replaced with stackLine.endsWith
Mutant 352 in q.js: "(node.js:" replaced with "(node.js:)"
Mutant 353 in q.js: stackLine replaced with stackLine.split("\n")[0]
Mutant 354 in q.js: stackLine replaced with stackLine.split("\n").reverse()[0]
Mutant 355 in q.js: stackLine replaced with stackLine.split("\n").slice(1).join("\n")
Mutant 356 in q.js: attempt1 replaced with attempt1[2]
Mutant 357 in q.js: attempt1 replaced with attempt1[1]
Mutant 358 in q.js: attempt1 replaced with attempt1[0]
Mutant 359 in q.js: Number replaced with "string"
Mutant 360 in q.js: Number replaced with null
Mutant 361 in q.js: Number replaced with undefined
Mutant 362 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 363 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 364 in q.js: attempt1[2] replaced with attempt2[1]
Mutant 365 in q.js: stackLine replaced with stackLine.split("at ")[1]
Mutant 366 in q.js: stackLine replaced with stackLine.replace("at ", "")
Mutant 367 in q.js: stackLine replaced with stackLine.slice(stackLine.indexOf("at ") + 3)
Mutant 368 in q.js: attempt2 replaced with attempt2[1] > 0
Mutant 369 in q.js: attempt2 replaced with attempt2[1] === attempt2[2]
Mutant 370 in q.js: attempt2 replaced with attempt2[1] !== attempt2[2]
Mutant 371 in q.js: Number replaced with "Hello, world!"
Mutant 372 in q.js: Number replaced with null
Mutant 373 in q.js: Number replaced with undefined
Mutant 374 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 375 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 376 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 377 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 378 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 379 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 380 in q.js: attempt3 replaced with attempt3[1]
Mutant 381 in q.js: attempt3 replaced with attempt3.length
Mutant 382 in q.js: attempt3 replaced with lines[attempt3[0]]
Mutant 383 in q.js: Number replaced with String
Mutant 384 in q.js: Number replaced with null
Mutant 385 in q.js: Number replaced with undefined
Mutant 386 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 387 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 388 in q.js: attempt3[2] replaced with attempt3[0]
Mutant 389 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 390 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[1]
Mutant 391 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber.length
Mutant 392 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 393 in q.js: stackLine replaced with stackLine.split(":")[1]
Mutant 394 in q.js: stackLine replaced with stackLine.split(":")[2]
Mutant 395 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber[0]
Mutant 396 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 397 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 398 in q.js: !hasStacks replaced with hasStacks
Mutant 399 in q.js: "\n" replaced with "\t"
Mutant 400 in q.js: "\n" replaced with "\r\n"
Mutant 401 in q.js: "\n" replaced with "\\n"
Mutant 402 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 403 in q.js: lines[0].indexOf replaced with lines[lines.length - 1].indexOf
Mutant 404 in q.js: "@" replaced with "#"
Mutant 405 in q.js: "@" replaced with "%"
Mutant 406 in q.js: "@" replaced with "^"
Mutant 407 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 408 in q.js: firstLine replaced with lines[1]
Mutant 409 in q.js: firstLine replaced with lines[lines.length - 1]
Mutant 410 in q.js: firstLine replaced with lines[Math.floor(lines.length / 2)]
Mutant 411 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === qFileName
Mutant 412 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1] === qStartingLine
Mutant 413 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 414 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== "function"
Mutant 415 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console === "undefined"
Mutant 416 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn !== "function"
Mutant 417 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, arguments[0])
Mutant 418 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, arguments[1])
Mutant 419 in q.js: callback.apply replaced with callback.call
Mutant 420 in q.js: callback.apply replaced with callback.bind
Mutant 421 in q.js: callback.apply replaced with callback.toString
Mutant 422 in q.js: arguments replaced with null
Mutant 423 in q.js: arguments replaced with undefined
Mutant 424 in q.js: arguments replaced with []
Mutant 425 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 426 in q.js: value instanceof Promise replaced with Object.prototype.toString.call(value) === '[object Promise]'
Mutant 427 in q.js: value instanceof Promise replaced with value.then !== undefined
Mutant 428 in q.js: isPromiseAlike(value) replaced with value instanceof Promise
Mutant 429 in q.js: isPromiseAlike(value) replaced with value.then
Mutant 430 in q.js: isPromiseAlike(value) replaced with value.constructor.name === "Promise"
Mutant 431 in q.js: value replaced with value + 1
Mutant 432 in q.js: value replaced with value * 2
Mutant 433 in q.js: value replaced with value - 1
Mutant 434 in q.js: value replaced with !value
Mutant 435 in q.js: value replaced with value + 1
Mutant 436 in q.js: value replaced with value.toString()
Mutant 437 in q.js: fulfill replaced with reject
Mutant 438 in q.js: value replaced with null
Mutant 439 in q.js: value replaced with undefined
Mutant 440 in q.js: value replaced with 0
Mutant 441 in q.js: object_create replaced with null
Mutant 442 in q.js: object_create replaced with undefined
Mutant 443 in q.js: object_create replaced with Promise.prototype
Mutant 444 in q.js: Promise.prototype replaced with Object.prototype
Mutant 445 in q.js: Promise.prototype replaced with null
Mutant 446 in q.js: Promise.prototype replaced with undefined
Mutant 447 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 448 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 449 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 450 in q.js: messages replaced with messages.length
Mutant 451 in q.js: messages replaced with messages[0]
Mutant 452 in q.js: messages replaced with messages.slice(1)
Mutant 453 in q.js: args replaced with args[0]
Mutant 454 in q.js: args replaced with args[1]
Mutant 455 in q.js: args replaced with args.slice(1)
Mutant 456 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 457 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 458 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === undefined
Mutant 459 in q.js: operands[1] replaced with operands[2]
Mutant 460 in q.js: operands[1] replaced with operands[0]
Mutant 461 in q.js: operands[1] replaced with operands.length
Mutant 462 in q.js: resolvedPromise replaced with null
Mutant 463 in q.js: resolvedPromise replaced with undefined
Mutant 464 in q.js: resolvedPromise replaced with promise
Mutant 465 in q.js: args replaced with args[0]
Mutant 466 in q.js: args replaced with [args[0], args[1], args[2]]
Mutant 467 in q.js: args replaced with args.slice(1)
Mutant 468 in q.js: messages replaced with messages.length
Mutant 469 in q.js: messages replaced with resolvedPromise
Mutant 470 in q.js: messages replaced with progressListeners.length
Mutant 471 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 472 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 473 in q.js: resolvedPromise replaced with fulfill(resolvedPromise)
Mutant 474 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 475 in q.js: isPromise(nearerValue) replaced with nearerValue !== null
Mutant 476 in q.js: isPromise(nearerValue) replaced with nearerValue.isFulfilled()
Mutant 477 in q.js: isPromise replaced with isPromiseAlike
Mutant 478 in q.js: isPromise replaced with !isPromise
Mutant 479 in q.js: isPromise replaced with isPromise || isPromiseAlike
Mutant 480 in q.js: nearerValue replaced with nearerValue + 1
Mutant 481 in q.js: nearerValue replaced with nearerValue - 1
Mutant 482 in q.js: nearerValue replaced with nearerValue * 2
Mutant 483 in q.js: !resolvedPromise replaced with resolvedPromise === true
Mutant 484 in q.js: !resolvedPromise replaced with resolvedPromise !== false
Mutant 485 in q.js: !resolvedPromise replaced with typeof resolvedPromise === "boolean"
Mutant 486 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 487 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 488 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport ? hasStacks : false
Mutant 489 in q.js: e.stack.substring replaced with e.stack.length
Mutant 490 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 491 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") - 1
Mutant 492 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 493 in q.js: "\n" replaced with "\t"
Mutant 494 in q.js: "\n" replaced with " "
Mutant 495 in q.js: "\n" replaced with "\\n"
Mutant 496 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 497 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 498 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 499 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 500 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.length)
Mutant 501 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.slice(1))
Mutant 502 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 503 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 504 in q.js: newPromise replaced with null
Mutant 505 in q.js: newPromise replaced with undefined
Mutant 506 in q.js: newPromise replaced with 0
Mutant 507 in q.js: message replaced with message[0]
Mutant 508 in q.js: message replaced with message.slice(1)
Mutant 509 in q.js: message replaced with message.length
Mutant 510 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 511 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 512 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 513 in q.js: Q replaced with Q.reject
Mutant 514 in q.js: Q replaced with Q.defer
Mutant 515 in q.js: Q replaced with Q.all
Mutant 516 in q.js: value replaced with null
Mutant 517 in q.js: value replaced with undefined
Mutant 518 in q.js: value replaced with 0
Mutant 519 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 520 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 521 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 522 in q.js: fulfill(value) replaced with reject(value)
Mutant 523 in q.js: fulfill(value) replaced with fulfill(otherValue)
Mutant 524 in q.js: fulfill(value) replaced with fulfill(value + 1)
Mutant 525 in q.js: fulfill replaced with resolve
Mutant 526 in q.js: fulfill replaced with notify
Mutant 527 in q.js: value replaced with value * 2
Mutant 528 in q.js: value replaced with value - 1
Mutant 529 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 530 in q.js: resolvedPromise replaced with resolvedPromise && false
Mutant 531 in q.js: resolvedPromise replaced with resolvedPromise || true
Mutant 532 in q.js: reject(reason) replaced with reject(new Error(reason))
Mutant 533 in q.js: reject(reason) replaced with reject(reason + "!")
Mutant 534 in q.js: reject(reason) replaced with reject(reason.toUpperCase())
Mutant 535 in q.js: reject replaced with resolve
Mutant 536 in q.js: reject replaced with fulfill
Mutant 537 in q.js: reason replaced with null
Mutant 538 in q.js: reason replaced with undefined
Mutant 539 in q.js: reason replaced with "error"
Mutant 540 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 541 in q.js: resolvedPromise replaced with resolvedPromise === false
Mutant 542 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 543 in q.js: progressListener replaced with progressListeners[0]
Mutant 544 in q.js: progressListener replaced with progressListeners[progressListeners.length - 1]
Mutant 545 in q.js: progress replaced with progress + 1
Mutant 546 in q.js: progress replaced with progress - 1
Mutant 547 in q.js: progress replaced with progress * 2
Mutant 548 in q.js: error replaced with error != null
Mutant 549 in q.js: error replaced with error.message !== null
Mutant 550 in q.js: error replaced with error.name !== null
Mutant 551 in q.js: error replaced with null
Mutant 552 in q.js: error replaced with undefined
Mutant 553 in q.js: error replaced with new Error()
Mutant 554 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 555 in q.js: arguments.length > 2 replaced with arguments.length >= 2
Mutant 556 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 557 in q.js: self.resolve replaced with self.reject
Mutant 558 in q.js: self.resolve replaced with self.notify
Mutant 559 in q.js: self.resolve replaced with self.fulfill
Mutant 560 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 561 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0, 1)
Mutant 562 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 563 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 564 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 565 in q.js: arguments replaced with null
Mutant 566 in q.js: arguments replaced with undefined
Mutant 567 in q.js: arguments replaced with []
Mutant 568 in q.js: 1 replaced with 3
Mutant 569 in q.js: 1 replaced with 4
Mutant 570 in q.js: self.resolve replaced with self.reject
Mutant 571 in q.js: self.resolve replaced with self.notify
Mutant 572 in q.js: self.resolve replaced with self.fulfill
Mutant 573 in q.js: value replaced with null
Mutant 574 in q.js: value replaced with undefined
Mutant 575 in q.js: value replaced with false
Mutant 576 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 577 in q.js: typeof resolver !== "function" replaced with resolver !== Function
Mutant 578 in q.js: typeof resolver !== "function" replaced with resolver.constructor !== Function
Mutant 579 in q.js: defer replaced with defer.promise
Mutant 580 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.resolve, deferred.notify)
Mutant 581 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.reject, deferred.notify.bind(deferred))
Mutant 582 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.reject, deferred.notify.call(deferred))
Mutant 583 in q.js: resolver replaced with resolver.resolve
Mutant 584 in q.js: resolver replaced with resolver.reject
Mutant 585 in q.js: resolver replaced with resolver.notify
Mutant 586 in q.js: deferred.resolve replaced with deferred.reject
Mutant 587 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 588 in q.js: deferred.resolve replaced with Q.reject
Mutant 589 in q.js: deferred.reject replaced with deferred.resolve
Mutant 590 in q.js: deferred.reject replaced with deferred.notify
Mutant 591 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 592 in q.js: deferred.notify replaced with deferred.reject
Mutant 593 in q.js: deferred.notify replaced with deferred.fulfill
Mutant 594 in q.js: deferred.notify replaced with deferred.resolve
Mutant 595 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 596 in q.js: deferred.reject replaced with deferred.notify
Mutant 597 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 598 in q.js: reason replaced with null
Mutant 599 in q.js: reason replaced with undefined
Mutant 600 in q.js: reason replaced with "error"
Mutant 601 in q.js: Q replaced with Q.reject
Mutant 602 in q.js: Q replaced with Q.resolve
Mutant 603 in q.js: Q replaced with Q.all
Mutant 604 in q.js: x replaced with y
Mutant 605 in q.js: x replaced with x + 1
Mutant 606 in q.js: x replaced with x * 2
Mutant 607 in q.js: y replaced with x
Mutant 608 in q.js: y replaced with y + 1
Mutant 609 in q.js: y replaced with x + y
Mutant 610 in q.js: Q replaced with Q.reject
Mutant 611 in q.js: Q replaced with Q.resolve
Mutant 612 in q.js: Q replaced with Q.all
Mutant 613 in q.js: [this, that] replaced with [that, this]
Mutant 614 in q.js: [this, that] replaced with [this, this]
Mutant 615 in q.js: [this, that] replaced with [this]
Mutant 616 in q.js: x === y replaced with x !== y
Mutant 617 in q.js: x === y replaced with x == y
Mutant 618 in q.js: x === y replaced with x > y
Mutant 619 in q.js: i < len replaced with i > len
Mutant 620 in q.js: i < len replaced with i <= len
Mutant 621 in q.js: i < len replaced with i >= len
Mutant 622 in q.js: i++ replaced with i--
Mutant 623 in q.js: i++ replaced with i += 2
Mutant 624 in q.js: i++ replaced with i = 0
Mutant 625 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 626 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, resolve)
Mutant 627 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve, reject)
Mutant 628 in q.js: Q replaced with Q.reject
Mutant 629 in q.js: Q replaced with Q.resolve
Mutant 630 in q.js: Q replaced with Q.all
Mutant 631 in q.js: answerPs[i] replaced with answerPs[i + 1]
Mutant 632 in q.js: answerPs[i] replaced with answerPs[i - 1]
Mutant 633 in q.js: resolve replaced with resolve(x)
Mutant 634 in q.js: resolve replaced with reject(x)
Mutant 635 in q.js: this.then replaced with deferred.promise
Mutant 636 in q.js: Q.race replaced with Q.reject
Mutant 637 in q.js: Q.race replaced with Q.resolve
Mutant 638 in q.js: Q.race replaced with Q.all
Mutant 639 in q.js: fallback === void 0 replaced with fallback === null
Mutant 640 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 641 in q.js: fallback === void 0 replaced with fallback === function () {}
Mutant 642 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 643 in q.js: inspect === void 0 replaced with inspect !== null
Mutant 644 in q.js: inspect === void 0 replaced with inspect !== "undefined"
Mutant 645 in q.js: object_create replaced with null
Mutant 646 in q.js: object_create replaced with undefined
Mutant 647 in q.js: object_create replaced with {}
Mutant 648 in q.js: Promise.prototype replaced with Object.create(null)
Mutant 649 in q.js: Promise.prototype replaced with Object.create(Promise.prototype)
Mutant 650 in q.js: Promise.prototype replaced with Object.create(Promise)
Mutant 651 in q.js: descriptor[op] replaced with descriptor[op] + 1
Mutant 652 in q.js: descriptor[op] replaced with descriptor[op] = function () {}
Mutant 653 in q.js: descriptor[op] replaced with descriptor[op] = null
Mutant 654 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args[0])
Mutant 655 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args[1])
Mutant 656 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args.slice(1))
Mutant 657 in q.js: args replaced with args[0]
Mutant 658 in q.js: args replaced with args.slice(1)
Mutant 659 in q.js: args replaced with args.concat(1)
Mutant 660 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.reject)
Mutant 661 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.resolve)
Mutant 662 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.then)
Mutant 663 in q.js: promise replaced with null
Mutant 664 in q.js: promise replaced with undefined
Mutant 665 in q.js: promise replaced with {}
Mutant 666 in q.js: op replaced with op + 1
Mutant 667 in q.js: op replaced with op.toUpperCase()
Mutant 668 in q.js: op replaced with op.length
Mutant 669 in q.js: args replaced with null
Mutant 670 in q.js: args replaced with undefined
Mutant 671 in q.js: args replaced with "foo"
Mutant 672 in q.js: reject replaced with undefined
Mutant 673 in q.js: exception replaced with null
Mutant 674 in q.js: exception replaced with undefined
Mutant 675 in q.js: exception replaced with new Error("some error message")
Mutant 676 in q.js: resolve replaced with reject
Mutant 677 in q.js: result replaced with null
Mutant 678 in q.js: result replaced with undefined
Mutant 679 in q.js: result replaced with reject(new Error("Promise does not support operation: " + op))
Mutant 680 in q.js: inspect replaced with inspect()
Mutant 681 in q.js: inspect replaced with inspect.call(promise)
Mutant 682 in q.js: inspect replaced with inspect.apply(promise)
Mutant 683 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 684 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 685 in q.js: inspected.state === "rejected" replaced with inspected.state === "unknown"
Mutant 686 in q.js: inspect replaced with promise.inspect
Mutant 687 in q.js: inspect replaced with deferred.inspect
Mutant 688 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 689 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 690 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 691 in q.js: defer replaced with deferred
Mutant 692 in q.js: defer replaced with deferred.promise
Mutant 693 in q.js: fulfilled replaced with rejected
Mutant 694 in q.js: fulfilled replaced with undefined
Mutant 695 in q.js: fulfilled replaced with null
Mutant 696 in q.js: value replaced with null
Mutant 697 in q.js: value replaced with undefined
Mutant 698 in q.js: value replaced with "hello world"
Mutant 699 in q.js: exception replaced with null
Mutant 700 in q.js: exception replaced with undefined
Mutant 701 in q.js: exception replaced with new Error()
Mutant 702 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 703 in q.js: typeof rejected === "function" replaced with rejected !== undefined
Mutant 704 in q.js: typeof rejected === "function" replaced with typeof rejected !== "undefined"
Mutant 705 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self)
Mutant 706 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(self, exception)
Mutant 707 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self, self)
Mutant 708 in q.js: exception replaced with exception.message
Mutant 709 in q.js: exception replaced with exception.stack
Mutant 710 in q.js: exception replaced with exception.name
Mutant 711 in q.js: rejected replaced with fulfilled
Mutant 712 in q.js: rejected replaced with Q.reject
Mutant 713 in q.js: exception replaced with null
Mutant 714 in q.js: exception replaced with new Error("Different error message")
Mutant 715 in q.js: exception replaced with undefined
Mutant 716 in q.js: reject replaced with resolve
Mutant 717 in q.js: reject replaced with Q.reject
Mutant 718 in q.js: newException replaced with newException.message
Mutant 719 in q.js: newException replaced with newException.stack
Mutant 720 in q.js: newException replaced with newException.name
Mutant 721 in q.js: reject replaced with undefined
Mutant 722 in q.js: exception replaced with null
Mutant 723 in q.js: exception replaced with undefined
Mutant 724 in q.js: exception replaced with "error"
Mutant 725 in q.js: progressed replaced with progressed + 1
Mutant 726 in q.js: progressed replaced with progressed - 1
Mutant 727 in q.js: progressed replaced with progressed * 2
Mutant 728 in q.js: value replaced with null
Mutant 729 in q.js: value replaced with undefined
Mutant 730 in q.js: done replaced with !done
Mutant 731 in q.js: done replaced with done = false
Mutant 732 in q.js: done replaced with done = true
Mutant 733 in q.js: deferred.resolve replaced with deferred.reject
Mutant 734 in q.js: deferred.resolve replaced with deferred.notify
Mutant 735 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 736 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 737 in q.js: _fulfilled(value) replaced with _fulfilled(reject(value))
Mutant 738 in q.js: value replaced with null
Mutant 739 in q.js: value replaced with undefined
Mutant 740 in q.js: done replaced with !done
Mutant 741 in q.js: done replaced with done && false
Mutant 742 in q.js: done replaced with done || true
Mutant 743 in q.js: deferred.resolve replaced with deferred.reject
Mutant 744 in q.js: deferred.resolve replaced with deferred.notify
Mutant 745 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 746 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 747 in q.js: _rejected(exception) replaced with _rejected(new Error("Test error"))
Mutant 748 in q.js: _rejected replaced with _progressed
Mutant 749 in q.js: exception replaced with exception.message
Mutant 750 in q.js: exception replaced with exception.toString()
Mutant 751 in q.js: exception replaced with exception.stack
Mutant 752 in q.js: _progressed replaced with _rejected
Mutant 753 in q.js: _progressed replaced with _fulfilled
Mutant 754 in q.js: value replaced with null
Mutant 755 in q.js: value replaced with undefined
Mutant 756 in q.js: value replaced with value + 1
Mutant 757 in q.js: Q.onerror replaced with Q.onerror(new Error("test error"))
Mutant 758 in q.js: Q.onerror replaced with Q.onerror(null)
Mutant 759 in q.js: Q.onerror replaced with Q.onerror(undefined)
Mutant 760 in q.js: e replaced with e.message
Mutant 761 in q.js: e replaced with e.toString()
Mutant 762 in q.js: e replaced with e.stack
Mutant 763 in q.js: !threw replaced with threw
Mutant 764 in q.js: !threw replaced with threw && !threw
Mutant 765 in q.js: newValue replaced with null
Mutant 766 in q.js: newValue replaced with undefined
Mutant 767 in q.js: newValue replaced with 0
Mutant 768 in q.js: callback replaced with callback()
Mutant 769 in q.js: callback replaced with callback.call(null)
Mutant 770 in q.js: callback replaced with callback.apply(null, [])
Mutant 771 in q.js: Q replaced with Q.fcall
Mutant 772 in q.js: Q replaced with Q.reject
Mutant 773 in q.js: Q replaced with Q.defer
Mutant 774 in q.js: callback replaced with callback.call(null)
Mutant 775 in q.js: callback replaced with callback.apply(null)
Mutant 776 in q.js: callback replaced with callback.bind(null)
Mutant 777 in q.js: value replaced with null
Mutant 778 in q.js: value replaced with undefined
Mutant 779 in q.js: value replaced with "hello"
Mutant 780 in q.js: value replaced with null
Mutant 781 in q.js: value replaced with undefined
Mutant 782 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 783 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, "extra argument")
Mutant 784 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, null)
Mutant 785 in q.js: Q replaced with Q.reject
Mutant 786 in q.js: Q replaced with Q.resolve
Mutant 787 in q.js: Q replaced with Q.defer
Mutant 788 in q.js: value replaced with undefined
Mutant 789 in q.js: value replaced with 0
Mutant 790 in q.js: fulfilled replaced with rejected
Mutant 791 in q.js: fulfilled replaced with undefined
Mutant 792 in q.js: fulfilled replaced with null
Mutant 793 in q.js: rejected replaced with fulfilled
Mutant 794 in q.js: rejected replaced with resolved
Mutant 795 in q.js: rejected replaced with then
Mutant 796 in q.js: progressed replaced with function () {}
Mutant 797 in q.js: progressed replaced with function (value) {
  return value + 1;
}
Mutant 798 in q.js: progressed replaced with function (value) {
  throw new Error("test");
}
Mutant 799 in q.js: function () {
  return value;
} replaced with function () {
  return undefined;
}
Mutant 800 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 801 in q.js: function () {
  return value;
} replaced with function () {
  return !value;
}
Mutant 802 in q.js: Q replaced with Q.reject
Mutant 803 in q.js: Q replaced with Q.resolve
Mutant 804 in q.js: Q replaced with Q.defer
Mutant 805 in q.js: promise replaced with null
Mutant 806 in q.js: promise replaced with undefined
Mutant 807 in q.js: promise replaced with 0
Mutant 808 in q.js: value replaced with null
Mutant 809 in q.js: value replaced with undefined
Mutant 810 in q.js: value replaced with "foo"
Mutant 811 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 812 in q.js: function () {
  throw reason;
} replaced with function () {
  return new Error(reason);
}
Mutant 813 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error("Rejection reason: " + reason);
}
Mutant 814 in q.js: promise replaced with Q.reject(reason)
Mutant 815 in q.js: promise replaced with Q.resolve(reason)
Mutant 816 in q.js: promise replaced with Q.defer()
Mutant 817 in q.js: reason replaced with null
Mutant 818 in q.js: reason replaced with undefined
Mutant 819 in q.js: reason replaced with 0
Mutant 820 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 821 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 822 in q.js: isPromise(value) replaced with isPending(value)
Mutant 823 in q.js: isPromise replaced with isFulfilled
Mutant 824 in q.js: value replaced with value + 1
Mutant 825 in q.js: value replaced with value * 2
Mutant 826 in q.js: value replaced with value - 1
Mutant 827 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 828 in q.js: inspected.state === "fulfilled" replaced with inspected.value === undefined
Mutant 829 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 830 in q.js: isObject replaced with isArray
Mutant 831 in q.js: isObject replaced with isFunction
Mutant 832 in q.js: isObject replaced with isString
Mutant 833 in q.js: object replaced with object.then
Mutant 834 in q.js: object replaced with object.then()
Mutant 835 in q.js: object replaced with object.then(function () {})
Mutant 836 in q.js: isPromise replaced with !isPromise
Mutant 837 in q.js: isPromise replaced with isPromiseAlike
Mutant 838 in q.js: isPromise replaced with isPending
Mutant 839 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 840 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 841 in q.js: object replaced with object.inspect().state === "pending"
Mutant 842 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 843 in q.js: isPromise replaced with !isPromise
Mutant 844 in q.js: isPromise replaced with isPromiseAlike
Mutant 845 in q.js: isPromise replaced with isPending
Mutant 846 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 847 in q.js: object replaced with object.inspect().state === "pending"
Mutant 848 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 849 in q.js: this.inspect replaced with this.inspect.state
Mutant 850 in q.js: this.inspect replaced with this.inspect.value
Mutant 851 in q.js: this.inspect replaced with this.inspect.reason
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
not replacing this.inspect with this.inspect.reason
Mutant 852 in q.js: isPromise replaced with isPromiseAlike
Mutant 853 in q.js: isPromise replaced with isFulfilled
Mutant 854 in q.js: isPromise replaced with isRejected
Mutant 855 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 856 in q.js: object replaced with object.state === "rejected"
Mutant 857 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 858 in q.js: object.inspect replaced with object.inspect.state
not replacing object.inspect with object.inspect.state
Mutant 859 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 860 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections.valueOf()
Mutant 861 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections.toString()
Mutant 862 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 863 in q.js: !trackUnhandledRejections replaced with unhandledRejections.length === 0
Mutant 864 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 865 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) > -1
Mutant 866 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.some(function (p) {
  return p === promise;
})
Mutant 867 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reason)
Mutant 868 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 869 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, promise)
Mutant 870 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 871 in q.js: array_indexOf replaced with array_includes
Mutant 872 in q.js: array_indexOf replaced with array_findIndex
Mutant 873 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 874 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 875 in q.js: unhandledRejections replaced with trackUnhandledRejections
Mutant 876 in q.js: promise replaced with promise.then(function () {
  throw new Error("test");
})
Mutant 877 in q.js: promise replaced with promise.then(function () {
  return Q.reject("test");
})
Mutant 878 in q.js: promise replaced with promise.then(function () {
  return Q.fulfill("test");
})
Mutant 879 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 880 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledFulfillment", reason, promise)
Mutant 881 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "foo"
Mutant 882 in q.js: "unhandledRejection" replaced with "unhandledRejection" + 1
Mutant 883 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "bar"
Mutant 884 in q.js: reason replaced with reason.stack
Mutant 885 in q.js: reason replaced with reason.message
Mutant 886 in q.js: reason replaced with reason.name
Mutant 887 in q.js: promise replaced with promise.then(function () {
  throw new Error("test");
})
Mutant 888 in q.js: promise replaced with promise.then(function () {
  return Q.reject("test");
})
Mutant 889 in q.js: promise replaced with promise.then(function () {
  return Q.reject(new Error("test"));
})
Mutant 890 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 891 in q.js: unhandledRejections.push replaced with unhandledRejections.shift
Mutant 892 in q.js: unhandledRejections.push replaced with unhandledRejections.unshift
Mutant 893 in q.js: promise replaced with null
Mutant 894 in q.js: promise replaced with undefined
Mutant 895 in q.js: promise replaced with 0
Mutant 896 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack === "undefined"
Mutant 897 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack !== "string"
Mutant 898 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack !== "object"
Mutant 899 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 900 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 901 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 902 in q.js: reason.stack replaced with reason.message
Mutant 903 in q.js: reason.stack replaced with reason.name
Mutant 904 in q.js: reason.stack replaced with reason.toString()
Mutant 905 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 906 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 907 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 908 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 909 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 910 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 911 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 912 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections != true
Mutant 913 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections.valueOf()
Mutant 914 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length)
Mutant 915 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections[0])
Mutant 916 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.pop())
Mutant 917 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 918 in q.js: array_indexOf replaced with array_findIndex
Mutant 919 in q.js: array_indexOf replaced with array_includes
Mutant 920 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 921 in q.js: unhandledRejections replaced with unhandledRejections.concat()
Mutant 922 in q.js: unhandledRejections replaced with unhandledRejections.splice()
Mutant 923 in q.js: promise replaced with promise.then(function () {})
Mutant 924 in q.js: promise replaced with promise.catch(function () {})
Mutant 925 in q.js: promise replaced with promise.finally(function () {})
Mutant 926 in q.js: at !== -1 replaced with at !== -1 && unhandledReasons[at] === reason
Mutant 927 in q.js: at !== -1 replaced with at !== -1 && unhandledRejections[at] === promise
Mutant 928 in q.js: at !== -1 replaced with at !== -1 && unhandledReasons[at] === reason && unhandledRejections[at] === promise
Mutant 929 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length)
Mutant 930 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections[0])
Mutant 931 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.indexOf(promise) !== -1)
Mutant 932 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 933 in q.js: array_indexOf replaced with array_includes
Mutant 934 in q.js: array_indexOf replaced with array_findIndex
Mutant 935 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 936 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 937 in q.js: reportedUnhandledRejections replaced with unhandledReasons
Mutant 938 in q.js: atReport !== -1 replaced with atReport === -1
Mutant 939 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 940 in q.js: atReport !== -1 replaced with atReport < -1
Mutant 941 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 942 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at])
Mutant 943 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at])
Mutant 944 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 945 in q.js: "rejectionHandled" replaced with "rejection"
Mutant 946 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 947 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 948 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] = "new reason"
Mutant 949 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 2)
Mutant 950 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 951 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, -1)
Mutant 952 in q.js: atReport replaced with atReport + 1
Mutant 953 in q.js: atReport replaced with atReport - 1
Mutant 954 in q.js: atReport replaced with atReport.length
Mutant 955 in q.js: 1 replaced with -1
Mutant 956 in q.js: 1 replaced with 0
Mutant 957 in q.js: 1 replaced with 10
Mutant 958 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 959 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 960 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 961 in q.js: at replaced with at + 1
Mutant 962 in q.js: at replaced with at - 1
Mutant 963 in q.js: at replaced with at + 2
Mutant 964 in q.js: 1 replaced with 0
Mutant 965 in q.js: 1 replaced with -1
Mutant 966 in q.js: 1 replaced with 2
Mutant 967 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 968 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 969 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 970 in q.js: at replaced with at + 1
Mutant 971 in q.js: at replaced with at - 1
Mutant 972 in q.js: at replaced with at + 2
Mutant 973 in q.js: 1 replaced with -1
Mutant 974 in q.js: 1 replaced with 0
Mutant 975 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 976 in q.js: resetUnhandledRejections replaced with trackUnhandledRejections = false
Mutant 977 in q.js: rejected replaced with !rejected
Mutant 978 in q.js: rejected replaced with rejected && false
Mutant 979 in q.js: rejected replaced with rejected || true
Mutant 980 in q.js: this replaced with null
Mutant 981 in q.js: this replaced with undefined
Mutant 982 in q.js: this replaced with 0
Mutant 983 in q.js: reason replaced with reason + 1
Mutant 984 in q.js: reason replaced with reason * 2
Mutant 985 in q.js: reason replaced with reason.toString()
Mutant 986 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, 1)
Mutant 987 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, null)
Mutant 988 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, undefined)
Mutant 989 in q.js: trackRejection replaced with untrackRejection
Mutant 990 in q.js: rejection replaced with undefined
Mutant 991 in q.js: rejection replaced with null
Mutant 992 in q.js: rejection replaced with true
Mutant 993 in q.js: reason replaced with null
Mutant 994 in q.js: reason replaced with undefined
Mutant 995 in q.js: reason replaced with "some other reason"
Mutant 996 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 997 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 998 in q.js: name === null || name === void 0 replaced with name === null
Mutant 999 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 1000 in q.js: value.apply(void 0, args) replaced with value.apply(undefined, args)
Mutant 1001 in q.js: value.apply replaced with value.call
Mutant 1002 in q.js: value.apply replaced with value.bind
Mutant 1003 in q.js: void 0 replaced with null
Mutant 1004 in q.js: void 0 replaced with undefined
Mutant 1005 in q.js: void 0 replaced with 0
Mutant 1006 in q.js: args replaced with args[0]
Mutant 1007 in q.js: args replaced with args.slice(1)
Mutant 1008 in q.js: args replaced with args.concat(args[0])
Mutant 1009 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice(1))
Mutant 1010 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, [args])
Mutant 1011 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.concat(value))
Mutant 1012 in q.js: value[name].apply replaced with value[name].call
Mutant 1013 in q.js: value[name].apply replaced with value[name].bind
Mutant 1014 in q.js: value[name].apply replaced with value[name].toString
Mutant 1015 in q.js: value replaced with null
Mutant 1016 in q.js: value replaced with undefined
Mutant 1017 in q.js: value replaced with this
Mutant 1018 in q.js: args replaced with args.slice()
Mutant 1019 in q.js: args replaced with args.concat()
Mutant 1020 in q.js: args replaced with args.map(function (x) {
  return x * 2;
})
Mutant 1021 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.slice())
Mutant 1022 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.concat())
Mutant 1023 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, [args])
Mutant 1024 in q.js: value.apply replaced with value.call
Mutant 1025 in q.js: value.apply replaced with value.bind
Mutant 1026 in q.js: value.apply replaced with value.toString
Mutant 1027 in q.js: thisp replaced with null
Mutant 1028 in q.js: thisp replaced with undefined
Mutant 1029 in q.js: thisp replaced with this
Mutant 1030 in q.js: args replaced with args.slice()
Mutant 1031 in q.js: args replaced with args.concat()
Mutant 1032 in q.js: args replaced with args.map(function (x) {
  return x;
})
Mutant 1033 in q.js: object_keys replaced with object_values
Mutant 1034 in q.js: object_keys replaced with Object.values
Mutant 1035 in q.js: object_keys replaced with Object.keys
Mutant 1036 in q.js: value replaced with null
Mutant 1037 in q.js: value replaced with undefined
Mutant 1038 in q.js: value replaced with {}
Mutant 1039 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject)
Mutant 1040 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify)
Mutant 1041 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(reason))
Mutant 1042 in q.js: promise.then replaced with promise.catch
Mutant 1043 in q.js: promise.then replaced with promise.finally
Mutant 1044 in q.js: promise.then replaced with promise.all
Mutant 1045 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1046 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1047 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1048 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1049 in q.js: deferred.reject replaced with deferred.notify
Mutant 1050 in q.js: deferred.reject replaced with deferred.promise
Mutant 1051 in q.js: deferred.notify replaced with deferred.reject
Mutant 1052 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1053 in q.js: deferred.notify replaced with deferred.progress
Mutant 1054 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1055 in q.js: deferred.reject replaced with deferred.notify
Mutant 1056 in q.js: deferred.reject replaced with deferred.cancel
Mutant 1057 in q.js: exception replaced with null
Mutant 1058 in q.js: exception replaced with undefined
Mutant 1059 in q.js: exception replaced with "error"
Mutant 1060 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[0])
Mutant 1061 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.length)
Mutant 1062 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.slice(1))
Mutant 1063 in q.js: object replaced with null
Mutant 1064 in q.js: object replaced with undefined
Mutant 1065 in q.js: object replaced with {}
Mutant 1066 in q.js: op replaced with op + 1
Mutant 1067 in q.js: op replaced with op - 1
Mutant 1068 in q.js: op replaced with op * 2
Mutant 1069 in q.js: args replaced with args[0]
Mutant 1070 in q.js: args replaced with args[1]
Mutant 1071 in q.js: args replaced with args.slice(1)
Mutant 1072 in q.js: Q replaced with Q.reject
Mutant 1073 in q.js: Q replaced with Q.resolve
Mutant 1074 in q.js: Q replaced with Q.defer
Mutant 1075 in q.js: object replaced with null
Mutant 1076 in q.js: object replaced with undefined
Mutant 1077 in q.js: object replaced with {}
Mutant 1078 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1079 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, fulfilled)
Mutant 1080 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(undefined, rejected)
Mutant 1081 in q.js: Q replaced with Q.reject
Mutant 1082 in q.js: Q replaced with Q.resolve
Mutant 1083 in q.js: Q replaced with Q.defer
Mutant 1084 in q.js: value replaced with null
Mutant 1085 in q.js: value replaced with 0
Mutant 1086 in q.js: fulfilled replaced with rejected
Mutant 1087 in q.js: fulfilled replaced with undefined
Mutant 1088 in q.js: fulfilled replaced with null
Mutant 1089 in q.js: rejected replaced with fulfilled
Mutant 1090 in q.js: rejected replaced with undefined
Mutant 1091 in q.js: rejected replaced with null
Mutant 1092 in q.js: this.all replaced with this.any
Mutant 1093 in q.js: this.all replaced with this.race
Mutant 1094 in q.js: this.all replaced with this.none
not replacing this.all with this.any
not replacing this.all with this.any
not replacing this.all with this.race
not replacing this.all with this.race
not replacing this.all with this.none
not replacing this.all with this.none
Mutant 1095 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1096 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 1097 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(this)
Mutant 1098 in q.js: fulfilled.apply replaced with fulfilled.reject
Mutant 1099 in q.js: void 0 replaced with null
Mutant 1100 in q.js: void 0 replaced with undefined
Mutant 1101 in q.js: void 0 replaced with 0
Mutant 1102 in q.js: array replaced with array[0]
Mutant 1103 in q.js: array replaced with array.slice(1)
Mutant 1104 in q.js: array replaced with array.concat(1)
Mutant 1105 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === "undefined"
Mutant 1106 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1107 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === undefined
Mutant 1108 in q.js: arg replaced with null
Mutant 1109 in q.js: arg replaced with undefined
Mutant 1110 in q.js: arg replaced with "foo"
Mutant 1111 in q.js: reject replaced with resolve
Mutant 1112 in q.js: exception replaced with exception.message
Mutant 1113 in q.js: exception replaced with exception.stack
Mutant 1114 in q.js: exception replaced with exception.name
Mutant 1115 in q.js: result.done replaced with result.value
Mutant 1116 in q.js: result.done replaced with result.rejected
Mutant 1117 in q.js: result.done replaced with result.pending
Mutant 1118 in q.js: result.value replaced with result.value.then()
Mutant 1119 in q.js: result.value replaced with result.value.catch()
Mutant 1120 in q.js: result.value replaced with result.value.resolve()
Mutant 1121 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1122 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, callback)
Mutant 1123 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, errback)
Mutant 1124 in q.js: result.value replaced with result.value + 1
Mutant 1125 in q.js: result.value replaced with result.value * 2
Mutant 1126 in q.js: result.value replaced with result.value - 1
Mutant 1127 in q.js: callback replaced with reject
Mutant 1128 in q.js: callback replaced with Q.reject
Mutant 1129 in q.js: errback replaced with reject
Mutant 1130 in q.js: errback replaced with resolve
Mutant 1131 in q.js: arg replaced with arg + 1
Mutant 1132 in q.js: arg replaced with arg * 2
Mutant 1133 in q.js: arg replaced with arg - 1
Mutant 1134 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 1135 in q.js: isStopIteration(exception) replaced with exception instanceof StopIteration
Mutant 1136 in q.js: isStopIteration(exception) replaced with exception.constructor === StopIteration
Mutant 1137 in q.js: exception replaced with exception.value
Mutant 1138 in q.js: exception replaced with exception.message
Mutant 1139 in q.js: exception.value replaced with exception
Mutant 1140 in q.js: exception.value replaced with null
Mutant 1141 in q.js: exception.value replaced with undefined
Mutant 1142 in q.js: reject replaced with resolve
Mutant 1143 in q.js: reject replaced with deferred.reject
Mutant 1144 in q.js: exception replaced with exception.message
Mutant 1145 in q.js: exception replaced with exception.stack
Mutant 1146 in q.js: exception replaced with exception.name
Mutant 1147 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 1148 in q.js: when(result, callback, errback) replaced with when(result, callback, errback.bind(null, result))
Mutant 1149 in q.js: when(result, callback, errback) replaced with when(result, callback, errback.bind(null, result.value))
Mutant 1150 in q.js: when replaced with Q.reject
Mutant 1151 in q.js: when replaced with Q.resolve
Mutant 1152 in q.js: when replaced with Q.defer
Mutant 1153 in q.js: result replaced with null
Mutant 1154 in q.js: result replaced with undefined
Mutant 1155 in q.js: result replaced with Q.reject(new Error("Something went wrong"))
Mutant 1156 in q.js: callback replaced with errback
Mutant 1157 in q.js: callback replaced with reject
Mutant 1158 in q.js: callback replaced with resolve
Mutant 1159 in q.js: errback replaced with reject
Mutant 1160 in q.js: errback replaced with resolve
Mutant 1161 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1162 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1163 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1164 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1165 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1166 in q.js: this replaced with null
Mutant 1167 in q.js: this replaced with undefined
Mutant 1168 in q.js: this replaced with {}
Mutant 1169 in q.js: arguments replaced with null
Mutant 1170 in q.js: arguments replaced with undefined
Mutant 1171 in q.js: arguments replaced with {}
Mutant 1172 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(null))
Mutant 1173 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(undefined))
Mutant 1174 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(Math.random()))
Mutant 1175 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1176 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1177 in q.js: continuer replaced with continuer.bind(undefined, "throw")
Mutant 1178 in q.js: "next" replaced with "throw"
Mutant 1179 in q.js: "next" replaced with "return"
Mutant 1180 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(null, "throw"))
Mutant 1181 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1182 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(generator, "throw"))
Mutant 1183 in q.js: continuer.bind replaced with continuer.apply
Mutant 1184 in q.js: continuer.bind replaced with continuer.call
Mutant 1185 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1186 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1187 in q.js: continuer replaced with continuer.bind(continuer, "return")
Mutant 1188 in q.js: "throw" replaced with "send"
Mutant 1189 in q.js: "throw" replaced with "next"
Mutant 1190 in q.js: "throw" replaced with "reject"
Mutant 1191 in q.js: callback replaced with errback
Mutant 1192 in q.js: callback replaced with reject
Mutant 1193 in q.js: Q.done replaced with Q.fail
Mutant 1194 in q.js: Q.done replaced with Q.reject
Mutant 1195 in q.js: Q.done replaced with Q.resolve
Mutant 1196 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1197 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 1198 in q.js: makeGenerator replaced with makeGenerator.apply(this)
Mutant 1199 in q.js: all replaced with any
Mutant 1200 in q.js: all replaced with none
Mutant 1201 in q.js: all replaced with some
Mutant 1202 in q.js: arguments replaced with "foo"
Mutant 1203 in q.js: arguments replaced with 123
Mutant 1204 in q.js: arguments replaced with null
Mutant 1205 in q.js: callback.apply(self, args) replaced with callback.apply(self, args[0])
Mutant 1206 in q.js: callback.apply(self, args) replaced with callback.apply(self, args.slice(1))
Mutant 1207 in q.js: callback.apply(self, args) replaced with callback.apply(self, args.concat(self))
Mutant 1208 in q.js: callback.apply replaced with callback.call
Mutant 1209 in q.js: callback.apply replaced with callback.bind
Mutant 1210 in q.js: self replaced with null
Mutant 1211 in q.js: self replaced with undefined
Mutant 1212 in q.js: self replaced with this
Mutant 1213 in q.js: args replaced with args.slice(1)
Mutant 1214 in q.js: args replaced with args.concat(1)
Mutant 1215 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 1216 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op + args)
Mutant 1217 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.length)
Mutant 1218 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice(1))
Mutant 1219 in q.js: Q replaced with Q.reject
Mutant 1220 in q.js: Q replaced with Q.resolve
Mutant 1221 in q.js: Q replaced with Q.defer
Mutant 1222 in q.js: object replaced with null
Mutant 1223 in q.js: object replaced with undefined
Mutant 1224 in q.js: object replaced with {}
Mutant 1225 in q.js: op replaced with op + 1
Mutant 1226 in q.js: op replaced with op - 1
Mutant 1227 in q.js: op replaced with op * 2
Mutant 1228 in q.js: args replaced with null
Mutant 1229 in q.js: args replaced with undefined
Mutant 1230 in q.js: args replaced with []
Mutant 1231 in q.js: defer replaced with deferred.reject
Mutant 1232 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1233 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, "foo", args)
Mutant 1234 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.slice(1))
Mutant 1235 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1236 in q.js: self.promiseDispatch replaced with deferred.resolve
Mutant 1237 in q.js: self.promiseDispatch replaced with deferred.notify
Mutant 1238 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1239 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1240 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1241 in q.js: op replaced with op + 1
Mutant 1242 in q.js: op replaced with op * 2
Mutant 1243 in q.js: op replaced with op - 1
Mutant 1244 in q.js: args replaced with null
Mutant 1245 in q.js: args replaced with []
Mutant 1246 in q.js: args replaced with [1, 2, 3]
Mutant 1247 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key])
Mutant 1248 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key])
Mutant 1249 in q.js: Q replaced with Q.reject
Mutant 1250 in q.js: object replaced with null
Mutant 1251 in q.js: object replaced with undefined
Mutant 1252 in q.js: object replaced with {}
Mutant 1253 in q.js: "get" replaced with "set"
Mutant 1254 in q.js: "get" replaced with "post"
Mutant 1255 in q.js: [key] replaced with [key + 1]
Mutant 1256 in q.js: [key] replaced with [key - 1]
Mutant 1257 in q.js: [key] replaced with [key * 2]
Mutant 1258 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1259 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key])
Mutant 1260 in q.js: "get" replaced with "set"
Mutant 1261 in q.js: "get" replaced with "post"
Mutant 1262 in q.js: [key] replaced with [key + 1]
Mutant 1263 in q.js: [key] replaced with ["key"]
Mutant 1264 in q.js: [key] replaced with [undefined]
Mutant 1265 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value + 1])
Mutant 1266 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key + 1, value])
Mutant 1267 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value * 2])
Mutant 1268 in q.js: Q replaced with Q.reject
Mutant 1269 in q.js: Q replaced with Q.defer
Mutant 1270 in q.js: Q replaced with Q.all
Mutant 1271 in q.js: object replaced with null
Mutant 1272 in q.js: object replaced with undefined
Mutant 1273 in q.js: object replaced with {}
Mutant 1274 in q.js: "set" replaced with "get"
Mutant 1275 in q.js: "set" replaced with "post"
Mutant 1276 in q.js: [key, value] replaced with [key, value, 1]
Mutant 1277 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1278 in q.js: [key, value] replaced with [key + 1, value]
Mutant 1279 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1280 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1281 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value * 2])
Mutant 1282 in q.js: "set" replaced with "setValue"
Mutant 1283 in q.js: "set" replaced with "get"
Mutant 1284 in q.js: "set" replaced with "setProperty"
Mutant 1285 in q.js: [key, value] replaced with [key, value, 1]
Mutant 1286 in q.js: [key, value] replaced with [key, value, undefined]
Mutant 1287 in q.js: [key, value] replaced with [key, value, null]
Mutant 1288 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1289 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1290 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, ""])
Mutant 1291 in q.js: Q replaced with Q.reject
Mutant 1292 in q.js: Q replaced with Q.resolve
Mutant 1293 in q.js: Q replaced with Q.all
Mutant 1294 in q.js: object replaced with {}
Mutant 1295 in q.js: "delete" replaced with "set"
Mutant 1296 in q.js: "delete" replaced with "get"
Mutant 1297 in q.js: "delete" replaced with "post"
Mutant 1298 in q.js: [key] replaced with [key, value]
Mutant 1299 in q.js: [key] replaced with [key, undefined]
Mutant 1300 in q.js: [key] replaced with [key, null]
Mutant 1301 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1302 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, null])
Mutant 1303 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, ""])
Mutant 1304 in q.js: "delete" replaced with "del"
Mutant 1305 in q.js: "delete" replaced with "remove"
Mutant 1306 in q.js: [key] replaced with [key, value]
Mutant 1307 in q.js: [key] replaced with [key, "value"]
Mutant 1308 in q.js: [key] replaced with [key, null]
Mutant 1309 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1310 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.reverse()])
Mutant 1311 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.slice(1)])
Mutant 1312 in q.js: Q replaced with Q.reject
Mutant 1313 in q.js: Q replaced with Q.resolve
Mutant 1314 in q.js: Q replaced with Q.defer
Mutant 1315 in q.js: object replaced with null
Mutant 1316 in q.js: object replaced with undefined
Mutant 1317 in q.js: object replaced with 42
Mutant 1318 in q.js: "post" replaced with "get"
Mutant 1319 in q.js: "post" replaced with "set"
Mutant 1320 in q.js: [name, args] replaced with [name, args[0]]
Mutant 1321 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1322 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("put", [name, args])
Mutant 1323 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args, 1])
Mutant 1324 in q.js: "post" replaced with "put"
Mutant 1325 in q.js: "post" replaced with "patch"
Mutant 1326 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1327 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1328 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1329 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1330 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1331 in q.js: Q replaced with Q.reject
Mutant 1332 in q.js: Q replaced with Q.resolve
Mutant 1333 in q.js: Q replaced with Q.defer
Mutant 1334 in q.js: object replaced with null
Mutant 1335 in q.js: object replaced with undefined
Mutant 1336 in q.js: object replaced with {}
Mutant 1337 in q.js: "post" replaced with "put"
Mutant 1338 in q.js: "post" replaced with "patch"
Mutant 1339 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1340 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1341 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 2, 1)]
Mutant 1342 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1343 in q.js: arguments replaced with array_slice(promises, 1)
Mutant 1344 in q.js: arguments replaced with array_slice(deferred.promise, 1)
Mutant 1345 in q.js: 2 replaced with 0
Mutant 1346 in q.js: 2 replaced with -1
Mutant 1347 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1348 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1349 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 0, 1)])
Mutant 1350 in q.js: "post" replaced with "put"
Mutant 1351 in q.js: "post" replaced with "patch"
Mutant 1352 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1353 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, 2)]
Mutant 1354 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, -1)]
Mutant 1355 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 1356 in q.js: array_slice(arguments, 1) replaced with array_slice(void 0)
Mutant 1357 in q.js: arguments replaced with null
Mutant 1358 in q.js: arguments replaced with undefined
Mutant 1359 in q.js: arguments replaced with []
Mutant 1360 in q.js: 1 replaced with 1 + 1
Mutant 1361 in q.js: 1 replaced with "hello"
Mutant 1362 in q.js: 1 replaced with undefined
Mutant 1363 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1364 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, [args]])
Mutant 1365 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, args.slice()])
Mutant 1366 in q.js: Q replaced with Q.reject
Mutant 1367 in q.js: object replaced with null
Mutant 1368 in q.js: object replaced with undefined
Mutant 1369 in q.js: object replaced with function () {}
Mutant 1370 in q.js: "apply" replaced with "call"
Mutant 1371 in q.js: "apply" replaced with "bind"
Mutant 1372 in q.js: "apply" replaced with "concat"
Mutant 1373 in q.js: [void 0, args] replaced with [void 0, args, 1]
Mutant 1374 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1375 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [this, args])
Mutant 1376 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, args.slice()])
Mutant 1377 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, args.concat()])
Mutant 1378 in q.js: "apply" replaced with "call"
Mutant 1379 in q.js: "apply" replaced with "bind"
Mutant 1380 in q.js: "apply" replaced with "concat"
Mutant 1381 in q.js: [void 0, args] replaced with [void 0, args, 1]
Mutant 1382 in q.js: [void 0, args] replaced with [void 0, args, "foo"]
Mutant 1383 in q.js: [void 0, args] replaced with [void 0, args, function () {
  return "bar";
}]
Mutant 1384 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1385 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)])
Mutant 1386 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)])
Mutant 1387 in q.js: Q replaced with Q.reject
Mutant 1388 in q.js: Q replaced with Q.resolve
Mutant 1389 in q.js: Q replaced with Q.defer
Mutant 1390 in q.js: object replaced with null
Mutant 1391 in q.js: object replaced with undefined
Mutant 1392 in q.js: object replaced with {}
Mutant 1393 in q.js: "apply" replaced with "call"
Mutant 1394 in q.js: "apply" replaced with "bind"
Mutant 1395 in q.js: "apply" replaced with "post"
Mutant 1396 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1397 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 0, 1)]
Mutant 1398 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, 2)]
Mutant 1399 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1400 in q.js: array_slice(arguments, 1) replaced with array_slice([], 1)
Mutant 1401 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1402 in q.js: 1 replaced with 1 + 1
Mutant 1403 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("call", [void 0, array_slice(arguments)])
Mutant 1404 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1405 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1406 in q.js: "apply" replaced with "call"
Mutant 1407 in q.js: "apply" replaced with "bind"
Mutant 1408 in q.js: "apply" replaced with "eval"
Mutant 1409 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1410 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1411 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 3)]
Mutant 1412 in q.js: object replaced with null
Mutant 1413 in q.js: object replaced with undefined
Mutant 1414 in q.js: object replaced with {}
Mutant 1415 in q.js: array_slice(arguments, 1) replaced with array_slice(args.concat(array_slice(arguments, 1)))
Mutant 1416 in q.js: array_slice(arguments, 1) replaced with array_slice(args.concat(array_slice(arguments, 2)))
Mutant 1417 in q.js: array_slice(arguments, 1) replaced with array_slice(args.concat(array_slice(arguments, 3)))
Mutant 1418 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1419 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1420 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1421 in q.js: 1 replaced with 0
Mutant 1422 in q.js: 1 replaced with -1
Mutant 1423 in q.js: 1 replaced with arguments.length - 1
Mutant 1424 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1425 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1426 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, -1)
Mutant 1427 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1428 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1429 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1430 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1431 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1432 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1433 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1434 in q.js: arguments replaced with null
Mutant 1435 in q.js: arguments replaced with undefined
Mutant 1436 in q.js: arguments replaced with []
Mutant 1437 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1438 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1])
Mutant 1439 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["foo"])
Mutant 1440 in q.js: Q replaced with Q.reject
Mutant 1441 in q.js: Q replaced with Q.resolve
Mutant 1442 in q.js: Q replaced with Q.defer
Mutant 1443 in q.js: object replaced with object.foo
Mutant 1444 in q.js: object replaced with object[bar]
Mutant 1445 in q.js: object replaced with object.baz
Mutant 1446 in q.js: "keys" replaced with "values"
Mutant 1447 in q.js: "keys" replaced with "length"
Mutant 1448 in q.js: "keys" replaced with "filter"
Mutant 1449 in q.js: [] replaced with [1]
Mutant 1450 in q.js: [] replaced with null
Mutant 1451 in q.js: [] replaced with undefined
Mutant 1452 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1453 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", [])
Mutant 1454 in q.js: this.dispatch("keys", []) replaced with this.dispatch("slice", [1])
Mutant 1455 in q.js: "keys" replaced with "values"
Mutant 1456 in q.js: "keys" replaced with "length"
Mutant 1457 in q.js: "keys" replaced with "toString"
Mutant 1458 in q.js: [] replaced with [1]
Mutant 1459 in q.js: [] replaced with [undefined]
Mutant 1460 in q.js: [] replaced with [null]
Mutant 1461 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1462 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with !isPromise(promise)
Mutant 1463 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1464 in q.js: promise replaced with promise.then(function () {
  return null;
})
Mutant 1465 in q.js: promise replaced with promise.catch(function () {
  return null;
})
Mutant 1466 in q.js: promise replaced with promise.finally(function () {
  return null;
})
Mutant 1467 in q.js: --pendingCount === 0 replaced with pendingCount > 0
Mutant 1468 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1469 in q.js: --pendingCount === 0 replaced with promises.length === 0
Mutant 1470 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1471 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1472 in q.js: promises replaced with promises.slice(1)
Mutant 1473 in q.js: promises replaced with promises.concat([])
Mutant 1474 in q.js: promises replaced with promises.filter(Boolean)
Mutant 1475 in q.js: deferred.notify replaced with deferred.reject
Mutant 1476 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1477 in q.js: deferred.notify replaced with deferred.progress
Mutant 1478 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress + 1
}
Mutant 1479 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress - 1
}
Mutant 1480 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress * 2
}
Mutant 1481 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1482 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1483 in q.js: pendingCount === 0 replaced with pendingCount !== 0
Mutant 1484 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1485 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1486 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1487 in q.js: promises replaced with []
Mutant 1488 in q.js: promises replaced with null
Mutant 1489 in q.js: promises replaced with undefined
Mutant 1490 in q.js: all replaced with any
Mutant 1491 in q.js: all replaced with none
Mutant 1492 in q.js: all replaced with allSettled
Mutant 1493 in q.js: this replaced with this.then(function (promises) {
  return all(array_map(promises, function (promise) {
    promise = Q(promise);
    function regardless() {
      return promise.inspect();
    }
  }));
})
Mutant 1494 in q.js: promises.length === 0 replaced with promises[0] === 0
Mutant 1495 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1496 in q.js: promises.length === 0 replaced with promises.length === promises.length
Mutant 1497 in q.js: Q.resolve replaced with Q.reject
Mutant 1498 in q.js: Q.resolve replaced with Q.defer
Mutant 1499 in q.js: Q.resolve replaced with Q.all
Mutant 1500 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onRejected, onFulfilled, onProgress)
Mutant 1501 in q.js: when replaced with when.reject
Mutant 1502 in q.js: when replaced with when.resolve
Mutant 1503 in q.js: when replaced with when.then
Mutant 1504 in q.js: promise replaced with promise.then(onFulfilled, onRejected)
Mutant 1505 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected)
Mutant 1506 in q.js: onFulfilled replaced with onRejected
Mutant 1507 in q.js: onFulfilled replaced with noop
Mutant 1508 in q.js: onFulfilled replaced with function () {
  throw new Error("test");
}
Mutant 1509 in q.js: onRejected replaced with onFulfilled
Mutant 1510 in q.js: onRejected replaced with onProgress
Mutant 1511 in q.js: onProgress replaced with onRejected
Mutant 1512 in q.js: onProgress replaced with onFulfilled
Mutant 1513 in q.js: onProgress replaced with noop
Mutant 1514 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1515 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1516 in q.js: deferred.resolve replaced with deferred.then
Mutant 1517 in q.js: result replaced with promise
Mutant 1518 in q.js: result replaced with index
Mutant 1519 in q.js: result replaced with progress
Mutant 1520 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1521 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1522 in q.js: pendingCount === 0 replaced with pendingCount !== 0
Mutant 1523 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1524 in q.js: deferred.reject replaced with deferred.notify
Mutant 1525 in q.js: deferred.reject replaced with deferred.inspect
Mutant 1526 in q.js: rejection replaced with null
Mutant 1527 in q.js: rejection replaced with undefined
Mutant 1528 in q.js: rejection replaced with new Error("Different error message")
Mutant 1529 in q.js: any replaced with all
Mutant 1530 in q.js: any replaced with none
Mutant 1531 in q.js: any replaced with some
Mutant 1532 in q.js: this replaced with null
Mutant 1533 in q.js: this replaced with undefined
Mutant 1534 in q.js: this replaced with Promise.reject()
Mutant 1535 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allSettled", "allResolved")
Mutant 1536 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allSettled", "allSettled")
Mutant 1537 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allSettled", "allRejected")
Mutant 1538 in q.js: deprecate replaced with Q.deprecate
Mutant 1539 in q.js: deprecate replaced with Promise.deprecate
Mutant 1540 in q.js: allResolved replaced with any
Mutant 1541 in q.js: allResolved replaced with allSettled
Mutant 1542 in q.js: "allResolved" replaced with "allSettled"
Mutant 1543 in q.js: "allResolved" replaced with "any"
Mutant 1544 in q.js: "allResolved" replaced with "all"
Mutant 1545 in q.js: "allSettled" replaced with "allFulfilled"
Mutant 1546 in q.js: "allSettled" replaced with "anyRejected"
Mutant 1547 in q.js: "allSettled" replaced with "noneSettled"
Mutant 1548 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1549 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve)
Mutant 1550 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.defer)
Mutant 1551 in q.js: array_map replaced with array_filter
Mutant 1552 in q.js: array_map replaced with array_reduce
Mutant 1553 in q.js: array_map replaced with array_concat
Mutant 1554 in q.js: promises replaced with promises.slice(0, promises.length - 1)
Mutant 1555 in q.js: promises replaced with promises.concat(["dummy promise"])
Mutant 1556 in q.js: promises replaced with promises.reverse()
Mutant 1557 in q.js: Q replaced with Q.reject
Mutant 1558 in q.js: Q replaced with Q.resolve
Mutant 1559 in q.js: Q replaced with Q.defer
Mutant 1560 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1561 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop))
Mutant 1562 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop).then(noop, noop))
Mutant 1563 in q.js: promise replaced with promise.then(function () {
  throw new Error("Buggy code");
})
Mutant 1564 in q.js: promise replaced with promise.then(function () {
  return Q.reject("Buggy code");
})
Mutant 1565 in q.js: promise replaced with promise.then(function () {
  return Q.resolve("Buggy code");
})
Mutant 1566 in q.js: noop replaced with null
Mutant 1567 in q.js: noop replaced with undefined
Mutant 1568 in q.js: noop replaced with false
Mutant 1569 in q.js: allResolved replaced with allSettled
Mutant 1570 in q.js: allResolved replaced with any
Mutant 1571 in q.js: this replaced with null
Mutant 1572 in q.js: this replaced with undefined
Mutant 1573 in q.js: this replaced with {}
Mutant 1574 in q.js: promises replaced with promises.reverse()
Mutant 1575 in q.js: promises replaced with promises.slice(1)
Mutant 1576 in q.js: promises replaced with promises.concat(promises)
Mutant 1577 in q.js: promise.inspect replaced with promise.inspect.rejected
Mutant 1578 in q.js: promise.inspect replaced with promise.inspect.value
Mutant 1579 in q.js: promise.then(regardless, regardless) replaced with promise.then(noop, noop)
Mutant 1580 in q.js: regardless replaced with rejected
Mutant 1581 in q.js: regardless replaced with noop
Mutant 1582 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1583 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(undefined, rejected)
Mutant 1584 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, null)
Mutant 1585 in q.js: object replaced with Q.reject("error message")
Mutant 1586 in q.js: void 0 replaced with null
Mutant 1587 in q.js: void 0 replaced with undefined
Mutant 1588 in q.js: void 0 replaced with () => {}
Mutant 1589 in q.js: rejected replaced with resolved
Mutant 1590 in q.js: rejected replaced with rejected("new error message")
Mutant 1591 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1592 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1593 in q.js: this.then(void 0, rejected) replaced with this.then(rejected, null)
Mutant 1594 in q.js: void 0 replaced with null
Mutant 1595 in q.js: void 0 replaced with undefined
Mutant 1596 in q.js: void 0 replaced with function () {}
Mutant 1597 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1598 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(undefined, undefined, progressed)
Mutant 1599 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, void 0, progressed.bind(this))
Mutant 1600 in q.js: object replaced with "foo"
Mutant 1601 in q.js: void 0 replaced with null
Mutant 1602 in q.js: void 0 replaced with undefined
Mutant 1603 in q.js: void 0 replaced with function () {}
Mutant 1604 in q.js: void 0 replaced with null
Mutant 1605 in q.js: void 0 replaced with undefined
Mutant 1606 in q.js: void 0 replaced with 0
Mutant 1607 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1608 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1609 in q.js: void 0 replaced with null
Mutant 1610 in q.js: void 0 replaced with undefined
Mutant 1611 in q.js: void 0 replaced with () => {}
Mutant 1612 in q.js: void 0 replaced with null
Mutant 1613 in q.js: void 0 replaced with undefined
Mutant 1614 in q.js: void 0 replaced with NaN
Mutant 1615 in q.js: Q replaced with Q.reject
Mutant 1616 in q.js: Q replaced with Q.resolve
Mutant 1617 in q.js: Q replaced with Q.defer
Mutant 1618 in q.js: object replaced with null
Mutant 1619 in q.js: object replaced with undefined
Mutant 1620 in q.js: object replaced with "foo"
Mutant 1621 in q.js: callback replaced with callback.bind(null)
Mutant 1622 in q.js: callback replaced with callback.apply(null)
Mutant 1623 in q.js: callback replaced with callback.call(null)
Mutant 1624 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply !== "function"
Mutant 1625 in q.js: !callback || typeof callback.apply !== "function" replaced with callback !== "function"
Mutant 1626 in q.js: !callback || typeof callback.apply !== "function" replaced with typeof callback !== "function"
Mutant 1627 in q.js: Q replaced with Q.reject
Mutant 1628 in q.js: Q replaced with Q.resolve
Mutant 1629 in q.js: Q replaced with Q.defer
Mutant 1630 in q.js: callback replaced with callback.fcall()
Mutant 1631 in q.js: callback replaced with callback.apply()
Mutant 1632 in q.js: callback replaced with callback.bind()
Mutant 1633 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress.bind(null))
Mutant 1634 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, function () {})
Mutant 1635 in q.js: object replaced with undefined
Mutant 1636 in q.js: object replaced with "hello"
Mutant 1637 in q.js: fulfilled replaced with rejected
Mutant 1638 in q.js: fulfilled replaced with progressed
Mutant 1639 in q.js: fulfilled replaced with null
Mutant 1640 in q.js: rejected replaced with fulfilled
Mutant 1641 in q.js: rejected replaced with progressed
Mutant 1642 in q.js: progress replaced with null
Mutant 1643 in q.js: progress replaced with undefined
Mutant 1644 in q.js: progress replaced with function () {}
Mutant 1645 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.then())
Mutant 1646 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.catch())
Mutant 1647 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.finally())
Mutant 1648 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(rejected, fulfilled, progress)
Mutant 1649 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, progress, "extra argument")
Mutant 1650 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, progress, null)
Mutant 1651 in q.js: fulfilled replaced with rejected
Mutant 1652 in q.js: fulfilled replaced with undefined
Mutant 1653 in q.js: fulfilled replaced with null
Mutant 1654 in q.js: progress replaced with null
Mutant 1655 in q.js: progress replaced with undefined
Mutant 1656 in q.js: progress replaced with () => {}
Mutant 1657 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1658 in q.js: onUnhandledError replaced with onUnhandledError.bind(undefined)
Mutant 1659 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, void 0)
Mutant 1660 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1661 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1662 in q.js: void 0 replaced with null
Mutant 1663 in q.js: void 0 replaced with true
Mutant 1664 in q.js: void 0 replaced with 0
Mutant 1665 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1666 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1667 in q.js: onUnhandledError replaced with function () {
  onUnhandledError();
}
Mutant 1668 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, new Error("Timeout"))
Mutant 1669 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, "Timeout")
Mutant 1670 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, null)
Mutant 1671 in q.js: object replaced with undefined
Mutant 1672 in q.js: object replaced with Q.reject("error")
Mutant 1673 in q.js: ms replaced with 0
Mutant 1674 in q.js: ms replaced with -1
Mutant 1675 in q.js: ms replaced with null
Mutant 1676 in q.js: error replaced with null
Mutant 1677 in q.js: error replaced with new Error()
Mutant 1678 in q.js: error replaced with undefined
Mutant 1679 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1680 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1681 in q.js: !error || "string" === typeof error replaced with error || "string" === typeof error
Mutant 1682 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1683 in q.js: deferred.reject replaced with Q.reject
Mutant 1684 in q.js: error replaced with null
Mutant 1685 in q.js: error replaced with "error"
Mutant 1686 in q.js: error replaced with new Error("different error")
Mutant 1687 in q.js: clearTimeout replaced with clearInterval
Mutant 1688 in q.js: timeoutId replaced with null
Mutant 1689 in q.js: timeoutId replaced with undefined
Mutant 1690 in q.js: timeoutId replaced with 0
Mutant 1691 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1692 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1693 in q.js: value replaced with null
Mutant 1694 in q.js: value replaced with undefined
Mutant 1695 in q.js: clearTimeout replaced with clearInterval
Mutant 1696 in q.js: timeoutId replaced with null
Mutant 1697 in q.js: timeoutId replaced with undefined
Mutant 1698 in q.js: timeoutId replaced with 0
Mutant 1699 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1700 in q.js: deferred.reject replaced with undefined
Mutant 1701 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1702 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1703 in q.js: timeout === void 0 replaced with timeout === 0
Mutant 1704 in q.js: Q replaced with Q.reject
Mutant 1705 in q.js: object replaced with null
Mutant 1706 in q.js: object replaced with undefined
Mutant 1707 in q.js: object replaced with {}
Mutant 1708 in q.js: timeout replaced with 0
Mutant 1709 in q.js: timeout replaced with -1
Mutant 1710 in q.js: timeout replaced with null
Mutant 1711 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1712 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1713 in q.js: value replaced with null
Mutant 1714 in q.js: value replaced with undefined
Mutant 1715 in q.js: value replaced with 0
Mutant 1716 in q.js: Q replaced with Q.reject
Mutant 1717 in q.js: Q replaced with Q.resolve
Mutant 1718 in q.js: Q replaced with Q.defer
Mutant 1719 in q.js: callback replaced with null
Mutant 1720 in q.js: callback replaced with undefined
Mutant 1721 in q.js: callback replaced with () => {}
Mutant 1722 in q.js: args replaced with null
Mutant 1723 in q.js: args replaced with undefined
Mutant 1724 in q.js: args replaced with []
Mutant 1725 in q.js: array_slice replaced with array_slice.length
Mutant 1726 in q.js: args replaced with null
Mutant 1727 in q.js: args replaced with undefined
Mutant 1728 in q.js: args replaced with "foo"
Mutant 1729 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1730 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1731 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1732 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(true)
Mutant 1733 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(false)
Mutant 1734 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1735 in q.js: this.fapply replaced with this.fcall
Mutant 1736 in q.js: this.fapply replaced with this.nfapply
Mutant 1737 in q.js: this.fapply replaced with this.nfcall
not replacing this.fapply with this.fcall
not replacing this.fapply with this.fcall
not replacing this.fapply with this.nfapply
not replacing this.fapply with this.nfapply
not replacing this.fapply with this.nfcall
not replacing this.fapply with this.nfcall
Mutant 1738 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1739 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1740 in q.js: nodeArgs replaced with nodeArgs.shift()
Mutant 1741 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1742 in q.js: deferred.reject replaced with deferred.notify
Mutant 1743 in q.js: deferred.reject replaced with deferred.reject("error")
Mutant 1744 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1745 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1746 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 1747 in q.js: arguments replaced with null
Mutant 1748 in q.js: arguments replaced with undefined
Mutant 1749 in q.js: arguments replaced with []
Mutant 1750 in q.js: 1 replaced with 0
Mutant 1751 in q.js: 1 replaced with 2
Mutant 1752 in q.js: 1 replaced with -1
Mutant 1753 in q.js: callback replaced with null
Mutant 1754 in q.js: callback replaced with undefined
Mutant 1755 in q.js: callback replaced with function () {}
Mutant 1756 in q.js: args replaced with null
Mutant 1757 in q.js: args replaced with []
Mutant 1758 in q.js: args replaced with [1, 2, 3]
Mutant 1759 in q.js: arguments replaced with null
Mutant 1760 in q.js: arguments replaced with undefined
Mutant 1761 in q.js: arguments replaced with []
Mutant 1762 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1763 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1764 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1765 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1766 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1767 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1768 in q.js: nodeArgs replaced with nodeArgs.slice(0)
Mutant 1769 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1770 in q.js: nodeArgs replaced with nodeArgs.splice(0)
Mutant 1771 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1772 in q.js: deferred.reject replaced with deferred.notify
Mutant 1773 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1774 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1775 in q.js: callback === undefined replaced with callback === null
Mutant 1776 in q.js: callback === undefined replaced with callback !== null
Mutant 1777 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1778 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1779 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1780 in q.js: arguments replaced with null
Mutant 1781 in q.js: arguments replaced with undefined
Mutant 1782 in q.js: arguments replaced with []
Mutant 1783 in q.js: 1 replaced with 0
Mutant 1784 in q.js: 1 replaced with 2
Mutant 1785 in q.js: 1 replaced with -1
Mutant 1786 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1787 in q.js: baseArgs.concat replaced with baseArgs.splice
Mutant 1788 in q.js: baseArgs.concat replaced with baseArgs.unshift
Mutant 1789 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1790 in q.js: array_slice(arguments) replaced with array_slice(arguments, -1)
Mutant 1791 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1792 in q.js: arguments replaced with null
Mutant 1793 in q.js: arguments replaced with undefined
Mutant 1794 in q.js: arguments replaced with []
Mutant 1795 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1796 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1797 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1798 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1799 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1800 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1801 in q.js: Q replaced with Q.fapply
Mutant 1802 in q.js: Q replaced with Q.nfapply
Mutant 1803 in q.js: Q replaced with Q.denodeify
Mutant 1804 in q.js: callback replaced with undefined
Mutant 1805 in q.js: callback replaced with null
Mutant 1806 in q.js: callback replaced with function () {}
Mutant 1807 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1808 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1809 in q.js: nodeArgs replaced with nodeArgs.shift()
Mutant 1810 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1811 in q.js: deferred.reject replaced with undefined
Mutant 1812 in q.js: deferred.reject replaced with null
Mutant 1813 in q.js: arguments replaced with null
Mutant 1814 in q.js: arguments replaced with undefined
Mutant 1815 in q.js: arguments replaced with []
Mutant 1816 in q.js: args.unshift replaced with args.shift
Mutant 1817 in q.js: args.unshift replaced with args.pop
Mutant 1818 in q.js: args.unshift replaced with args.push
Mutant 1819 in q.js: this replaced with null
Mutant 1820 in q.js: this replaced with undefined
Mutant 1821 in q.js: this replaced with {}
Mutant 1822 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null, args)
Mutant 1823 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined, args)
Mutant 1824 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this, args)
Mutant 1825 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1826 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1827 in q.js: void 0 replaced with null
Mutant 1828 in q.js: void 0 replaced with undefined
Mutant 1829 in q.js: void 0 replaced with this
Mutant 1830 in q.js: args replaced with args.slice(1)
Mutant 1831 in q.js: args replaced with args.concat([])
Mutant 1832 in q.js: args replaced with args.reverse()
Mutant 1833 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1834 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments), 2)
Mutant 1835 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 1), 2)
Mutant 1836 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1837 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1838 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1839 in q.js: 2 replaced with 1
Mutant 1840 in q.js: 2 replaced with 3
Mutant 1841 in q.js: 2 replaced with 0
Mutant 1842 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1843 in q.js: baseArgs.concat replaced with baseArgs.shift
Mutant 1844 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1845 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1846 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1847 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1848 in q.js: array_slice replaced with array_slice.length
Mutant 1849 in q.js: arguments replaced with null
Mutant 1850 in q.js: arguments replaced with undefined
Mutant 1851 in q.js: arguments replaced with []
Mutant 1852 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1853 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1854 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1855 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1856 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1857 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (error) {})
Mutant 1858 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[0])
Mutant 1859 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[1])
Mutant 1860 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments.length)
Mutant 1861 in q.js: thisp replaced with null
Mutant 1862 in q.js: thisp replaced with undefined
Mutant 1863 in q.js: thisp replaced with {}
Mutant 1864 in q.js: arguments replaced with null
Mutant 1865 in q.js: arguments replaced with undefined
Mutant 1866 in q.js: arguments replaced with []
Mutant 1867 in q.js: Q replaced with deferred
Mutant 1868 in q.js: Q replaced with this
Mutant 1869 in q.js: Q replaced with null
Mutant 1870 in q.js: bound replaced with null
Mutant 1871 in q.js: bound replaced with undefined
Mutant 1872 in q.js: bound replaced with function () {}
Mutant 1873 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1874 in q.js: nodeArgs replaced with nodeArgs.concat(null)
Mutant 1875 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1876 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1877 in q.js: deferred.reject replaced with deferred.notify
Mutant 1878 in q.js: deferred.reject replaced with undefined
Mutant 1879 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1880 in q.js: array_slice(arguments, 0) replaced with array_slice(args, 0)
Mutant 1881 in q.js: array_slice(arguments, 0) replaced with array_slice(baseArgs, 0)
Mutant 1882 in q.js: arguments replaced with null
Mutant 1883 in q.js: arguments replaced with undefined
Mutant 1884 in q.js: arguments replaced with []
Mutant 1885 in q.js: 0 replaced with 1
Mutant 1886 in q.js: 0 replaced with "hello"
Mutant 1887 in q.js: 0 replaced with null
Mutant 1888 in q.js: args.unshift replaced with args.push
Mutant 1889 in q.js: args.unshift replaced with args.shift
Mutant 1890 in q.js: args.unshift replaced with args.pop
Mutant 1891 in q.js: this replaced with null
Mutant 1892 in q.js: this replaced with undefined
Mutant 1893 in q.js: this replaced with 0
Mutant 1894 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1895 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1896 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args)
Mutant 1897 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1898 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1899 in q.js: Q.nbind.apply replaced with Q.nbind.apply.bind
Mutant 1900 in q.js: void 0 replaced with null
Mutant 1901 in q.js: void 0 replaced with undefined
Mutant 1902 in q.js: void 0 replaced with this
Mutant 1903 in q.js: args replaced with args.slice(1)
Mutant 1904 in q.js: args replaced with args.concat(["new argument"])
Mutant 1905 in q.js: args replaced with args.filter(function (arg) {
  return arg !== "new argument";
})
Mutant 1906 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1907 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat(args))
Mutant 1908 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.reverse())
Mutant 1909 in q.js: object replaced with null
Mutant 1910 in q.js: object replaced with undefined
Mutant 1911 in q.js: object replaced with {}
Mutant 1912 in q.js: name replaced with name + "foo"
Mutant 1913 in q.js: name replaced with name.toUpperCase()
Mutant 1914 in q.js: name replaced with name.length
Mutant 1915 in q.js: args replaced with args.slice(1)
Mutant 1916 in q.js: args replaced with args.concat([1])
Mutant 1917 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 1918 in q.js: args || [] replaced with null
Mutant 1919 in q.js: args || [] replaced with undefined
Mutant 1920 in q.js: args || [] replaced with []
Mutant 1921 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1922 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1923 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1924 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1925 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1926 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1927 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1928 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, "extraArg"])
Mutant 1929 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs.reverse()])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, "extraArg"])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs.reverse()])
Mutant 1930 in q.js: "post" replaced with "get"
Mutant 1931 in q.js: "post" replaced with "put"
Mutant 1932 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1933 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 1934 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1935 in q.js: deferred.reject replaced with deferred.notify
Mutant 1936 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1937 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1938 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1939 in q.js: array_slice(arguments, 2) replaced with array_slice(nodeArgs)
Mutant 1940 in q.js: arguments replaced with null
Mutant 1941 in q.js: arguments replaced with undefined
Mutant 1942 in q.js: arguments replaced with []
Mutant 1943 in q.js: 2 replaced with 1
Mutant 1944 in q.js: 2 replaced with 3
Mutant 1945 in q.js: 2 replaced with 0
Mutant 1946 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1947 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1948 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1949 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1950 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1951 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1952 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1953 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1954 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1955 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, null])
Mutant 1956 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, function () {}])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, null])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, function () {}])
Mutant 1957 in q.js: Q replaced with this
Mutant 1958 in q.js: Q replaced with undefined
Mutant 1959 in q.js: object replaced with undefined
Mutant 1960 in q.js: "post" replaced with "pre"
Mutant 1961 in q.js: "post" replaced with "send"
Mutant 1962 in q.js: "post" replaced with "dispatch"
Mutant 1963 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1964 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(0, -1)]
Mutant 1965 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1966 in q.js: deferred.reject replaced with deferred.notify
Mutant 1967 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1968 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1969 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1970 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 1971 in q.js: arguments replaced with null
Mutant 1972 in q.js: arguments replaced with undefined
Mutant 1973 in q.js: arguments replaced with []
Mutant 1974 in q.js: 1 replaced with 0
Mutant 1975 in q.js: 1 replaced with 2
Mutant 1976 in q.js: 1 replaced with nodeArgs.length - 1
Mutant 1977 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1978 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1979 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1980 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1981 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1982 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1983 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("send", [name, nodeArgs])
Mutant 1984 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [nodeArgs, name])
Mutant 1985 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("send", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [nodeArgs, name])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
Mutant 1986 in q.js: "post" replaced with "get"
Mutant 1987 in q.js: "post" replaced with "put"
Mutant 1988 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, deferred.makeNodeResolver()]
Mutant 1989 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, deferred.reject]
Mutant 1990 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, deferred.resolve]
Mutant 1991 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1992 in q.js: deferred.reject replaced with null
Mutant 1993 in q.js: deferred.reject replaced with deferred.reject("custom error message")
Mutant 1994 in q.js: Q replaced with Q.reject
Mutant 1995 in q.js: Q replaced with Q.resolve
Mutant 1996 in q.js: Q replaced with Q.defer
Mutant 1997 in q.js: object replaced with null
Mutant 1998 in q.js: object replaced with undefined
Mutant 1999 in q.js: object replaced with {}
Mutant 2000 in q.js: nodeback replaced with !nodeback
Mutant 2001 in q.js: nodeback replaced with nodeback + 1
Mutant 2002 in q.js: nodeback replaced with nodeback.call(null)
Mutant 2003 in q.js: nodeback replaced with !nodeback
Mutant 2004 in q.js: nodeback replaced with nodeback + 1
Mutant 2005 in q.js: nodeback replaced with nodeback.call()
Mutant 2006 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 2007 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 2008 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 2009 in q.js: null replaced with undefined
Mutant 2010 in q.js: null replaced with 0
Mutant 2011 in q.js: null replaced with {}
Mutant 2012 in q.js: value replaced with undefined
Mutant 2013 in q.js: value replaced with null
Mutant 2014 in q.js: value replaced with function () {}
Mutant 2015 in q.js: error replaced with undefined
Mutant 2016 in q.js: error replaced with new Error("Different error message")
Mutant 2017 in q.js: error replaced with null
Mutant 2018 in q.js: captureLine replaced with captureLine + 1
Mutant 2019 in q.js: captureLine replaced with captureLine - 1
Mutant 2020 in q.js: captureLine replaced with captureLine * 2
Mutant 2021 in queue.js: "head" replaced with "tail"
Mutant 2022 in queue.js: "head" replaced with "head.tail"
Mutant 2023 in queue.js: "head" replaced with "head.tail.head"
Mutant 2024 in queue.js: ends.promise.get replaced with ends.promise.then
Mutant 2025 in queue.js: ends.promise.get replaced with ends.promise.catch
Mutant 2026 in queue.js: ends.promise.get replaced with ends.promise.finally
Mutant 2027 in queue.js: "tail" replaced with "head"
Mutant 2028 in queue.js: "tail" replaced with "tail" + "head"
Mutant 2029 in queue.js: "tail" replaced with "tail" - "head"
Mutant 2030 in queue.js: closed.resolve replaced with closed.reject
Mutant 2031 in queue.js: error replaced with null
Mutant 2032 in queue.js: error replaced with undefined
Mutant 2033 in queue.js: error replaced with Q.reject(error)
Mutant 2034 in queue.js: Q.reject replaced with Q.resolve
Mutant 2035 in queue.js: error replaced with null
Mutant 2036 in queue.js: error replaced with undefined
Mutant 2037 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 2038 in queue.js: ends.resolve replaced with ends.reject
Mutant 2039 in queue.js: ends.resolve replaced with closed.resolve
Mutant 2040 in queue.js: ends.resolve replaced with next.reject
[32m11:05:16 (3160) INFO Instrumenter[39m Instrumented 2 source file(s) with 2041 mutant(s)
[32m11:05:16 (3160) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m11:05:18 (3160) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m11:05:18 (3160) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m11:05:25 (3160) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6838 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 53m) 3/2041 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 49m) 4/2041 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 49m) 6/2041 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 13m) 7/2041 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 8m) 9/2041 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 23m) 10/2041 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 35m) 11/2041 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 28m) 13/2041 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 37m) 14/2041 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 7m) 18/2041 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 5m) 20/2041 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 12m) 21/2041 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 10m) 23/2041 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 16m) 24/2041 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 13m) 26/2041 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 18m) 27/2041 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 16m) 29/2041 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 21m) 30/2041 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 18m) 32/2041 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 22m) 33/2041 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 20m) 35/2041 tested (30 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 24m) 36/2041 tested (31 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 22m) 38/2041 tested (33 survived, 0 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 25m) 39/2041 tested (34 survived, 0 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 13m) 43/2041 tested (35 survived, 0 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 21m) 43/2041 tested (35 survived, 0 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 24m) 44/2041 tested (35 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 26m) 45/2041 tested (35 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 34m) 45/2041 tested (35 survived, 2 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 36m) 46/2041 tested (35 survived, 3 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 39m) 47/2041 tested (35 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 46m) 47/2041 tested (35 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 48m) 48/2041 tested (35 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 50m) 49/2041 tested (35 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 52m) 50/2041 tested (36 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 54m) 51/2041 tested (37 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 46m) 54/2041 tested (37 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 44m) 56/2041 tested (38 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 46m) 57/2041 tested (39 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 47m) 58/2041 tested (39 survived, 8 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 45m) 60/2041 tested (40 survived, 8 timed out)
Mutation testing 2% (elapsed: ~7m, remaining: ~3h 47m) 61/2041 tested (41 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 48m) 62/2041 tested (42 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 50m) 63/2041 tested (42 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 51m) 64/2041 tested (43 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 45m) 67/2041 tested (43 survived, 10 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 40m) 70/2041 tested (44 survived, 10 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 38m) 72/2041 tested (45 survived, 10 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 40m) 73/2041 tested (46 survived, 10 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 38m) 75/2041 tested (48 survived, 10 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 39m) 76/2041 tested (49 survived, 10 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 38m) 78/2041 tested (51 survived, 10 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 39m) 79/2041 tested (52 survived, 10 timed out)
Mutation testing 3% (elapsed: ~9m, remaining: ~3h 37m) 81/2041 tested (54 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 38m) 82/2041 tested (55 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 37m) 84/2041 tested (57 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 38m) 85/2041 tested (58 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 37m) 87/2041 tested (60 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 38m) 88/2041 tested (61 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 36m) 90/2041 tested (63 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 37m) 91/2041 tested (64 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 36m) 93/2041 tested (66 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 37m) 94/2041 tested (67 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 40m) 94/2041 tested (67 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 39m) 96/2041 tested (68 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 42m) 96/2041 tested (68 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 43m) 97/2041 tested (68 survived, 12 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 42m) 99/2041 tested (70 survived, 12 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 43m) 100/2041 tested (71 survived, 12 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 44m) 101/2041 tested (71 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 44m) 102/2041 tested (72 survived, 13 timed out)
Mutation testing 4% (elapsed: ~12m, remaining: ~3h 48m) 102/2041 tested (72 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 42m) 106/2041 tested (72 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 40m) 108/2041 tested (74 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 41m) 109/2041 tested (75 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 40m) 111/2041 tested (77 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 41m) 112/2041 tested (78 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 39m) 114/2041 tested (80 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 40m) 115/2041 tested (81 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 39m) 117/2041 tested (83 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 40m) 118/2041 tested (84 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 38m) 120/2041 tested (86 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 39m) 121/2041 tested (87 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 38m) 123/2041 tested (89 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 39m) 124/2041 tested (90 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 37m) 126/2041 tested (92 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 38m) 127/2041 tested (93 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 37m) 129/2041 tested (95 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 38m) 130/2041 tested (96 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 36m) 132/2041 tested (98 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 37m) 133/2041 tested (99 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 38m) 134/2041 tested (100 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 37m) 136/2041 tested (102 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 37m) 137/2041 tested (103 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 36m) 139/2041 tested (105 survived, 14 timed out)
Mutation testing 6% (elapsed: ~16m, remaining: ~3h 37m) 140/2041 tested (106 survived, 14 timed out)
Mutation testing 6% (elapsed: ~16m, remaining: ~3h 36m) 142/2041 tested (108 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 36m) 143/2041 tested (109 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 35m) 145/2041 tested (111 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 36m) 146/2041 tested (112 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 35m) 148/2041 tested (114 survived, 14 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 35m) 149/2041 tested (115 survived, 14 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 34m) 151/2041 tested (117 survived, 14 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 30m) 155/2041 tested (118 survived, 14 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 31m) 156/2041 tested (119 survived, 14 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 29m) 159/2041 tested (121 survived, 14 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 28m) 161/2041 tested (121 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 26m) 164/2041 tested (121 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 171/2041 tested (121 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 19m) 172/2041 tested (122 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 174/2041 tested (124 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 19m) 175/2041 tested (125 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 18m) 177/2041 tested (127 survived, 15 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 18m) 178/2041 tested (128 survived, 15 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 18m) 180/2041 tested (130 survived, 15 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 18m) 181/2041 tested (131 survived, 15 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 17m) 183/2041 tested (133 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 18m) 184/2041 tested (134 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 17m) 186/2041 tested (136 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 187/2041 tested (137 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 17m) 189/2041 tested (139 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 18m) 190/2041 tested (140 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 17m) 192/2041 tested (142 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 17m) 193/2041 tested (143 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 17m) 195/2041 tested (145 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 196/2041 tested (146 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 18m) 197/2041 tested (147 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 199/2041 tested (149 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 200/2041 tested (150 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 202/2041 tested (152 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 17m) 203/2041 tested (153 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 205/2041 tested (155 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 206/2041 tested (156 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 16m) 208/2041 tested (158 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 17m) 209/2041 tested (159 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 16m) 211/2041 tested (161 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 16m) 212/2041 tested (162 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 214/2041 tested (164 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 215/2041 tested (165 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 217/2041 tested (167 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 218/2041 tested (168 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 15m) 220/2041 tested (170 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 221/2041 tested (171 survived, 15 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 15m) 223/2041 tested (173 survived, 15 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 16m) 224/2041 tested (174 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 16m) 225/2041 tested (175 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 15m) 227/2041 tested (177 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 16m) 228/2041 tested (178 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 15m) 230/2041 tested (180 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 15m) 231/2041 tested (181 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 234/2041 tested (183 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 235/2041 tested (184 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 237/2041 tested (186 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 238/2041 tested (187 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 13m) 240/2041 tested (189 survived, 15 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 14m) 241/2041 tested (190 survived, 15 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 13m) 243/2041 tested (192 survived, 15 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 13m) 244/2041 tested (193 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 14m) 245/2041 tested (194 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 13m) 247/2041 tested (196 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 14m) 248/2041 tested (197 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 11m) 252/2041 tested (198 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 11m) 254/2041 tested (198 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 11m) 255/2041 tested (198 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 11m) 256/2041 tested (199 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 11m) 258/2041 tested (201 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 11m) 259/2041 tested (202 survived, 15 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 10m) 261/2041 tested (204 survived, 15 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 10m) 263/2041 tested (205 survived, 15 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 9m) 265/2041 tested (207 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 10m) 266/2041 tested (208 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 9m) 268/2041 tested (210 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 9m) 269/2041 tested (211 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 271/2041 tested (213 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 272/2041 tested (214 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 274/2041 tested (216 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 275/2041 tested (217 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 8m) 277/2041 tested (219 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 278/2041 tested (220 survived, 15 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 280/2041 tested (222 survived, 15 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 281/2041 tested (223 survived, 15 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 9m) 282/2041 tested (224 survived, 15 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 284/2041 tested (226 survived, 15 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 285/2041 tested (227 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 8m) 287/2041 tested (229 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 8m) 288/2041 tested (230 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 8m) 290/2041 tested (232 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 8m) 291/2041 tested (233 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 293/2041 tested (235 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 8m) 294/2041 tested (236 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 296/2041 tested (238 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 297/2041 tested (239 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 299/2041 tested (241 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 300/2041 tested (242 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 302/2041 tested (244 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 303/2041 tested (245 survived, 15 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 305/2041 tested (247 survived, 15 timed out)
Mutation testing 14% (elapsed: ~33m, remaining: ~3h 7m) 306/2041 tested (248 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 308/2041 tested (250 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 309/2041 tested (251 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 311/2041 tested (253 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 312/2041 tested (254 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 313/2041 tested (255 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 6m) 315/2041 tested (257 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 6m) 316/2041 tested (258 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 6m) 318/2041 tested (260 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 6m) 319/2041 tested (261 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 321/2041 tested (263 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 322/2041 tested (264 survived, 15 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 5m) 324/2041 tested (266 survived, 15 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 5m) 325/2041 tested (267 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 5m) 327/2041 tested (269 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 5m) 328/2041 tested (270 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 330/2041 tested (272 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 5m) 331/2041 tested (273 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 333/2041 tested (275 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 334/2041 tested (276 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 336/2041 tested (278 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 337/2041 tested (279 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 339/2041 tested (281 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 340/2041 tested (282 survived, 15 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 342/2041 tested (284 survived, 15 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 343/2041 tested (285 survived, 15 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 345/2041 tested (287 survived, 15 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 346/2041 tested (288 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 3m) 347/2041 tested (289 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 3m) 349/2041 tested (291 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 3m) 350/2041 tested (292 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 3m) 352/2041 tested (294 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 3m) 353/2041 tested (295 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 2m) 355/2041 tested (297 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 359/2041 tested (298 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 360/2041 tested (299 survived, 15 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 0m) 362/2041 tested (301 survived, 15 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 1m) 363/2041 tested (302 survived, 15 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 0m) 365/2041 tested (304 survived, 15 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 0m) 366/2041 tested (305 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~3h 0m) 368/2041 tested (307 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~3h 0m) 369/2041 tested (308 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 59m) 372/2041 tested (310 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 58m) 375/2041 tested (311 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 58m) 376/2041 tested (312 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 58m) 378/2041 tested (314 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 58m) 379/2041 tested (315 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 57m) 381/2041 tested (317 survived, 15 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 58m) 382/2041 tested (318 survived, 15 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 57m) 384/2041 tested (320 survived, 15 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 57m) 385/2041 tested (321 survived, 15 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 57m) 387/2041 tested (323 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 57m) 388/2041 tested (324 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 57m) 390/2041 tested (326 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 57m) 391/2041 tested (327 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 57m) 392/2041 tested (328 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 394/2041 tested (330 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 57m) 395/2041 tested (331 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 397/2041 tested (333 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 398/2041 tested (334 survived, 15 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 400/2041 tested (336 survived, 15 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 401/2041 tested (337 survived, 15 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 403/2041 tested (339 survived, 15 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 404/2041 tested (340 survived, 15 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 55m) 406/2041 tested (342 survived, 15 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 55m) 408/2041 tested (343 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 410/2041 tested (345 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 411/2041 tested (346 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 412/2041 tested (347 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 414/2041 tested (349 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 415/2041 tested (350 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 417/2041 tested (352 survived, 15 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 418/2041 tested (353 survived, 15 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 420/2041 tested (355 survived, 15 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 421/2041 tested (356 survived, 15 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 423/2041 tested (358 survived, 15 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 424/2041 tested (359 survived, 15 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 53m) 427/2041 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 52m) 430/2041 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 432/2041 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 52m) 433/2041 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 52m) 434/2041 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 436/2041 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 437/2041 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 52m) 437/2041 tested (361 survived, 15 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 52m) 438/2041 tested (361 survived, 16 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 52m) 439/2041 tested (361 survived, 17 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 53m) 439/2041 tested (361 survived, 17 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 53m) 440/2041 tested (361 survived, 18 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 52m) 443/2041 tested (361 survived, 19 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 50m) 449/2041 tested (361 survived, 19 timed out)
Mutation testing 21% (elapsed: ~48m, remaining: ~2h 50m) 449/2041 tested (361 survived, 19 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 49m) 453/2041 tested (361 survived, 20 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 453/2041 tested (361 survived, 20 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 49m) 456/2041 tested (361 survived, 21 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 48m) 458/2041 tested (363 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 48m) 459/2041 tested (364 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 48m) 461/2041 tested (366 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 48m) 462/2041 tested (367 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 48m) 464/2041 tested (369 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 48m) 465/2041 tested (370 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 48m) 466/2041 tested (370 survived, 22 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 48m) 468/2041 tested (371 survived, 22 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 48m) 469/2041 tested (372 survived, 22 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 47m) 471/2041 tested (374 survived, 22 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 47m) 472/2041 tested (375 survived, 22 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 47m) 474/2041 tested (377 survived, 22 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 47m) 475/2041 tested (378 survived, 22 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 477/2041 tested (380 survived, 22 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 478/2041 tested (381 survived, 22 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 46m) 480/2041 tested (383 survived, 22 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 47m) 481/2041 tested (384 survived, 22 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 46m) 483/2041 tested (386 survived, 22 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 46m) 484/2041 tested (387 survived, 22 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 46m) 486/2041 tested (389 survived, 22 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 46m) 487/2041 tested (390 survived, 22 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 46m) 488/2041 tested (391 survived, 22 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 46m) 490/2041 tested (393 survived, 22 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 46m) 491/2041 tested (394 survived, 22 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 45m) 493/2041 tested (396 survived, 22 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 494/2041 tested (397 survived, 22 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 496/2041 tested (399 survived, 22 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 497/2041 tested (400 survived, 22 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 499/2041 tested (402 survived, 22 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 499/2041 tested (402 survived, 22 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 44m) 503/2041 tested (402 survived, 23 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 503/2041 tested (402 survived, 23 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 44m) 505/2041 tested (403 survived, 24 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 44m) 506/2041 tested (404 survived, 24 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 44m) 507/2041 tested (405 survived, 24 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 44m) 509/2041 tested (405 survived, 25 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 43m) 512/2041 tested (405 survived, 25 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 512/2041 tested (405 survived, 25 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 513/2041 tested (405 survived, 26 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 43m) 515/2041 tested (405 survived, 27 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 515/2041 tested (405 survived, 27 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 516/2041 tested (405 survived, 28 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 44m) 517/2041 tested (405 survived, 29 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 517/2041 tested (405 survived, 29 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 518/2041 tested (405 survived, 30 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 519/2041 tested (405 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 520/2041 tested (406 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 522/2041 tested (408 survived, 31 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 523/2041 tested (409 survived, 31 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 525/2041 tested (411 survived, 31 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 526/2041 tested (412 survived, 31 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 527/2041 tested (413 survived, 31 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 529/2041 tested (415 survived, 31 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 43m) 531/2041 tested (415 survived, 31 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 44m) 532/2041 tested (415 survived, 32 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 44m) 532/2041 tested (415 survived, 32 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 44m) 533/2041 tested (415 survived, 32 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 43m) 536/2041 tested (415 survived, 32 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 44m) 536/2041 tested (415 survived, 32 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 44m) 537/2041 tested (415 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 44m) 538/2041 tested (415 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 539/2041 tested (415 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 540/2041 tested (415 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 542/2041 tested (417 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 543/2041 tested (418 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 43m) 545/2041 tested (420 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 43m) 546/2041 tested (421 survived, 33 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 43m) 548/2041 tested (423 survived, 33 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 43m) 549/2041 tested (424 survived, 33 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 43m) 551/2041 tested (426 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 43m) 552/2041 tested (427 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 42m) 554/2041 tested (429 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 42m) 555/2041 tested (430 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 42m) 557/2041 tested (432 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 42m) 558/2041 tested (433 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 42m) 559/2041 tested (434 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 42m) 561/2041 tested (436 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 42m) 562/2041 tested (437 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 564/2041 tested (439 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 41m) 565/2041 tested (440 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 41m) 567/2041 tested (442 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 41m) 568/2041 tested (443 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 41m) 570/2041 tested (445 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 41m) 571/2041 tested (446 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 40m) 573/2041 tested (448 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 41m) 574/2041 tested (449 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 576/2041 tested (451 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 577/2041 tested (452 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 579/2041 tested (454 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 580/2041 tested (455 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 582/2041 tested (457 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 40m) 583/2041 tested (458 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 585/2041 tested (460 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 586/2041 tested (461 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 588/2041 tested (463 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 589/2041 tested (464 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 591/2041 tested (466 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 39m) 592/2041 tested (467 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 594/2041 tested (469 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 595/2041 tested (470 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 596/2041 tested (471 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 598/2041 tested (473 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 599/2041 tested (474 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 601/2041 tested (476 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 602/2041 tested (477 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 604/2041 tested (479 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 605/2041 tested (480 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 607/2041 tested (482 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 608/2041 tested (483 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 37m) 610/2041 tested (485 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 37m) 611/2041 tested (486 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 613/2041 tested (488 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 614/2041 tested (489 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 616/2041 tested (491 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 617/2041 tested (492 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 619/2041 tested (494 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 620/2041 tested (495 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 622/2041 tested (497 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 623/2041 tested (498 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 625/2041 tested (500 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 626/2041 tested (501 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 628/2041 tested (503 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 629/2041 tested (504 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 34m) 631/2041 tested (506 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 34m) 632/2041 tested (507 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 34m) 633/2041 tested (508 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 34m) 635/2041 tested (510 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 34m) 636/2041 tested (511 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 34m) 638/2041 tested (513 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 34m) 639/2041 tested (514 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 33m) 641/2041 tested (516 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 33m) 642/2041 tested (517 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 33m) 644/2041 tested (519 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 32m) 648/2041 tested (520 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 32m) 648/2041 tested (520 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 32m) 649/2041 tested (520 survived, 34 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 33m) 650/2041 tested (521 survived, 34 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 33m) 651/2041 tested (521 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 33m) 652/2041 tested (522 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 33m) 653/2041 tested (522 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 33m) 653/2041 tested (522 survived, 36 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 33m) 654/2041 tested (522 survived, 37 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 33m) 655/2041 tested (522 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 33m) 655/2041 tested (522 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 33m) 656/2041 tested (522 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 33m) 657/2041 tested (522 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 657/2041 tested (522 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 658/2041 tested (522 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 659/2041 tested (522 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 660/2041 tested (523 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 33m) 662/2041 tested (525 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 663/2041 tested (526 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 665/2041 tested (528 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 666/2041 tested (529 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 668/2041 tested (531 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 669/2041 tested (532 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 670/2041 tested (533 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 32m) 672/2041 tested (535 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 32m) 673/2041 tested (536 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 32m) 675/2041 tested (538 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 32m) 677/2041 tested (539 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 32m) 677/2041 tested (539 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 32m) 678/2041 tested (539 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 32m) 679/2041 tested (539 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 32m) 679/2041 tested (539 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 32m) 681/2041 tested (540 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 32m) 682/2041 tested (541 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 32m) 684/2041 tested (543 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 32m) 685/2041 tested (544 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 31m) 687/2041 tested (546 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 31m) 688/2041 tested (546 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 31m) 690/2041 tested (548 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 30m) 693/2041 tested (549 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 31m) 693/2041 tested (549 survived, 45 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 31m) 694/2041 tested (549 survived, 46 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 31m) 695/2041 tested (549 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 31m) 695/2041 tested (549 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 31m) 696/2041 tested (549 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 31m) 697/2041 tested (549 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 31m) 697/2041 tested (549 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 31m) 698/2041 tested (549 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 32m) 698/2041 tested (549 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 31m) 699/2041 tested (549 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 31m) 700/2041 tested (549 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 31m) 701/2041 tested (549 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 31m) 702/2041 tested (549 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 31m) 703/2041 tested (549 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 31m) 704/2041 tested (549 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 31m) 705/2041 tested (549 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 31m) 706/2041 tested (550 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 31m) 708/2041 tested (551 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 31m) 709/2041 tested (551 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 31m) 710/2041 tested (551 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 31m) 711/2041 tested (551 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 31m) 711/2041 tested (551 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 31m) 712/2041 tested (551 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 31m) 713/2041 tested (551 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 32m) 713/2041 tested (551 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 32m) 714/2041 tested (551 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 32m) 715/2041 tested (551 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 32m) 715/2041 tested (551 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 32m) 716/2041 tested (551 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 32m) 717/2041 tested (551 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 32m) 718/2041 tested (552 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 32m) 719/2041 tested (552 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 720/2041 tested (552 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 720/2041 tested (552 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 721/2041 tested (552 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 722/2041 tested (552 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 723/2041 tested (552 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 724/2041 tested (552 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 32m) 726/2041 tested (553 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 32m) 727/2041 tested (554 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 31m) 729/2041 tested (556 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 31m) 730/2041 tested (557 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 32m) 730/2041 tested (557 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 31m) 732/2041 tested (557 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 32m) 732/2041 tested (557 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 31m) 733/2041 tested (557 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 31m) 734/2041 tested (557 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 32m) 734/2041 tested (557 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 32m) 735/2041 tested (557 survived, 60 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 32m) 736/2041 tested (557 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 32m) 736/2041 tested (557 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 32m) 737/2041 tested (557 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 32m) 738/2041 tested (557 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 32m) 738/2041 tested (557 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 32m) 739/2041 tested (557 survived, 64 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 32m) 739/2041 tested (557 survived, 64 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 740/2041 tested (557 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 741/2041 tested (557 survived, 66 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 742/2041 tested (558 survived, 66 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 743/2041 tested (558 survived, 67 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 33m) 743/2041 tested (558 survived, 67 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 33m) 744/2041 tested (558 survived, 68 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 745/2041 tested (558 survived, 69 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 745/2041 tested (558 survived, 69 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 746/2041 tested (558 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 747/2041 tested (558 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 747/2041 tested (558 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 33m) 748/2041 tested (558 survived, 72 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 33m) 749/2041 tested (558 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 33m) 749/2041 tested (558 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 33m) 750/2041 tested (558 survived, 74 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 34m) 750/2041 tested (558 survived, 74 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 34m) 751/2041 tested (558 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 29m, remaining: ~2h 33m) 752/2041 tested (558 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 33m) 754/2041 tested (560 survived, 76 timed out)
Mutation testing 36% (elapsed: ~1h 30m, remaining: ~2h 33m) 755/2041 tested (561 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 33m) 757/2041 tested (563 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 33m) 758/2041 tested (564 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 32m) 760/2041 tested (566 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 32m) 761/2041 tested (567 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 32m) 763/2041 tested (569 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 32m) 764/2041 tested (570 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 32m) 765/2041 tested (571 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 31m) 767/2041 tested (573 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 31m) 768/2041 tested (574 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 31m) 770/2041 tested (576 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 31m) 771/2041 tested (577 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 31m) 773/2041 tested (579 survived, 76 timed out)
Mutation testing 37% (elapsed: ~1h 32m, remaining: ~2h 31m) 774/2041 tested (580 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 30m) 776/2041 tested (582 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 30m) 777/2041 tested (583 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 30m) 779/2041 tested (585 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 30m) 780/2041 tested (586 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 29m) 782/2041 tested (588 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 29m) 783/2041 tested (589 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 29m) 785/2041 tested (591 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 29m) 786/2041 tested (592 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 29m) 788/2041 tested (594 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 29m) 789/2041 tested (595 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 28m) 791/2041 tested (597 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 28m) 792/2041 tested (598 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 28m) 794/2041 tested (600 survived, 76 timed out)
Mutation testing 38% (elapsed: ~1h 34m, remaining: ~2h 28m) 795/2041 tested (601 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 28m) 796/2041 tested (602 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 27m) 798/2041 tested (604 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 27m) 799/2041 tested (605 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 27m) 801/2041 tested (607 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 27m) 802/2041 tested (608 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 27m) 804/2041 tested (610 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 27m) 805/2041 tested (611 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 26m) 807/2041 tested (613 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 26m) 808/2041 tested (614 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 26m) 810/2041 tested (616 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 26m) 811/2041 tested (617 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 26m) 813/2041 tested (619 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 36m, remaining: ~2h 25m) 814/2041 tested (620 survived, 76 timed out)
Mutation testing 39% (elapsed: ~1h 37m, remaining: ~2h 25m) 816/2041 tested (622 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 25m) 817/2041 tested (623 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 25m) 819/2041 tested (625 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 25m) 820/2041 tested (626 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 24m) 822/2041 tested (628 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 24m) 823/2041 tested (629 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 24m) 825/2041 tested (631 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 24m) 826/2041 tested (632 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 24m) 827/2041 tested (633 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 24m) 829/2041 tested (635 survived, 76 timed out)
Mutation testing 40% (elapsed: ~1h 38m, remaining: ~2h 22m) 835/2041 tested (636 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 22m) 837/2041 tested (637 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 22m) 838/2041 tested (638 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 21m) 840/2041 tested (640 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 21m) 841/2041 tested (641 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 21m) 843/2041 tested (643 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 21m) 844/2041 tested (644 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 21m) 846/2041 tested (646 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 20m) 847/2041 tested (647 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 20m) 849/2041 tested (649 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 20m) 850/2041 tested (650 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 20m) 852/2041 tested (652 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 20m) 853/2041 tested (653 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 40m, remaining: ~2h 19m) 855/2041 tested (655 survived, 76 timed out)
Mutation testing 41% (elapsed: ~1h 41m, remaining: ~2h 19m) 856/2041 tested (656 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 19m) 858/2041 tested (658 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 19m) 859/2041 tested (659 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 19m) 861/2041 tested (661 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 19m) 862/2041 tested (662 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 18m) 864/2041 tested (664 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 18m) 865/2041 tested (665 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 18m) 867/2041 tested (667 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 18m) 868/2041 tested (668 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 18m) 869/2041 tested (669 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 17m) 873/2041 tested (670 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 17m) 875/2041 tested (672 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 43m, remaining: ~2h 16m) 876/2041 tested (673 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 16m) 878/2041 tested (675 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 16m) 879/2041 tested (676 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 16m) 881/2041 tested (678 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 16m) 882/2041 tested (679 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 15m) 884/2041 tested (681 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 15m) 885/2041 tested (682 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 15m) 887/2041 tested (684 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 15m) 888/2041 tested (685 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 15m) 890/2041 tested (687 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 15m) 891/2041 tested (688 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 14m) 893/2041 tested (690 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 14m) 894/2041 tested (691 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 14m) 895/2041 tested (692 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 14m) 897/2041 tested (694 survived, 76 timed out)
Mutation testing 43% (elapsed: ~1h 45m, remaining: ~2h 14m) 898/2041 tested (695 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 900/2041 tested (697 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 901/2041 tested (698 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 903/2041 tested (700 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 904/2041 tested (701 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 906/2041 tested (703 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 907/2041 tested (704 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 12m) 909/2041 tested (705 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 12m) 910/2041 tested (705 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 12m) 911/2041 tested (705 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 12m) 913/2041 tested (707 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 12m) 914/2041 tested (708 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 12m) 916/2041 tested (710 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 11m) 917/2041 tested (710 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 12m) 917/2041 tested (710 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 48m, remaining: ~2h 12m) 918/2041 tested (710 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 12m) 919/2041 tested (710 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 12m) 919/2041 tested (710 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 12m) 920/2041 tested (710 survived, 79 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 11m) 922/2041 tested (712 survived, 79 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 11m) 923/2041 tested (713 survived, 79 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 12m) 923/2041 tested (713 survived, 79 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 924/2041 tested (713 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 925/2041 tested (713 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 12m) 925/2041 tested (713 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 12m) 926/2041 tested (713 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 11m) 927/2041 tested (713 survived, 83 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 11m) 928/2041 tested (714 survived, 83 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 11m) 929/2041 tested (714 survived, 84 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 11m) 930/2041 tested (715 survived, 84 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 11m) 933/2041 tested (717 survived, 84 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 10m) 936/2041 tested (718 survived, 84 timed out)
Mutation testing 45% (elapsed: ~1h 50m, remaining: ~2h 10m) 937/2041 tested (719 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 10m) 939/2041 tested (721 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 10m) 940/2041 tested (722 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 942/2041 tested (724 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 943/2041 tested (725 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 945/2041 tested (727 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 9m) 946/2041 tested (728 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 9m) 948/2041 tested (730 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 9m) 949/2041 tested (731 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 9m) 950/2041 tested (732 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 8m) 952/2041 tested (734 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 8m) 953/2041 tested (735 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 52m, remaining: ~2h 8m) 955/2041 tested (737 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 8m) 956/2041 tested (738 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 7m) 958/2041 tested (740 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 53m, remaining: ~2h 7m) 959/2041 tested (741 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 7m) 961/2041 tested (743 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 7m) 962/2041 tested (744 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 7m) 964/2041 tested (746 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 7m) 965/2041 tested (747 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 6m) 967/2041 tested (749 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 6m) 968/2041 tested (750 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 6m) 970/2041 tested (752 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 6m) 971/2041 tested (753 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 6m) 973/2041 tested (755 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 5m) 974/2041 tested (756 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 5m) 976/2041 tested (758 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 5m) 977/2041 tested (759 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 55m, remaining: ~2h 5m) 978/2041 tested (760 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 5m) 980/2041 tested (762 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 5m) 981/2041 tested (763 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 4m) 983/2041 tested (765 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 5m) 983/2041 tested (765 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 4m) 984/2041 tested (765 survived, 85 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 4m) 985/2041 tested (765 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 5m) 985/2041 tested (765 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 4m) 987/2041 tested (766 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 988/2041 tested (767 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 989/2041 tested (768 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 991/2041 tested (770 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 4m) 992/2041 tested (771 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 3m) 994/2041 tested (773 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 57m, remaining: ~2h 3m) 995/2041 tested (774 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 3m) 997/2041 tested (776 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 3m) 998/2041 tested (777 survived, 87 timed out)
Mutation testing 48% (elapsed: ~1h 58m, remaining: ~2h 3m) 1000/2041 tested (779 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 3m) 1001/2041 tested (780 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 2m) 1003/2041 tested (782 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 2m) 1004/2041 tested (783 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1006/2041 tested (785 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1007/2041 tested (786 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 2m) 1009/2041 tested (788 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 1m) 1010/2041 tested (789 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 1m) 1012/2041 tested (791 survived, 87 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~2h 1m) 1013/2041 tested (792 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1015/2041 tested (794 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1016/2041 tested (795 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 1m) 1017/2041 tested (796 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 0m) 1019/2041 tested (798 survived, 87 timed out)
Mutation testing 49% (elapsed: ~2h 0m, remaining: ~2h 0m) 1020/2041 tested (799 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~2h 0m) 1022/2041 tested (801 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1023/2041 tested (802 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1025/2041 tested (804 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~2h 0m) 1026/2041 tested (805 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 59m) 1028/2041 tested (807 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 59m) 1029/2041 tested (808 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 59m) 1031/2041 tested (810 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 59m) 1032/2041 tested (811 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 58m) 1034/2041 tested (813 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 58m) 1035/2041 tested (814 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 58m) 1037/2041 tested (816 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 58m) 1038/2041 tested (817 survived, 87 timed out)
Mutation testing 50% (elapsed: ~2h 2m, remaining: ~1h 58m) 1039/2041 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 58m) 1041/2041 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 58m) 1042/2041 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 58m) 1043/2041 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 57m) 1045/2041 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 57m) 1046/2041 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 57m) 1048/2041 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1049/2041 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 57m) 1050/2041 tested (818 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 56m) 1052/2041 tested (819 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 56m) 1053/2041 tested (820 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 56m) 1055/2041 tested (822 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 4m, remaining: ~1h 56m) 1056/2041 tested (823 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1058/2041 tested (825 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 56m) 1059/2041 tested (826 survived, 87 timed out)
Mutation testing 51% (elapsed: ~2h 5m, remaining: ~1h 55m) 1061/2041 tested (828 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 55m) 1062/2041 tested (829 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 55m) 1064/2041 tested (831 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 55m) 1065/2041 tested (832 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 55m) 1067/2041 tested (834 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 54m) 1068/2041 tested (835 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 54m) 1070/2041 tested (837 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 54m) 1071/2041 tested (838 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 54m) 1072/2041 tested (839 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 54m) 1074/2041 tested (841 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 54m) 1075/2041 tested (842 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 53m) 1077/2041 tested (844 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 53m) 1078/2041 tested (845 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 53m) 1080/2041 tested (847 survived, 87 timed out)
Mutation testing 52% (elapsed: ~2h 7m, remaining: ~1h 53m) 1081/2041 tested (848 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 53m) 1083/2041 tested (850 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 53m) 1084/2041 tested (851 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 52m) 1086/2041 tested (853 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 52m) 1087/2041 tested (854 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 52m) 1089/2041 tested (856 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 52m) 1090/2041 tested (857 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 51m) 1092/2041 tested (859 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1093/2041 tested (860 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1095/2041 tested (862 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1096/2041 tested (863 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1098/2041 tested (865 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 51m) 1099/2041 tested (866 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 9m, remaining: ~1h 50m) 1101/2041 tested (868 survived, 87 timed out)
Mutation testing 53% (elapsed: ~2h 10m, remaining: ~1h 50m) 1102/2041 tested (869 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1103/2041 tested (870 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1105/2041 tested (872 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1106/2041 tested (873 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 50m) 1108/2041 tested (875 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 49m) 1109/2041 tested (876 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 49m) 1111/2041 tested (878 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 49m) 1112/2041 tested (879 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 49m) 1114/2041 tested (881 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 49m) 1115/2041 tested (882 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 48m) 1117/2041 tested (884 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 11m, remaining: ~1h 48m) 1118/2041 tested (885 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 48m) 1120/2041 tested (887 survived, 87 timed out)
Mutation testing 54% (elapsed: ~2h 12m, remaining: ~1h 48m) 1121/2041 tested (888 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 48m) 1123/2041 tested (890 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 48m) 1124/2041 tested (891 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 47m) 1126/2041 tested (893 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 47m) 1127/2041 tested (894 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1129/2041 tested (896 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1130/2041 tested (897 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 47m) 1132/2041 tested (899 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 46m) 1133/2041 tested (900 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 46m) 1135/2041 tested (902 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 46m) 1136/2041 tested (903 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 46m) 1138/2041 tested (905 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 46m) 1139/2041 tested (906 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 45m) 1141/2041 tested (908 survived, 87 timed out)
Mutation testing 55% (elapsed: ~2h 14m, remaining: ~1h 45m) 1142/2041 tested (909 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 45m) 1143/2041 tested (910 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 45m) 1145/2041 tested (912 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1146/2041 tested (913 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1148/2041 tested (915 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 45m) 1149/2041 tested (916 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 44m) 1151/2041 tested (918 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 44m) 1152/2041 tested (919 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 44m) 1154/2041 tested (921 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 44m) 1155/2041 tested (922 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 44m) 1157/2041 tested (924 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 43m) 1158/2041 tested (925 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 43m) 1160/2041 tested (927 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 43m) 1161/2041 tested (928 survived, 87 timed out)
Mutation testing 56% (elapsed: ~2h 16m, remaining: ~1h 43m) 1163/2041 tested (930 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 43m) 1164/2041 tested (931 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 42m) 1166/2041 tested (933 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 42m) 1167/2041 tested (934 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 42m) 1169/2041 tested (936 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 42m) 1170/2041 tested (937 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 42m) 1172/2041 tested (939 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 42m) 1173/2041 tested (940 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 41m) 1175/2041 tested (942 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 41m) 1176/2041 tested (943 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 41m) 1177/2041 tested (944 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 41m) 1179/2041 tested (946 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 18m, remaining: ~1h 41m) 1180/2041 tested (947 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 41m) 1182/2041 tested (949 survived, 87 timed out)
Mutation testing 57% (elapsed: ~2h 19m, remaining: ~1h 40m) 1183/2041 tested (950 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 40m) 1185/2041 tested (952 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 40m) 1186/2041 tested (953 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 40m) 1188/2041 tested (955 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 40m) 1189/2041 tested (956 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 39m) 1191/2041 tested (958 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 39m) 1192/2041 tested (959 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 39m) 1194/2041 tested (961 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 39m) 1195/2041 tested (962 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 39m) 1197/2041 tested (964 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 39m) 1198/2041 tested (965 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 38m) 1200/2041 tested (967 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 38m) 1201/2041 tested (968 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 38m) 1203/2041 tested (970 survived, 87 timed out)
Mutation testing 58% (elapsed: ~2h 21m, remaining: ~1h 38m) 1204/2041 tested (971 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 38m) 1206/2041 tested (973 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 38m) 1207/2041 tested (974 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 37m) 1209/2041 tested (976 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 37m) 1210/2041 tested (977 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 37m) 1212/2041 tested (979 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 37m) 1213/2041 tested (980 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 36m) 1215/2041 tested (982 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 36m) 1216/2041 tested (983 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1217/2041 tested (984 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1219/2041 tested (986 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1220/2041 tested (987 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1222/2041 tested (989 survived, 87 timed out)
Mutation testing 59% (elapsed: ~2h 23m, remaining: ~1h 36m) 1223/2041 tested (990 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 35m) 1225/2041 tested (992 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1226/2041 tested (993 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1228/2041 tested (995 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1229/2041 tested (996 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 35m) 1231/2041 tested (998 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 34m) 1232/2041 tested (999 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 34m) 1234/2041 tested (1001 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 34m) 1235/2041 tested (1002 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 34m) 1237/2041 tested (1004 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 34m) 1238/2041 tested (1005 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 33m) 1240/2041 tested (1007 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 33m) 1241/2041 tested (1008 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 25m, remaining: ~1h 33m) 1243/2041 tested (1010 survived, 87 timed out)
Mutation testing 60% (elapsed: ~2h 26m, remaining: ~1h 33m) 1244/2041 tested (1011 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 33m) 1246/2041 tested (1013 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 33m) 1247/2041 tested (1014 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 33m) 1248/2041 tested (1015 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 32m) 1250/2041 tested (1017 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 32m) 1251/2041 tested (1018 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 32m) 1253/2041 tested (1020 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 32m) 1254/2041 tested (1021 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 32m) 1256/2041 tested (1023 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 31m) 1257/2041 tested (1024 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 31m) 1259/2041 tested (1026 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 27m, remaining: ~1h 31m) 1260/2041 tested (1027 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 31m) 1262/2041 tested (1029 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 31m) 1263/2041 tested (1030 survived, 87 timed out)
Mutation testing 61% (elapsed: ~2h 28m, remaining: ~1h 30m) 1265/2041 tested (1032 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 30m) 1266/2041 tested (1033 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 30m) 1268/2041 tested (1035 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 30m) 1269/2041 tested (1036 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 30m) 1271/2041 tested (1038 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 30m) 1272/2041 tested (1039 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 30m) 1273/2041 tested (1040 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 29m) 1275/2041 tested (1042 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 29m) 1276/2041 tested (1043 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 29m) 1278/2041 tested (1045 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 29m) 1279/2041 tested (1046 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 29m) 1281/2041 tested (1048 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 29m) 1282/2041 tested (1049 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 28m) 1284/2041 tested (1051 survived, 87 timed out)
Mutation testing 62% (elapsed: ~2h 30m, remaining: ~1h 28m) 1285/2041 tested (1052 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 28m) 1287/2041 tested (1054 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 28m) 1288/2041 tested (1055 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 28m) 1290/2041 tested (1057 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 27m) 1291/2041 tested (1058 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 27m) 1293/2041 tested (1060 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 27m) 1294/2041 tested (1061 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 27m) 1296/2041 tested (1063 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 27m) 1297/2041 tested (1064 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 26m) 1299/2041 tested (1066 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 26m) 1300/2041 tested (1067 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 26m) 1302/2041 tested (1069 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 26m) 1303/2041 tested (1070 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 32m, remaining: ~1h 26m) 1305/2041 tested (1072 survived, 87 timed out)
Mutation testing 63% (elapsed: ~2h 33m, remaining: ~1h 26m) 1306/2041 tested (1073 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 26m) 1307/2041 tested (1074 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 25m) 1309/2041 tested (1076 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 25m) 1310/2041 tested (1077 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 25m) 1312/2041 tested (1079 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 25m) 1313/2041 tested (1080 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 25m) 1315/2041 tested (1082 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 24m) 1316/2041 tested (1083 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 24m) 1318/2041 tested (1085 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 24m) 1319/2041 tested (1086 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 24m) 1321/2041 tested (1088 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 34m, remaining: ~1h 24m) 1322/2041 tested (1089 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 23m) 1324/2041 tested (1091 survived, 87 timed out)
Mutation testing 64% (elapsed: ~2h 35m, remaining: ~1h 23m) 1325/2041 tested (1092 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 23m) 1327/2041 tested (1094 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 23m) 1328/2041 tested (1095 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 23m) 1330/2041 tested (1097 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 23m) 1331/2041 tested (1098 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1333/2041 tested (1100 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1334/2041 tested (1101 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1336/2041 tested (1103 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1337/2041 tested (1104 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1339/2041 tested (1106 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 22m) 1340/2041 tested (1107 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 21m) 1341/2041 tested (1108 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 21m) 1343/2041 tested (1110 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 21m) 1344/2041 tested (1111 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 21m) 1346/2041 tested (1113 survived, 87 timed out)
Mutation testing 65% (elapsed: ~2h 37m, remaining: ~1h 21m) 1347/2041 tested (1114 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 20m) 1349/2041 tested (1116 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1350/2041 tested (1117 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1352/2041 tested (1119 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1353/2041 tested (1120 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1355/2041 tested (1122 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 20m) 1356/2041 tested (1123 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 19m) 1358/2041 tested (1125 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1359/2041 tested (1126 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1361/2041 tested (1128 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1362/2041 tested (1129 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1364/2041 tested (1131 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 19m) 1365/2041 tested (1132 survived, 87 timed out)
Mutation testing 66% (elapsed: ~2h 39m, remaining: ~1h 18m) 1367/2041 tested (1134 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 18m) 1368/2041 tested (1135 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 18m) 1370/2041 tested (1137 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 18m) 1371/2041 tested (1138 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 18m) 1373/2041 tested (1140 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 17m) 1374/2041 tested (1141 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 17m) 1376/2041 tested (1143 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 17m) 1377/2041 tested (1144 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 17m) 1378/2041 tested (1145 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 17m) 1380/2041 tested (1147 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 17m) 1381/2041 tested (1148 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 16m) 1383/2041 tested (1150 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 41m, remaining: ~1h 16m) 1384/2041 tested (1151 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 16m) 1386/2041 tested (1153 survived, 87 timed out)
Mutation testing 67% (elapsed: ~2h 42m, remaining: ~1h 16m) 1387/2041 tested (1154 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 16m) 1389/2041 tested (1156 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 16m) 1390/2041 tested (1157 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 15m) 1392/2041 tested (1159 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 15m) 1393/2041 tested (1160 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 15m) 1395/2041 tested (1162 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 15m) 1396/2041 tested (1163 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 15m) 1398/2041 tested (1165 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 15m) 1399/2041 tested (1166 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 14m) 1401/2041 tested (1168 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 14m) 1402/2041 tested (1169 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 14m) 1404/2041 tested (1171 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 14m) 1405/2041 tested (1172 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 14m) 1407/2041 tested (1174 survived, 87 timed out)
Mutation testing 68% (elapsed: ~2h 44m, remaining: ~1h 13m) 1408/2041 tested (1175 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 13m) 1410/2041 tested (1177 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 13m) 1411/2041 tested (1178 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 13m) 1413/2041 tested (1180 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 13m) 1414/2041 tested (1181 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 12m) 1416/2041 tested (1183 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 12m) 1417/2041 tested (1184 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 12m) 1418/2041 tested (1185 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 12m) 1420/2041 tested (1187 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 12m) 1421/2041 tested (1188 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 12m) 1423/2041 tested (1190 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 12m) 1424/2041 tested (1191 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 11m) 1426/2041 tested (1193 survived, 87 timed out)
Mutation testing 69% (elapsed: ~2h 46m, remaining: ~1h 11m) 1427/2041 tested (1194 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 11m) 1429/2041 tested (1196 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 11m) 1430/2041 tested (1197 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 11m) 1432/2041 tested (1199 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1433/2041 tested (1200 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1435/2041 tested (1202 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1436/2041 tested (1203 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 10m) 1438/2041 tested (1205 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 10m) 1439/2041 tested (1206 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 10m) 1441/2041 tested (1208 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 9m) 1442/2041 tested (1209 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 9m) 1444/2041 tested (1211 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 9m) 1445/2041 tested (1212 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 48m, remaining: ~1h 9m) 1447/2041 tested (1214 survived, 87 timed out)
Mutation testing 70% (elapsed: ~2h 49m, remaining: ~1h 9m) 1448/2041 tested (1215 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1450/2041 tested (1217 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1451/2041 tested (1218 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1452/2041 tested (1219 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1454/2041 tested (1221 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 8m) 1455/2041 tested (1222 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 8m) 1457/2041 tested (1224 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 8m) 1458/2041 tested (1225 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1460/2041 tested (1227 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1461/2041 tested (1228 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1463/2041 tested (1230 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 7m) 1464/2041 tested (1231 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 7m) 1466/2041 tested (1233 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 6m) 1467/2041 tested (1234 survived, 87 timed out)
Mutation testing 71% (elapsed: ~2h 51m, remaining: ~1h 6m) 1469/2041 tested (1236 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 6m) 1470/2041 tested (1237 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 6m) 1471/2041 tested (1238 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 6m) 1473/2041 tested (1240 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 6m) 1474/2041 tested (1241 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1476/2041 tested (1243 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1477/2041 tested (1244 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1479/2041 tested (1246 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1480/2041 tested (1247 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 5m) 1482/2041 tested (1249 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 5m) 1483/2041 tested (1250 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1485/2041 tested (1252 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1486/2041 tested (1253 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1488/2041 tested (1255 survived, 87 timed out)
Mutation testing 72% (elapsed: ~2h 53m, remaining: ~1h 4m) 1489/2041 tested (1256 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 4m) 1490/2041 tested (1257 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 4m) 1492/2041 tested (1259 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1493/2041 tested (1260 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1495/2041 tested (1262 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1496/2041 tested (1263 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1498/2041 tested (1265 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 3m) 1499/2041 tested (1266 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1501/2041 tested (1268 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1502/2041 tested (1269 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1504/2041 tested (1271 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1505/2041 tested (1272 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1507/2041 tested (1274 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 55m, remaining: ~1h 2m) 1508/2041 tested (1275 survived, 87 timed out)
Mutation testing 73% (elapsed: ~2h 56m, remaining: ~1h 2m) 1509/2041 tested (1276 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1511/2041 tested (1278 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1512/2041 tested (1279 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1514/2041 tested (1281 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1515/2041 tested (1282 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 1m) 1517/2041 tested (1284 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1518/2041 tested (1285 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1520/2041 tested (1287 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1521/2041 tested (1288 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1523/2041 tested (1290 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1524/2041 tested (1291 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~1h 0m) 1526/2041 tested (1293 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~59m) 1527/2041 tested (1294 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~59m) 1529/2041 tested (1296 survived, 87 timed out)
Mutation testing 74% (elapsed: ~2h 58m, remaining: ~59m) 1530/2041 tested (1297 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~59m) 1531/2041 tested (1298 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~59m) 1533/2041 tested (1300 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~59m) 1534/2041 tested (1301 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~58m) 1536/2041 tested (1303 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~58m) 1537/2041 tested (1304 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~58m) 1540/2041 tested (1305 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~58m) 1542/2041 tested (1307 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1543/2041 tested (1308 survived, 87 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~57m) 1545/2041 tested (1310 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~57m) 1546/2041 tested (1311 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~57m) 1548/2041 tested (1313 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~57m) 1549/2041 tested (1314 survived, 87 timed out)
Mutation testing 75% (elapsed: ~3h 0m, remaining: ~57m) 1551/2041 tested (1316 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~56m) 1552/2041 tested (1317 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~56m) 1554/2041 tested (1319 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~56m) 1555/2041 tested (1320 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~56m) 1557/2041 tested (1322 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~56m) 1558/2041 tested (1323 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1560/2041 tested (1325 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1561/2041 tested (1326 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1563/2041 tested (1328 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~55m) 1564/2041 tested (1329 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~55m) 1565/2041 tested (1330 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~55m) 1567/2041 tested (1332 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~55m) 1568/2041 tested (1333 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~54m) 1570/2041 tested (1335 survived, 87 timed out)
Mutation testing 76% (elapsed: ~3h 2m, remaining: ~54m) 1571/2041 tested (1336 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~54m) 1573/2041 tested (1338 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~54m) 1574/2041 tested (1339 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~54m) 1576/2041 tested (1341 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1577/2041 tested (1342 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1579/2041 tested (1344 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~53m) 1580/2041 tested (1345 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~53m) 1582/2041 tested (1347 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~53m) 1583/2041 tested (1348 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~53m) 1585/2041 tested (1350 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1586/2041 tested (1351 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1588/2041 tested (1353 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 4m, remaining: ~52m) 1589/2041 tested (1354 survived, 87 timed out)
Mutation testing 77% (elapsed: ~3h 5m, remaining: ~52m) 1591/2041 tested (1356 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~52m) 1592/2041 tested (1357 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1594/2041 tested (1359 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1595/2041 tested (1360 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1597/2041 tested (1362 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~51m) 1598/2041 tested (1363 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~51m) 1600/2041 tested (1365 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~51m) 1601/2041 tested (1366 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1603/2041 tested (1368 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1604/2041 tested (1369 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1605/2041 tested (1370 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~50m) 1607/2041 tested (1372 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~50m) 1608/2041 tested (1373 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~50m) 1610/2041 tested (1375 survived, 87 timed out)
Mutation testing 78% (elapsed: ~3h 7m, remaining: ~50m) 1611/2041 tested (1376 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~49m) 1613/2041 tested (1378 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~49m) 1614/2041 tested (1379 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~49m) 1616/2041 tested (1381 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~49m) 1617/2041 tested (1382 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~49m) 1619/2041 tested (1384 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1620/2041 tested (1385 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1622/2041 tested (1387 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1623/2041 tested (1388 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~48m) 1625/2041 tested (1390 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~48m) 1626/2041 tested (1391 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1628/2041 tested (1393 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1629/2041 tested (1394 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1631/2041 tested (1396 survived, 87 timed out)
Mutation testing 79% (elapsed: ~3h 9m, remaining: ~47m) 1632/2041 tested (1397 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~47m) 1634/2041 tested (1399 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~47m) 1635/2041 tested (1400 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1637/2041 tested (1402 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1638/2041 tested (1403 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1640/2041 tested (1405 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1641/2041 tested (1406 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~46m) 1642/2041 tested (1407 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~46m) 1644/2041 tested (1409 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~46m) 1645/2041 tested (1410 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1647/2041 tested (1412 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1648/2041 tested (1413 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1650/2041 tested (1415 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 11m, remaining: ~45m) 1651/2041 tested (1416 survived, 87 timed out)
Mutation testing 80% (elapsed: ~3h 12m, remaining: ~45m) 1653/2041 tested (1418 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1654/2041 tested (1419 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1656/2041 tested (1421 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1657/2041 tested (1422 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1659/2041 tested (1424 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~44m) 1660/2041 tested (1425 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~44m) 1662/2041 tested (1427 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1663/2041 tested (1428 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1665/2041 tested (1430 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1666/2041 tested (1431 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1668/2041 tested (1433 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~43m) 1669/2041 tested (1434 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~42m) 1671/2041 tested (1436 survived, 87 timed out)
Mutation testing 81% (elapsed: ~3h 14m, remaining: ~42m) 1672/2041 tested (1437 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1674/2041 tested (1439 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1675/2041 tested (1440 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1677/2041 tested (1442 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~42m) 1678/2041 tested (1443 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1680/2041 tested (1445 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1681/2041 tested (1446 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1682/2041 tested (1447 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1684/2041 tested (1449 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1685/2041 tested (1450 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~41m) 1687/2041 tested (1452 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1688/2041 tested (1453 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1690/2041 tested (1455 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1691/2041 tested (1456 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1693/2041 tested (1458 survived, 87 timed out)
Mutation testing 82% (elapsed: ~3h 16m, remaining: ~40m) 1694/2041 tested (1459 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~40m) 1696/2041 tested (1461 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1697/2041 tested (1462 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1699/2041 tested (1464 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1700/2041 tested (1465 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1702/2041 tested (1467 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~39m) 1703/2041 tested (1468 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~38m) 1705/2041 tested (1470 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1706/2041 tested (1471 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1708/2041 tested (1473 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1709/2041 tested (1474 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1711/2041 tested (1476 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~38m) 1712/2041 tested (1477 survived, 87 timed out)
Mutation testing 83% (elapsed: ~3h 18m, remaining: ~37m) 1714/2041 tested (1479 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1715/2041 tested (1480 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1717/2041 tested (1482 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1718/2041 tested (1483 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1720/2041 tested (1485 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~37m) 1721/2041 tested (1486 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~36m) 1723/2041 tested (1488 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1724/2041 tested (1489 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1725/2041 tested (1490 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1727/2041 tested (1492 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1728/2041 tested (1493 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~36m) 1730/2041 tested (1495 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~35m) 1731/2041 tested (1496 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~35m) 1733/2041 tested (1498 survived, 87 timed out)
Mutation testing 84% (elapsed: ~3h 21m, remaining: ~35m) 1734/2041 tested (1499 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~35m) 1736/2041 tested (1501 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~35m) 1737/2041 tested (1502 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~35m) 1739/2041 tested (1504 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~34m) 1740/2041 tested (1505 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1742/2041 tested (1507 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1743/2041 tested (1508 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1745/2041 tested (1510 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~34m) 1746/2041 tested (1511 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1748/2041 tested (1513 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1749/2041 tested (1514 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1751/2041 tested (1516 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1752/2041 tested (1517 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1754/2041 tested (1519 survived, 87 timed out)
Mutation testing 85% (elapsed: ~3h 23m, remaining: ~33m) 1755/2041 tested (1520 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1757/2041 tested (1522 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1758/2041 tested (1523 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1760/2041 tested (1525 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1761/2041 tested (1526 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1763/2041 tested (1528 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~32m) 1764/2041 tested (1529 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1766/2041 tested (1531 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1767/2041 tested (1532 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1768/2041 tested (1533 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1770/2041 tested (1535 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1771/2041 tested (1536 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~31m) 1773/2041 tested (1538 survived, 87 timed out)
Mutation testing 86% (elapsed: ~3h 25m, remaining: ~30m) 1774/2041 tested (1539 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~30m) 1776/2041 tested (1541 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1777/2041 tested (1542 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1779/2041 tested (1544 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1780/2041 tested (1545 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~30m) 1782/2041 tested (1547 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1783/2041 tested (1548 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1785/2041 tested (1550 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~29m) 1786/2041 tested (1551 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~29m) 1788/2041 tested (1553 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~29m) 1789/2041 tested (1554 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1791/2041 tested (1556 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1792/2041 tested (1557 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1794/2041 tested (1559 survived, 87 timed out)
Mutation testing 87% (elapsed: ~3h 28m, remaining: ~28m) 1795/2041 tested (1560 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~28m) 1797/2041 tested (1562 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~28m) 1798/2041 tested (1563 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1800/2041 tested (1565 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1801/2041 tested (1566 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1803/2041 tested (1568 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~27m) 1804/2041 tested (1569 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~27m) 1806/2041 tested (1571 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~27m) 1807/2041 tested (1572 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1809/2041 tested (1574 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1810/2041 tested (1575 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1811/2041 tested (1576 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~26m) 1813/2041 tested (1578 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~26m) 1814/2041 tested (1579 survived, 87 timed out)
Mutation testing 88% (elapsed: ~3h 30m, remaining: ~26m) 1816/2041 tested (1581 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1817/2041 tested (1582 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1819/2041 tested (1584 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1820/2041 tested (1585 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~25m) 1822/2041 tested (1587 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~25m) 1823/2041 tested (1588 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~25m) 1825/2041 tested (1590 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1826/2041 tested (1591 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1828/2041 tested (1593 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1829/2041 tested (1594 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~24m) 1831/2041 tested (1596 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~24m) 1832/2041 tested (1597 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~23m) 1834/2041 tested (1599 survived, 87 timed out)
Mutation testing 89% (elapsed: ~3h 32m, remaining: ~23m) 1835/2041 tested (1600 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~23m) 1837/2041 tested (1602 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~23m) 1838/2041 tested (1603 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~23m) 1840/2041 tested (1605 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~23m) 1841/2041 tested (1606 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1843/2041 tested (1608 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1844/2041 tested (1609 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1845/2041 tested (1610 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1847/2041 tested (1612 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~22m) 1848/2041 tested (1613 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~22m) 1850/2041 tested (1615 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~22m) 1851/2041 tested (1616 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1853/2041 tested (1618 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1854/2041 tested (1619 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1856/2041 tested (1621 survived, 87 timed out)
Mutation testing 90% (elapsed: ~3h 35m, remaining: ~21m) 1857/2041 tested (1622 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~21m) 1859/2041 tested (1624 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1860/2041 tested (1625 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1862/2041 tested (1627 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1863/2041 tested (1628 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1865/2041 tested (1630 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~20m) 1866/2041 tested (1631 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~20m) 1868/2041 tested (1633 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1869/2041 tested (1634 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1871/2041 tested (1636 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1872/2041 tested (1637 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1874/2041 tested (1639 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 37m, remaining: ~19m) 1875/2041 tested (1640 survived, 87 timed out)
Mutation testing 91% (elapsed: ~3h 37m, remaining: ~18m) 1877/2041 tested (1642 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1878/2041 tested (1643 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1880/2041 tested (1645 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1881/2041 tested (1646 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1883/2041 tested (1648 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~18m) 1884/2041 tested (1649 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~18m) 1885/2041 tested (1650 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1887/2041 tested (1652 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1888/2041 tested (1653 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1890/2041 tested (1655 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1891/2041 tested (1656 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~17m) 1893/2041 tested (1658 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~17m) 1894/2041 tested (1659 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~16m) 1896/2041 tested (1661 survived, 87 timed out)
Mutation testing 92% (elapsed: ~3h 39m, remaining: ~16m) 1897/2041 tested (1662 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~16m) 1899/2041 tested (1664 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~16m) 1900/2041 tested (1665 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~16m) 1902/2041 tested (1667 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1903/2041 tested (1668 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1905/2041 tested (1670 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1906/2041 tested (1671 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1908/2041 tested (1673 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1909/2041 tested (1674 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~15m) 1911/2041 tested (1676 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1912/2041 tested (1677 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1914/2041 tested (1679 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1915/2041 tested (1680 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1917/2041 tested (1682 survived, 87 timed out)
Mutation testing 93% (elapsed: ~3h 41m, remaining: ~14m) 1918/2041 tested (1683 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~14m) 1919/2041 tested (1684 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1921/2041 tested (1686 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1922/2041 tested (1687 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1924/2041 tested (1689 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1925/2041 tested (1690 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1927/2041 tested (1692 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~13m) 1928/2041 tested (1693 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1930/2041 tested (1695 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1931/2041 tested (1696 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1933/2041 tested (1698 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1934/2041 tested (1699 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1936/2041 tested (1701 survived, 87 timed out)
Mutation testing 94% (elapsed: ~3h 44m, remaining: ~12m) 1937/2041 tested (1702 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1939/2041 tested (1704 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1940/2041 tested (1705 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1942/2041 tested (1707 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1943/2041 tested (1708 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1945/2041 tested (1710 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1946/2041 tested (1711 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1948/2041 tested (1713 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1949/2041 tested (1714 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1951/2041 tested (1716 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1952/2041 tested (1717 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1954/2041 tested (1719 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1955/2041 tested (1720 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1957/2041 tested (1722 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1958/2041 tested (1723 survived, 87 timed out)
Mutation testing 95% (elapsed: ~3h 46m, remaining: ~9m) 1959/2041 tested (1724 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~9m) 1961/2041 tested (1726 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~9m) 1962/2041 tested (1727 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1964/2041 tested (1729 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1965/2041 tested (1730 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1967/2041 tested (1732 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1968/2041 tested (1733 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1970/2041 tested (1735 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1971/2041 tested (1736 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1973/2041 tested (1738 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1974/2041 tested (1739 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1976/2041 tested (1741 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1977/2041 tested (1742 survived, 87 timed out)
Mutation testing 96% (elapsed: ~3h 48m, remaining: ~7m) 1979/2041 tested (1744 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~7m) 1980/2041 tested (1745 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1982/2041 tested (1747 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1983/2041 tested (1748 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1985/2041 tested (1750 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1986/2041 tested (1751 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1988/2041 tested (1753 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~6m) 1989/2041 tested (1754 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1991/2041 tested (1756 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1992/2041 tested (1757 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1994/2041 tested (1759 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1995/2041 tested (1760 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~5m) 1997/2041 tested (1762 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~4m) 1998/2041 tested (1763 survived, 87 timed out)
Mutation testing 97% (elapsed: ~3h 51m, remaining: ~4m) 1999/2041 tested (1764 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 2001/2041 tested (1766 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 2002/2041 tested (1767 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 2004/2041 tested (1769 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~4m) 2005/2041 tested (1770 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~3m) 2007/2041 tested (1772 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2008/2041 tested (1773 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2010/2041 tested (1775 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2011/2041 tested (1776 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2013/2041 tested (1778 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~3m) 2014/2041 tested (1779 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~2m) 2016/2041 tested (1781 survived, 87 timed out)
Mutation testing 98% (elapsed: ~3h 53m, remaining: ~2m) 2017/2041 tested (1782 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~2m) 2021/2041 tested (1783 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~2m) 2023/2041 tested (1785 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2024/2041 tested (1786 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2026/2041 tested (1788 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2027/2041 tested (1789 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: ~1m) 2029/2041 tested (1791 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: ~1m) 2030/2041 tested (1792 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: ~1m) 2032/2041 tested (1794 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2033/2041 tested (1795 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2035/2041 tested (1797 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2036/2041 tested (1798 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 55m, remaining: <1m) 2038/2041 tested (1800 survived, 87 timed out)
Mutation testing 99% (elapsed: ~3h 55m, remaining: <1m) 2039/2041 tested (1801 survived, 87 timed out)

All tests
  ✓ All tests (killed 151)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", "undefined");

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "q"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "Q"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("fulfilled", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("rejected", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("pending", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", 0);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", undefined);

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && false) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && true) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && typeof define.amd.define === "function") {

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           undefined(definition);

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           console.log(definition);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition());

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function () {});

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses === undefined) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses !== null) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.isNotOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.isSecure()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.maybeOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok && ses.notOk()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" ^ typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined" && typeof document !== "undefined") {

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = null();

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = undefined();

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = 0();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain = null);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain = undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(() => {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS && false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS || true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit() && domain.enter()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.run();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush.call(null), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (domain && false) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.remove();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.pop();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "function") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, requestAnimationFrame(flush));

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "function") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port2.onmessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.onmessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(undefined);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:228:13
-               requestPortTick();
+               requestTick();

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "flush");

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush + 1, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(undefined), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!flushing && laterQueue.length > 0) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (typeof laterQueue !== 'undefined' && laterQueue.length > 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (2);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (3);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (4);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index === this.length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index += 2; index < length; index += 2) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index >= length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 0) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index > this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index === this.length) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index - 1], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 2], index + 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] - 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] * 2, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i != this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] > value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] < value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) + 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) + 0);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) - 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.length));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.push));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.pop));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, "foo", index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self + 1));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self * 2));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self - 1));

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || object[key] === undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== null) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "key")) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[key]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key * 2);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_defineProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_keys(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== null) {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (promise.stack && typeof error === "object" && error !== null && error.stack

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.value) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.promise) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.then) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && true; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.slice()) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.concat()) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.filter(function () {
+     return true;
+   })) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__" + 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stackCounter);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.source.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.length);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.code);

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:" + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR.toLowerCase() + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR.split("").reverse().join("") + "\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n"));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.toLowerCase());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.replace("From previous event:", "From previous event: "));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stacktrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack" + "trace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack" + 1, {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\r\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = array.length; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = lines.length - 1; i >= 0; --i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i == lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && !line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && line.trim()) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && line.split(" ").length > 1) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isExternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line.includes("node_modules")) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line.startsWith("node_modules")) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line.endsWith("node_modules")) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isPromiseAlike(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !getFileNameAndLineNumber(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:12
-       return desiredLines.join("\n");
+       return desiredLines.push("\n");

[Survived] PrecomputedMutator
q.js:412:12
-       return desiredLines.join("\n");
+       return desiredLines.reverse("\n");

[Survived] PrecomputedMutator
q.js:412:12
-       return desiredLines.join("\n");
+       return desiredLines.slice("\n");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.startsWith("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.endsWith("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("\n")[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("\n").reverse()[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("\n").slice(1).join("\n"));

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "string"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[1]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.replace("at ", ""));

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.slice(stackLine.indexOf("at ") + 3));

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] > 0) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] === attempt2[2]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] !== attempt2[2]) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3.length) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (lines[attempt3[0]]) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], String(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], undefined(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[0])];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[0](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[1](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber.length(stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (!fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\r\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\\n");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[lines.length - 1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("^") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[lines.length - 1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[Math.floor(lines.length / 2)]);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0] === qFileName) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[1] === qStartingLine) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console === "undefined") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments[0]);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments[1]);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.toString(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.prototype.toString.call(value) === '[object Promise]') {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === undefined) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands.length);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(promise, args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, [args[0], args[1], args[2]]);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (resolvedPromise) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (progressListeners.length) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.source);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(fulfill(resolvedPromise));

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue !== null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise || isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise !== false) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (typeof resolvedPromise === "boolean") {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport ? hasStacks : false) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.length(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\\n") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(0, message);

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== false) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(otherValue));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(resolve(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(notify(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value * 2));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value - 1));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[0](progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[progressListeners.length - 1](progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress - 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress * 2);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error != null) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.message !== null) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.name !== null) {

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(undefined);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(new Error());

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length >= 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(null, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(undefined, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([], 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(false);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== Function) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver.constructor !== Function) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify.bind(deferred));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify.call(deferred));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver.resolve(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver.reject(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver.notify(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(Q.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.fulfill);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.fulfill(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.makeNodeResolver(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.resolve(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.all(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * 2).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.reject([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.resolve([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.all([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x > y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i >= len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = 0) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.reject(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.resolve(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.all(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i - 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve(x), reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject(x), reject);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return deferred.promise(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === function () {}) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== "undefined") {

[Survived] PrecomputedMutator
q.js:802:33
-       var promise = object_create(Promise.prototype);
+       var promise = object_create(Object.create(Promise.prototype));

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op] + 1) {

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(1));

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.reject);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.resolve);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.then);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({}, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op.length, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, undefined);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, "foo");

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = undefined(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("some error message"));

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect()) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.call(promise)) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.apply(promise)) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "unknown") {

[Survived] PrecomputedMutator
q.js:830:29
-               var inspected = inspect();
+               var inspected = promise.inspect();

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self, self);

[Survived] PrecomputedMutator
q.js:866:24
-                   return reject(newException);
+                   return Q.reject(newException);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed + 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed - 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed * 2(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value + 1);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(new Error("test error"))) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(null)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(undefined)) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw && !threw) {

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(0);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback());

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.call(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.apply(null, []));

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.defer(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.call(null));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.apply(null));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.bind(null));

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall("hello").thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, "extra argument");

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, null);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.reject(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.resolve(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.defer(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, resolved, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, then, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function (value) {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function (value) {
+     throw new Error("test");
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return !value;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.resolve(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.defer(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve("foo");

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error("Rejection reason: " + reason);
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.reject(reason)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.resolve(reason)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.defer()).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(0);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPending(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value * 2)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value - 1)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isPromise(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPending(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "pending") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.state().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPending(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().state === "rejected") || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().state === "pending") || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().state === "fulfilled") || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.reason().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isRejected(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.inspect.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections.valueOf()) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections.toString()) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (unhandledRejections.length === 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) > -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.some(function (p) {
+     return p === promise;
+   })) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(trackUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     throw new Error("test");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.reject("test");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.fulfill("test");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledFulfillment", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "foo", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + 1, reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "bar", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.name, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     throw new Error("test");
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     return Q.reject("test");
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     return Q.reject(new Error("test"));
+   }));

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(0);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack === "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack !== "string") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack !== "object") {

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.pop(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.shift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.unshift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.message);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.name);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.toString());

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.pop("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.shift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.unshift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections != true) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections.valueOf()) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections[0]);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.splice(), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at !== -1 && unhandledRejections[at] === promise) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections[0]);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.indexOf(promise) !== -1);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport < -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] = "new reason", promise);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 10);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       trackUnhandledRejections = false();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || true) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(0);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, 1);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(true, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "some other reason");

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(0, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args[0]);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice(1));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, [args]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat(value));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].call(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].bind(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].toString(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(this, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.map(function (x) {
+     return x * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, [args]);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.progress);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.cancel(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.length);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[1]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.resolve(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.defer(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.reject(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.resolve(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.defer(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(0).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.any().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.race().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.none().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.reject(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(0, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array[0]);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice(1));

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat(1));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === undefined) {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("foo");

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return resolve(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.rejected) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.pending) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.then());

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.catch());

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.resolve());

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, Q.reject, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, reject);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, resolve);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg * 2);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg - 1);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.constructor === StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(undefined);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return resolve(exception);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return deferred.reject(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback.bind(null, result));

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback.bind(null, result.value));

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.defer(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(undefined, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(Q.reject(new Error("Something went wrong")), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, resolve, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, resolve);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, {});

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(undefined));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(Math.random()));

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(undefined, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(generator, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.apply(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.call(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "next"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "return"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "reject");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.resolve(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all("foo")], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(123)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(self));

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.map(function (x) {
+     return x + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.length);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.defer(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({}).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, undefined);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, "foo", args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.resolve(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.notify(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.cancel, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.reject(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(undefined).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q({}).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", ["key"]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [undefined]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key + 1, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.reject(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.defer(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.all(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q({}).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, 1]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key + 1, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setValue", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setProperty", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, 1]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, undefined]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.reject(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.resolve(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.all(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q({}).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, null]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("del", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, "value"]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, null]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.defer(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(42).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, 1]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("patch", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.reject(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.resolve(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.defer(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q({}).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("patch", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(promises, 1), 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(deferred.promise, 1), 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("patch", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, -1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments.length)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(void 0)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1 + 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, "hello")]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, undefined)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice()]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.reject(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(function () {}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("concat", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args, 1]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [this, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.slice()]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.concat()]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("concat", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, 1]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, "foo"]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, function () {
+     return "bar";
+   }]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.reject(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.resolve(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.defer(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q({}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("post", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1 + 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("eval", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q({});

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 1)));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 3)));

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, arguments.length - 1);

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, -1))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(arguments, 2)))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["foo"]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.resolve(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.foo).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object[bar]).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.baz).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("filter", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("slice", [1]);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [undefined]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   !isPromise(promise)

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return null;
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.catch(function () {
+     return null;
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.finally(function () {
+     return null;
+   })) &&

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat([]));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.filter(Boolean));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress + 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress - 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress * 2
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(this.then(function (promises) {
+     return all(array_map(promises, function (promise) {
+       promise = Q(promise);
+       function regardless() {
+         return promise.inspect();
+       }
+     }));
+   }));

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises[0] === 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === promises.length) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.all();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.reject(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.then(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, function () {
+     throw new Error("test");
+   }, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.then(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(index);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(progress);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.inspect(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return some(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(undefined);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.reject());

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled", "allRejected");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "anyRejected");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "noneSettled");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_concat(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(0, promises.length - 1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat(["dummy promise"]), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.reverse(), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function () {
+     throw new Error("Buggy code");
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function () {
+     return Q.reject("Buggy code");
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function () {
+     return Q.resolve("Buggy code");
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, null, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, undefined, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, false, noop);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved({});

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.reverse()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.concat(promises)).allSettled();

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.inspect.rejected();

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.inspect.value();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(noop, noop);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(rejected, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(noop, regardless);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, null);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject("error message")).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(() => {}, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, rejected("new error message"));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(rejected, null);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(function () {}, rejected);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, progressed.bind(this));

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q("foo").then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(() => {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, NaN, progressed);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.reject(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.resolve(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.defer(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q("foo")["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.bind(null));

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.apply(null));

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.call(null));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.defer(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.apply());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.bind());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress.bind(null));

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q("hello").done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, progressed, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.catch());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.finally());

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progress, "extra argument") :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progress, null) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, () => {}) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(undefined));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, void 0);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(true, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, function () {
+     onUnhandledError();
+   });

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Timeout"));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "Timeout");

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(Q.reject("error")).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(-1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(null, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error());

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           Q.reject(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error("different error"));

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           undefined(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === 0) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.reject(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q({}).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(-1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.reject(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.resolve(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.defer(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(() => {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice.length(args);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice("foo");

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(true));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(false));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fcall(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.nfapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.nfcall(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.shift()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject("error"));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.splice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback === null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.splice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.unshift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, -1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.fapply(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.nfapply(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.denodeify(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.shift()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift({});

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat([]));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments), 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.shift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice.length(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (error) {}));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[0]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[1]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments.length);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           deferred(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           this(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           null(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat(null)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(args, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(baseArgs, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, "hello");

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat(["new argument"]));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.filter(function (arg) {
+     return arg !== "new argument";
+   }));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(args));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.reverse());

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + "foo", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.length, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat([1]));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.map(function (x) {
+     return x + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extraArg"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(nodeArgs);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       undefined(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("pre", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.slice(0, -1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, nodeArgs.length - 1);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.reject]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.resolve]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject("custom error message"));

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.reject(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.resolve(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.defer(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q({}).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(!nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback + 1);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback.call(null));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback + 1) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback.call()) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback({}, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, function () {});

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail.head");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.then("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.catch("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.finally("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + "head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" - "head");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.reject(error));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(new Error("Can't get value from closed queue")))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               next.reject(end);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.66 |      151 |        87 |       1803 |        0 |        0 |
 q.js     |   11.78 |      151 |        87 |       1783 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         20 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m15:00:45 (3160) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m15:00:45 (3160) INFO MutationTestExecutor[39m Done in 235 minutes 31 seconds.

real	235m33.046s
user	41m26.894s
sys	7m9.916s
