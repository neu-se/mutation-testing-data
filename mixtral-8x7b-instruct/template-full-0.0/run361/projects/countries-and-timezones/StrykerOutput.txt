*** using precomputed mutations ***
[32m08:08:21 (2482) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m08:08:21 (2482) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m08:08:21 (2482) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/countries-and-timezones/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m08:08:21 (2482) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m08:08:21 (2482) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m08:08:22 (2482) INFO ProjectReader[39m Found 3 of 481 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 196 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in build-country.js: !name replaced with name === ''
Mutant 1 in build-country.js: !name replaced with typeof name === 'undefined'
Mutant 2 in build-country.js: !name replaced with !data.countries[id]
Mutant 3 in build-country.js: getTimezonesMap replaced with data['timezonesMap'] || {}
Mutant 4 in build-country.js: data replaced with data.timezones
Mutant 5 in build-country.js: data replaced with window.data
Mutant 6 in build-country.js: data replaced with this.data
Mutant 7 in build-country.js: !timezonesMap replaced with timezonesMap === undefined
Mutant 8 in build-country.js: !timezonesMap replaced with timezonesMap?.length
Mutant 9 in build-country.js: !timezonesMap replaced with Object.keys(data).length === 0
Mutant 10 in build-country.js: data replaced with data.timezones
Mutant 11 in build-country.js: data replaced with {}
Mutant 12 in build-country.js: data replaced with data.timezones[0]
Mutant 13 in build-country.js: data.timezones replaced with data['timezones']
Mutant 14 in build-country.js: !countries replaced with countries.length === 0
Mutant 15 in build-country.js: !countries replaced with Array.isArray(countries) && countries.length === 0
Mutant 16 in build-country.js: !result[country] replaced with result[country] === undefined
Mutant 17 in build-country.js: !result[country] replaced with 'country' in result
Mutant 18 in build-country.js: !result[country] replaced with Object.prototype.hasOwnProperty.call(result, country)
Mutant 19 in build-country.js: result replaced with null
Mutant 20 in build-country.js: result replaced with {}
Mutant 21 in build-country.js: result replaced with [id]
Mutant 22 in build-country.js: {
  [country]: {
    current: [],
    all: []
  }
} replaced with {
  [country]: {
    current: [id],
    all: [id]
  }
}
Mutant 23 in build-country.js: {
  [country]: {
    current: [],
    all: []
  }
} replaced with {
  [country]: {
    current: result.current,
    all: result.all
  }
}
Mutant 24 in build-country.js: {
  [country]: {
    current: [],
    all: []
  }
} replaced with {
  [country]: {
    current: data.timezones[id].r,
    all: data.timezones[id].r
  }
}
Mutant 25 in build-country.js: tz.r === undefined replaced with tz.r === null
Mutant 26 in build-country.js: id replaced with 'some-random-id'
Mutant 27 in build-country.js: id replaced with Math.random()
Mutant 28 in build-country.js: id replaced with data.timezones[Math.floor(Math.random() * Object.keys(data.timezones).length)]
Mutant 29 in build-country.js: id replaced with '0'
Mutant 30 in build-country.js: id replaced with null
Mutant 31 in build-country.js: id replaced with timezonesMap[country].all
Mutant 32 in build-timezone.js: !timezone replaced with timezone === null
Mutant 33 in build-timezone.js: !timezone replaced with timezone.hasOwnProperty('name')
Mutant 34 in build-timezone.js: !timezone replaced with typeof timezone === 'undefined'
Mutant 35 in build-timezone.js: tz.d replaced with 0
Mutant 36 in build-timezone.js: tz.d replaced with tz.u
Mutant 37 in build-timezone.js: getOffsetStr replaced with '0'
Mutant 38 in build-timezone.js: utcOffset replaced with 1 * utcOffset
Mutant 39 in build-timezone.js: utcOffset replaced with Math.abs(utcOffset)
Mutant 40 in build-timezone.js: utcOffset replaced with data.timezones[name].u
Mutant 41 in build-timezone.js: dstOffset replaced with 0
Mutant 42 in build-timezone.js: dstOffset replaced with Math.random()
Mutant 43 in build-timezone.js: dstOffset replaced with utcOffset
Mutant 44 in build-timezone.js: timezone.r replaced with timezone.hasOwnProperty('r')
Mutant 45 in build-timezone.js: Math.floor replaced with Math.ceil
Mutant 46 in build-timezone.js: Math.floor replaced with Math.abs
Mutant 47 in build-timezone.js: offset / 60 replaced with Math.floor(offset) / 30
Mutant 48 in build-timezone.js: offset / 60 replaced with offset * 0.016666667
Mutant 49 in build-timezone.js: offset / 60 replaced with offset >> 2
Mutant 50 in build-timezone.js: getNumStr replaced with `${sign}${hours}:${min < 10 ? '0' + min : min}`
Mutant 51 in build-timezone.js: hours replaced with '10' * 1
Mutant 52 in build-timezone.js: hours replaced with Math.random() * 24
Mutant 53 in build-timezone.js: hours replaced with timezone.utcOffset
Mutant 54 in build-timezone.js: min replaced with 60 * Math.floor(offset / 3600)
Mutant 55 in build-timezone.js: min replaced with Math.abs(offset) % 60
Mutant 56 in build-timezone.js: min replaced with data.timezones[name].offset % 60
Mutant 57 in build-timezone.js: Math.abs replaced with input
Mutant 58 in build-timezone.js: input replaced with Math.floor(input)
Mutant 59 in index.js: data.timezones replaced with data['timezones']
Mutant 60 in index.js: data.timezones replaced with data.timezones || {}
Mutant 61 in index.js: data.timezones replaced with data.timeZones
Mutant 62 in index.js: data.countries replaced with data['countries']
Mutant 63 in index.js: data.countries replaced with data.timezones
Mutant 64 in index.js: data.countries replaced with data.countries.slice(0)
Mutant 65 in index.js: Object.assign(prev, {
  [id]: getCountry(id, options)
}) replaced with Object.assign(prev, {
  [id]: {
    ...buildCountry(data, id)
  }
})
Mutant 66 in index.js: Object.assign(prev, {
  [id]: getCountry(id, options)
}) replaced with Object.assign(prev, {
  [id]: {
    ...data.countries[id]
  }
})
Mutant 67 in index.js: prev replaced with prev || {}
Mutant 68 in index.js: prev replaced with {
  id
}
Mutant 69 in index.js: {
  [id]: getCountry(id, options)
} replaced with {
  [id]: buildCountry(data, id)
}
Mutant 70 in index.js: {
  [id]: getCountry(id, options)
} replaced with {
  [id]: {}
}
Mutant 71 in index.js: {
  [id]: getCountry(id, options)
} replaced with {
  [id]: getCountry(id + 1, options)
}
Mutant 72 in index.js: getCountry(id, options) replaced with getCountry(data.countries[id])
Mutant 73 in index.js: getCountry(id, options) replaced with getCountry(id + ', ' + options)
Mutant 74 in index.js: getCountry(id, options) replaced with getCountry(options.id)
Mutant 75 in index.js: id replaced with 'id'
Mutant 76 in index.js: id replaced with 123
Mutant 77 in index.js: id replaced with Math.random()
Mutant 78 in index.js: options replaced with options || {}
Mutant 79 in index.js: options replaced with options && options.someProperty
Mutant 80 in index.js: totalTimezones !== memoizedTimezones replaced with totalTimezones === 0
Mutant 81 in index.js: totalTimezones !== memoizedTimezones replaced with memoizedTimezones > totalTimezones
Mutant 82 in index.js: totalTimezones !== memoizedTimezones replaced with data.timezones.length !== 0
Mutant 83 in index.js: data.timezones replaced with data['timezones']
Mutant 84 in index.js: data.timezones replaced with data.timezones.slice()
Mutant 85 in index.js: data.timezones replaced with data.timeZones
Mutant 86 in index.js: getTimezone replaced with data.timezones[name]
Mutant 87 in index.js: getTimezone replaced with getTimezone(Math.random() * totalTimezones | 0)
Mutant 88 in index.js: deliverTimezones(timezones, options) replaced with deliverTimezones(data.timezones, options)
Mutant 89 in index.js: deliverTimezones replaced with countries[id].timezones
Mutant 90 in index.js: timezones replaced with data.timezones
Mutant 91 in index.js: timezones replaced with timezones || {}
Mutant 92 in index.js: options replaced with null
Mutant 93 in index.js: options replaced with {}
Mutant 94 in index.js: options replaced with options.filter(t => t.deprecated)
Mutant 95 in index.js: !countries[id] replaced with countries[id] === undefined
Mutant 96 in index.js: !countries[id] replaced with !Object.prototype.hasOwnProperty.call(countries, id)
Mutant 97 in index.js: !countries[id] replaced with countries.hasOwnProperty(id) === false
Mutant 98 in index.js: buildCountry(data, id) replaced with {
  id: 'non-existent-country-id'
}
Mutant 99 in index.js: buildCountry(data, id) replaced with null
Mutant 100 in index.js: buildCountry(data, id) replaced with buildCountry(data, 'non-existent-country-id')
Mutant 101 in index.js: buildCountry(data, id) replaced with buildCountry({})
Mutant 102 in index.js: buildCountry replaced with data.buildCountry
Mutant 103 in index.js: data replaced with data + 1
Mutant 104 in index.js: id replaced with 'id'
Mutant 105 in index.js: id replaced with 1
Mutant 106 in index.js: id replaced with Math.random()
Mutant 107 in index.js: deliverCountry(countries[id], options) replaced with deliverCountry(options.country)
Mutant 108 in index.js: deliverCountry(countries[id], options) replaced with deliverCountry(countries[id + 1])
Mutant 109 in index.js: deliverCountry replaced with countries[id]
Mutant 110 in index.js: countries[id] replaced with countries['id']
Mutant 111 in index.js: options replaced with {}
Mutant 112 in index.js: options replaced with options || {}
Mutant 113 in index.js: options replaced with options && options.someProperty
Mutant 114 in index.js: !country replaced with country === null
Mutant 115 in index.js: !country replaced with Object.keys(countries).length === 0
Mutant 116 in index.js: !country replaced with countries.hasOwnProperty(country.id)
Mutant 117 in index.js: !timezones[name] replaced with timezones[name] === undefined
Mutant 118 in index.js: !timezones[name] replaced with !(name in timezones)
Mutant 119 in index.js: !timezones[name] replaced with !Object.prototype.hasOwnProperty.call(timezones, name)
Mutant 120 in index.js: buildTimezone(data, name) replaced with null
Mutant 121 in index.js: buildTimezone(data, name) replaced with buildTimezone(data, 'incorrectName')
Mutant 122 in index.js: buildTimezone(data, name) replaced with buildTimezone(null)
Mutant 123 in index.js: buildTimezone(data, name) replaced with buildTimezone(data, Math.random())
Mutant 124 in index.js: buildTimezone replaced with data.timezones[name]
Mutant 125 in index.js: buildTimezone replaced with timezones[name] || {}
Mutant 126 in index.js: data replaced with {}
Mutant 127 in index.js: data replaced with data + 0
Mutant 128 in index.js: data replaced with data.nonexistentProperty
Mutant 129 in index.js: name replaced with '<name>'
Mutant 130 in index.js: name replaced with 123
Mutant 131 in index.js: name replaced with Math.random()
Mutant 132 in index.js: !timezone replaced with timezone === null
Mutant 133 in index.js: !timezone replaced with timezone === undefined
Mutant 134 in index.js: !timezone replaced with Object.keys(timezone).length === 0
Mutant 135 in index.js: timezone replaced with data.timezones
Mutant 136 in index.js: timezone replaced with timezones['undefined']
Mutant 137 in index.js: timezone replaced with timezones.length
Mutant 138 in index.js: getTimezone replaced with data.timezones[tzName]
Mutant 139 in index.js: getTimezone replaced with timezones['invalid_key']
Mutant 140 in index.js: tzName replaced with 'constant'
Mutant 141 in index.js: tzName replaced with 12345
Mutant 142 in index.js: tzName replaced with Math.random()
Mutant 143 in index.js: values.map replaced with values.filter
Mutant 144 in index.js: values.map replaced with values.reduce
Mutant 145 in index.js: values.map replaced with values.forEach
Mutant 146 in index.js: c => getCountry(c, options) replaced with () => getCountry(options, id)
Mutant 147 in index.js: c => getCountry(c, options) replaced with () => getTimezone(id)
Mutant 148 in index.js: c => getCountry(c, options) replaced with () => ({
  id
})
Mutant 149 in index.js: getCountry replaced with 'constant string'
Mutant 150 in index.js: c replaced with 'id'
Mutant 151 in index.js: c replaced with countries[id]
Mutant 152 in index.js: c replaced with {}
Mutant 153 in index.js: options replaced with {}
Mutant 154 in index.js: options replaced with options || {}
Mutant 155 in index.js: getCountriesForTimezone(tzName, options) replaced with getCountriesForTimezone('UTC')
Mutant 156 in index.js: getCountriesForTimezone replaced with countries[countryId]
Mutant 157 in index.js: tzName replaced with 'UTC'
Mutant 158 in index.js: tzName replaced with 12345
Mutant 159 in index.js: options replaced with {}
Mutant 160 in index.js: options replaced with null
Mutant 161 in index.js: options replaced with options || {}
Mutant 162 in index.js: getCountry(countryId, options) replaced with getCountry('0')
Mutant 163 in index.js: getCountry(countryId, options) replaced with getCountry(null)
Mutant 164 in index.js: getCountry replaced with data.countries[countryId]
Mutant 165 in index.js: countryId replaced with '0'
Mutant 166 in index.js: countryId replaced with data.countries['0']
Mutant 167 in index.js: countryId replaced with Math.random()
Mutant 168 in index.js: options replaced with {}
Mutant 169 in index.js: options replaced with null
Mutant 170 in index.js: options replaced with options || {}
Mutant 171 in index.js: !country replaced with country === null
Mutant 172 in index.js: !country replaced with Object.keys(country).length === 0
Mutant 173 in index.js: !country replaced with typeof country === 'undefined'
Mutant 174 in index.js: values.map replaced with values.filter
Mutant 175 in index.js: values.map replaced with values.reduce
Mutant 176 in index.js: values.map replaced with values.forEach
Mutant 177 in index.js: getTimezone replaced with getTimezone('non-existent')
Mutant 178 in index.js: getTimezone replaced with getTimezone(null)
Mutant 179 in index.js: deprecated === true replaced with 'deprecated' in options
Mutant 180 in index.js: deprecated === true replaced with options.hasOwnProperty('deprecated')
Mutant 181 in index.js: deprecated === true replaced with Object.prototype.toString.call(options.deprecated) === '[object Boolean]' && options.deprecated
Mutant 182 in index.js: tzs replaced with Object.values(tzs)
Mutant 183 in index.js: tzs replaced with tzs.slice()
Mutant 184 in index.js: tzs replaced with Object.keys(tzs).reduce((obj, key) => {
  obj[key] = tzs[key];
  return obj;
}, {})
Mutant 185 in index.js: !tzs[key].deprecated replaced with key in tzs
Mutant 186 in index.js: Object.assign(prev, {
  [key]: tzs[key]
}) replaced with Object.assign(prev, {
  [key]: {
    ...tzs[key]
  }
})
Mutant 187 in index.js: Object.assign(prev, {
  [key]: tzs[key]
}) replaced with Object.assign(prev, {
  [key]: tzs[key].name
})
Mutant 188 in index.js: Object.assign(prev, {
  [key]: tzs[key]
}) replaced with Object.assign(prev, {
  [key]: getTimezone(tzs[key].name)
})
Mutant 189 in index.js: prev replaced with Object.assign({}, prev)
Mutant 190 in index.js: {
  [key]: tzs[key]
} replaced with {
  [key]: tzs[key],
  deprecated: true
}
Mutant 191 in index.js: {
  [key]: tzs[key]
} replaced with {
  [key]: tzs[key + 1]
}
Mutant 192 in index.js: {
  [key]: tzs[key]
} replaced with {
  [key]: tzs[key].name
}
Mutant 193 in index.js: !country replaced with country === null
Mutant 194 in index.js: !country replaced with Object.keys(country).length === 0
Mutant 195 in index.js: !country replaced with typeof country === 'undefined'
[32m08:08:22 (2482) INFO Instrumenter[39m Instrumented 3 source file(s) with 196 mutant(s)
[32m08:08:22 (2482) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m08:08:23 (2482) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m08:08:23 (2482) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m08:08:25 (2482) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 2 seconds (net 2381 ms, overhead 1 ms).
Mutation testing 3% (elapsed: <1m, remaining: ~5m) 6/196 tested (2 survived, 0 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~4m) 13/196 tested (3 survived, 0 timed out)
Mutation testing 10% (elapsed: <1m, remaining: ~4m) 20/196 tested (5 survived, 0 timed out)
Mutation testing 14% (elapsed: <1m, remaining: ~4m) 28/196 tested (5 survived, 0 timed out)
Mutation testing 17% (elapsed: <1m, remaining: ~3m) 35/196 tested (6 survived, 0 timed out)
Mutation testing 21% (elapsed: ~1m, remaining: ~3m) 42/196 tested (7 survived, 0 timed out)
Mutation testing 25% (elapsed: ~1m, remaining: ~3m) 49/196 tested (9 survived, 0 timed out)
Mutation testing 28% (elapsed: ~1m, remaining: ~3m) 56/196 tested (10 survived, 0 timed out)
Mutation testing 32% (elapsed: ~1m, remaining: ~3m) 63/196 tested (14 survived, 0 timed out)
Mutation testing 35% (elapsed: ~1m, remaining: ~3m) 70/196 tested (15 survived, 0 timed out)
Mutation testing 39% (elapsed: ~1m, remaining: ~2m) 78/196 tested (15 survived, 0 timed out)
Mutation testing 43% (elapsed: ~2m, remaining: ~2m) 85/196 tested (18 survived, 0 timed out)
Mutation testing 47% (elapsed: ~2m, remaining: ~2m) 93/196 tested (19 survived, 0 timed out)
Mutation testing 51% (elapsed: ~2m, remaining: ~2m) 100/196 tested (22 survived, 0 timed out)
Mutation testing 55% (elapsed: ~2m, remaining: ~2m) 108/196 tested (22 survived, 0 timed out)
Mutation testing 58% (elapsed: ~2m, remaining: ~1m) 115/196 tested (24 survived, 0 timed out)
Mutation testing 62% (elapsed: ~2m, remaining: ~1m) 122/196 tested (27 survived, 0 timed out)
Mutation testing 65% (elapsed: ~3m, remaining: ~1m) 129/196 tested (27 survived, 0 timed out)
Mutation testing 69% (elapsed: ~3m, remaining: ~1m) 136/196 tested (28 survived, 0 timed out)
Mutation testing 72% (elapsed: ~3m, remaining: ~1m) 143/196 tested (28 survived, 0 timed out)
Mutation testing 76% (elapsed: ~3m, remaining: ~1m) 150/196 tested (28 survived, 0 timed out)
Mutation testing 79% (elapsed: ~3m, remaining: <1m) 156/196 tested (29 survived, 0 timed out)
Mutation testing 83% (elapsed: ~3m, remaining: <1m) 163/196 tested (30 survived, 0 timed out)
Mutation testing 86% (elapsed: ~4m, remaining: <1m) 169/196 tested (30 survived, 0 timed out)
Mutation testing 89% (elapsed: ~4m, remaining: <1m) 176/196 tested (32 survived, 0 timed out)
Mutation testing 92% (elapsed: ~4m, remaining: <1m) 182/196 tested (35 survived, 0 timed out)
Mutation testing 96% (elapsed: ~4m, remaining: <1m) 189/196 tested (38 survived, 0 timed out)

All tests
  ✓ All tests (killed 157)

[Survived] PrecomputedMutator
src/build-country.js:5:7
-     if (!name) return null;
+     if (typeof name === 'undefined') return null;

[Survived] PrecomputedMutator
src/build-country.js:5:7
-     if (!name) return null;
+     if (!data.countries[id]) return null;

[Survived] PrecomputedMutator
src/build-country.js:18:7
-     if (!timezonesMap) timezonesMap = buildTimezonesMap(data);
+     if (timezonesMap === undefined) timezonesMap = buildTimezonesMap(data);

[Survived] PrecomputedMutator
src/build-country.js:23:22
-     return Object.keys(data.timezones).reduce((result, id) => {
+     return Object.keys(data['timezones']).reduce((result, id) => {

[Survived] PrecomputedMutator
src/build-country.js:32:11
-         if (!result[country]) Object.assign(result, { [country]: { current: [], all: [] } });
+         if (result[country] === undefined) Object.assign(result, { [country]: { current: [], all: [] } });

[Survived] PrecomputedMutator
src/build-timezone.js:3:7
-     if (!timezone) return null;
+     if (typeof timezone === 'undefined') return null;

[Survived] PrecomputedMutator
src/build-timezone.js:20:32
-       utcOffsetStr: getOffsetStr(utcOffset),
+       utcOffsetStr: getOffsetStr(1 * utcOffset),

[Survived] PrecomputedMutator
src/build-timezone.js:25:7
-     if (timezone.r) result.deprecated = true;
+     if (timezone.hasOwnProperty('r')) result.deprecated = true;

[Survived] PrecomputedMutator
src/build-timezone.js:30:17
-     const hours = Math.floor(offset / 60);
+     const hours = Math.ceil(offset / 60);

[Survived] PrecomputedMutator
src/build-timezone.js:34:50
-     return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;
+     return `${sign}${getNumStr(hours)}:${getNumStr(Math.abs(offset) % 60)}`;

[Survived] PrecomputedMutator
src/build-timezone.js:38:24
-     const num = Math.abs(input);
+     const num = Math.abs(Math.floor(input));

[Survived] PrecomputedMutator
src/index.js:5:36
-   const totalTimezones = Object.keys(data.timezones).length;
+   const totalTimezones = Object.keys(data['timezones']).length;

[Survived] PrecomputedMutator
src/index.js:5:36
-   const totalTimezones = Object.keys(data.timezones).length;
+   const totalTimezones = Object.keys(data.timezones || {}).length;

[Survived] PrecomputedMutator
src/index.js:11:22
-     return Object.keys(data.countries).reduce((prev, id) => {
+     return Object.keys(data['countries']).reduce((prev, id) => {

[Survived] PrecomputedMutator
src/index.js:12:26
-       return Object.assign(prev, { [id]: getCountry(id, options) });
+       return Object.assign(prev || {}, { [id]: getCountry(id, options) });

[Survived] PrecomputedMutator
src/index.js:12:55
-       return Object.assign(prev, { [id]: getCountry(id, options) });
+       return Object.assign(prev, { [id]: getCountry(id, options || {}) });

[Survived] PrecomputedMutator
src/index.js:17:7
-     if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);
+     if (data.timezones.length !== 0) Object.keys(data.timezones).forEach(getTimezone);

[Survived] PrecomputedMutator
src/index.js:17:57
-     if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);
+     if (totalTimezones !== memoizedTimezones) Object.keys(data['timezones']).forEach(getTimezone);

[Survived] PrecomputedMutator
src/index.js:18:27
-     return deliverTimezones(timezones, options);
+     return deliverTimezones(timezones || {}, options);

[Survived] PrecomputedMutator
src/index.js:22:7
-     if (!countries[id]) memoizeCountry(buildCountry(data, id));
+     if (countries[id] === undefined) memoizeCountry(buildCountry(data, id));

[Survived] PrecomputedMutator
src/index.js:22:7
-     if (!countries[id]) memoizeCountry(buildCountry(data, id));
+     if (!Object.prototype.hasOwnProperty.call(countries, id)) memoizeCountry(buildCountry(data, id));

[Survived] PrecomputedMutator
src/index.js:22:7
-     if (!countries[id]) memoizeCountry(buildCountry(data, id));
+     if (countries.hasOwnProperty(id) === false) memoizeCountry(buildCountry(data, id));

[Survived] PrecomputedMutator
src/index.js:23:40
-     return deliverCountry(countries[id], options);
+     return deliverCountry(countries[id], options || {});

[Survived] PrecomputedMutator
src/index.js:27:7
-     if (!country) return;
+     if (country === null) return;

[Survived] PrecomputedMutator
src/index.js:32:7
-     if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));
+     if (timezones[name] === undefined) memoizeTimezone(buildTimezone(data, name));

[Survived] PrecomputedMutator
src/index.js:32:7
-     if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));
+     if (!(name in timezones)) memoizeTimezone(buildTimezone(data, name));

[Survived] PrecomputedMutator
src/index.js:32:7
-     if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));
+     if (!Object.prototype.hasOwnProperty.call(timezones, name)) memoizeTimezone(buildTimezone(data, name));

[Survived] PrecomputedMutator
src/index.js:37:7
-     if (!timezone) return;
+     if (timezone === null) return;

[Survived] PrecomputedMutator
src/index.js:45:42
-     return values.map((c) => getCountry(c, options));
+     return values.map((c) => getCountry(c, options || {}));

[Survived] PrecomputedMutator
src/index.js:49:50
-     const [main] = getCountriesForTimezone(tzName, options);
+     const [main] = getCountriesForTimezone(tzName, options || {});

[Survived] PrecomputedMutator
src/index.js:54:41
-     const country = getCountry(countryId, options);
+     const country = getCountry(countryId, options || {});

[Survived] PrecomputedMutator
src/index.js:55:7
-     if (!country) return null;
+     if (country === null) return null;

[Survived] PrecomputedMutator
src/index.js:62:7
-     if (deprecated === true) return tzs;
+     if ('deprecated' in options) return tzs;

[Survived] PrecomputedMutator
src/index.js:62:7
-     if (deprecated === true) return tzs;
+     if (options.hasOwnProperty('deprecated')) return tzs;

[Survived] PrecomputedMutator
src/index.js:62:7
-     if (deprecated === true) return tzs;
+     if (Object.prototype.toString.call(options.deprecated) === '[object Boolean]' && options.deprecated) return tzs;

[Survived] PrecomputedMutator
src/index.js:63:22
-     return Object.keys(tzs).reduce((prev, key) => {
+     return Object.keys(Object.keys(tzs).reduce((obj, key) => {
+     obj[key] = tzs[key];
+     return obj;
+   }, {})).reduce((prev, key) => {

[Survived] PrecomputedMutator
src/index.js:64:31
-       if (!tzs[key].deprecated) Object.assign(prev, { [key]: tzs[key] });
+       if (!tzs[key].deprecated) Object.assign(prev, {
+     [key]: {
+       ...tzs[key]
+     }
+   });

[Survived] PrecomputedMutator
src/index.js:64:31
-       if (!tzs[key].deprecated) Object.assign(prev, { [key]: tzs[key] });
+       if (!tzs[key].deprecated) Object.assign(prev, {
+     [key]: getTimezone(tzs[key].name)
+   });

[Survived] PrecomputedMutator
src/index.js:70:7
-     if (!country) return null;
+     if (typeof country === 'undefined') return null;

Ran 1.00 tests per mutant on average.
-------------------|---------|----------|-----------|------------|----------|----------|
File               | % score | # killed | # timeout | # survived | # no cov | # errors |
-------------------|---------|----------|-----------|------------|----------|----------|
All files          |   80.10 |      157 |         0 |         39 |        0 |        0 |
 build-country.js  |   84.38 |       27 |         0 |          5 |        0 |        0 |
 build-timezone.js |   77.78 |       21 |         0 |          6 |        0 |        0 |
 index.js          |   79.56 |      109 |         0 |         28 |        0 |        0 |
-------------------|---------|----------|-----------|------------|----------|----------|
[32m08:13:05 (2482) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/countries-and-timezones/reports/mutation/mutation.html
[32m08:13:05 (2482) INFO MutationTestExecutor[39m Done in 4 minutes 43 seconds.

real	4m45.136s
user	5m11.425s
sys	0m46.111s
