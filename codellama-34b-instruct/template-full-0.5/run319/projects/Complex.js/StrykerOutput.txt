*** using precomputed mutations ***
[32m12:39:14 (2830) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m12:39:14 (2830) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m12:39:14 (2830) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/Complex.js/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m12:39:14 (2830) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m12:39:14 (2830) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m12:39:14 (2830) INFO ProjectReader[39m Found 1 of 1982 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1166 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in complex.js: x replaced with x + 1
Mutant 1 in complex.js: x replaced with x * 2
Mutant 2 in complex.js: x replaced with x + 1
Mutant 3 in complex.js: x replaced with x * 2
Mutant 4 in complex.js: x replaced with x / 2
Mutant 5 in complex.js: Math.exp replaced with Math.cos
Mutant 6 in complex.js: Math.exp replaced with Math.sin
Mutant 7 in complex.js: Math.exp replaced with Math.tan
Mutant 8 in complex.js: -x replaced with x
Mutant 9 in complex.js: -x replaced with x + 1
Mutant 10 in complex.js: Math.abs replaced with Math.acos
Mutant 11 in complex.js: Math.abs replaced with Math.sin
Mutant 12 in complex.js: Math.abs replaced with Math.tan
Mutant 13 in complex.js: x replaced with x + 1
Mutant 14 in complex.js: x replaced with x * 2
Mutant 15 in complex.js: x replaced with x / 2
Mutant 16 in complex.js: Math.exp replaced with Math.sin
Mutant 17 in complex.js: Math.exp replaced with x => x + 1
Mutant 18 in complex.js: Math.exp replaced with x => x * 2
Mutant 19 in complex.js: x replaced with x * x
Mutant 20 in complex.js: x replaced with x / 2
Mutant 21 in complex.js: x replaced with x + 1
Mutant 22 in complex.js: Math.exp replaced with Math.sinh
Mutant 23 in complex.js: Math.exp replaced with Math.tanh
Mutant 24 in complex.js: Math.exp replaced with Math.asinh
Mutant 25 in complex.js: -x replaced with -y
Mutant 26 in complex.js: -x replaced with x + y
Mutant 27 in complex.js: -x replaced with x - y
Mutant 28 in complex.js: -b > x || x > b replaced with -b < x || x < b
Mutant 29 in complex.js: -b > x || x > b replaced with !(-b > x || x > b)
Mutant 30 in complex.js: -b > x || x > b replaced with -b > x && x > b
Mutant 31 in complex.js: Math.cos replaced with Math.sin
Mutant 32 in complex.js: Math.cos replaced with Math.tan
Mutant 33 in complex.js: Math.cos replaced with Math.acos
Mutant 34 in complex.js: x replaced with x + 1
Mutant 35 in complex.js: x replaced with x * 2
Mutant 36 in complex.js: x replaced with x / 2
Mutant 37 in complex.js: Math.abs replaced with Math.sqrt
Mutant 38 in complex.js: Math.abs replaced with Math.max
Mutant 39 in complex.js: Math.abs replaced with Math.min
Mutant 40 in complex.js: x replaced with y
Mutant 41 in complex.js: x replaced with x + y
Mutant 42 in complex.js: x replaced with x * y
Mutant 43 in complex.js: Math.abs replaced with Math.cos
Mutant 44 in complex.js: Math.abs replaced with Math.sqrt
Mutant 45 in complex.js: Math.abs replaced with Math.sin
Mutant 46 in complex.js: y replaced with a
Mutant 47 in complex.js: y replaced with b
Mutant 48 in complex.js: y replaced with a + b
Mutant 49 in complex.js: a < 3000 && b < 3000 replaced with a > 3000 && b > 3000
Mutant 50 in complex.js: a < 3000 && b < 3000 replaced with a !== 3000 && b !== 3000
Mutant 51 in complex.js: a < 3000 && b < 3000 replaced with a + b !== 3000
Mutant 52 in complex.js: a * a + b * b replaced with a + b
Mutant 53 in complex.js: a * a + b * b replaced with a * b
Mutant 54 in complex.js: a * a + b * b replaced with a / b
Mutant 55 in complex.js: a < b replaced with a > b
Mutant 56 in complex.js: a < b replaced with a == b
Mutant 57 in complex.js: a < b replaced with a * b
Mutant 58 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 59 in complex.js: Math.sqrt replaced with Math.exp
Mutant 60 in complex.js: Math.sqrt replaced with Math.log
Mutant 61 in complex.js: 1 + b * b replaced with b * b - 1
Mutant 62 in complex.js: 1 + b * b replaced with b * b + 1
Mutant 63 in complex.js: 1 + b * b replaced with b * b * 2
Mutant 64 in complex.js: SyntaxError replaced with TypeError
Mutant 65 in complex.js: SyntaxError replaced with ReferenceError
Mutant 66 in complex.js: SyntaxError replaced with EvalError
Mutant 67 in complex.js: 'Invalid Param' replaced with 'Invalid Parameter'
Mutant 68 in complex.js: 'Invalid Param' replaced with 'Invalid Argument'
Mutant 69 in complex.js: Math.abs replaced with Math.sqrt
Mutant 70 in complex.js: Math.abs replaced with Math.floor
Mutant 71 in complex.js: Math.abs replaced with Math.ceil
Mutant 72 in complex.js: a replaced with a * 2
Mutant 73 in complex.js: a replaced with a + b
Mutant 74 in complex.js: a replaced with a - b
Mutant 75 in complex.js: Math.abs replaced with Math.sqrt
Mutant 76 in complex.js: Math.abs replaced with Math.sin
Mutant 77 in complex.js: Math.abs replaced with Math.cos
Mutant 78 in complex.js: b replaced with -b
Mutant 79 in complex.js: b replaced with b * b
Mutant 80 in complex.js: b replaced with b + 1
Mutant 81 in complex.js: a === 0 replaced with a !== 0
Mutant 82 in complex.js: a === 0 replaced with a > 0
Mutant 83 in complex.js: a === 0 replaced with a < 0
Mutant 84 in complex.js: Math.log replaced with Math.sqrt
Mutant 85 in complex.js: Math.log replaced with Math.abs
Mutant 86 in complex.js: Math.log replaced with Math.sin
Mutant 87 in complex.js: _b replaced with _a
Mutant 88 in complex.js: _b replaced with _b * _b
Mutant 89 in complex.js: _b replaced with Math.sqrt(_a * _a + _b * _b)
Mutant 90 in complex.js: b === 0 replaced with b !== 0
Mutant 91 in complex.js: b === 0 replaced with a === b
Mutant 92 in complex.js: b === 0 replaced with a + b === 0
Mutant 93 in complex.js: Math.log replaced with Math.sqrt
Mutant 94 in complex.js: Math.log replaced with Math.abs
Mutant 95 in complex.js: Math.log replaced with Math.exp
Mutant 96 in complex.js: _a replaced with _b
Mutant 97 in complex.js: _a replaced with a
Mutant 98 in complex.js: _a < 3000 && _b < 3000 replaced with _a < 2999 && _b < 2999
Mutant 99 in complex.js: _a < 3000 && _b < 3000 replaced with _a < 3000 && _b < 2999
Mutant 100 in complex.js: _a < 3000 && _b < 3000 replaced with _a < 2999 || _b < 2999
Mutant 101 in complex.js: Math.log replaced with Math.exp
Mutant 102 in complex.js: Math.log replaced with Math.sin
Mutant 103 in complex.js: Math.log replaced with Math.cos
Mutant 104 in complex.js: a * a + b * b replaced with a * b + b * a
Mutant 105 in complex.js: a * a + b * b replaced with a * a - b * b
Mutant 106 in complex.js: a * a + b * b replaced with a + b * b
Mutant 107 in complex.js: Math.log replaced with Math.log10
Mutant 108 in complex.js: Math.log replaced with Math.log2
Mutant 109 in complex.js: Math.log replaced with Math.sqrt
Mutant 110 in complex.js: a * a + b * b replaced with a + b * b
Mutant 111 in complex.js: a * a + b * b replaced with a * a + c * b
Mutant 112 in complex.js: a * a + b * b replaced with a * b + c * d
Mutant 113 in complex.js: a === undefined || a === null replaced with a === undefined || a === null || a === NaN
Mutant 114 in complex.js: a === undefined || a === null replaced with a === undefined || a === null || a === Infinity
Mutant 115 in complex.js: a === undefined || a === null replaced with a === undefined || a === null || a === -Infinity
Mutant 116 in complex.js: b !== undefined replaced with b !== undefined && b !== null
Mutant 117 in complex.js: b !== undefined replaced with b !== undefined || b !== null
Mutant 118 in complex.js: b !== undefined replaced with b !== undefined && b !== null && b !== ""
Mutant 119 in complex.js: typeof a replaced with a === b
Mutant 120 in complex.js: typeof a replaced with a + b
Mutant 121 in complex.js: typeof a replaced with a * b
Mutant 122 in complex.js: 'im' in a && 're' in a replaced with 'im' in a && 're' in b
Mutant 123 in complex.js: 'im' in a && 're' in a replaced with 'im' in a || 're' in a
Mutant 124 in complex.js: 'im' in a && 're' in a replaced with 'im' in a && !('re' in a)
Mutant 125 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in a && 'arg' in b
Mutant 126 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in b && 'arg' in a
Mutant 127 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in a || 'arg' in b
Mutant 128 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with a['abs'] == Infinity && Number.isFinite(a['arg'])
Mutant 129 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with a['abs'] == -Infinity && Number.isFinite(a['arg'])
Mutant 130 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with a['abs'] == Infinity && a['arg'] == Infinity
Mutant 131 in complex.js: Number.isFinite replaced with !Number.isFinite
Mutant 132 in complex.js: Number.isFinite replaced with Number.isNaN
Mutant 133 in complex.js: Number.isFinite replaced with Number.isInfinite
Mutant 134 in complex.js: a['abs'] replaced with a['re']
Mutant 135 in complex.js: a['abs'] replaced with a['im']
Mutant 136 in complex.js: Number.isFinite replaced with !Number.isFinite
Mutant 137 in complex.js: Number.isFinite replaced with a['arg'] !== NaN
Mutant 138 in complex.js: Number.isFinite replaced with a['arg'] !== Number.POSITIVE_INFINITY
Mutant 139 in complex.js: a['arg'] replaced with a['re']
Mutant 140 in complex.js: a['arg'] replaced with a['im']
Mutant 141 in complex.js: Math.cos replaced with Math.sin
Mutant 142 in complex.js: Math.cos replaced with Math.tan
Mutant 143 in complex.js: Math.cos replaced with Math.acos
Mutant 144 in complex.js: a['arg'] replaced with a['arg'] + 1
Mutant 145 in complex.js: a['arg'] replaced with a['arg'] * 2
Mutant 146 in complex.js: a['arg'] replaced with a['arg'] - 1
Mutant 147 in complex.js: Math.sin replaced with Math.cos
Mutant 148 in complex.js: Math.sin replaced with Math.tan
Mutant 149 in complex.js: Math.sin replaced with Math.asin
Mutant 150 in complex.js: a['arg'] replaced with a['arg'] * 2
Mutant 151 in complex.js: a['arg'] replaced with a['arg'] + 1
Mutant 152 in complex.js: a['arg'] replaced with Math.PI / 2 - a['arg']
Mutant 153 in complex.js: 'r' in a && 'phi' in a replaced with 'r' in a && 'phi' in b
Mutant 154 in complex.js: 'r' in a && 'phi' in a replaced with 'r' in b && 'phi' in a
Mutant 155 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with a['r'] < 0 && a['phi'] > 0
Mutant 156 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with a['r'] > 0 || a['phi'] < 0
Mutant 157 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with a['r'] === 0 && a['phi'] === 0
Mutant 158 in complex.js: Number.isFinite replaced with !isFinite
Mutant 159 in complex.js: Number.isFinite replaced with Number.isNaN
Mutant 160 in complex.js: Number.isFinite replaced with a.constructor.isFinite
Mutant 161 in complex.js: a['r'] replaced with a['r'] + 1
Mutant 162 in complex.js: a['r'] replaced with a['r'] * 2
Mutant 163 in complex.js: Number.isFinite replaced with !Number.isFinite
Mutant 164 in complex.js: Number.isFinite replaced with Number.isNaN
Mutant 165 in complex.js: Number.isFinite replaced with Number.isSafeInteger
Mutant 166 in complex.js: a['phi'] replaced with a['theta']
Mutant 167 in complex.js: a['phi'] replaced with a.theta
Mutant 168 in complex.js: a['phi'] replaced with a.phi
Mutant 169 in complex.js: Math.cos replaced with Math.sin
Mutant 170 in complex.js: Math.cos replaced with Math.tan
Mutant 171 in complex.js: Math.cos replaced with Math.acos
Mutant 172 in complex.js: a['phi'] replaced with a['phi'] + 1
Mutant 173 in complex.js: a['phi'] replaced with a['phi'] * 2
Mutant 174 in complex.js: a['phi'] replaced with a['phi'] - 1
Mutant 175 in complex.js: Math.sin replaced with Math.cos
Mutant 176 in complex.js: Math.sin replaced with Math.tan
Mutant 177 in complex.js: Math.sin replaced with Math.asin
Mutant 178 in complex.js: a['phi'] replaced with a['arg']
Mutant 179 in complex.js: a['phi'] replaced with b['phi']
Mutant 180 in complex.js: a['phi'] replaced with a['phi'] + 1
Mutant 181 in complex.js: a.length === 2 replaced with a.length > 2
Mutant 182 in complex.js: a.length === 2 replaced with a.length < 2
Mutant 183 in complex.js: a.length === 2 replaced with a.length === 3
Mutant 184 in complex.js: a.match replaced with a.split
Mutant 185 in complex.js: a.match replaced with a.search
Mutant 186 in complex.js: a.match replaced with a.replace
Mutant 187 in complex.js: tokens === null replaced with tokens.length === 0
Mutant 188 in complex.js: tokens === null replaced with tokens[0] === null
Mutant 189 in complex.js: tokens === null replaced with tokens[0] === undefined
Mutant 190 in complex.js: for (var i = 0; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}

// Still something on the stack replaced with for (var i = 1; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}
Mutant 191 in complex.js: for (var i = 0; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}

// Still something on the stack replaced with for (var i = -1; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}
Mutant 192 in complex.js: for (var i = 0; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}

// Still something on the stack replaced with for (var i = a; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}
Mutant 193 in complex.js: for (var i = 0; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}

// Still something on the stack replaced with for (var i = 1; i <= tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}
Mutant 194 in complex.js: for (var i = 0; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}

// Still something on the stack replaced with for (var i = 0; i <= tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}
Mutant 195 in complex.js: for (var i = 0; i < tokens.length; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}

// Still something on the stack replaced with for (var i = 0; i < tokens.length - 1; i++) {
  var c = tokens[i];
  if (c === ' ' || c === '\t' || c === '\n') {
    /* void */
  } else if (c === '+') {
    plus++;
  } else if (c === '-') {
    minus++;
  } else if (c === 'i' || c === 'I') {
    if (plus + minus === 0) {
      parser_exit();
    }
    if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
      i++;
    } else {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
    }
    plus = minus = 0;
  } else {
    if (plus + minus === 0 || isNaN(c)) {
      parser_exit();
    }
    if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
      z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
      i++;
    } else {
      z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
    }
    plus = minus = 0;
  }
}
Mutant 196 in complex.js: i < tokens.length replaced with i <= tokens.length
Mutant 197 in complex.js: i < tokens.length replaced with i > tokens.length
Mutant 198 in complex.js: i < tokens.length replaced with i == tokens.length
Mutant 199 in complex.js: i++ replaced with i--
Mutant 200 in complex.js: i++ replaced with i += 2
Mutant 201 in complex.js: i++ replaced with j++
Mutant 202 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === ' ' || c === '\t' || c === '\n' || c === '+'
Mutant 203 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === ' ' || c === '\t' || c === '\n' || c === 'i'
Mutant 204 in complex.js: c === '+' replaced with c !== '+'
Mutant 205 in complex.js: c === '+' replaced with c === '-'
Mutant 206 in complex.js: c === '+' replaced with c === '*'
Mutant 207 in complex.js: c === '-' replaced with c !== '-'
Mutant 208 in complex.js: c === '-' replaced with c === '+'
Mutant 209 in complex.js: c === '-' replaced with c === '*'
Mutant 210 in complex.js: c === 'i' || c === 'I' replaced with c !== 'i' && c !== 'I'
Mutant 211 in complex.js: c === 'i' || c === 'I' replaced with c === 'j' || c === 'J'
Mutant 212 in complex.js: c === 'i' || c === 'I' replaced with c === 'k' || c === 'K'
Mutant 213 in complex.js: plus + minus === 0 replaced with plus + minus !== 0
Mutant 214 in complex.js: plus + minus === 0 replaced with plus - minus === 0
Mutant 215 in complex.js: plus + minus === 0 replaced with plus + minus === 1
Mutant 216 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) && tokens[i + 1] !== 'i'
Mutant 217 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) && tokens[i + 1] !== 'I'
Mutant 218 in complex.js: isNaN replaced with Number.isNaN
Mutant 219 in complex.js: isNaN replaced with !Number.isNaN
Mutant 220 in complex.js: tokens[i + 1] replaced with tokens[i - 1]
Mutant 221 in complex.js: tokens[i + 1] replaced with tokens[i + 2]
Mutant 222 in complex.js: tokens[i + 1] replaced with tokens[i] + 1
Mutant 223 in complex.js: parseFloat replaced with tokens[i + 1] * Math.PI
Mutant 224 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with (minus % 3 ? '-' : '') + tokens[i + 1]
Mutant 225 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with (minus % 2 ? '-' : '') + (tokens[i + 1] || 0)
Mutant 226 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with (minus % 2 ? '-' : '') + (tokens[i + 1] || tokens[i - 1])
Mutant 227 in complex.js: parseFloat replaced with "hello"
Mutant 228 in complex.js: parseFloat replaced with null
Mutant 229 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? '-' : '') + '0'
Mutant 230 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? '-' : '') + '2'
Mutant 231 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? '-' : '') + '3'
Mutant 232 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus === 1 || isNaN(c)
Mutant 233 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus === 0 && !isNaN(c)
Mutant 234 in complex.js: isNaN replaced with isFinite
Mutant 235 in complex.js: isNaN replaced with Number.isNaN
Mutant 236 in complex.js: c replaced with b
Mutant 237 in complex.js: c replaced with z
Mutant 238 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with tokens[i + 1] === 'i' || tokens[i + 1] === 'I' || tokens[i + 1] === 'j'
Mutant 239 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with tokens[i + 1] === 'i' || tokens[i + 1] === 'I' || tokens[i + 1] === 'e'
Mutant 240 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with tokens[i + 1] === 'i' || tokens[i + 1] === 'I' || tokens[i + 1] === 'π'
Mutant 241 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '+' : '-') + c
Mutant 242 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '*' : '/') + c
Mutant 243 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '+' : '-') + c + 1
Mutant 244 in complex.js: parseFloat replaced with parseInt
Mutant 245 in complex.js: parseFloat replaced with Number
Mutant 246 in complex.js: parseFloat replaced with Math.floor
Mutant 247 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 3 ? '-' : '') + c
Mutant 248 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '-' : '') + c + 1
Mutant 249 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '-' : '') + c * 2
Mutant 250 in complex.js: plus + minus > 0 replaced with plus > minus
Mutant 251 in complex.js: plus + minus > 0 replaced with minus > plus
Mutant 252 in complex.js: plus + minus > 0 replaced with plus !== minus
Mutant 253 in complex.js: isNaN replaced with !isNaN
Mutant 254 in complex.js: isNaN replaced with isFinite
Mutant 255 in complex.js: isNaN replaced with Number.isNaN
Mutant 256 in complex.js: z['re'] replaced with z['im']
Mutant 257 in complex.js: z['re'] replaced with z['re'] + z['im']
Mutant 258 in complex.js: z['re'] replaced with z['im'] * z['re']
Mutant 259 in complex.js: isNaN replaced with isFinite
Mutant 260 in complex.js: isNaN replaced with !isNaN
Mutant 261 in complex.js: z['im'] replaced with z['re']
Mutant 262 in complex.js: z['im'] replaced with z['abs']
Mutant 263 in complex.js: z['im'] replaced with z['arg']
Mutant 264 in complex.js: !(this instanceof Complex) replaced with this instanceof Number
Mutant 265 in complex.js: !(this instanceof Complex) replaced with this instanceof Object
Mutant 266 in complex.js: parse(a, b) replaced with parse(a + b)
Mutant 267 in complex.js: parse(a, b) replaced with parse(a * b)
Mutant 268 in complex.js: parse(a, b) replaced with parse(a - b)
Mutant 269 in complex.js: a replaced with a + 1
Mutant 270 in complex.js: a replaced with a * 2
Mutant 271 in complex.js: a replaced with a - 10
Mutant 272 in complex.js: b replaced with 1
Mutant 273 in complex.js: b replaced with 0
Mutant 274 in complex.js: b replaced with null
Mutant 275 in complex.js: this['abs'] replaced with this['re'] + this['im']
Mutant 276 in complex.js: this['abs'] replaced with this['re'] * this['im']
Mutant 277 in complex.js: this['abs'] replaced with this['re'] / this['im']
Mutant 278 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 279 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with !this['isInfinite']() && !z['isInfinite']()
Mutant 280 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() !== z['isInfinite']()
Mutant 281 in complex.js: this['isInfinite'] replaced with this['isInfinite'] + 1
Mutant 282 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 283 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 284 in complex.js: z['isInfinite'] replaced with z['isZero']
Mutant 285 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 286 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']() || this['re'] === z['re']
Mutant 287 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']() || this['re'] === z['im']
Mutant 288 in complex.js: this['isInfinite'] replaced with c['isInfinite']
Mutant 289 in complex.js: this['isInfinite'] replaced with d['isInfinite']
Mutant 290 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 291 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 292 in complex.js: z['isInfinite'] replaced with !z['isInfinite']
Mutant 293 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 294 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() && !z['isInfinite']()
Mutant 295 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with !this['isInfinite']() && z['isInfinite']()
Mutant 296 in complex.js: this['isInfinite'] replaced with this['isFinite']
Mutant 297 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 298 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 299 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 300 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with z['isInfinite']() || this['isInfinite']()
Mutant 301 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with !this['isInfinite']() && z['isInfinite']()
Mutant 302 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with z['isInfinite']() && this['isInfinite']()
Mutant 303 in complex.js: this['isInfinite'] replaced with this['isFinite']
Mutant 304 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 305 in complex.js: z['isInfinite'] replaced with z['isInfinite'] = true
Mutant 306 in complex.js: z['isInfinite'] replaced with z['im'] = NaN
Mutant 307 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with this['isInfinite']() && !z['isZero']() || this['isZero']() && z['isInfinite']()
Mutant 308 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with this['isInfinite']() && z['isZero']() || this['isZero']() && !z['isInfinite']()
Mutant 309 in complex.js: z['isZero'] replaced with z['abs']
Mutant 310 in complex.js: z['isZero'] replaced with z['re']
Mutant 311 in complex.js: this['isZero'] replaced with this['im'] !== 0
Mutant 312 in complex.js: this['isZero'] replaced with z['re'] !== 0
Mutant 313 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 314 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 315 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 316 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with !this['isInfinite']() || !z['isInfinite']()
Mutant 317 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 318 in complex.js: this['isInfinite'] replaced with z['isNaN']
Mutant 319 in complex.js: this['isInfinite'] replaced with z['isInfinite'] && this['isInfinite']
Mutant 320 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 321 in complex.js: z['isInfinite'] replaced with z['im'] !== 0
Mutant 322 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] === 0 && this['re'] === 0
Mutant 323 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] === 0 && this['im'] !== 0
Mutant 324 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] !== 0 && this['im'] === 0
Mutant 325 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() || this['re'] === 0 && this['im'] === 0
Mutant 326 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() || this['re'] !== 0 && this['im'] !== 0
Mutant 327 in complex.js: this['isZero'] replaced with this['abs']
Mutant 328 in complex.js: z['isZero'] replaced with z['isNaN']
Mutant 329 in complex.js: z['isZero'] replaced with z['isFinite']
Mutant 330 in complex.js: this['isInfinite'] replaced with this['isInfinite'] + 1
Mutant 331 in complex.js: this['isInfinite'] replaced with this['isInfinite'] * 2
Mutant 332 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 333 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 334 in complex.js: z['isInfinite'] replaced with !z['isInfinite']
Mutant 335 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isInfinite']() && z['isZero']()
Mutant 336 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 337 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 338 in complex.js: this['isInfinite'] replaced with this['isInfinite'] && z['isInfinite']
Mutant 339 in complex.js: this['isInfinite'] replaced with this['isInfinite'] || z['isInfinite']
Mutant 340 in complex.js: this['isInfinite'] replaced with this['isInfinite'] ^ z['isInfinite']
Mutant 341 in complex.js: z['isZero'] replaced with z['isNaN']
Mutant 342 in complex.js: z['isZero'] replaced with z['isFinite']
Mutant 343 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['isZero']() && z['isInfinite']()
Mutant 344 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['isInfinite']() || z['isZero']()
Mutant 345 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['isInfinite']() && z['isZero']()
Mutant 346 in complex.js: this['isZero'] replaced with this['isNaN']
Mutant 347 in complex.js: this['isZero'] replaced with this['im'] === 0
Mutant 348 in complex.js: z['isInfinite'] replaced with !z['isInfinite']
Mutant 349 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 350 in complex.js: 0 === d replaced with 0 !== d
Mutant 351 in complex.js: 0 === d replaced with d !== 0
Mutant 352 in complex.js: 0 === d replaced with d === 1
Mutant 353 in complex.js: Math.abs(c) < Math.abs(d) replaced with c < d
Mutant 354 in complex.js: Math.abs(c) < Math.abs(d) replaced with d < c
Mutant 355 in complex.js: Math.abs(c) < Math.abs(d) replaced with Math.abs(c) > Math.abs(d)
Mutant 356 in complex.js: Math.abs replaced with c + d
Mutant 357 in complex.js: Math.abs replaced with c - d
Mutant 358 in complex.js: Math.abs replaced with c * d
Mutant 359 in complex.js: c replaced with c * d
Mutant 360 in complex.js: c replaced with c / d
Mutant 361 in complex.js: c replaced with c - d
Mutant 362 in complex.js: Math.abs replaced with Math.sin
Mutant 363 in complex.js: Math.abs replaced with Math.cos
Mutant 364 in complex.js: Math.abs replaced with Math.tan
Mutant 365 in complex.js: d replaced with a + b
Mutant 366 in complex.js: z['isZero']() replaced with z['isInfinite']()
Mutant 367 in complex.js: z['isZero']() replaced with !z['isZero']()
Mutant 368 in complex.js: z['isZero']() replaced with z['isNaN']()
Mutant 369 in complex.js: z['isZero'] replaced with z['im'] === 0
Mutant 370 in complex.js: z['isZero'] replaced with z['re'] === 0
Mutant 371 in complex.js: z['isZero'] replaced with z['re'] + z['im'] === 0
Mutant 372 in complex.js: z['im'] === 0 replaced with z['im'] !== 0
Mutant 373 in complex.js: z['im'] === 0 replaced with z['im'] + 1 === 0
Mutant 374 in complex.js: z['im'] === 0 replaced with z['im'] * 2 === 0
Mutant 375 in complex.js: b === 0 && a > 0 replaced with a === 0 && b > 0
Mutant 376 in complex.js: b === 0 && a > 0 replaced with a === 1 && b > 0
Mutant 377 in complex.js: b === 0 && a > 0 replaced with a === 0 && b === 1
Mutant 378 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(a, z['im'])
Mutant 379 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(a, z['re'] * 2)
Mutant 380 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(a, z['re'] + z['im'])
Mutant 381 in complex.js: Math.pow replaced with Math.sqrt
Mutant 382 in complex.js: Math.pow replaced with Math.random
Mutant 383 in complex.js: Math.pow replaced with Math.log
Mutant 384 in complex.js: a replaced with a + 1
Mutant 385 in complex.js: a replaced with a * b
Mutant 386 in complex.js: a replaced with a / b
Mutant 387 in complex.js: z['re'] replaced with z['im']
Mutant 388 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 389 in complex.js: z['re'] replaced with z['re'] * z['im']
Mutant 390 in complex.js: a === 0 replaced with b === 0
Mutant 391 in complex.js: a === 0 replaced with a !== 0
Mutant 392 in complex.js: a === 0 replaced with b !== 0
Mutant 393 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] % 4 + 3) % 4
Mutant 394 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] + 3) % 4
Mutant 395 in complex.js: (z['re'] % 4 + 4) % 4 replaced with 4 * (z['re'] % 4) + 3
Mutant 396 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'])
Mutant 397 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['re'] + 1)
Mutant 398 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'] * z['re'])
Mutant 399 in complex.js: Math.pow replaced with a * b
Mutant 400 in complex.js: Math.pow replaced with a + b
Mutant 401 in complex.js: b replaced with a
Mutant 402 in complex.js: b replaced with c
Mutant 403 in complex.js: b replaced with d
Mutant 404 in complex.js: z['re'] replaced with z['im']
Mutant 405 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 406 in complex.js: z['re'] replaced with z['re'] * 2
Mutant 407 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b * z['re'])
Mutant 408 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b / z['re'])
Mutant 409 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b + z['re'])
Mutant 410 in complex.js: b replaced with a
Mutant 411 in complex.js: b replaced with z['im']
Mutant 412 in complex.js: b replaced with Math.sqrt(b)
Mutant 413 in complex.js: z['re'] replaced with z['im']
Mutant 414 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 415 in complex.js: z['re'] replaced with z['im'] * 2
Mutant 416 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a, z['re'])
Mutant 417 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a + z['re'])
Mutant 418 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a * z['re'])
Mutant 419 in complex.js: Math.pow replaced with Math.sin
Mutant 420 in complex.js: Math.pow replaced with Math.cos
Mutant 421 in complex.js: Math.pow replaced with Math.tan
Mutant 422 in complex.js: b replaced with a
Mutant 423 in complex.js: b replaced with c
Mutant 424 in complex.js: b replaced with d
Mutant 425 in complex.js: z['re'] replaced with z['im']
Mutant 426 in complex.js: z['re'] replaced with z['re'] + z['im']
Mutant 427 in complex.js: z['re'] replaced with z['re'] * z['im']
Mutant 428 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'])
Mutant 429 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['re'] + 1)
Mutant 430 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'] * 2)
Mutant 431 in complex.js: b replaced with b * Math.PI
Mutant 432 in complex.js: b replaced with b + 1
Mutant 433 in complex.js: b replaced with b - 1
Mutant 434 in complex.js: z['re'] replaced with z['im']
Mutant 435 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 436 in complex.js: z['re'] replaced with z['im'] + 1
Mutant 437 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a === 0 && b === 0 && z['re'] > 0 && z['im'] > 0
Mutant 438 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a === 0 && b === 0 && z['re'] > 0 && z['im'] <= 0
Mutant 439 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a, b)
Mutant 440 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a + b)
Mutant 441 in complex.js: Math.atan2 replaced with Math.sin
Mutant 442 in complex.js: Math.atan2 replaced with Math.cos
Mutant 443 in complex.js: Math.atan2 replaced with Math.tan
Mutant 444 in complex.js: b replaced with a
Mutant 445 in complex.js: b replaced with a + b
Mutant 446 in complex.js: b replaced with a * b
Mutant 447 in complex.js: a replaced with b
Mutant 448 in complex.js: a replaced with a + b
Mutant 449 in complex.js: a replaced with a * b
Mutant 450 in complex.js: logHypot(a, b) replaced with logHypot(a + b)
Mutant 451 in complex.js: logHypot(a, b) replaced with logHypot(a - b)
Mutant 452 in complex.js: logHypot(a, b) replaced with logHypot(a * b)
Mutant 453 in complex.js: a replaced with a + 1
Mutant 454 in complex.js: a replaced with b
Mutant 455 in complex.js: a replaced with this.re
Mutant 456 in complex.js: b replaced with a
Mutant 457 in complex.js: b replaced with a + b
Mutant 458 in complex.js: b replaced with a * b
Mutant 459 in complex.js: Math.exp replaced with Math.floor
Mutant 460 in complex.js: Math.exp replaced with Math.sqrt
Mutant 461 in complex.js: Math.exp replaced with Math.sin
Mutant 462 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['im'] * loh + z['re'] * arg
Mutant 463 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['im'] * loh - z['re'] * arg
Mutant 464 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['re'] * loh + z['im'] * arg
Mutant 465 in complex.js: Math.cos replaced with Math.sin
Mutant 466 in complex.js: Math.cos replaced with Math.tan
Mutant 467 in complex.js: Math.cos replaced with Math.acos
Mutant 468 in complex.js: b replaced with a
Mutant 469 in complex.js: b replaced with b + 1
Mutant 470 in complex.js: b replaced with a + b
Mutant 471 in complex.js: Math.sin replaced with Math.cos
Mutant 472 in complex.js: Math.sin replaced with Math.tan
Mutant 473 in complex.js: Math.sin replaced with Math.asin
Mutant 474 in complex.js: b replaced with a
Mutant 475 in complex.js: b replaced with b + 1
Mutant 476 in complex.js: b replaced with a * b
Mutant 477 in complex.js: this['abs'] replaced with this['re']
Mutant 478 in complex.js: this['abs'] replaced with this['im']
Mutant 479 in complex.js: this['abs'] replaced with this['abs'] + this['re']
Mutant 480 in complex.js: a >= 0 replaced with a < 0
Mutant 481 in complex.js: a >= 0 replaced with a != 0
Mutant 482 in complex.js: a >= 0 replaced with b > 0
Mutant 483 in complex.js: b === 0 replaced with b !== 0
Mutant 484 in complex.js: b === 0 replaced with b > 0
Mutant 485 in complex.js: b === 0 replaced with b < 0
Mutant 486 in complex.js: a replaced with a + 1
Mutant 487 in complex.js: a replaced with b
Mutant 488 in complex.js: a replaced with a * b
Mutant 489 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 490 in complex.js: Math.sqrt replaced with Math.log
Mutant 491 in complex.js: Math.sqrt replaced with Math.exp
Mutant 492 in complex.js: 2.0 * (r + a) replaced with 2.0 * (r - a)
Mutant 493 in complex.js: 2.0 * (r + a) replaced with 2.0 * (r * a)
Mutant 494 in complex.js: 2.0 * (r + a) replaced with 2.0 * (r / a)
Mutant 495 in complex.js: Math.abs replaced with Math.floor
Mutant 496 in complex.js: Math.abs replaced with Math.ceil
Mutant 497 in complex.js: Math.abs replaced with Math.round
Mutant 498 in complex.js: b replaced with a
Mutant 499 in complex.js: b replaced with b + 1
Mutant 500 in complex.js: b replaced with a * b
Mutant 501 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 502 in complex.js: Math.sqrt replaced with Math.log
Mutant 503 in complex.js: Math.sqrt replaced with Math.random
Mutant 504 in complex.js: 2 * (r - a) replaced with a * b
Mutant 505 in complex.js: 2 * (r - a) replaced with a + b
Mutant 506 in complex.js: 2 * (r - a) replaced with a - b
Mutant 507 in complex.js: a <= 0 replaced with a < 0
Mutant 508 in complex.js: a <= 0 replaced with a !== 0
Mutant 509 in complex.js: a <= 0 replaced with b < 0
Mutant 510 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 511 in complex.js: Math.sqrt replaced with Math.abs
Mutant 512 in complex.js: Math.sqrt replaced with Math.random
Mutant 513 in complex.js: 2.0 * (r - a) replaced with 2.0 * (r + a)
Mutant 514 in complex.js: 2.0 * (r - a) replaced with 2.0 * (r * a)
Mutant 515 in complex.js: 2.0 * (r - a) replaced with 2.0 * (r / a)
Mutant 516 in complex.js: Math.abs replaced with Math.floor
Mutant 517 in complex.js: Math.abs replaced with Math.ceil
Mutant 518 in complex.js: Math.abs replaced with Math.round
Mutant 519 in complex.js: b replaced with -b
Mutant 520 in complex.js: b replaced with b * b
Mutant 521 in complex.js: b replaced with b + 1
Mutant 522 in complex.js: Math.sqrt replaced with Math.cbrt
Mutant 523 in complex.js: Math.sqrt replaced with Math.max
Mutant 524 in complex.js: Math.sqrt replaced with Math.random
Mutant 525 in complex.js: 2 * (r + a) replaced with 2 * (r - a)
Mutant 526 in complex.js: 2 * (r + a) replaced with 2 * (r * a)
Mutant 527 in complex.js: 2 * (r + a) replaced with 2 * (r / a)
Mutant 528 in complex.js: Math.exp replaced with Math.sin
Mutant 529 in complex.js: Math.exp replaced with Math.cos
Mutant 530 in complex.js: Math.exp replaced with Math.tan
Mutant 531 in complex.js: this['re'] replaced with this['im']
Mutant 532 in complex.js: this['re'] replaced with -this['re']
Mutant 533 in complex.js: this['re'] replaced with this['re'] + this['im']
Mutant 534 in complex.js: this['im'] === 0 replaced with this['im'] !== 0
Mutant 535 in complex.js: this['im'] === 0 replaced with this['im'] > 0
Mutant 536 in complex.js: this['im'] === 0 replaced with this['im'] < 0
Mutant 537 in complex.js: Math.cos replaced with Math.sin
Mutant 538 in complex.js: Math.cos replaced with Math.tan
Mutant 539 in complex.js: Math.cos replaced with Math.acos
Mutant 540 in complex.js: this['im'] replaced with this['re']
Mutant 541 in complex.js: this['im'] replaced with -this['im']
Mutant 542 in complex.js: this['im'] replaced with this['re'] + this['im']
Mutant 543 in complex.js: Math.sin replaced with Math.cos
Mutant 544 in complex.js: Math.sin replaced with Math.tan
Mutant 545 in complex.js: Math.sin replaced with Math.asin
Mutant 546 in complex.js: this['im'] replaced with 0
Mutant 547 in complex.js: this['im'] replaced with 1
Mutant 548 in complex.js: this['im'] replaced with -1
Mutant 549 in complex.js: a replaced with a + 1
Mutant 550 in complex.js: a replaced with Math.random()
Mutant 551 in complex.js: a replaced with this.re
Mutant 552 in complex.js: Math.cos replaced with Math.sin
Mutant 553 in complex.js: Math.cos replaced with Math.tan
Mutant 554 in complex.js: Math.cos replaced with Math.acos
Mutant 555 in complex.js: b replaced with -b
Mutant 556 in complex.js: b replaced with b * b
Mutant 557 in complex.js: b replaced with Math.sqrt(b)
Mutant 558 in complex.js: b replaced with b + 1
Mutant 559 in complex.js: b replaced with b - 1
Mutant 560 in complex.js: b replaced with b * 2
Mutant 561 in complex.js: Math.exp replaced with Math.sin
Mutant 562 in complex.js: Math.exp replaced with Math.cos
Mutant 563 in complex.js: Math.exp replaced with Math.tan
Mutant 564 in complex.js: a replaced with a + 1
Mutant 565 in complex.js: a replaced with a - 1
Mutant 566 in complex.js: a replaced with a * 2
Mutant 567 in complex.js: Math.sin replaced with Math.cos
Mutant 568 in complex.js: Math.sin replaced with Math.tan
Mutant 569 in complex.js: Math.sin replaced with Math.asin
Mutant 570 in complex.js: b replaced with a
Mutant 571 in complex.js: b replaced with b + 1
Mutant 572 in complex.js: b replaced with 2 * b
Mutant 573 in complex.js: b === 0 && a > 0 replaced with b === 0 && a < 0
Mutant 574 in complex.js: b === 0 && a > 0 replaced with b === 0 && a !== 0
Mutant 575 in complex.js: b === 0 && a > 0 replaced with b === 0 && Math.abs(a) > 0
Mutant 576 in complex.js: logHypot(a, b) replaced with logHypot(a + b)
Mutant 577 in complex.js: logHypot(a, b) replaced with logHypot(a - b)
Mutant 578 in complex.js: logHypot(a, b) replaced with logHypot(a * b)
Mutant 579 in complex.js: a replaced with a + 1
Mutant 580 in complex.js: a replaced with b
Mutant 581 in complex.js: a replaced with this.b
Mutant 582 in complex.js: b replaced with a
Mutant 583 in complex.js: b replaced with b + 1
Mutant 584 in complex.js: b replaced with b * 2
Mutant 585 in complex.js: Math.atan2(b, a) replaced with Math.atan2(b - a)
Mutant 586 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a - b)
Mutant 587 in complex.js: Math.atan2(b, a) replaced with Math.atan2(b * a)
Mutant 588 in complex.js: b replaced with a
Mutant 589 in complex.js: b replaced with b + 1
Mutant 590 in complex.js: b replaced with a + b
Mutant 591 in complex.js: a replaced with b
Mutant 592 in complex.js: a replaced with a + b
Mutant 593 in complex.js: a replaced with a * b
Mutant 594 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['re'] * this['im'])
Mutant 595 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['re'] + this['im'])
Mutant 596 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['re'] - this['im'])
Mutant 597 in complex.js: hypot replaced with this['re'] * this['re'] + this['im'] * this['im']
Mutant 598 in complex.js: this['re'] replaced with this['im']
Mutant 599 in complex.js: this['re'] replaced with this['abs']()
Mutant 600 in complex.js: this['re'] replaced with this['arg']()
Mutant 601 in complex.js: this['im'] replaced with this['re']
Mutant 602 in complex.js: this['im'] replaced with -this['im']
Mutant 603 in complex.js: this['im'] replaced with this['re'] + this['im']
Mutant 604 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(this['re'], this['im'])
Mutant 605 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(this['re'] + this['im'])
Mutant 606 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(this['im'] * this['re'])
Mutant 607 in complex.js: Math.atan2 replaced with Math.sin
Mutant 608 in complex.js: Math.atan2 replaced with Math.cos
Mutant 609 in complex.js: Math.atan2 replaced with Math.tan
Mutant 610 in complex.js: this['im'] replaced with this['re']
Mutant 611 in complex.js: this['im'] replaced with -this['im']
Mutant 612 in complex.js: this['im'] replaced with this['im'] * 2
Mutant 613 in complex.js: this['re'] replaced with this['im']
Mutant 614 in complex.js: this['re'] replaced with this['re'] + 1
Mutant 615 in complex.js: this['re'] replaced with this['im'] * 2
Mutant 616 in complex.js: Math.sin replaced with Math.cos
Mutant 617 in complex.js: Math.sin replaced with Math.random
Mutant 618 in complex.js: a replaced with a + 1
Mutant 619 in complex.js: a replaced with b
Mutant 620 in complex.js: a replaced with a * b
Mutant 621 in complex.js: cosh replaced with sinh
Mutant 622 in complex.js: cosh replaced with -cosh
Mutant 623 in complex.js: cosh replaced with 1 / cosh
Mutant 624 in complex.js: b replaced with b + 1
Mutant 625 in complex.js: b replaced with b * 2
Mutant 626 in complex.js: b replaced with b - 1
Mutant 627 in complex.js: Math.cos replaced with Math.sin
Mutant 628 in complex.js: Math.cos replaced with Math.tan
Mutant 629 in complex.js: Math.cos replaced with Math.acos
Mutant 630 in complex.js: a replaced with a + 1
Mutant 631 in complex.js: a replaced with b
Mutant 632 in complex.js: a replaced with Math.PI
Mutant 633 in complex.js: b replaced with b + 1
Mutant 634 in complex.js: b replaced with b - 1
Mutant 635 in complex.js: b replaced with 2 * b
Mutant 636 in complex.js: Math.cos replaced with Math.sin
Mutant 637 in complex.js: Math.cos replaced with Math.tan
Mutant 638 in complex.js: Math.cos replaced with Math.acos
Mutant 639 in complex.js: a replaced with -a
Mutant 640 in complex.js: a replaced with a + 1
Mutant 641 in complex.js: a replaced with Math.sin(a) + 1
Mutant 642 in complex.js: cosh replaced with -cosh
Mutant 643 in complex.js: cosh replaced with cosh ^ 2
Mutant 644 in complex.js: cosh replaced with sinh
Mutant 645 in complex.js: b replaced with -b
Mutant 646 in complex.js: b replaced with b + 1
Mutant 647 in complex.js: b replaced with 2 * b
Mutant 648 in complex.js: a replaced with -a
Mutant 649 in complex.js: a replaced with a + 1
Mutant 650 in complex.js: a replaced with Math.cos(a) + 1
Mutant 651 in complex.js: b replaced with b + 1
Mutant 652 in complex.js: b replaced with -b
Mutant 653 in complex.js: b replaced with b * 2
Mutant 654 in complex.js: Math.cos replaced with Math.sin
Mutant 655 in complex.js: Math.cos replaced with Math.tan
Mutant 656 in complex.js: Math.cos replaced with Math.acos
Mutant 657 in complex.js: a replaced with a + 1
Mutant 658 in complex.js: a replaced with b
Mutant 659 in complex.js: a replaced with a - b
Mutant 660 in complex.js: cosh replaced with sinh
Mutant 661 in complex.js: cosh replaced with tanh
Mutant 662 in complex.js: cosh replaced with coth
Mutant 663 in complex.js: b replaced with a
Mutant 664 in complex.js: b replaced with b + 1
Mutant 665 in complex.js: b replaced with -b
Mutant 666 in complex.js: Math.sin replaced with Math.cos
Mutant 667 in complex.js: Math.sin replaced with Math.tan
Mutant 668 in complex.js: Math.sin replaced with Math.atan
Mutant 669 in complex.js: a replaced with b
Mutant 670 in complex.js: a replaced with a + b
Mutant 671 in complex.js: a replaced with a * b
Mutant 672 in complex.js: b replaced with a
Mutant 673 in complex.js: b replaced with b + 1
Mutant 674 in complex.js: b replaced with a + b
Mutant 675 in complex.js: Math.cos replaced with Math.sin
Mutant 676 in complex.js: Math.cos replaced with Math.tan
Mutant 677 in complex.js: Math.cos replaced with Math.acos
Mutant 678 in complex.js: a replaced with a + b
Mutant 679 in complex.js: a replaced with a * b
Mutant 680 in complex.js: a replaced with a / b
Mutant 681 in complex.js: cosh replaced with Math.sinh
Mutant 682 in complex.js: cosh replaced with Math.tanh
Mutant 683 in complex.js: cosh replaced with Math.coth
Mutant 684 in complex.js: b replaced with -b
Mutant 685 in complex.js: b replaced with b + 1
Mutant 686 in complex.js: b replaced with b * 2
Mutant 687 in complex.js: Math.sin replaced with Math.cos
Mutant 688 in complex.js: Math.sin replaced with Math.tan
Mutant 689 in complex.js: Math.sin replaced with Math.cot
Mutant 690 in complex.js: a replaced with b
Mutant 691 in complex.js: a replaced with a + b
Mutant 692 in complex.js: a replaced with a * b
Mutant 693 in complex.js: sinh replaced with cosh
Mutant 694 in complex.js: sinh replaced with tanh
Mutant 695 in complex.js: sinh replaced with sin
Mutant 696 in complex.js: b replaced with a
Mutant 697 in complex.js: b replaced with b + 1
Mutant 698 in complex.js: b replaced with b * 2
Mutant 699 in complex.js: cosh replaced with sinh
Mutant 700 in complex.js: cosh replaced with tanh
Mutant 701 in complex.js: 2 * b replaced with 2 * a
Mutant 702 in complex.js: 2 * b replaced with b * b
Mutant 703 in complex.js: 2 * b replaced with a * b
Mutant 704 in complex.js: Math.cos replaced with Math.tan
Mutant 705 in complex.js: Math.cos replaced with Math.sin
Mutant 706 in complex.js: Math.cos replaced with Math.acos
Mutant 707 in complex.js: 2 * a replaced with 2 * b
Mutant 708 in complex.js: 2 * a replaced with a + b
Mutant 709 in complex.js: 2 * a replaced with a * a
Mutant 710 in complex.js: Math.cos replaced with Math.sin
Mutant 711 in complex.js: Math.cos replaced with Math.tan
Mutant 712 in complex.js: Math.cos replaced with Math.acos
Mutant 713 in complex.js: a replaced with b
Mutant 714 in complex.js: a replaced with a + b
Mutant 715 in complex.js: a replaced with a * b
Mutant 716 in complex.js: cosh replaced with sinh
Mutant 717 in complex.js: cosh replaced with tanh
Mutant 718 in complex.js: cosh replaced with csch
Mutant 719 in complex.js: b replaced with a
Mutant 720 in complex.js: b replaced with b + 1
Mutant 721 in complex.js: b replaced with b * 2
Mutant 722 in complex.js: Math.sin replaced with Math.cos
Mutant 723 in complex.js: Math.sin replaced with Math.tan
Mutant 724 in complex.js: Math.sin replaced with Math.sqrt
Mutant 725 in complex.js: a replaced with b
Mutant 726 in complex.js: a replaced with a + b
Mutant 727 in complex.js: a replaced with a * b
Mutant 728 in complex.js: sinh replaced with Math.sinh
Mutant 729 in complex.js: sinh replaced with Math.cosh
Mutant 730 in complex.js: sinh replaced with Math.tanh
Mutant 731 in complex.js: b replaced with -b
Mutant 732 in complex.js: b replaced with b + 1
Mutant 733 in complex.js: b replaced with Math.sin(b)
Mutant 734 in complex.js: cosh replaced with Math.sinh
Mutant 735 in complex.js: cosh replaced with Math.tanh
Mutant 736 in complex.js: cosh replaced with Math.acosh
Mutant 737 in complex.js: 2 * b replaced with 2 * a
Mutant 738 in complex.js: 2 * b replaced with 2 * b + 1
Mutant 739 in complex.js: 2 * b replaced with 2 * b - 1
Mutant 740 in complex.js: Math.cos replaced with -Math.sin
Mutant 741 in complex.js: Math.cos replaced with Math.tan
Mutant 742 in complex.js: Math.cos replaced with Math.acos
Mutant 743 in complex.js: 2 * a replaced with 2 * b
Mutant 744 in complex.js: 2 * a replaced with a + 1
Mutant 745 in complex.js: 2 * a replaced with b * a
Mutant 746 in complex.js: Math.sin replaced with Math.cos
Mutant 747 in complex.js: Math.sin replaced with Math.tan
Mutant 748 in complex.js: Math.sin replaced with Math.sqrt
Mutant 749 in complex.js: a replaced with b
Mutant 750 in complex.js: a replaced with a + b
Mutant 751 in complex.js: a replaced with a * b
Mutant 752 in complex.js: cosh replaced with sinh
Mutant 753 in complex.js: cosh replaced with tanh
Mutant 754 in complex.js: b replaced with b + 1
Mutant 755 in complex.js: b replaced with b * 2
Mutant 756 in complex.js: b replaced with b - 1
Mutant 757 in complex.js: Math.cos replaced with Math.sin
Mutant 758 in complex.js: Math.cos replaced with Math.tan
Mutant 759 in complex.js: Math.cos replaced with Math.acos
Mutant 760 in complex.js: a replaced with b
Mutant 761 in complex.js: a replaced with -a
Mutant 762 in complex.js: a replaced with a + b
Mutant 763 in complex.js: sinh replaced with sin
Mutant 764 in complex.js: sinh replaced with cos
Mutant 765 in complex.js: sinh replaced with tan
Mutant 766 in complex.js: b replaced with -b
Mutant 767 in complex.js: b replaced with b + 1
Mutant 768 in complex.js: b replaced with b * 2
Mutant 769 in complex.js: a === 0 replaced with a !== 0
Mutant 770 in complex.js: a === 0 replaced with b === 0
Mutant 771 in complex.js: a === 0 replaced with a === b
Mutant 772 in complex.js: b === 1 replaced with b > 1
Mutant 773 in complex.js: b === 1 replaced with b < 1
Mutant 774 in complex.js: b === 1 replaced with b === 0
Mutant 775 in complex.js: b === -1 replaced with b === -2
Mutant 776 in complex.js: b === -1 replaced with b !== -1
Mutant 777 in complex.js: b === -1 replaced with b === -1 && a === 1
Mutant 778 in complex.js: b === 0 replaced with b != 0
Mutant 779 in complex.js: b === 0 replaced with b === 1
Mutant 780 in complex.js: b === 0 replaced with b > 0
Mutant 781 in complex.js: Math.atan2(1, a) replaced with Math.atan2(1, b)
Mutant 782 in complex.js: Math.atan2(1, a) replaced with Math.atan2(-1, a)
Mutant 783 in complex.js: Math.atan2(1, a) replaced with Math.atan2(a, b)
Mutant 784 in complex.js: Math.atan2 replaced with Math.acos
Mutant 785 in complex.js: Math.atan2 replaced with Math.asin
Mutant 786 in complex.js: Math.atan2 replaced with Math.atan
Mutant 787 in complex.js: 1 replaced with 0
Mutant 788 in complex.js: 1 replaced with -1
Mutant 789 in complex.js: 1 replaced with a
Mutant 790 in complex.js: a replaced with b
Mutant 791 in complex.js: a replaced with a + b
Mutant 792 in complex.js: a replaced with a - b
Mutant 793 in complex.js: a === 0 && b === 0 replaced with a === 0 || b === 0
Mutant 794 in complex.js: a === 0 && b === 0 replaced with a === 0 && b !== 0
Mutant 795 in complex.js: a === 0 && b === 0 replaced with a !== 0 && b !== 0
Mutant 796 in complex.js: a === 0 && b === 0 replaced with a === 0 || b === 0
Mutant 797 in complex.js: a === 0 && b === 0 replaced with a !== 0 && b !== 0
Mutant 798 in complex.js: a === 0 && b === 0 replaced with a + b === 0
Mutant 799 in complex.js: a replaced with a + 1
Mutant 800 in complex.js: a replaced with b
Mutant 801 in complex.js: a replaced with a * b
Mutant 802 in complex.js: Math.cos replaced with Math.sin
Mutant 803 in complex.js: Math.cos replaced with Math.tan
Mutant 804 in complex.js: Math.cos replaced with Math.acos
Mutant 805 in complex.js: b replaced with a
Mutant 806 in complex.js: b replaced with b * a
Mutant 807 in complex.js: b replaced with a * a
Mutant 808 in complex.js: cosh replaced with sin
Mutant 809 in complex.js: cosh replaced with Math.sin
Mutant 810 in complex.js: a replaced with a + b
Mutant 811 in complex.js: a replaced with a - b
Mutant 812 in complex.js: a replaced with a * b
Mutant 813 in complex.js: Math.sin replaced with Math.cos
Mutant 814 in complex.js: Math.sin replaced with Math.tan
Mutant 815 in complex.js: Math.sin replaced with Math.acos
Mutant 816 in complex.js: b replaced with -b
Mutant 817 in complex.js: b replaced with b + 1
Mutant 818 in complex.js: b replaced with 2 * b
Mutant 819 in complex.js: a replaced with a * b
Mutant 820 in complex.js: a replaced with a + b
Mutant 821 in complex.js: a replaced with a - b
Mutant 822 in complex.js: Math.cos replaced with Math.sin
Mutant 823 in complex.js: Math.cos replaced with Math.tan
Mutant 824 in complex.js: Math.cos replaced with Math.acos
Mutant 825 in complex.js: b replaced with b + 1
Mutant 826 in complex.js: b replaced with b * 2
Mutant 827 in complex.js: b replaced with -b
Mutant 828 in complex.js: sinh replaced with cosh
Mutant 829 in complex.js: sinh replaced with tanh
Mutant 830 in complex.js: sinh replaced with coth
Mutant 831 in complex.js: a replaced with a + 1
Mutant 832 in complex.js: a replaced with b
Mutant 833 in complex.js: a replaced with a * b
Mutant 834 in complex.js: Math.sin replaced with Math.cos
Mutant 835 in complex.js: Math.sin replaced with Math.tan
Mutant 836 in complex.js: Math.sin replaced with Math.acos
Mutant 837 in complex.js: b replaced with a
Mutant 838 in complex.js: b replaced with b + 1
Mutant 839 in complex.js: b replaced with b - 1
Mutant 840 in complex.js: a replaced with a + 1
Mutant 841 in complex.js: a replaced with a * 2
Mutant 842 in complex.js: a replaced with a + b
Mutant 843 in complex.js: Math.cos replaced with Math.sin
Mutant 844 in complex.js: Math.cos replaced with Math.PI
Mutant 845 in complex.js: Math.cos replaced with Math.sqrt
Mutant 846 in complex.js: b replaced with a
Mutant 847 in complex.js: b replaced with c
Mutant 848 in complex.js: b replaced with d
Mutant 849 in complex.js: sinh replaced with cosh
Mutant 850 in complex.js: sinh replaced with tanh
Mutant 851 in complex.js: sinh replaced with asinh
Mutant 852 in complex.js: a replaced with a + 1
Mutant 853 in complex.js: a replaced with b
Mutant 854 in complex.js: a replaced with a * 2
Mutant 855 in complex.js: Math.sin replaced with Math.cos
Mutant 856 in complex.js: Math.sin replaced with Math.tan
Mutant 857 in complex.js: Math.sin replaced with Math.asin
Mutant 858 in complex.js: b replaced with -b
Mutant 859 in complex.js: b replaced with b + 1
Mutant 860 in complex.js: b replaced with b * 2
Mutant 861 in complex.js: cosh replaced with sinh
Mutant 862 in complex.js: cosh replaced with tanh
Mutant 863 in complex.js: cosh replaced with acosh
Mutant 864 in complex.js: a replaced with a + 1
Mutant 865 in complex.js: a replaced with b
Mutant 866 in complex.js: a replaced with a * b
Mutant 867 in complex.js: Math.cos replaced with Math.sin
Mutant 868 in complex.js: Math.cos replaced with Math.tan
Mutant 869 in complex.js: Math.cos replaced with Math.acos
Mutant 870 in complex.js: b replaced with b * b
Mutant 871 in complex.js: b replaced with a + b
Mutant 872 in complex.js: b replaced with a * a + b * b
Mutant 873 in complex.js: sinh replaced with cosh
Mutant 874 in complex.js: sinh replaced with tanh
Mutant 875 in complex.js: sinh replaced with coth
Mutant 876 in complex.js: a replaced with a + 1
Mutant 877 in complex.js: a replaced with b
Mutant 878 in complex.js: a replaced with a * b
Mutant 879 in complex.js: Math.sin replaced with Math.cos
Mutant 880 in complex.js: Math.sin replaced with Math.tan
Mutant 881 in complex.js: Math.sin replaced with Math.csc
Mutant 882 in complex.js: b replaced with -b
Mutant 883 in complex.js: b replaced with b + 1
Mutant 884 in complex.js: b replaced with b * 2
Mutant 885 in complex.js: Math.cos replaced with Math.sin
Mutant 886 in complex.js: Math.cos replaced with Math.tan
Mutant 887 in complex.js: Math.cos replaced with Math.acos
Mutant 888 in complex.js: 2 * b replaced with 2 * b + 1
Mutant 889 in complex.js: 2 * b replaced with 2 * b - 1
Mutant 890 in complex.js: 2 * b replaced with 2 * b * 2
Mutant 891 in complex.js: 2 * a replaced with 2 * b
Mutant 892 in complex.js: 2 * a replaced with a + b
Mutant 893 in complex.js: 2 * a replaced with a - b
Mutant 894 in complex.js: sinh replaced with cosh
Mutant 895 in complex.js: sinh replaced with tanh
Mutant 896 in complex.js: sinh replaced with coth
Mutant 897 in complex.js: a replaced with a + 1
Mutant 898 in complex.js: a replaced with b
Mutant 899 in complex.js: a replaced with a * 2
Mutant 900 in complex.js: Math.cos replaced with Math.sin
Mutant 901 in complex.js: Math.cos replaced with Math.tan
Mutant 902 in complex.js: Math.cos replaced with Math.acos
Mutant 903 in complex.js: b replaced with -b
Mutant 904 in complex.js: b replaced with b + 1
Mutant 905 in complex.js: b replaced with b * 2
Mutant 906 in complex.js: cosh replaced with -Math.cosh
Mutant 907 in complex.js: cosh replaced with Math.sinh
Mutant 908 in complex.js: cosh replaced with Math.tanh
Mutant 909 in complex.js: a replaced with a + 1
Mutant 910 in complex.js: a replaced with b
Mutant 911 in complex.js: a replaced with a * b
Mutant 912 in complex.js: Math.sin replaced with Math.cos
Mutant 913 in complex.js: Math.sin replaced with Math.tan
Mutant 914 in complex.js: Math.sin replaced with Math.asin
Mutant 915 in complex.js: b replaced with a
Mutant 916 in complex.js: b replaced with b + 1
Mutant 917 in complex.js: b replaced with b * 2
Mutant 918 in complex.js: Math.cos replaced with Math.sin
Mutant 919 in complex.js: Math.cos replaced with Math.sqrt
Mutant 920 in complex.js: 2 * b replaced with 2 * a
Mutant 921 in complex.js: 2 * b replaced with 2 * b + 1
Mutant 922 in complex.js: 2 * b replaced with 2 * b - 1
Mutant 923 in complex.js: cosh replaced with sinh
Mutant 924 in complex.js: cosh replaced with tanh
Mutant 925 in complex.js: cosh replaced with asinh
Mutant 926 in complex.js: 2 * a replaced with 2 * b
Mutant 927 in complex.js: 2 * a replaced with a + b
Mutant 928 in complex.js: 2 * a replaced with a - b
Mutant 929 in complex.js: cosh replaced with sinh
Mutant 930 in complex.js: cosh replaced with tanh
Mutant 931 in complex.js: cosh replaced with acosh
Mutant 932 in complex.js: a replaced with a + 1
Mutant 933 in complex.js: a replaced with b
Mutant 934 in complex.js: a replaced with a * b
Mutant 935 in complex.js: Math.cos replaced with Math.sin
Mutant 936 in complex.js: Math.cos replaced with Math.tan
Mutant 937 in complex.js: Math.cos replaced with Math.acos
Mutant 938 in complex.js: b replaced with a
Mutant 939 in complex.js: b replaced with b + 1
Mutant 940 in complex.js: b replaced with a + b
Mutant 941 in complex.js: sinh replaced with cosh
Mutant 942 in complex.js: sinh replaced with tanh
Mutant 943 in complex.js: sinh replaced with coth
Mutant 944 in complex.js: a replaced with -a
Mutant 945 in complex.js: a replaced with a + 1
Mutant 946 in complex.js: a replaced with a * a
Mutant 947 in complex.js: Math.sin replaced with Math.cos
Mutant 948 in complex.js: Math.sin replaced with Math.tan
Mutant 949 in complex.js: Math.sin replaced with Math.csc
Mutant 950 in complex.js: b replaced with -b
Mutant 951 in complex.js: b replaced with b * 2
Mutant 952 in complex.js: b replaced with b + 1
Mutant 953 in complex.js: this['asin'] replaced with this['acos']
Mutant 954 in complex.js: this['asin'] replaced with this['atan']
Mutant 955 in complex.js: this['asin'] replaced with this['sin']
Mutant 956 in complex.js: res['im'] <= 0 replaced with res['im'] > 0
Mutant 957 in complex.js: res['im'] <= 0 replaced with res['im'] === 0
Mutant 958 in complex.js: res['im'] <= 0 replaced with res['im'] !== 0
Mutant 959 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] + 1, x['im'])
Mutant 960 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] * 2, x['im'])
Mutant 961 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] / 2, x['im'])
Mutant 962 in complex.js: x['re'] replaced with x['im']
Mutant 963 in complex.js: x['re'] replaced with x['re'] + 1
Mutant 964 in complex.js: x['re'] replaced with x['re'] * 2
Mutant 965 in complex.js: x['im'] replaced with x['re']
Mutant 966 in complex.js: x['im'] replaced with x['im'] * 2
Mutant 967 in complex.js: x['im'] replaced with x['im'] * 3
Mutant 968 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(x['re'], temp)
Mutant 969 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(x['im'] + temp)
Mutant 970 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(-x['im'])
Mutant 971 in complex.js: x['im'] replaced with x['re']
Mutant 972 in complex.js: x['im'] replaced with -x['im']
Mutant 973 in complex.js: x['im'] replaced with x['im'] + 1
Mutant 974 in complex.js: temp replaced with temp * 0
Mutant 975 in complex.js: temp replaced with temp - temp
Mutant 976 in complex.js: temp replaced with temp + 1
Mutant 977 in complex.js: noIM replaced with !noIM
Mutant 978 in complex.js: noIM replaced with noIM && true
Mutant 979 in complex.js: noIM replaced with noIM || false
Mutant 980 in complex.js: a === 0 && b === 0 replaced with a != 0 || b != 0
Mutant 981 in complex.js: a === 0 && b === 0 replaced with a > 0 && b > 0
Mutant 982 in complex.js: a === 0 && b === 0 replaced with a < 0 || b < 0
Mutant 983 in complex.js: b === 0 replaced with b == 0
Mutant 984 in complex.js: b === 0 replaced with b !== 0
Mutant 985 in complex.js: b === 0 replaced with a === 0
Mutant 986 in complex.js: Math.log replaced with Math.sqrt
Mutant 987 in complex.js: Math.log replaced with Math.abs
Mutant 988 in complex.js: Math.log replaced with Math.exp
Mutant 989 in complex.js: a + Math.sqrt(a * a + 1) replaced with a - Math.sqrt(a * a + 1)
Mutant 990 in complex.js: a + Math.sqrt(a * a + 1) replaced with a * Math.sqrt(a * a + 1)
Mutant 991 in complex.js: a + Math.sqrt(a * a + 1) replaced with a / Math.sqrt(a * a + 1)
Mutant 992 in complex.js: Math.sqrt replaced with Math.abs
Mutant 993 in complex.js: Math.sqrt replaced with Math.sin
Mutant 994 in complex.js: Math.sqrt replaced with Math.log
Mutant 995 in complex.js: a * a + 1 replaced with a * b + 1
Mutant 996 in complex.js: a * a + 1 replaced with a * a - 1
Mutant 997 in complex.js: a * a + 1 replaced with a * a + b
Mutant 998 in complex.js: this['isZero']() replaced with this['re'] === 0 && this['im'] === 0
Mutant 999 in complex.js: this['isZero']() replaced with this['re'] === 0 || this['im'] === 0
Mutant 1000 in complex.js: this['isZero']() replaced with this['re'] === 0 && this['im'] !== 0
Mutant 1001 in complex.js: this['isZero'] replaced with this['isInfinite']
Mutant 1002 in complex.js: this['isZero'] replaced with this['isNaN']
Mutant 1003 in complex.js: this['isZero'] replaced with this['isFinite']
Mutant 1004 in complex.js: this['isZero']() replaced with this['isInfinite']()
Mutant 1005 in complex.js: this['isZero']() replaced with this['isNaN']()
Mutant 1006 in complex.js: this['isZero']() replaced with this['isNegative']()
Mutant 1007 in complex.js: this['isZero'] replaced with !this['isZero']
Mutant 1008 in complex.js: this['isZero'] replaced with this['im'] === 0
Mutant 1009 in complex.js: this['isInfinite']() replaced with this['isZero']()
Mutant 1010 in complex.js: this['isInfinite']() replaced with this['re'] === Infinity
Mutant 1011 in complex.js: this['isInfinite']() replaced with this['im'] === Infinity
Mutant 1012 in complex.js: this['isInfinite'] replaced with this['isFinite']
Mutant 1013 in complex.js: this['isInfinite'] replaced with this['im'] === 0
Mutant 1014 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(11, places || 0)
Mutant 1015 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(places || 1)
Mutant 1016 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(places + 1)
Mutant 1017 in complex.js: 10 replaced with 2
Mutant 1018 in complex.js: 10 replaced with -1
Mutant 1019 in complex.js: 10 replaced with Math.PI
Mutant 1020 in complex.js: places || 0 replaced with places || 1
Mutant 1021 in complex.js: places || 0 replaced with places && 0
Mutant 1022 in complex.js: places || 0 replaced with places ^ 0
Mutant 1023 in complex.js: Math.ceil replaced with Math.floor
Mutant 1024 in complex.js: Math.ceil replaced with Math.round
Mutant 1025 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 1026 in complex.js: this['re'] * places replaced with this['re'] * places + 1
Mutant 1027 in complex.js: this['re'] * places replaced with Math.sqrt(this['re']) * places
Mutant 1028 in complex.js: Math.ceil replaced with Math.floor
Mutant 1029 in complex.js: Math.ceil replaced with Math.round
Mutant 1030 in complex.js: Math.ceil replaced with Math.abs
Mutant 1031 in complex.js: this['im'] * places replaced with this['re'] * places
Mutant 1032 in complex.js: this['im'] * places replaced with this['im'] * places + 1
Mutant 1033 in complex.js: this['im'] * places replaced with this['im'] * places * 2
Mutant 1034 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(0, places || 10)
Mutant 1035 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || Math.PI)
Mutant 1036 in complex.js: Math.pow replaced with Math.sqrt
Mutant 1037 in complex.js: Math.pow replaced with Math.abs
Mutant 1038 in complex.js: Math.pow replaced with Math.random
Mutant 1039 in complex.js: 10 replaced with 0
Mutant 1040 in complex.js: 10 replaced with 2
Mutant 1041 in complex.js: 10 replaced with a
Mutant 1042 in complex.js: places || 0 replaced with places && 0
Mutant 1043 in complex.js: places || 0 replaced with places ^ 0
Mutant 1044 in complex.js: places || 0 replaced with places ? 0 : 1
Mutant 1045 in complex.js: Math.floor replaced with Math.ceil
Mutant 1046 in complex.js: Math.floor replaced with Math.abs
Mutant 1047 in complex.js: Math.floor replaced with Math.round
Mutant 1048 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 1049 in complex.js: this['re'] * places replaced with this['re'] / places
Mutant 1050 in complex.js: this['re'] * places replaced with this['im'] / places
Mutant 1051 in complex.js: Math.floor replaced with Math.ceil
Mutant 1052 in complex.js: Math.floor replaced with Math.round
Mutant 1053 in complex.js: Math.floor replaced with Math.trunc
Mutant 1054 in complex.js: this['im'] * places replaced with this['re'] * places
Mutant 1055 in complex.js: this['im'] * places replaced with this['im'] * places + 1
Mutant 1056 in complex.js: this['im'] * places replaced with this['im'] * places * 2
Mutant 1057 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || 1)
Mutant 1058 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places && 0)
Mutant 1059 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places / 10)
Mutant 1060 in complex.js: 10 replaced with 20
Mutant 1061 in complex.js: 10 replaced with 5
Mutant 1062 in complex.js: 10 replaced with Math.PI
Mutant 1063 in complex.js: places || 0 replaced with places ^ 0
Mutant 1064 in complex.js: places || 0 replaced with places && 0
Mutant 1065 in complex.js: places || 0 replaced with places + 0
Mutant 1066 in complex.js: Math.round replaced with Math.floor
Mutant 1067 in complex.js: Math.round replaced with Math.ceil
Mutant 1068 in complex.js: Math.round replaced with Math.trunc
Mutant 1069 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 1070 in complex.js: this['re'] * places replaced with this['re'] / places
Mutant 1071 in complex.js: this['re'] * places replaced with this['im'] / places
Mutant 1072 in complex.js: Math.round replaced with Math.floor
Mutant 1073 in complex.js: Math.round replaced with Math.ceil
Mutant 1074 in complex.js: Math.round replaced with Math.trunc
Mutant 1075 in complex.js: this['im'] * places replaced with this['im'] * places * Math.random()
Mutant 1076 in complex.js: this['im'] * places replaced with this['im'] * places + 1
Mutant 1077 in complex.js: this['im'] * places replaced with this['im'] * places * 2
Mutant 1078 in complex.js: Math.abs replaced with Math.sin
Mutant 1079 in complex.js: Math.abs replaced with Math.cos
Mutant 1080 in complex.js: Math.abs replaced with Math.tan
Mutant 1081 in complex.js: z['re'] - this['re'] replaced with z['im'] - this['im']
Mutant 1082 in complex.js: z['re'] - this['re'] replaced with z['re'] - this['im']
Mutant 1083 in complex.js: z['re'] - this['re'] replaced with z['im'] - this['re']
Mutant 1084 in complex.js: Math.abs replaced with Math.sin
Mutant 1085 in complex.js: Math.abs replaced with Math.PI
Mutant 1086 in complex.js: Math.abs replaced with this.re * this.im
Mutant 1087 in complex.js: z['im'] - this['im'] replaced with z['im'] + this['im']
Mutant 1088 in complex.js: z['im'] - this['im'] replaced with z['im'] * this['im']
Mutant 1089 in complex.js: z['im'] - this['im'] replaced with z['im'] / this['im']
Mutant 1090 in complex.js: this['isNaN']() replaced with !this['isNaN']()
Mutant 1091 in complex.js: this['isNaN']() replaced with this['isFinite']()
Mutant 1092 in complex.js: this['isNaN'] replaced with this['re'] !== this['re']
Mutant 1093 in complex.js: this['isInfinite']() replaced with this['isNaN']()
Mutant 1094 in complex.js: this['isInfinite']() replaced with !this['isFinite']()
Mutant 1095 in complex.js: this['isInfinite']() replaced with this['isInfinite']() && !this['isNaN']()
Mutant 1096 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with Math.abs(a) > Complex['EPSILON']
Mutant 1097 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with Math.abs(a) <= Complex['EPSILON']
Mutant 1098 in complex.js: Math.abs replaced with Math.sin
Mutant 1099 in complex.js: Math.abs replaced with Math.cos
Mutant 1100 in complex.js: Math.abs replaced with Math.tan
Mutant 1101 in complex.js: a replaced with a + b
Mutant 1102 in complex.js: a replaced with a * b
Mutant 1103 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with b < Complex['EPSILON']
Mutant 1104 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with Math.abs(b) <= Complex['EPSILON']
Mutant 1105 in complex.js: Math.abs replaced with Math.sqrt
Mutant 1106 in complex.js: Math.abs replaced with Math.random
Mutant 1107 in complex.js: Math.abs replaced with this.re
Mutant 1108 in complex.js: b replaced with -b
Mutant 1109 in complex.js: b replaced with b + 1
Mutant 1110 in complex.js: b replaced with b * 2
Mutant 1111 in complex.js: b === 0 replaced with b !== 0
Mutant 1112 in complex.js: b === 0 replaced with a === 0
Mutant 1113 in complex.js: b === 0 replaced with a + b === 0
Mutant 1114 in complex.js: a !== 0 replaced with a == 0
Mutant 1115 in complex.js: a !== 0 replaced with a === 0
Mutant 1116 in complex.js: b < 0 replaced with b > 0
Mutant 1117 in complex.js: b < 0 replaced with b <= 0
Mutant 1118 in complex.js: b < 0 replaced with b !== 0
Mutant 1119 in complex.js: b < 0 replaced with b > 0
Mutant 1120 in complex.js: b < 0 replaced with b <= 0
Mutant 1121 in complex.js: b < 0 replaced with b != 0
Mutant 1122 in complex.js: 1 !== b replaced with b !== 1
Mutant 1123 in complex.js: 1 !== b replaced with b + 1
Mutant 1124 in complex.js: 1 !== b replaced with b - 1
Mutant 1125 in complex.js: this['im'] === 0 replaced with this['im'] !== 0
Mutant 1126 in complex.js: this['im'] === 0 replaced with this['re'] === 0
Mutant 1127 in complex.js: this['im'] === 0 replaced with this['im'] === Infinity
Mutant 1128 in complex.js: isNaN replaced with isFinite
Mutant 1129 in complex.js: isNaN replaced with !isFinite
Mutant 1130 in complex.js: isNaN replaced with isInfinite
Mutant 1131 in complex.js: this['re'] replaced with this['im']
Mutant 1132 in complex.js: this['re'] replaced with this['re'] + this['im']
Mutant 1133 in complex.js: this['re'] replaced with 0
Mutant 1134 in complex.js: isNaN replaced with isFinite
Mutant 1135 in complex.js: isNaN replaced with !isNaN
Mutant 1136 in complex.js: this['im'] replaced with this['re']
Mutant 1137 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 1138 in complex.js: this['im'] replaced with this['im'] * 2
Mutant 1139 in complex.js: isFinite replaced with !isFinite
Mutant 1140 in complex.js: this['re'] replaced with this['im']
Mutant 1141 in complex.js: this['re'] replaced with this['re'] + this['im']
Mutant 1142 in complex.js: this['re'] replaced with this['re'] * this['im']
Mutant 1143 in complex.js: isFinite replaced with isNaN
Mutant 1144 in complex.js: isFinite replaced with !isFinite
Mutant 1145 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 1146 in complex.js: this['im'] replaced with this['im'] * 2
Mutant 1147 in complex.js: this['im'] replaced with this['im'] / 2
Mutant 1148 in complex.js: this['isNaN'] replaced with !this['isNaN']
Mutant 1149 in complex.js: this['isNaN'] replaced with this['isFinite']
Mutant 1150 in complex.js: this['isNaN'] replaced with this['isInfinite']
Mutant 1151 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define === 'function' && define['amd'] && false
Mutant 1152 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define === 'function' && define['amd'] && true
Mutant 1153 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define === 'function' && define['amd'] && define
Mutant 1154 in complex.js: typeof exports === 'object' replaced with typeof exports !== 'object'
Mutant 1155 in complex.js: typeof exports === 'object' replaced with typeof exports !== 'function'
Mutant 1156 in complex.js: typeof exports === 'object' replaced with typeof exports !== 'undefined'
Mutant 1157 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': false
})
Mutant 1158 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': undefined
})
Mutant 1159 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': null
})
Mutant 1160 in complex.js: Complex replaced with Complex.prototype.isNaN = function () {
  return true;
}
Mutant 1161 in complex.js: Complex replaced with Complex.prototype.isFinite = function () {
  return false;
}
Mutant 1162 in complex.js: Complex replaced with Complex.prototype.isInfinite = function () {
  return true;
}
Mutant 1163 in complex.js: {
  'value': true
} replaced with {
  'value': false
}
Mutant 1164 in complex.js: {
  'value': true
} replaced with {
  'value': null
}
Mutant 1165 in complex.js: {
  'value': true
} replaced with {
  'value': undefined
}
[32m12:39:15 (2830) INFO Instrumenter[39m Instrumented 1 source file(s) with 1166 mutant(s)
[32m12:39:15 (2830) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m12:39:17 (2830) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m12:39:17 (2830) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m12:39:17 (2830) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 518 ms, overhead 2 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~10m) 19/1166 tested (19 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~9m) 38/1166 tested (28 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~9m) 57/1166 tested (34 survived, 0 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~9m) 76/1166 tested (43 survived, 0 timed out)
Mutation testing 8% (elapsed: <1m, remaining: ~9m) 95/1166 tested (45 survived, 0 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~9m) 114/1166 tested (49 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~8m) 134/1166 tested (53 survived, 0 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~8m) 153/1166 tested (53 survived, 0 timed out)
Mutation testing 14% (elapsed: ~1m, remaining: ~8m) 172/1166 tested (57 survived, 0 timed out)
Mutation testing 16% (elapsed: ~1m, remaining: ~8m) 191/1166 tested (60 survived, 0 timed out)
Mutation testing 18% (elapsed: ~1m, remaining: ~8m) 211/1166 tested (60 survived, 0 timed out)
Mutation testing 19% (elapsed: ~2m, remaining: ~8m) 230/1166 tested (67 survived, 0 timed out)
Mutation testing 21% (elapsed: ~2m, remaining: ~7m) 249/1166 tested (73 survived, 0 timed out)
Mutation testing 22% (elapsed: ~2m, remaining: ~7m) 268/1166 tested (85 survived, 0 timed out)
Mutation testing 24% (elapsed: ~2m, remaining: ~7m) 287/1166 tested (87 survived, 0 timed out)
Mutation testing 26% (elapsed: ~2m, remaining: ~7m) 307/1166 tested (93 survived, 0 timed out)
Mutation testing 28% (elapsed: ~2m, remaining: ~7m) 327/1166 tested (97 survived, 0 timed out)
Mutation testing 29% (elapsed: ~3m, remaining: ~7m) 346/1166 tested (103 survived, 0 timed out)
Mutation testing 31% (elapsed: ~3m, remaining: ~6m) 365/1166 tested (106 survived, 0 timed out)
Mutation testing 33% (elapsed: ~3m, remaining: ~6m) 385/1166 tested (110 survived, 0 timed out)
Mutation testing 34% (elapsed: ~3m, remaining: ~6m) 404/1166 tested (113 survived, 0 timed out)
Mutation testing 36% (elapsed: ~3m, remaining: ~6m) 423/1166 tested (120 survived, 0 timed out)
Mutation testing 37% (elapsed: ~3m, remaining: ~6m) 442/1166 tested (128 survived, 0 timed out)
Mutation testing 39% (elapsed: ~4m, remaining: ~6m) 462/1166 tested (129 survived, 0 timed out)
Mutation testing 41% (elapsed: ~4m, remaining: ~5m) 481/1166 tested (129 survived, 0 timed out)
Mutation testing 42% (elapsed: ~4m, remaining: ~5m) 500/1166 tested (129 survived, 0 timed out)
Mutation testing 44% (elapsed: ~4m, remaining: ~5m) 519/1166 tested (129 survived, 0 timed out)
Mutation testing 46% (elapsed: ~4m, remaining: ~5m) 538/1166 tested (133 survived, 0 timed out)
Mutation testing 47% (elapsed: ~4m, remaining: ~5m) 558/1166 tested (136 survived, 0 timed out)
Mutation testing 49% (elapsed: ~5m, remaining: ~5m) 577/1166 tested (139 survived, 0 timed out)
Mutation testing 51% (elapsed: ~5m, remaining: ~4m) 595/1166 tested (139 survived, 0 timed out)
Mutation testing 52% (elapsed: ~5m, remaining: ~4m) 613/1166 tested (140 survived, 0 timed out)
Mutation testing 54% (elapsed: ~5m, remaining: ~4m) 632/1166 tested (140 survived, 0 timed out)
Mutation testing 55% (elapsed: ~5m, remaining: ~4m) 651/1166 tested (142 survived, 0 timed out)
Mutation testing 57% (elapsed: ~5m, remaining: ~4m) 670/1166 tested (143 survived, 0 timed out)
Mutation testing 59% (elapsed: ~6m, remaining: ~4m) 689/1166 tested (144 survived, 0 timed out)
Mutation testing 60% (elapsed: ~6m, remaining: ~3m) 709/1166 tested (154 survived, 0 timed out)
Mutation testing 62% (elapsed: ~6m, remaining: ~3m) 728/1166 tested (173 survived, 0 timed out)
Mutation testing 64% (elapsed: ~6m, remaining: ~3m) 748/1166 tested (193 survived, 0 timed out)
Mutation testing 65% (elapsed: ~6m, remaining: ~3m) 767/1166 tested (212 survived, 0 timed out)
Mutation testing 67% (elapsed: ~6m, remaining: ~3m) 787/1166 tested (230 survived, 0 timed out)
Mutation testing 69% (elapsed: ~7m, remaining: ~3m) 806/1166 tested (242 survived, 0 timed out)
Mutation testing 70% (elapsed: ~7m, remaining: ~2m) 825/1166 tested (243 survived, 0 timed out)
Mutation testing 72% (elapsed: ~7m, remaining: ~2m) 845/1166 tested (244 survived, 0 timed out)
Mutation testing 74% (elapsed: ~7m, remaining: ~2m) 864/1166 tested (244 survived, 0 timed out)
Mutation testing 75% (elapsed: ~7m, remaining: ~2m) 883/1166 tested (244 survived, 0 timed out)
Mutation testing 77% (elapsed: ~7m, remaining: ~2m) 903/1166 tested (262 survived, 0 timed out)
Mutation testing 79% (elapsed: ~8m, remaining: ~2m) 922/1166 tested (281 survived, 0 timed out)
Mutation testing 80% (elapsed: ~8m, remaining: ~1m) 942/1166 tested (301 survived, 0 timed out)
Mutation testing 82% (elapsed: ~8m, remaining: ~1m) 961/1166 tested (320 survived, 0 timed out)
Mutation testing 84% (elapsed: ~8m, remaining: ~1m) 981/1166 tested (340 survived, 0 timed out)
Mutation testing 85% (elapsed: ~8m, remaining: ~1m) 1000/1166 tested (359 survived, 0 timed out)
Mutation testing 87% (elapsed: ~8m, remaining: ~1m) 1019/1166 tested (369 survived, 0 timed out)
Mutation testing 89% (elapsed: ~9m, remaining: ~1m) 1039/1166 tested (389 survived, 0 timed out)
Mutation testing 90% (elapsed: ~9m, remaining: <1m) 1058/1166 tested (408 survived, 0 timed out)
Mutation testing 92% (elapsed: ~9m, remaining: <1m) 1077/1166 tested (417 survived, 0 timed out)
Mutation testing 93% (elapsed: ~9m, remaining: <1m) 1096/1166 tested (422 survived, 0 timed out)
Mutation testing 95% (elapsed: ~9m, remaining: <1m) 1114/1166 tested (425 survived, 0 timed out)
Mutation testing 97% (elapsed: ~9m, remaining: <1m) 1134/1166 tested (432 survived, 0 timed out)
Mutation testing 98% (elapsed: ~10m, remaining: <1m) 1153/1166 tested (443 survived, 0 timed out)

All tests
  ✓ All tests (killed 714)

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x + 1) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x * 2) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x + 1) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x * 2) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x / 2) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:56
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.cos(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:56
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.sin(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:56
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.tan(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(x + 1)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.acos(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.sin(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.tan(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x + 1) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x * 2) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x / 2) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.sin(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (x => x + 1(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (x => x * 2(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x * x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x / 2) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x + 1) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.sinh(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.tanh(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.asinh(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-y)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(x + y)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(x - y)) * 0.5;

[Survived] PrecomputedMutator
complex.js:93:13
-       var a = Math.abs(x);
+       var a = Math.max(x);

[Survived] PrecomputedMutator
complex.js:93:13
-       var a = Math.abs(x);
+       var a = Math.min(x);

[Survived] PrecomputedMutator
complex.js:96:9
-       if (a < 3000 && b < 3000) {
+       if (a !== 3000 && b !== 3000) {

[Survived] PrecomputedMutator
complex.js:96:9
-       if (a < 3000 && b < 3000) {
+       if (a + b !== 3000) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a > b) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a == b) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a * b) {

[Survived] PrecomputedMutator
complex.js:106:16
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.cbrt(1 + b * b);

[Survived] PrecomputedMutator
complex.js:106:16
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.exp(1 + b * b);

[Survived] PrecomputedMutator
complex.js:106:16
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.log(1 + b * b);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(b * b - 1);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(b * b + 1);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(b * b * 2);

[Survived] PrecomputedMutator
complex.js:122:23
-       var _a = Math.abs(a);
+       var _a = Math.abs(a + b);

[Survived] PrecomputedMutator
complex.js:122:23
-       var _a = Math.abs(a);
+       var _a = Math.abs(a - b);

[Survived] PrecomputedMutator
complex.js:123:23
-       var _b = Math.abs(b);
+       var _b = Math.abs(-b);

[Survived] PrecomputedMutator
complex.js:126:23
-         return Math.log(_b);
+         return Math.log(Math.sqrt(_a * _a + _b * _b));

[Survived] PrecomputedMutator
complex.js:133:9
-       if (_a < 3000 && _b < 3000) {
+       if (_a < 2999 && _b < 2999) {

[Survived] PrecomputedMutator
complex.js:133:9
-       if (_a < 3000 && _b < 3000) {
+       if (_a < 3000 && _b < 2999) {

[Survived] PrecomputedMutator
complex.js:172:27
-       return 0.5 * Math.log(a * a + b * b) + Math.LN2;
+       return 0.5 * Math.log(a + b * b) + Math.LN2;

[Survived] PrecomputedMutator
complex.js:179:9
-       if (a === undefined || a === null) {
+       if (a === undefined || a === null || a === NaN) {

[Survived] PrecomputedMutator
complex.js:182:16
-       } else if (b !== undefined) {
+       } else if (b !== undefined && b !== null) {

[Survived] PrecomputedMutator
complex.js:182:16
-       } else if (b !== undefined) {
+       } else if (b !== undefined && b !== null && b !== "") {

[Survived] PrecomputedMutator
complex.js:190:15
-             if ('im' in a && 're' in a) {
+             if ('im' in a || 're' in a) {

[Survived] PrecomputedMutator
complex.js:194:17
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (a['abs'] == Infinity && Number.isFinite(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:200:34
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r'] + 1) && Number.isFinite(a['phi'])) {

[Survived] PrecomputedMutator
complex.js:200:34
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r'] * 2) && Number.isFinite(a['phi'])) {

[Survived] PrecomputedMutator
complex.js:200:45
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r']) && Number.isSafeInteger(a['phi'])) {

[Survived] PrecomputedMutator
complex.js:200:61
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r']) && Number.isFinite(a.phi)) {

[Survived] PrecomputedMutator
complex.js:222:15
-             if (tokens === null) {
+             if (tokens.length === 0) {

[Survived] PrecomputedMutator
complex.js:222:15
-             if (tokens === null) {
+             if (tokens[0] === null) {

[Survived] PrecomputedMutator
complex.js:222:15
-             if (tokens === null) {
+             if (tokens[0] === undefined) {

[Survived] PrecomputedMutator
complex.js:238:19
-                 if (plus + minus === 0) {
+                 if (plus - minus === 0) {

[Survived] PrecomputedMutator
complex.js:242:19
-                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
+                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) && tokens[i + 1] !== 'i') {

[Survived] PrecomputedMutator
complex.js:242:19
-                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
+                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) && tokens[i + 1] !== 'I') {

[Survived] PrecomputedMutator
complex.js:242:51
-                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
+                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 2])) {

[Survived] PrecomputedMutator
complex.js:243:39
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
+                   z['im'] += parseFloat((minus % 3 ? '-' : '') + tokens[i + 1]);

[Survived] PrecomputedMutator
complex.js:243:39
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
+                   z['im'] += parseFloat((minus % 2 ? '-' : '') + (tokens[i + 1] || 0));

[Survived] PrecomputedMutator
complex.js:243:39
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
+                   z['im'] += parseFloat((minus % 2 ? '-' : '') + (tokens[i + 1] || tokens[i - 1]));

[Survived] PrecomputedMutator
complex.js:252:19
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 && !isNaN(c)) {

[Survived] PrecomputedMutator
complex.js:252:41
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 || Number.isNaN(c)) {

[Survived] PrecomputedMutator
complex.js:256:19
-                 if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
+                 if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I' || tokens[i + 1] === 'j') {

[Survived] PrecomputedMutator
complex.js:256:19
-                 if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
+                 if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I' || tokens[i + 1] === 'e') {

[Survived] PrecomputedMutator
complex.js:256:19
-                 if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
+                 if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I' || tokens[i + 1] === 'π') {

[Survived] PrecomputedMutator
complex.js:260:28
-                   z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
+                   z['re'] += Number((minus % 2 ? '-' : '') + c);

[Survived] PrecomputedMutator
complex.js:267:15
-             if (plus + minus > 0) {
+             if (plus > minus) {

[Survived] PrecomputedMutator
complex.js:267:15
-             if (plus + minus > 0) {
+             if (minus > plus) {

[Survived] PrecomputedMutator
complex.js:267:15
-             if (plus + minus > 0) {
+             if (plus !== minus) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isFinite(z['re']) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (Number.isNaN(z['re']) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['im']) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re'] + z['im']) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['im'] * z['re']) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:27
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isFinite(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(z['re'])) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(z['abs'])) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(z['arg'])) {

[Survived] PrecomputedMutator
complex.js:334:11
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:339:35
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() || z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:358:11
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (z['isInfinite']() || this['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (!this['isInfinite']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (z['isInfinite']() && this['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isNaN']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:382:11
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if (this['isInfinite']() && z['isZero']() || this['isZero']() && !z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isNaN']())) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isFinite']())) {

[Survived] PrecomputedMutator
complex.js:387:35
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() || z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:411:32
-         if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {
+         if ((this['isZero']() && z['isFinite']()) || (this['isInfinite']() && z['isInfinite']())) {

[Survived] PrecomputedMutator
complex.js:416:11
-         if (this['isInfinite']() || z['isZero']()) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:416:35
-         if (this['isInfinite']() || z['isZero']()) {
+         if (this['isInfinite']() || z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isZero']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isInfinite']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isNaN']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:421:31
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isZero']() || z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:437:20
-         if (Math.abs(c) < Math.abs(d)) {
+         if (Math.abs(c / d) < Math.abs(d)) {

[Survived] PrecomputedMutator
complex.js:469:11
-         if (z['isZero']()) {
+         if (z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:469:11
-         if (z['isZero']()) {
+         if (z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:474:11
-         if (z['im'] === 0) {
+         if (z['im'] * 2 === 0) {

[Survived] PrecomputedMutator
complex.js:478:30
-             return new Complex(Math.pow(a, z['re']), 0);
+             return new Complex(Math.pow(a, z['re'] + z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['re'] + 1), 0);

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['im'] * z['re']), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['re'] + 1), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['re'] * 2), 0);

[Survived] PrecomputedMutator
complex.js:486:46
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(Math.sqrt(b), z['re']));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['re'] + 1));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['im'] * 2));

[Survived] PrecomputedMutator
complex.js:488:47
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(b, z['re'] + z['im']), 0);

[Survived] PrecomputedMutator
complex.js:490:38
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:490:38
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['re'] + 1));

[Survived] PrecomputedMutator
complex.js:490:38
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im'] * 2));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['re'] + 1));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im'] + 1));

[Survived] PrecomputedMutator
complex.js:514:11
-         if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {
+         if (a === 0 && b === 0 && z['re'] > 0 && z['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:519:26
-         var loh = logHypot(a, b);
+         var loh = logHypot(this.re, b);

[Survived] PrecomputedMutator
complex.js:555:23
-           im = Math.abs(b) / Math.sqrt(2 * (r + a));
+           im = Math.abs(-b) / Math.sqrt(2 * (r + a));

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['im'] !== 0) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['im'] < 0) {

[Survived] PrecomputedMutator
complex.js:574:24
-           tmp * Math.cos(this['im']),
+           tmp * Math.cos(-this['im']),

[Survived] PrecomputedMutator
complex.js:598:20
-           Math.expm1(a) * Math.cos(b) + cosm1(b),
+           Math.expm1(this.re) * Math.cos(b) + cosm1(b),

[Survived] PrecomputedMutator
complex.js:598:34
-           Math.expm1(a) * Math.cos(b) + cosm1(b),
+           Math.expm1(a) * Math.cos(-b) + cosm1(b),

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b === 0 && a < 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b === 0 && a !== 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b === 0 && Math.abs(a) > 0) {

[Survived] PrecomputedMutator
complex.js:628:32
-         return hypot(this['re'], this['im']);
+         return hypot(this['re'], -this['im']);

[Survived] PrecomputedMutator
complex.js:673:18
-           Math.cos(a) * cosh(b),
+           Math.cos(-a) * cosh(b),

[Survived] PrecomputedMutator
complex.js:673:28
-           Math.cos(a) * cosh(b),
+           Math.cos(a) * cosh(-b),

[Survived] PrecomputedMutator
complex.js:691:34
-         var d = Math.cos(a) + cosh(b);
+         var d = Math.cos(a) + cosh(-b);

[Survived] PrecomputedMutator
complex.js:709:34
-         var d = Math.cos(a) - cosh(b);
+         var d = Math.cos(a) - cosh(-b);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * sinh(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * tanh(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * a) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(b * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(a * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.tan(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.sin(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.acos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * b);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(a + b);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(a * a);

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.tan(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.acos(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a + b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a * b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * sinh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * tanh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * csch(b) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(a) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b * 2) / d,

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           Math.cos(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           Math.tan(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           Math.sqrt(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a + b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a * b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.cosh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.tanh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(-b) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(Math.sin(b)) / d);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.sinh(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.tanh(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.acosh(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * a) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b + 1) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b - 1) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * -Math.sin(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.tan(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.acos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * b);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(a + 1);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(b * a);

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           Math.tan(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           Math.sqrt(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a + b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a * b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * sinh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * tanh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b * 2) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b - 1) / d,

[Survived] PrecomputedMutator
complex.js:749:10
-           -Math.cos(a) * sinh(b) / d);
+           -Math.sin(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:10
-           -Math.cos(a) * sinh(b) / d);
+           -Math.tan(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:10
-           -Math.cos(a) * sinh(b) / d);
+           -Math.acos(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(-a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a + b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sin(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * cos(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * tan(b) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(-b) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:810:11
-         if (a === 0) {
+         if (b === 0) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b > 1) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b < 1) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b === 0) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b === -2) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b !== -1) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b === -1 && a === 1) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (b != 0) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (b === 1) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (b > 0) {

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, b), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(-1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(a, b), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.acos(1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.asin(1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan(1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(0, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(-1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(a, a), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, b), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, a + b), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, a - b), 0);

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a === 0 || b === 0) {

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a === 0 && b !== 0) {

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a !== 0 && b !== 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a === 0 || b === 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a !== 0 && b !== 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a + b === 0) {

[Survived] PrecomputedMutator
complex.js:921:28
-           sinh(a) * Math.cos(b),
+           sinh(a) * Math.cos(b * a),

[Survived] PrecomputedMutator
complex.js:938:28
-           cosh(a) * Math.cos(b),
+           cosh(a) * Math.cos(-b),

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.sin(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.tan(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.acos(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b + 1) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b - 1) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b * 2) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(2 * b);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(a + b);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(a - b);

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * cosh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * tanh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * coth(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a + 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(b) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a * 2) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.sin(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.tan(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.acos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(-b) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(b * 2) / d,

[Survived] PrecomputedMutator
complex.js:993:13
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * -Math.cosh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:13
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * Math.sinh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:13
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * Math.tanh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a + 1) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(b) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a * b) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.tan(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.asin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(a) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.sin(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.sqrt(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * a) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b + 1) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b - 1) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + sinh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + tanh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + asinh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(2 * b);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(a + b);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(a - b);

[Survived] PrecomputedMutator
complex.js:1010:13
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * sinh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:13
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * tanh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:13
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * acosh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a + 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(b) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a * b) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.sin(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.tan(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.acos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(a) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(a + b) / d,

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * cosh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * tanh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * coth(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(-a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a + 1) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a * a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.tan(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.csc(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(-b) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:1026:17
-         var res = this['asin']();
+         var res = this['acos']();

[Survived] PrecomputedMutator
complex.js:1026:17
-         var res = this['asin']();
+         var res = this['atan']();

[Survived] PrecomputedMutator
complex.js:1026:17
-         var res = this['asin']();
+         var res = this['sin']();

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] !== 0) {

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] + 1, x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] * 2, x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] / 2, x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['im'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] + 1, x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] * 2, x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['re']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['im'] * 2) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['im'] * 3) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'] + temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(-x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(-x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'] + 1, temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], temp * 0) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], temp - temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], temp + 1) / 2;

[Survived] PrecomputedMutator
complex.js:1087:11
-         if (noIM) {
+         if (!noIM) {

[Survived] PrecomputedMutator
complex.js:1087:11
-         if (noIM) {
+         if (noIM && true) {

[Survived] PrecomputedMutator
complex.js:1087:11
-         if (noIM) {
+         if (noIM || false) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a != 0 || b != 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a > 0 && b > 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a < 0 || b < 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (b == 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (b !== 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (a === 0) {

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.sqrt(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.abs(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.exp(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a - Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a * Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a / Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:28
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.abs(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:28
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sin(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:28
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.log(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * b + 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * a - 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * a + b))

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['re'] === 0 && this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['re'] === 0 || this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['re'] === 0 && this['im'] !== 0) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['isFinite']()) {

[Survived] PrecomputedMutator
complex.js:1187:11
-         if (this['isInfinite']()) {
+         if (this['re'] === Infinity) {

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(11, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(places || 1);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(places + 1);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(2, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(-1, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.PI, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 1);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places && 0);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places ^ 0);

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['im'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['re'] * places + 1) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(Math.sqrt(this['re']) * places) / places,

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.floor(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.round(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.abs(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(this['re'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(this['im'] * places + 1) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(this['im'] * places * 2) / places);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(0, places || 10);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || Math.PI);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.sqrt(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.abs(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.random(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(0, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(2, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(a, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places && 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places ^ 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places ? 0 : 1);

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.ceil(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.abs(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['im'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['re'] / places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['im'] / places) / places,

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           Math.ceil(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           Math.round(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           Math.trunc(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['re'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['im'] * places + 1) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['im'] * places * 2) / places);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 1);

[Survived] PrecomputedMutator
complex.js:1254:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(20, places || 0);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places ^ 0);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places + 0);

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.ceil(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.trunc(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.floor(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.ceil(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.trunc(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1272:14
-         return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
+         return Math.sin(z['re'] - this['re']) <= Complex['EPSILON'] &&

[Survived] PrecomputedMutator
complex.js:1272:14
-         return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
+         return Math.tan(z['re'] - this['re']) <= Complex['EPSILON'] &&

[Survived] PrecomputedMutator
complex.js:1272:23
-         return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
+         return Math.abs(z['im'] - this['im']) <= Complex['EPSILON'] &&

[Survived] PrecomputedMutator
complex.js:1301:11
-         if (this['isInfinite']()) {
+         if (!this['isFinite']()) {

[Survived] PrecomputedMutator
complex.js:1301:11
-         if (this['isInfinite']()) {
+         if (this['isInfinite']() && !this['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:1305:11
-         if (Math.abs(a) < Complex['EPSILON']) {
+         if (Math.abs(a) <= Complex['EPSILON']) {

[Survived] PrecomputedMutator
complex.js:1309:11
-         if (Math.abs(b) < Complex['EPSILON']) {
+         if (Math.abs(b) <= Complex['EPSILON']) {

[Survived] PrecomputedMutator
complex.js:1309:20
-         if (Math.abs(b) < Complex['EPSILON']) {
+         if (Math.abs(-b) < Complex['EPSILON']) {

[Survived] PrecomputedMutator
complex.js:1321:13
-           if (b < 0) {
+           if (b <= 0) {

[Survived] PrecomputedMutator
complex.js:1328:18
-         } else if (b < 0) {
+         } else if (b <= 0) {

[Survived] PrecomputedMutator
complex.js:1333:11
-         if (1 !== b) { // b is the absolute imaginary part
+         if (b !== 1) { // b is the absolute imaginary part

[Survived] PrecomputedMutator
complex.js:1333:11
-         if (1 !== b) { // b is the absolute imaginary part
+         if (b - 1) { // b is the absolute imaginary part

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['im']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re'] + this['im']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(0) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['re']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['im'] + 1);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['im'] * 2);

[Survived] PrecomputedMutator
complex.js:1388:23
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re'] + this['im']) && isFinite(this['im']);

[Survived] PrecomputedMutator
complex.js:1388:23
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re'] * this['im']) && isFinite(this['im']);

[Survived] PrecomputedMutator
complex.js:1388:47
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re']) && isFinite(this['im'] + 1);

[Survived] PrecomputedMutator
complex.js:1388:47
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re']) && isFinite(this['im'] * 2);

[Survived] PrecomputedMutator
complex.js:1388:47
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re']) && isFinite(this['im'] / 2);

[Survived] PrecomputedMutator
complex.js:1398:16
-         return !(this['isNaN']() || this['isFinite']());
+         return !(this['isFinite']() || this['isFinite']());

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof define === 'function' && define['amd'] && false) {

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof define === 'function' && define['amd'] && true) {

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof define === 'function' && define['amd'] && define) {

[Survived] PrecomputedMutator
complex.js:1415:14
-     } else if (typeof exports === 'object') {
+     } else if (typeof exports !== 'function') {

[Survived] PrecomputedMutator
complex.js:1415:14
-     } else if (typeof exports === 'object') {
+     } else if (typeof exports !== 'undefined') {

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': false
+   });

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': undefined
+   });

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': null
+   });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': false
+   });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': null
+   });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': undefined
+   });

Ran 1.00 tests per mutant on average.
------------|---------|----------|-----------|------------|----------|----------|
File        | % score | # killed | # timeout | # survived | # no cov | # errors |
------------|---------|----------|-----------|------------|----------|----------|
All files   |   61.23 |      714 |         0 |        452 |        0 |        0 |
 complex.js |   61.23 |      714 |         0 |        452 |        0 |        0 |
------------|---------|----------|-----------|------------|----------|----------|
[32m12:49:24 (2830) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/Complex.js/reports/mutation/mutation.html
[32m12:49:24 (2830) INFO MutationTestExecutor[39m Done in 10 minutes 10 seconds.

real	10m11.713s
user	10m23.652s
sys	1m45.822s
