*** using precomputed mutations ***
[32m14:41:56 (2622) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m14:41:56 (2622) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m14:41:56 (2622) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m14:41:57 (2622) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m14:41:57 (2622) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m14:41:57 (2622) INFO ProjectReader[39m Found 1 of 741 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 257 mutants from MUTATION_TESTING/template-full_codellama-13b-instruct_0.0/mutants.json ***
Mutant 0 in crawler-url-parser.js: str replaced with str.toLowerCase()
Mutant 1 in crawler-url-parser.js: str replaced with str.toUpperCase()
Mutant 2 in crawler-url-parser.js: str replaced with str.trim()
Mutant 3 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === null
Mutant 4 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === undefined
Mutant 5 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === false
Mutant 6 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr && _has_illegal_chars(currentUrlStr) && true
Mutant 7 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr && _has_illegal_chars(currentUrlStr) && false
Mutant 8 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr && _has_illegal_chars(currentUrlStr) && !currentUrlStr
Mutant 9 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.toLowerCase()
Mutant 10 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.split('/')[0]
Mutant 11 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with baseUrlStr && _has_illegal_chars(baseUrlStr) && true
Mutant 12 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with baseUrlStr && _has_illegal_chars(baseUrlStr) && false
Mutant 13 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with baseUrlStr && _has_illegal_chars(baseUrlStr) && baseUrlStr.length > 0
Mutant 14 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toLowerCase()
Mutant 15 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toUpperCase()
failed to parse replacement /^(?!(?:\w+:)?\/\/)/: SyntaxError: Invalid regular expression: //^(?!(?:\w+:)?\//: Unterminated group
Mutant 16 in crawler-url-parser.js: currentUrlStr.replace(/#.*$/, '') replaced with currentUrlStr.replace(/#.*$/, ' ')
Mutant 17 in crawler-url-parser.js: /#.*$/ replaced with /^#.*$/
Mutant 18 in crawler-url-parser.js: /#.*$/ replaced with /^#.*/
Mutant 19 in crawler-url-parser.js: /#.*$/ replaced with /^#/
Mutant 20 in crawler-url-parser.js: '' replaced with ' '
Mutant 21 in crawler-url-parser.js: '' replaced with '#'
Mutant 22 in crawler-url-parser.js: '' replaced with '#abc'
Mutant 23 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toLowerCase()
Mutant 24 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.split('/')[0]
Mutant 25 in crawler-url-parser.js: baseUrlStr.replace(/#.*$/, '') replaced with baseUrlStr.replace(/#.*$/, ' ')
Mutant 26 in crawler-url-parser.js: /#.*$/ replaced with /^#/
Mutant 27 in crawler-url-parser.js: /#.*$/ replaced with /^#\w+/
Mutant 28 in crawler-url-parser.js: /#.*$/ replaced with /^#\w+/i
Mutant 29 in crawler-url-parser.js: '' replaced with ' '
Mutant 30 in crawler-url-parser.js: '' replaced with '#'
Mutant 31 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.toLowerCase()
Mutant 32 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.split('/')[0]
Mutant 33 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, false)
Mutant 34 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, true, false)
Mutant 35 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.toLowerCase()
Mutant 36 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.split('/')[0]
Mutant 37 in crawler-url-parser.js: true replaced with false
Mutant 38 in crawler-url-parser.js: true replaced with undefined
Mutant 39 in crawler-url-parser.js: true replaced with null
Mutant 40 in crawler-url-parser.js: true replaced with false
Mutant 41 in crawler-url-parser.js: true replaced with undefined
Mutant 42 in crawler-url-parser.js: true replaced with null
Mutant 43 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.protocol != 'ftp:'
Mutant 44 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.protocol != 'ftp:' && parsedUrl.protocol != 'mailto:'
Mutant 45 in crawler-url-parser.js: parsedUrl.host == null && baseUrlStr replaced with parsedUrl.host == null || baseUrlStr
Mutant 46 in crawler-url-parser.js: parsedUrl.host == null && baseUrlStr replaced with parsedUrl.host == null && !baseUrlStr
Mutant 47 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, false, false)
Mutant 48 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, true, false)
Mutant 49 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, false, true)
Mutant 50 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toLowerCase()
Mutant 51 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toUpperCase()
Mutant 52 in crawler-url-parser.js: true replaced with false
Mutant 53 in crawler-url-parser.js: true replaced with undefined
Mutant 54 in crawler-url-parser.js: true replaced with null
Mutant 55 in crawler-url-parser.js: true replaced with false
Mutant 56 in crawler-url-parser.js: true replaced with undefined
Mutant 57 in crawler-url-parser.js: true replaced with null
Mutant 58 in crawler-url-parser.js: URL.format replaced with URL.resolve
Mutant 59 in crawler-url-parser.js: URL.format replaced with URL.parse
Mutant 60 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.protocol
Mutant 61 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.host
Mutant 62 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.pathname
Mutant 63 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.format(parsedBaseUrl, parsedUrl)
Mutant 64 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.parse(parsedBaseUrl, parsedUrl)
Mutant 65 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(URL.parse(currentUrlStr))
Mutant 66 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(URL.parse(baseUrlStr))
Mutant 67 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.protocol
Mutant 68 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.host
Mutant 69 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.pathname
Mutant 70 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.protocol
Mutant 71 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.host
Mutant 72 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.pathname
Mutant 73 in crawler-url-parser.js: URL.format replaced with URL.resolve
Mutant 74 in crawler-url-parser.js: URL.format replaced with URL.parse
Mutant 75 in crawler-url-parser.js: absoluteUrl replaced with currentUrlStr
Mutant 76 in crawler-url-parser.js: absoluteUrl replaced with parsedUrl
Mutant 77 in crawler-url-parser.js: absoluteUrl replaced with URL.format(parsedUrl)
Mutant 78 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, false)
Mutant 79 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, true, false)
Mutant 80 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, true)
Mutant 81 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.toLowerCase()
Mutant 82 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.split('/').pop()
Mutant 83 in crawler-url-parser.js: true replaced with false
Mutant 84 in crawler-url-parser.js: true replaced with undefined
Mutant 85 in crawler-url-parser.js: true replaced with null
Mutant 86 in crawler-url-parser.js: true replaced with false
Mutant 87 in crawler-url-parser.js: true replaced with undefined
Mutant 88 in crawler-url-parser.js: true replaced with null
Mutant 89 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.protocol
Mutant 90 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.host
Mutant 91 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.pathname
Mutant 92 in crawler-url-parser.js: ret.host replaced with ret.host.toLowerCase()
Mutant 93 in crawler-url-parser.js: ret.host replaced with ret.host.toUpperCase()
Mutant 94 in crawler-url-parser.js: ret.host replaced with ret.host.split('.')[0]
Mutant 95 in crawler-url-parser.js: ret.host replaced with ret.host.toLowerCase()
Mutant 96 in crawler-url-parser.js: ret.host replaced with ret.host.toUpperCase()
Mutant 97 in crawler-url-parser.js: ret.host replaced with ret.host.split('.')[0]
Mutant 98 in crawler-url-parser.js: "=" replaced with "!="
Mutant 99 in crawler-url-parser.js: "=" replaced with "<"
Mutant 100 in crawler-url-parser.js: "=" replaced with ">"
Mutant 101 in crawler-url-parser.js: sourceUrl replaced with sourceUrl.toLowerCase()
Mutant 102 in crawler-url-parser.js: sourceUrl replaced with sourceUrl.toUpperCase()
Mutant 103 in crawler-url-parser.js: data replaced with data.toString()
Mutant 104 in crawler-url-parser.js: data replaced with data.length
Mutant 105 in crawler-url-parser.js: data replaced with data.slice(0, 1)
Mutant 106 in crawler-url-parser.js: 'base' replaced with 'base' + '1'
Mutant 107 in crawler-url-parser.js: 'base' replaced with 'base' + 1
Mutant 108 in crawler-url-parser.js: 'href' replaced with 'href' + 'a'
Mutant 109 in crawler-url-parser.js: 'href' replaced with 'href' + 'a' + 'b'
Mutant 110 in crawler-url-parser.js: embedBaseUrlStr replaced with embedBaseUrlStr.toLowerCase()
Mutant 111 in crawler-url-parser.js: embedBaseUrlStr replaced with embedBaseUrlStr.toUpperCase()
Mutant 112 in crawler-url-parser.js: 'a' replaced with 'b'
Mutant 113 in crawler-url-parser.js: 'a' replaced with 'c'
Mutant 114 in crawler-url-parser.js: this replaced with this.href
Mutant 115 in crawler-url-parser.js: this replaced with $(this).attr('href')
Mutant 116 in crawler-url-parser.js: 'href' replaced with 'href' + 'foo'
Mutant 117 in crawler-url-parser.js: 'href' replaced with 'href' + 'foo' + 'bar'
Mutant 118 in crawler-url-parser.js: this replaced with this.text
Mutant 119 in crawler-url-parser.js: this replaced with $(this).text()
Mutant 120 in crawler-url-parser.js: this replaced with $(this).attr('text')
Mutant 121 in crawler-url-parser.js: typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href) replaced with typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href) || href == null
Mutant 122 in crawler-url-parser.js: href replaced with href.toLowerCase()
Mutant 123 in crawler-url-parser.js: href replaced with href.trim()
Mutant 124 in crawler-url-parser.js: href replaced with href.replace(/;.*$/g, "")
Mutant 125 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href + baseUrlStr)
Mutant 126 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href.toLowerCase())
Mutant 127 in crawler-url-parser.js: href replaced with href.toLowerCase()
Mutant 128 in crawler-url-parser.js: href replaced with href.trim()
Mutant 129 in crawler-url-parser.js: baseUrlStr replaced with baseUrl.url
Mutant 130 in crawler-url-parser.js: baseUrlStr replaced with null
Mutant 131 in crawler-url-parser.js: baseUrlStr replaced with undefined
Mutant 132 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with currentUrl.url
Mutant 133 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with currentUrl.url || null
Mutant 134 in crawler-url-parser.js: urlMap.has replaced with urlMap.hasOwnProperty
Mutant 135 in crawler-url-parser.js: urlMap.has replaced with urlMap.get
Mutant 136 in crawler-url-parser.js: urlMap.has replaced with urlMap.set
Mutant 137 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url.toLowerCase()
Mutant 138 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url.toUpperCase()
Mutant 139 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url.toLowerCase()
Mutant 140 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url.toUpperCase()
Mutant 141 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.includes(text)
Mutant 142 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.startsWith(text)
Mutant 143 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.endsWith(text)
Mutant 144 in crawler-url-parser.js: tmpUrl.text.includes replaced with tmpUrl.text === el.text
Mutant 145 in crawler-url-parser.js: text replaced with text.toUpperCase()
Mutant 146 in crawler-url-parser.js: text replaced with text.toLowerCase()
Mutant 147 in crawler-url-parser.js: text replaced with text.trim()
Mutant 148 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.url)
Mutant 149 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.host)
Mutant 150 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.protocol)
Mutant 151 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url.toLowerCase()
Mutant 152 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url.toUpperCase()
Mutant 153 in crawler-url-parser.js: currentUrl replaced with currentUrl.url
Mutant 154 in crawler-url-parser.js: currentUrl replaced with currentUrl.protocol
Mutant 155 in crawler-url-parser.js: currentUrl replaced with currentUrl.host
Mutant 156 in crawler-url-parser.js: baseUrlStr replaced with baseUrl.url
Mutant 157 in crawler-url-parser.js: baseUrlStr replaced with baseUrl.protocol
Mutant 158 in crawler-url-parser.js: baseUrlStr replaced with baseUrl.host
Mutant 159 in crawler-url-parser.js: for (let currentUrl of urlMap.values()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
} replaced with for (let currentUrl of urlMap.keys()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
}
Mutant 160 in crawler-url-parser.js: for (let currentUrl of urlMap.values()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
} replaced with for (let currentUrl of urlMap.entries()) {
  currentUrl.type = gettype(currentUrl, baseUrl);
}
Mutant 161 in crawler-url-parser.js: urlMap.values() replaced with urlMap.keys()
Mutant 162 in crawler-url-parser.js: urlMap.values() replaced with urlMap.entries()
Mutant 163 in crawler-url-parser.js: urlMap.values() replaced with urlMap.forEach()
Mutant 164 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(currentUrl.url, baseUrl.url)
Mutant 165 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(currentUrl, baseUrl.url)
Mutant 166 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(currentUrl.url, baseUrl)
Mutant 167 in crawler-url-parser.js: currentUrl replaced with currentUrl.url
Mutant 168 in crawler-url-parser.js: currentUrl replaced with currentUrl.protocol
Mutant 169 in crawler-url-parser.js: currentUrl replaced with currentUrl.host
Mutant 170 in crawler-url-parser.js: baseUrl replaced with baseUrl.url
Mutant 171 in crawler-url-parser.js: baseUrl replaced with baseUrl.protocol
Mutant 172 in crawler-url-parser.js: baseUrl replaced with baseUrl.host
Mutant 173 in crawler-url-parser.js: urlMap.values() replaced with urlMap.keys()
Mutant 174 in crawler-url-parser.js: urlMap.values() replaced with urlMap.entries()
Mutant 175 in crawler-url-parser.js: urlMap.values() replaced with urlMap.forEach()
Mutant 176 in crawler-url-parser.js: typeof linkurl == "string" replaced with linkurl instanceof String
Mutant 177 in crawler-url-parser.js: typeof linkurl == "string" replaced with linkurl.constructor.name === "String"
Mutant 178 in crawler-url-parser.js: typeof linkurl == "string" replaced with Object.prototype.toString.call(linkurl) === "[object String]"
Mutant 179 in crawler-url-parser.js: linkurl replaced with linkurl.url
Mutant 180 in crawler-url-parser.js: linkurl replaced with linkurl.path
Mutant 181 in crawler-url-parser.js: linkurl replaced with linkurl.host
Mutant 182 in crawler-url-parser.js: typeof pageurl == "string" replaced with typeof pageurl == "object"
Mutant 183 in crawler-url-parser.js: typeof pageurl == "string" replaced with pageurl.host == null
Mutant 184 in crawler-url-parser.js: pageurl replaced with pageurl.url
Mutant 185 in crawler-url-parser.js: pageurl replaced with pageurl.host
Mutant 186 in crawler-url-parser.js: pageurl replaced with pageurl.pathname
Mutant 187 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '')
Mutant 188 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, 'index.html')
Mutant 189 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, 'index.htm')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/\/index\.[a-z]+$/, '')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/\/index\.[a-z]+$/, 'index.html')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/\/index\.[a-z]+$/, 'index.htm')
Mutant 190 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/i
Mutant 191 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/g
Mutant 192 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/m
Mutant 193 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 194 in crawler-url-parser.js: '/' replaced with '*'
Mutant 195 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 196 in crawler-url-parser.js: '/' replaced with '*'
Mutant 197 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '')
Mutant 198 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, ' ')
Mutant 199 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, 'index')
not replacing pageurl_path.replace(/\/index\.[a-z]+$/, '/') with pageurl_path.replace(/\/index\.[a-z]+$/, '')
not replacing pageurl_path.replace(/\/index\.[a-z]+$/, '/') with pageurl_path.replace(/\/index\.[a-z]+$/, ' ')
not replacing pageurl_path.replace(/\/index\.[a-z]+$/, '/') with pageurl_path.replace(/\/index\.[a-z]+$/, 'index')
Mutant 200 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-zA-Z]+$/
Mutant 201 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-zA-Z0-9]+$/
Mutant 202 in crawler-url-parser.js: "/" replaced with "\\/"
Mutant 203 in crawler-url-parser.js: "/" replaced with "\\"
Mutant 204 in crawler-url-parser.js: "/" replaced with "."
Mutant 205 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with linkurl.host != pageurl.host
Mutant 206 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with linkurl.host == pageurl.host && linkurl.subdomain != pageurl.subdomain
Mutant 207 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with linkurl.host == pageurl.host && linkurl.subdomain == pageurl.subdomain && linkurl.path != pageurl.path
Mutant 208 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff == 1
Mutant 209 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff == -1
Mutant 210 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff != 0
failed to parse replacement linkurl_path.replace(/(\/[^\/]*)[\/]?$/, " "): SyntaxError: Invalid regular expression: //(\//: Unterminated group
failed to parse replacement linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "."): SyntaxError: Invalid regular expression: //(\//: Unterminated group
failed to parse replacement /(\/[^\/]*)[\/]?$/g: SyntaxError: Invalid regular expression: //(\//: Unterminated group
failed to parse replacement /(\/[^\/]*)[\/]?$/i: SyntaxError: Invalid regular expression: //(\//: Unterminated group
Mutant 211 in crawler-url-parser.js: "" replaced with "/"
failed to parse replacement pageurl_path.replace(/(\/[^\/]*)[\/]?$/, " "): SyntaxError: Invalid regular expression: //(\//: Unterminated group
failed to parse replacement pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "."): SyntaxError: Invalid regular expression: //(\//: Unterminated group
failed to parse replacement pageurl_path.replace(/(\/[^\/]*)[\/]?$/, ".."): SyntaxError: Invalid regular expression: //(\//: Unterminated group
failed to parse replacement /(\/[^\/]*)[\/]?$/g: SyntaxError: Invalid regular expression: //(\//: Unterminated group
failed to parse replacement /(\/[^\/]*)[\/]?$/i: SyntaxError: Invalid regular expression: //(\//: Unterminated group
Mutant 212 in crawler-url-parser.js: "" replaced with "/"
Mutant 213 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part.startsWith(pageurl_without_last_part)
Mutant 214 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part.endsWith(pageurl_without_last_part)
Mutant 215 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff == 0
Mutant 216 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff == -1
Mutant 217 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff == 2
Mutant 218 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.startsWith(pageurl_path)
Mutant 219 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.endsWith(pageurl_path)
Mutant 220 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.indexOf(pageurl_path) === 0
Mutant 221 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.toLowerCase()
Mutant 222 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.replace(/^\/|\/$/g, '')
Mutant 223 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.split('/').pop()
Mutant 224 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff == 1
Mutant 225 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff == 0
Mutant 226 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.includes(pageurl_path)
Mutant 227 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.startsWith(pageurl_path)
Mutant 228 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.endsWith(pageurl_path)
Mutant 229 in crawler-url-parser.js: pageurl_path.includes replaced with pageurl_path.startsWith
Mutant 230 in crawler-url-parser.js: pageurl_path.includes replaced with pageurl_path.endsWith
Mutant 231 in crawler-url-parser.js: pageurl_path.includes replaced with pageurl_path.indexOf
Mutant 232 in crawler-url-parser.js: linkurl_path replaced with linkurl_path.toLowerCase()
Mutant 233 in crawler-url-parser.js: linkurl_path replaced with linkurl_path.replace(/^\/|\/$/g, "")
Mutant 234 in crawler-url-parser.js: linkurl_path replaced with linkurl_path.split("/").pop()
Mutant 235 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain != pageurl.domain
Mutant 236 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain == pageurl.domain && linkurl.subdomain == pageurl.subdomain
Mutant 237 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain == pageurl.domain && linkurl.subdomain != pageurl.subdomain
Mutant 238 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len > pageurl_subdomain_len
Mutant 239 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len == pageurl_subdomain_len
Mutant 240 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len < pageurl_subdomain_len - 1
Mutant 241 in crawler-url-parser.js: !module.parent replaced with module.parent
Mutant 242 in crawler-url-parser.js: !module.parent replaced with module.exports
Mutant 243 in crawler-url-parser.js: parse replaced with url
Mutant 244 in crawler-url-parser.js: url replaced with url.toString()
Mutant 245 in crawler-url-parser.js: url replaced with url.href
Mutant 246 in crawler-url-parser.js: url replaced with url.pathname
[32m14:41:57 (2622) INFO Instrumenter[39m Instrumented 1 source file(s) with 247 mutant(s)
[33m14:41:57 (2622) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/test/05_tubitak.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/test/05_tubitak.html (73:43) Opening tag "a" not terminated.
    at ngHtmlParser (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 736)
    at async DisableTypeChecksPreprocessor.preprocess (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m14:41:57 (2622) WARN DisableTypeChecksPreprocessor[39m (disable "warnings.preprocessorErrors" to ignore this warning
[32m14:41:57 (2622) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m14:41:58 (2622) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m14:41:58 (2622) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m14:42:03 (2622) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4790 ms, overhead 0 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~13m) 3/247 tested (3 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~13m) 6/247 tested (4 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~13m) 9/247 tested (5 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~13m) 12/247 tested (8 survived, 0 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~12m) 15/247 tested (10 survived, 0 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~12m) 18/247 tested (13 survived, 0 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~12m) 21/247 tested (15 survived, 0 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~12m) 24/247 tested (17 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~11m) 28/247 tested (20 survived, 0 timed out)
Mutation testing 12% (elapsed: ~1m, remaining: ~11m) 31/247 tested (23 survived, 0 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~11m) 34/247 tested (25 survived, 0 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~11m) 37/247 tested (27 survived, 0 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~11m) 40/247 tested (30 survived, 0 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~11m) 43/247 tested (33 survived, 0 timed out)
Mutation testing 18% (elapsed: ~2m, remaining: ~10m) 46/247 tested (33 survived, 0 timed out)
Mutation testing 19% (elapsed: ~2m, remaining: ~10m) 49/247 tested (35 survived, 0 timed out)
Mutation testing 21% (elapsed: ~2m, remaining: ~10m) 52/247 tested (36 survived, 0 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~10m) 55/247 tested (39 survived, 0 timed out)
Mutation testing 23% (elapsed: ~3m, remaining: ~10m) 58/247 tested (42 survived, 0 timed out)
Mutation testing 24% (elapsed: ~3m, remaining: ~10m) 61/247 tested (42 survived, 0 timed out)
Mutation testing 25% (elapsed: ~3m, remaining: ~10m) 64/247 tested (42 survived, 0 timed out)
Mutation testing 27% (elapsed: ~3m, remaining: ~9m) 68/247 tested (42 survived, 0 timed out)
Mutation testing 29% (elapsed: ~3m, remaining: ~9m) 72/247 tested (42 survived, 0 timed out)
Mutation testing 30% (elapsed: ~4m, remaining: ~9m) 75/247 tested (43 survived, 0 timed out)
Mutation testing 31% (elapsed: ~4m, remaining: ~9m) 78/247 tested (43 survived, 0 timed out)
Mutation testing 33% (elapsed: ~4m, remaining: ~8m) 82/247 tested (46 survived, 0 timed out)
Mutation testing 34% (elapsed: ~4m, remaining: ~8m) 85/247 tested (48 survived, 0 timed out)
Mutation testing 35% (elapsed: ~4m, remaining: ~8m) 88/247 tested (51 survived, 0 timed out)
Mutation testing 37% (elapsed: ~4m, remaining: ~8m) 92/247 tested (52 survived, 0 timed out)
Mutation testing 38% (elapsed: ~5m, remaining: ~7m) 95/247 tested (52 survived, 0 timed out)
Mutation testing 38% (elapsed: ~5m, remaining: ~8m) 96/247 tested (53 survived, 0 timed out)
Mutation testing 40% (elapsed: ~5m, remaining: ~7m) 99/247 tested (54 survived, 0 timed out)
Mutation testing 41% (elapsed: ~5m, remaining: ~7m) 102/247 tested (54 survived, 0 timed out)
Mutation testing 42% (elapsed: ~5m, remaining: ~7m) 106/247 tested (55 survived, 0 timed out)
Mutation testing 44% (elapsed: ~5m, remaining: ~7m) 109/247 tested (55 survived, 0 timed out)
Mutation testing 45% (elapsed: ~6m, remaining: ~7m) 113/247 tested (55 survived, 0 timed out)
Mutation testing 46% (elapsed: ~6m, remaining: ~6m) 116/247 tested (55 survived, 0 timed out)
Mutation testing 48% (elapsed: ~6m, remaining: ~6m) 119/247 tested (56 survived, 0 timed out)
Mutation testing 49% (elapsed: ~6m, remaining: ~6m) 123/247 tested (59 survived, 0 timed out)
Mutation testing 51% (elapsed: ~6m, remaining: ~6m) 126/247 tested (61 survived, 0 timed out)
Mutation testing 52% (elapsed: ~6m, remaining: ~6m) 129/247 tested (63 survived, 0 timed out)
Mutation testing 53% (elapsed: ~7m, remaining: ~6m) 132/247 tested (64 survived, 0 timed out)
Mutation testing 54% (elapsed: ~7m, remaining: ~5m) 135/247 tested (65 survived, 0 timed out)
Mutation testing 56% (elapsed: ~7m, remaining: ~5m) 139/247 tested (68 survived, 0 timed out)
Mutation testing 57% (elapsed: ~7m, remaining: ~5m) 142/247 tested (69 survived, 0 timed out)
Mutation testing 58% (elapsed: ~7m, remaining: ~5m) 145/247 tested (71 survived, 0 timed out)
Mutation testing 59% (elapsed: ~7m, remaining: ~5m) 148/247 tested (74 survived, 0 timed out)
Mutation testing 61% (elapsed: ~8m, remaining: ~5m) 152/247 tested (75 survived, 0 timed out)
Mutation testing 62% (elapsed: ~8m, remaining: ~4m) 155/247 tested (76 survived, 0 timed out)
Mutation testing 64% (elapsed: ~8m, remaining: ~4m) 159/247 tested (79 survived, 0 timed out)
Mutation testing 65% (elapsed: ~8m, remaining: ~4m) 161/247 tested (79 survived, 0 timed out)
Mutation testing 66% (elapsed: ~8m, remaining: ~4m) 164/247 tested (79 survived, 0 timed out)
Mutation testing 67% (elapsed: ~8m, remaining: ~4m) 167/247 tested (82 survived, 0 timed out)
Mutation testing 68% (elapsed: ~9m, remaining: ~4m) 170/247 tested (83 survived, 0 timed out)
Mutation testing 70% (elapsed: ~9m, remaining: ~3m) 173/247 tested (84 survived, 0 timed out)
Mutation testing 71% (elapsed: ~9m, remaining: ~3m) 176/247 tested (84 survived, 0 timed out)
Mutation testing 72% (elapsed: ~9m, remaining: ~3m) 179/247 tested (86 survived, 0 timed out)
Mutation testing 73% (elapsed: ~9m, remaining: ~3m) 182/247 tested (86 survived, 0 timed out)
Mutation testing 74% (elapsed: ~9m, remaining: ~3m) 185/247 tested (87 survived, 0 timed out)
Mutation testing 76% (elapsed: ~10m, remaining: ~3m) 188/247 tested (88 survived, 0 timed out)
Mutation testing 77% (elapsed: ~10m, remaining: ~2m) 191/247 tested (89 survived, 0 timed out)
Mutation testing 78% (elapsed: ~10m, remaining: ~2m) 194/247 tested (91 survived, 0 timed out)
Mutation testing 79% (elapsed: ~10m, remaining: ~2m) 197/247 tested (93 survived, 0 timed out)
Mutation testing 80% (elapsed: ~10m, remaining: ~2m) 200/247 tested (96 survived, 0 timed out)
Mutation testing 82% (elapsed: ~10m, remaining: ~2m) 203/247 tested (98 survived, 0 timed out)
Mutation testing 83% (elapsed: ~11m, remaining: ~2m) 206/247 tested (98 survived, 0 timed out)
Mutation testing 84% (elapsed: ~11m, remaining: ~2m) 209/247 tested (99 survived, 0 timed out)
Mutation testing 85% (elapsed: ~11m, remaining: ~1m) 212/247 tested (99 survived, 0 timed out)
Mutation testing 87% (elapsed: ~11m, remaining: ~1m) 216/247 tested (101 survived, 0 timed out)
Mutation testing 88% (elapsed: ~11m, remaining: ~1m) 219/247 tested (102 survived, 0 timed out)
Mutation testing 89% (elapsed: ~11m, remaining: ~1m) 222/247 tested (104 survived, 0 timed out)
Mutation testing 91% (elapsed: ~12m, remaining: ~1m) 225/247 tested (106 survived, 0 timed out)
Mutation testing 92% (elapsed: ~12m, remaining: ~1m) 228/247 tested (106 survived, 0 timed out)
Mutation testing 93% (elapsed: ~12m, remaining: <1m) 231/247 tested (107 survived, 0 timed out)
Mutation testing 94% (elapsed: ~12m, remaining: <1m) 234/247 tested (109 survived, 0 timed out)
Mutation testing 95% (elapsed: ~12m, remaining: <1m) 237/247 tested (110 survived, 0 timed out)
Mutation testing 97% (elapsed: ~12m, remaining: <1m) 240/247 tested (111 survived, 0 timed out)
Mutation testing 98% (elapsed: ~13m, remaining: <1m) 243/247 tested (114 survived, 0 timed out)
Mutation testing 99% (elapsed: ~13m, remaining: <1m) 246/247 tested (117 survived, 0 timed out)

All tests
  ✓ All tests (killed 129)

[Survived] PrecomputedMutator
crawler-url-parser.js:16:73
-   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str);
+   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str.toLowerCase());

[Survived] PrecomputedMutator
crawler-url-parser.js:16:73
-   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str);
+   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str.toUpperCase());

[Survived] PrecomputedMutator
crawler-url-parser.js:16:73
-   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str);
+   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str.trim());

[Survived] PrecomputedMutator
crawler-url-parser.js:31:6
-   	if (typeof currentUrlStr === 'undefined') return null;
+   	if (currentUrlStr === undefined) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:32:6
-   	if (currentUrlStr && _has_illegal_chars(currentUrlStr)) return null;
+   	if (currentUrlStr && _has_illegal_chars(currentUrlStr) && true) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:32:42
-   	if (currentUrlStr && _has_illegal_chars(currentUrlStr)) return null;
+   	if (currentUrlStr && _has_illegal_chars(currentUrlStr.toLowerCase())) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:32:42
-   	if (currentUrlStr && _has_illegal_chars(currentUrlStr)) return null;
+   	if (currentUrlStr && _has_illegal_chars(currentUrlStr.split('/')[0])) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:33:6
-   	if (baseUrlStr && _has_illegal_chars(baseUrlStr)) return null;
+   	if (baseUrlStr && _has_illegal_chars(baseUrlStr) && true) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:33:6
-   	if (baseUrlStr && _has_illegal_chars(baseUrlStr)) return null;
+   	if (baseUrlStr && _has_illegal_chars(baseUrlStr) && baseUrlStr.length > 0) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:33:39
-   	if (baseUrlStr && _has_illegal_chars(baseUrlStr)) return null;
+   	if (baseUrlStr && _has_illegal_chars(baseUrlStr.toLowerCase())) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:33:39
-   	if (baseUrlStr && _has_illegal_chars(baseUrlStr)) return null;
+   	if (baseUrlStr && _has_illegal_chars(baseUrlStr.toUpperCase())) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:36:18
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:40
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/^#.*$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:40
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/^#.*/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:48
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:48
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:48
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, '#abc');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:16
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:35
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/^#/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:35
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/^#\w+/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:35
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/^#\w+/i, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:43
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:43
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:42:41
-   		if (!/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr)) {
+   		if (!/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr.toLowerCase())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:28
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr.toLowerCase(), true, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, undefined, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, null, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:45
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:45
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, undefined, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:45
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, null, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:60:19
-   		currentUrlStr = URL.format(absoluteUrl);
+   		currentUrlStr = URL.parse(absoluteUrl);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, undefined, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, null, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:72:30
-   		let parsedHost = psl.parse(ret.host);
+   		let parsedHost = psl.parse(ret.host.toLowerCase());

[Survived] PrecomputedMutator
crawler-url-parser.js:72:30
-   		let parsedHost = psl.parse(ret.host);
+   		let parsedHost = psl.parse(ret.host.toUpperCase());

[Survived] PrecomputedMutator
crawler-url-parser.js:87:50
-   	let $ = typeof data === "string" ? cheerio.load(data) : data;
+   	let $ = typeof data === "string" ? cheerio.load(data.toString()) : data;

[Survived] PrecomputedMutator
crawler-url-parser.js:95:16
-   		let text = $(this).text().trim();
+   		let text = $(this.text).text().trim();

[Survived] PrecomputedMutator
crawler-url-parser.js:95:16
-   		let text = $(this).text().trim();
+   		let text = $($(this).attr('text')).text().trim();

[Survived] PrecomputedMutator
crawler-url-parser.js:97:7
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href) || href == null) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:97:92
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href.toLowerCase())) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:97:92
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href.trim())) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:97:92
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href.replace(/;.*$/g, ""))) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:99:26
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse(href.toLowerCase(), baseUrlStr);

[Survived] PrecomputedMutator
crawler-url-parser.js:99:26
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse(href.trim(), baseUrlStr);

[Survived] PrecomputedMutator
crawler-url-parser.js:99:32
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse(href, baseUrl.url);

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.hasOwnProperty(currentUrl.url)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.get(currentUrl.url)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:19
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url.toLowerCase())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:19
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url.toUpperCase())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.includes(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.startsWith(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.endsWith(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.toUpperCase())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.toLowerCase())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.trim())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:110:16
-   				urlMap.set(currentUrl.url, currentUrl);
+   				urlMap.set(currentUrl.url.toLowerCase(), currentUrl);

[Survived] PrecomputedMutator
crawler-url-parser.js:110:16
-   				urlMap.set(currentUrl.url, currentUrl);
+   				urlMap.set(currentUrl.url.toUpperCase(), currentUrl);

[Survived] PrecomputedMutator
crawler-url-parser.js:116:16
-   	urlMap.delete(baseUrlStr);
+   	urlMap.delete(baseUrl.url);

[Survived] PrecomputedMutator
crawler-url-parser.js:116:16
-   	urlMap.delete(baseUrlStr);
+   	urlMap.delete(baseUrl.protocol);

[Survived] PrecomputedMutator
crawler-url-parser.js:116:16
-   	urlMap.delete(baseUrlStr);
+   	urlMap.delete(baseUrl.host);

[Survived] PrecomputedMutator
crawler-url-parser.js:119:21
-   		currentUrl.type = gettype(currentUrl, baseUrl);
+   		currentUrl.type = gettype(currentUrl.url, baseUrl.url);

[Survived] PrecomputedMutator
crawler-url-parser.js:119:21
-   		currentUrl.type = gettype(currentUrl, baseUrl);
+   		currentUrl.type = gettype(currentUrl, baseUrl.url);

[Survived] PrecomputedMutator
crawler-url-parser.js:119:21
-   		currentUrl.type = gettype(currentUrl, baseUrl);
+   		currentUrl.type = gettype(currentUrl.url, baseUrl);

[Survived] PrecomputedMutator
crawler-url-parser.js:119:29
-   		currentUrl.type = gettype(currentUrl, baseUrl);
+   		currentUrl.type = gettype(currentUrl.url, baseUrl);

[Survived] PrecomputedMutator
crawler-url-parser.js:119:41
-   		currentUrl.type = gettype(currentUrl, baseUrl);
+   		currentUrl.type = gettype(currentUrl, baseUrl.url);

[Survived] PrecomputedMutator
crawler-url-parser.js:138:6
-   	if (typeof linkurl == "string") linkurl = parse(linkurl);
+   	if (linkurl.constructor.name === "String") linkurl = parse(linkurl);

[Survived] PrecomputedMutator
crawler-url-parser.js:138:6
-   	if (typeof linkurl == "string") linkurl = parse(linkurl);
+   	if (Object.prototype.toString.call(linkurl) === "[object String]") linkurl = parse(linkurl);

[Survived] PrecomputedMutator
crawler-url-parser.js:139:6
-   	if (typeof pageurl == "string") pageurl = parse(pageurl);
+   	if (pageurl.host == null) pageurl = parse(pageurl);

[Survived] PrecomputedMutator
crawler-url-parser.js:146:17
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:38
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/i, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:38
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/g, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:38
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/m, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '\\');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '*');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, ' ').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, 'index').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-zA-Z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-zA-Z0-9]+$/, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:156:6
-   	if (pageurl.host == linkurl.host) {
+   	if (linkurl.host == pageurl.host && linkurl.subdomain == pageurl.subdomain && linkurl.path != pageurl.path) {

[Survived] PrecomputedMutator
crawler-url-parser.js:163:8
-   			if (linkurl_without_last_part == pageurl_without_last_part) return "samelevel"
+   			if (linkurl_without_last_part.startsWith(pageurl_without_last_part)) return "samelevel"

[Survived] PrecomputedMutator
crawler-url-parser.js:163:8
-   			if (linkurl_without_last_part == pageurl_without_last_part) return "samelevel"
+   			if (linkurl_without_last_part.endsWith(pageurl_without_last_part)) return "samelevel"

[Survived] PrecomputedMutator
crawler-url-parser.js:165:8
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.startsWith(pageurl_path)) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:8
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.indexOf(pageurl_path) === 0) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:30
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.includes(pageurl_path.toLowerCase())) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:30
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.includes(pageurl_path.replace(/^\/|\/$/g, ''))) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:30
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.includes(pageurl_path.split('/').pop())) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:167:8
-   			if (pageurl_path.includes(linkurl_path)) return "uplevel";
+   			if (pageurl_path.startsWith(linkurl_path)) return "uplevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:167:30
-   			if (pageurl_path.includes(linkurl_path)) return "uplevel";
+   			if (pageurl_path.includes(linkurl_path.toLowerCase())) return "uplevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:167:30
-   			if (pageurl_path.includes(linkurl_path)) return "uplevel";
+   			if (pageurl_path.includes(linkurl_path.replace(/^\/|\/$/g, ""))) return "uplevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:167:30
-   			if (pageurl_path.includes(linkurl_path)) return "uplevel";
+   			if (pageurl_path.includes(linkurl_path.split("/").pop())) return "uplevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:171:13
-   	} else if (linkurl.domain == pageurl.domain) {
+   	} else if (linkurl.domain == pageurl.domain && linkurl.subdomain != pageurl.subdomain) {

[Survived] PrecomputedMutator
crawler-url-parser.js:172:7
-   		if (linkurl_subdomain_len < pageurl_subdomain_len) return "updomain";
+   		if (linkurl_subdomain_len < pageurl_subdomain_len - 1) return "updomain";

[Survived] PrecomputedMutator
crawler-url-parser.js:185:5
-   if (!module.parent) {
+   if (module.parent) {

[Survived] PrecomputedMutator
crawler-url-parser.js:185:5
-   if (!module.parent) {
+   if (module.exports) {

[Survived] PrecomputedMutator
crawler-url-parser.js:205:12
-   	let res = parse(url);
+   	let res = url(url);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.toString());

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.href);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.pathname);

Ran 1.00 tests per mutant on average.
-----------------------|---------|----------|-----------|------------|----------|----------|
File                   | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------------|---------|----------|-----------|------------|----------|----------|
All files              |   52.23 |      129 |         0 |        118 |        0 |        0 |
 crawler-url-parser.js |   52.23 |      129 |         0 |        118 |        0 |        0 |
-----------------------|---------|----------|-----------|------------|----------|----------|
[32m14:55:14 (2622) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/reports/mutation/mutation.html
[32m14:55:14 (2622) INFO MutationTestExecutor[39m Done in 13 minutes 18 seconds.

real	13m19.721s
user	10m35.567s
sys	0m50.086s
