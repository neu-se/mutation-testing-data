*** using precomputed mutations ***
[32m10:24:27 (3119) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m10:24:27 (3119) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m10:24:27 (3119) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m10:24:28 (3119) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m10:24:28 (3119) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m10:24:28 (3119) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1879 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof "bootstrap" === "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof window === "function"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof qStartingLine === "function"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition.toString())
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", Math.abs(definition))
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition.toUpperCase())
Mutant 6 in q.js: bootstrap replaced with "foo"
Mutant 7 in q.js: "promise" replaced with "deferred"
Mutant 8 in q.js: "promise" replaced with {}
Mutant 9 in q.js: "promise" replaced with 123456
Mutant 10 in q.js: definition replaced with 1 + 1
Mutant 11 in q.js: definition replaced with "string"
Mutant 12 in q.js: definition replaced with []
Mutant 13 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports !== "object" || typeof module !== "object"
Mutant 14 in q.js: definition replaced with 0
Mutant 15 in q.js: definition replaced with "hello"
Mutant 16 in q.js: definition replaced with NaN
Mutant 17 in q.js: define replaced with 42
Mutant 18 in q.js: define replaced with []
Mutant 19 in q.js: define replaced with null
Mutant 20 in q.js: definition replaced with "place_holder"
Mutant 21 in q.js: definition replaced with 42
Mutant 22 in q.js: definition replaced with void 0
Mutant 23 in q.js: typeof ses !== "undefined" replaced with ses !== "Null"
Mutant 24 in q.js: typeof ses !== "undefined" replaced with ses !== null
Mutant 25 in q.js: typeof ses !== "undefined" replaced with ses !== "undefined"
Mutant 26 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 27 in q.js: !ses.ok() replaced with laterQueue.length()
Mutant 28 in q.js: !ses.ok() replaced with null
Mutant 29 in q.js: ses.ok replaced with ses.ok || true
Mutant 30 in q.js: ses.ok replaced with ses.ok && false
Mutant 31 in q.js: head.next replaced with head.task
Mutant 32 in q.js: head.next replaced with tail.next
Mutant 33 in q.js: domain replaced with !domain
Mutant 34 in q.js: domain replaced with domain + 1
Mutant 35 in q.js: domain replaced with domain.foo
Mutant 36 in q.js: task replaced with null
Mutant 37 in q.js: task replaced with undefined
Mutant 38 in q.js: task replaced with () => {
  throw new Error("task is not a function");
}
Mutant 39 in q.js: domain replaced with Q
Mutant 40 in q.js: domain replaced with Promise
Mutant 41 in q.js: domain replaced with local
Mutant 42 in q.js: laterQueue.length replaced with laterQueue.pop() === undefined
Mutant 43 in q.js: laterQueue.length replaced with Boolean(laterQueue.pop())
Mutant 44 in q.js: laterQueue.length replaced with !laterQueue.pop()
Mutant 45 in q.js: task replaced with null
Mutant 46 in q.js: task replaced with undefined
Mutant 47 in q.js: task replaced with "bar"
Mutant 48 in q.js: domain replaced with typeof domain === "undefined"
Mutant 49 in q.js: domain replaced with domain.toString()
Mutant 50 in q.js: domain.exit replaced with domain.allow
Mutant 51 in q.js: domain.exit replaced with domain.enter
Mutant 52 in q.js: domain.exit replaced with domain.message
Mutant 53 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1000)
Mutant 54 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 0, null)
Mutant 55 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 0, undefined)
Mutant 56 in q.js: setTimeout replaced with clearTimeout
Mutant 57 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 58 in q.js: setTimeout replaced with setInterval
Mutant 59 in q.js: flush replaced with flush()
Mutant 60 in q.js: flush replaced with flush(_)
Mutant 61 in q.js: 0 replaced with 1
Mutant 62 in q.js: 0 replaced with -1
Mutant 63 in q.js: 0 replaced with Infinity
Mutant 64 in q.js: domain replaced with null
Mutant 65 in q.js: domain replaced with false
Mutant 66 in q.js: domain replaced with !domain
Mutant 67 in q.js: domain.enter replaced with domain.exit
Mutant 68 in q.js: domain.enter replaced with null
Mutant 69 in q.js: domain replaced with !domain
Mutant 70 in q.js: domain replaced with domain = undefined
Mutant 71 in q.js: domain replaced with domain = null
Mutant 72 in q.js: domain.exit replaced with domain.enter
Mutant 73 in q.js: !flushing replaced with !domain
Mutant 74 in q.js: !flushing replaced with flushing + 1
Mutant 75 in q.js: !flushing replaced with flushing = false
Mutant 76 in q.js: flush replaced with VariableName
Mutant 77 in q.js: flush replaced with flush + 1
Mutant 78 in q.js: flush replaced with flush.toString()
Mutant 79 in q.js: typeof window !== "undefined" replaced with window === this
Mutant 80 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 81 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 82 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(0)
Mutant 83 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 84 in q.js: setImmediate.bind replaced with clearInterval.bind
Mutant 85 in q.js: window replaced with null
Mutant 86 in q.js: window replaced with undefined
Mutant 87 in q.js: window replaced with 0
Mutant 88 in q.js: flush replaced with undefined
Mutant 89 in q.js: flush replaced with null
Mutant 90 in q.js: flush replaced with 0
Mutant 91 in q.js: setImmediate replaced with requestAnimationFrame
Mutant 92 in q.js: flush replaced with undefined
Mutant 93 in q.js: flush replaced with null
Mutant 94 in q.js: flush replaced with function () {}
Mutant 95 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 96 in q.js: channel.port2.postMessage replaced with channel.postMessage
Mutant 97 in q.js: channel.port2.postMessage replaced with window.postMessage
Mutant 98 in q.js: 0 replaced with 1
Mutant 99 in q.js: 0 replaced with null
Mutant 100 in q.js: 0 replaced with "hello"
Mutant 101 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 102 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 103 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, Infinity)
Mutant 104 in q.js: 0 replaced with -0
Mutant 105 in q.js: 0 replaced with undefined
Mutant 106 in q.js: 0 replaced with NaN
Mutant 107 in q.js: requestPortTick replaced with 1 + requestPortTick
Mutant 108 in q.js: requestPortTick replaced with requestPortTick + 1
Mutant 109 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 110 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, undefined)
Mutant 111 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "flush")
Mutant 112 in q.js: flush replaced with flush()
Mutant 113 in q.js: flush replaced with alert()
Mutant 114 in q.js: flush replaced with console.log()
Mutant 115 in q.js: 0 replaced with 1
Mutant 116 in q.js: 0 replaced with -1
Mutant 117 in q.js: 0 replaced with Infinity
Mutant 118 in q.js: laterQueue.push replaced with nextTick.push
Mutant 119 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 120 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 121 in q.js: task replaced with {
  foo: 'bar'
}
Mutant 122 in q.js: task replaced with 'hello world'
Mutant 123 in q.js: task replaced with undefined
Mutant 124 in q.js: !flushing replaced with flushing === true
Mutant 125 in q.js: !flushing replaced with false
Mutant 126 in q.js: !flushing replaced with new Error("foo")
Mutant 127 in q.js: call.apply(f, arguments) replaced with call.apply(arguments, f)
Mutant 128 in q.js: call.apply(f, arguments) replaced with call.apply(null, f)
Mutant 129 in q.js: f replaced with 1
Mutant 130 in q.js: f replaced with _ => _
Mutant 131 in q.js: f replaced with () => call
Mutant 132 in q.js: arguments replaced with undefined
Mutant 133 in q.js: arguments replaced with []
Mutant 134 in q.js: arguments replaced with [1, 2, 3]
Mutant 135 in q.js: uncurryThis replaced with x !== uncurryThis
Mutant 136 in q.js: Array.prototype.slice replaced with Array.prototype.pop
Mutant 137 in q.js: Array.prototype.slice replaced with Array.prototype.shift
Mutant 138 in q.js: Array.prototype.slice replaced with Array.prototype.filter
Mutant 139 in q.js: arguments.length === 1 replaced with arguments.length === 2
Mutant 140 in q.js: arguments.length === 1 replaced with typeof arguments === "object"
Mutant 141 in q.js: arguments.length === 1 replaced with arguments.length !== 1
Mutant 142 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 143 in q.js: index in this replaced with this.prototype.hasOwnProperty(index)
Mutant 144 in q.js: index in this replaced with Object.prototype.hasOwnProperty.call(this, index)
Mutant 145 in q.js: ++index >= length replaced with index <= length
Mutant 146 in q.js: ++index >= length replaced with index < length
Mutant 147 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (; index > length; index--) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 148 in q.js: index < length replaced with index <= length - 1
Mutant 149 in q.js: index < length replaced with index >= 0
Mutant 150 in q.js: index < length replaced with index % 2 === 0
Mutant 151 in q.js: index++ replaced with index--
Mutant 152 in q.js: index++ replaced with index <<= 1
Mutant 153 in q.js: index++ replaced with index %= 2
Mutant 154 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 155 in q.js: index in this replaced with Object.prototype.hasOwnProperty.call(this, index)
Mutant 156 in q.js: index in this replaced with index >= 0 && index < this.length
Mutant 157 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index] + 1, index)
Mutant 158 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index] - 1, index)
Mutant 159 in q.js: callback(basis, this[index], index) replaced with callback(basis, index, index + 1)
Mutant 160 in q.js: callback replaced with null
Mutant 161 in q.js: callback replaced with undefined
Mutant 162 in q.js: basis replaced with basis + 1
Mutant 163 in q.js: basis replaced with basis * 2
Mutant 164 in q.js: basis replaced with null
Mutant 165 in q.js: this[index] replaced with this[index].value
Mutant 166 in q.js: this[index] replaced with this[index + 1]
Mutant 167 in q.js: this[index] replaced with index + this.length
Mutant 168 in q.js: index replaced with basis + 1
Mutant 169 in q.js: index replaced with index * 2
Mutant 170 in q.js: index replaced with Math.random()
Mutant 171 in q.js: i++ replaced with i--
Mutant 172 in q.js: i++ replaced with i + 1
Mutant 173 in q.js: i++ replaced with i += 2
Mutant 174 in q.js: this[i] === value replaced with this[i] !== value
Mutant 175 in q.js: this[i] === value replaced with this[i] !== value && typeof this[i] === 'undefined'
Mutant 176 in q.js: this[i] === value replaced with this[i] !== value || this[i] !== 'undefined'
Mutant 177 in q.js: collect.push replaced with collect.pop
Mutant 178 in q.js: collect.push replaced with collect.shift
Mutant 179 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(thisp, [value, index, self])
Mutant 180 in q.js: callback.call(thisp, value, index, self) replaced with callback.bind(thisp)(value, index, self)
Mutant 181 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(self, value, index, thisp)
Mutant 182 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(Math.cos(null), null, null, self)
Mutant 183 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, this, index, self)
Mutant 184 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(null, null, null, self)
Mutant 185 in q.js: thisp replaced with null
Mutant 186 in q.js: thisp replaced with undefined
Mutant 187 in q.js: thisp replaced with 0
Mutant 188 in q.js: value replaced with undefined
Mutant 189 in q.js: value replaced with null
Mutant 190 in q.js: value replaced with {
  foo: "bar"
}
Mutant 191 in q.js: index replaced with true
Mutant 192 in q.js: index replaced with void 0
Mutant 193 in q.js: self replaced with "abc"
Mutant 194 in q.js: self replaced with 10
Mutant 195 in q.js: self replaced with null
Mutant 196 in q.js: uncurryThis replaced with undefined
Mutant 197 in q.js: uncurryThis replaced with object_hasOwnProperty
Mutant 198 in q.js: object replaced with object_create(null)
Mutant 199 in q.js: object replaced with object_create(undefined)
Mutant 200 in q.js: object replaced with object_create('foo')
Mutant 201 in q.js: object_hasOwnProperty(object, key) replaced with !object_hasOwnProperty(object, key)
Mutant 202 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] === undefined
Mutant 203 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || object[key] !== undefined
Mutant 204 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object.property)
Mutant 205 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(key.object)
Mutant 206 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object.property + key)
Mutant 207 in q.js: object_hasOwnProperty replaced with object_hasOwnPrototype
Mutant 208 in q.js: object_hasOwnProperty replaced with object_hasOwnRegion
Mutant 209 in q.js: object replaced with object[prop]
Mutant 210 in q.js: object replaced with object.hasOwnProperty(prop)
Mutant 211 in q.js: object replaced with Object.prototype.hasOwnProperty.call(object, prop)
Mutant 212 in q.js: key replaced with index2
Mutant 213 in q.js: key replaced with this.length + 1
Mutant 214 in q.js: key replaced with void 0
Mutant 215 in q.js: keys.push replaced with keys.unshift
Mutant 216 in q.js: keys.push replaced with keys.pop
Mutant 217 in q.js: keys.push replaced with keys.clear
Mutant 218 in q.js: key replaced with 'a'
Mutant 219 in q.js: key replaced with key + '1'
Mutant 220 in q.js: key replaced with null
Mutant 221 in q.js: Object replaced with Math
Mutant 222 in q.js: Object replaced with undefined
Mutant 223 in q.js: value replaced with value + 1
Mutant 224 in q.js: value replaced with value - 1
Mutant 225 in q.js: value replaced with !value
Mutant 226 in q.js: object_toString replaced with Number
Mutant 227 in q.js: object_toString replaced with Array
Mutant 228 in q.js: object_toString replaced with null
Mutant 229 in q.js: exception replaced with null
Mutant 230 in q.js: exception replaced with 0
Mutant 231 in q.js: exception replaced with new Error()
Mutant 232 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = null; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 233 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = undefined; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 234 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = !promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 235 in q.js: p = p.source replaced with p = p.source || null
Mutant 236 in q.js: p = p.source replaced with p = p['source']
Mutant 237 in q.js: p = p.source replaced with p = p.sourceline
Mutant 238 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ < p.stackCounter
Mutant 239 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ !== p.stackCounter
Mutant 240 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ === p.stackCounter
Mutant 241 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 242 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: false
})
Mutant 243 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: "banana",
  configurable: true
})
Mutant 244 in q.js: error replaced with error = error * 2
Mutant 245 in q.js: error replaced with error = true
Mutant 246 in q.js: "__minimumStackCounter__" replaced with `"__minimumStackCounter_"`
Mutant 247 in q.js: "__minimumStackCounter__" replaced with `"_minimumStackCounter_"`
Mutant 248 in q.js: "__minimumStackCounter__" replaced with `"_maximumStackCounter_"`
Mutant 249 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 250 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stack,
  configurable: true
}
Mutant 251 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stack.replace("node.js", "chromium.org"),
  configurable: true
}
Mutant 252 in q.js: stacks.unshift replaced with stacks.push
Mutant 253 in q.js: stacks.unshift replaced with stacks.concat
Mutant 254 in q.js: stacks.unshift replaced with stacks.reverse
Mutant 255 in q.js: stacks.unshift replaced with stacks.push
Mutant 256 in q.js: error.stack replaced with error.stack !== undefined
Mutant 257 in q.js: error.stack replaced with error.stack.length > 0
Mutant 258 in q.js: error.stack replaced with error.stack !== "undefined"
Mutant 259 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "a" + STACK_JUMP_SEPARATOR + "a"
Mutant 260 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "b" + STACK_JUMP_SEPARATOR + "b"
Mutant 261 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "c" + STACK_JUMP_SEPARATOR + "c"
Mutant 262 in q.js: filterStackString replaced with "this is a test string"
Mutant 263 in q.js: filterStackString replaced with undefined
Mutant 264 in q.js: filterStackString replaced with null
Mutant 265 in q.js: concatedStacks replaced with concatedStacks.toString()
Mutant 266 in q.js: concatedStacks replaced with concatedStacks.substring(1)
Mutant 267 in q.js: concatedStacks replaced with concatedStacks.substr(-1)
Mutant 268 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(promise, "stack", {
  value: null,
  configurable: true
})
Mutant 269 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: undefined,
  configurable: true
})
Mutant 270 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(promise, "stack", {
  value: "foo",
  configurable: true
})
Mutant 271 in q.js: object_defineProperty replaced with object_setProperty
Mutant 272 in q.js: object_defineProperty replaced with array_setProperty
Mutant 273 in q.js: object_defineProperty replaced with promise_setProperty
Mutant 274 in q.js: error replaced with promise
Mutant 275 in q.js: error replaced with error.__minimumStackCounter__
Mutant 276 in q.js: error replaced with error.stack
Mutant 277 in q.js: "stack" replaced with "stacktrace"
Mutant 278 in q.js: "stack" replaced with "foo"
Mutant 279 in q.js: "stack" replaced with "unshift"
Mutant 280 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "abc",
  configurable: true
}
Mutant 281 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: null,
  configurable: false
}
Mutant 282 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  enumerable: true
}
Mutant 283 in q.js: stackString.split replaced with stackString.slice
Mutant 284 in q.js: stackString.split replaced with stackString.substring
Mutant 285 in q.js: stackString.split replaced with stackString.charAt
Mutant 286 in q.js: "\n" replaced with "\t"
Mutant 287 in q.js: "\n" replaced with " "
Mutant 288 in q.js: "\n" replaced with null
Mutant 289 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 290 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 291 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var j = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 292 in q.js: ++i replaced with i += 2
Mutant 293 in q.js: ++i replaced with i--
Mutant 294 in q.js: ++i replaced with i = i + 100
Mutant 295 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) && isNodeFrame(line) && line
Mutant 296 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) || !isNodeFrame(line) || line
Mutant 297 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with true
Mutant 298 in q.js: isInternalFrame replaced with isExternalFrame
Mutant 299 in q.js: isInternalFrame replaced with isNodeFrame || isBabelFrame
Mutant 300 in q.js: isInternalFrame replaced with isReactFrame
Mutant 301 in q.js: line replaced with length
Mutant 302 in q.js: line replaced with line[j]
Mutant 303 in q.js: line replaced with line - 1
Mutant 304 in q.js: line replaced with line + 1
Mutant 305 in q.js: line replaced with i + 1
Mutant 306 in q.js: "\n" replaced with "<br>"
Mutant 307 in q.js: "\n" replaced with " "
Mutant 308 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 309 in q.js: stackLine.indexOf replaced with stackLine.contains
Mutant 310 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 311 in q.js: stackLine replaced with stackLine[0]
Mutant 312 in q.js: stackLine replaced with stackLine.substring(1)
Mutant 313 in q.js: stackLine replaced with stackLine.split(":")[2]
Mutant 314 in q.js: attempt1 replaced with attempt1 && attempt2
Mutant 315 in q.js: attempt1 replaced with attempt1 || attempt2
Mutant 316 in q.js: attempt1 replaced with !attempt1 || attempt2
Mutant 317 in q.js: Number replaced with String
Mutant 318 in q.js: Number replaced with `typeof attempt1`
Mutant 319 in q.js: Number replaced with `attempt1`
Mutant 320 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 321 in q.js: attempt1[2] replaced with attempt2[1]
Mutant 322 in q.js: attempt1[2] replaced with attempt3[1]
Mutant 323 in q.js: stackLine replaced with obj.key
Mutant 324 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 325 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 326 in q.js: attempt2[2] replaced with attempt2[Math.floor(Math.random() * attempt2.length)]
Mutant 327 in q.js: stackLine replaced with stackLine.stack
Mutant 328 in q.js: stackLine replaced with stackLine[0]
Mutant 329 in q.js: stackLine replaced with stackLine.substr(1)
Mutant 330 in q.js: Number replaced with "NaN"
Mutant 331 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 332 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 333 in q.js: attempt3[2] replaced with attempt3[4]
Mutant 334 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 335 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber.toString
Mutant 336 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === 'undefined'
Mutant 337 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 338 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 339 in q.js: lines[0].indexOf replaced with lines[0].startsWith
Mutant 340 in q.js: lines[0].indexOf replaced with lines[0].endsWith
Mutant 341 in q.js: lines[0].indexOf replaced with lines[0].includes
Mutant 342 in q.js: "@" replaced with 13
Mutant 343 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 344 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber.length
Mutant 345 in q.js: !fileNameAndLineNumber replaced with isNaN(fileNameAndLineNumber)
Mutant 346 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== console.log
Mutant 347 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn === "function" && console.warn("Hello, world!")
Mutant 348 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn === "function" && console.warn("Goodbye, world!")
Mutant 349 in q.js: arguments replaced with [1]
Mutant 350 in q.js: arguments replaced with `[Number(2)]`
Mutant 351 in q.js: arguments replaced with `[*2]`
Mutant 352 in q.js: value instanceof Promise replaced with value === Promise
Mutant 353 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 354 in q.js: value instanceof Promise replaced with typeof value === "Promise.prototype"
Mutant 355 in q.js: isPromiseAlike replaced with typeof value === "object"
Mutant 356 in q.js: isPromiseAlike replaced with value !== null && typeof value !== "undefined"
Mutant 357 in q.js: value replaced with function () {
  if (typeof console !== "undefined" && typeof console.warn === "function") {
    console.warn(name + " is deprecated, use " + alternative + " instead.", new Error("").stack.split("\n")[1]);
  }
  return callback.apply(callback, arguments);
}
Mutant 358 in q.js: value replaced with function () {
  if (typeof console !== "undefined" && typeof console.warn === "function") {
    console.warn(name + " is deprecated, use " + alternative + " instead.", new Error("").stack.replace(/^.*\n/, ""));
  }
  return callback.apply(callback, arguments);
}
Mutant 359 in q.js: fulfill replaced with reject
Mutant 360 in q.js: value replaced with null
Mutant 361 in q.js: value replaced with "foo"
Mutant 362 in q.js: value replaced with () => value
Mutant 363 in q.js: object_create replaced with new Error()
Mutant 364 in q.js: object_create replaced with undefined
Mutant 365 in q.js: defer.prototype replaced with defer.prototype.constructor
Mutant 366 in q.js: defer.prototype replaced with Object.prototype
Mutant 367 in q.js: defer.prototype replaced with defer.prototype.__proto__
Mutant 368 in q.js: object_create replaced with null
Mutant 369 in q.js: Promise.prototype replaced with NaN
Mutant 370 in q.js: Promise.prototype replaced with undefined
Mutant 371 in q.js: Promise.prototype replaced with Math.PI
Mutant 372 in q.js: arguments replaced with null
Mutant 373 in q.js: arguments replaced with []
Mutant 374 in q.js: arguments replaced with "random string"
Mutant 375 in q.js: messages replaced with messages.slice()
Mutant 376 in q.js: messages replaced with messages.push(args)
Mutant 377 in q.js: messages replaced with messages.replace(args)
Mutant 378 in q.js: messages.push replaced with messages.unshift
Mutant 379 in q.js: messages.push replaced with messages.pop
Mutant 380 in q.js: args replaced with array_reverse(args)
Mutant 381 in q.js: args replaced with args + [1]
Mutant 382 in q.js: args replaced with args[0] + 1
Mutant 383 in q.js: op === "when" && operands[1] replaced with op === "done" && operands[2]
Mutant 384 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 385 in q.js: op === "when" && operands[1] replaced with op === "done" || operands[2]
Mutant 386 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 387 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 388 in q.js: progressListeners.push replaced with progressListeners[0]
Mutant 389 in q.js: operands[1] replaced with operands[2]
Mutant 390 in q.js: operands[1] replaced with progress + 1
Mutant 391 in q.js: operands[1] replaced with function () {
  return progress;
}
Mutant 392 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(promise)
Mutant 393 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.target)
Mutant 394 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(una)
Mutant 395 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.otherMethod.apply
Mutant 396 in q.js: resolvedPromise.promiseDispatch.apply replaced with rejectedPromise.promiseDispatch.apply
Mutant 397 in q.js: resolvedPromise.promiseDispatch.apply replaced with progressPromise.promiseDispatch.apply
Mutant 398 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 399 in q.js: resolvedPromise replaced with resolvedPromise.anotherProperty
Mutant 400 in q.js: resolvedPromise replaced with null
Mutant 401 in q.js: args replaced with args[1]
Mutant 402 in q.js: args replaced with args[0], args[1], args[2]
Mutant 403 in q.js: args replaced with args[0], args[0] + args[1], args[2]
Mutant 404 in q.js: messages replaced with true
Mutant 405 in q.js: messages replaced with false
Mutant 406 in q.js: messages replaced with undefined
Mutant 407 in q.js: nearer replaced with null
Mutant 408 in q.js: nearer replaced with undefined
Mutant 409 in q.js: nearer replaced with {}
Mutant 410 in q.js: resolvedPromise replaced with resolvedPromise + 1
Mutant 411 in q.js: resolvedPromise replaced with Q
Mutant 412 in q.js: resolvedPromise replaced with new Error("my error message")
Mutant 413 in q.js: isPromise(nearerValue) replaced with PLACEHOLDER = 0
Mutant 414 in q.js: isPromise(nearerValue) replaced with PLACEHOLDER = 1
Mutant 415 in q.js: isPromise(nearerValue) replaced with PLACEHOLDER = error
Mutant 416 in q.js: isPromise replaced with isError
Mutant 417 in q.js: isPromise replaced with isRejected
Mutant 418 in q.js: isPromise replaced with !isFulfilled
Mutant 419 in q.js: nearerValue replaced with nearerValue.value
Mutant 420 in q.js: nearerValue replaced with nearerValue.promise
Mutant 421 in q.js: nearerValue replaced with nearerValue + 1
Mutant 422 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 423 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 424 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport ? hasStacks : !hasStacks
Mutant 425 in q.js: e.stack.indexOf("\n") + 1 replaced with 0
Mutant 426 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 427 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") + 2
Mutant 428 in q.js: e.stack.indexOf replaced with e.stack.length - 1
Mutant 429 in q.js: "\n" replaced with "x"
Mutant 430 in q.js: "\n" replaced with "a"
Mutant 431 in q.js: "\n" replaced with "_"
Mutant 432 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && false
Mutant 433 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && true
Mutant 434 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && hasStacks.reverse()
Mutant 435 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message, message)
Mutant 436 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message, undefined)
Mutant 437 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message, 'different')
Mutant 438 in q.js: newPromise replaced with undefined
Mutant 439 in q.js: newPromise replaced with {}
Mutant 440 in q.js: newPromise replaced with newPromise.promise
Mutant 441 in q.js: message replaced with message.reverse()
Mutant 442 in q.js: message replaced with message.slice(0, message.length - 1)
Mutant 443 in q.js: message replaced with array_slice(message, 1)
Mutant 444 in q.js: resolvedPromise replaced with resolvedPromise == true
Mutant 445 in q.js: resolvedPromise replaced with resolvedPromise * 2
Mutant 446 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 447 in q.js: Q(value) replaced with 1 + value
Mutant 448 in q.js: Q(value) replaced with value + 1
Mutant 449 in q.js: Q(value) replaced with Promise.resolve(value)
Mutant 450 in q.js: Q replaced with undefined
Mutant 451 in q.js: value replaced with Q(value)
Mutant 452 in q.js: resolvedPromise replaced with progressListeners.length
Mutant 453 in q.js: resolvedPromise replaced with promise
Mutant 454 in q.js: resolvedPromise replaced with array_slice(arguments)
Mutant 455 in q.js: fulfill(value) replaced with reject(value)
Mutant 456 in q.js: fulfill(value) replaced with fulfill(value + 1)
Mutant 457 in q.js: fulfill(value) replaced with fulfill(anotherValue)
Mutant 458 in q.js: value replaced with null
Mutant 459 in q.js: value replaced with undefined
Mutant 460 in q.js: value replaced with "some string"
Mutant 461 in q.js: become replaced with Q.reject
Mutant 462 in q.js: become replaced with Q.fulfill
Mutant 463 in q.js: become replaced with Q.notify
Mutant 464 in q.js: reject(reason) replaced with reject(new Error("This is a bug"))
Mutant 465 in q.js: reject(reason) replaced with fulfill(null)
Mutant 466 in q.js: reject(reason) replaced with notify("This is a bug")
Mutant 467 in q.js: reason replaced with reason + 1
Mutant 468 in q.js: reason replaced with reason * 2
Mutant 469 in q.js: reason replaced with "error"
Mutant 470 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 471 in q.js: resolvedPromise replaced with resolvedPromise === null
Mutant 472 in q.js: resolvedPromise replaced with resolvedPromise !== null
Mutant 473 in q.js: progressListener replaced with progressListeners[0]
Mutant 474 in q.js: progressListener replaced with progressListeners.length
Mutant 475 in q.js: progress replaced with progress + 1
Mutant 476 in q.js: progress replaced with progress * 2
Mutant 477 in q.js: progress replaced with progress - 1
Mutant 478 in q.js: self.reject replaced with null
Mutant 479 in q.js: self.reject replaced with undefined
Mutant 480 in q.js: error replaced with undefined
Mutant 481 in q.js: error replaced with null
Mutant 482 in q.js: error replaced with "error"
Mutant 483 in q.js: arguments.length > 2 replaced with arguments > 2
Mutant 484 in q.js: arguments.length > 2 replaced with arguments.length > 2
Mutant 485 in q.js: arguments.length > 2 replaced with arguments.length !== 2
Mutant 486 in q.js: self.resolve replaced with self.reject
Mutant 487 in q.js: self.resolve replaced with Q.reject
Mutant 488 in q.js: self.resolve replaced with self.mockResolve
Mutant 489 in q.js: array_slice(arguments, 1) replaced with new Array(arguments).slice(1)
Mutant 490 in q.js: array_slice(arguments, 1) replaced with Array.from(arguments).slice(1)
Mutant 491 in q.js: array_slice(arguments, 1) replaced with spread.apply(arguments, [1])
Mutant 492 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 493 in q.js: array_slice(arguments, 1) replaced with array_slice(this.arguments)
Mutant 494 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 495 in q.js: arguments replaced with 0
Mutant 496 in q.js: arguments replaced with undefined
Mutant 497 in q.js: arguments replaced with NaN
Mutant 498 in q.js: self.resolve replaced with self.reject
Mutant 499 in q.js: self.resolve replaced with "something else"
Mutant 500 in q.js: self.resolve replaced with null
Mutant 501 in q.js: value replaced with null
Mutant 502 in q.js: value replaced with undefined
Mutant 503 in q.js: value replaced with 0
Mutant 504 in q.js: typeof resolver !== "function" replaced with typeof resolver !== !"function"
Mutant 505 in q.js: typeof resolver !== "function" replaced with typeof resolver === void 0
Mutant 506 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "function" || !resolver
Mutant 507 in q.js: deferred.resolve replaced with deferred.reject
Mutant 508 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 509 in q.js: deferred.resolve replaced with deferred.notify
Mutant 510 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 511 in q.js: deferred.reject replaced with deferred.notify
Mutant 512 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 513 in q.js: deferred.notify replaced with deferred.notify()
Mutant 514 in q.js: deferred.notify replaced with deferred.notify(progress)
Mutant 515 in q.js: deferred.notify replaced with deferred.notify(progress, value)
Mutant 516 in q.js: deferred.reject replaced with deferred.notReject
Mutant 517 in q.js: reason replaced with null
Mutant 518 in q.js: reason replaced with 42
Mutant 519 in q.js: reason replaced with promise.reject
Mutant 520 in q.js: Q replaced with undefined
Mutant 521 in q.js: Q replaced with null
Mutant 522 in q.js: Q replaced with {}
Mutant 523 in q.js: x replaced with x * y
Mutant 524 in q.js: x replaced with x + y
Mutant 525 in q.js: x replaced with x * y + z
Mutant 526 in q.js: y replaced with !y
Mutant 527 in q.js: y replaced with y.toString()
Mutant 528 in q.js: y replaced with y + 1
Mutant 529 in q.js: Q replaced with "hello"
Mutant 530 in q.js: Q replaced with []
Mutant 531 in q.js: Q replaced with undefined
Mutant 532 in q.js: [this, that] replaced with [that, this]
Mutant 533 in q.js: [this, that] replaced with [this, this]
Mutant 534 in q.js: x === y replaced with x !== y
Mutant 535 in q.js: x === y replaced with x < y
Mutant 536 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 1, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 537 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 0, len = answerPs.length - 1; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 538 in q.js: // Switch to this once we can assume at least ES5
// answerPs.forEach(function (answerP) {
//     Q(answerP).then(resolve, reject);
// });
// Use this in the meantime
for (var i = 0, len = answerPs.length; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
} replaced with for (var i = 0, len = answerPs.length * 2; i < len; i++) {
  Q(answerPs[i]).then(resolve, reject);
}
Mutant 539 in q.js: i < len replaced with i > len
Mutant 540 in q.js: i < len replaced with i <= len
Mutant 541 in q.js: i < len replaced with i += len
Mutant 542 in q.js: i++ replaced with i += 2
Mutant 543 in q.js: i++ replaced with i = i + 2
Mutant 544 in q.js: answerPs[i] replaced with answerPs[i] + 1
Mutant 545 in q.js: answerPs[i] replaced with answerPs[i - 1]
Mutant 546 in q.js: answerPs[i] replaced with Q(answerPs[i]).then(identity)
Mutant 547 in q.js: resolve replaced with function (resolver, rejecter) {}
Mutant 548 in q.js: resolve replaced with Q(x).join(y)
Mutant 549 in q.js: reject replaced with fulfill
Mutant 550 in q.js: reject replaced with resolve
Mutant 551 in q.js: reject replaced with accept
Mutant 552 in q.js: Q.race replaced with Q.reject
Mutant 553 in q.js: Q.race replaced with Q.resolve
Mutant 554 in q.js: Q.race replaced with Q.all
Mutant 555 in q.js: fallback === void 0 replaced with 0
Mutant 556 in q.js: fallback === void 0 replaced with !!fallback
Mutant 557 in q.js: fallback === void 0 replaced with fallback || void 0
Mutant 558 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 559 in q.js: inspect === void 0 replaced with inspect === null
Mutant 560 in q.js: inspect === void 0 replaced with inspect === undefined
Mutant 561 in q.js: object_create replaced with {}
Mutant 562 in q.js: object_create replaced with new Function()
Mutant 563 in q.js: Promise.prototype replaced with Object.prototype
Mutant 564 in q.js: Promise.prototype replaced with Number.prototype
Mutant 565 in q.js: Promise.prototype replaced with Function.prototype
Mutant 566 in q.js: descriptor[op] replaced with descriptor[op](args)
Mutant 567 in q.js: descriptor[op] replaced with op(args)
Mutant 568 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(args)
Mutant 569 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.then)
Mutant 570 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(Q.promise)
Mutant 571 in q.js: promise replaced with undefined
Mutant 572 in q.js: promise replaced with null
Mutant 573 in q.js: promise replaced with 1
Mutant 574 in q.js: args replaced with args[0]
Mutant 575 in q.js: args replaced with args[1]
Mutant 576 in q.js: args replaced with args.slice(1)
Mutant 577 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.inspect)
Mutant 578 in q.js: fallback.call(promise, op, args) replaced with fallback.call(deferred)
Mutant 579 in q.js: fallback.call(promise, op, args) replaced with fallback.call(self)
Mutant 580 in q.js: promise replaced with null
Mutant 581 in q.js: promise replaced with 5
Mutant 582 in q.js: promise replaced with function () {
  throw new Error("Error message");
}
Mutant 583 in q.js: args replaced with null
Mutant 584 in q.js: args replaced with undefined
Mutant 585 in q.js: args replaced with true
Mutant 586 in q.js: exception replaced with null
Mutant 587 in q.js: exception replaced with undefined
Mutant 588 in q.js: exception replaced with new Error()
Mutant 589 in q.js: resolve replaced with !resolve
Mutant 590 in q.js: resolve replaced with null
Mutant 591 in q.js: resolve replaced with false
Mutant 592 in q.js: result replaced with resolver
Mutant 593 in q.js: result replaced with undefined
Mutant 594 in q.js: result replaced with null
Mutant 595 in q.js: inspect replaced with inspect["[object Promise]"]
Mutant 596 in q.js: inspect replaced with inspect.apply(this, [op, args])
Mutant 597 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 598 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 599 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.value !== undefined
Mutant 600 in q.js: fulfilled replaced with rejected
Mutant 601 in q.js: fulfilled replaced with resolved
Mutant 602 in q.js: fulfilled replaced with undefined
Mutant 603 in q.js: value replaced with null
Mutant 604 in q.js: reject replaced with resolve
Mutant 605 in q.js: exception replaced with undefined
Mutant 606 in q.js: exception replaced with void 0
Mutant 607 in q.js: exception replaced with null
Mutant 608 in q.js: typeof rejected === "function" replaced with rejected !== false
Mutant 609 in q.js: typeof rejected === "function" replaced with typeof rejected !== "function"
Mutant 610 in q.js: typeof rejected === "function" replaced with !rejected
Mutant 611 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(self, exception)
Mutant 612 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self, false)
Mutant 613 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self, undefined)
Mutant 614 in q.js: exception replaced with null
Mutant 615 in q.js: self replaced with null
Mutant 616 in q.js: self replaced with undefined
Mutant 617 in q.js: self replaced with "self"
Mutant 618 in q.js: rejected replaced with fulfilled
Mutant 619 in q.js: rejected replaced with Q.reject
Mutant 620 in q.js: rejected replaced with Q.resolve
Mutant 621 in q.js: exception replaced with 0
Mutant 622 in q.js: exception replaced with new Error("Some other error")
Mutant 623 in q.js: exception replaced with undefined
Mutant 624 in q.js: newException replaced with newException2
Mutant 625 in q.js: newException replaced with newException.message = "New exception message"
Mutant 626 in q.js: newException replaced with newException.stack = undefined
Mutant 627 in q.js: reject replaced with resolve
Mutant 628 in q.js: exception replaced with reject(exception)
Mutant 629 in q.js: exception replaced with new Error(exception)
Mutant 630 in q.js: value replaced with value.undefinedField
Mutant 631 in q.js: value replaced with value + 1
Mutant 632 in q.js: done replaced with !done
Mutant 633 in q.js: done replaced with done = true
Mutant 634 in q.js: done replaced with done && true
Mutant 635 in q.js: deferred.resolve replaced with deferred.reject
Mutant 636 in q.js: deferred.resolve replaced with Promise.resolve
Mutant 637 in q.js: deferred.resolve replaced with Q.thenResolve
Mutant 638 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 639 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 640 in q.js: _fulfilled(value) replaced with _fulfilled(reject(value))
Mutant 641 in q.js: value replaced with value + 1
Mutant 642 in q.js: value replaced with undefined
Mutant 643 in q.js: value replaced with null
Mutant 644 in q.js: done replaced with !done
Mutant 645 in q.js: deferred.resolve replaced with deferred.reject
Mutant 646 in q.js: deferred.resolve replaced with deferred.notify
Mutant 647 in q.js: deferred.resolve replaced with void 0
Mutant 648 in q.js: _rejected(exception) replaced with function () {
  throw new Error("Promise does not support operation: " + op);
}
Mutant 649 in q.js: _rejected(exception) replaced with function () {
  return reject(new Error("Promise does not support operation: " + op));
}
Mutant 650 in q.js: _rejected(exception) replaced with function () {
  return reject(new Error("Promise does not support operation: " + op), true);
}
Mutant 651 in q.js: _rejected replaced with _resolved
Mutant 652 in q.js: _rejected replaced with deferred.reject
Mutant 653 in q.js: _rejected replaced with undefined
Mutant 654 in q.js: exception replaced with new Error("new exception message")
Mutant 655 in q.js: exception replaced with promise.reject(exception)
Mutant 656 in q.js: value replaced with undefined
Mutant 657 in q.js: value replaced with null
Mutant 658 in q.js: value replaced with !value
Mutant 659 in q.js: Q.onerror replaced with Q.onwarn
Mutant 660 in q.js: Q.onerror replaced with Q.oninfo
Mutant 661 in q.js: e replaced with e + 1
Mutant 662 in q.js: e replaced with e.message
Mutant 663 in q.js: e replaced with e.toString()
Mutant 664 in q.js: !threw replaced with threw && deferred.notify(newValue)
Mutant 665 in q.js: !threw replaced with threw || deferred.notify(newValue)
Mutant 666 in q.js: deferred.notify replaced with deferred.reject
Mutant 667 in q.js: newValue replaced with value
Mutant 668 in q.js: newValue replaced with undefined
Mutant 669 in q.js: Q replaced with 123
Mutant 670 in q.js: promise replaced with null
Mutant 671 in q.js: promise replaced with promise.then(function () {
  return;
})
Mutant 672 in q.js: promise replaced with Q.resolve(promise)
Mutant 673 in q.js: callback replaced with 1
Mutant 674 in q.js: callback replaced with null
Mutant 675 in q.js: callback replaced with function () {
  return 0;
}
Mutant 676 in q.js: Q replaced with Q.makePromise
Mutant 677 in q.js: Q replaced with Q.resolve
Mutant 678 in q.js: Q replaced with Promise.makePromise
Mutant 679 in q.js: value replaced with undefined
Mutant 680 in q.js: value replaced with "something else"
Mutant 681 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 682 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, function () {})
Mutant 683 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, undefined)
Mutant 684 in q.js: fulfilled replaced with rejected
Mutant 685 in q.js: fulfilled replaced with newValue
Mutant 686 in q.js: fulfilled replaced with exception
Mutant 687 in q.js: progressed replaced with "random progressed"
Mutant 688 in q.js: progressed replaced with null
Mutant 689 in q.js: progressed replaced with progressed()
Mutant 690 in q.js: this.then replaced with null
Mutant 691 in q.js: this.then replaced with undefined
Mutant 692 in q.js: function () {
  return value;
} replaced with function () {
  return Q(value);
}
Mutant 693 in q.js: function () {
  return value;
} replaced with function () {
  return value + 1;
}
Mutant 694 in q.js: function () {
  return value;
} replaced with function () {
  return value.then(function (v) {
    return v + 1;
  });
}
Mutant 695 in q.js: Q replaced with 1234567890
Mutant 696 in q.js: promise replaced with 42
Mutant 697 in q.js: promise replaced with {
  foo: 42
}
Mutant 698 in q.js: promise replaced with null
Mutant 699 in q.js: value replaced with undefined
Mutant 700 in q.js: value replaced with null
Mutant 701 in q.js: value replaced with 0
Mutant 702 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 703 in q.js: function () {
  throw reason;
} replaced with function () {
  return Q.reject(reason);
}
Mutant 704 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 705 in q.js: Q replaced with T
Mutant 706 in q.js: reason replaced with undefined
Mutant 707 in q.js: reason replaced with "hello"
Mutant 708 in q.js: reason replaced with Promise.resolve()
Mutant 709 in q.js: isPromise(value) replaced with value !== value
Mutant 710 in q.js: isPromise(value) replaced with typeof value === "undefined"
Mutant 711 in q.js: isPromise(value) replaced with value.toString() !== "object Promise"
Mutant 712 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 713 in q.js: inspected.state === "fulfilled" replaced with inspected.value === undefined
Mutant 714 in q.js: inspected.state === "fulfilled" replaced with inspected !== value
Mutant 715 in q.js: isObject replaced with isNumber
Mutant 716 in q.js: isObject replaced with isString
Mutant 717 in q.js: isObject replaced with isFunction
Mutant 718 in q.js: object replaced with object.fcall()
Mutant 719 in q.js: object replaced with object.reject()
Mutant 720 in q.js: object replaced with object.then(null, callback)
Mutant 721 in q.js: isPromise replaced with isFulfilled
Mutant 722 in q.js: isPromise replaced with isRejected
Mutant 723 in q.js: isPromise replaced with !isPending
Mutant 724 in q.js: object replaced with undefined
Mutant 725 in q.js: object replaced with NaN
Mutant 726 in q.js: object replaced with null
Mutant 727 in q.js: this.inspect replaced with this.inspected
not replacing this.inspect with this.inspected
Mutant 728 in q.js: object replaced with object.inspect()
Mutant 729 in q.js: object replaced with !object.inspect()
Mutant 730 in q.js: object replaced with object.inspect().length
Mutant 731 in q.js: object.inspect replaced with Object.prototype.inspect
not replacing object.inspect with Object.prototype.inspect
Mutant 732 in q.js: this.inspect replaced with this.inspect += 1
not replacing this.inspect with this.inspect += 1
Mutant 733 in q.js: isPromise replaced with isRejected
Mutant 734 in q.js: isPromise replaced with !isPromise
Mutant 735 in q.js: isPromise replaced with reject
Mutant 736 in q.js: this.inspect replaced with this.inspect === "rejected"
not replacing this.inspect with this.inspect === "rejected"
Mutant 737 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 738 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === true
Mutant 739 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 740 in q.js: !trackUnhandledRejections replaced with true
Mutant 741 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 742 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) >= 0
Mutant 743 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise) && false
Mutant 744 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, reason)
Mutant 745 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(rejection, "no stack")
Mutant 746 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 747 in q.js: array_indexOf replaced with unhandledRejections.length
Mutant 748 in q.js: array_indexOf replaced with reportedUnhandledRejections.length
Mutant 749 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 750 in q.js: unhandledRejections replaced with unhandledReasons.length
Mutant 751 in q.js: unhandledRejections replaced with reportedUnhandledRejections.length
Mutant 752 in q.js: promise replaced with null
Mutant 753 in q.js: promise replaced with undefined
Mutant 754 in q.js: promise replaced with {
  then: ""
}
Mutant 755 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason[0], promise)
Mutant 756 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason.length, promise)
Mutant 757 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason.pop(), promise)
Mutant 758 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "Tesla"
Mutant 759 in q.js: "unhandledRejection" replaced with "fulfilled"
Mutant 760 in q.js: "unhandledRejection" replaced with "reject"
Mutant 761 in q.js: promise replaced with unhandledRejections
Mutant 762 in q.js: promise replaced with reportedUnhandledRejections
Mutant 763 in q.js: reportedUnhandledRejections.push replaced with unhandledRejections.pop
Mutant 764 in q.js: reportedUnhandledRejections.push replaced with unhandledReasons.unshift
Mutant 765 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 766 in q.js: promise replaced with array_indexOf(unhandledRejections, promise)
Mutant 767 in q.js: promise replaced with undefined
Mutant 768 in q.js: promise replaced with null
Mutant 769 in q.js: promise replaced with undefined
Mutant 770 in q.js: promise replaced with 0
Mutant 771 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack
Mutant 772 in q.js: reason && typeof reason.stack !== "undefined" replaced with typeof reason.stack !== "string"
Mutant 773 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason instanceof Error
Mutant 774 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 775 in q.js: reason.stack replaced with reason.join("")
Mutant 776 in q.js: reason.stack replaced with reason.slice(1)
Mutant 777 in q.js: reason.stack replaced with new Error(reason).stack
Mutant 778 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 779 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 780 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 781 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== "true"
Mutant 782 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections !== false
Mutant 783 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length)
Mutant 784 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.prototype)
Mutant 785 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 786 in q.js: promise replaced with unhandledRejections.pop()
Mutant 787 in q.js: promise replaced with unhandledReasons.pop()
Mutant 788 in q.js: promise replaced with Promise.resolve(promise)
Mutant 789 in q.js: at !== -1 replaced with at < -1
Mutant 790 in q.js: at !== -1 replaced with at > -1
Mutant 791 in q.js: at !== -1 replaced with at + 1
Mutant 792 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.indexOf(promise))
Mutant 793 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(Array.prototype.slice.call(reportedUnhandledRejections).indexOf(promise))
Mutant 794 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 795 in q.js: reportedUnhandledRejections replaced with []
Mutant 796 in q.js: reportedUnhandledRejections replaced with null
Mutant 797 in q.js: promise replaced with null
Mutant 798 in q.js: promise replaced with undefined
Mutant 799 in q.js: promise replaced with 0
Mutant 800 in q.js: atReport !== -1 replaced with atReport != -1
Mutant 801 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 802 in q.js: atReport !== -1 replaced with atReport < reportedUnhandledRejections.length
Mutant 803 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("resolutionHandled")
Mutant 804 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at + 1], promise)
Mutant 805 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], promise + 1)
Mutant 806 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 807 in q.js: "rejectionHandled" replaced with "rejected"
Mutant 808 in q.js: "rejectionHandled" replaced with "fulfilled"
Mutant 809 in q.js: unhandledReasons[at] replaced with reason
Mutant 810 in q.js: unhandledReasons[at] replaced with promise
Mutant 811 in q.js: unhandledReasons[at] replaced with null
Mutant 812 in q.js: promise replaced with reason
Mutant 813 in q.js: promise replaced with unhandledReasons.length
Mutant 814 in q.js: promise replaced with reportedUnhandledRejections.length
Mutant 815 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, -1)
Mutant 816 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, NaN)
Mutant 817 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, Infinity)
Mutant 818 in q.js: 1 replaced with 0
Mutant 819 in q.js: 1 replaced with 10
Mutant 820 in q.js: 1 replaced with array_indexOf(reportedUnhandledRejections, promise) + 1
Mutant 821 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, ~1)
Mutant 822 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, !at)
Mutant 823 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -at)
Mutant 824 in q.js: unhandledRejections.splice replaced with at + 1
Mutant 825 in q.js: at replaced with 0
Mutant 826 in q.js: at replaced with at - 1
Mutant 827 in q.js: at replaced with at - 2
Mutant 828 in q.js: 1 replaced with 0
Mutant 829 in q.js: 1 replaced with -1
Mutant 830 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at - 1)
Mutant 831 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at * 2)
Mutant 832 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at ^ 2)
Mutant 833 in q.js: unhandledReasons.splice replaced with unhandledReasons.shift
Mutant 834 in q.js: unhandledReasons.splice replaced with ReportedUnhandledRejections.shift
Mutant 835 in q.js: unhandledReasons.splice replaced with unhandledReasons.pop
Mutant 836 in q.js: at replaced with at - 1
Mutant 837 in q.js: at replaced with unhandledRejections[at + 1]
Mutant 838 in q.js: at replaced with unhandledReasons[at - 1]
Mutant 839 in q.js: this replaced with Promise.resolve(reason)
Mutant 840 in q.js: this replaced with Promise.reject(reason)
Mutant 841 in q.js: this replaced with Promise.reject()
Mutant 842 in q.js: reason replaced with null
Mutant 843 in q.js: reason replaced with {}
Mutant 844 in q.js: reason replaced with undefined
Mutant 845 in q.js: rejection replaced with null
Mutant 846 in q.js: rejection replaced with 1
Mutant 847 in q.js: rejection replaced with Promise.reject(reason)
Mutant 848 in q.js: reason replaced with undefined
Mutant 849 in q.js: reason replaced with {}
Mutant 850 in q.js: reason replaced with new Error('My custom error message')
Mutant 851 in q.js: name === null || name === void 0 replaced with !name
Mutant 852 in q.js: name === null || name === void 0 replaced with typeof name === "undefined"
Mutant 853 in q.js: name === null || name === void 0 replaced with name == null
Mutant 854 in q.js: value.apply(void 0, args) replaced with value.apply(0)
Mutant 855 in q.js: value.apply(void 0, args) replaced with value.apply(null)
Mutant 856 in q.js: value.apply(void 0, args) replaced with value.apply(undefined)
Mutant 857 in q.js: value.apply replaced with a = "no framework"
Mutant 858 in q.js: value.apply replaced with a = 42
Mutant 859 in q.js: void 0 replaced with null
Mutant 860 in q.js: void 0 replaced with false
Mutant 861 in q.js: void 0 replaced with 0
Mutant 862 in q.js: args replaced with [false, true]
Mutant 863 in q.js: args replaced with [null, void 0]
Mutant 864 in q.js: args replaced with [undefined, NaN]
Mutant 865 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, [args])
Mutant 866 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, ...args)
Mutant 867 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args[0])
Mutant 868 in q.js: args replaced with []
Mutant 869 in q.js: args replaced with null
Mutant 870 in q.js: args replaced with undefined
Mutant 871 in q.js: value.apply(thisp, args) replaced with value.apply("null")
Mutant 872 in q.js: value.apply(thisp, args) replaced with value.apply("undefined")
Mutant 873 in q.js: value.apply replaced with value.call
Mutant 874 in q.js: value.apply replaced with value[Symbol.iterator]
Mutant 875 in q.js: value.apply replaced with value.valueOf
Mutant 876 in q.js: args replaced with undefined
Mutant 877 in q.js: args replaced with 0
Mutant 878 in q.js: object_keys replaced with object.values
Mutant 879 in q.js: object_keys replaced with object.properties
Mutant 880 in q.js: object_keys replaced with object.prototype.hasOwnProperty
Mutant 881 in q.js: value replaced with Promise.reject("some error")
Mutant 882 in q.js: value replaced with undefined
Mutant 883 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.done)
Mutant 884 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify)
Mutant 885 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(resolver.resolve)
Mutant 886 in q.js: promise.then replaced with promise.catch
Mutant 887 in q.js: promise.then replaced with promise.all
Mutant 888 in q.js: promise.then replaced with promise.race
Mutant 889 in q.js: deferred.reject replaced with deferred.resolve
Mutant 890 in q.js: deferred.reject replaced with Q.reject
Mutant 891 in q.js: deferred.reject replaced with Promise.resolve
Mutant 892 in q.js: deferred.notify replaced with deferred.fail
Mutant 893 in q.js: deferred.notify replaced with deferred.resolve
Mutant 894 in q.js: deferred.notify replaced with deferred.reject
Mutant 895 in q.js: deferred.reject replaced with deferred
Mutant 896 in q.js: deferred.reject replaced with Q.defer
Mutant 897 in q.js: deferred.reject replaced with Promise.resolve
Mutant 898 in q.js: exception replaced with "new exception"
Mutant 899 in q.js: exception replaced with 42
Mutant 900 in q.js: exception replaced with null
Mutant 901 in q.js: dispatch(object, op, args) replaced with dispatch(null)
Mutant 902 in q.js: dispatch(object, op, args) replaced with dispatch(void 0)
Mutant 903 in q.js: dispatch(object, op, args) replaced with dispatch({})
Mutant 904 in q.js: dispatch replaced with 'undefined'
Mutant 905 in q.js: dispatch replaced with null
Mutant 906 in q.js: dispatch replaced with 'dispatch'
Mutant 907 in q.js: object replaced with null
Mutant 908 in q.js: object replaced with undefined
Mutant 909 in q.js: op replaced with Q.reject(reason)
Mutant 910 in q.js: op replaced with false
Mutant 911 in q.js: op replaced with Q.resolved(reason)
Mutant 912 in q.js: args replaced with "foo"
Mutant 913 in q.js: args replaced with undefined
Mutant 914 in q.js: args replaced with []
Mutant 915 in q.js: Q replaced with rejection
Mutant 916 in q.js: Q replaced with null
Mutant 917 in q.js: Q replaced with undefined
Mutant 918 in q.js: object replaced with false
Mutant 919 in q.js: object replaced with true
Mutant 920 in q.js: object replaced with null
Mutant 921 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled.bind(null, args))
Mutant 922 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected.bind(null, args))
Mutant 923 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread([fulfilled, rejected])
Mutant 924 in q.js: Q replaced with new Q()
Mutant 925 in q.js: value replaced with undefined
Mutant 926 in q.js: value replaced with "foo"
Mutant 927 in q.js: fulfilled replaced with fulfilled.bind(null)
Mutant 928 in q.js: fulfilled replaced with fulfilled.call(null)
Mutant 929 in q.js: fulfilled replaced with fulfilled.apply(null, [])
Mutant 930 in q.js: rejected replaced with fulfilled
Mutant 931 in q.js: rejected replaced with undefined
Mutant 932 in q.js: this.all replaced with this.reject
Mutant 933 in q.js: this.all replaced with this.inspect
Mutant 934 in q.js: this.all replaced with this.else
not replacing this.all with this.reject
not replacing this.all with this.reject
not replacing this.all with this.inspect
not replacing this.all with this.inspect
not replacing this.all with this.else
not replacing this.all with this.else
Mutant 935 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(void 0)
Mutant 936 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(array.slice())
Mutant 937 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(0)
Mutant 938 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 939 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 940 in q.js: fulfilled.apply replaced with fulfilled.length
Mutant 941 in q.js: void 0 replaced with null
Mutant 942 in q.js: void 0 replaced with Promise.resolve()
Mutant 943 in q.js: void 0 replaced with Q.fulfill()
Mutant 944 in q.js: array replaced with array.reverse()
Mutant 945 in q.js: array replaced with array.pop()
Mutant 946 in q.js: array replaced with array.shift()
Mutant 947 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 948 in q.js: generator[verb] replaced with undefined
Mutant 949 in q.js: arg replaced with null
Mutant 950 in q.js: arg replaced with "hello"
Mutant 951 in q.js: arg replaced with undefined
Mutant 952 in q.js: exception replaced with exception.message
Mutant 953 in q.js: exception replaced with exception.stack
Mutant 954 in q.js: exception replaced with exception.toString()
Mutant 955 in q.js: result.done replaced with result.value
Mutant 956 in q.js: result.done replaced with !result.value
Mutant 957 in q.js: result.done replaced with result === undefined
Mutant 958 in q.js: result.value replaced with result.values[0]
Mutant 959 in q.js: result.value replaced with result.value[0]
Mutant 960 in q.js: result.value replaced with result.value + 1
Mutant 961 in q.js: when(result.value, callback, errback) replaced with when(when(Promise.reject("error"), callback, errback))
Mutant 962 in q.js: when(result.value, callback, errback) replaced with when(when(undefined, callback, errback))
Mutant 963 in q.js: when(result.value, callback, errback) replaced with when(when(null, callback, errback))
Mutant 964 in q.js: when replaced with when + 1
Mutant 965 in q.js: when replaced with when.then
Mutant 966 in q.js: when replaced with when[0]
Mutant 967 in q.js: result.value replaced with result.value.value
Mutant 968 in q.js: result.value replaced with result.value + 1
Mutant 969 in q.js: result.value replaced with result.value.length
Mutant 970 in q.js: callback replaced with reject
Mutant 971 in q.js: callback replaced with resolve
Mutant 972 in q.js: callback replaced with continuer.bind(continuer, "next")
Mutant 973 in q.js: errback replaced with null
Mutant 974 in q.js: errback replaced with undefined
Mutant 975 in q.js: errback replaced with true
Mutant 976 in q.js: arg replaced with $r
Mutant 977 in q.js: arg replaced with $$.arg
Mutant 978 in q.js: arg replaced with $$arg
Mutant 979 in q.js: isStopIteration(exception) replaced with exception.valueOf() instanceof StopIteration
Mutant 980 in q.js: isStopIteration(exception) replaced with !isStopIteration(exception)
Mutant 981 in q.js: isStopIteration(exception) replaced with true
Mutant 982 in q.js: Q replaced with undefined
Mutant 983 in q.js: exception replaced with undefined
Mutant 984 in q.js: exception replaced with null
Mutant 985 in q.js: exception replaced with false
Mutant 986 in q.js: when(result, callback, errback) replaced with when(result, errback, callback)
Mutant 987 in q.js: when(result, callback, errback) replaced with when(result, callback)
Mutant 988 in q.js: when(result, callback, errback) replaced with when(result, callback, errback, undefined)
Mutant 989 in q.js: when replaced with reject
Mutant 990 in q.js: when replaced with defer
Mutant 991 in q.js: when replaced with resolve
Mutant 992 in q.js: result replaced with true
Mutant 993 in q.js: result replaced with false
Mutant 994 in q.js: result replaced with null
Mutant 995 in q.js: callback replaced with true
Mutant 996 in q.js: callback replaced with false
Mutant 997 in q.js: callback replaced with null
Mutant 998 in q.js: errback replaced with undefined
Mutant 999 in q.js: errback replaced with null
Mutant 1000 in q.js: errback replaced with function (error) {
  throw error;
}
Mutant 1001 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(self)
Mutant 1002 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(arguments[0])
Mutant 1003 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1004 in q.js: this replaced with null
Mutant 1005 in q.js: this replaced with Q
Mutant 1006 in q.js: this replaced with undefined
Mutant 1007 in q.js: arguments replaced with [].push(undefined)
Mutant 1008 in q.js: arguments replaced with null
Mutant 1009 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(context)
Mutant 1010 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(null)
Mutant 1011 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind({})
Mutant 1012 in q.js: continuer.bind replaced with continuer.call
Mutant 1013 in q.js: continuer.bind replaced with null
Mutant 1014 in q.js: "next" replaced with "previous"
Mutant 1015 in q.js: "next" replaced with "random"
Mutant 1016 in q.js: "next" replaced with "start"
Mutant 1017 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind("throw", reject))
Mutant 1018 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(reject, "throw"))
Mutant 1019 in q.js: continuer.bind replaced with undefined
Mutant 1020 in q.js: continuer.bind replaced with null
Mutant 1021 in q.js: continuer.bind replaced with 0
Mutant 1022 in q.js: "throw" replaced with "emit"
Mutant 1023 in q.js: "throw" replaced with "that"
Mutant 1024 in q.js: "throw" replaced with "isRejected"
Mutant 1025 in q.js: callback replaced with errback
Mutant 1026 in q.js: callback replaced with Q.reject
Mutant 1027 in q.js: callback replaced with Q.when
Mutant 1028 in q.js: all replaced with _
Mutant 1029 in q.js: all replaced with nothing
Mutant 1030 in q.js: callback.apply(self, args) replaced with callback.apply(self, arguments)
Mutant 1031 in q.js: callback.apply(self, args) replaced with callback.apply(null, args)
Mutant 1032 in q.js: callback.apply(self, args) replaced with callback.apply(undefined, args)
Mutant 1033 in q.js: callback.apply replaced with args.apply
Mutant 1034 in q.js: callback.apply replaced with deferred.apply
Mutant 1035 in q.js: callback.apply replaced with object.apply
Mutant 1036 in q.js: self replaced with null
Mutant 1037 in q.js: self replaced with undefined
Mutant 1038 in q.js: self replaced with void 0
Mutant 1039 in q.js: args replaced with args[0]
Mutant 1040 in q.js: args replaced with args.slice(1)
Mutant 1041 in q.js: args replaced with {}
Mutant 1042 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch("get", [op])
Mutant 1043 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch("set", [op, args])
Mutant 1044 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch("call", [op, args])
Mutant 1045 in q.js: Q replaced with undefined
Mutant 1046 in q.js: Q replaced with 1
Mutant 1047 in q.js: object replaced with undefined
Mutant 1048 in q.js: object replaced with null
Mutant 1049 in q.js: object replaced with {
  "value": object
}
Mutant 1050 in q.js: op replaced with op + 1
Mutant 1051 in q.js: op replaced with op - 1
Mutant 1052 in q.js: op replaced with 2 * op
Mutant 1053 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1054 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, args, op)
Mutant 1055 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(null, op, args)
Mutant 1056 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1057 in q.js: self.promiseDispatch replaced with Promise.reject
Mutant 1058 in q.js: self.promiseDispatch replaced with undefined
Mutant 1059 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1060 in q.js: deferred.resolve replaced with null
Mutant 1061 in q.js: deferred.resolve replaced with 42
Mutant 1062 in q.js: op replaced with !op
Mutant 1063 in q.js: op replaced with op + 1
Mutant 1064 in q.js: op replaced with Math.floor(op)
Mutant 1065 in q.js: args replaced with args[args.length - 1]
Mutant 1066 in q.js: args replaced with Object.values(args)
Mutant 1067 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 1068 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("put", [key, value])
Mutant 1069 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("has", [key])
Mutant 1070 in q.js: object replaced with 1 + object
Mutant 1071 in q.js: object replaced with object.nonExistentProperty
Mutant 1072 in q.js: object replaced with Object.keys(object).length
Mutant 1073 in q.js: "get" replaced with "set"
Mutant 1074 in q.js: "get" replaced with "length"
Mutant 1075 in q.js: "get" replaced with "valueOf"
Mutant 1076 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key])
Mutant 1077 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1078 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1079 in q.js: this.dispatch replaced with this.resolve
Mutant 1080 in q.js: this.dispatch replaced with this.reject
Mutant 1081 in q.js: "get" replaced with "set"
Mutant 1082 in q.js: "get" replaced with "del"
Mutant 1083 in q.js: "get" replaced with "post"
Mutant 1084 in q.js: [key] replaced with [key, key]
Mutant 1085 in q.js: [key] replaced with null
Mutant 1086 in q.js: [key] replaced with key += 1
Mutant 1087 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key])
Mutant 1088 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [otherKey, value])
Mutant 1089 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key + 1, value])
Mutant 1090 in q.js: Q replaced with null
Mutant 1091 in q.js: Q replaced with undefined
Mutant 1092 in q.js: Q replaced with 0
Mutant 1093 in q.js: object replaced with false
Mutant 1094 in q.js: object replaced with Q(function () {})
Mutant 1095 in q.js: object replaced with Q.delay(object, 0)
Mutant 1096 in q.js: "set" replaced with "get"
Mutant 1097 in q.js: "set" replaced with "post"
Mutant 1098 in q.js: [key, value] replaced with [value, value]
Mutant 1099 in q.js: [key, value] replaced with [value, undefined]
Mutant 1100 in q.js: [key, value] replaced with [0, 0]
Mutant 1101 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1102 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key + 1, value])
Mutant 1103 in q.js: "set" replaced with "setx"
Mutant 1104 in q.js: "set" replaced with 42
Mutant 1105 in q.js: "set" replaced with "hasOwnProperty"
Mutant 1106 in q.js: [key, value] replaced with [value]
Mutant 1107 in q.js: [key, value] replaced with [key, value, value]
Mutant 1108 in q.js: [key, value] replaced with [null]
Mutant 1109 in q.js: object replaced with undefined
Mutant 1110 in q.js: object replaced with null
Mutant 1111 in q.js: object replaced with 42
Mutant 1112 in q.js: "delete" replaced with "set"
Mutant 1113 in q.js: "delete" replaced with "push"
Mutant 1114 in q.js: "delete" replaced with "pop"
Mutant 1115 in q.js: [key] replaced with [value]
Mutant 1116 in q.js: [key] replaced with ["foo"]
Mutant 1117 in q.js: [key] replaced with [key + 1]
Mutant 1118 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key])
Mutant 1119 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("missing", [key])
Mutant 1120 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("post", [key])
Mutant 1121 in q.js: this.dispatch replaced with this.proxiedObject.dispatch
Mutant 1122 in q.js: "delete" replaced with "remove"
Mutant 1123 in q.js: "delete" replaced with "_"
Mutant 1124 in q.js: "delete" replaced with "del" + "ete"
Mutant 1125 in q.js: [key] replaced with [key1, key2]
Mutant 1126 in q.js: [key] replaced with [key, key + 1]
Mutant 1127 in q.js: [key] replaced with [key * 2]
Mutant 1128 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1129 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args, function () {}])
Mutant 1130 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name])
Mutant 1131 in q.js: Q replaced with boo
Mutant 1132 in q.js: Q replaced with "bar".translate
Mutant 1133 in q.js: object replaced with undefined
Mutant 1134 in q.js: object replaced with null
Mutant 1135 in q.js: object replaced with this
Mutant 1136 in q.js: "post" replaced with "put"
Mutant 1137 in q.js: "post" replaced with "push"
Mutant 1138 in q.js: "post" replaced with "send"
Mutant 1139 in q.js: [name, args] replaced with [name, args.toString()]
Mutant 1140 in q.js: [name, args] replaced with [name, args + '']
Mutant 1141 in q.js: [name, args] replaced with [name, args * 2]
Mutant 1142 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args[0]])
Mutant 1143 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, [args]])
Mutant 1144 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, [args[0]]])
Mutant 1145 in q.js: this.dispatch replaced with this.resolve
Mutant 1146 in q.js: this.dispatch replaced with this.fulfill
Mutant 1147 in q.js: this.dispatch replaced with this.reject
Mutant 1148 in q.js: "post" replaced with "put"
Mutant 1149 in q.js: "post" replaced with "call"
Mutant 1150 in q.js: "post" replaced with "post;"
Mutant 1151 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1152 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1153 in q.js: [name, args] replaced with [name, args.concat("extra argument")]
Mutant 1154 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("foo", [name, array_slice(arguments, 2)])
Mutant 1155 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("get", [name, array_slice(arguments, 1)])
Mutant 1156 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("set", [name, array_slice(arguments, 1)])
Mutant 1157 in q.js: Q replaced with Q.isResolved
Mutant 1158 in q.js: Q replaced with Q.resolve
Mutant 1159 in q.js: Q replaced with Q.reject
Mutant 1160 in q.js: object replaced with undefined
Mutant 1161 in q.js: object replaced with null
Mutant 1162 in q.js: object replaced with true
Mutant 1163 in q.js: "post" replaced with "set"
Mutant 1164 in q.js: "post" replaced with "foo"
Mutant 1165 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1166 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments)]
Mutant 1167 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 2, 1)]
Mutant 1168 in q.js: array_slice(arguments, 2) replaced with array_slice(Q.wait)
Mutant 1169 in q.js: array_slice(arguments, 2) replaced with array_slice(Q.concurrent)
Mutant 1170 in q.js: array_slice(arguments, 2) replaced with array_slice(Q.fapply)
Mutant 1171 in q.js: array_slice replaced with array_shift
Mutant 1172 in q.js: array_slice replaced with object[method]
Mutant 1173 in q.js: arguments replaced with null
Mutant 1174 in q.js: arguments replaced with undefined
Mutant 1175 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1176 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1177 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1178 in q.js: this.dispatch replaced with null
Mutant 1179 in q.js: this.dispatch replaced with undefined
Mutant 1180 in q.js: this.dispatch replaced with deferred
Mutant 1181 in q.js: "post" replaced with "put"
Mutant 1182 in q.js: "post" replaced with "postx"
Mutant 1183 in q.js: "post" replaced with Math.random()
Mutant 1184 in q.js: [name, array_slice(arguments, 1)] replaced with [foo, array_slice(arguments, 1)]
Mutant 1185 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1186 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 3)]
Mutant 1187 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[1])
Mutant 1188 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1189 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length - 1)
Mutant 1190 in q.js: arguments replaced with deferred
Mutant 1191 in q.js: arguments replaced with function () {}
Mutant 1192 in q.js: arguments replaced with undefined
Mutant 1193 in q.js: 1 replaced with 0
Mutant 1194 in q.js: 1 replaced with -1
Mutant 1195 in q.js: 1 replaced with promises.length + 1
Mutant 1196 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [null, args])
Mutant 1197 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1198 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("bind", [void 0, args])
Mutant 1199 in q.js: object replaced with undefined
Mutant 1200 in q.js: object replaced with function () {}
Mutant 1201 in q.js: "apply" replaced with "call"
Mutant 1202 in q.js: "apply" replaced with "bind"
Mutant 1203 in q.js: "apply" replaced with "POST"
Mutant 1204 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("call", [this, args])
Mutant 1205 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [object, []])
Mutant 1206 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, [].concat(args)])
Mutant 1207 in q.js: "apply" replaced with "call"
Mutant 1208 in q.js: "apply" replaced with "bind"
Mutant 1209 in q.js: "apply" replaced with "valueOf"
Mutant 1210 in q.js: [void 0, args] replaced with [null, args]
Mutant 1211 in q.js: [void 0, args] replaced with [arguments, args]
Mutant 1212 in q.js: [void 0, args] replaced with [void 0, []]
Mutant 1213 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1214 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 1) || []])
Mutant 1215 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 1)])
Mutant 1216 in q.js: Q replaced with then
Mutant 1217 in q.js: Q replaced with resolve
Mutant 1218 in q.js: Q replaced with reject
Mutant 1219 in q.js: object replaced with null
Mutant 1220 in q.js: object replaced with undefined
Mutant 1221 in q.js: object replaced with Q.reject("error")
Mutant 1222 in q.js: "apply" replaced with "call"
Mutant 1223 in q.js: "apply" replaced with "bind"
Mutant 1224 in q.js: "apply" replaced with "arguments"
Mutant 1225 in q.js: [void 0, array_slice(arguments, 1)] replaced with [this, array_slice(arguments, 1)]
Mutant 1226 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, arguments]
Mutant 1227 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1228 in q.js: array_slice(arguments, 1) replaced with array_slice(0)
Mutant 1229 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1230 in q.js: array_slice replaced with array_slice[1]
Mutant 1231 in q.js: array_slice replaced with array_slice.length
Mutant 1232 in q.js: arguments replaced with [1, 2, 3]
Mutant 1233 in q.js: arguments replaced with ["a", "b", "c"]
Mutant 1234 in q.js: 1 replaced with 1 + 1
Mutant 1235 in q.js: 1 replaced with "hello" + "world"
Mutant 1236 in q.js: 1 replaced with "hello" + 1
Mutant 1237 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [undefined, array_slice(arguments)])
Mutant 1238 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [null, array_slice(arguments)])
Mutant 1239 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [0, array_slice(arguments)])
Mutant 1240 in q.js: "apply" replaced with "call"
Mutant 1241 in q.js: "apply" replaced with "bind"
Mutant 1242 in q.js: "apply" replaced with "catch"
Mutant 1243 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1244 in q.js: [void 0, array_slice(arguments)] replaced with [null, array_slice(arguments)]
Mutant 1245 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1, -1)]
Mutant 1246 in q.js: array_slice replaced with [].slice
Mutant 1247 in q.js: array_slice replaced with Array.prototype
Mutant 1248 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1249 in q.js: arguments replaced with []
Mutant 1250 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1251 in q.js: array_slice(arguments, 1) replaced with array_slice(array_length(arguments) - 1)
Mutant 1252 in q.js: array_slice(arguments, 1) replaced with array_slice(args.length - 1)
Mutant 1253 in q.js: array_slice replaced with array_slice + 1
Mutant 1254 in q.js: array_slice replaced with array_slice * 2
Mutant 1255 in q.js: array_slice replaced with array_slice - 1
Mutant 1256 in q.js: arguments replaced with args.concat(array_slice(arguments, 2))
Mutant 1257 in q.js: arguments replaced with array_slice(arguments, 1, -1)
Mutant 1258 in q.js: arguments replaced with args.reduce(function (acc, arg) {
  acc.push(arg);
  return acc;
}, [])
Mutant 1259 in q.js: args.concat replaced with args + args
Mutant 1260 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1261 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, -2)
Mutant 1262 in q.js: array_slice(arguments) replaced with [0, 1, 2].map(array_slice(arguments, 1))
Mutant 1263 in q.js: array_slice replaced with array_pop
Mutant 1264 in q.js: arguments replaced with null
Mutant 1265 in q.js: arguments replaced with undefined
Mutant 1266 in q.js: arguments replaced with {}
Mutant 1267 in q.js: arguments replaced with this
Mutant 1268 in q.js: arguments replaced with null
Mutant 1269 in q.js: arguments replaced with undefined
Mutant 1270 in q.js: args.concat replaced with null
Mutant 1271 in q.js: args.concat replaced with undefined
Mutant 1272 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1273 in q.js: array_slice(arguments) replaced with array_slice(args)
Mutant 1274 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1275 in q.js: arguments replaced with null
Mutant 1276 in q.js: arguments replaced with undefined
Mutant 1277 in q.js: arguments replaced with 0
Mutant 1278 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1279 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1])
Mutant 1280 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["name"])
Mutant 1281 in q.js: Q replaced with null
Mutant 1282 in q.js: Q replaced with undefined
Mutant 1283 in q.js: object replaced with object.reverse()
Mutant 1284 in q.js: object replaced with object[0]
Mutant 1285 in q.js: object replaced with object + 1
Mutant 1286 in q.js: "keys" replaced with "get"
Mutant 1287 in q.js: "keys" replaced with "has"
Mutant 1288 in q.js: "keys" replaced with "prototype"
Mutant 1289 in q.js: [] replaced with null
Mutant 1290 in q.js: [] replaced with this
Mutant 1291 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [1, 2, 3])
Mutant 1292 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1293 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", 0)
Mutant 1294 in q.js: "keys" replaced with "values"
Mutant 1295 in q.js: "keys" replaced with "length"
Mutant 1296 in q.js: "keys" replaced with "toString"
Mutant 1297 in q.js: [] replaced with [1, 2, 3]
Mutant 1298 in q.js: [] replaced with undefined
Mutant 1299 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.isFulfilled()
Mutant 1300 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.state() !== "fulfilled"
Mutant 1301 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.resolve()
Mutant 1302 in q.js: isPromise replaced with typeof promise === "object"
Mutant 1303 in q.js: isPromise replaced with !promise
Mutant 1304 in q.js: promise replaced with promise.then(function () {
  return null;
})
Mutant 1305 in q.js: promise replaced with promise.then(function () {
  throw "error";
})
Mutant 1306 in q.js: promise replaced with promise.then(function () {
  return undefined;
})
Mutant 1307 in q.js: promise.inspect replaced with promise.label
Mutant 1308 in q.js: promise.inspect replaced with promise["value"]
Mutant 1309 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1310 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1311 in q.js: deferred.resolve replaced with deferred.when
Mutant 1312 in q.js: promises replaced with promises.slice()
Mutant 1313 in q.js: promises replaced with promises.reverse()
Mutant 1314 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.state === "fulfilled";
})
Mutant 1315 in q.js: deferred.notify replaced with deferred.reject
Mutant 1316 in q.js: deferred.notify replaced with promise.notify
Mutant 1317 in q.js: deferred.notify replaced with Q.notify
Mutant 1318 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + 1,
  value: progress
}
Mutant 1319 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: undefined,
  value: progress
}
Mutant 1320 in q.js: {
  index: index,
  value: progress
} replaced with {
  value: progress + 1
}
Mutant 1321 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1322 in q.js: deferred.resolve replaced with Q.reject
Mutant 1323 in q.js: deferred.resolve replaced with undefined
Mutant 1324 in q.js: promises replaced with []
Mutant 1325 in q.js: promises replaced with undefined
Mutant 1326 in q.js: promises replaced with new Error("")
Mutant 1327 in q.js: all replaced with any
Mutant 1328 in q.js: all replaced with Promise.reject
Mutant 1329 in q.js: this replaced with this.then()
Mutant 1330 in q.js: this replaced with allSettled(Promise.reject())
Mutant 1331 in q.js: this replaced with Array.prototype.map.call(this)
Mutant 1332 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1333 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1334 in q.js: promises.length === 0 replaced with promises.length !== 0
Mutant 1335 in q.js: Q.resolve replaced with Q.reject
Mutant 1336 in q.js: Q.resolve replaced with Promise.reject
Mutant 1337 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.inspect().state === "rejected")
Mutant 1338 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(Q.reject(promise.inspect().state))
Mutant 1339 in q.js: promise replaced with promise.then(null, onRejected)
Mutant 1340 in q.js: promise replaced with promise.inspect()
Mutant 1341 in q.js: promise replaced with when(promise, null, onRejected)
Mutant 1342 in q.js: onFulfilled replaced with 0
Mutant 1343 in q.js: onFulfilled replaced with null
Mutant 1344 in q.js: onRejected replaced with deferred.resolve()
Mutant 1345 in q.js: onRejected replaced with deferred.reject()
Mutant 1346 in q.js: onRejected replaced with when(promise, function () {
  deferred.resolve();
}, function () {
  deferred.reject();
})
Mutant 1347 in q.js: onProgress replaced with onRejected
Mutant 1348 in q.js: onProgress replaced with onFulfilled
Mutant 1349 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1350 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1351 in q.js: deferred.resolve replaced with deferred.somethingElse
Mutant 1352 in q.js: result replaced with promise
Mutant 1353 in q.js: result replaced with index
Mutant 1354 in q.js: result replaced with random.nextInt()
Mutant 1355 in q.js: pendingCount === 0 replaced with pendingCount !== 0
Mutant 1356 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1357 in q.js: pendingCount === 0 replaced with pendingCount < promises.length
Mutant 1358 in q.js: rejection replaced with "Another error message"
Mutant 1359 in q.js: rejection replaced with 123
Mutant 1360 in q.js: rejection replaced with null
Mutant 1361 in q.js: any replaced with none
Mutant 1362 in q.js: any replaced with null
Mutant 1363 in q.js: any replaced with undefined
Mutant 1364 in q.js: this replaced with Promise.prototype
Mutant 1365 in q.js: this replaced with promise.then(() => Promise.prototype)
Mutant 1366 in q.js: this replaced with function () {
  return Promise.prototype;
}
Mutant 1367 in q.js: deprecate replaced with deprecate2
Mutant 1368 in q.js: allResolved replaced with none
Mutant 1369 in q.js: allResolved replaced with first
Mutant 1370 in q.js: allResolved replaced with allFulfilled
Mutant 1371 in q.js: "allResolved" replaced with "allRejected"
Mutant 1372 in q.js: "allResolved" replaced with "none"
Mutant 1373 in q.js: "allResolved" replaced with "anyRejected"
Mutant 1374 in q.js: "allSettled" replaced with "anySettled"
Mutant 1375 in q.js: "allSettled" replaced with "noneSettled"
Mutant 1376 in q.js: "allSettled" replaced with "lastSettled"
Mutant 1377 in q.js: array_map(promises, Q) replaced with array_map(promises, Q, 1)
Mutant 1378 in q.js: array_map(promises, Q) replaced with array_map(promises, Q, promises)
Mutant 1379 in q.js: array_map(promises, Q) replaced with array_map([], Q)
Mutant 1380 in q.js: promises replaced with promises[index]
Mutant 1381 in q.js: promises replaced with promises[i]
Mutant 1382 in q.js: promises replaced with Array.prototype.slice.call(promises)
Mutant 1383 in q.js: Q replaced with null
Mutant 1384 in q.js: Q replaced with undefined
Mutant 1385 in q.js: when(promise, noop, noop) replaced with when(promise.finally(function () {}))
Mutant 1386 in q.js: when(promise, noop, noop) replaced with when(promise.then(function () {}))
Mutant 1387 in q.js: when(promise, noop, noop) replaced with when(promise.catch(function () {}))
Mutant 1388 in q.js: when replaced with reject
Mutant 1389 in q.js: when replaced with deferred.reject
Mutant 1390 in q.js: promise replaced with promise.then(noop())
Mutant 1391 in q.js: promise replaced with promise.then(reject(new Error('Failed')))
Mutant 1392 in q.js: promise replaced with promise.then(notification => when(notification, noop()))
Mutant 1393 in q.js: this replaced with promises
Mutant 1394 in q.js: this replaced with this.all
Mutant 1395 in q.js: this replaced with null
Mutant 1396 in q.js: Q replaced with 'any'
Mutant 1397 in q.js: Q replaced with 'all'
Mutant 1398 in q.js: Q replaced with 'reject'
Mutant 1399 in q.js: promises replaced with []
Mutant 1400 in q.js: promises replaced with void 0
Mutant 1401 in q.js: promises replaced with "foobar"
Mutant 1402 in q.js: promise replaced with null
Mutant 1403 in q.js: promise replaced with undefined
Mutant 1404 in q.js: promise replaced with NaN
Mutant 1405 in q.js: promise.inspect replaced with promise["inspect"]
Mutant 1406 in q.js: regardless replaced with function ohNo() {
  throw new Error("Uh oh!");
}
Mutant 1407 in q.js: regardless replaced with null
Mutant 1408 in q.js: regardless replaced with function alsoRegardless() {}
Mutant 1409 in q.js: regardless replaced with function () {
  throw new Error();
}()
Mutant 1410 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, void 0)
Mutant 1411 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, 1)
Mutant 1412 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, NaN)
Mutant 1413 in q.js: Q replaced with null
Mutant 1414 in q.js: Q replaced with undefined
Mutant 1415 in q.js: object replaced with null
Mutant 1416 in q.js: object replaced with undefined
Mutant 1417 in q.js: object replaced with {}
Mutant 1418 in q.js: void 0 replaced with null
Mutant 1419 in q.js: void 0 replaced with undefined
Mutant 1420 in q.js: void 0 replaced with NaN
Mutant 1421 in q.js: rejected replaced with undefined
Mutant 1422 in q.js: rejected replaced with rejected.then(undefined)
Mutant 1423 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1424 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, null)
Mutant 1425 in q.js: this.then(void 0, rejected) replaced with this.then(alert("error!"), rejected)
Mutant 1426 in q.js: this.then replaced with this.catch
Mutant 1427 in q.js: void 0 replaced with null
Mutant 1428 in q.js: void 0 replaced with undefined
Mutant 1429 in q.js: void 0 replaced with NaN
Mutant 1430 in q.js: rejected replaced with rejects
Mutant 1431 in q.js: rejected replaced with returns
Mutant 1432 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, void 0)
Mutant 1433 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, void 0, noop)
Mutant 1434 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, void 0, progressed(null))
Mutant 1435 in q.js: void 0 replaced with null
Mutant 1436 in q.js: void 0 replaced with undefined
Mutant 1437 in q.js: void 0 replaced with deferred.notify
Mutant 1438 in q.js: void 0 replaced with null
Mutant 1439 in q.js: void 0 replaced with undefined
Mutant 1440 in q.js: void 0 replaced with 0
Mutant 1441 in q.js: progressed replaced with "any"
Mutant 1442 in q.js: progressed replaced with "none"
Mutant 1443 in q.js: progressed replaced with !progressed
Mutant 1444 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(void 0, undefined, progressed)
Mutant 1445 in q.js: void 0 replaced with null
Mutant 1446 in q.js: void 0 replaced with undefined
Mutant 1447 in q.js: void 0 replaced with () => {}
Mutant 1448 in q.js: void 0 replaced with Q.reject(new Error("uj"))
Mutant 1449 in q.js: void 0 replaced with Q.reject(new Error())
Mutant 1450 in q.js: progressed replaced with progressed + 1
Mutant 1451 in q.js: progressed replaced with progressed("", undefined)
Mutant 1452 in q.js: progressed replaced with function () {
  return progressed.apply(null, arguments);
}
Mutant 1453 in q.js: Q replaced with doesNotExist
Mutant 1454 in q.js: Q replaced with notDefined
Mutant 1455 in q.js: Q replaced with null
Mutant 1456 in q.js: object replaced with Q(object).delay(0)
Mutant 1457 in q.js: object replaced with Q(object).then(Q.reverse)
Mutant 1458 in q.js: object replaced with Q(object).then(Q.flip)
Mutant 1459 in q.js: callback replaced with rejected
Mutant 1460 in q.js: callback replaced with function () {
  return rejected;
}
Mutant 1461 in q.js: callback replaced with function () {
  throw rejected;
}
Mutant 1462 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || typeof callback !== "function"
Mutant 1463 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || callback.apply !== Function.prototype.apply
Mutant 1464 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || callback.apply === "function"
Mutant 1465 in q.js: callback replaced with callback + 1
Mutant 1466 in q.js: callback replaced with null
Mutant 1467 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1468 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, progress, fulfilled)
Mutant 1469 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(progress, fulfilled, rejected)
Mutant 1470 in q.js: Q replaced with Q.reject
Mutant 1471 in q.js: fulfilled replaced with rejected
Mutant 1472 in q.js: fulfilled replaced with () => rejected
Mutant 1473 in q.js: rejected replaced with Q.reject
Mutant 1474 in q.js: rejected replaced with Q.fulfill
Mutant 1475 in q.js: progress replaced with null
Mutant 1476 in q.js: progress replaced with () => {}
Mutant 1477 in q.js: progress replaced with update => {
  throw update;
}
Mutant 1478 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error.message, promise)
Mutant 1479 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise.resolve(error), promise)
Mutant 1480 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise.reject(error), promise)
Mutant 1481 in q.js: Q.onerror replaced with Q.error
Mutant 1482 in q.js: Q.onerror replaced with Q.errors
Mutant 1483 in q.js: Q.onerror replaced with Q.difference(Q.error, Q.error)
Mutant 1484 in q.js: Q.onerror replaced with Q.onerror = null
Mutant 1485 in q.js: error replaced with null
Mutant 1486 in q.js: error replaced with undefined
Mutant 1487 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected)
Mutant 1488 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, "fake progress")
Mutant 1489 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, "rejected", progress)
Mutant 1490 in q.js: fulfilled replaced with rejected
Mutant 1491 in q.js: fulfilled replaced with null
Mutant 1492 in q.js: fulfilled replaced with 42
Mutant 1493 in q.js: progress replaced with void 0
Mutant 1494 in q.js: progress replaced with false
Mutant 1495 in q.js: onUnhandledError replaced with onUnhandledError.nonExistentMethod()
Mutant 1496 in q.js: onUnhandledError replaced with onUnhandledError.apply()
Mutant 1497 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(function () {})
Mutant 1498 in q.js: promise.then replaced with promise.update
Mutant 1499 in q.js: void 0 replaced with 0
Mutant 1500 in q.js: void 0 replaced with Symbol('invalid')
Mutant 1501 in q.js: void 0 replaced with new Error()
Mutant 1502 in q.js: onUnhandledError replaced with Q.onerror
Mutant 1503 in q.js: onUnhandledError replaced with promise.onerror
Mutant 1504 in q.js: onUnhandledError replaced with Q.nextTick
Mutant 1505 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(0, error)
Mutant 1506 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms + 1, error)
Mutant 1507 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms * 2, error)
Mutant 1508 in q.js: object replaced with null
Mutant 1509 in q.js: object replaced with "hello"
Mutant 1510 in q.js: object replaced with function () {}
Mutant 1511 in q.js: ms replaced with 0
Mutant 1512 in q.js: ms replaced with -1
Mutant 1513 in q.js: ms replaced with NaN
Mutant 1514 in q.js: error replaced with "Timeout"
Mutant 1515 in q.js: error replaced with null
Mutant 1516 in q.js: error replaced with 404
Mutant 1517 in q.js: defer replaced with null
Mutant 1518 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1519 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1520 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1521 in q.js: error replaced with 1
Mutant 1522 in q.js: error replaced with "error"
Mutant 1523 in q.js: timeoutId replaced with 0
Mutant 1524 in q.js: timeoutId replaced with null
Mutant 1525 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1526 in q.js: deferred.resolve replaced with null
Mutant 1527 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1528 in q.js: value replaced with null
Mutant 1529 in q.js: value replaced with undefined
Mutant 1530 in q.js: value replaced with {}
Mutant 1531 in q.js: timeoutId replaced with undefined
Mutant 1532 in q.js: timeoutId replaced with null
Mutant 1533 in q.js: timeoutId replaced with 42
Mutant 1534 in q.js: deferred.reject replaced with null
Mutant 1535 in q.js: deferred.reject replaced with undefined
Mutant 1536 in q.js: exception replaced with null
Mutant 1537 in q.js: exception replaced with 0
Mutant 1538 in q.js: exception replaced with void 0
Mutant 1539 in q.js: timeout === void 0 replaced with timeout == null
Mutant 1540 in q.js: timeout === void 0 replaced with timeout < 500
Mutant 1541 in q.js: timeout === void 0 replaced with timeout + 1
Mutant 1542 in q.js: object replaced with null
Mutant 1543 in q.js: object replaced with undefined
Mutant 1544 in q.js: object replaced with Q
Mutant 1545 in q.js: timeout replaced with "hello"
Mutant 1546 in q.js: timeout replaced with null
Mutant 1547 in q.js: timeout replaced with () => {
  throw new Error("hello");
}
Mutant 1548 in q.js: defer replaced with 42
Mutant 1549 in q.js: defer replaced with 10
Mutant 1550 in q.js: defer replaced with {}
Mutant 1551 in q.js: value replaced with undefined
Mutant 1552 in q.js: value replaced with null
Mutant 1553 in q.js: value replaced with 0
Mutant 1554 in q.js: Q replaced with null
Mutant 1555 in q.js: Q replaced with undefined
Mutant 1556 in q.js: Q replaced with 0
Mutant 1557 in q.js: callback replaced with callback(null, value)
Mutant 1558 in q.js: callback replaced with callback(error, null)
Mutant 1559 in q.js: callback replaced with callback(null, null)
Mutant 1560 in q.js: args replaced with null
Mutant 1561 in q.js: args replaced with []
Mutant 1562 in q.js: args replaced with [1, 2, 3]
Mutant 1563 in q.js: array_slice replaced with -1
Mutant 1564 in q.js: array_slice replaced with undefined
Mutant 1565 in q.js: array_slice replaced with null
Mutant 1566 in q.js: args replaced with args.slice(1)
Mutant 1567 in q.js: args replaced with args.concat(null)
Mutant 1568 in q.js: args replaced with ["different", "arguments"]
Mutant 1569 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1570 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver("test")
Mutant 1571 in q.js: this.fapply replaced with this.nfapply
Mutant 1572 in q.js: this.fapply replaced with this.post
Mutant 1573 in q.js: this.fapply replaced with this.nbind
not replacing this.fapply with this.nfapply
not replacing this.fapply with this.nfapply
not replacing this.fapply with this.post
not replacing this.fapply with this.post
not replacing this.fapply with this.nbind
not replacing this.fapply with this.nbind
Mutant 1574 in q.js: nodeArgs replaced with nodeArgs.length
Mutant 1575 in q.js: nodeArgs replaced with null
Mutant 1576 in q.js: nodeArgs replaced with undefined
Mutant 1577 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1578 in q.js: deferred.reject replaced with null
Mutant 1579 in q.js: deferred.reject replaced with Q.reject
Mutant 1580 in q.js: array_slice(arguments, 1) replaced with array_slice(0)
Mutant 1581 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1582 in q.js: array_slice(arguments, 1) replaced with array_slice(undefined)
Mutant 1583 in q.js: arguments replaced with 1
Mutant 1584 in q.js: arguments replaced with []
Mutant 1585 in q.js: arguments replaced with {}
Mutant 1586 in q.js: 1 replaced with 2
Mutant 1587 in q.js: 1 replaced with Math.floor(Math.random() * 3)
Mutant 1588 in q.js: args replaced with null
Mutant 1589 in q.js: args replaced with []
Mutant 1590 in q.js: args replaced with [undefined]
Mutant 1591 in q.js: array_slice replaced with undefined
Mutant 1592 in q.js: array_slice replaced with console.log
Mutant 1593 in q.js: array_slice replaced with null
Mutant 1594 in q.js: arguments replaced with null
Mutant 1595 in q.js: arguments replaced with undefined
Mutant 1596 in q.js: arguments replaced with []
Mutant 1597 in q.js: defer replaced with deferred.resolve
Mutant 1598 in q.js: defer replaced with promise.reject
Mutant 1599 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1600 in q.js: deferred.makeNodeResolver() replaced with console.log
Mutant 1601 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1602 in q.js: deferred.makeNodeResolver replaced with Q.makeNodeResolver
Mutant 1603 in q.js: deferred.makeNodeResolver replaced with resolve
Mutant 1604 in q.js: this.fapply replaced with deferred.reject
Mutant 1605 in q.js: this.fapply replaced with deferred.resolve
Mutant 1606 in q.js: this.fapply replaced with deferred.notify
not replacing this.fapply with deferred.reject
not replacing this.fapply with deferred.reject
not replacing this.fapply with deferred.resolve
not replacing this.fapply with deferred.resolve
not replacing this.fapply with deferred.notify
not replacing this.fapply with deferred.notify
Mutant 1607 in q.js: nodeArgs replaced with nodeArgs.shift()
Mutant 1608 in q.js: nodeArgs replaced with nodeArgs.concat(reject)
Mutant 1609 in q.js: nodeArgs replaced with nodeArgs.map(function (arg) {
  return arg * 2;
})
Mutant 1610 in q.js: callback === undefined replaced with !callback
Mutant 1611 in q.js: callback === undefined replaced with callback != null
Mutant 1612 in q.js: callback === undefined replaced with typeof callback !== 'function'
Mutant 1613 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 1614 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1615 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 1616 in q.js: arguments replaced with array_slice(args, 1, 2)
Mutant 1617 in q.js: arguments replaced with array_slice(args, 1, -1)
Mutant 1618 in q.js: arguments replaced with array_slice(-1, -2)
Mutant 1619 in q.js: 1 replaced with "0"
Mutant 1620 in q.js: 1 replaced with null
Mutant 1621 in q.js: 1 replaced with undefined
Mutant 1622 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1623 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, arguments.length - 1)
Mutant 1624 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1625 in q.js: array_slice replaced with null
Mutant 1626 in q.js: arguments replaced with deferred.resolve(value)
Mutant 1627 in q.js: arguments replaced with deferred.reject(error)
Mutant 1628 in q.js: arguments replaced with deferred.notify(value)
Mutant 1629 in q.js: defer replaced with null
Mutant 1630 in q.js: defer replaced with undefined
Mutant 1631 in q.js: nodeArgs.push replaced with nodeArgs[0].push
Mutant 1632 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1633 in q.js: nodeArgs.push replaced with nodeArgs.slice
Mutant 1634 in q.js: deferred.makeNodeResolver() replaced with function (error) {
  deferred.reject(error);
}
Mutant 1635 in q.js: deferred.makeNodeResolver() replaced with function (error, result) {
  deferred.resolve(error || result);
}
Mutant 1636 in q.js: deferred.makeNodeResolver() replaced with function (error, result) {
  deferred.reject(error ? error : result);
}
Mutant 1637 in q.js: deferred.makeNodeResolver replaced with undefined
Mutant 1638 in q.js: deferred.makeNodeResolver replaced with null
Mutant 1639 in q.js: Q replaced with deferred
Mutant 1640 in q.js: callback replaced with null
Mutant 1641 in q.js: callback replaced with 0
Mutant 1642 in q.js: callback replaced with {}.undefined
Mutant 1643 in q.js: nodeArgs replaced with nodeArgs[0]
Mutant 1644 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1645 in q.js: nodeArgs replaced with null
Mutant 1646 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1647 in q.js: deferred.reject replaced with deferred.notify
Mutant 1648 in q.js: deferred.reject replaced with Q
Mutant 1649 in q.js: arguments replaced with null
Mutant 1650 in q.js: arguments replaced with undefined
Mutant 1651 in q.js: arguments replaced with arguments[0]
Mutant 1652 in q.js: this replaced with null
Mutant 1653 in q.js: this replaced with undefined
Mutant 1654 in q.js: this replaced with function () {}
Mutant 1655 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this)
Mutant 1656 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1657 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply({})
Mutant 1658 in q.js: Q.denodeify.apply replaced with Q.npost
Mutant 1659 in q.js: Q.denodeify.apply replaced with Q.napply
Mutant 1660 in q.js: Q.denodeify.apply replaced with Q.nmcall
Mutant 1661 in q.js: void 0 replaced with null
Mutant 1662 in q.js: void 0 replaced with undefined
Mutant 1663 in q.js: void 0 replaced with void 0
Mutant 1664 in q.js: args replaced with Q.ninvoke(13, nodeArgs)
Mutant 1665 in q.js: args replaced with Q.ninvoke(void 0, nodeArgs)
Mutant 1666 in q.js: args replaced with Q.ninvoke(Q, nodeArgs)
Mutant 1667 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1668 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 2, 1))
Mutant 1669 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments.slice(2))
Mutant 1670 in q.js: arguments replaced with array_slice(arguments).slice(2)
Mutant 1671 in q.js: arguments replaced with Object.values(arguments).slice(2)
Mutant 1672 in q.js: arguments replaced with [].slice.call(arguments, 2)
Mutant 1673 in q.js: 2 replaced with 2 + void 0
Mutant 1674 in q.js: 2 replaced with 2 + undefined
Mutant 1675 in q.js: 2 replaced with 2 + {}
Mutant 1676 in q.js: baseArgs.concat replaced with baseArgs + nodeArgs
Mutant 1677 in q.js: array_slice(arguments) replaced with this.arguments
Mutant 1678 in q.js: array_slice(arguments) replaced with this[arguments]
Mutant 1679 in q.js: array_slice(arguments) replaced with function () {
  return array_slice(arguments);
}
Mutant 1680 in q.js: array_slice replaced with array_splice
Mutant 1681 in q.js: arguments replaced with []
Mutant 1682 in q.js: arguments replaced with timeout
Mutant 1683 in q.js: arguments replaced with baseArgs
Mutant 1684 in q.js: nodeArgs.push replaced with nodeArgs[0]
Mutant 1685 in q.js: nodeArgs.push replaced with "hello world"
Mutant 1686 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1687 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1688 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1689 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1690 in q.js: thisp replaced with console.log
Mutant 1691 in q.js: thisp replaced with undefined
Mutant 1692 in q.js: thisp replaced with null
Mutant 1693 in q.js: arguments replaced with nodeArgs.concat(arguments)
Mutant 1694 in q.js: arguments replaced with nodeArgs.join("|")
Mutant 1695 in q.js: arguments replaced with nodeArgs.push(arguments)
Mutant 1696 in q.js: bound replaced with object
Mutant 1697 in q.js: bound replaced with thisp
Mutant 1698 in q.js: bound replaced with null
Mutant 1699 in q.js: nodeArgs replaced with null
Mutant 1700 in q.js: nodeArgs replaced with undefined
Mutant 1701 in q.js: nodeArgs replaced with Q.reject
Mutant 1702 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1703 in q.js: deferred.reject replaced with Promise.reject
Mutant 1704 in q.js: deferred.reject replaced with undefined
Mutant 1705 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1706 in q.js: array_slice(arguments, 0) replaced with array_slice(args.length)
Mutant 1707 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments[0])
Mutant 1708 in q.js: array_slice replaced with "array_slice"
Mutant 1709 in q.js: arguments replaced with null
Mutant 1710 in q.js: arguments replaced with undefined
Mutant 1711 in q.js: arguments replaced with "test"
Mutant 1712 in q.js: this replaced with null
Mutant 1713 in q.js: this replaced with 0
Mutant 1714 in q.js: this replaced with "PLACEHOLDER"
Mutant 1715 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null)
Mutant 1716 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined)
Mutant 1717 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(0)
Mutant 1718 in q.js: Q.nbind.apply replaced with Q.prototype.denodeify.apply
Mutant 1719 in q.js: Q.nbind.apply replaced with Object.prototype.denodeify.apply
Mutant 1720 in q.js: Q.nbind.apply replaced with Function.prototype.denodeify.apply
Mutant 1721 in q.js: void 0 replaced with undefined
Mutant 1722 in q.js: void 0 replaced with false
Mutant 1723 in q.js: void 0 replaced with null
Mutant 1724 in q.js: args replaced with args[0]
Mutant 1725 in q.js: args replaced with args.pop()
Mutant 1726 in q.js: args replaced with []
Mutant 1727 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1728 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(args, name)
Mutant 1729 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat([name]))
Mutant 1730 in q.js: object replaced with null
Mutant 1731 in q.js: object replaced with undefined
Mutant 1732 in q.js: object replaced with "hello"
Mutant 1733 in q.js: name replaced with undefined
Mutant 1734 in q.js: name replaced with null
Mutant 1735 in q.js: name replaced with 42
Mutant 1736 in q.js: args replaced with 99
Mutant 1737 in q.js: args replaced with undefined
Mutant 1738 in q.js: array_slice replaced with null
Mutant 1739 in q.js: array_slice replaced with 123
Mutant 1740 in q.js: array_slice replaced with {}
Mutant 1741 in q.js: args || [] replaced with null
Mutant 1742 in q.js: args || [] replaced with undefined
Mutant 1743 in q.js: args || [] replaced with 0
Mutant 1744 in q.js: defer replaced with 42
Mutant 1745 in q.js: defer replaced with undefined
Mutant 1746 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1747 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1748 in q.js: nodeArgs.push replaced with nodeArgs = []
Mutant 1749 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1750 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1751 in q.js: deferred.makeNodeResolver() replaced with function () {
  return deferred.makeNodeResolver().resolve();
}
Mutant 1752 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1753 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("put", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("put", [name, nodeArgs])
Mutant 1754 in q.js: this.dispatch replaced with this.fail
Mutant 1755 in q.js: this.dispatch replaced with this.resolve
Mutant 1756 in q.js: this.dispatch replaced with this.reject
not replacing this.dispatch with this.fail
not replacing this.dispatch with this.fail
not replacing this.dispatch with this.resolve
not replacing this.dispatch with this.resolve
not replacing this.dispatch with this.reject
not replacing this.dispatch with this.reject
Mutant 1757 in q.js: "post" replaced with "get"
Mutant 1758 in q.js: "post" replaced with "undefined"
Mutant 1759 in q.js: "post" replaced with [name, nodeArgs]
Mutant 1760 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1761 in q.js: [name, nodeArgs] replaced with [!name, !nodeArgs]
Mutant 1762 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1763 in q.js: deferred.reject replaced with function (err) {
  console.log(err);
}
Mutant 1764 in q.js: deferred.reject replaced with function (err) {
  return err;
}
Mutant 1765 in q.js: deferred.reject replaced with console.log("Error:", err)
Mutant 1766 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1767 in q.js: array_slice(arguments, 2) replaced with array_slice(name, args)
Mutant 1768 in q.js: array_slice(arguments, 2) replaced with array_slice(nodeArgs, null, false)
Mutant 1769 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1770 in q.js: arguments replaced with arguments[0]
Mutant 1771 in q.js: arguments replaced with arguments.slice(1)
Mutant 1772 in q.js: 2 replaced with 1
Mutant 1773 in q.js: 2 replaced with 0
Mutant 1774 in q.js: 2 replaced with undefined
Mutant 1775 in q.js: defer replaced with deferred
Mutant 1776 in q.js: defer replaced with undefined
Mutant 1777 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1778 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1779 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1780 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1781 in q.js: deferred.makeNodeResolver() replaced with deferred.dfd
Mutant 1782 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1783 in q.js: deferred.makeNodeResolver replaced with Q.reject
Mutant 1784 in q.js: Q(object).dispatch("post", [name, nodeArgs]).fail replaced with deferred.resolve
Mutant 1785 in q.js: Q(object).dispatch("post", [name, nodeArgs]).fail replaced with nodeback
Mutant 1786 in q.js: Q(object).dispatch("post", [name, nodeArgs]).fail replaced with Promise.reject
Mutant 1787 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("put", [name, nodeArgs])
Mutant 1788 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("notDefinedMethod", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("put", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("notDefinedMethod", [name, nodeArgs])
Mutant 1789 in q.js: Q replaced with null
Mutant 1790 in q.js: Q replaced with undefined
Mutant 1791 in q.js: Q replaced with 0
Mutant 1792 in q.js: object replaced with this
Mutant 1793 in q.js: object replaced with 0
Mutant 1794 in q.js: object replaced with null
Mutant 1795 in q.js: "post" replaced with "send"
Mutant 1796 in q.js: "post" replaced with "foo"
Mutant 1797 in q.js: "post" replaced with null
Mutant 1798 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1799 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, 0]
Mutant 1800 in q.js: [name, nodeArgs] replaced with [null, name, nodeArgs]
Mutant 1801 in q.js: deferred.reject replaced with [PLACEHOLDER]
Mutant 1802 in q.js: deferred.reject replaced with !deferred.reject
Mutant 1803 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1804 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1805 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1806 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2, 1))
Mutant 1807 in q.js: arguments replaced with null
Mutant 1808 in q.js: arguments replaced with undefined
Mutant 1809 in q.js: arguments replaced with this
Mutant 1810 in q.js: 1 replaced with 0
Mutant 1811 in q.js: 1 replaced with name
Mutant 1812 in q.js: 1 replaced with undefined
Mutant 1813 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1814 in q.js: deferred.makeNodeResolver() replaced with 42
Mutant 1815 in q.js: deferred.makeNodeResolver() replaced with Q.defer()
Mutant 1816 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1817 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch(name, [])
Mutant 1818 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch(undefined, nodeArgs)
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch(name, [])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch(undefined, nodeArgs)
Mutant 1819 in q.js: this.dispatch replaced with null.dispatch
Mutant 1820 in q.js: this.dispatch replaced with this.dispatch2
not replacing this.dispatch with null.dispatch
not replacing this.dispatch with null.dispatch
not replacing this.dispatch with this.dispatch2
not replacing this.dispatch with this.dispatch2
Mutant 1821 in q.js: "post" replaced with "get"
Mutant 1822 in q.js: "post" replaced with "put"
Mutant 1823 in q.js: "post" replaced with "send"
Mutant 1824 in q.js: [name, nodeArgs] replaced with ["foo", nodeArgs]
Mutant 1825 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.concat("bar")]
Mutant 1826 in q.js: [name, nodeArgs] replaced with [name, [].concat(nodeArgs)]
Mutant 1827 in q.js: deferred.reject replaced with undefined
Mutant 1828 in q.js: deferred.reject replaced with null
Mutant 1829 in q.js: deferred.reject replaced with () => {}
Mutant 1830 in q.js: Q(object).nodeify replaced with object.nodeify
Mutant 1831 in q.js: Q replaced with undefined
Mutant 1832 in q.js: Q replaced with null
Mutant 1833 in q.js: Q replaced with "Q"
Mutant 1834 in q.js: object replaced with []
Mutant 1835 in q.js: object replaced with undefined
Mutant 1836 in q.js: object replaced with new Error('Test error')
Mutant 1837 in q.js: nodeback replaced with null
Mutant 1838 in q.js: nodeback replaced with 1 + nodeback
Mutant 1839 in q.js: nodeback replaced with nodeback.call(this)
Mutant 1840 in q.js: nodeback replaced with nodeback = null
Mutant 1841 in q.js: nodeback replaced with typeof nodeback === "object"
Mutant 1842 in q.js: nodeback replaced with nodeback.toString() === "null"
Mutant 1843 in q.js: nodeback(null, value) replaced with nodeback(undef, value)
Mutant 1844 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 1845 in q.js: nodeback(null, value) replaced with nodeback(value)
Mutant 1846 in q.js: null replaced with undefined
Mutant 1847 in q.js: null replaced with "Error"
Mutant 1848 in q.js: null replaced with function () {
  throw new Error("Test error");
}
Mutant 1849 in q.js: value replaced with undefined
Mutant 1850 in q.js: value replaced with null
Mutant 1851 in q.js: value replaced with new Error('error')
Mutant 1852 in q.js: error replaced with "test"
Mutant 1853 in q.js: error replaced with undefined
Mutant 1854 in q.js: captureLine replaced with captureLine + 1
Mutant 1855 in q.js: captureLine replaced with null
Mutant 1856 in q.js: captureLine replaced with "qEndingLine"
Mutant 1857 in queue.js: Q.defer replaced with Q.reject
Mutant 1858 in queue.js: Q.defer replaced with Q.resolve
Mutant 1859 in queue.js: ends.promise.get replaced with ends.reject
Mutant 1860 in queue.js: ends.promise.get replaced with ends.promise.then
Mutant 1861 in queue.js: ends.promise.get replaced with Q.resolve
Mutant 1862 in queue.js: "head" replaced with "tail"
Mutant 1863 in queue.js: "head" replaced with "head.tail"
Mutant 1864 in queue.js: "head" replaced with "head.△"
Mutant 1865 in queue.js: ends.promise.get replaced with ends.promise.resolve
Mutant 1866 in queue.js: ends.promise.get replaced with ends.promise.reject
Mutant 1867 in queue.js: "tail" replaced with "value"
Mutant 1868 in queue.js: "tail" replaced with "tale"
Mutant 1869 in queue.js: "tail" replaced with "head"
Mutant 1870 in queue.js: closed.resolve replaced with closed.reject
Mutant 1871 in queue.js: closed.resolve replaced with ends.resolve
Mutant 1872 in queue.js: error replaced with null
Mutant 1873 in queue.js: error replaced with undefined
Mutant 1874 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 1875 in queue.js: ends.resolve replaced with ends.reject
Mutant 1876 in queue.js: end replaced with end.tail
Mutant 1877 in queue.js: end replaced with ends.promise
Mutant 1878 in queue.js: end replaced with closed.promise
[32m10:24:29 (3119) INFO Instrumenter[39m Instrumented 2 source file(s) with 1879 mutant(s)
[32m10:24:29 (3119) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m10:24:31 (3119) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m10:24:31 (3119) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m10:24:38 (3119) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6839 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~5h 13m) 1/1879 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~5h 12m) 2/1879 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 54m) 4/1879 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~4h 9m) 5/1879 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 42m) 7/1879 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 53m) 8/1879 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 38m) 10/1879 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 46m) 11/1879 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 19m) 14/1879 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 52m) 18/1879 tested (14 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 59m) 19/1879 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 56m) 21/1879 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 2m) 22/1879 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 8m) 23/1879 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 5m) 25/1879 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 10m) 26/1879 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 7m) 28/1879 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 11m) 29/1879 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 8m) 31/1879 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 18m) 31/1879 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 22m) 32/1879 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 25m) 33/1879 tested (27 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 34m) 33/1879 tested (27 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 37m) 34/1879 tested (27 survived, 3 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 39m) 35/1879 tested (27 survived, 4 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 48m) 35/1879 tested (27 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 32m) 39/1879 tested (27 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 40m) 39/1879 tested (27 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 42m) 40/1879 tested (27 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 44m) 41/1879 tested (27 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 51m) 41/1879 tested (27 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 37m) 45/1879 tested (27 survived, 8 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 25m) 49/1879 tested (28 survived, 8 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 27m) 50/1879 tested (29 survived, 8 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 24m) 52/1879 tested (31 survived, 8 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 26m) 53/1879 tested (32 survived, 8 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 28m) 54/1879 tested (33 survived, 8 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 26m) 56/1879 tested (35 survived, 8 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 27m) 57/1879 tested (36 survived, 8 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 25m) 59/1879 tested (38 survived, 8 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 27m) 60/1879 tested (39 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 25m) 62/1879 tested (41 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 26m) 63/1879 tested (42 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 24m) 65/1879 tested (44 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 26m) 66/1879 tested (45 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 24m) 68/1879 tested (47 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 25m) 69/1879 tested (48 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 29m) 69/1879 tested (48 survived, 8 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 27m) 71/1879 tested (49 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 29m) 72/1879 tested (50 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 24m) 75/1879 tested (52 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 28m) 75/1879 tested (52 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 21m) 79/1879 tested (52 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 22m) 80/1879 tested (53 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 20m) 82/1879 tested (55 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 21m) 83/1879 tested (56 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 20m) 85/1879 tested (58 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 21m) 86/1879 tested (59 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 20m) 88/1879 tested (61 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 21m) 89/1879 tested (62 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 19m) 91/1879 tested (64 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 20m) 92/1879 tested (65 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 19m) 94/1879 tested (67 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 20m) 95/1879 tested (68 survived, 10 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 21m) 96/1879 tested (69 survived, 10 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 19m) 98/1879 tested (71 survived, 10 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 20m) 99/1879 tested (72 survived, 10 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 19m) 101/1879 tested (74 survived, 10 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 20m) 102/1879 tested (75 survived, 10 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 19m) 104/1879 tested (77 survived, 10 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 19m) 105/1879 tested (78 survived, 10 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 18m) 107/1879 tested (80 survived, 10 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 19m) 108/1879 tested (81 survived, 10 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 18m) 110/1879 tested (83 survived, 10 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 19m) 111/1879 tested (84 survived, 10 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~3h 17m) 113/1879 tested (86 survived, 10 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~3h 18m) 114/1879 tested (87 survived, 10 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 17m) 116/1879 tested (89 survived, 10 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 18m) 117/1879 tested (90 survived, 10 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 17m) 119/1879 tested (91 survived, 10 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 14m) 122/1879 tested (93 survived, 10 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 11m) 125/1879 tested (94 survived, 10 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 12m) 126/1879 tested (95 survived, 10 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 8m) 130/1879 tested (96 survived, 10 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 10m) 130/1879 tested (96 survived, 10 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 11m) 131/1879 tested (96 survived, 11 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 7m) 135/1879 tested (96 survived, 12 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 7m) 136/1879 tested (96 survived, 12 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 8m) 137/1879 tested (96 survived, 13 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 10m) 137/1879 tested (96 survived, 13 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 8m) 140/1879 tested (97 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 9m) 141/1879 tested (98 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 8m) 143/1879 tested (100 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 8m) 144/1879 tested (101 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 9m) 145/1879 tested (102 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 8m) 147/1879 tested (104 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 9m) 148/1879 tested (105 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 8m) 150/1879 tested (107 survived, 14 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 8m) 151/1879 tested (108 survived, 14 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 8m) 153/1879 tested (110 survived, 14 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 8m) 154/1879 tested (111 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 7m) 156/1879 tested (113 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 157/1879 tested (114 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 158/1879 tested (115 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 160/1879 tested (117 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 161/1879 tested (118 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 7m) 163/1879 tested (120 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 8m) 164/1879 tested (121 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 7m) 166/1879 tested (123 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 7m) 167/1879 tested (124 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 7m) 169/1879 tested (126 survived, 14 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 7m) 170/1879 tested (127 survived, 14 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 6m) 172/1879 tested (129 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 173/1879 tested (130 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 174/1879 tested (131 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 176/1879 tested (133 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 177/1879 tested (134 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 6m) 179/1879 tested (136 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 180/1879 tested (137 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 6m) 182/1879 tested (139 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 6m) 183/1879 tested (140 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 6m) 185/1879 tested (142 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 6m) 186/1879 tested (143 survived, 14 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~3h 5m) 188/1879 tested (145 survived, 14 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~3h 6m) 189/1879 tested (146 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 6m) 190/1879 tested (147 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 5m) 192/1879 tested (149 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 6m) 193/1879 tested (150 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 5m) 195/1879 tested (152 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 3m) 198/1879 tested (153 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 4m) 199/1879 tested (154 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 3m) 201/1879 tested (156 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 4m) 202/1879 tested (157 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 3m) 204/1879 tested (159 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 3m) 205/1879 tested (160 survived, 14 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~3h 3m) 207/1879 tested (162 survived, 14 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~3h 3m) 208/1879 tested (163 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 210/1879 tested (165 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 3m) 211/1879 tested (166 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 213/1879 tested (168 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 214/1879 tested (169 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 216/1879 tested (171 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 2m) 217/1879 tested (172 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 1m) 219/1879 tested (174 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 2m) 220/1879 tested (175 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 0m) 223/1879 tested (176 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 1m) 224/1879 tested (176 survived, 14 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~3h 0m) 226/1879 tested (176 survived, 14 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~3h 0m) 227/1879 tested (177 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 0m) 229/1879 tested (179 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 0m) 230/1879 tested (180 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 59m) 232/1879 tested (182 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 0m) 233/1879 tested (183 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 59m) 235/1879 tested (185 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 59m) 236/1879 tested (186 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~2h 59m) 238/1879 tested (188 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~2h 59m) 239/1879 tested (189 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~2h 59m) 240/1879 tested (190 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~2h 59m) 242/1879 tested (192 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~2h 59m) 243/1879 tested (193 survived, 14 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 58m) 245/1879 tested (195 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 246/1879 tested (196 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 58m) 248/1879 tested (198 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 58m) 249/1879 tested (199 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 58m) 251/1879 tested (201 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 58m) 252/1879 tested (202 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 58m) 254/1879 tested (204 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 58m) 255/1879 tested (205 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 57m) 257/1879 tested (207 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 58m) 258/1879 tested (208 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 57m) 260/1879 tested (210 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 57m) 261/1879 tested (211 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 57m) 262/1879 tested (212 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 57m) 264/1879 tested (214 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 57m) 265/1879 tested (215 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 57m) 267/1879 tested (217 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 57m) 268/1879 tested (218 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 56m) 270/1879 tested (220 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 57m) 271/1879 tested (221 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 56m) 273/1879 tested (223 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 56m) 274/1879 tested (224 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 56m) 276/1879 tested (226 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 56m) 277/1879 tested (227 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 55m) 279/1879 tested (229 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 56m) 280/1879 tested (230 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 55m) 282/1879 tested (232 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 55m) 283/1879 tested (233 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 55m) 284/1879 tested (234 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 55m) 286/1879 tested (236 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 55m) 287/1879 tested (237 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 55m) 289/1879 tested (239 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 55m) 290/1879 tested (240 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 54m) 292/1879 tested (242 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 55m) 293/1879 tested (243 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 54m) 295/1879 tested (245 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 54m) 296/1879 tested (246 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 54m) 298/1879 tested (248 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 54m) 299/1879 tested (249 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 53m) 301/1879 tested (251 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 54m) 302/1879 tested (252 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 53m) 304/1879 tested (254 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 53m) 305/1879 tested (255 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 53m) 306/1879 tested (256 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 308/1879 tested (258 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 309/1879 tested (259 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 311/1879 tested (261 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 312/1879 tested (262 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 52m) 314/1879 tested (264 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 52m) 315/1879 tested (265 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 51m) 318/1879 tested (267 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 51m) 319/1879 tested (268 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 52m) 320/1879 tested (269 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 51m) 322/1879 tested (271 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 51m) 324/1879 tested (272 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 50m) 326/1879 tested (274 survived, 14 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 50m) 327/1879 tested (275 survived, 14 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 50m) 329/1879 tested (277 survived, 14 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 50m) 330/1879 tested (278 survived, 14 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 50m) 332/1879 tested (280 survived, 14 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 50m) 333/1879 tested (281 survived, 14 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 50m) 334/1879 tested (282 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 49m) 336/1879 tested (284 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 50m) 337/1879 tested (285 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 49m) 339/1879 tested (287 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 49m) 340/1879 tested (288 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 49m) 342/1879 tested (290 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 49m) 343/1879 tested (291 survived, 14 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 48m) 345/1879 tested (293 survived, 14 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 49m) 346/1879 tested (294 survived, 14 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 48m) 348/1879 tested (296 survived, 14 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 48m) 349/1879 tested (297 survived, 14 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 48m) 351/1879 tested (299 survived, 14 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 48m) 352/1879 tested (300 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 48m) 354/1879 tested (301 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 46m) 357/1879 tested (302 survived, 14 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 46m) 359/1879 tested (302 survived, 14 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 47m) 359/1879 tested (302 survived, 14 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 47m) 360/1879 tested (302 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 47m) 361/1879 tested (302 survived, 16 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 48m) 361/1879 tested (302 survived, 16 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 48m) 362/1879 tested (302 survived, 17 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 48m) 363/1879 tested (302 survived, 18 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 47m) 366/1879 tested (303 survived, 18 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 47m) 367/1879 tested (304 survived, 18 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 44m) 373/1879 tested (305 survived, 18 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 45m) 373/1879 tested (305 survived, 18 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 43m) 378/1879 tested (305 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 43m) 379/1879 tested (305 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 44m) 379/1879 tested (305 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 42m) 383/1879 tested (305 survived, 20 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 42m) 385/1879 tested (307 survived, 20 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 42m) 386/1879 tested (308 survived, 20 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 42m) 387/1879 tested (309 survived, 20 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 41m) 390/1879 tested (311 survived, 20 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 41m) 391/1879 tested (312 survived, 20 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 41m) 392/1879 tested (313 survived, 20 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 41m) 393/1879 tested (313 survived, 21 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 42m) 393/1879 tested (313 survived, 21 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 40m) 398/1879 tested (313 survived, 22 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 40m) 399/1879 tested (314 survived, 22 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 40m) 401/1879 tested (316 survived, 22 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 40m) 402/1879 tested (316 survived, 22 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 40m) 403/1879 tested (316 survived, 23 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 41m) 403/1879 tested (316 survived, 23 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 40m) 405/1879 tested (317 survived, 24 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 40m) 406/1879 tested (318 survived, 24 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 40m) 408/1879 tested (320 survived, 24 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 40m) 409/1879 tested (321 survived, 24 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 40m) 411/1879 tested (323 survived, 24 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 40m) 412/1879 tested (324 survived, 24 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 40m) 413/1879 tested (325 survived, 24 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 39m) 415/1879 tested (327 survived, 24 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 40m) 416/1879 tested (328 survived, 24 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 39m) 418/1879 tested (330 survived, 24 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 39m) 419/1879 tested (331 survived, 24 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 39m) 421/1879 tested (333 survived, 24 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 39m) 422/1879 tested (334 survived, 24 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 38m) 424/1879 tested (336 survived, 24 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 39m) 425/1879 tested (337 survived, 24 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 38m) 427/1879 tested (339 survived, 24 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 38m) 428/1879 tested (340 survived, 24 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 38m) 430/1879 tested (342 survived, 24 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 38m) 431/1879 tested (343 survived, 24 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 38m) 433/1879 tested (345 survived, 24 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 38m) 434/1879 tested (346 survived, 24 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 37m) 436/1879 tested (348 survived, 24 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 37m) 437/1879 tested (349 survived, 24 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 37m) 438/1879 tested (350 survived, 24 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 37m) 440/1879 tested (352 survived, 24 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 37m) 442/1879 tested (353 survived, 24 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 37m) 442/1879 tested (353 survived, 24 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 34m) 450/1879 tested (353 survived, 25 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 34m) 452/1879 tested (354 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 453/1879 tested (355 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 33m) 455/1879 tested (357 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 33m) 456/1879 tested (358 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 33m) 458/1879 tested (360 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 33m) 459/1879 tested (361 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 33m) 461/1879 tested (363 survived, 25 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 33m) 461/1879 tested (363 survived, 25 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 33m) 462/1879 tested (363 survived, 26 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 33m) 463/1879 tested (363 survived, 27 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 34m) 464/1879 tested (363 survived, 27 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 34m) 465/1879 tested (363 survived, 27 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 33m) 467/1879 tested (363 survived, 28 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 34m) 467/1879 tested (363 survived, 28 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 34m) 468/1879 tested (363 survived, 28 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 34m) 469/1879 tested (363 survived, 28 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 33m) 471/1879 tested (364 survived, 28 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 34m) 472/1879 tested (365 survived, 28 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 34m) 473/1879 tested (366 survived, 28 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 475/1879 tested (368 survived, 28 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 476/1879 tested (369 survived, 28 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 478/1879 tested (371 survived, 28 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 479/1879 tested (372 survived, 28 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 481/1879 tested (374 survived, 28 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 33m) 482/1879 tested (375 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 32m) 484/1879 tested (377 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 32m) 485/1879 tested (378 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 32m) 487/1879 tested (380 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 32m) 488/1879 tested (381 survived, 28 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 32m) 490/1879 tested (383 survived, 28 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 32m) 491/1879 tested (384 survived, 28 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 493/1879 tested (386 survived, 28 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 494/1879 tested (387 survived, 28 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 496/1879 tested (389 survived, 28 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 497/1879 tested (390 survived, 28 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 499/1879 tested (392 survived, 28 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 31m) 500/1879 tested (393 survived, 28 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 31m) 501/1879 tested (394 survived, 28 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 30m) 503/1879 tested (396 survived, 28 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 30m) 504/1879 tested (397 survived, 28 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 30m) 506/1879 tested (399 survived, 28 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 30m) 507/1879 tested (400 survived, 28 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 30m) 509/1879 tested (402 survived, 28 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 30m) 510/1879 tested (403 survived, 28 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 29m) 512/1879 tested (405 survived, 28 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 30m) 513/1879 tested (406 survived, 28 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 29m) 515/1879 tested (408 survived, 28 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 29m) 516/1879 tested (409 survived, 28 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 29m) 518/1879 tested (411 survived, 28 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 29m) 519/1879 tested (412 survived, 28 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 29m) 521/1879 tested (414 survived, 28 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 29m) 522/1879 tested (415 survived, 28 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 28m) 524/1879 tested (417 survived, 28 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 28m) 525/1879 tested (418 survived, 28 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 28m) 526/1879 tested (419 survived, 28 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 28m) 528/1879 tested (421 survived, 28 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 28m) 529/1879 tested (422 survived, 28 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 28m) 531/1879 tested (424 survived, 28 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 28m) 532/1879 tested (425 survived, 28 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 27m) 534/1879 tested (427 survived, 28 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 27m) 535/1879 tested (428 survived, 28 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 537/1879 tested (430 survived, 28 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 538/1879 tested (431 survived, 28 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 540/1879 tested (433 survived, 28 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 27m) 541/1879 tested (434 survived, 28 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 26m) 543/1879 tested (436 survived, 28 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 26m) 544/1879 tested (437 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 546/1879 tested (439 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 547/1879 tested (440 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 549/1879 tested (442 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 550/1879 tested (443 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 26m) 551/1879 tested (444 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 25m) 553/1879 tested (446 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 25m) 554/1879 tested (447 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 25m) 556/1879 tested (449 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 25m) 557/1879 tested (450 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 25m) 559/1879 tested (452 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 25m) 560/1879 tested (453 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 24m) 563/1879 tested (454 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 24m) 564/1879 tested (454 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 24m) 564/1879 tested (454 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 24m) 565/1879 tested (454 survived, 30 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 24m) 566/1879 tested (454 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 25m) 566/1879 tested (454 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 25m) 567/1879 tested (454 survived, 32 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 25m) 568/1879 tested (454 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 25m) 568/1879 tested (454 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 25m) 569/1879 tested (454 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 26m) 569/1879 tested (454 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 26m) 570/1879 tested (454 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 26m) 571/1879 tested (454 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 25m) 573/1879 tested (456 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 25m) 574/1879 tested (457 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 574/1879 tested (457 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 575/1879 tested (457 survived, 37 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 576/1879 tested (457 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 26m) 576/1879 tested (457 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 26m) 578/1879 tested (458 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 26m) 579/1879 tested (459 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 25m) 581/1879 tested (461 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 25m) 582/1879 tested (462 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 25m) 584/1879 tested (464 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 25m) 585/1879 tested (465 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 25m) 587/1879 tested (467 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 25m) 588/1879 tested (468 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 24m) 590/1879 tested (469 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 25m) 590/1879 tested (469 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 25m) 591/1879 tested (469 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 24m) 593/1879 tested (469 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 25m) 593/1879 tested (469 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 25m) 594/1879 tested (469 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 25m) 595/1879 tested (469 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 24m) 597/1879 tested (470 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 24m) 599/1879 tested (472 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 24m) 600/1879 tested (473 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 24m) 600/1879 tested (473 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 24m) 601/1879 tested (473 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 24m) 602/1879 tested (473 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 25m) 602/1879 tested (473 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 25m) 603/1879 tested (473 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 24m) 605/1879 tested (473 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 605/1879 tested (473 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 606/1879 tested (473 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 607/1879 tested (473 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 608/1879 tested (473 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 609/1879 tested (473 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 609/1879 tested (473 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 610/1879 tested (473 survived, 48 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 611/1879 tested (473 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 612/1879 tested (473 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 614/1879 tested (475 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 615/1879 tested (476 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 615/1879 tested (476 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 616/1879 tested (476 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 617/1879 tested (476 survived, 51 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 618/1879 tested (477 survived, 51 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 619/1879 tested (477 survived, 52 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 619/1879 tested (477 survived, 52 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 620/1879 tested (477 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 621/1879 tested (477 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 621/1879 tested (477 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 622/1879 tested (477 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 622/1879 tested (477 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 623/1879 tested (477 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 624/1879 tested (477 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 625/1879 tested (477 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 625/1879 tested (477 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 626/1879 tested (477 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 627/1879 tested (477 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 628/1879 tested (477 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 629/1879 tested (477 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 630/1879 tested (477 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 632/1879 tested (479 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 632/1879 tested (479 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 633/1879 tested (479 survived, 58 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 634/1879 tested (479 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 635/1879 tested (480 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 635/1879 tested (480 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 637/1879 tested (480 survived, 60 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 638/1879 tested (480 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 638/1879 tested (480 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 639/1879 tested (480 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 640/1879 tested (480 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 640/1879 tested (480 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 641/1879 tested (480 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 642/1879 tested (480 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 642/1879 tested (480 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 643/1879 tested (480 survived, 66 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 644/1879 tested (480 survived, 67 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 644/1879 tested (480 survived, 67 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 645/1879 tested (480 survived, 68 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 646/1879 tested (480 survived, 69 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 646/1879 tested (480 survived, 69 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 647/1879 tested (480 survived, 70 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 28m) 647/1879 tested (480 survived, 70 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 648/1879 tested (480 survived, 71 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 649/1879 tested (480 survived, 72 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 649/1879 tested (480 survived, 72 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 650/1879 tested (480 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 651/1879 tested (480 survived, 74 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 651/1879 tested (480 survived, 74 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 652/1879 tested (480 survived, 75 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 653/1879 tested (480 survived, 76 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 653/1879 tested (480 survived, 76 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 654/1879 tested (480 survived, 77 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 655/1879 tested (480 survived, 78 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 29m) 655/1879 tested (480 survived, 78 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 28m) 657/1879 tested (481 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 28m) 658/1879 tested (482 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 28m) 660/1879 tested (484 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 28m) 661/1879 tested (485 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 28m) 662/1879 tested (486 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 27m) 664/1879 tested (488 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 665/1879 tested (489 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 667/1879 tested (491 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 668/1879 tested (492 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 670/1879 tested (494 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 671/1879 tested (495 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 26m) 673/1879 tested (497 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 26m) 674/1879 tested (498 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 26m) 676/1879 tested (500 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 26m) 677/1879 tested (501 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 25m) 679/1879 tested (503 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 25m) 680/1879 tested (504 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 25m) 682/1879 tested (506 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 25m) 683/1879 tested (507 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 24m) 685/1879 tested (509 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 24m) 686/1879 tested (510 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 24m) 687/1879 tested (511 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 24m) 689/1879 tested (513 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 24m) 690/1879 tested (514 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 24m) 692/1879 tested (516 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 24m) 693/1879 tested (517 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 23m) 695/1879 tested (519 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 23m) 696/1879 tested (520 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 23m) 698/1879 tested (522 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 23m) 699/1879 tested (523 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 22m) 701/1879 tested (525 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 22m) 702/1879 tested (526 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 22m) 704/1879 tested (528 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 22m) 705/1879 tested (529 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 22m) 707/1879 tested (531 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 25m, remaining: ~2h 21m) 708/1879 tested (532 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 21m) 710/1879 tested (534 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 21m) 711/1879 tested (535 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 21m) 713/1879 tested (537 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 21m) 714/1879 tested (538 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 19m) 721/1879 tested (539 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 19m) 722/1879 tested (540 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 19m) 723/1879 tested (541 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 18m) 725/1879 tested (543 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 18m) 726/1879 tested (544 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 18m) 728/1879 tested (546 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 18m) 729/1879 tested (547 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 17m) 731/1879 tested (549 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 17m) 732/1879 tested (550 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 17m) 734/1879 tested (552 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 17m) 735/1879 tested (553 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 17m) 737/1879 tested (555 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 17m) 738/1879 tested (556 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 16m) 740/1879 tested (558 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 16m) 741/1879 tested (559 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 16m) 743/1879 tested (561 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 16m) 744/1879 tested (562 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 15m) 746/1879 tested (563 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 14m) 750/1879 tested (565 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 14m) 751/1879 tested (566 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 14m) 752/1879 tested (567 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 14m) 754/1879 tested (569 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 14m) 755/1879 tested (570 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 14m) 757/1879 tested (572 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 13m) 759/1879 tested (573 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 13m) 760/1879 tested (574 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 13m) 762/1879 tested (576 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 13m) 763/1879 tested (577 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 13m) 765/1879 tested (579 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 12m) 766/1879 tested (580 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 12m) 768/1879 tested (582 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 31m, remaining: ~2h 12m) 769/1879 tested (583 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 12m) 771/1879 tested (585 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 12m) 772/1879 tested (586 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 12m) 773/1879 tested (586 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 11m) 775/1879 tested (588 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 11m) 776/1879 tested (588 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 11m) 778/1879 tested (589 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 11m) 779/1879 tested (589 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 781/1879 tested (590 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 782/1879 tested (591 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 783/1879 tested (592 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 784/1879 tested (593 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 33m, remaining: ~2h 10m) 785/1879 tested (593 survived, 80 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 11m) 785/1879 tested (593 survived, 80 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 10m) 787/1879 tested (594 survived, 81 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 10m) 788/1879 tested (595 survived, 81 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 10m) 789/1879 tested (595 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 10m) 790/1879 tested (596 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 10m) 791/1879 tested (597 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 10m) 793/1879 tested (599 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 10m) 794/1879 tested (600 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 9m) 797/1879 tested (602 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 9m) 798/1879 tested (603 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 9m) 800/1879 tested (605 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 8m) 801/1879 tested (606 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 8m) 803/1879 tested (608 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 8m) 804/1879 tested (609 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 8m) 806/1879 tested (611 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 8m) 807/1879 tested (612 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 8m) 808/1879 tested (613 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 7m) 810/1879 tested (615 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 7m) 811/1879 tested (616 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 7m) 813/1879 tested (618 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 7m) 814/1879 tested (619 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 7m) 816/1879 tested (621 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 6m) 817/1879 tested (622 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 6m) 819/1879 tested (624 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 6m) 820/1879 tested (625 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 6m) 822/1879 tested (627 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 6m) 823/1879 tested (628 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 6m) 824/1879 tested (629 survived, 82 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 6m) 825/1879 tested (629 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 5m) 826/1879 tested (630 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 5m) 828/1879 tested (632 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 5m) 829/1879 tested (633 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 5m) 831/1879 tested (635 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 5m) 832/1879 tested (636 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 4m) 834/1879 tested (638 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 5m) 834/1879 tested (638 survived, 83 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 5m) 835/1879 tested (638 survived, 84 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 4m) 837/1879 tested (640 survived, 84 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 4m) 838/1879 tested (641 survived, 84 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 4m) 839/1879 tested (642 survived, 84 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 4m) 840/1879 tested (642 survived, 85 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 4m) 840/1879 tested (642 survived, 85 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 4m) 841/1879 tested (642 survived, 86 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 4m) 842/1879 tested (642 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 4m) 842/1879 tested (642 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 4m) 843/1879 tested (642 survived, 88 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 4m) 844/1879 tested (642 survived, 89 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 4m) 844/1879 tested (642 survived, 89 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 4m) 846/1879 tested (643 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 4m) 848/1879 tested (644 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 4m) 849/1879 tested (645 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 3m) 851/1879 tested (647 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 3m) 852/1879 tested (648 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~2h 3m) 854/1879 tested (650 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 3m) 855/1879 tested (651 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 3m) 857/1879 tested (653 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 2m) 858/1879 tested (654 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 2m) 860/1879 tested (656 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 2m) 861/1879 tested (657 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 2m) 863/1879 tested (659 survived, 90 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 2m) 864/1879 tested (660 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 1m) 866/1879 tested (662 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 1m) 867/1879 tested (663 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 1m) 868/1879 tested (664 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 1m) 870/1879 tested (666 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~2h 1m) 871/1879 tested (667 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~2h 0m) 873/1879 tested (669 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~2h 0m) 874/1879 tested (670 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~2h 0m) 876/1879 tested (672 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~2h 0m) 877/1879 tested (673 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~2h 0m) 879/1879 tested (675 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~2h 0m) 880/1879 tested (676 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~1h 59m) 882/1879 tested (678 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~1h 59m) 883/1879 tested (679 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 59m) 884/1879 tested (679 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 59m) 886/1879 tested (679 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 59m) 887/1879 tested (679 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 59m) 888/1879 tested (679 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 58m) 890/1879 tested (679 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 58m) 891/1879 tested (679 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 58m) 893/1879 tested (680 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 58m) 894/1879 tested (681 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 58m) 896/1879 tested (683 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~1h 58m) 897/1879 tested (684 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~1h 57m) 899/1879 tested (686 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~1h 57m) 900/1879 tested (687 survived, 90 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~1h 57m) 901/1879 tested (688 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 57m) 903/1879 tested (690 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 57m) 904/1879 tested (691 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 56m) 906/1879 tested (693 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 56m) 907/1879 tested (694 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 56m) 909/1879 tested (696 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 56m) 910/1879 tested (697 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 56m) 912/1879 tested (699 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 56m) 913/1879 tested (700 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 49m, remaining: ~1h 55m) 915/1879 tested (702 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 50m, remaining: ~1h 55m) 916/1879 tested (703 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 50m, remaining: ~1h 55m) 918/1879 tested (705 survived, 90 timed out)
Mutation testing 48% (elapsed: ~1h 50m, remaining: ~1h 55m) 919/1879 tested (706 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 54m) 921/1879 tested (708 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 54m) 922/1879 tested (709 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 54m) 924/1879 tested (711 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 54m) 925/1879 tested (712 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 54m) 926/1879 tested (713 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 54m) 928/1879 tested (715 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 54m) 929/1879 tested (716 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 53m) 931/1879 tested (718 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 53m) 932/1879 tested (719 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 52m, remaining: ~1h 53m) 934/1879 tested (721 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 52m, remaining: ~1h 53m) 935/1879 tested (722 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 52m, remaining: ~1h 52m) 937/1879 tested (724 survived, 90 timed out)
Mutation testing 49% (elapsed: ~1h 52m, remaining: ~1h 52m) 938/1879 tested (725 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 52m) 940/1879 tested (727 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 52m) 941/1879 tested (728 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 52m) 943/1879 tested (730 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 52m) 944/1879 tested (731 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 51m) 946/1879 tested (733 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 51m) 947/1879 tested (734 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 51m) 948/1879 tested (735 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 51m) 950/1879 tested (737 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 54m, remaining: ~1h 51m) 951/1879 tested (738 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 54m, remaining: ~1h 50m) 953/1879 tested (740 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 54m, remaining: ~1h 50m) 954/1879 tested (741 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 54m, remaining: ~1h 50m) 956/1879 tested (743 survived, 90 timed out)
Mutation testing 50% (elapsed: ~1h 54m, remaining: ~1h 50m) 957/1879 tested (744 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 50m) 959/1879 tested (746 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 50m) 960/1879 tested (747 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 49m) 962/1879 tested (749 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 49m) 963/1879 tested (750 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 49m) 965/1879 tested (752 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 49m) 966/1879 tested (753 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 49m) 968/1879 tested (755 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 48m) 969/1879 tested (756 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 48m) 971/1879 tested (758 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 48m) 972/1879 tested (759 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 48m) 973/1879 tested (760 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 48m) 975/1879 tested (762 survived, 90 timed out)
Mutation testing 51% (elapsed: ~1h 56m, remaining: ~1h 48m) 976/1879 tested (763 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 47m) 978/1879 tested (765 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 47m) 979/1879 tested (766 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 47m) 981/1879 tested (768 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 47m) 982/1879 tested (769 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 47m) 984/1879 tested (771 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 46m) 985/1879 tested (772 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 46m) 987/1879 tested (774 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 46m) 988/1879 tested (775 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 46m) 990/1879 tested (777 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 46m) 991/1879 tested (778 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 45m) 993/1879 tested (780 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 58m, remaining: ~1h 45m) 994/1879 tested (781 survived, 90 timed out)
Mutation testing 52% (elapsed: ~1h 59m, remaining: ~1h 45m) 995/1879 tested (782 survived, 90 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 45m) 997/1879 tested (784 survived, 90 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 45m) 998/1879 tested (785 survived, 90 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 45m) 1000/1879 tested (787 survived, 90 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 44m) 1001/1879 tested (788 survived, 90 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 44m) 1003/1879 tested (790 survived, 90 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 44m) 1004/1879 tested (791 survived, 90 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 44m) 1006/1879 tested (793 survived, 90 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 44m) 1007/1879 tested (794 survived, 90 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 43m) 1009/1879 tested (796 survived, 90 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 43m) 1010/1879 tested (797 survived, 90 timed out)
Mutation testing 53% (elapsed: ~2h 0m, remaining: ~1h 43m) 1012/1879 tested (799 survived, 90 timed out)
Mutation testing 53% (elapsed: ~2h 1m, remaining: ~1h 43m) 1013/1879 tested (800 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 43m) 1015/1879 tested (802 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 43m) 1016/1879 tested (803 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 42m) 1018/1879 tested (805 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 42m) 1019/1879 tested (806 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 42m) 1021/1879 tested (808 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 42m) 1022/1879 tested (809 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 42m) 1023/1879 tested (810 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 41m) 1025/1879 tested (812 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 41m) 1026/1879 tested (813 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 41m) 1028/1879 tested (815 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 2m, remaining: ~1h 41m) 1029/1879 tested (816 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 3m, remaining: ~1h 41m) 1031/1879 tested (818 survived, 90 timed out)
Mutation testing 54% (elapsed: ~2h 3m, remaining: ~1h 41m) 1032/1879 tested (819 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 40m) 1034/1879 tested (821 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 40m) 1035/1879 tested (822 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 40m) 1037/1879 tested (824 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 40m) 1038/1879 tested (825 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 40m) 1040/1879 tested (827 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1041/1879 tested (828 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1043/1879 tested (830 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1044/1879 tested (831 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1046/1879 tested (833 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 4m, remaining: ~1h 39m) 1047/1879 tested (834 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 5m, remaining: ~1h 39m) 1048/1879 tested (835 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 5m, remaining: ~1h 38m) 1050/1879 tested (837 survived, 90 timed out)
Mutation testing 55% (elapsed: ~2h 5m, remaining: ~1h 38m) 1051/1879 tested (838 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 38m) 1053/1879 tested (840 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 38m) 1054/1879 tested (841 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 38m) 1056/1879 tested (843 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1057/1879 tested (844 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1059/1879 tested (846 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1060/1879 tested (847 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1062/1879 tested (849 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 37m) 1063/1879 tested (850 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 6m, remaining: ~1h 36m) 1065/1879 tested (852 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 7m, remaining: ~1h 36m) 1066/1879 tested (853 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 7m, remaining: ~1h 36m) 1068/1879 tested (855 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 7m, remaining: ~1h 36m) 1069/1879 tested (856 survived, 90 timed out)
Mutation testing 56% (elapsed: ~2h 7m, remaining: ~1h 36m) 1071/1879 tested (858 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 36m) 1072/1879 tested (859 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 35m) 1074/1879 tested (861 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1075/1879 tested (862 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1076/1879 tested (863 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1078/1879 tested (865 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 35m) 1079/1879 tested (866 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 34m) 1081/1879 tested (868 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 8m, remaining: ~1h 34m) 1082/1879 tested (869 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 9m, remaining: ~1h 34m) 1084/1879 tested (871 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 9m, remaining: ~1h 34m) 1085/1879 tested (872 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 9m, remaining: ~1h 34m) 1087/1879 tested (874 survived, 90 timed out)
Mutation testing 57% (elapsed: ~2h 9m, remaining: ~1h 34m) 1088/1879 tested (875 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 33m) 1090/1879 tested (877 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 33m) 1091/1879 tested (878 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 33m) 1093/1879 tested (880 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 33m) 1094/1879 tested (881 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 33m) 1096/1879 tested (883 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 33m) 1097/1879 tested (884 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 32m) 1099/1879 tested (886 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 32m) 1100/1879 tested (887 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 32m) 1102/1879 tested (889 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 32m) 1103/1879 tested (890 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 32m) 1104/1879 tested (891 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 31m) 1106/1879 tested (893 survived, 90 timed out)
Mutation testing 58% (elapsed: ~2h 11m, remaining: ~1h 31m) 1107/1879 tested (894 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 31m) 1109/1879 tested (896 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 31m) 1110/1879 tested (897 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 31m) 1112/1879 tested (899 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 31m) 1113/1879 tested (900 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 30m) 1115/1879 tested (902 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 30m) 1116/1879 tested (903 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 30m) 1118/1879 tested (905 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 30m) 1119/1879 tested (906 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 30m) 1121/1879 tested (908 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 29m) 1122/1879 tested (909 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 29m) 1124/1879 tested (911 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 29m) 1125/1879 tested (912 survived, 90 timed out)
Mutation testing 59% (elapsed: ~2h 13m, remaining: ~1h 29m) 1127/1879 tested (914 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 29m) 1128/1879 tested (915 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 28m) 1130/1879 tested (917 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 28m) 1131/1879 tested (918 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 28m) 1132/1879 tested (919 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 28m) 1134/1879 tested (921 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 28m) 1135/1879 tested (922 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 28m) 1137/1879 tested (924 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 28m) 1138/1879 tested (925 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 27m) 1140/1879 tested (927 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 27m) 1141/1879 tested (928 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 27m) 1143/1879 tested (930 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 15m, remaining: ~1h 27m) 1144/1879 tested (931 survived, 90 timed out)
Mutation testing 60% (elapsed: ~2h 16m, remaining: ~1h 26m) 1146/1879 tested (933 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 26m) 1147/1879 tested (934 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 26m) 1149/1879 tested (936 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 26m) 1150/1879 tested (937 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 26m) 1152/1879 tested (939 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 26m) 1153/1879 tested (940 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 25m) 1155/1879 tested (942 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 25m) 1156/1879 tested (943 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 25m) 1158/1879 tested (945 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 25m) 1159/1879 tested (946 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 25m) 1160/1879 tested (947 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 17m, remaining: ~1h 25m) 1162/1879 tested (949 survived, 90 timed out)
Mutation testing 61% (elapsed: ~2h 18m, remaining: ~1h 24m) 1163/1879 tested (950 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 24m) 1165/1879 tested (952 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 24m) 1166/1879 tested (953 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 24m) 1168/1879 tested (955 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 24m) 1169/1879 tested (956 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 23m) 1171/1879 tested (958 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 23m) 1172/1879 tested (959 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 23m) 1174/1879 tested (961 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 23m) 1175/1879 tested (962 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 23m) 1177/1879 tested (964 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 23m) 1178/1879 tested (965 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 19m, remaining: ~1h 22m) 1180/1879 tested (967 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 20m, remaining: ~1h 22m) 1181/1879 tested (968 survived, 90 timed out)
Mutation testing 62% (elapsed: ~2h 20m, remaining: ~1h 22m) 1183/1879 tested (970 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 22m) 1184/1879 tested (971 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 22m) 1186/1879 tested (973 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 22m) 1187/1879 tested (974 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 21m) 1188/1879 tested (975 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 21m) 1190/1879 tested (977 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 21m) 1191/1879 tested (978 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 21m) 1193/1879 tested (980 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 21m) 1194/1879 tested (981 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 20m) 1196/1879 tested (983 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 21m, remaining: ~1h 20m) 1197/1879 tested (984 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 22m, remaining: ~1h 20m) 1199/1879 tested (986 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 22m, remaining: ~1h 20m) 1200/1879 tested (987 survived, 90 timed out)
Mutation testing 63% (elapsed: ~2h 22m, remaining: ~1h 20m) 1202/1879 tested (989 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 20m) 1203/1879 tested (990 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 19m) 1205/1879 tested (992 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 19m) 1206/1879 tested (993 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 19m) 1208/1879 tested (995 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 19m) 1209/1879 tested (996 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 19m) 1211/1879 tested (998 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 18m) 1212/1879 tested (999 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 18m) 1214/1879 tested (1001 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 23m, remaining: ~1h 18m) 1215/1879 tested (1002 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 18m) 1216/1879 tested (1003 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 18m) 1218/1879 tested (1005 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 18m) 1219/1879 tested (1006 survived, 90 timed out)
Mutation testing 64% (elapsed: ~2h 24m, remaining: ~1h 17m) 1221/1879 tested (1008 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 17m) 1222/1879 tested (1009 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 17m) 1224/1879 tested (1011 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 17m) 1225/1879 tested (1012 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 17m) 1227/1879 tested (1014 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 17m) 1228/1879 tested (1015 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 16m) 1230/1879 tested (1017 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 16m) 1231/1879 tested (1018 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 25m, remaining: ~1h 16m) 1233/1879 tested (1020 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 16m) 1234/1879 tested (1021 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 16m) 1236/1879 tested (1023 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 15m) 1237/1879 tested (1024 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 15m) 1239/1879 tested (1026 survived, 90 timed out)
Mutation testing 65% (elapsed: ~2h 26m, remaining: ~1h 15m) 1240/1879 tested (1027 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 15m) 1241/1879 tested (1028 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 15m) 1243/1879 tested (1030 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 15m) 1244/1879 tested (1031 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 14m) 1246/1879 tested (1033 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 14m) 1247/1879 tested (1034 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 14m) 1249/1879 tested (1036 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 27m, remaining: ~1h 14m) 1250/1879 tested (1037 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 14m) 1252/1879 tested (1039 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 14m) 1253/1879 tested (1040 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 13m) 1255/1879 tested (1042 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 13m) 1256/1879 tested (1043 survived, 90 timed out)
Mutation testing 66% (elapsed: ~2h 28m, remaining: ~1h 13m) 1258/1879 tested (1045 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 13m) 1259/1879 tested (1046 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 13m) 1261/1879 tested (1048 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 12m) 1262/1879 tested (1049 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 12m) 1264/1879 tested (1051 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 12m) 1265/1879 tested (1052 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 12m) 1266/1879 tested (1053 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 12m) 1268/1879 tested (1055 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 12m) 1269/1879 tested (1056 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 11m) 1271/1879 tested (1058 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 11m) 1272/1879 tested (1059 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 11m) 1274/1879 tested (1061 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 11m) 1275/1879 tested (1062 survived, 90 timed out)
Mutation testing 67% (elapsed: ~2h 30m, remaining: ~1h 11m) 1277/1879 tested (1064 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 11m) 1278/1879 tested (1065 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 10m) 1280/1879 tested (1067 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 10m) 1281/1879 tested (1068 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 10m) 1283/1879 tested (1070 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 10m) 1284/1879 tested (1071 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 10m) 1286/1879 tested (1073 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 9m) 1287/1879 tested (1074 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 9m) 1289/1879 tested (1076 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 9m) 1290/1879 tested (1077 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 9m) 1292/1879 tested (1079 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 9m) 1293/1879 tested (1080 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 32m, remaining: ~1h 9m) 1294/1879 tested (1081 survived, 90 timed out)
Mutation testing 68% (elapsed: ~2h 33m, remaining: ~1h 8m) 1296/1879 tested (1083 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 8m) 1297/1879 tested (1084 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 8m) 1299/1879 tested (1086 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 8m) 1300/1879 tested (1087 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 8m) 1302/1879 tested (1089 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 8m) 1303/1879 tested (1090 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 7m) 1305/1879 tested (1092 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 7m) 1306/1879 tested (1093 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 7m) 1308/1879 tested (1095 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 7m) 1309/1879 tested (1096 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 7m) 1311/1879 tested (1098 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 34m, remaining: ~1h 6m) 1312/1879 tested (1099 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 35m, remaining: ~1h 6m) 1314/1879 tested (1101 survived, 90 timed out)
Mutation testing 69% (elapsed: ~2h 35m, remaining: ~1h 6m) 1315/1879 tested (1102 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 6m) 1317/1879 tested (1104 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 6m) 1318/1879 tested (1105 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 5m) 1320/1879 tested (1107 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 5m) 1321/1879 tested (1108 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 5m) 1322/1879 tested (1109 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 5m) 1324/1879 tested (1111 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 5m) 1325/1879 tested (1112 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 5m) 1327/1879 tested (1114 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 5m) 1328/1879 tested (1115 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 36m, remaining: ~1h 4m) 1330/1879 tested (1117 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 37m, remaining: ~1h 4m) 1331/1879 tested (1118 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 37m, remaining: ~1h 4m) 1333/1879 tested (1120 survived, 90 timed out)
Mutation testing 70% (elapsed: ~2h 37m, remaining: ~1h 4m) 1334/1879 tested (1121 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 4m) 1336/1879 tested (1123 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 3m) 1337/1879 tested (1124 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 3m) 1339/1879 tested (1126 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 3m) 1340/1879 tested (1127 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 3m) 1342/1879 tested (1129 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 3m) 1343/1879 tested (1130 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 2m) 1345/1879 tested (1132 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 2m) 1346/1879 tested (1133 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 38m, remaining: ~1h 2m) 1347/1879 tested (1134 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 39m, remaining: ~1h 2m) 1349/1879 tested (1136 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 39m, remaining: ~1h 2m) 1350/1879 tested (1137 survived, 90 timed out)
Mutation testing 71% (elapsed: ~2h 39m, remaining: ~1h 2m) 1352/1879 tested (1139 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~1h 2m) 1353/1879 tested (1140 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~1h 1m) 1355/1879 tested (1142 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~1h 1m) 1356/1879 tested (1143 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~1h 1m) 1358/1879 tested (1145 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~1h 1m) 1359/1879 tested (1146 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~1h 1m) 1361/1879 tested (1148 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~1h 0m) 1362/1879 tested (1149 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~1h 0m) 1364/1879 tested (1151 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 40m, remaining: ~1h 0m) 1365/1879 tested (1152 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 41m, remaining: ~1h 0m) 1367/1879 tested (1154 survived, 90 timed out)
Mutation testing 72% (elapsed: ~2h 41m, remaining: ~59m) 1371/1879 tested (1154 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~59m) 1373/1879 tested (1156 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~59m) 1374/1879 tested (1157 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~59m) 1376/1879 tested (1159 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~58m) 1377/1879 tested (1160 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~58m) 1379/1879 tested (1162 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~58m) 1380/1879 tested (1163 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~58m) 1382/1879 tested (1165 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~58m) 1383/1879 tested (1166 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~58m) 1385/1879 tested (1168 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 42m, remaining: ~57m) 1386/1879 tested (1169 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 43m, remaining: ~57m) 1388/1879 tested (1171 survived, 90 timed out)
Mutation testing 73% (elapsed: ~2h 43m, remaining: ~57m) 1389/1879 tested (1172 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~57m) 1391/1879 tested (1174 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~57m) 1392/1879 tested (1175 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~56m) 1394/1879 tested (1177 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~56m) 1395/1879 tested (1178 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~56m) 1397/1879 tested (1180 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~56m) 1398/1879 tested (1181 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~56m) 1399/1879 tested (1182 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~56m) 1401/1879 tested (1184 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~56m) 1402/1879 tested (1185 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 44m, remaining: ~55m) 1404/1879 tested (1187 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 45m, remaining: ~55m) 1405/1879 tested (1188 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 45m, remaining: ~55m) 1407/1879 tested (1190 survived, 90 timed out)
Mutation testing 74% (elapsed: ~2h 45m, remaining: ~55m) 1408/1879 tested (1191 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~55m) 1410/1879 tested (1193 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~54m) 1411/1879 tested (1194 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~54m) 1413/1879 tested (1196 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~54m) 1414/1879 tested (1197 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~54m) 1416/1879 tested (1199 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~54m) 1417/1879 tested (1200 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~53m) 1419/1879 tested (1202 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~53m) 1420/1879 tested (1203 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 46m, remaining: ~53m) 1422/1879 tested (1205 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~53m) 1423/1879 tested (1206 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~53m) 1425/1879 tested (1208 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~53m) 1426/1879 tested (1209 survived, 90 timed out)
Mutation testing 75% (elapsed: ~2h 47m, remaining: ~53m) 1427/1879 tested (1210 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~52m) 1429/1879 tested (1212 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~52m) 1430/1879 tested (1213 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~52m) 1432/1879 tested (1215 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~52m) 1433/1879 tested (1216 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~52m) 1435/1879 tested (1218 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~51m) 1436/1879 tested (1219 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~51m) 1438/1879 tested (1221 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~51m) 1439/1879 tested (1222 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~51m) 1441/1879 tested (1224 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~51m) 1442/1879 tested (1225 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~51m) 1444/1879 tested (1227 survived, 90 timed out)
Mutation testing 76% (elapsed: ~2h 49m, remaining: ~50m) 1445/1879 tested (1228 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~50m) 1447/1879 tested (1230 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~50m) 1448/1879 tested (1231 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~50m) 1450/1879 tested (1233 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~50m) 1451/1879 tested (1234 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~49m) 1453/1879 tested (1236 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~49m) 1454/1879 tested (1237 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~49m) 1455/1879 tested (1238 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~49m) 1457/1879 tested (1240 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~49m) 1458/1879 tested (1241 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~49m) 1460/1879 tested (1243 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~49m) 1461/1879 tested (1244 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~48m) 1463/1879 tested (1246 survived, 90 timed out)
Mutation testing 77% (elapsed: ~2h 51m, remaining: ~48m) 1464/1879 tested (1247 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~48m) 1466/1879 tested (1249 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~48m) 1467/1879 tested (1250 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~48m) 1469/1879 tested (1252 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~47m) 1470/1879 tested (1253 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~47m) 1472/1879 tested (1255 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~47m) 1473/1879 tested (1256 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~47m) 1475/1879 tested (1258 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~47m) 1476/1879 tested (1259 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~46m) 1478/1879 tested (1261 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~46m) 1479/1879 tested (1262 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~46m) 1480/1879 tested (1263 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~46m) 1482/1879 tested (1265 survived, 90 timed out)
Mutation testing 78% (elapsed: ~2h 53m, remaining: ~46m) 1483/1879 tested (1266 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~46m) 1485/1879 tested (1268 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~46m) 1486/1879 tested (1269 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~45m) 1488/1879 tested (1271 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~45m) 1489/1879 tested (1272 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~45m) 1491/1879 tested (1274 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~45m) 1492/1879 tested (1275 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~45m) 1494/1879 tested (1277 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~44m) 1495/1879 tested (1278 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~44m) 1497/1879 tested (1280 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~44m) 1498/1879 tested (1281 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~44m) 1500/1879 tested (1283 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 55m, remaining: ~44m) 1501/1879 tested (1284 survived, 90 timed out)
Mutation testing 79% (elapsed: ~2h 56m, remaining: ~44m) 1502/1879 tested (1285 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~43m) 1504/1879 tested (1287 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~43m) 1505/1879 tested (1288 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~43m) 1507/1879 tested (1290 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~43m) 1508/1879 tested (1291 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~43m) 1510/1879 tested (1293 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~43m) 1511/1879 tested (1294 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~42m) 1513/1879 tested (1296 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~42m) 1514/1879 tested (1297 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~42m) 1516/1879 tested (1299 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~42m) 1517/1879 tested (1300 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 57m, remaining: ~42m) 1519/1879 tested (1302 survived, 90 timed out)
Mutation testing 80% (elapsed: ~2h 58m, remaining: ~42m) 1520/1879 tested (1303 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~41m) 1522/1879 tested (1305 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~41m) 1523/1879 tested (1306 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~41m) 1525/1879 tested (1308 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~41m) 1526/1879 tested (1309 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~41m) 1528/1879 tested (1311 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~40m) 1529/1879 tested (1312 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~40m) 1530/1879 tested (1313 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~40m) 1532/1879 tested (1315 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~40m) 1533/1879 tested (1316 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~40m) 1535/1879 tested (1318 survived, 90 timed out)
Mutation testing 81% (elapsed: ~2h 59m, remaining: ~40m) 1536/1879 tested (1319 survived, 90 timed out)
Mutation testing 81% (elapsed: ~3h 0m, remaining: ~39m) 1538/1879 tested (1321 survived, 90 timed out)
Mutation testing 81% (elapsed: ~3h 0m, remaining: ~39m) 1539/1879 tested (1322 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~39m) 1541/1879 tested (1324 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~39m) 1542/1879 tested (1325 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~39m) 1544/1879 tested (1327 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~39m) 1545/1879 tested (1328 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~38m) 1547/1879 tested (1330 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~38m) 1548/1879 tested (1331 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~38m) 1550/1879 tested (1333 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~38m) 1551/1879 tested (1334 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~38m) 1553/1879 tested (1336 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 1m, remaining: ~38m) 1554/1879 tested (1337 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 2m, remaining: ~37m) 1556/1879 tested (1339 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 2m, remaining: ~37m) 1557/1879 tested (1340 survived, 90 timed out)
Mutation testing 82% (elapsed: ~3h 2m, remaining: ~37m) 1559/1879 tested (1342 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~37m) 1560/1879 tested (1343 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~37m) 1561/1879 tested (1344 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~36m) 1563/1879 tested (1346 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~36m) 1564/1879 tested (1347 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~36m) 1566/1879 tested (1349 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~36m) 1567/1879 tested (1350 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~36m) 1569/1879 tested (1352 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~36m) 1570/1879 tested (1353 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 3m, remaining: ~35m) 1572/1879 tested (1355 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 4m, remaining: ~35m) 1573/1879 tested (1356 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 4m, remaining: ~35m) 1575/1879 tested (1358 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 4m, remaining: ~35m) 1576/1879 tested (1359 survived, 90 timed out)
Mutation testing 83% (elapsed: ~3h 4m, remaining: ~35m) 1578/1879 tested (1361 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~35m) 1579/1879 tested (1362 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~34m) 1581/1879 tested (1364 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~34m) 1582/1879 tested (1365 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~34m) 1584/1879 tested (1367 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~34m) 1585/1879 tested (1368 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~34m) 1587/1879 tested (1370 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~34m) 1588/1879 tested (1371 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 5m, remaining: ~33m) 1589/1879 tested (1372 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 6m, remaining: ~33m) 1591/1879 tested (1374 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 6m, remaining: ~33m) 1592/1879 tested (1375 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 6m, remaining: ~33m) 1594/1879 tested (1377 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 6m, remaining: ~33m) 1595/1879 tested (1378 survived, 90 timed out)
Mutation testing 84% (elapsed: ~3h 6m, remaining: ~32m) 1597/1879 tested (1380 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~32m) 1598/1879 tested (1381 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~32m) 1600/1879 tested (1383 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~32m) 1601/1879 tested (1384 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~32m) 1603/1879 tested (1386 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~32m) 1604/1879 tested (1387 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~31m) 1606/1879 tested (1389 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~31m) 1607/1879 tested (1390 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~31m) 1609/1879 tested (1392 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~31m) 1610/1879 tested (1393 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~31m) 1612/1879 tested (1395 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~31m) 1613/1879 tested (1396 survived, 90 timed out)
Mutation testing 85% (elapsed: ~3h 8m, remaining: ~30m) 1615/1879 tested (1398 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~30m) 1616/1879 tested (1399 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~30m) 1617/1879 tested (1400 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~30m) 1619/1879 tested (1402 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~30m) 1620/1879 tested (1403 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~30m) 1622/1879 tested (1405 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~29m) 1623/1879 tested (1406 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~29m) 1625/1879 tested (1408 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~29m) 1626/1879 tested (1409 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~29m) 1628/1879 tested (1411 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~29m) 1629/1879 tested (1412 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~28m) 1631/1879 tested (1414 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~28m) 1632/1879 tested (1415 survived, 90 timed out)
Mutation testing 86% (elapsed: ~3h 10m, remaining: ~28m) 1634/1879 tested (1417 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~28m) 1635/1879 tested (1418 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~28m) 1637/1879 tested (1420 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~28m) 1638/1879 tested (1421 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~27m) 1640/1879 tested (1423 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~27m) 1641/1879 tested (1424 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~27m) 1643/1879 tested (1426 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~27m) 1644/1879 tested (1427 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~27m) 1646/1879 tested (1429 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~27m) 1647/1879 tested (1430 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~26m) 1648/1879 tested (1431 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~26m) 1650/1879 tested (1433 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 12m, remaining: ~26m) 1651/1879 tested (1434 survived, 90 timed out)
Mutation testing 87% (elapsed: ~3h 13m, remaining: ~26m) 1653/1879 tested (1436 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~26m) 1654/1879 tested (1437 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~26m) 1656/1879 tested (1439 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~25m) 1657/1879 tested (1440 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~25m) 1659/1879 tested (1442 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~25m) 1660/1879 tested (1443 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~25m) 1662/1879 tested (1445 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~25m) 1663/1879 tested (1446 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1665/1879 tested (1448 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1666/1879 tested (1449 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1668/1879 tested (1451 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 14m, remaining: ~24m) 1669/1879 tested (1452 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 15m, remaining: ~24m) 1671/1879 tested (1454 survived, 90 timed out)
Mutation testing 88% (elapsed: ~3h 15m, remaining: ~24m) 1672/1879 tested (1455 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1674/1879 tested (1457 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1675/1879 tested (1458 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1676/1879 tested (1459 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~23m) 1678/1879 tested (1461 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~23m) 1679/1879 tested (1462 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~23m) 1681/1879 tested (1464 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1682/1879 tested (1465 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1684/1879 tested (1467 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1685/1879 tested (1468 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 16m, remaining: ~22m) 1687/1879 tested (1470 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 17m, remaining: ~22m) 1688/1879 tested (1471 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 17m, remaining: ~22m) 1690/1879 tested (1473 survived, 90 timed out)
Mutation testing 89% (elapsed: ~3h 17m, remaining: ~21m) 1691/1879 tested (1474 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~21m) 1693/1879 tested (1476 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~21m) 1694/1879 tested (1477 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~21m) 1696/1879 tested (1479 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~21m) 1697/1879 tested (1480 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1699/1879 tested (1482 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1700/1879 tested (1483 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1702/1879 tested (1485 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1703/1879 tested (1486 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 18m, remaining: ~20m) 1705/1879 tested (1488 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 19m, remaining: ~20m) 1706/1879 tested (1489 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 19m, remaining: ~20m) 1707/1879 tested (1490 survived, 90 timed out)
Mutation testing 90% (elapsed: ~3h 19m, remaining: ~19m) 1709/1879 tested (1492 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~19m) 1710/1879 tested (1493 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~19m) 1712/1879 tested (1495 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~19m) 1713/1879 tested (1496 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~19m) 1715/1879 tested (1498 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~19m) 1716/1879 tested (1499 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~18m) 1718/1879 tested (1501 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~18m) 1719/1879 tested (1502 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~18m) 1721/1879 tested (1504 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 20m, remaining: ~18m) 1722/1879 tested (1505 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 21m, remaining: ~18m) 1724/1879 tested (1507 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 21m, remaining: ~17m) 1725/1879 tested (1508 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 21m, remaining: ~17m) 1727/1879 tested (1510 survived, 90 timed out)
Mutation testing 91% (elapsed: ~3h 21m, remaining: ~17m) 1728/1879 tested (1511 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~17m) 1730/1879 tested (1513 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~17m) 1731/1879 tested (1514 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~17m) 1733/1879 tested (1516 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1734/1879 tested (1517 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1736/1879 tested (1519 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1737/1879 tested (1520 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1738/1879 tested (1521 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 22m, remaining: ~16m) 1740/1879 tested (1523 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 23m, remaining: ~16m) 1741/1879 tested (1524 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 23m, remaining: ~15m) 1743/1879 tested (1526 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 23m, remaining: ~15m) 1744/1879 tested (1527 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 23m, remaining: ~15m) 1746/1879 tested (1529 survived, 90 timed out)
Mutation testing 92% (elapsed: ~3h 23m, remaining: ~15m) 1747/1879 tested (1530 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~15m) 1749/1879 tested (1532 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~15m) 1750/1879 tested (1533 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1752/1879 tested (1535 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1753/1879 tested (1536 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1755/1879 tested (1538 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1756/1879 tested (1539 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 24m, remaining: ~14m) 1758/1879 tested (1541 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1759/1879 tested (1542 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1761/1879 tested (1544 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1762/1879 tested (1545 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1763/1879 tested (1546 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1765/1879 tested (1548 survived, 90 timed out)
Mutation testing 93% (elapsed: ~3h 25m, remaining: ~13m) 1766/1879 tested (1549 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1768/1879 tested (1551 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1769/1879 tested (1552 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1771/1879 tested (1554 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1772/1879 tested (1555 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1774/1879 tested (1557 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~12m) 1775/1879 tested (1558 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1777/1879 tested (1560 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1778/1879 tested (1561 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1780/1879 tested (1563 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1781/1879 tested (1564 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1783/1879 tested (1566 survived, 90 timed out)
Mutation testing 94% (elapsed: ~3h 27m, remaining: ~11m) 1784/1879 tested (1567 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1786/1879 tested (1569 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1787/1879 tested (1570 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1789/1879 tested (1572 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1790/1879 tested (1573 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1791/1879 tested (1574 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~10m) 1793/1879 tested (1576 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~9m) 1794/1879 tested (1577 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~9m) 1796/1879 tested (1579 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~9m) 1797/1879 tested (1580 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~9m) 1799/1879 tested (1582 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~9m) 1800/1879 tested (1583 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 29m, remaining: ~8m) 1802/1879 tested (1585 survived, 90 timed out)
Mutation testing 95% (elapsed: ~3h 30m, remaining: ~8m) 1803/1879 tested (1586 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~8m) 1805/1879 tested (1588 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~8m) 1806/1879 tested (1589 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~8m) 1808/1879 tested (1591 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~8m) 1809/1879 tested (1592 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~7m) 1811/1879 tested (1594 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~7m) 1812/1879 tested (1595 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~7m) 1814/1879 tested (1597 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~7m) 1815/1879 tested (1598 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~7m) 1817/1879 tested (1600 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~7m) 1818/1879 tested (1601 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 31m, remaining: ~6m) 1819/1879 tested (1602 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 32m, remaining: ~6m) 1821/1879 tested (1604 survived, 90 timed out)
Mutation testing 96% (elapsed: ~3h 32m, remaining: ~6m) 1822/1879 tested (1605 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~6m) 1824/1879 tested (1607 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~6m) 1825/1879 tested (1608 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~6m) 1827/1879 tested (1610 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~5m) 1828/1879 tested (1611 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~5m) 1830/1879 tested (1613 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~5m) 1831/1879 tested (1614 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~5m) 1833/1879 tested (1616 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~5m) 1834/1879 tested (1617 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~5m) 1836/1879 tested (1619 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 33m, remaining: ~4m) 1837/1879 tested (1620 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 34m, remaining: ~4m) 1839/1879 tested (1622 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 34m, remaining: ~4m) 1840/1879 tested (1623 survived, 90 timed out)
Mutation testing 97% (elapsed: ~3h 34m, remaining: ~4m) 1841/1879 tested (1624 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~4m) 1843/1879 tested (1626 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~4m) 1844/1879 tested (1627 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~3m) 1846/1879 tested (1629 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~3m) 1847/1879 tested (1630 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~3m) 1849/1879 tested (1632 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~3m) 1850/1879 tested (1633 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~3m) 1852/1879 tested (1635 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~3m) 1853/1879 tested (1636 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 35m, remaining: ~2m) 1857/1879 tested (1637 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 36m, remaining: ~2m) 1859/1879 tested (1639 survived, 90 timed out)
Mutation testing 98% (elapsed: ~3h 36m, remaining: ~2m) 1860/1879 tested (1640 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: ~1m) 1862/1879 tested (1642 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: ~1m) 1863/1879 tested (1643 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: ~1m) 1865/1879 tested (1645 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: ~1m) 1866/1879 tested (1646 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: ~1m) 1868/1879 tested (1648 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: ~1m) 1869/1879 tested (1649 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: <1m) 1871/1879 tested (1651 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: <1m) 1872/1879 tested (1652 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: <1m) 1873/1879 tested (1653 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 37m, remaining: <1m) 1875/1879 tested (1655 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 38m, remaining: <1m) 1876/1879 tested (1656 survived, 90 timed out)
Mutation testing 99% (elapsed: ~3h 38m, remaining: <1m) 1878/1879 tested (1658 survived, 90 timed out)

All tests
  ✓ All tests (killed 130)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof "bootstrap" === "function") {

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof window === "function") {

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof qStartingLine === "function") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition.toString());

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", Math.abs(definition));

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition.toUpperCase());

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "foo"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("deferred", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap({}, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(123456, definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", 1 + 1);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", "string");

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", []);

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           42(definition);

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           [](definition);

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           null(definition);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define("place_holder");

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(42);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(void 0);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses !== "Null") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses !== null) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (ses !== "undefined") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (laterQueue.length()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok || true()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok && false()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (typeof domain === "undefined") {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.toString()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.allow();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.message();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 0, null);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 0, undefined);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   clearTimeout(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(_), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       null();

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (domain = undefined) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (domain = null) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (flushing + 1) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (window === this) {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(0);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = clearInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(0, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, undefined);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, null);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, 0);

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   requestAnimationFrame(flush);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(undefined);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(null);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(function () {});

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               window.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, undefined);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, NaN);

[Survived] PrecomputedMutator
q.js:228:13
-               requestPortTick();
+               1 + requestPortTick();

[Survived] PrecomputedMutator
q.js:228:13
-               requestPortTick();
+               requestPortTick + 1();

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, undefined);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "flush");

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(alert(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(console.log(), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing === true) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (new Error("foo")) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (typeof arguments === "object") {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length !== 1) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (this.prototype.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (Object.prototype.hasOwnProperty.call(this, index)) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index <= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index < length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (; index > length; index--) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length - 1; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index >= 0; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index % 2 === 0; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index <<= 1) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index %= 2) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (Object.prototype.hasOwnProperty.call(this, index)) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index >= 0 && index < this.length) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] - 1, index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, index, index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = null(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = undefined(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(null, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index].value, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, index + this.length, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], basis + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], Math.random());

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i + 1) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value && typeof this[i] === 'undefined') {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value || this[i] !== 'undefined') {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp)(value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, value, index, thisp));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(Math.cos(null), null, null, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, this, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, null, null, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(0, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, {
+     foo: "bar"
+   }, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, true, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, void 0, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, "abc"));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, 10));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in object_create(null)) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in object_create(undefined)) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in object_create('foo')) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] === undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || object[key] !== undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.property)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(key.object)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.property + key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnPrototype(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnRegion(object, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[prop], key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.hasOwnProperty(prop), key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(Object.prototype.hasOwnProperty.call(object, prop), key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, index2)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, this.length + 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, void 0)) {

[Survived] PrecomputedMutator
q.js:341:13
-               keys.push(key);
+               keys.unshift(key);

[Survived] PrecomputedMutator
q.js:341:13
-               keys.push(key);
+               keys.pop(key);

[Survived] PrecomputedMutator
q.js:341:13
-               keys.push(key);
+               keys.clear(key);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push('a');

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + '1');

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(null);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           Number(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           Array(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           null(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(null) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(0) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(new Error()) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = null; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = undefined; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = !promise; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source || null) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p['source']) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.sourceline) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ < p.stackCounter) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ !== p.stackCounter) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ === p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: "banana",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error = error * 2, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error = true, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, `"__minimumStackCounter_"`, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, `"_minimumStackCounter_"`, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, `"_maximumStackCounter_"`, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stack,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stack.replace("node.js", "chromium.org"),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.concat(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.reverse(p.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack !== undefined);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.length > 0);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack !== "undefined");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("a" + STACK_JUMP_SEPARATOR + "a");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("b" + STACK_JUMP_SEPARATOR + "b");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("c" + STACK_JUMP_SEPARATOR + "c");

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = "this is a test string"(concatedStacks);

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = undefined(concatedStacks);

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = null(concatedStacks);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.toString());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.substring(1));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.substr(-1));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(promise, "stack", {
+     value: null,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: undefined,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(promise, "stack", {
+     value: "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_setProperty(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           array_setProperty(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           promise_setProperty(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(promise, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.__minimumStackCounter__, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.stack, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stacktrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "foo", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "unshift", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "abc",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: null,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.slice("\n");

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.substring("\n");

[Survived] PrecomputedMutator
q.js:403:17
-       var lines = stackString.split("\n");
+       var lines = stackString.charAt("\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(null);

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var j = 0; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = i + 100) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) && isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) || !isNodeFrame(line) || line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isExternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isNodeFrame || isBabelFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isReactFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:52
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(length) && line) {

[Survived] PrecomputedMutator
q.js:408:52
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line[j]) && line) {

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(i + 1);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.contains("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.substring(1));

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt1 && attempt2) {

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt1 || attempt2) {

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], String(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], `typeof attempt1`(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], `attempt1`(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[Math.floor(Math.random() * attempt2.length)])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.stack);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.substr(1));

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "NaN"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[4])];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[0](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber.toString(stackLine);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber === 'undefined') {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].startsWith("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].endsWith("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].includes("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf(13) > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (!fileNameAndLineNumber.length) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (isNaN(fileNameAndLineNumber)) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== console.log) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn === "function" && console.warn("Hello, world!")) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn === "function" && console.warn("Goodbye, world!")) {

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, [1]);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, `[Number(2)]`);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, `[*2]`);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (typeof value === "Promise.prototype") {

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(defer.prototype.constructor);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(Object.prototype);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(defer.prototype.__proto__);

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "done" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "done" || operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(progress + 1);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(function () {
+     return progress;
+   });

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promise, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.anotherProperty, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (undefined) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = null(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = undefined(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = {}(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise + 1);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(Q);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(new Error("my error message"));

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (PLACEHOLDER = 0) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (PLACEHOLDER = 1) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (PLACEHOLDER = error) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isError(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isRejected(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isFulfilled(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue.value)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue.promise)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport ? hasStacks : !hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(0);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 2);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length - 1("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("x") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("a") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("_") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && false) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && true) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && hasStacks.reverse()) {

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message, message);

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message, undefined);

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message, 'different');

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply({}, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.promise, message);

[Survived] PrecomputedMutator
q.js:638:18
-           become(Q(value));
+           become(Q(Q(value)));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (progressListeners.length) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (promise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (array_slice(arguments)) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(anotherValue));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill("some string"));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== null) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[0](progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners.length(progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress * 2);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress - 1);

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               null(error);

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               undefined(error);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(undefined);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject("error");

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments > 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length !== 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               Q.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.mockResolve(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(new Array(arguments).slice(1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(Array.from(arguments).slice(1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(spread.apply(arguments, [1]));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.length));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(this.arguments));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([].slice.call(arguments, 1)));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(0, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(undefined, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(NaN, 1));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               "something else"(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               null(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(0);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== !"function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver === void 0) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "function" || !resolver) {

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.makeNodeResolver, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify());

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress, value));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notReject(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(42);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(promise.reject);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return undefined(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return null(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return {}(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * y + z).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(!y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y.toString());

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return "hello"([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return []([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return undefined([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x < y) {

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 1, len = answerPs.length; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 0, len = answerPs.length - 1; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:9
-           for (var i = 0, len = answerPs.length; i < len; i++) {
-               Q(answerPs[i]).then(resolve, reject);
-           }
+           for (var i = 0, len = answerPs.length * 2; i < len; i++) {
+     Q(answerPs[i]).then(resolve, reject);
+   }

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i += len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i + 2) {

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] + 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i - 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(Q(answerPs[i]).then(identity)).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(function (resolver, rejecter) {}, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(Q(x).join(y), reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, fulfill);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, accept);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (!!fallback) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback || void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === undefined) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(1, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.inspect);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(deferred);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(self);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(5, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(function () {
+     throw new Error("Error message");
+   }, op, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, undefined);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, true);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error());

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect["[object Promise]"]) {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.value !== undefined) {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self, false);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self, undefined);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(null, self);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, "self");

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(value.undefinedField) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(value + 1) : value;

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done && true) {

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(!value);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onwarn) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.oninfo) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e + 1);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw && deferred.notify(newValue)) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw || deferred.notify(newValue)) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return 123(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(null).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.then(function () {
+     return;
+   })).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.resolve(promise)).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(1);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(null);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(function () {
+     return 0;
+   });

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.makePromise(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Promise.makePromise(callback);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve("something else");

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, function () {});

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(newValue, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(exception, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, "random progressed");

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed());

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return null(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return undefined(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return Q(value);
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value.then(function (v) {
+       return v + 1;
+     });
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return 1234567890(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(42).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q({
+     foo: 42
+   }).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(0);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return Q.reject(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return T(promise).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject("hello");

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(Promise.resolve());

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value !== value) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (typeof value === "undefined") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value.toString() !== "object Promise") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected !== value) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isRejected(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isPending(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(undefined) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(NaN) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspected().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(!object.inspect()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().length) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || Object.prototype.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect += 1().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isRejected(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromise(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return reject(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect === "rejected"().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === true) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (true) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) >= 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise) && false) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, null) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, undefined) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, {
+     then: ""
+   }) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason[0], promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.length, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "Tesla", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("fulfilled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("reject", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, unhandledRejections);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, reportedUnhandledRejections);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   unhandledReasons.unshift(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(array_indexOf(unhandledRejections, promise));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(0);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason instanceof Error) {

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.pop(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(new Error(reason).stack);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== "true") {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections !== false) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, unhandledRejections.pop());

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, unhandledReasons.pop());

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at + 1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.indexOf(promise));

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(Array.prototype.slice.call(reportedUnhandledRejections).indexOf(promise));

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, undefined);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, 0);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport != -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport < reportedUnhandledRejections.length) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("resolutionHandled");

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise + 1);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejected", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("fulfilled", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", promise, promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", null, promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reason);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, NaN);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, Infinity);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 10);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, array_indexOf(reportedUnhandledRejections, promise) + 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, ~1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, !at);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -at);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(0, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at * 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at ^ 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.shift(at, 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.pop(at, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledRejections[at + 1], 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons[at - 1], 1);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(1, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, {});

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, new Error('My custom error message'));

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (!name) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (typeof name === "undefined") {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(0);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return a = "no framework"(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return a = 42(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(false, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(0, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, [false, true]);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, [null, void 0]);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, [undefined, NaN]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, [args]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, ...args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args[0]);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, undefined);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply("null");

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply("undefined");

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value[Symbol.iterator](thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.valueOf(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, 0);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object.values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object.properties(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object.prototype.hasOwnProperty(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(Promise.reject("some error"));

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.fail);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               Q.defer(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               Promise.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject("new exception");

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(42);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(null);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(void 0);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch({});

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return 'undefined'(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return null(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return 'dispatch'(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, Q.reject(reason), args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, false, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, Q.resolved(reason), args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, "foo");

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, []);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return rejection(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return null(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return undefined(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(false).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(true).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled.bind(null, args));

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected.bind(null, args));

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread([fulfilled, rejected]);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return new Q()(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q("foo").spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled.bind(null), rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled.call(null), rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled.apply(null, []), rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.reject().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.inspect().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.else().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(array.slice());

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(0);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.length(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(Promise.resolve(), array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(Q.fulfill(), array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.reverse());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.pop());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.shift());

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = undefined(arg);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("hello");

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.toString());

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (!result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result === undefined) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.values[0]);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value[0]);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(when(Promise.reject("error"), callback, errback));

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(when(undefined, callback, errback));

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(when(null, callback, errback));

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when + 1(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when.then(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when[0](result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value.length, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, resolve, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, continuer.bind(continuer, "next"), errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, null);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, undefined);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, true);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]($r);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]($$.arg);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]($$arg);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.valueOf() instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (!isStopIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (true) {

[Survived] PrecomputedMutator
q.js:1314:32
-                           return Q(exception.value);
+                           return undefined(exception.value);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(undefined);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(false);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, errback, callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback, undefined);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return defer(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(true, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(false, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, true, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, false, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, null, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, undefined);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, null);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, function (error) {
+     throw error;
+   });

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(self);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(arguments[0]);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(Q, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, [].push(undefined));

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(context);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(null);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind({});

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.call(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = null(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "previous");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "random");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "start");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind("throw", reject));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(reject, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = undefined(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = null(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = 0(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "emit");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "that");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "isRejected");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, _(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, nothing(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, arguments);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return args.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return deferred.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return object.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, {});

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("get", [op]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("set", [op, args]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("call", [op, args]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return undefined(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return 1(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({
+     "value": object
+   }).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(2 * op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, args, op);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           Promise.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           undefined(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(42, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, !op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, Math.floor(op), args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args[args.length - 1]);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, Object.values(args));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.map(function (x) {
+     return x + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("put", [key, value]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("has", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(1 + object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object.nonExistentProperty).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(Object.keys(object).length).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("length", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("valueOf", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.promiseDispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.resolve("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.reject("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("del", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", null);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", key += 1);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [otherKey, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key + 1, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return null(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return undefined(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return 0(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(false).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(Q(function () {})).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(Q.delay(object, 0)).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, undefined]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [0, 0]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key + 1, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setx", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(42, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("hasOwnProperty", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [null]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(undefined).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(42).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("push", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("pop", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", ["foo"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key + 1]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("missing", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.proxiedObject.dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("_", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("del" + "ete", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key1, key2]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, key + 1]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key * 2]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, function () {}]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return boo(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return "bar".translate(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(this).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("push", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("send", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.toString()]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args + '']);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args * 2]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, [args]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, [args[0]]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.resolve("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.fulfill("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.reject("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("call", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post;", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.concat("extra argument")]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("foo", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.isResolved(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.resolve(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.reject(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(true).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("foo", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(Q.wait)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(Q.concurrent)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(Q.fapply)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_shift(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, object[method](arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(undefined, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return null("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return undefined("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return deferred("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("postx", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch(Math.random(), [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [foo, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments[1])]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments.slice(1))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(deferred, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(function () {}, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, promises.length + 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(function () {}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("POST", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [this, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [object, []]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, [].concat(args)]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("valueOf", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [arguments, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, []]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1) || []]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return then(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return resolve(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return reject(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(Q.reject("error")).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("arguments", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [this, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, arguments]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 2))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice[1](arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice.length(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([1, 2, 3], 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(["a", "b", "c"], 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1 + 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, "hello" + "world")]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, "hello" + 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [undefined, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [null, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("catch", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [null, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1, -1)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, [].slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, Array.prototype(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_length(arguments) - 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.length - 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice + 1(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice * 2(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice - 1(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 2)), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1, -1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.reduce(function (acc, arg) {
+     acc.push(arg);
+     return acc;
+   }, []), 1);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args + args(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, -2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([0, 1, 2].map(array_slice(arguments, 1)))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_pop(arguments))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice({}))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(this);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               null(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               undefined(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(args))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(0))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["name"]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return null(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return undefined(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.reverse()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object[0]).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object + 1).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("get", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("has", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("prototype", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", this);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", 0);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.isFulfilled()

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.state() !== "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.resolve()

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   typeof promise === "object"(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   !promise(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return null;
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     throw "error";
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return undefined;
+   })) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.label()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise["value"]()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.when(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice());

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.reverse());

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.filter(function (promise) {
+     return promise.state === "fulfilled";
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           promise.notify({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           Q.notify({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: undefined,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     value: progress + 1
+   });

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               Q.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               undefined(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(new Error(""));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return Promise.reject(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(this.then());

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(allSettled(Promise.reject()));

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Array.prototype.map.call(this));

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length !== 0) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Promise.reject();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.inspect().state === "rejected");

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(Q.reject(promise.inspect().state));

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(null, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.inspect(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(when(promise, null, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, 0, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, null, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, deferred.resolve(), onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, deferred.reject(), onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, when(promise, function () {
+     deferred.resolve();
+   }, function () {
+     deferred.reject();
+   }), onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.somethingElse(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(index);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(random.nextInt());

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < promises.length) {

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject("Another error message");

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(123);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return null(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return undefined(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.prototype);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(promise.then(() => Promise.prototype));

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(function () {
+     return Promise.prototype;
+   });

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "none", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "anyRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "anySettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "noneSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "lastSettled");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q, 1);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q, promises);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map([], Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises[index], Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises[i], Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(Array.prototype.slice.call(promises), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, null);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, undefined);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.finally(function () {}));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.catch(function () {}));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return reject(promise, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return deferred.reject(promise, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(noop()), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(reject(new Error('Failed'))), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(notification => when(notification, noop())), noop, noop);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(promises);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(this.all);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return 'any'(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return 'all'(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return 'reject'(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q([]).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(void 0).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q("foobar").allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(null);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(NaN);

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise["inspect"]();

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function ohNo() {
+     throw new Error("Uh oh!");
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(null, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function alsoRegardless() {}, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     throw new Error();
+   }());

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, void 0);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, 1);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, NaN);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return null(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return undefined(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(undefined).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q({}).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(NaN, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, rejected.then(undefined));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, null);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(alert("error!"), rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.catch(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(NaN, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejects);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, returns);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, noop);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, progressed(null));

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(deferred.notify, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, "any");

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, "none");

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, !progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(() => {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, Q.reject(new Error("uj")), progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, Q.reject(new Error()), progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, progressed + 1);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, progressed("", undefined));

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {
+     return progressed.apply(null, arguments);
+   });

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return doesNotExist(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return notDefined(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return null(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q(object).delay(0))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q(object).then(Q.reverse))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q(object).then(Q.flip))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](rejected);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](function () {
+     return rejected;
+   });

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](function () {
+     throw rejected;
+   });

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || callback.apply !== Function.prototype.apply) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || callback.apply === "function") {

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback + 1);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, progress, fulfilled);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progress, fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.reject(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(() => rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, Q.reject, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, Q.fulfill, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, () => {});

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, update => {
+     throw update;
+   });

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error.message, promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise.resolve(error), promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise.reject(error), promise);

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.error) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.errors) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.difference(Q.error, Q.error)) {

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   Q.onerror = null(error);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(undefined);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, "fake progress") :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, "rejected", progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(42, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, void 0) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, false) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.nonExistentMethod());

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.apply());

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(function () {});

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.update(void 0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(Symbol('invalid'), onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(new Error(), onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, Q.onerror);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, promise.onerror);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, Q.nextTick);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms * 2, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q("hello").timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(function () {}).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(-1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(NaN, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "Timeout");

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, 404);

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(1);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           null(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve({});

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(42);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           null(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           undefined(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(0);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(void 0);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout == null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout < 500) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout + 1) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(Q).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay("hello");

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(() => {
+     throw new Error("hello");
+   });

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = 42();

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = 10();

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = {}();

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return null(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return undefined(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return 0(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(callback(null, value)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(callback(error, null)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(callback(null, null)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = -1(args);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = undefined(args);

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = null(args);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.concat(null));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(["different", "arguments"]);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver("test"));

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.nfapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.post(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.nbind(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.length).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(Q.reject);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(0);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(1, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice({}, 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, Math.floor(Math.random() * 3));

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([undefined]);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = undefined(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = console.log(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = null(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = deferred.resolve();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = promise.reject();

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(console.log);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(Q.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(resolve());

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.reject(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.resolve(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       deferred.notify(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.shift()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(reject)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.map(function (arg) {
+     return arg * 2;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (!callback) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback != null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback !== 'function') {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(args, 1, 2), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(args, 1, -1), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(-1, -2), 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, "0");

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, undefined);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, arguments.length - 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null(arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(deferred.resolve(value)));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(deferred.reject(error)));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(deferred.notify(value)));

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = null();

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs[0].push(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.slice(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function (error) {
+     deferred.reject(error);
+   });

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function (error, result) {
+     deferred.resolve(error || result);
+   });

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function (error, result) {
+     deferred.reject(error ? error : result);
+   });

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(undefined());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null());

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(0).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q({}.undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs[0]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(Q);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(function () {});

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply({});

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.npost(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.napply(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nmcall(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, Q.ninvoke(13, nodeArgs));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, Q.ninvoke(void 0, nodeArgs));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, Q.ninvoke(Q, nodeArgs));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2, 1));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments.slice(2));

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments).slice(2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Object.values(arguments).slice(2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].slice.call(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 2 + void 0);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 2 + undefined);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 2 + {});

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs + nodeArgs(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(this.arguments);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(this[arguments]);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(function () {
+     return array_slice(arguments);
+   });

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_splice(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(timeout));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(baseArgs));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs[0](deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           "hello world"(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(console.log, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs.concat(arguments));

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs.join("|"));

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs.push(arguments));

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(object).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(thisp).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(Q.reject).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(Promise.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(args.length);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = "array_slice"(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice("test", 0);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift("PLACEHOLDER");

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.prototype.denodeify.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Object.prototype.denodeify.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Function.prototype.denodeify.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(false, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args[0]);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.pop());

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(args, name);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat([name]));

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q("hello").npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(undefined, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(null, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(42, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, 99);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, undefined);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = null(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = 123(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = {}(args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(0);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = 42();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = undefined();

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs = [](deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     return deferred.makeNodeResolver().resolve();
+   });

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.fail("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.resolve("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.reject("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("undefined", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch([name, nodeArgs], [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [!name, !nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function (err) {
+     console.log(err);
+   });

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function (err) {
+     return err;
+   });

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(console.log("Error:", err));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(name, args);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(nodeArgs, null, false);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments[0], 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments.slice(1), 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, undefined);

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:2020:20
-       var deferred = defer();
+       var deferred = undefined();

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.dfd);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(Q.reject());

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       deferred.resolve(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       nodeback(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Promise.reject(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("notDefinedMethod", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       null(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       undefined(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       0(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(this).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(0).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("foo", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(null, [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, 0]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [null, name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail([PLACEHOLDER]);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(!deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(array_slice(arguments, 2, 1));

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(this, 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, name);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(42);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(Q.defer());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch(name, []).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch(undefined, nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       null.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch2("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", ["foo", nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.concat("bar")]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, [].concat(nodeArgs)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(() => {});

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return object.nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return "Q"(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q([]).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(new Error('Test error')).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(null);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(1 + nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback.call(this));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback = null) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (typeof nodeback === "object") {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback.toString() === "null") {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undef, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback("Error", value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(function () {
+     throw new Error("Test error");
+   }, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, new Error('error'));

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback("test");

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.reject();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.resolve();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.reject("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.then("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = Q.resolve("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.△");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.resolve("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.reject("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("value");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tale");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   ends.resolve(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.reject(new Error("Can't get value from closed queue")));

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(end.tail);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(ends.promise);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(closed.promise);

Ran 0.95 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.71 |      130 |        90 |       1659 |        0 |        0 |
 q.js     |   11.85 |      130 |        90 |       1637 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         22 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m14:02:53 (3119) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m14:02:53 (3119) INFO MutationTestExecutor[39m Done in 218 minutes 26 seconds.

real	218m27.503s
user	38m51.230s
sys	6m40.424s
