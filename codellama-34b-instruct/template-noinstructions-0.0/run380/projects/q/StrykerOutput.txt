*** using precomputed mutations ***
[32m00:58:21 (3380) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m00:58:21 (3380) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m00:58:22 (3380) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m00:58:22 (3380) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m00:58:22 (3380) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m00:58:22 (3380) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1957 mutants from MUTATION_TESTING/template-noinstructions_codellama-34b-instruct_0.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "string"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", function () {})
Mutant 4 in q.js: bootstrap replaced with "promise"
Mutant 5 in q.js: bootstrap replaced with "Q"
Mutant 6 in q.js: bootstrap replaced with "undefined"
Mutant 7 in q.js: "promise" replaced with "buggy"
Mutant 8 in q.js: "promise" replaced with "rejected"
Mutant 9 in q.js: "promise" replaced with "error"
Mutant 10 in q.js: definition replaced with function () {
  throw new Error("Test error");
}
Mutant 11 in q.js: definition replaced with function () {
  return "Test string";
}
Mutant 12 in q.js: definition replaced with function () {
  return;
}
Mutant 13 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined" && typeof module === "undefined"
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "undefined"
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined" && typeof module === "object"
Mutant 16 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.define
Mutant 17 in q.js: define replaced with undefined
Mutant 18 in q.js: define replaced with null
Mutant 19 in q.js: definition replaced with function () {}
Mutant 20 in q.js: definition replaced with function (x) {
  return x;
}
Mutant 21 in q.js: definition replaced with function (x) {
  throw new Error();
}
Mutant 22 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 23 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "object"
Mutant 24 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "function"
Mutant 25 in q.js: !ses.ok() replaced with ses.ok()
Mutant 26 in q.js: !ses.ok() replaced with ses.ok() && ses.makeQ
Mutant 27 in q.js: ses.ok replaced with ses.notOk
Mutant 28 in q.js: ses.ok replaced with ses.maybeOk
Mutant 29 in q.js: ses.ok replaced with ses.ok && ses.notOk
Mutant 30 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 31 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" || typeof self === "undefined"
Mutant 32 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" && typeof self === "undefined"
Mutant 33 in q.js: captureLine replaced with captureLine + 1
Mutant 34 in q.js: captureLine replaced with captureLine - 1
Mutant 35 in q.js: captureLine replaced with captureLine + 2
Mutant 36 in q.js: head.next replaced with head
Mutant 37 in q.js: head.next replaced with head.next.task
Mutant 38 in q.js: head.next replaced with head.task
Mutant 39 in q.js: domain replaced with domain.exit()
Mutant 40 in q.js: domain replaced with domain.enter()
Mutant 41 in q.js: domain.enter replaced with domain.exit
Mutant 42 in q.js: domain.enter replaced with domain.run
Mutant 43 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, undefined)
Mutant 44 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, null)
Mutant 45 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, "foo")
Mutant 46 in q.js: runSingle replaced with noop
Mutant 47 in q.js: runSingle replaced with undefined
Mutant 48 in q.js: task replaced with null
Mutant 49 in q.js: task replaced with undefined
Mutant 50 in q.js: domain replaced with null
Mutant 51 in q.js: domain replaced with undefined
Mutant 52 in q.js: domain replaced with 0
Mutant 53 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 54 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 55 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 56 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 57 in q.js: runSingle replaced with noop
Mutant 58 in q.js: runSingle replaced with undefined
Mutant 59 in q.js: runSingle replaced with null
Mutant 60 in q.js: task replaced with null
Mutant 61 in q.js: task replaced with undefined
Mutant 62 in q.js: task replaced with () => {}
Mutant 63 in q.js: task replaced with null
Mutant 64 in q.js: task replaced with undefined
Mutant 65 in q.js: isNodeJS replaced with !isNodeJS
Mutant 66 in q.js: isNodeJS replaced with isBrowser
Mutant 67 in q.js: isNodeJS replaced with isMobile
Mutant 68 in q.js: domain replaced with domain.exit()
Mutant 69 in q.js: domain replaced with domain.enter()
Mutant 70 in q.js: domain.exit replaced with domain.enter
Mutant 71 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 72 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 73 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 74 in q.js: flush replaced with flush()
Mutant 75 in q.js: flush replaced with flush(1)
Mutant 76 in q.js: flush replaced with flush(function () {})
Mutant 77 in q.js: 0 replaced with 1
Mutant 78 in q.js: 0 replaced with -1
Mutant 79 in q.js: 0 replaced with Infinity
Mutant 80 in q.js: domain replaced with null
Mutant 81 in q.js: domain replaced with undefined
Mutant 82 in q.js: domain replaced with false
Mutant 83 in q.js: domain.enter replaced with domain.exit
Mutant 84 in q.js: domain replaced with domain.exit()
Mutant 85 in q.js: domain replaced with domain && domain.exit()
Mutant 86 in q.js: domain replaced with typeof domain !== "undefined" && domain.exit()
Mutant 87 in q.js: domain.exit replaced with domain.enter
Mutant 88 in q.js: !flushing replaced with flushing
Mutant 89 in q.js: !flushing replaced with flushing || !flushing
Mutant 90 in q.js: flush replaced with flush()
Mutant 91 in q.js: flush replaced with flush(1)
Mutant 92 in q.js: flush replaced with flush(function () {})
Mutant 93 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 94 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 95 in q.js: typeof window !== "undefined" replaced with typeof window !== "function"
Mutant 96 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 97 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 98 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(0)
Mutant 99 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 100 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 101 in q.js: window replaced with undefined
Mutant 102 in q.js: window replaced with null
Mutant 103 in q.js: window replaced with {}
Mutant 104 in q.js: flush replaced with flush()
Mutant 105 in q.js: flush replaced with flush(1)
Mutant 106 in q.js: flush replaced with flush(function () {})
Mutant 107 in q.js: setImmediate replaced with requestAnimationFrame
Mutant 108 in q.js: flush replaced with console.log("Test log")
Mutant 109 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 110 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 111 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "function"
Mutant 112 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 113 in q.js: 0 replaced with 1
Mutant 114 in q.js: 0 replaced with "hello"
Mutant 115 in q.js: 0 replaced with null
Mutant 116 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 117 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 118 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "hello")
Mutant 119 in q.js: 0 replaced with 1
Mutant 120 in q.js: 0 replaced with -1
Mutant 121 in q.js: 0 replaced with Infinity
Mutant 122 in q.js: requestPortTick replaced with requestTick
Mutant 123 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 124 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 125 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "hello")
Mutant 126 in q.js: setTimeout replaced with setInterval
Mutant 127 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 128 in q.js: 0 replaced with 1
Mutant 129 in q.js: 0 replaced with -1
Mutant 130 in q.js: 0 replaced with Infinity
Mutant 131 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 132 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 133 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 134 in q.js: task replaced with null
Mutant 135 in q.js: task replaced with undefined
Mutant 136 in q.js: task replaced with 0
Mutant 137 in q.js: !flushing replaced with flushing
Mutant 138 in q.js: !flushing replaced with flushing || true
Mutant 139 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 140 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 141 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[2])
Mutant 142 in q.js: call.apply replaced with call.bind
Mutant 143 in q.js: call.apply replaced with call.call
Mutant 144 in q.js: f replaced with f.bind(this)
Mutant 145 in q.js: f replaced with f.call(this)
Mutant 146 in q.js: f replaced with f.apply(this)
Mutant 147 in q.js: arguments replaced with []
Mutant 148 in q.js: arguments replaced with null
Mutant 149 in q.js: arguments replaced with undefined
Mutant 150 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(arguments)
Mutant 151 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(this)
Mutant 152 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(null)
Mutant 153 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 154 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 155 in q.js: arguments.length === 1 replaced with arguments.length === 2
Mutant 156 in q.js: 1 replaced with 0
Mutant 157 in q.js: 1 replaced with -1
Mutant 158 in q.js: 1 replaced with length - 1
Mutant 159 in q.js: index in this replaced with index in this.length
Mutant 160 in q.js: index in this replaced with index > this.length
Mutant 161 in q.js: index in this replaced with index === this.length
Mutant 162 in q.js: ++index >= length replaced with index + 1 >= length
Mutant 163 in q.js: ++index >= length replaced with index >= length - 1
Mutant 164 in q.js: index < length replaced with index <= length
Mutant 165 in q.js: index < length replaced with index > length
Mutant 166 in q.js: index < length replaced with index == length
Mutant 167 in q.js: index++ replaced with index--
Mutant 168 in q.js: index++ replaced with index += 2
Mutant 169 in q.js: index++ replaced with index = 0
Mutant 170 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 171 in q.js: index in this replaced with Object.prototype.hasOwnProperty.call(this, index)
Mutant 172 in q.js: index in this replaced with index in Object.getOwnPropertyNames(this)
Mutant 173 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 174 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 175 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index * 2)
Mutant 176 in q.js: basis replaced with undefined
Mutant 177 in q.js: basis replaced with null
Mutant 178 in q.js: basis replaced with 0
Mutant 179 in q.js: this[index] replaced with this[index + 1]
Mutant 180 in q.js: this[index] replaced with this[index - 1]
Mutant 181 in q.js: this[index] replaced with this[index] = null
Mutant 182 in q.js: index replaced with index--
Mutant 183 in q.js: index replaced with index + 1
Mutant 184 in q.js: i < this.length replaced with i <= this.length
Mutant 185 in q.js: i < this.length replaced with i > this.length
Mutant 186 in q.js: i < this.length replaced with i == this.length
Mutant 187 in q.js: i++ replaced with i--
Mutant 188 in q.js: i++ replaced with i += 2
Mutant 189 in q.js: i++ replaced with i = 0
Mutant 190 in q.js: this[i] === value replaced with this[i] !== value
Mutant 191 in q.js: this[i] === value replaced with this[i] == value
Mutant 192 in q.js: this[i] === value replaced with this[i] === undefined
Mutant 193 in q.js: collect.push replaced with collect.pop
Mutant 194 in q.js: collect.push replaced with collect.shift
Mutant 195 in q.js: collect.push replaced with collect.unshift
Mutant 196 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, index, value, self)
Mutant 197 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, self, index)
Mutant 198 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index)
Mutant 199 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, this)
Mutant 200 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, null)
Mutant 201 in q.js: callback.call replaced with callback.apply
Mutant 202 in q.js: callback.call replaced with callback.bind
Mutant 203 in q.js: thisp replaced with null
Mutant 204 in q.js: thisp replaced with undefined
Mutant 205 in q.js: thisp replaced with {}
Mutant 206 in q.js: value replaced with undefined
Mutant 207 in q.js: value replaced with null
Mutant 208 in q.js: value replaced with 0
Mutant 209 in q.js: index replaced with index + 1
Mutant 210 in q.js: index replaced with index - 1
Mutant 211 in q.js: index replaced with index * 2
Mutant 212 in q.js: self replaced with null
Mutant 213 in q.js: self replaced with undefined
Mutant 214 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 215 in q.js: object replaced with null
Mutant 216 in q.js: object replaced with undefined
Mutant 217 in q.js: object replaced with {}
Mutant 218 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== undefined
Mutant 219 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== null
Mutant 220 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object)
Mutant 221 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(key)
Mutant 222 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key])
Mutant 223 in q.js: object replaced with {}
Mutant 224 in q.js: key replaced with key--
Mutant 225 in q.js: key replaced with key + 1
Mutant 226 in q.js: key replaced with this[key]
Mutant 227 in q.js: key replaced with key + 1
Mutant 228 in q.js: Object replaced with null
Mutant 229 in q.js: Object replaced with undefined
Mutant 230 in q.js: Object replaced with {}
Mutant 231 in q.js: value replaced with null
Mutant 232 in q.js: value replaced with undefined
Mutant 233 in q.js: value replaced with 0
Mutant 234 in q.js: exception replaced with exception.name
Mutant 235 in q.js: exception replaced with exception.message
Mutant 236 in q.js: exception replaced with exception.stack
Mutant 237 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "undefined"
Mutant 238 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "object"
Mutant 239 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "string"
Mutant 240 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.source; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 241 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.then(function () {
  return promise;
}); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 242 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.catch(function () {
  return promise;
}); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 243 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.then) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 244 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.catch) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 245 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.finally) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 246 in q.js: !!p replaced with !p
Mutant 247 in q.js: !!p replaced with p && !p
Mutant 248 in q.js: p = p.source replaced with p = p.source.source
Mutant 249 in q.js: p = p.source replaced with p = p.source.source.source
Mutant 250 in q.js: p = p.source replaced with p = p.source.source.source.source
Mutant 251 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 252 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 253 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ >= p.stackCounter)
Mutant 254 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 255 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 256 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter * 2,
  configurable: true
})
Mutant 257 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 258 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 259 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 260 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 261 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 262 in q.js: stacks.unshift replaced with stacks.push
Mutant 263 in q.js: stacks.unshift replaced with stacks.pop
Mutant 264 in q.js: stacks.unshift replaced with stacks.shift
Mutant 265 in q.js: p.stack replaced with p.stack.slice(0)
Mutant 266 in q.js: p.stack replaced with p.stack.concat()
Mutant 267 in q.js: p.stack replaced with p.stack.slice(1)
Mutant 268 in q.js: stacks.unshift replaced with stacks.push
Mutant 269 in q.js: stacks.unshift replaced with stacks.pop
Mutant 270 in q.js: stacks.unshift replaced with stacks.shift
Mutant 271 in q.js: error.stack replaced with error.stack.split("\n")[0]
Mutant 272 in q.js: error.stack replaced with error.stack.split("\n")[1]
Mutant 273 in q.js: error.stack replaced with error.stack.split("\n")[2]
Mutant 274 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n"
Mutant 275 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR
Mutant 276 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with STACK_JUMP_SEPARATOR + "\n"
Mutant 277 in q.js: concatedStacks replaced with concatedStacks.split("\n")[0]
Mutant 278 in q.js: concatedStacks replaced with concatedStacks.split("\n").reverse()[0]
Mutant 279 in q.js: concatedStacks replaced with concatedStacks.split("\n").slice(1)
Mutant 280 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", stack)
Mutant 281 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: true
})
Mutant 282 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 283 in q.js: "stack" replaced with "stackTrace"
Mutant 284 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  enumerable: true
}
Mutant 285 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  writable: false
}
Mutant 286 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  configurable: false
}
Mutant 287 in q.js: "\n" replaced with "\r\n"
Mutant 288 in q.js: "\n" replaced with "\n\r"
Mutant 289 in q.js: "\n" replaced with "\r"
Mutant 290 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 291 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 292 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = undefined; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 293 in q.js: i < lines.length replaced with i <= lines.length
Mutant 294 in q.js: i < lines.length replaced with i > lines.length
Mutant 295 in q.js: i < lines.length replaced with i == lines.length
Mutant 296 in q.js: ++i replaced with i + 1
Mutant 297 in q.js: ++i replaced with i += 1
Mutant 298 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line)
Mutant 299 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) || !isNodeFrame(line)
Mutant 300 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) && isNodeFrame(line)
Mutant 301 in q.js: isInternalFrame replaced with isPromiseAlike
Mutant 302 in q.js: "\n" replaced with " "
Mutant 303 in q.js: "\n" replaced with "\t"
Mutant 304 in q.js: "\n" replaced with "\\n"
Mutant 305 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 306 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 307 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 308 in q.js: "(module.js:" replaced with "(module.js:)"
Mutant 309 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 310 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 311 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 312 in q.js: "(node.js:" replaced with "(node.js:)"
Mutant 313 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 314 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 315 in q.js: stackLine replaced with stackLine.split(":")[1]
Mutant 316 in q.js: attempt1 replaced with attempt1[1] === undefined
Mutant 317 in q.js: attempt1 replaced with attempt1[1] === null
Mutant 318 in q.js: attempt1 replaced with attempt1[1] === undefined || attempt1[1] === null
Mutant 319 in q.js: Number replaced with "string"
Mutant 320 in q.js: Number replaced with null
Mutant 321 in q.js: Number replaced with undefined
Mutant 322 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 323 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 324 in q.js: attempt1[2] replaced with attempt2[2]
Mutant 325 in q.js: stackLine replaced with stackLine.split("at ")[1]
Mutant 326 in q.js: stackLine replaced with stackLine.split("at ")[0]
Mutant 327 in q.js: stackLine replaced with stackLine.split("at ")[2]
Mutant 328 in q.js: attempt2 replaced with attempt2[1]
Mutant 329 in q.js: attempt2 replaced with attempt2[0]
Mutant 330 in q.js: attempt2 replaced with attempt2.length
Mutant 331 in q.js: Number replaced with "1"
Mutant 332 in q.js: Number replaced with "0"
Mutant 333 in q.js: Number replaced with null
Mutant 334 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 335 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 336 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 337 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 338 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 339 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 340 in q.js: attempt3 replaced with attempt3[1]
Mutant 341 in q.js: attempt3 replaced with attempt3[0]
Mutant 342 in q.js: attempt3 replaced with attempt3.length
Mutant 343 in q.js: Number replaced with "1"
Mutant 344 in q.js: Number replaced with "0"
Mutant 345 in q.js: Number replaced with null
Mutant 346 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 347 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 348 in q.js: attempt3[2] replaced with attempt3[4]
Mutant 349 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 350 in q.js: stackLine replaced with stackLine.split(":")[1]
Mutant 351 in q.js: stackLine replaced with stackLine.split(":")[2]
Mutant 352 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 353 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 354 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 355 in q.js: !hasStacks replaced with hasStacks
Mutant 356 in q.js: !hasStacks replaced with hasStacks && typeof console !== "undefined"
Mutant 357 in q.js: "\n" replaced with "\r"
Mutant 358 in q.js: "\n" replaced with "\t"
Mutant 359 in q.js: "\n" replaced with " "
Mutant 360 in q.js: lines[0].indexOf replaced with lines[0].includes
Mutant 361 in q.js: lines[0].indexOf replaced with lines[0].match
Mutant 362 in q.js: "@" replaced with "@filename"
Mutant 363 in q.js: "@" replaced with "@lineNumber"
Mutant 364 in q.js: "@" replaced with "@columnNumber"
Mutant 365 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 366 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[1]
Mutant 367 in q.js: firstLine replaced with firstLine.split(":")[0]
Mutant 368 in q.js: firstLine replaced with firstLine.split(":")[1]
Mutant 369 in q.js: firstLine replaced with firstLine.split(":")[2]
Mutant 370 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 371 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 372 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 373 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn("deprecated")
Mutant 374 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "undefined" && typeof console.warn === "function" && console.warn("deprecated")
Mutant 375 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback)
Mutant 376 in q.js: callback.apply(callback, arguments) replaced with callback.apply(arguments)
Mutant 377 in q.js: callback.apply replaced with callback.call
Mutant 378 in q.js: callback.apply replaced with callback.bind
Mutant 379 in q.js: arguments replaced with []
Mutant 380 in q.js: arguments replaced with null
Mutant 381 in q.js: arguments replaced with undefined
Mutant 382 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 383 in q.js: value instanceof Promise replaced with Object.getPrototypeOf(value) === Promise.prototype
Mutant 384 in q.js: value instanceof Promise replaced with value.isPromise
Mutant 385 in q.js: isPromiseAlike(value) replaced with value !== null
Mutant 386 in q.js: isPromiseAlike(value) replaced with value !== undefined
Mutant 387 in q.js: isPromiseAlike(value) replaced with typeof value === "object"
Mutant 388 in q.js: value replaced with value.then
Mutant 389 in q.js: value replaced with value.then(function (value) {
  return value;
})
Mutant 390 in q.js: value replaced with value.then(function (value) {
  return value.then;
})
Mutant 391 in q.js: value replaced with null
Mutant 392 in q.js: value replaced with undefined
Mutant 393 in q.js: value replaced with 0
Mutant 394 in q.js: fulfill replaced with reject
Mutant 395 in q.js: value replaced with null
Mutant 396 in q.js: value replaced with undefined
Mutant 397 in q.js: value replaced with 0
Mutant 398 in q.js: object_create replaced with null
Mutant 399 in q.js: object_create replaced with undefined
Mutant 400 in q.js: object_create replaced with {}
Mutant 401 in q.js: defer.prototype replaced with defer.prototype.constructor
Mutant 402 in q.js: defer.prototype replaced with defer.prototype.constructor.prototype
Mutant 403 in q.js: object_create replaced with null
Mutant 404 in q.js: object_create replaced with undefined
Mutant 405 in q.js: object_create replaced with {}
Mutant 406 in q.js: Promise.prototype replaced with Object.prototype
Mutant 407 in q.js: Promise.prototype replaced with null
Mutant 408 in q.js: Promise.prototype replaced with undefined
Mutant 409 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 410 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 411 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 412 in q.js: messages replaced with messages.length
Mutant 413 in q.js: messages replaced with messages[0]
Mutant 414 in q.js: messages replaced with messages.slice(1)
Mutant 415 in q.js: args replaced with args[0]
Mutant 416 in q.js: args replaced with args[1]
Mutant 417 in q.js: args replaced with args.slice(1)
Mutant 418 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 419 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 420 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === undefined
Mutant 421 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 422 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 423 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 424 in q.js: operands[1] replaced with operands[0]
Mutant 425 in q.js: operands[1] replaced with operands[2]
Mutant 426 in q.js: operands[1] replaced with null
Mutant 427 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(promise, args))
Mutant 428 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(resolvedPromise, args))
Mutant 429 in q.js: resolvedPromise replaced with undefined
Mutant 430 in q.js: resolvedPromise replaced with null
Mutant 431 in q.js: resolvedPromise replaced with 0
Mutant 432 in q.js: args replaced with []
Mutant 433 in q.js: args replaced with null
Mutant 434 in q.js: args replaced with undefined
Mutant 435 in q.js: messages replaced with messages.length
Mutant 436 in q.js: messages replaced with messages[0]
Mutant 437 in q.js: messages replaced with messages.length > 0
Mutant 438 in q.js: nearer replaced with nearerValue
Mutant 439 in q.js: nearer replaced with undefined
Mutant 440 in q.js: nearer replaced with null
Mutant 441 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 442 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 443 in q.js: resolvedPromise replaced with resolvedPromise.inspect()
Mutant 444 in q.js: isPromise(nearerValue) replaced with nearerValue === value
Mutant 445 in q.js: isPromise(nearerValue) replaced with nearerValue.valueOf() === value.valueOf()
Mutant 446 in q.js: isPromise(nearerValue) replaced with nearerValue.toString() === value.toString()
Mutant 447 in q.js: isPromise replaced with isPromiseAlike
Mutant 448 in q.js: isPromise replaced with isPromiseLike
Mutant 449 in q.js: nearerValue replaced with nearerValue.promise
Mutant 450 in q.js: nearerValue replaced with nearerValue.then(function (value) {
  return value;
})
Mutant 451 in q.js: nearerValue replaced with nearerValue.catch(function (error) {
  throw error;
})
Mutant 452 in q.js: !resolvedPromise replaced with resolvedPromise
Mutant 453 in q.js: !resolvedPromise replaced with resolvedPromise === true
Mutant 454 in q.js: !resolvedPromise replaced with resolvedPromise === false
Mutant 455 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 456 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 457 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 458 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 459 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n").length
Mutant 460 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.match(/\n/g).length
Mutant 461 in q.js: "\n" replaced with "\n\n"
Mutant 462 in q.js: "\n" replaced with "\t"
Mutant 463 in q.js: "\n" replaced with "\\n"
Mutant 464 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 465 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 466 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 467 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[1])
Mutant 468 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.length)
Mutant 469 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 470 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 471 in q.js: newPromise replaced with undefined
Mutant 472 in q.js: newPromise replaced with null
Mutant 473 in q.js: newPromise replaced with 0
Mutant 474 in q.js: message replaced with message[0]
Mutant 475 in q.js: message replaced with message.slice(1)
Mutant 476 in q.js: message replaced with message.concat(message)
Mutant 477 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 478 in q.js: resolvedPromise replaced with resolvedPromise === false
Mutant 479 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 480 in q.js: Q(value) replaced with Q.reject(value)
Mutant 481 in q.js: Q(value) replaced with Q.resolve(value)
Mutant 482 in q.js: Q(value) replaced with Q.resolve(value).then(function () {
  throw new Error("Something went wrong");
})
Mutant 483 in q.js: Q replaced with Q.fulfill
Mutant 484 in q.js: value replaced with undefined
Mutant 485 in q.js: value replaced with null
Mutant 486 in q.js: value replaced with 0
Mutant 487 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 488 in q.js: resolvedPromise replaced with resolvedPromise === false
Mutant 489 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 490 in q.js: fulfill(value) replaced with reject(value)
Mutant 491 in q.js: fulfill(value) replaced with fulfill(undefined)
Mutant 492 in q.js: fulfill(value) replaced with fulfill(null)
Mutant 493 in q.js: fulfill replaced with resolve
Mutant 494 in q.js: fulfill replaced with notify
Mutant 495 in q.js: value replaced with Q.reject("error")
Mutant 496 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 497 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 498 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 499 in q.js: reject(reason) replaced with reject(new Error(reason))
Mutant 500 in q.js: reject(reason) replaced with reject(reason + "!")
Mutant 501 in q.js: reject(reason) replaced with reject(reason.toUpperCase())
Mutant 502 in q.js: reject replaced with undefined
Mutant 503 in q.js: reason replaced with null
Mutant 504 in q.js: reason replaced with undefined
Mutant 505 in q.js: reason replaced with "error"
Mutant 506 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 507 in q.js: resolvedPromise replaced with resolvedPromise.value
Mutant 508 in q.js: resolvedPromise replaced with resolvedPromise.isResolved
Mutant 509 in q.js: progress replaced with progress()
Mutant 510 in q.js: progress replaced with progress(message)
Mutant 511 in q.js: self.reject replaced with deferred.reject
Mutant 512 in q.js: self.reject replaced with promise.reject
Mutant 513 in q.js: error replaced with console.log(error)
Mutant 514 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 515 in q.js: arguments.length > 2 replaced with arguments.length === 1
Mutant 516 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 517 in q.js: self.resolve replaced with self.reject
Mutant 518 in q.js: self.resolve replaced with self.notify
Mutant 519 in q.js: self.resolve replaced with self.fulfill
Mutant 520 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 521 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0, 1)
Mutant 522 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 523 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 524 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 525 in q.js: array_slice replaced with array_reduce
Mutant 526 in q.js: array_slice replaced with array_map
Mutant 527 in q.js: arguments replaced with arguments[0]
Mutant 528 in q.js: arguments replaced with arguments.slice(1)
Mutant 529 in q.js: arguments replaced with arguments.length
Mutant 530 in q.js: 1 replaced with 3
Mutant 531 in q.js: self.resolve replaced with self.reject
Mutant 532 in q.js: self.resolve replaced with self.notify
Mutant 533 in q.js: self.resolve replaced with self.fulfill
Mutant 534 in q.js: value replaced with null
Mutant 535 in q.js: value replaced with undefined
Mutant 536 in q.js: value replaced with 0
Mutant 537 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 538 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "object"
Mutant 539 in q.js: typeof resolver !== "function" replaced with resolver !== Function
Mutant 540 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.reject, deferred.notify)
Mutant 541 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify, deferred.notify, deferred.notify)
Mutant 542 in q.js: deferred.resolve replaced with deferred.reject
Mutant 543 in q.js: deferred.resolve replaced with deferred.notify
Mutant 544 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 545 in q.js: deferred.reject replaced with deferred.resolve
Mutant 546 in q.js: deferred.reject replaced with deferred.notify
Mutant 547 in q.js: deferred.notify replaced with deferred.notify(progress)
Mutant 548 in q.js: deferred.notify replaced with deferred.notify()
Mutant 549 in q.js: deferred.notify replaced with deferred.notify(undefined)
Mutant 550 in q.js: deferred.reject replaced with deferred.resolve
Mutant 551 in q.js: deferred.reject replaced with deferred.notify
Mutant 552 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 553 in q.js: reason replaced with null
Mutant 554 in q.js: reason replaced with undefined
Mutant 555 in q.js: reason replaced with "error"
Mutant 556 in q.js: Q replaced with Q.reject
Mutant 557 in q.js: Q replaced with Q.resolve
Mutant 558 in q.js: Q replaced with Q.all
Mutant 559 in q.js: x replaced with y
Mutant 560 in q.js: x replaced with null
Mutant 561 in q.js: x replaced with undefined
Mutant 562 in q.js: y replaced with x
Mutant 563 in q.js: y replaced with null
Mutant 564 in q.js: Q replaced with Q.all
Mutant 565 in q.js: Q replaced with Q.race
Mutant 566 in q.js: Q replaced with Q.reject
Mutant 567 in q.js: [this, that] replaced with [that, this]
Mutant 568 in q.js: [this, that] replaced with [this, this]
Mutant 569 in q.js: [this, that] replaced with [null, null]
Mutant 570 in q.js: x === y replaced with x == y
Mutant 571 in q.js: x === y replaced with x !== y
Mutant 572 in q.js: x === y replaced with x > y
Mutant 573 in q.js: i < len replaced with i <= len
Mutant 574 in q.js: i < len replaced with i > len
Mutant 575 in q.js: i < len replaced with i == len
Mutant 576 in q.js: i++ replaced with i--
Mutant 577 in q.js: i++ replaced with i += 2
Mutant 578 in q.js: i++ replaced with i = 0
Mutant 579 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 580 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, resolve)
Mutant 581 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve, reject)
Mutant 582 in q.js: Q replaced with Q.reject
Mutant 583 in q.js: Q replaced with Q.resolve
Mutant 584 in q.js: Q replaced with Q.all
Mutant 585 in q.js: answerPs[i] replaced with answerPs[i + 1]
Mutant 586 in q.js: answerPs[i] replaced with answerPs[i - 1]
Mutant 587 in q.js: resolve replaced with reject
Mutant 588 in q.js: reject replaced with resolve
Mutant 589 in q.js: this.then replaced with null
Mutant 590 in q.js: this.then replaced with undefined
Mutant 591 in q.js: this.then replaced with {}
Mutant 592 in q.js: Q.race replaced with Q.reject
Mutant 593 in q.js: Q.race replaced with Q.resolve
Mutant 594 in q.js: Q.race replaced with Q.all
Mutant 595 in q.js: fallback === void 0 replaced with fallback === null
Mutant 596 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 597 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 598 in q.js: inspect === void 0 replaced with typeof inspect !== "function"
Mutant 599 in q.js: inspect === void 0 replaced with inspect === null
Mutant 600 in q.js: object_create replaced with null
Mutant 601 in q.js: object_create replaced with undefined
Mutant 602 in q.js: object_create replaced with {}
Mutant 603 in q.js: Promise.prototype replaced with Object.prototype
Mutant 604 in q.js: Promise.prototype replaced with null
Mutant 605 in q.js: Promise.prototype replaced with undefined
Mutant 606 in q.js: descriptor[op] replaced with descriptor[op]()
Mutant 607 in q.js: descriptor[op] replaced with descriptor[op].bind(descriptor)
Mutant 608 in q.js: descriptor[op] replaced with descriptor[op].call(descriptor)
Mutant 609 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(null)
Mutant 610 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(undefined)
Mutant 611 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply({})
Mutant 612 in q.js: promise replaced with null
Mutant 613 in q.js: promise replaced with undefined
Mutant 614 in q.js: promise replaced with {}
Mutant 615 in q.js: args replaced with null
Mutant 616 in q.js: args replaced with undefined
Mutant 617 in q.js: args replaced with []
Mutant 618 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.promiseDispatch(resolve, op, args))
Mutant 619 in q.js: fallback.call(promise, op, args) replaced with fallback.call(Promise.prototype.promiseDispatch.call(promise, resolve, op, args))
Mutant 620 in q.js: fallback.call(promise, op, args) replaced with fallback.call(Promise.prototype.promiseDispatch.apply(promise, [resolve, op, args]))
Mutant 621 in q.js: promise replaced with null
Mutant 622 in q.js: promise replaced with undefined
Mutant 623 in q.js: promise replaced with {}
Mutant 624 in q.js: op replaced with "when"
Mutant 625 in q.js: op replaced with "then"
Mutant 626 in q.js: op replaced with "catch"
Mutant 627 in q.js: args replaced with null
Mutant 628 in q.js: args replaced with undefined
Mutant 629 in q.js: args replaced with void 0
Mutant 630 in q.js: exception replaced with null
Mutant 631 in q.js: exception replaced with undefined
Mutant 632 in q.js: exception replaced with new Error("PLACEHOLDER")
Mutant 633 in q.js: resolve replaced with reject
Mutant 634 in q.js: resolve replaced with undefined
Mutant 635 in q.js: resolve replaced with reject
Mutant 636 in q.js: result replaced with null
Mutant 637 in q.js: result replaced with undefined
Mutant 638 in q.js: inspect replaced with inspect.state
Mutant 639 in q.js: inspect replaced with inspect.value
Mutant 640 in q.js: inspect replaced with inspect.reason
Mutant 641 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 642 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 643 in q.js: inspected.state === "rejected" replaced with inspected.state === "unknown"
Mutant 644 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 645 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "rejected"
Mutant 646 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 647 in q.js: defer replaced with deferred
Mutant 648 in q.js: defer replaced with deferred.promise
Mutant 649 in q.js: fulfilled replaced with rejected
Mutant 650 in q.js: fulfilled replaced with undefined
Mutant 651 in q.js: fulfilled replaced with null
Mutant 652 in q.js: value replaced with undefined
Mutant 653 in q.js: value replaced with null
Mutant 654 in q.js: value replaced with Q.reject(new Error("something went wrong"))
Mutant 655 in q.js: reject replaced with resolve
Mutant 656 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 657 in q.js: typeof rejected === "function" replaced with typeof rejected !== "undefined"
Mutant 658 in q.js: typeof rejected === "function" replaced with rejected.caller !== null
Mutant 659 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, this)
Mutant 660 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, null)
Mutant 661 in q.js: self replaced with self.promiseDispatch
Mutant 662 in q.js: self replaced with self.promiseDispatch()
Mutant 663 in q.js: self replaced with self.promiseDispatch.bind(self)
Mutant 664 in q.js: rejected replaced with resolve
Mutant 665 in q.js: exception replaced with null
Mutant 666 in q.js: exception replaced with undefined
Mutant 667 in q.js: exception replaced with new Error("PLACEHOLDER")
Mutant 668 in q.js: reject replaced with resolve
Mutant 669 in q.js: reject replaced with resolve
Mutant 670 in q.js: exception replaced with reject(exception)
Mutant 671 in q.js: progressed replaced with null
Mutant 672 in q.js: progressed replaced with undefined
Mutant 673 in q.js: value replaced with null
Mutant 674 in q.js: value replaced with undefined
Mutant 675 in q.js: done replaced with !done
Mutant 676 in q.js: done replaced with done = false
Mutant 677 in q.js: done replaced with done = !done
Mutant 678 in q.js: deferred.resolve replaced with deferred.reject
Mutant 679 in q.js: deferred.resolve replaced with deferred.notify
Mutant 680 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 681 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 682 in q.js: _fulfilled(value) replaced with _fulfilled(reject(value))
Mutant 683 in q.js: value replaced with undefined
Mutant 684 in q.js: value replaced with null
Mutant 685 in q.js: done replaced with !done
Mutant 686 in q.js: done replaced with done && false
Mutant 687 in q.js: done replaced with done || true
Mutant 688 in q.js: deferred.resolve replaced with deferred.reject
Mutant 689 in q.js: deferred.resolve replaced with deferred.notify
Mutant 690 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 691 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 692 in q.js: _rejected(exception) replaced with _rejected(new Error("Test error"))
Mutant 693 in q.js: _rejected replaced with _progressed
Mutant 694 in q.js: exception replaced with exception.message
Mutant 695 in q.js: exception replaced with new Error(exception)
Mutant 696 in q.js: _progressed replaced with _rejected
Mutant 697 in q.js: _progressed replaced with _fulfilled
Mutant 698 in q.js: value replaced with null
Mutant 699 in q.js: value replaced with undefined
Mutant 700 in q.js: Q.onerror replaced with Q.onerror()
Mutant 701 in q.js: e replaced with e.message
Mutant 702 in q.js: e replaced with e.toString()
Mutant 703 in q.js: e replaced with JSON.stringify(e)
Mutant 704 in q.js: !threw replaced with threw
Mutant 705 in q.js: !threw replaced with threw === true
Mutant 706 in q.js: newValue replaced with null
Mutant 707 in q.js: newValue replaced with undefined
Mutant 708 in q.js: promise replaced with Q.reject(new Error("something went wrong"))
Mutant 709 in q.js: promise replaced with Q.resolve(null)
Mutant 710 in q.js: promise replaced with Q.resolve(promise)
Mutant 711 in q.js: callback replaced with function () {
  throw new Error("I'm a bug!");
}
Mutant 712 in q.js: callback replaced with function () {
  return "I'm a bug!";
}
Mutant 713 in q.js: callback replaced with function () {
  return Q.reject("I'm a bug!");
}
Mutant 714 in q.js: Q replaced with Q.fcall
Mutant 715 in q.js: Q replaced with Q.resolve
Mutant 716 in q.js: Q replaced with Q.reject
Mutant 717 in q.js: callback replaced with null
Mutant 718 in q.js: callback replaced with undefined
Mutant 719 in q.js: callback.fcall replaced with callback.fapply
Mutant 720 in q.js: callback.fcall replaced with callback.fbind
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fbind
not replacing callback.fcall with callback.fbind
Mutant 721 in q.js: value replaced with null
Mutant 722 in q.js: value replaced with undefined
Mutant 723 in q.js: value replaced with null
Mutant 724 in q.js: value replaced with undefined
Mutant 725 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 726 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, function () {})
Mutant 727 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, null)
Mutant 728 in q.js: Q replaced with Q.reject
Mutant 729 in q.js: Q replaced with Q.resolve
Mutant 730 in q.js: Q replaced with Q.defer
Mutant 731 in q.js: value replaced with undefined
Mutant 732 in q.js: fulfilled replaced with rejected
Mutant 733 in q.js: fulfilled replaced with undefined
Mutant 734 in q.js: fulfilled replaced with null
Mutant 735 in q.js: rejected replaced with resolved
Mutant 736 in q.js: rejected replaced with undefined
Mutant 737 in q.js: progressed replaced with function () {}
Mutant 738 in q.js: progressed replaced with function (value) {
  throw value;
}
Mutant 739 in q.js: progressed replaced with function (value) {
  return value + 1;
}
Mutant 740 in q.js: function () {
  return value;
} replaced with function () {
  throw value;
}
Mutant 741 in q.js: function () {
  return value;
} replaced with function () {
  return;
}
Mutant 742 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 743 in q.js: Q replaced with Q.reject
Mutant 744 in q.js: Q replaced with Q.resolve
Mutant 745 in q.js: Q replaced with Q.defer
Mutant 746 in q.js: promise replaced with null
Mutant 747 in q.js: promise replaced with undefined
Mutant 748 in q.js: promise replaced with 0
Mutant 749 in q.js: value replaced with null
Mutant 750 in q.js: value replaced with undefined
Mutant 751 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 752 in q.js: function () {
  throw reason;
} replaced with function () {
  return;
}
Mutant 753 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 754 in q.js: promise replaced with null
Mutant 755 in q.js: promise replaced with undefined
Mutant 756 in q.js: promise replaced with 0
Mutant 757 in q.js: reason replaced with null
Mutant 758 in q.js: reason replaced with undefined
Mutant 759 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 760 in q.js: isPromise(value) replaced with isFulfilled(value)
Mutant 761 in q.js: isPromise(value) replaced with isRejected(value)
Mutant 762 in q.js: value replaced with null
Mutant 763 in q.js: value replaced with undefined
Mutant 764 in q.js: value replaced with 0
Mutant 765 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 766 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 767 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "fulfilled" && inspected.value === undefined
Mutant 768 in q.js: isObject replaced with isFunction
Mutant 769 in q.js: isObject replaced with isArray
Mutant 770 in q.js: isObject replaced with isString
Mutant 771 in q.js: object replaced with null
Mutant 772 in q.js: object replaced with undefined
Mutant 773 in q.js: object replaced with {}
Mutant 774 in q.js: isPromise replaced with isPromiseAlike
Mutant 775 in q.js: isPromise replaced with isObject
Mutant 776 in q.js: isPromise replaced with isFunction
Mutant 777 in q.js: object replaced with null
Mutant 778 in q.js: object replaced with undefined
Mutant 779 in q.js: object replaced with {}
Mutant 780 in q.js: object.inspect replaced with object.inspect.state
Mutant 781 in q.js: object.inspect replaced with object.inspect.value
not replacing object.inspect with object.inspect.state
not replacing object.inspect with object.inspect.value
Mutant 782 in q.js: isPromise replaced with !isPromise
Mutant 783 in q.js: isPromise replaced with isPromiseAlike
Mutant 784 in q.js: isPromise replaced with isFulfilled
Mutant 785 in q.js: object replaced with object.inspect().value
Mutant 786 in q.js: object replaced with object.inspect().reason
Mutant 787 in q.js: object replaced with object.inspect().state
Mutant 788 in q.js: this.inspect replaced with this.inspect.state
Mutant 789 in q.js: this.inspect replaced with this.inspect.fulfilled
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.fulfilled
Mutant 790 in q.js: isPromise replaced with isPromiseAlike
Mutant 791 in q.js: isPromise replaced with isFulfilled
Mutant 792 in q.js: isPromise replaced with isRejected
Mutant 793 in q.js: object replaced with null
Mutant 794 in q.js: object replaced with undefined
Mutant 795 in q.js: object replaced with {}
Mutant 796 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 797 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 798 in q.js: !trackUnhandledRejections replaced with true
Mutant 799 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 800 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) > -1
Mutant 801 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise) && unhandledReasons.includes(reason)
Mutant 802 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reason)
Mutant 803 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, promise.reason)
Mutant 804 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, promise)
Mutant 805 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 806 in q.js: array_indexOf replaced with array_includes
Mutant 807 in q.js: array_indexOf replaced with array_findIndex
Mutant 808 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 809 in q.js: unhandledRejections replaced with []
Mutant 810 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason)
Mutant 811 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", promise)
Mutant 812 in q.js: "unhandledRejection" replaced with "rejectionHandled"
Mutant 813 in q.js: "unhandledRejection" replaced with "rejection"
Mutant 814 in q.js: reason replaced with reason.stack
Mutant 815 in q.js: reason replaced with reason.message
Mutant 816 in q.js: reason replaced with null
Mutant 817 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 818 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.shift
Mutant 819 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.unshift
Mutant 820 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 821 in q.js: unhandledRejections.push replaced with unhandledRejections.shift
Mutant 822 in q.js: unhandledRejections.push replaced with unhandledRejections.unshift
Mutant 823 in q.js: promise replaced with null
Mutant 824 in q.js: promise replaced with undefined
Mutant 825 in q.js: promise replaced with promise.then(function () {})
Mutant 826 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 827 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== null
Mutant 828 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined" && reason.stack !== null
Mutant 829 in q.js: reason.stack replaced with reason.stack.slice(0)
Mutant 830 in q.js: reason.stack replaced with reason.stack.slice(1)
Mutant 831 in q.js: reason.stack replaced with reason.stack.slice(0, 1)
Mutant 832 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 833 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 834 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 835 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 836 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length)
Mutant 837 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(promise.length)
Mutant 838 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.indexOf(promise))
Mutant 839 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 840 in q.js: array_indexOf replaced with array_includes
Mutant 841 in q.js: array_indexOf replaced with array_findIndex
Mutant 842 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 843 in q.js: unhandledRejections replaced with unhandledRejections.concat()
Mutant 844 in q.js: unhandledRejections replaced with unhandledRejections.filter(function (rejection) {
  return rejection === promise;
})
Mutant 845 in q.js: promise replaced with promise.then(function () {})
Mutant 846 in q.js: promise replaced with promise.then(function () {}, function () {})
Mutant 847 in q.js: promise replaced with promise.then(function () {}, function (reason) {
  throw reason;
})
Mutant 848 in q.js: at !== -1 replaced with at === -1
Mutant 849 in q.js: at !== -1 replaced with at < -1
Mutant 850 in q.js: at !== -1 replaced with at > -1
Mutant 851 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, reason)
Mutant 852 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, unhandledReasons)
Mutant 853 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 854 in q.js: array_indexOf replaced with array_includes
Mutant 855 in q.js: array_indexOf replaced with array_findIndex
Mutant 856 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 857 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections[0]
Mutant 858 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.slice()
Mutant 859 in q.js: promise replaced with promise.then(function () {})
Mutant 860 in q.js: promise replaced with promise.catch(function () {})
Mutant 861 in q.js: promise replaced with promise.finally(function () {})
Mutant 862 in q.js: atReport !== -1 replaced with atReport === -1
Mutant 863 in q.js: atReport !== -1 replaced with atReport >= 0
Mutant 864 in q.js: atReport !== -1 replaced with atReport < 0
Mutant 865 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at])
Mutant 866 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", promise)
Mutant 867 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 868 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 869 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] = "new reason"
Mutant 870 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 871 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, -1)
Mutant 872 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 2)
Mutant 873 in q.js: atReport replaced with atReport.length - 1
Mutant 874 in q.js: atReport replaced with atReport.length + 1
Mutant 875 in q.js: 1 replaced with 0
Mutant 876 in q.js: 1 replaced with -1
Mutant 877 in q.js: 1 replaced with 2
Mutant 878 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 879 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 880 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 881 in q.js: at replaced with at + 1
Mutant 882 in q.js: at replaced with at - 1
Mutant 883 in q.js: at replaced with at + 2
Mutant 884 in q.js: 1 replaced with 0
Mutant 885 in q.js: 1 replaced with -1
Mutant 886 in q.js: 1 replaced with 2
Mutant 887 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 888 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 889 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 890 in q.js: at replaced with at + 1
Mutant 891 in q.js: at replaced with at - 1
Mutant 892 in q.js: at replaced with at + 2
Mutant 893 in q.js: 1 replaced with 0
Mutant 894 in q.js: 1 replaced with -1
Mutant 895 in q.js: 1 replaced with 2
Mutant 896 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 897 in q.js: resetUnhandledRejections replaced with unhandledReasons.length = 0
Mutant 898 in q.js: rejected replaced with !rejected
Mutant 899 in q.js: rejected replaced with undefined
Mutant 900 in q.js: this replaced with null
Mutant 901 in q.js: this replaced with undefined
Mutant 902 in q.js: this replaced with Promise.reject()
Mutant 903 in q.js: rejected replaced with undefined
Mutant 904 in q.js: rejected replaced with null
Mutant 905 in q.js: reason replaced with null
Mutant 906 in q.js: reason replaced with undefined
Mutant 907 in q.js: reason replaced with "some string"
Mutant 908 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection)
Mutant 909 in q.js: trackRejection(rejection, reason) replaced with trackRejection(reason)
Mutant 910 in q.js: trackRejection replaced with untrackRejection
Mutant 911 in q.js: rejection replaced with null
Mutant 912 in q.js: rejection replaced with undefined
Mutant 913 in q.js: reason replaced with null
Mutant 914 in q.js: reason replaced with undefined
Mutant 915 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 916 in q.js: name === null || name === void 0 replaced with name == null
Mutant 917 in q.js: name === null || name === void 0 replaced with name != null
Mutant 918 in q.js: value.apply(void 0, args) replaced with value.apply(null)
Mutant 919 in q.js: value.apply(void 0, args) replaced with value.apply(undefined)
Mutant 920 in q.js: value.apply(void 0, args) replaced with value.apply(this)
Mutant 921 in q.js: value.apply replaced with value.call
Mutant 922 in q.js: value.apply replaced with value.bind
Mutant 923 in q.js: value.apply replaced with value.toString
Mutant 924 in q.js: void 0 replaced with null
Mutant 925 in q.js: void 0 replaced with undefined
Mutant 926 in q.js: void 0 replaced with this
Mutant 927 in q.js: args replaced with null
Mutant 928 in q.js: args replaced with undefined
Mutant 929 in q.js: args replaced with []
Mutant 930 in q.js: value[name].apply(value, args) replaced with value[name].apply(value)
Mutant 931 in q.js: value[name].apply(value, args) replaced with value[name].apply(args)
Mutant 932 in q.js: value[name].apply(value, args) replaced with value[name].apply(null)
Mutant 933 in q.js: value[name].apply replaced with value[name]
Mutant 934 in q.js: value[name].apply replaced with value[name].call
Mutant 935 in q.js: value[name].apply replaced with value[name].bind
Mutant 936 in q.js: value replaced with null
Mutant 937 in q.js: value replaced with undefined
Mutant 938 in q.js: value replaced with {}
Mutant 939 in q.js: args replaced with null
Mutant 940 in q.js: args replaced with undefined
Mutant 941 in q.js: args replaced with []
Mutant 942 in q.js: value.apply(thisp, args) replaced with value.apply(undefined)
Mutant 943 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 944 in q.js: value.apply replaced with value.call
Mutant 945 in q.js: value.apply replaced with value.bind
Mutant 946 in q.js: value.apply replaced with value.toString
Mutant 947 in q.js: thisp replaced with null
Mutant 948 in q.js: thisp replaced with undefined
Mutant 949 in q.js: thisp replaced with {}
Mutant 950 in q.js: args replaced with null
Mutant 951 in q.js: args replaced with undefined
Mutant 952 in q.js: args replaced with {}
Mutant 953 in q.js: object_keys replaced with object_values
Mutant 954 in q.js: object_keys replaced with Object.keys
Mutant 955 in q.js: value replaced with null
Mutant 956 in q.js: value replaced with undefined
Mutant 957 in q.js: value replaced with {}
Mutant 958 in q.js: defer replaced with deferred
Mutant 959 in q.js: defer replaced with defer.promise
Mutant 960 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(reason))
Mutant 961 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject(reason))
Mutant 962 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify(reason))
Mutant 963 in q.js: deferred.resolve replaced with deferred.reject
Mutant 964 in q.js: deferred.resolve replaced with deferred.notify
Mutant 965 in q.js: deferred.resolve replaced with deferred.resolve(reason)
Mutant 966 in q.js: deferred.reject replaced with deferred.resolve
Mutant 967 in q.js: deferred.reject replaced with deferred.notify
Mutant 968 in q.js: deferred.reject replaced with deferred.reject(new Error(reason))
Mutant 969 in q.js: deferred.notify replaced with deferred.reject
Mutant 970 in q.js: deferred.notify replaced with deferred.resolve
Mutant 971 in q.js: deferred.notify replaced with deferred.throw
Mutant 972 in q.js: deferred.reject replaced with deferred.resolve
Mutant 973 in q.js: deferred.reject replaced with deferred.notify
Mutant 974 in q.js: dispatch(object, op, args) replaced with dispatch(object, op)
Mutant 975 in q.js: dispatch(object, op, args) replaced with dispatch(op, args)
Mutant 976 in q.js: object replaced with null
Mutant 977 in q.js: object replaced with undefined
Mutant 978 in q.js: object replaced with {}
Mutant 979 in q.js: op replaced with null
Mutant 980 in q.js: op replaced with undefined
Mutant 981 in q.js: op replaced with "foo"
Mutant 982 in q.js: args replaced with null
Mutant 983 in q.js: args replaced with undefined
Mutant 984 in q.js: args replaced with []
Mutant 985 in q.js: Q replaced with Q.reject
Mutant 986 in q.js: Q replaced with Q.fulfill
Mutant 987 in q.js: object replaced with null
Mutant 988 in q.js: object replaced with undefined
Mutant 989 in q.js: object replaced with {}
Mutant 990 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 991 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled)
Mutant 992 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected)
Mutant 993 in q.js: Q replaced with Q.reject
Mutant 994 in q.js: Q replaced with Q.resolve
Mutant 995 in q.js: Q replaced with Q.defer
Mutant 996 in q.js: value replaced with null
Mutant 997 in q.js: value replaced with undefined
Mutant 998 in q.js: value replaced with 0
Mutant 999 in q.js: fulfilled replaced with rejected
Mutant 1000 in q.js: fulfilled replaced with undefined
Mutant 1001 in q.js: fulfilled replaced with null
Mutant 1002 in q.js: rejected replaced with fulfilled
Mutant 1003 in q.js: rejected replaced with undefined
Mutant 1004 in q.js: rejected replaced with null
Mutant 1005 in q.js: this.all replaced with this.then
Mutant 1006 in q.js: this.all replaced with this.catch
Mutant 1007 in q.js: this.all replaced with this.finally
not replacing this.all with this.then
not replacing this.all with this.then
not replacing this.all with this.catch
not replacing this.all with this.catch
not replacing this.all with this.finally
not replacing this.all with this.finally
Mutant 1008 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1009 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 1010 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(void 0)
Mutant 1011 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 1012 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 1013 in q.js: void 0 replaced with null
Mutant 1014 in q.js: void 0 replaced with undefined
Mutant 1015 in q.js: void 0 replaced with 0
Mutant 1016 in q.js: array replaced with array.slice()
Mutant 1017 in q.js: array replaced with array.concat()
Mutant 1018 in q.js: array replaced with array.map(function (x) {
  return x;
})
Mutant 1019 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1020 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "object"
Mutant 1021 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "function"
Mutant 1022 in q.js: arg replaced with null
Mutant 1023 in q.js: arg replaced with undefined
Mutant 1024 in q.js: reject replaced with undefined
Mutant 1025 in q.js: exception replaced with exception.message
Mutant 1026 in q.js: exception replaced with exception.stack
Mutant 1027 in q.js: exception replaced with exception.toString()
Mutant 1028 in q.js: result.done replaced with result.value
Mutant 1029 in q.js: result.done replaced with result.value.done
Mutant 1030 in q.js: result.done replaced with result.value.then
Mutant 1031 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1032 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback)
Mutant 1033 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, errback, null)
Mutant 1034 in q.js: when replaced with Q.reject
Mutant 1035 in q.js: when replaced with Q.resolve
Mutant 1036 in q.js: when replaced with Q.defer
Mutant 1037 in q.js: result.value replaced with result.value.then(function (value) {
  return value;
})
Mutant 1038 in q.js: callback replaced with reject
Mutant 1039 in q.js: callback replaced with undefined
Mutant 1040 in q.js: errback replaced with reject
Mutant 1041 in q.js: errback replaced with resolve
Mutant 1042 in q.js: arg replaced with null
Mutant 1043 in q.js: arg replaced with undefined
Mutant 1044 in q.js: arg replaced with "foo"
Mutant 1045 in q.js: isStopIteration(exception) replaced with exception instanceof StopIteration
Mutant 1046 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 1047 in q.js: isStopIteration(exception) replaced with exception.constructor === StopIteration
Mutant 1048 in q.js: exception replaced with exception.value
Mutant 1049 in q.js: exception replaced with exception.message
Mutant 1050 in q.js: exception replaced with exception.stack
Mutant 1051 in q.js: exception.value replaced with exception
Mutant 1052 in q.js: exception.value replaced with exception.message
Mutant 1053 in q.js: exception.value replaced with null
Mutant 1054 in q.js: reject replaced with undefined
Mutant 1055 in q.js: exception replaced with exception.message
Mutant 1056 in q.js: exception replaced with exception.stack
Mutant 1057 in q.js: exception replaced with exception.name
Mutant 1058 in q.js: when(result, callback, errback) replaced with when(result)
Mutant 1059 in q.js: when(result, callback, errback) replaced with when(callback)
Mutant 1060 in q.js: when(result, callback, errback) replaced with when(errback)
Mutant 1061 in q.js: result replaced with result.value
Mutant 1062 in q.js: result replaced with result.then(function (value) {
  return value;
})
Mutant 1063 in q.js: result replaced with result.then(function (value) {
  return value.value;
})
Mutant 1064 in q.js: callback replaced with errback
Mutant 1065 in q.js: callback replaced with reject
Mutant 1066 in q.js: callback replaced with resolve
Mutant 1067 in q.js: errback replaced with reject
Mutant 1068 in q.js: errback replaced with resolve
Mutant 1069 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1070 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1071 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1072 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1073 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1074 in q.js: this replaced with null
Mutant 1075 in q.js: this replaced with undefined
Mutant 1076 in q.js: this replaced with {}
Mutant 1077 in q.js: arguments replaced with []
Mutant 1078 in q.js: arguments replaced with null
Mutant 1079 in q.js: arguments replaced with undefined
Mutant 1080 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1081 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 1082 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1083 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1084 in q.js: continuer replaced with continuer.bind(continuer, "return")
Mutant 1085 in q.js: "next" replaced with "throw"
Mutant 1086 in q.js: "next" replaced with "return"
Mutant 1087 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1088 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw", "error"))
Mutant 1089 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw", "error", "message"))
Mutant 1090 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1091 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1092 in q.js: continuer replaced with continuer.bind(undefined, "throw")
Mutant 1093 in q.js: "throw" replaced with "next"
Mutant 1094 in q.js: "throw" replaced with "return"
Mutant 1095 in q.js: callback replaced with errback
Mutant 1096 in q.js: callback replaced with reject
Mutant 1097 in q.js: Q.done replaced with Q.fail
Mutant 1098 in q.js: Q.done replaced with Q.reject
Mutant 1099 in q.js: Q.done replaced with Q.resolve
Mutant 1100 in q.js: makeGenerator replaced with makeGenerator()
Mutant 1101 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 1102 in q.js: makeGenerator replaced with makeGenerator.apply(this, arguments)
Mutant 1103 in q.js: all replaced with none
Mutant 1104 in q.js: all replaced with some
Mutant 1105 in q.js: all replaced with any
Mutant 1106 in q.js: arguments replaced with []
Mutant 1107 in q.js: arguments replaced with null
Mutant 1108 in q.js: arguments replaced with undefined
Mutant 1109 in q.js: callback.apply(self, args) replaced with callback.apply(self)
Mutant 1110 in q.js: callback.apply(self, args) replaced with callback.apply(args)
Mutant 1111 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 1112 in q.js: callback.apply replaced with callback.call
Mutant 1113 in q.js: callback.apply replaced with callback.bind
Mutant 1114 in q.js: self replaced with null
Mutant 1115 in q.js: self replaced with undefined
Mutant 1116 in q.js: self replaced with {}
Mutant 1117 in q.js: args replaced with args[0]
Mutant 1118 in q.js: args replaced with args.slice(1)
Mutant 1119 in q.js: args replaced with args.concat(args[0])
Mutant 1120 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args[0])
Mutant 1121 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args[1])
Mutant 1122 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args[2])
Mutant 1123 in q.js: Q replaced with Q.reject
Mutant 1124 in q.js: Q replaced with Q.resolve
Mutant 1125 in q.js: Q replaced with Q.defer
Mutant 1126 in q.js: object replaced with null
Mutant 1127 in q.js: object replaced with undefined
Mutant 1128 in q.js: object replaced with {}
Mutant 1129 in q.js: op replaced with op + "d"
Mutant 1130 in q.js: op replaced with op - 1
Mutant 1131 in q.js: op replaced with op * 2
Mutant 1132 in q.js: args replaced with args[0]
Mutant 1133 in q.js: args replaced with args.slice(1)
Mutant 1134 in q.js: args replaced with args.concat(args[0])
Mutant 1135 in q.js: defer replaced with deferred
Mutant 1136 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1137 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.slice(1))
Mutant 1138 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.concat(args))
Mutant 1139 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1140 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1141 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1142 in q.js: op replaced with op + 1
Mutant 1143 in q.js: op replaced with op - 1
Mutant 1144 in q.js: op replaced with op * 2
Mutant 1145 in q.js: args replaced with null
Mutant 1146 in q.js: args replaced with undefined
Mutant 1147 in q.js: args replaced with []
Mutant 1148 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key])
Mutant 1149 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key])
Mutant 1150 in q.js: Q replaced with Q.reject
Mutant 1151 in q.js: Q replaced with Q.defer
Mutant 1152 in q.js: object replaced with null
Mutant 1153 in q.js: object replaced with undefined
Mutant 1154 in q.js: object replaced with {}
Mutant 1155 in q.js: "get" replaced with "set"
Mutant 1156 in q.js: "get" replaced with "post"
Mutant 1157 in q.js: [key] replaced with [key, key]
Mutant 1158 in q.js: [key] replaced with [key, undefined]
Mutant 1159 in q.js: [key] replaced with [undefined, key]
Mutant 1160 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1161 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key])
Mutant 1162 in q.js: "get" replaced with "set"
Mutant 1163 in q.js: "get" replaced with "post"
Mutant 1164 in q.js: [key] replaced with [key, key]
Mutant 1165 in q.js: [key] replaced with [key, undefined]
Mutant 1166 in q.js: [key] replaced with [undefined, key]
Mutant 1167 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1168 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, key])
Mutant 1169 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value])
Mutant 1170 in q.js: Q replaced with Q.reject
Mutant 1171 in q.js: Q replaced with Q.resolve
Mutant 1172 in q.js: Q replaced with Q.defer
Mutant 1173 in q.js: object replaced with null
Mutant 1174 in q.js: object replaced with undefined
Mutant 1175 in q.js: object replaced with {}
Mutant 1176 in q.js: "set" replaced with "get"
Mutant 1177 in q.js: "set" replaced with "post"
Mutant 1178 in q.js: [key, value] replaced with [value, key]
Mutant 1179 in q.js: [key, value] replaced with [key, value, null]
Mutant 1180 in q.js: [key, value] replaced with [key, value, key]
Mutant 1181 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1182 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, key])
Mutant 1183 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [null, value])
Mutant 1184 in q.js: "set" replaced with "get"
Mutant 1185 in q.js: "set" replaced with "post"
Mutant 1186 in q.js: [key, value] replaced with [value, key]
Mutant 1187 in q.js: [key, value] replaced with [key, value, null]
Mutant 1188 in q.js: [key, value] replaced with [key, value, value]
Mutant 1189 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1190 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1191 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, ""])
Mutant 1192 in q.js: Q replaced with Q.reject
Mutant 1193 in q.js: Q replaced with Q.resolve
Mutant 1194 in q.js: Q replaced with Q.defer
Mutant 1195 in q.js: object replaced with {}
Mutant 1196 in q.js: "delete" replaced with "set"
Mutant 1197 in q.js: "delete" replaced with "get"
Mutant 1198 in q.js: "delete" replaced with "post"
Mutant 1199 in q.js: [key] replaced with [key, value]
Mutant 1200 in q.js: [key] replaced with [key, "value"]
Mutant 1201 in q.js: [key] replaced with [key, undefined]
Mutant 1202 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, value])
Mutant 1203 in q.js: "delete" replaced with "remove"
Mutant 1204 in q.js: "delete" replaced with "clear"
Mutant 1205 in q.js: [key] replaced with [key, value]
Mutant 1206 in q.js: [key] replaced with [key, undefined]
Mutant 1207 in q.js: [key] replaced with [undefined, value]
Mutant 1208 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1209 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args, null])
Mutant 1210 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args, "foo"])
Mutant 1211 in q.js: Q replaced with Q.reject
Mutant 1212 in q.js: Q replaced with Q.resolve
Mutant 1213 in q.js: Q replaced with Q.defer
Mutant 1214 in q.js: object replaced with undefined
Mutant 1215 in q.js: object replaced with {}
Mutant 1216 in q.js: "post" replaced with "get"
Mutant 1217 in q.js: "post" replaced with "set"
Mutant 1218 in q.js: [name, args] replaced with [name, args, 1]
Mutant 1219 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1220 in q.js: [name, args] replaced with [name, args.concat(1)]
Mutant 1221 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1222 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args, null])
Mutant 1223 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args, args])
Mutant 1224 in q.js: "post" replaced with "get"
Mutant 1225 in q.js: "post" replaced with "set"
Mutant 1226 in q.js: [name, args] replaced with [name, args, 1]
Mutant 1227 in q.js: [name, args] replaced with [name, args, undefined]
Mutant 1228 in q.js: [name, args] replaced with [name, args, null]
Mutant 1229 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1230 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1231 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1232 in q.js: Q replaced with Q.reject
Mutant 1233 in q.js: Q replaced with Q.resolve
Mutant 1234 in q.js: Q replaced with Q.defer
Mutant 1235 in q.js: object replaced with null
Mutant 1236 in q.js: object replaced with undefined
Mutant 1237 in q.js: object replaced with {}
Mutant 1238 in q.js: "post" replaced with "get"
Mutant 1239 in q.js: "post" replaced with "set"
Mutant 1240 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1241 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1242 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 2, 1)]
Mutant 1243 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1244 in q.js: arguments replaced with null
Mutant 1245 in q.js: arguments replaced with undefined
Mutant 1246 in q.js: arguments replaced with []
Mutant 1247 in q.js: 2 replaced with 0
Mutant 1248 in q.js: 2 replaced with -1
Mutant 1249 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1250 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1251 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, -1)])
Mutant 1252 in q.js: this.dispatch replaced with Q.dispatch
Mutant 1253 in q.js: this.dispatch replaced with Promise.prototype.dispatch
Mutant 1254 in q.js: "post" replaced with "get"
Mutant 1255 in q.js: "post" replaced with "set"
Mutant 1256 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1257 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, 2)]
Mutant 1258 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, -1)]
Mutant 1259 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1260 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1261 in q.js: arguments replaced with null
Mutant 1262 in q.js: arguments replaced with undefined
Mutant 1263 in q.js: arguments replaced with 0
Mutant 1264 in q.js: 1 replaced with 0
Mutant 1265 in q.js: 1 replaced with arguments.length - 1
Mutant 1266 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [args])
Mutant 1267 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [args, void 0])
Mutant 1268 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, args, void 0])
Mutant 1269 in q.js: Q replaced with Q.reject
Mutant 1270 in q.js: Q replaced with Q.resolve
Mutant 1271 in q.js: Q replaced with Q.notify
Mutant 1272 in q.js: object replaced with null
Mutant 1273 in q.js: object replaced with undefined
Mutant 1274 in q.js: object replaced with function () {}
Mutant 1275 in q.js: "apply" replaced with "call"
Mutant 1276 in q.js: "apply" replaced with "bind"
Mutant 1277 in q.js: [void 0, args] replaced with [void 0, args, args]
Mutant 1278 in q.js: [void 0, args] replaced with [void 0, args, null]
Mutant 1279 in q.js: [void 0, args] replaced with [void 0, args, undefined]
Mutant 1280 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args])
Mutant 1281 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, args, 1])
Mutant 1282 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, args, "foo"])
Mutant 1283 in q.js: "apply" replaced with "call"
Mutant 1284 in q.js: "apply" replaced with "bind"
Mutant 1285 in q.js: [void 0, args] replaced with [void 0, args, void 0]
Mutant 1286 in q.js: [void 0, args] replaced with [void 0, args, void 0, void 0]
Mutant 1287 in q.js: [void 0, args] replaced with [void 0, args, void 0, void 0, void 0]
Mutant 1288 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [this, array_slice(arguments, 1)])
Mutant 1289 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1290 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [void 0, array_slice(arguments, 1)])
Mutant 1291 in q.js: Q replaced with Q.reject
Mutant 1292 in q.js: Q replaced with Q.resolve
Mutant 1293 in q.js: Q replaced with Q.defer
Mutant 1294 in q.js: object replaced with null
Mutant 1295 in q.js: object replaced with undefined
Mutant 1296 in q.js: "apply" replaced with "call"
Mutant 1297 in q.js: "apply" replaced with "bind"
Mutant 1298 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1299 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 0, 1)]
Mutant 1300 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, 2)]
Mutant 1301 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1302 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1303 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1304 in q.js: 1 replaced with -1
Mutant 1305 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, array_slice(arguments)])
Mutant 1306 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1307 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("call", [void 0, array_slice(arguments)])
Mutant 1308 in q.js: "apply" replaced with "call"
Mutant 1309 in q.js: "apply" replaced with "bind"
Mutant 1310 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1311 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1312 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 3)]
Mutant 1313 in q.js: object replaced with null
Mutant 1314 in q.js: object replaced with undefined
Mutant 1315 in q.js: object replaced with {}
Mutant 1316 in q.js: array_slice(arguments, 1) replaced with array_slice(args.concat(array_slice(arguments, 1)))
Mutant 1317 in q.js: array_slice(arguments, 1) replaced with array_slice(args.concat(array_slice(arguments, 2)))
Mutant 1318 in q.js: array_slice(arguments, 1) replaced with array_slice(args.concat(array_slice(arguments, 3)))
Mutant 1319 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1320 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1321 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1322 in q.js: 1 replaced with 0
Mutant 1323 in q.js: 1 replaced with 2
Mutant 1324 in q.js: 1 replaced with null
Mutant 1325 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1326 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1327 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1328 in q.js: arguments replaced with null
Mutant 1329 in q.js: arguments replaced with undefined
Mutant 1330 in q.js: arguments replaced with []
Mutant 1331 in q.js: arguments replaced with args
Mutant 1332 in q.js: arguments replaced with this.arguments
Mutant 1333 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1334 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1335 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1336 in q.js: arguments replaced with []
Mutant 1337 in q.js: arguments replaced with null
Mutant 1338 in q.js: arguments replaced with undefined
Mutant 1339 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1, 2, 3])
Mutant 1340 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", "foo")
Mutant 1341 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", null)
Mutant 1342 in q.js: Q replaced with Q.reject
Mutant 1343 in q.js: Q replaced with Q.resolve
Mutant 1344 in q.js: Q replaced with Q.defer
Mutant 1345 in q.js: object replaced with undefined
Mutant 1346 in q.js: object replaced with {}
Mutant 1347 in q.js: "keys" replaced with "values"
Mutant 1348 in q.js: "keys" replaced with "entries"
Mutant 1349 in q.js: "keys" replaced with "hasOwnProperty"
Mutant 1350 in q.js: [] replaced with [1]
Mutant 1351 in q.js: [] replaced with [1, 2, 3]
Mutant 1352 in q.js: [] replaced with null
Mutant 1353 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1354 in q.js: this.dispatch("keys", []) replaced with this.dispatch("entries", [])
Mutant 1355 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", [])
Mutant 1356 in q.js: "keys" replaced with "values"
Mutant 1357 in q.js: "keys" replaced with "length"
Mutant 1358 in q.js: "keys" replaced with "toString"
Mutant 1359 in q.js: [] replaced with [1]
Mutant 1360 in q.js: [] replaced with [1, 2, 3]
Mutant 1361 in q.js: [] replaced with null
Mutant 1362 in q.js: defer replaced with deferred
Mutant 1363 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "fulfilled"
Mutant 1364 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1365 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1366 in q.js: promise.inspect replaced with promise.inspect.value
Mutant 1367 in q.js: promise.inspect replaced with promise.inspect.state
Mutant 1368 in q.js: --pendingCount === 0 replaced with pendingCount === 0
Mutant 1369 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1370 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1371 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1372 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1373 in q.js: deferred.resolve replaced with undefined
Mutant 1374 in q.js: promises replaced with promises.slice(1)
Mutant 1375 in q.js: promises replaced with promises.concat([null])
Mutant 1376 in q.js: promises replaced with promises.map(function (promise) {
  return promise.then(function (value) {
    return value + 1;
  });
})
Mutant 1377 in q.js: deferred.notify replaced with deferred.reject
Mutant 1378 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1379 in q.js: deferred.notify replaced with deferred.progress
Mutant 1380 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress + 1
}
Mutant 1381 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress - 1
}
Mutant 1382 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress * 2
}
Mutant 1383 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1384 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1385 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1386 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1387 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1388 in q.js: promises replaced with []
Mutant 1389 in q.js: promises replaced with null
Mutant 1390 in q.js: promises replaced with undefined
Mutant 1391 in q.js: all replaced with any
Mutant 1392 in q.js: all replaced with allSettled
Mutant 1393 in q.js: all replaced with allResolved
Mutant 1394 in q.js: this replaced with null
Mutant 1395 in q.js: this replaced with undefined
Mutant 1396 in q.js: this replaced with []
Mutant 1397 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1398 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1399 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1400 in q.js: Q.resolve replaced with Q.reject
Mutant 1401 in q.js: Q.resolve replaced with Q.defer
Mutant 1402 in q.js: Q.resolve replaced with Q.when
Mutant 1403 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1404 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected))
Mutant 1405 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled))
Mutant 1406 in q.js: promise replaced with promise.then(onFulfilled, onRejected)
Mutant 1407 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected)
Mutant 1408 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected).then(onFulfilled, onRejected)
Mutant 1409 in q.js: onFulfilled replaced with onRejected
Mutant 1410 in q.js: onFulfilled replaced with onProgress
Mutant 1411 in q.js: onFulfilled replaced with noop
Mutant 1412 in q.js: onRejected replaced with onFulfilled
Mutant 1413 in q.js: onRejected replaced with onProgress
Mutant 1414 in q.js: onProgress replaced with onRejected
Mutant 1415 in q.js: onProgress replaced with onFulfilled
Mutant 1416 in q.js: onProgress replaced with noop
Mutant 1417 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1418 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1419 in q.js: result replaced with promise
Mutant 1420 in q.js: result replaced with undefined
Mutant 1421 in q.js: result replaced with null
Mutant 1422 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1423 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1424 in q.js: pendingCount === 0 replaced with pendingCount === 1
Mutant 1425 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1426 in q.js: deferred.reject replaced with deferred.notify
Mutant 1427 in q.js: rejection replaced with rejection.message
Mutant 1428 in q.js: rejection replaced with new Error(rejection)
Mutant 1429 in q.js: rejection replaced with rejection.stack
Mutant 1430 in q.js: any replaced with all
Mutant 1431 in q.js: any replaced with none
Mutant 1432 in q.js: any replaced with some
Mutant 1433 in q.js: this replaced with null
Mutant 1434 in q.js: this replaced with undefined
Mutant 1435 in q.js: this replaced with Promise.reject()
Mutant 1436 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allSettled, "allSettled", "allResolved")
Mutant 1437 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allSettled", "allResolved")
Mutant 1438 in q.js: allResolved replaced with allSettled
Mutant 1439 in q.js: allResolved replaced with any
Mutant 1440 in q.js: "allResolved" replaced with "allSettled"
Mutant 1441 in q.js: "allResolved" replaced with "any"
Mutant 1442 in q.js: "allResolved" replaced with "all"
Mutant 1443 in q.js: "allSettled" replaced with "all"
Mutant 1444 in q.js: "allSettled" replaced with "any"
Mutant 1445 in q.js: "allSettled" replaced with "none"
Mutant 1446 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1447 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve)
Mutant 1448 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.defer)
Mutant 1449 in q.js: array_map replaced with array_filter
Mutant 1450 in q.js: array_map replaced with array_reduce
Mutant 1451 in q.js: array_map replaced with array_forEach
Mutant 1452 in q.js: promises replaced with promises.slice()
Mutant 1453 in q.js: promises replaced with promises.concat()
Mutant 1454 in q.js: promises replaced with promises.splice(index, 1, value)
Mutant 1455 in q.js: Q replaced with Q.reject
Mutant 1456 in q.js: Q replaced with Q.resolve
Mutant 1457 in q.js: Q replaced with Q.defer
Mutant 1458 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1459 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop))
Mutant 1460 in q.js: promise replaced with null
Mutant 1461 in q.js: promise replaced with undefined
Mutant 1462 in q.js: promise replaced with Q.reject()
Mutant 1463 in q.js: allResolved replaced with allSettled
Mutant 1464 in q.js: allResolved replaced with any
Mutant 1465 in q.js: this replaced with null
Mutant 1466 in q.js: this replaced with undefined
Mutant 1467 in q.js: this replaced with {}
Mutant 1468 in q.js: Q replaced with Q.reject
Mutant 1469 in q.js: Q replaced with Q.resolve
Mutant 1470 in q.js: Q replaced with Q.defer
Mutant 1471 in q.js: promises replaced with promises.slice(1)
Mutant 1472 in q.js: promises replaced with promises.concat(Q.reject())
Mutant 1473 in q.js: promises replaced with promises.map(function (promise) {
  return Q.reject(promise.inspect());
})
Mutant 1474 in q.js: Q replaced with Q.reject
Mutant 1475 in q.js: Q replaced with Q.resolve
Mutant 1476 in q.js: Q replaced with Q.defer
Mutant 1477 in q.js: promise replaced with null
Mutant 1478 in q.js: promise replaced with undefined
Mutant 1479 in q.js: promise replaced with 0
Mutant 1480 in q.js: regardless replaced with rejected
Mutant 1481 in q.js: regardless replaced with fulfilled
Mutant 1482 in q.js: regardless replaced with noop
Mutant 1483 in q.js: regardless replaced with regardless()
Mutant 1484 in q.js: regardless replaced with regardless.call()
Mutant 1485 in q.js: regardless replaced with regardless.apply()
Mutant 1486 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, void 0)
Mutant 1487 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, void 0)
Mutant 1488 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, rejected)
Mutant 1489 in q.js: Q replaced with Q.reject
Mutant 1490 in q.js: Q replaced with Q.resolve
Mutant 1491 in q.js: Q replaced with Q.defer
Mutant 1492 in q.js: object replaced with null
Mutant 1493 in q.js: object replaced with undefined
Mutant 1494 in q.js: void 0 replaced with null
Mutant 1495 in q.js: void 0 replaced with undefined
Mutant 1496 in q.js: rejected replaced with function (err) {
  throw err;
}
Mutant 1497 in q.js: rejected replaced with function (err) {
  return err;
}
Mutant 1498 in q.js: rejected replaced with function (err) {
  return Q.reject(err);
}
Mutant 1499 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1500 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1501 in q.js: void 0 replaced with null
Mutant 1502 in q.js: void 0 replaced with undefined
Mutant 1503 in q.js: rejected replaced with resolved
Mutant 1504 in q.js: rejected replaced with rejected.then(function () {
  throw new Error("rejected");
})
Mutant 1505 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, progressed, void 0)
Mutant 1506 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(progressed, void 0, void 0)
Mutant 1507 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, void 0, void 0)
Mutant 1508 in q.js: object replaced with null
Mutant 1509 in q.js: object replaced with undefined
Mutant 1510 in q.js: object replaced with Q.reject("error")
Mutant 1511 in q.js: void 0 replaced with null
Mutant 1512 in q.js: void 0 replaced with undefined
Mutant 1513 in q.js: void 0 replaced with "foo"
Mutant 1514 in q.js: void 0 replaced with null
Mutant 1515 in q.js: void 0 replaced with undefined
Mutant 1516 in q.js: void 0 replaced with "foo"
Mutant 1517 in q.js: progressed replaced with function (value) {
  return value;
}
Mutant 1518 in q.js: progressed replaced with function (value) {
  throw new Error("Progress is not supported");
}
Mutant 1519 in q.js: progressed replaced with function (value) {
  return value + 1;
}
Mutant 1520 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1521 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1522 in q.js: void 0 replaced with null
Mutant 1523 in q.js: void 0 replaced with undefined
Mutant 1524 in q.js: void 0 replaced with "foo"
Mutant 1525 in q.js: void 0 replaced with null
Mutant 1526 in q.js: void 0 replaced with undefined
Mutant 1527 in q.js: void 0 replaced with "foo"
Mutant 1528 in q.js: progressed replaced with null
Mutant 1529 in q.js: progressed replaced with undefined
Mutant 1530 in q.js: progressed replaced with () => {}
Mutant 1531 in q.js: Q replaced with Q.reject
Mutant 1532 in q.js: Q replaced with Q.resolve
Mutant 1533 in q.js: Q replaced with Q.defer
Mutant 1534 in q.js: object replaced with null
Mutant 1535 in q.js: object replaced with undefined
Mutant 1536 in q.js: callback replaced with null
Mutant 1537 in q.js: callback replaced with undefined
Mutant 1538 in q.js: callback replaced with () => {}
Mutant 1539 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply === void 0
Mutant 1540 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply === null
Mutant 1541 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply === undefined
Mutant 1542 in q.js: Q replaced with Q.reject
Mutant 1543 in q.js: Q replaced with Q.resolve
Mutant 1544 in q.js: Q replaced with Q.defer
Mutant 1545 in q.js: callback replaced with null
Mutant 1546 in q.js: callback replaced with undefined
Mutant 1547 in q.js: callback replaced with 0
Mutant 1548 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1549 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, null)
Mutant 1550 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress, undefined)
Mutant 1551 in q.js: Q replaced with Q.reject
Mutant 1552 in q.js: Q replaced with Q.resolve
Mutant 1553 in q.js: Q replaced with Q.defer
Mutant 1554 in q.js: object replaced with {}
Mutant 1555 in q.js: fulfilled replaced with rejected
Mutant 1556 in q.js: fulfilled replaced with progressed
Mutant 1557 in q.js: fulfilled replaced with void 0
Mutant 1558 in q.js: rejected replaced with fulfilled
Mutant 1559 in q.js: rejected replaced with progress
Mutant 1560 in q.js: rejected replaced with void 0
Mutant 1561 in q.js: progress replaced with null
Mutant 1562 in q.js: progress replaced with undefined
Mutant 1563 in q.js: progress replaced with function () {}
Mutant 1564 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error)
Mutant 1565 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise)
Mutant 1566 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected)
Mutant 1567 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(rejected, fulfilled, progress)
Mutant 1568 in q.js: fulfilled replaced with rejected
Mutant 1569 in q.js: fulfilled replaced with undefined
Mutant 1570 in q.js: fulfilled replaced with null
Mutant 1571 in q.js: rejected replaced with resolved
Mutant 1572 in q.js: rejected replaced with undefined
Mutant 1573 in q.js: progress replaced with null
Mutant 1574 in q.js: progress replaced with undefined
Mutant 1575 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1576 in q.js: onUnhandledError replaced with onUnhandledError.bind(undefined)
Mutant 1577 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, void 0)
Mutant 1578 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(void 0, onUnhandledError, void 0)
Mutant 1579 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, void 0, void 0)
Mutant 1580 in q.js: void 0 replaced with null
Mutant 1581 in q.js: void 0 replaced with undefined
Mutant 1582 in q.js: void 0 replaced with "foo"
Mutant 1583 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1584 in q.js: onUnhandledError replaced with null
Mutant 1585 in q.js: onUnhandledError replaced with function () {}
Mutant 1586 in q.js: Q replaced with Q.reject
Mutant 1587 in q.js: Q replaced with Q.resolve
Mutant 1588 in q.js: Q replaced with Q.defer
Mutant 1589 in q.js: object replaced with null
Mutant 1590 in q.js: object replaced with undefined
Mutant 1591 in q.js: object replaced with Q.reject(new Error("error"))
Mutant 1592 in q.js: ms replaced with 0
Mutant 1593 in q.js: ms replaced with null
Mutant 1594 in q.js: ms replaced with undefined
Mutant 1595 in q.js: error replaced with null
Mutant 1596 in q.js: error replaced with undefined
Mutant 1597 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1598 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1599 in q.js: !error || "string" === typeof error replaced with error && "string" !== typeof error
Mutant 1600 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1601 in q.js: deferred.reject replaced with deferred.notify
Mutant 1602 in q.js: error replaced with null
Mutant 1603 in q.js: error replaced with undefined
Mutant 1604 in q.js: error replaced with "error"
Mutant 1605 in q.js: clearTimeout replaced with clearInterval
Mutant 1606 in q.js: clearTimeout replaced with null
Mutant 1607 in q.js: timeoutId replaced with null
Mutant 1608 in q.js: timeoutId replaced with undefined
Mutant 1609 in q.js: timeoutId replaced with 0
Mutant 1610 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1611 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1612 in q.js: deferred.resolve replaced with undefined
Mutant 1613 in q.js: value replaced with null
Mutant 1614 in q.js: value replaced with undefined
Mutant 1615 in q.js: clearTimeout replaced with clearInterval
Mutant 1616 in q.js: timeoutId replaced with null
Mutant 1617 in q.js: timeoutId replaced with undefined
Mutant 1618 in q.js: timeoutId replaced with 0
Mutant 1619 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1620 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1621 in q.js: timeout === void 0 replaced with timeout === 0
Mutant 1622 in q.js: timeout === void 0 replaced with timeout < 0
Mutant 1623 in q.js: Q replaced with Q.reject
Mutant 1624 in q.js: Q replaced with Q.resolve
Mutant 1625 in q.js: Q replaced with Q.defer
Mutant 1626 in q.js: object replaced with null
Mutant 1627 in q.js: object replaced with undefined
Mutant 1628 in q.js: object replaced with 42
Mutant 1629 in q.js: timeout replaced with 0
Mutant 1630 in q.js: timeout replaced with -1
Mutant 1631 in q.js: timeout replaced with null
Mutant 1632 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1633 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1634 in q.js: value replaced with undefined
Mutant 1635 in q.js: value replaced with null
Mutant 1636 in q.js: Q replaced with Q.reject
Mutant 1637 in q.js: Q replaced with Q.resolve
Mutant 1638 in q.js: Q replaced with Q.defer
Mutant 1639 in q.js: callback replaced with null
Mutant 1640 in q.js: callback replaced with undefined
Mutant 1641 in q.js: callback replaced with function () {}
Mutant 1642 in q.js: args replaced with null
Mutant 1643 in q.js: args replaced with undefined
Mutant 1644 in q.js: args replaced with []
Mutant 1645 in q.js: args replaced with null
Mutant 1646 in q.js: args replaced with undefined
Mutant 1647 in q.js: args replaced with []
Mutant 1648 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1649 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1650 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1651 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1652 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1653 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.resolve)
Mutant 1654 in q.js: this.fapply replaced with Q.fapply
Mutant 1655 in q.js: this.fapply replaced with this.nfapply
not replacing this.fapply with Q.fapply
not replacing this.fapply with Q.fapply
not replacing this.fapply with this.nfapply
not replacing this.fapply with this.nfapply
Mutant 1656 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1657 in q.js: nodeArgs replaced with nodeArgs.concat(deferred.makeNodeResolver())
Mutant 1658 in q.js: nodeArgs replaced with nodeArgs.push(deferred.makeNodeResolver())
Mutant 1659 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1660 in q.js: deferred.reject replaced with null
Mutant 1661 in q.js: deferred.reject replaced with undefined
Mutant 1662 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1663 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 3))
Mutant 1664 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 0, 2))
Mutant 1665 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1666 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1667 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1668 in q.js: 1 replaced with 0
Mutant 1669 in q.js: 1 replaced with 2
Mutant 1670 in q.js: 1 replaced with null
Mutant 1671 in q.js: callback replaced with null
Mutant 1672 in q.js: callback replaced with undefined
Mutant 1673 in q.js: callback replaced with function () {}
Mutant 1674 in q.js: args replaced with null
Mutant 1675 in q.js: args replaced with undefined
Mutant 1676 in q.js: args replaced with []
Mutant 1677 in q.js: arguments replaced with null
Mutant 1678 in q.js: arguments replaced with undefined
Mutant 1679 in q.js: arguments replaced with []
Mutant 1680 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1681 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1682 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1683 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1684 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1685 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.resolve)
Mutant 1686 in q.js: nodeArgs replaced with nodeArgs.slice(0)
Mutant 1687 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1688 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1689 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1690 in q.js: deferred.reject replaced with null
Mutant 1691 in q.js: deferred.reject replaced with undefined
Mutant 1692 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1693 in q.js: callback === undefined replaced with callback !== null
Mutant 1694 in q.js: callback === undefined replaced with callback !== "undefined"
Mutant 1695 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1696 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1697 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1698 in q.js: arguments replaced with null
Mutant 1699 in q.js: arguments replaced with undefined
Mutant 1700 in q.js: arguments replaced with []
Mutant 1701 in q.js: 1 replaced with 0
Mutant 1702 in q.js: 1 replaced with 2
Mutant 1703 in q.js: 1 replaced with null
Mutant 1704 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1705 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1706 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1707 in q.js: arguments replaced with null
Mutant 1708 in q.js: arguments replaced with undefined
Mutant 1709 in q.js: arguments replaced with []
Mutant 1710 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1711 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1712 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1713 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1714 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1715 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1716 in q.js: Q replaced with Q.fapply
Mutant 1717 in q.js: Q replaced with Q.nfapply
Mutant 1718 in q.js: Q replaced with Q.denodeify
Mutant 1719 in q.js: callback replaced with undefined
Mutant 1720 in q.js: callback replaced with null
Mutant 1721 in q.js: callback replaced with function () {}
Mutant 1722 in q.js: nodeArgs replaced with null
Mutant 1723 in q.js: nodeArgs replaced with undefined
Mutant 1724 in q.js: nodeArgs replaced with []
Mutant 1725 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1726 in q.js: deferred.reject replaced with deferred.notify
Mutant 1727 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1728 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1729 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1730 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1731 in q.js: args.unshift replaced with args.push
Mutant 1732 in q.js: args.unshift replaced with args.shift
Mutant 1733 in q.js: args.unshift replaced with args.pop
Mutant 1734 in q.js: this replaced with null
Mutant 1735 in q.js: this replaced with undefined
Mutant 1736 in q.js: this replaced with function () {}
Mutant 1737 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this)
Mutant 1738 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1739 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined)
Mutant 1740 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1741 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1742 in q.js: void 0 replaced with null
Mutant 1743 in q.js: void 0 replaced with undefined
Mutant 1744 in q.js: void 0 replaced with 0
Mutant 1745 in q.js: args replaced with args.slice(1)
Mutant 1746 in q.js: args replaced with args.concat(args)
Mutant 1747 in q.js: args replaced with args.reverse()
Mutant 1748 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1749 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1750 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 4)
Mutant 1751 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1752 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1753 in q.js: arguments replaced with array_slice(arguments, 0)
Mutant 1754 in q.js: 2 replaced with 1
Mutant 1755 in q.js: 2 replaced with 3
Mutant 1756 in q.js: 2 replaced with 0
Mutant 1757 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1758 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1759 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1760 in q.js: arguments replaced with null
Mutant 1761 in q.js: arguments replaced with undefined
Mutant 1762 in q.js: arguments replaced with []
Mutant 1763 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1764 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1765 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1766 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1767 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1768 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err, result) {})
Mutant 1769 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(this)
Mutant 1770 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(arguments)
Mutant 1771 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(null)
Mutant 1772 in q.js: callback.apply replaced with callback.call
Mutant 1773 in q.js: callback.apply replaced with callback.bind
Mutant 1774 in q.js: thisp replaced with null
Mutant 1775 in q.js: thisp replaced with undefined
Mutant 1776 in q.js: thisp replaced with {}
Mutant 1777 in q.js: arguments replaced with null
Mutant 1778 in q.js: arguments replaced with undefined
Mutant 1779 in q.js: arguments replaced with []
Mutant 1780 in q.js: Q replaced with Q.delay
Mutant 1781 in q.js: Q replaced with Q.reject
Mutant 1782 in q.js: Q replaced with Q.defer
Mutant 1783 in q.js: bound replaced with null
Mutant 1784 in q.js: bound replaced with undefined
Mutant 1785 in q.js: bound replaced with function () {}
Mutant 1786 in q.js: nodeArgs replaced with nodeArgs.slice(0)
Mutant 1787 in q.js: nodeArgs replaced with nodeArgs.concat()
Mutant 1788 in q.js: nodeArgs replaced with nodeArgs.splice(0)
Mutant 1789 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1790 in q.js: deferred.reject replaced with null
Mutant 1791 in q.js: deferred.reject replaced with undefined
Mutant 1792 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1793 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 2)
Mutant 1794 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 3)
Mutant 1795 in q.js: arguments replaced with null
Mutant 1796 in q.js: arguments replaced with undefined
Mutant 1797 in q.js: arguments replaced with []
Mutant 1798 in q.js: 0 replaced with 1
Mutant 1799 in q.js: 0 replaced with 2
Mutant 1800 in q.js: 0 replaced with 3
Mutant 1801 in q.js: args.unshift replaced with args.push
Mutant 1802 in q.js: args.unshift replaced with args.shift
Mutant 1803 in q.js: args.unshift replaced with args.pop
Mutant 1804 in q.js: this replaced with null
Mutant 1805 in q.js: this replaced with undefined
Mutant 1806 in q.js: this replaced with 0
Mutant 1807 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null)
Mutant 1808 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined)
Mutant 1809 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this)
Mutant 1810 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1811 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1812 in q.js: void 0 replaced with null
Mutant 1813 in q.js: void 0 replaced with undefined
Mutant 1814 in q.js: void 0 replaced with 0
Mutant 1815 in q.js: args replaced with args.slice(1)
Mutant 1816 in q.js: args replaced with args.concat([])
Mutant 1817 in q.js: args replaced with args.filter(function () {
  return true;
})
Mutant 1818 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1819 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat(args))
Mutant 1820 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.reverse())
Mutant 1821 in q.js: Q replaced with Q.reject
Mutant 1822 in q.js: Q replaced with Q.resolve
Mutant 1823 in q.js: Q replaced with Q.defer
Mutant 1824 in q.js: object replaced with null
Mutant 1825 in q.js: object replaced with undefined
Mutant 1826 in q.js: object replaced with {}
Mutant 1827 in q.js: name replaced with "name"
Mutant 1828 in q.js: name replaced with name + "foo"
Mutant 1829 in q.js: name replaced with name.toUpperCase()
Mutant 1830 in q.js: args replaced with null
Mutant 1831 in q.js: args replaced with undefined
Mutant 1832 in q.js: args replaced with []
Mutant 1833 in q.js: args || [] replaced with null
Mutant 1834 in q.js: args || [] replaced with undefined
Mutant 1835 in q.js: args || [] replaced with []
Mutant 1836 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1837 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1838 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1839 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1840 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1841 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1842 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1843 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
Mutant 1844 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1845 in q.js: this.dispatch replaced with this.post
Mutant 1846 in q.js: this.dispatch replaced with this.send
not replacing this.dispatch with this.post
not replacing this.dispatch with this.post
not replacing this.dispatch with this.send
not replacing this.dispatch with this.send
Mutant 1847 in q.js: "post" replaced with "get"
Mutant 1848 in q.js: "post" replaced with "put"
Mutant 1849 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, deferred.makeNodeResolver()]
Mutant 1850 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, function () {}]
Mutant 1851 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1852 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1853 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1854 in q.js: deferred.reject replaced with null
Mutant 1855 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1856 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1857 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1858 in q.js: arguments replaced with null
Mutant 1859 in q.js: arguments replaced with undefined
Mutant 1860 in q.js: arguments replaced with []
Mutant 1861 in q.js: 2 replaced with 1
Mutant 1862 in q.js: 2 replaced with 0
Mutant 1863 in q.js: 2 replaced with -1
Mutant 1864 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1865 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1866 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1867 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1868 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1869 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1870 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1871 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [nodeArgs, name])
Mutant 1872 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, null])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [nodeArgs, name])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, null])
Mutant 1873 in q.js: Q replaced with Q.reject
Mutant 1874 in q.js: Q replaced with Q.resolve
Mutant 1875 in q.js: Q replaced with Q.defer
Mutant 1876 in q.js: object replaced with undefined
Mutant 1877 in q.js: object replaced with {}
Mutant 1878 in q.js: "post" replaced with "get"
Mutant 1879 in q.js: "post" replaced with "put"
Mutant 1880 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1881 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1882 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1883 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1884 in q.js: deferred.reject replaced with null
Mutant 1885 in q.js: deferred.reject replaced with undefined
Mutant 1886 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1887 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1888 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1889 in q.js: arguments replaced with null
Mutant 1890 in q.js: arguments replaced with undefined
Mutant 1891 in q.js: arguments replaced with []
Mutant 1892 in q.js: 1 replaced with 0
Mutant 1893 in q.js: 1 replaced with 2
Mutant 1894 in q.js: 1 replaced with -1
Mutant 1895 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1896 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1897 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1898 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1899 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1900 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1901 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [nodeArgs, name])
Mutant 1902 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
Mutant 1903 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, "foo"])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [nodeArgs, name])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, "foo"])
Mutant 1904 in q.js: "post" replaced with "send"
Mutant 1905 in q.js: "post" replaced with "dispatch"
Mutant 1906 in q.js: "post" replaced with "apply"
Mutant 1907 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, deferred.makeNodeResolver()]
Mutant 1908 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, function () {}]
Mutant 1909 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1910 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1911 in q.js: deferred.reject replaced with null
Mutant 1912 in q.js: Q replaced with undefined
Mutant 1913 in q.js: Q replaced with null
Mutant 1914 in q.js: object replaced with null
Mutant 1915 in q.js: object replaced with undefined
Mutant 1916 in q.js: object replaced with 0
Mutant 1917 in q.js: nodeback replaced with null
Mutant 1918 in q.js: nodeback replaced with undefined
Mutant 1919 in q.js: nodeback replaced with () => {}
Mutant 1920 in q.js: nodeback replaced with !nodeback
Mutant 1921 in q.js: nodeback replaced with nodeback()
Mutant 1922 in q.js: nodeback replaced with nodeback.call()
Mutant 1923 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1924 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 1925 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 1926 in q.js: null replaced with undefined
Mutant 1927 in q.js: null replaced with 0
Mutant 1928 in q.js: null replaced with {}
Mutant 1929 in q.js: value replaced with undefined
Mutant 1930 in q.js: value replaced with null
Mutant 1931 in q.js: value replaced with "foo"
Mutant 1932 in q.js: nodeback replaced with null
Mutant 1933 in q.js: nodeback replaced with undefined
Mutant 1934 in q.js: error replaced with null
Mutant 1935 in q.js: error replaced with undefined
Mutant 1936 in q.js: error replaced with "error"
Mutant 1937 in q.js: captureLine replaced with captureLine + 1
Mutant 1938 in q.js: captureLine replaced with captureLine - 1
Mutant 1939 in q.js: captureLine replaced with captureLine + 2
Mutant 1940 in queue.js: "head" replaced with "tail"
Mutant 1941 in queue.js: "head" replaced with "head.tail"
Mutant 1942 in queue.js: "head" replaced with "head.tail.head"
Mutant 1943 in queue.js: "tail" replaced with "head"
Mutant 1944 in queue.js: "tail" replaced with "error"
Mutant 1945 in queue.js: closed.resolve replaced with closed.reject
Mutant 1946 in queue.js: error replaced with null
Mutant 1947 in queue.js: error replaced with undefined
Mutant 1948 in queue.js: error replaced with Q.reject(error)
Mutant 1949 in queue.js: Q.reject replaced with Q.resolve
Mutant 1950 in queue.js: error replaced with null
Mutant 1951 in queue.js: error replaced with undefined
Mutant 1952 in queue.js: error replaced with new Error("Custom error message")
Mutant 1953 in queue.js: ends.resolve replaced with ends.reject
Mutant 1954 in queue.js: end replaced with null
Mutant 1955 in queue.js: end replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 1956 in queue.js: end replaced with Q.resolve(end)
[32m00:58:23 (3380) INFO Instrumenter[39m Instrumented 2 source file(s) with 1957 mutant(s)
[32m00:58:24 (3380) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m00:58:26 (3380) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m00:58:26 (3380) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m00:58:32 (3380) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6831 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 48m) 3/1957 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 42m) 4/1957 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 42m) 6/1957 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 5m) 7/1957 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 0m) 9/1957 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 14m) 10/1957 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 26m) 11/1957 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 52m) 15/1957 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 51m) 17/1957 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 59m) 18/1957 tested (13 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 57m) 20/1957 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 4m) 21/1957 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 2m) 23/1957 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 7m) 24/1957 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 5m) 26/1957 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 10m) 27/1957 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 8m) 29/1957 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 12m) 30/1957 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 10m) 32/1957 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 57m) 36/1957 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 6m) 36/1957 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 10m) 37/1957 tested (28 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 13m) 38/1957 tested (28 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 22m) 38/1957 tested (28 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 24m) 39/1957 tested (28 survived, 3 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 33m) 39/1957 tested (28 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 35m) 40/1957 tested (28 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 38m) 41/1957 tested (28 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 35m) 43/1957 tested (30 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 37m) 44/1957 tested (31 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 34m) 46/1957 tested (33 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 41m) 46/1957 tested (33 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 43m) 47/1957 tested (33 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 45m) 48/1957 tested (33 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 38m) 51/1957 tested (34 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 39m) 52/1957 tested (35 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 37m) 54/1957 tested (36 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 34m) 56/1957 tested (38 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 36m) 57/1957 tested (39 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 38m) 58/1957 tested (40 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 39m) 59/1957 tested (40 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 45m) 59/1957 tested (40 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 39m) 62/1957 tested (40 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 30m) 66/1957 tested (42 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 31m) 67/1957 tested (43 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 32m) 68/1957 tested (44 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 31m) 70/1957 tested (46 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 32m) 71/1957 tested (47 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 30m) 73/1957 tested (49 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 32m) 74/1957 tested (50 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 30m) 76/1957 tested (52 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 31m) 77/1957 tested (53 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 29m) 79/1957 tested (55 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 31m) 80/1957 tested (56 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 29m) 82/1957 tested (58 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 30m) 83/1957 tested (59 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 31m) 84/1957 tested (60 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 32m) 85/1957 tested (60 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 33m) 86/1957 tested (61 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 34m) 87/1957 tested (61 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 88/1957 tested (62 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 39m) 88/1957 tested (62 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 91/1957 tested (63 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 31m) 94/1957 tested (64 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 32m) 95/1957 tested (65 survived, 12 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 30m) 97/1957 tested (67 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 31m) 98/1957 tested (68 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 30m) 100/1957 tested (70 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 31m) 101/1957 tested (71 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 30m) 103/1957 tested (73 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 30m) 104/1957 tested (74 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 29m) 106/1957 tested (76 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 30m) 107/1957 tested (77 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 31m) 108/1957 tested (78 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 29m) 110/1957 tested (80 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 30m) 111/1957 tested (81 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 29m) 113/1957 tested (83 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 30m) 114/1957 tested (84 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 28m) 116/1957 tested (86 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 29m) 117/1957 tested (87 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 28m) 119/1957 tested (89 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 29m) 120/1957 tested (90 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 28m) 122/1957 tested (92 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 28m) 123/1957 tested (93 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 27m) 125/1957 tested (95 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 28m) 126/1957 tested (96 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 27m) 128/1957 tested (98 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 27m) 129/1957 tested (99 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 26m) 131/1957 tested (101 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 27m) 132/1957 tested (102 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 27m) 133/1957 tested (103 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 23m) 137/1957 tested (104 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 19m) 141/1957 tested (106 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 20m) 142/1957 tested (106 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 14m) 147/1957 tested (106 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 8m) 153/1957 tested (106 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 7m) 155/1957 tested (108 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 8m) 156/1957 tested (109 survived, 13 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 7m) 158/1957 tested (111 survived, 13 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 8m) 159/1957 tested (112 survived, 13 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 9m) 160/1957 tested (113 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 162/1957 tested (115 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 163/1957 tested (116 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 165/1957 tested (118 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 166/1957 tested (119 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 168/1957 tested (121 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 8m) 169/1957 tested (122 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 8m) 171/1957 tested (124 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 8m) 172/1957 tested (125 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 7m) 174/1957 tested (127 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 8m) 175/1957 tested (128 survived, 13 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 7m) 177/1957 tested (130 survived, 13 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 8m) 178/1957 tested (131 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 180/1957 tested (133 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 8m) 181/1957 tested (134 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 183/1957 tested (136 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 184/1957 tested (137 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 186/1957 tested (139 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 7m) 187/1957 tested (140 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 7m) 189/1957 tested (142 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 7m) 190/1957 tested (143 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 8m) 191/1957 tested (144 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 7m) 193/1957 tested (146 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 7m) 194/1957 tested (147 survived, 13 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~3h 7m) 196/1957 tested (149 survived, 13 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 7m) 197/1957 tested (150 survived, 13 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 6m) 199/1957 tested (152 survived, 13 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 7m) 200/1957 tested (153 survived, 13 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 6m) 202/1957 tested (155 survived, 13 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 7m) 203/1957 tested (156 survived, 13 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 6m) 205/1957 tested (158 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 7m) 206/1957 tested (159 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 6m) 208/1957 tested (161 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 6m) 209/1957 tested (162 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 6m) 211/1957 tested (164 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 6m) 212/1957 tested (165 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 5m) 214/1957 tested (167 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 6m) 215/1957 tested (168 survived, 13 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 5m) 217/1957 tested (170 survived, 13 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 6m) 218/1957 tested (171 survived, 13 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 5m) 220/1957 tested (173 survived, 13 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 5m) 221/1957 tested (174 survived, 13 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 5m) 223/1957 tested (176 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 5m) 224/1957 tested (177 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 5m) 226/1957 tested (179 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 5m) 227/1957 tested (180 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 3m) 231/1957 tested (181 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 3m) 232/1957 tested (181 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 2m) 234/1957 tested (181 survived, 13 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 3m) 235/1957 tested (182 survived, 13 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 2m) 237/1957 tested (184 survived, 13 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 1m) 240/1957 tested (185 survived, 13 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 1m) 241/1957 tested (186 survived, 13 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 1m) 243/1957 tested (188 survived, 13 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 1m) 244/1957 tested (189 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 246/1957 tested (191 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 1m) 247/1957 tested (192 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 249/1957 tested (194 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 250/1957 tested (195 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 252/1957 tested (197 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 0m) 253/1957 tested (198 survived, 13 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 0m) 255/1957 tested (200 survived, 13 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 0m) 256/1957 tested (201 survived, 13 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 59m) 258/1957 tested (203 survived, 13 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 0m) 259/1957 tested (204 survived, 13 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 0m) 260/1957 tested (205 survived, 13 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 0m) 262/1957 tested (207 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 0m) 263/1957 tested (208 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 265/1957 tested (210 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 0m) 266/1957 tested (211 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 268/1957 tested (213 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 269/1957 tested (214 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~2h 59m) 271/1957 tested (216 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~2h 59m) 272/1957 tested (217 survived, 13 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 59m) 274/1957 tested (219 survived, 13 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 59m) 275/1957 tested (220 survived, 13 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 277/1957 tested (222 survived, 13 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 59m) 278/1957 tested (223 survived, 13 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 58m) 280/1957 tested (225 survived, 13 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 58m) 281/1957 tested (226 survived, 13 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 58m) 283/1957 tested (228 survived, 13 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 58m) 284/1957 tested (229 survived, 13 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 58m) 286/1957 tested (231 survived, 13 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 58m) 287/1957 tested (232 survived, 13 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 57m) 289/1957 tested (234 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~2h 58m) 290/1957 tested (235 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~2h 57m) 292/1957 tested (237 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~2h 57m) 293/1957 tested (238 survived, 13 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 57m) 295/1957 tested (240 survived, 13 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 57m) 296/1957 tested (241 survived, 13 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 57m) 297/1957 tested (242 survived, 13 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 57m) 299/1957 tested (244 survived, 13 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 57m) 300/1957 tested (245 survived, 13 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 57m) 302/1957 tested (247 survived, 13 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 57m) 303/1957 tested (248 survived, 13 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 56m) 305/1957 tested (250 survived, 13 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 57m) 306/1957 tested (251 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 56m) 308/1957 tested (253 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 56m) 309/1957 tested (254 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 56m) 311/1957 tested (256 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 56m) 312/1957 tested (257 survived, 13 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 56m) 314/1957 tested (259 survived, 13 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 56m) 315/1957 tested (260 survived, 13 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 54m) 319/1957 tested (261 survived, 13 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 54m) 321/1957 tested (263 survived, 13 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 54m) 322/1957 tested (264 survived, 13 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 324/1957 tested (266 survived, 13 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 54m) 325/1957 tested (267 survived, 13 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 53m) 327/1957 tested (269 survived, 13 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 53m) 328/1957 tested (270 survived, 13 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 53m) 330/1957 tested (272 survived, 13 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 51m) 334/1957 tested (273 survived, 13 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 51m) 335/1957 tested (274 survived, 13 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 51m) 337/1957 tested (276 survived, 13 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 51m) 338/1957 tested (277 survived, 13 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 51m) 340/1957 tested (279 survived, 13 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 51m) 341/1957 tested (280 survived, 13 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 50m) 343/1957 tested (282 survived, 13 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 51m) 344/1957 tested (283 survived, 13 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 51m) 345/1957 tested (284 survived, 13 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 50m) 347/1957 tested (286 survived, 13 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 51m) 348/1957 tested (287 survived, 13 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 50m) 350/1957 tested (289 survived, 13 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 50m) 351/1957 tested (290 survived, 13 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 50m) 353/1957 tested (292 survived, 13 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 50m) 354/1957 tested (293 survived, 13 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 50m) 356/1957 tested (295 survived, 13 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 50m) 357/1957 tested (296 survived, 13 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 49m) 359/1957 tested (298 survived, 13 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 50m) 360/1957 tested (299 survived, 13 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 49m) 362/1957 tested (301 survived, 13 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 49m) 363/1957 tested (302 survived, 13 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 48m) 366/1957 tested (304 survived, 13 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 48m) 368/1957 tested (305 survived, 13 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 48m) 369/1957 tested (306 survived, 13 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 48m) 371/1957 tested (308 survived, 13 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 48m) 372/1957 tested (309 survived, 13 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 47m) 374/1957 tested (311 survived, 13 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 48m) 375/1957 tested (312 survived, 13 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 47m) 377/1957 tested (314 survived, 13 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 47m) 378/1957 tested (315 survived, 13 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 47m) 380/1957 tested (317 survived, 13 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 47m) 381/1957 tested (318 survived, 13 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 46m) 385/1957 tested (319 survived, 13 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 46m) 385/1957 tested (319 survived, 13 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 46m) 386/1957 tested (319 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 47m) 387/1957 tested (319 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 47m) 387/1957 tested (319 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 46m) 391/1957 tested (319 survived, 16 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 45m) 393/1957 tested (319 survived, 16 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 45m) 394/1957 tested (319 survived, 16 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 46m) 394/1957 tested (319 survived, 16 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 46m) 395/1957 tested (319 survived, 17 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 46m) 396/1957 tested (319 survived, 18 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 47m) 396/1957 tested (319 survived, 18 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 47m) 397/1957 tested (319 survived, 19 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 47m) 399/1957 tested (319 survived, 20 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 46m) 402/1957 tested (320 survived, 20 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 44m) 406/1957 tested (321 survived, 20 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 43m) 411/1957 tested (321 survived, 20 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 43m) 411/1957 tested (321 survived, 20 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 42m) 415/1957 tested (321 survived, 21 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 42m) 416/1957 tested (321 survived, 22 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 41m) 419/1957 tested (322 survived, 22 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 41m) 420/1957 tested (323 survived, 22 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 41m) 422/1957 tested (325 survived, 22 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 41m) 423/1957 tested (326 survived, 22 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 41m) 425/1957 tested (328 survived, 22 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 41m) 426/1957 tested (329 survived, 22 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 40m) 428/1957 tested (331 survived, 22 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 40m) 429/1957 tested (332 survived, 22 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 40m) 431/1957 tested (334 survived, 22 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 40m) 432/1957 tested (335 survived, 22 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 41m) 432/1957 tested (335 survived, 22 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 41m) 433/1957 tested (335 survived, 23 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 41m) 434/1957 tested (335 survived, 24 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 42m) 434/1957 tested (335 survived, 24 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 41m) 436/1957 tested (336 survived, 25 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 41m) 437/1957 tested (337 survived, 25 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 41m) 439/1957 tested (339 survived, 25 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 41m) 440/1957 tested (340 survived, 25 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 41m) 442/1957 tested (342 survived, 25 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 41m) 443/1957 tested (343 survived, 25 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 40m) 445/1957 tested (345 survived, 25 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 40m) 446/1957 tested (346 survived, 25 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 41m) 447/1957 tested (347 survived, 25 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 40m) 449/1957 tested (349 survived, 25 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 40m) 450/1957 tested (350 survived, 25 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 40m) 452/1957 tested (352 survived, 25 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 40m) 453/1957 tested (353 survived, 25 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 40m) 455/1957 tested (355 survived, 25 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 40m) 456/1957 tested (356 survived, 25 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 39m) 458/1957 tested (358 survived, 25 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 459/1957 tested (359 survived, 25 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 461/1957 tested (361 survived, 25 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 462/1957 tested (362 survived, 25 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 464/1957 tested (364 survived, 25 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 465/1957 tested (365 survived, 25 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 466/1957 tested (366 survived, 25 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 38m) 469/1957 tested (366 survived, 26 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 38m) 470/1957 tested (366 survived, 26 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 38m) 471/1957 tested (366 survived, 27 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 38m) 473/1957 tested (368 survived, 27 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 38m) 474/1957 tested (369 survived, 27 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 39m) 474/1957 tested (369 survived, 27 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 38m) 477/1957 tested (370 survived, 28 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 37m) 480/1957 tested (370 survived, 28 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 37m) 480/1957 tested (370 survived, 28 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 37m) 482/1957 tested (371 survived, 29 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 38m) 482/1957 tested (371 survived, 29 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 38m) 483/1957 tested (371 survived, 30 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 38m) 484/1957 tested (371 survived, 31 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 38m) 484/1957 tested (371 survived, 31 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 38m) 485/1957 tested (371 survived, 32 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 39m) 485/1957 tested (371 survived, 32 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 39m) 486/1957 tested (371 survived, 33 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 39m) 487/1957 tested (371 survived, 34 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 39m) 489/1957 tested (373 survived, 34 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 39m) 490/1957 tested (374 survived, 34 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 38m) 492/1957 tested (376 survived, 34 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 38m) 493/1957 tested (377 survived, 34 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 38m) 495/1957 tested (379 survived, 34 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 38m) 496/1957 tested (380 survived, 34 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 39m) 496/1957 tested (380 survived, 34 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 38m) 498/1957 tested (381 survived, 35 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 38m) 499/1957 tested (381 survived, 35 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 38m) 500/1957 tested (381 survived, 35 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 38m) 502/1957 tested (381 survived, 35 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 38m) 503/1957 tested (381 survived, 35 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 38m) 504/1957 tested (381 survived, 35 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 38m) 505/1957 tested (381 survived, 35 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 38m) 506/1957 tested (381 survived, 35 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 38m) 508/1957 tested (383 survived, 35 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 38m) 509/1957 tested (384 survived, 35 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 37m) 511/1957 tested (386 survived, 35 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 38m) 512/1957 tested (387 survived, 35 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 37m) 514/1957 tested (389 survived, 35 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 37m) 515/1957 tested (390 survived, 35 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 37m) 517/1957 tested (392 survived, 35 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 37m) 518/1957 tested (393 survived, 35 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 37m) 520/1957 tested (395 survived, 35 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 37m) 521/1957 tested (396 survived, 35 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 36m) 523/1957 tested (398 survived, 35 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 36m) 524/1957 tested (399 survived, 35 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 36m) 526/1957 tested (401 survived, 35 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 36m) 527/1957 tested (402 survived, 35 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 36m) 529/1957 tested (404 survived, 35 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 36m) 530/1957 tested (405 survived, 35 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 35m) 532/1957 tested (407 survived, 35 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 35m) 533/1957 tested (408 survived, 35 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 35m) 535/1957 tested (410 survived, 35 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 35m) 536/1957 tested (411 survived, 35 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 35m) 538/1957 tested (413 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 35m) 539/1957 tested (414 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 35m) 540/1957 tested (415 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 34m) 542/1957 tested (417 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 34m) 543/1957 tested (418 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 34m) 545/1957 tested (420 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 34m) 546/1957 tested (421 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 34m) 548/1957 tested (423 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 34m) 549/1957 tested (424 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 33m) 551/1957 tested (426 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 33m) 552/1957 tested (427 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 33m) 554/1957 tested (429 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 33m) 555/1957 tested (430 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 33m) 557/1957 tested (432 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 33m) 558/1957 tested (433 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 33m) 560/1957 tested (435 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 33m) 561/1957 tested (436 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 32m) 563/1957 tested (438 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 32m) 564/1957 tested (439 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 32m) 566/1957 tested (441 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 32m) 567/1957 tested (442 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 32m) 569/1957 tested (444 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 32m) 570/1957 tested (445 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 31m) 572/1957 tested (447 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 31m) 573/1957 tested (448 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 31m) 575/1957 tested (450 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 31m) 576/1957 tested (451 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 31m) 577/1957 tested (452 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 31m) 579/1957 tested (454 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 31m) 580/1957 tested (455 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 30m) 582/1957 tested (457 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 30m) 583/1957 tested (458 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 30m) 585/1957 tested (460 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 30m) 586/1957 tested (461 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 30m) 588/1957 tested (463 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 30m) 589/1957 tested (464 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 591/1957 tested (466 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 29m) 592/1957 tested (467 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 29m) 594/1957 tested (469 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 29m) 595/1957 tested (470 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 29m) 597/1957 tested (472 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 29m) 598/1957 tested (473 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 601/1957 tested (475 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 28m) 603/1957 tested (475 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 28m) 604/1957 tested (475 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 28m) 604/1957 tested (475 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 28m) 606/1957 tested (475 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 28m) 607/1957 tested (475 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 28m) 608/1957 tested (476 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 28m) 609/1957 tested (476 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 28m) 610/1957 tested (476 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 28m) 610/1957 tested (476 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 28m) 611/1957 tested (476 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 28m) 612/1957 tested (476 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 28m) 613/1957 tested (477 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 28m) 615/1957 tested (479 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 28m) 615/1957 tested (479 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 28m) 616/1957 tested (479 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 28m) 617/1957 tested (479 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 29m) 617/1957 tested (479 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 29m) 618/1957 tested (479 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 620/1957 tested (481 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 621/1957 tested (482 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 623/1957 tested (484 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 624/1957 tested (485 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 626/1957 tested (487 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 28m) 627/1957 tested (488 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 629/1957 tested (490 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 630/1957 tested (491 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 632/1957 tested (493 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 634/1957 tested (494 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 634/1957 tested (494 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 635/1957 tested (494 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 27m) 636/1957 tested (494 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 27m) 636/1957 tested (494 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 27m) 637/1957 tested (494 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 27m) 638/1957 tested (494 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 27m) 639/1957 tested (495 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 27m) 641/1957 tested (497 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 27m) 642/1957 tested (498 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 27m) 644/1957 tested (500 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 27m) 645/1957 tested (501 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 647/1957 tested (503 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 649/1957 tested (503 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 26m) 650/1957 tested (503 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 650/1957 tested (503 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 651/1957 tested (503 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 652/1957 tested (503 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 652/1957 tested (503 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 653/1957 tested (503 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 654/1957 tested (503 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 654/1957 tested (503 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 656/1957 tested (503 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 657/1957 tested (503 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 658/1957 tested (503 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 658/1957 tested (503 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 659/1957 tested (503 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 27m) 660/1957 tested (503 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 27m) 660/1957 tested (503 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 27m) 662/1957 tested (504 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 27m) 662/1957 tested (504 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 27m) 664/1957 tested (505 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 27m) 664/1957 tested (505 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 27m) 665/1957 tested (505 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 27m) 665/1957 tested (505 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 666/1957 tested (505 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 667/1957 tested (505 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 28m) 667/1957 tested (505 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 28m) 668/1957 tested (505 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 28m) 669/1957 tested (505 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 28m) 670/1957 tested (505 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 28m) 671/1957 tested (505 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 673/1957 tested (507 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 674/1957 tested (508 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 675/1957 tested (509 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 676/1957 tested (509 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 677/1957 tested (509 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 678/1957 tested (509 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 678/1957 tested (509 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 679/1957 tested (509 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 28m) 680/1957 tested (509 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 680/1957 tested (509 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 681/1957 tested (509 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 681/1957 tested (509 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 682/1957 tested (509 survived, 66 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 683/1957 tested (509 survived, 67 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 28m) 683/1957 tested (509 survived, 67 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 28m) 684/1957 tested (509 survived, 68 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 28m) 685/1957 tested (509 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 29m) 685/1957 tested (509 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 28m) 687/1957 tested (510 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 29m) 687/1957 tested (510 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 29m) 688/1957 tested (510 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 29m) 689/1957 tested (510 survived, 72 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 29m) 689/1957 tested (510 survived, 72 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 29m) 690/1957 tested (510 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 29m) 691/1957 tested (510 survived, 74 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 29m) 691/1957 tested (510 survived, 74 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 29m) 692/1957 tested (510 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 29m) 692/1957 tested (510 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 29m) 693/1957 tested (510 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 29m) 694/1957 tested (510 survived, 77 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 30m) 694/1957 tested (510 survived, 77 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 30m) 695/1957 tested (510 survived, 78 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 30m) 696/1957 tested (510 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 29m) 698/1957 tested (512 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 29m) 699/1957 tested (513 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 29m) 701/1957 tested (515 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 29m) 702/1957 tested (516 survived, 79 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 28m) 704/1957 tested (518 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 28m) 705/1957 tested (519 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 706/1957 tested (520 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 708/1957 tested (522 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 709/1957 tested (523 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 711/1957 tested (525 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 712/1957 tested (526 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 27m) 714/1957 tested (528 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 27m) 715/1957 tested (529 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 27m) 717/1957 tested (531 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 27m) 718/1957 tested (532 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 26m) 720/1957 tested (534 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 26m) 721/1957 tested (535 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 26m) 723/1957 tested (537 survived, 79 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 26m) 724/1957 tested (538 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 26m) 726/1957 tested (540 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 26m) 727/1957 tested (541 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 25m) 729/1957 tested (543 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 25m) 730/1957 tested (544 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 25m) 732/1957 tested (546 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 25m) 733/1957 tested (547 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 735/1957 tested (549 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 736/1957 tested (550 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 738/1957 tested (552 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 739/1957 tested (553 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 741/1957 tested (555 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 24m) 742/1957 tested (556 survived, 79 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 24m) 743/1957 tested (557 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 23m) 745/1957 tested (559 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 23m) 746/1957 tested (560 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 23m) 748/1957 tested (562 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 23m) 749/1957 tested (563 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 751/1957 tested (565 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 752/1957 tested (566 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 754/1957 tested (568 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 755/1957 tested (569 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 757/1957 tested (571 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 758/1957 tested (572 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 21m) 760/1957 tested (574 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 21m) 761/1957 tested (575 survived, 79 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 21m) 763/1957 tested (577 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 30m, remaining: ~2h 21m) 764/1957 tested (578 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 30m, remaining: ~2h 20m) 766/1957 tested (580 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 30m, remaining: ~2h 20m) 767/1957 tested (581 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 19m) 771/1957 tested (582 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 19m) 772/1957 tested (582 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 19m) 775/1957 tested (583 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 19m) 776/1957 tested (584 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 18m) 778/1957 tested (586 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 18m) 779/1957 tested (587 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 18m) 781/1957 tested (589 survived, 79 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 18m) 782/1957 tested (590 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 32m, remaining: ~2h 18m) 784/1957 tested (592 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 32m, remaining: ~2h 18m) 785/1957 tested (593 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 32m, remaining: ~2h 17m) 787/1957 tested (595 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 32m, remaining: ~2h 17m) 788/1957 tested (596 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 17m) 790/1957 tested (598 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 17m) 791/1957 tested (599 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 16m) 793/1957 tested (601 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 16m) 794/1957 tested (602 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 16m) 795/1957 tested (603 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 16m) 797/1957 tested (605 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 16m) 798/1957 tested (606 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 16m) 800/1957 tested (608 survived, 79 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 16m) 801/1957 tested (609 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 15m) 803/1957 tested (611 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 15m) 804/1957 tested (612 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 14m) 808/1957 tested (613 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 14m) 810/1957 tested (615 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 14m) 811/1957 tested (616 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 14m) 813/1957 tested (618 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 14m) 814/1957 tested (619 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 13m) 816/1957 tested (621 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 13m) 817/1957 tested (622 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 13m) 819/1957 tested (624 survived, 79 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 13m) 820/1957 tested (625 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 13m) 822/1957 tested (627 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 12m) 823/1957 tested (628 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 12m) 825/1957 tested (630 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 12m) 825/1957 tested (630 survived, 79 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 12m) 826/1957 tested (630 survived, 80 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 12m) 828/1957 tested (632 survived, 80 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 12m) 829/1957 tested (633 survived, 80 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 12m) 831/1957 tested (635 survived, 80 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 12m) 832/1957 tested (636 survived, 80 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 12m) 833/1957 tested (636 survived, 80 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 11m) 835/1957 tested (636 survived, 80 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 11m) 836/1957 tested (637 survived, 80 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 11m) 837/1957 tested (638 survived, 80 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 11m) 838/1957 tested (638 survived, 81 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 11m) 839/1957 tested (639 survived, 81 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 11m) 840/1957 tested (639 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 11m) 840/1957 tested (639 survived, 82 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 11m) 841/1957 tested (639 survived, 83 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 11m) 842/1957 tested (639 survived, 84 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 11m) 843/1957 tested (640 survived, 84 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 11m) 845/1957 tested (642 survived, 84 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 11m) 845/1957 tested (642 survived, 84 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 11m) 846/1957 tested (642 survived, 85 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 11m) 846/1957 tested (642 survived, 85 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 11m) 847/1957 tested (642 survived, 86 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 11m) 848/1957 tested (642 survived, 87 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 11m) 850/1957 tested (644 survived, 87 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 10m) 852/1957 tested (645 survived, 87 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 9m) 856/1957 tested (646 survived, 87 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 9m) 857/1957 tested (647 survived, 87 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 9m) 859/1957 tested (649 survived, 87 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 9m) 860/1957 tested (650 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 9m) 862/1957 tested (652 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 9m) 863/1957 tested (653 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 865/1957 tested (655 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 866/1957 tested (656 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 868/1957 tested (658 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 869/1957 tested (659 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 871/1957 tested (661 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 7m) 872/1957 tested (662 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 7m) 874/1957 tested (664 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 7m) 875/1957 tested (665 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 7m) 877/1957 tested (667 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 7m) 878/1957 tested (668 survived, 87 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 6m) 880/1957 tested (670 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 6m) 881/1957 tested (671 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 883/1957 tested (673 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 884/1957 tested (674 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 885/1957 tested (675 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 887/1957 tested (677 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 888/1957 tested (678 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 5m) 890/1957 tested (680 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 5m) 891/1957 tested (681 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 5m) 893/1957 tested (683 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 5m) 894/1957 tested (684 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 4m) 896/1957 tested (686 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 4m) 897/1957 tested (687 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 4m) 899/1957 tested (689 survived, 87 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 4m) 900/1957 tested (690 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 902/1957 tested (692 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 902/1957 tested (692 survived, 87 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 903/1957 tested (692 survived, 88 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 904/1957 tested (692 survived, 89 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 904/1957 tested (692 survived, 89 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 4m) 905/1957 tested (692 survived, 90 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 4m) 906/1957 tested (692 survived, 91 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 4m) 906/1957 tested (692 survived, 91 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 4m) 907/1957 tested (692 survived, 92 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 4m) 908/1957 tested (692 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 4m) 909/1957 tested (693 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 4m) 910/1957 tested (694 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 3m) 912/1957 tested (696 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 3m) 913/1957 tested (697 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 3m) 915/1957 tested (699 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 3m) 916/1957 tested (700 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 3m) 918/1957 tested (702 survived, 93 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 3m) 919/1957 tested (703 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 2m) 921/1957 tested (705 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 2m) 922/1957 tested (706 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 2m) 924/1957 tested (708 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 2m) 925/1957 tested (709 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 2m) 927/1957 tested (711 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 1m) 928/1957 tested (712 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 1m) 930/1957 tested (714 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 1m) 931/1957 tested (715 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 1m) 933/1957 tested (717 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 1m) 934/1957 tested (718 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 0m) 936/1957 tested (720 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 0m) 937/1957 tested (721 survived, 93 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 0m) 939/1957 tested (723 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~2h 0m) 940/1957 tested (724 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~2h 0m) 942/1957 tested (726 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~2h 0m) 943/1957 tested (727 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~1h 59m) 945/1957 tested (729 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 59m) 946/1957 tested (730 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 59m) 948/1957 tested (732 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 59m) 949/1957 tested (733 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 59m) 950/1957 tested (734 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 58m) 952/1957 tested (736 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 58m) 953/1957 tested (737 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~1h 58m) 955/1957 tested (739 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~1h 58m) 956/1957 tested (740 survived, 93 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~1h 58m) 958/1957 tested (742 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 58m) 959/1957 tested (742 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 57m) 961/1957 tested (742 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 57m) 962/1957 tested (742 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 57m) 963/1957 tested (742 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 57m) 965/1957 tested (742 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 57m) 966/1957 tested (742 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 57m) 967/1957 tested (742 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 56m) 969/1957 tested (742 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 56m) 970/1957 tested (743 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 56m) 972/1957 tested (745 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 56m) 973/1957 tested (746 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 56m) 975/1957 tested (748 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 56m) 976/1957 tested (749 survived, 93 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 55m) 978/1957 tested (751 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 55m, remaining: ~1h 55m) 979/1957 tested (752 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 55m) 981/1957 tested (754 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 55m) 982/1957 tested (755 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 55m) 984/1957 tested (757 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 54m) 985/1957 tested (758 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 54m) 987/1957 tested (760 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 54m) 988/1957 tested (761 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 54m) 990/1957 tested (763 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 54m) 991/1957 tested (764 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 54m) 992/1957 tested (765 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 53m) 994/1957 tested (767 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 53m) 995/1957 tested (768 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 53m) 997/1957 tested (770 survived, 93 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 53m) 998/1957 tested (771 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 53m) 1000/1957 tested (773 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 53m) 1001/1957 tested (774 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 52m) 1003/1957 tested (776 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 52m) 1004/1957 tested (777 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 52m) 1006/1957 tested (779 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 52m) 1007/1957 tested (780 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 51m) 1009/1957 tested (782 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 51m) 1010/1957 tested (783 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 51m) 1012/1957 tested (785 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 51m) 1013/1957 tested (786 survived, 93 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 51m) 1015/1957 tested (788 survived, 93 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 51m) 1016/1957 tested (789 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 50m) 1018/1957 tested (791 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 50m) 1019/1957 tested (792 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 50m) 1021/1957 tested (794 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 50m) 1022/1957 tested (795 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 50m) 1024/1957 tested (797 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 50m) 1025/1957 tested (798 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 49m) 1027/1957 tested (800 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 49m) 1028/1957 tested (801 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 49m) 1030/1957 tested (803 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 49m) 1031/1957 tested (804 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 49m) 1032/1957 tested (805 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 48m) 1034/1957 tested (807 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 48m) 1035/1957 tested (808 survived, 93 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 48m) 1037/1957 tested (810 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 48m) 1038/1957 tested (811 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 48m) 1040/1957 tested (813 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 48m) 1041/1957 tested (814 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1043/1957 tested (816 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1044/1957 tested (817 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1046/1957 tested (819 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1047/1957 tested (820 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1049/1957 tested (822 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 46m) 1050/1957 tested (823 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 46m) 1052/1957 tested (825 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 46m) 1053/1957 tested (826 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 46m) 1055/1957 tested (828 survived, 93 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 46m) 1056/1957 tested (829 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 4m, remaining: ~1h 45m) 1058/1957 tested (831 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 4m, remaining: ~1h 45m) 1059/1957 tested (832 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 45m) 1061/1957 tested (834 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 45m) 1062/1957 tested (835 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 45m) 1064/1957 tested (837 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 45m) 1065/1957 tested (838 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 44m) 1067/1957 tested (840 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 44m) 1068/1957 tested (841 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 44m) 1070/1957 tested (843 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 44m) 1071/1957 tested (844 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 44m) 1072/1957 tested (845 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 44m) 1074/1957 tested (847 survived, 93 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 43m) 1075/1957 tested (848 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 6m, remaining: ~1h 43m) 1077/1957 tested (850 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 43m) 1078/1957 tested (851 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 43m) 1080/1957 tested (853 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 43m) 1081/1957 tested (854 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 42m) 1083/1957 tested (856 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 42m) 1084/1957 tested (857 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 42m) 1086/1957 tested (859 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 42m) 1087/1957 tested (860 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 42m) 1089/1957 tested (862 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 42m) 1090/1957 tested (863 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 41m) 1092/1957 tested (865 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 41m) 1093/1957 tested (866 survived, 93 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 41m) 1095/1957 tested (868 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 41m) 1096/1957 tested (869 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 41m) 1098/1957 tested (871 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 40m) 1099/1957 tested (872 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 40m) 1101/1957 tested (874 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 40m) 1102/1957 tested (875 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 40m) 1104/1957 tested (877 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 40m) 1105/1957 tested (878 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 39m) 1107/1957 tested (880 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 39m) 1108/1957 tested (881 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 39m) 1109/1957 tested (882 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 39m) 1111/1957 tested (884 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 39m) 1112/1957 tested (885 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 39m) 1114/1957 tested (887 survived, 93 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 39m) 1115/1957 tested (888 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 38m) 1117/1957 tested (890 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 38m) 1118/1957 tested (891 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 38m) 1120/1957 tested (893 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 38m) 1121/1957 tested (894 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 38m) 1123/1957 tested (896 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 37m) 1124/1957 tested (897 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 37m) 1126/1957 tested (899 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 37m) 1127/1957 tested (900 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 37m) 1129/1957 tested (902 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 37m) 1130/1957 tested (903 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 36m) 1132/1957 tested (905 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 36m) 1133/1957 tested (906 survived, 93 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 36m) 1135/1957 tested (908 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 36m) 1136/1957 tested (909 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 36m) 1138/1957 tested (911 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 36m) 1139/1957 tested (912 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 35m) 1141/1957 tested (914 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 35m) 1142/1957 tested (915 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 35m) 1144/1957 tested (917 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 35m) 1145/1957 tested (918 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 35m) 1147/1957 tested (920 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 35m) 1148/1957 tested (921 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 34m) 1149/1957 tested (922 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 34m) 1151/1957 tested (924 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 34m) 1152/1957 tested (925 survived, 93 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 34m) 1154/1957 tested (927 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 15m, remaining: ~1h 34m) 1155/1957 tested (928 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 15m, remaining: ~1h 33m) 1157/1957 tested (930 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 33m) 1158/1957 tested (931 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 33m) 1160/1957 tested (933 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 33m) 1161/1957 tested (934 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 33m) 1163/1957 tested (936 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 33m) 1164/1957 tested (937 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 32m) 1166/1957 tested (939 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 32m) 1167/1957 tested (940 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 32m) 1169/1957 tested (942 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 32m) 1170/1957 tested (943 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 32m) 1172/1957 tested (945 survived, 93 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 32m) 1173/1957 tested (946 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 17m, remaining: ~1h 31m) 1175/1957 tested (948 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 31m) 1176/1957 tested (949 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 31m) 1178/1957 tested (951 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 31m) 1179/1957 tested (952 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 31m) 1181/1957 tested (954 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 30m) 1182/1957 tested (955 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 30m) 1184/1957 tested (957 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 30m) 1185/1957 tested (958 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 30m) 1187/1957 tested (960 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 30m) 1188/1957 tested (961 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 30m) 1189/1957 tested (962 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 29m) 1191/1957 tested (964 survived, 93 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 29m) 1192/1957 tested (965 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 29m) 1194/1957 tested (967 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 29m) 1195/1957 tested (968 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 29m) 1197/1957 tested (970 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 29m) 1198/1957 tested (971 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 28m) 1200/1957 tested (973 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 28m) 1201/1957 tested (974 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 28m) 1203/1957 tested (976 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 28m) 1204/1957 tested (977 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 28m) 1206/1957 tested (979 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 27m) 1207/1957 tested (980 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 27m) 1209/1957 tested (982 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 27m) 1210/1957 tested (983 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 27m) 1212/1957 tested (985 survived, 93 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 27m) 1213/1957 tested (986 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 26m) 1215/1957 tested (988 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 26m) 1216/1957 tested (989 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 26m) 1218/1957 tested (991 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 26m) 1219/1957 tested (992 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 26m) 1221/1957 tested (994 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 26m) 1222/1957 tested (995 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 25m) 1224/1957 tested (997 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 25m) 1225/1957 tested (998 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 25m) 1227/1957 tested (1000 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 25m) 1228/1957 tested (1001 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 25m) 1229/1957 tested (1002 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 25m) 1231/1957 tested (1004 survived, 93 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 24m) 1232/1957 tested (1005 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 24m, remaining: ~1h 24m) 1234/1957 tested (1007 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 24m, remaining: ~1h 24m) 1235/1957 tested (1008 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 24m, remaining: ~1h 24m) 1237/1957 tested (1010 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 24m) 1238/1957 tested (1011 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 23m) 1240/1957 tested (1013 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 23m) 1241/1957 tested (1014 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 23m) 1243/1957 tested (1016 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 23m) 1244/1957 tested (1017 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 23m) 1246/1957 tested (1019 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 23m) 1247/1957 tested (1020 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 22m) 1249/1957 tested (1022 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 22m) 1250/1957 tested (1023 survived, 93 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 22m) 1252/1957 tested (1025 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 26m, remaining: ~1h 22m) 1253/1957 tested (1026 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 26m, remaining: ~1h 22m) 1255/1957 tested (1028 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 22m) 1256/1957 tested (1029 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 21m) 1258/1957 tested (1031 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 21m) 1259/1957 tested (1032 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 21m) 1261/1957 tested (1034 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 21m) 1262/1957 tested (1035 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 21m) 1264/1957 tested (1037 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 20m) 1265/1957 tested (1038 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 20m) 1266/1957 tested (1039 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 20m) 1268/1957 tested (1041 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 20m) 1269/1957 tested (1042 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 20m) 1271/1957 tested (1044 survived, 93 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 20m) 1272/1957 tested (1045 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 19m) 1274/1957 tested (1047 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 19m) 1275/1957 tested (1048 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 19m) 1277/1957 tested (1050 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 19m) 1278/1957 tested (1051 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 19m) 1280/1957 tested (1053 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 19m) 1281/1957 tested (1054 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 18m) 1283/1957 tested (1056 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 18m) 1284/1957 tested (1057 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 18m) 1286/1957 tested (1059 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 18m) 1287/1957 tested (1060 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 18m) 1289/1957 tested (1062 survived, 93 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 17m) 1290/1957 tested (1063 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 17m) 1292/1957 tested (1065 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 17m) 1293/1957 tested (1066 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 17m) 1295/1957 tested (1068 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 17m) 1296/1957 tested (1069 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 17m) 1298/1957 tested (1071 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 16m) 1299/1957 tested (1072 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 16m) 1301/1957 tested (1074 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 16m) 1302/1957 tested (1075 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 16m) 1304/1957 tested (1077 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 16m) 1305/1957 tested (1078 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 16m) 1306/1957 tested (1079 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 15m) 1308/1957 tested (1081 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 15m) 1309/1957 tested (1082 survived, 93 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 15m) 1311/1957 tested (1084 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 15m) 1312/1957 tested (1085 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 15m) 1314/1957 tested (1087 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 15m) 1315/1957 tested (1088 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 14m) 1317/1957 tested (1090 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 14m) 1318/1957 tested (1091 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 14m) 1320/1957 tested (1093 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 14m) 1321/1957 tested (1094 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 14m) 1323/1957 tested (1096 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 13m) 1324/1957 tested (1097 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 13m) 1326/1957 tested (1099 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 13m) 1327/1957 tested (1100 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 13m) 1329/1957 tested (1102 survived, 93 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 13m) 1330/1957 tested (1103 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 35m, remaining: ~1h 12m) 1332/1957 tested (1105 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 35m, remaining: ~1h 12m) 1333/1957 tested (1106 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 35m, remaining: ~1h 12m) 1335/1957 tested (1108 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 12m) 1336/1957 tested (1109 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 12m) 1338/1957 tested (1111 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 12m) 1339/1957 tested (1112 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 11m) 1341/1957 tested (1114 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 11m) 1342/1957 tested (1115 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 11m) 1344/1957 tested (1117 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 11m) 1345/1957 tested (1118 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 11m) 1346/1957 tested (1119 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 11m) 1348/1957 tested (1121 survived, 93 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 10m) 1349/1957 tested (1122 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 37m, remaining: ~1h 10m) 1351/1957 tested (1124 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 37m, remaining: ~1h 10m) 1352/1957 tested (1125 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 10m) 1354/1957 tested (1127 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 10m) 1355/1957 tested (1128 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 10m) 1357/1957 tested (1130 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 9m) 1358/1957 tested (1131 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 9m) 1360/1957 tested (1133 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 9m) 1361/1957 tested (1134 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 9m) 1363/1957 tested (1136 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 9m) 1364/1957 tested (1137 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 8m) 1366/1957 tested (1139 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 8m) 1367/1957 tested (1140 survived, 93 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 8m) 1369/1957 tested (1142 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 39m, remaining: ~1h 8m) 1370/1957 tested (1143 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 8m) 1372/1957 tested (1145 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 8m) 1373/1957 tested (1146 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 7m) 1375/1957 tested (1148 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 7m) 1376/1957 tested (1149 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 7m) 1378/1957 tested (1151 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 7m) 1379/1957 tested (1152 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 7m) 1381/1957 tested (1154 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 7m) 1382/1957 tested (1155 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 6m) 1383/1957 tested (1156 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 6m) 1385/1957 tested (1158 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 6m) 1386/1957 tested (1159 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 6m) 1388/1957 tested (1161 survived, 93 timed out)
Mutation testing 70% (elapsed: ~2h 42m, remaining: ~1h 6m) 1389/1957 tested (1162 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1391/1957 tested (1164 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1392/1957 tested (1165 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1394/1957 tested (1167 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1395/1957 tested (1168 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1397/1957 tested (1170 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 5m) 1398/1957 tested (1171 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1400/1957 tested (1173 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1401/1957 tested (1174 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1403/1957 tested (1176 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1404/1957 tested (1177 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1406/1957 tested (1179 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 44m, remaining: ~1h 4m) 1407/1957 tested (1180 survived, 93 timed out)
Mutation testing 71% (elapsed: ~2h 44m, remaining: ~1h 3m) 1409/1957 tested (1182 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 44m, remaining: ~1h 3m) 1410/1957 tested (1183 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 44m, remaining: ~1h 3m) 1412/1957 tested (1185 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 44m, remaining: ~1h 3m) 1413/1957 tested (1186 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 44m, remaining: ~1h 3m) 1415/1957 tested (1188 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 3m) 1416/1957 tested (1189 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1418/1957 tested (1191 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1419/1957 tested (1192 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1421/1957 tested (1194 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1422/1957 tested (1195 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1424/1957 tested (1197 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 1m) 1425/1957 tested (1198 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 1m) 1426/1957 tested (1199 survived, 93 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 1m) 1428/1957 tested (1201 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 46m, remaining: ~1h 1m) 1429/1957 tested (1202 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 46m, remaining: ~1h 1m) 1431/1957 tested (1204 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 46m, remaining: ~1h 1m) 1432/1957 tested (1205 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1434/1957 tested (1207 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1435/1957 tested (1208 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1437/1957 tested (1210 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1438/1957 tested (1211 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1440/1957 tested (1213 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1441/1957 tested (1214 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~59m) 1443/1957 tested (1216 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~59m) 1444/1957 tested (1217 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~59m) 1446/1957 tested (1219 survived, 93 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~59m) 1447/1957 tested (1220 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 48m, remaining: ~59m) 1449/1957 tested (1222 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 48m, remaining: ~59m) 1450/1957 tested (1223 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1452/1957 tested (1225 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1453/1957 tested (1226 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1455/1957 tested (1228 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1456/1957 tested (1229 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1458/1957 tested (1231 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~57m) 1459/1957 tested (1232 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1461/1957 tested (1234 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1462/1957 tested (1235 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1463/1957 tested (1236 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1465/1957 tested (1238 survived, 93 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1466/1957 tested (1239 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 50m, remaining: ~56m) 1468/1957 tested (1241 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~56m) 1469/1957 tested (1242 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~56m) 1471/1957 tested (1244 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~56m) 1472/1957 tested (1245 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~56m) 1474/1957 tested (1247 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~56m) 1475/1957 tested (1248 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~55m) 1477/1957 tested (1250 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~55m) 1478/1957 tested (1251 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~55m) 1480/1957 tested (1253 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~55m) 1481/1957 tested (1254 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~55m) 1483/1957 tested (1256 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~55m) 1484/1957 tested (1257 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~54m) 1486/1957 tested (1259 survived, 93 timed out)
Mutation testing 75% (elapsed: ~2h 53m, remaining: ~54m) 1487/1957 tested (1260 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~54m) 1489/1957 tested (1262 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~54m) 1490/1957 tested (1263 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~54m) 1492/1957 tested (1265 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~53m) 1493/1957 tested (1266 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~53m) 1495/1957 tested (1268 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~53m) 1496/1957 tested (1269 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~53m) 1498/1957 tested (1271 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~53m) 1499/1957 tested (1272 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~53m) 1501/1957 tested (1274 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~52m) 1502/1957 tested (1275 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~52m) 1504/1957 tested (1277 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 55m, remaining: ~52m) 1505/1957 tested (1278 survived, 93 timed out)
Mutation testing 76% (elapsed: ~2h 55m, remaining: ~52m) 1506/1957 tested (1279 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 55m, remaining: ~52m) 1508/1957 tested (1281 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 55m, remaining: ~52m) 1509/1957 tested (1282 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 55m, remaining: ~51m) 1511/1957 tested (1284 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 55m, remaining: ~51m) 1512/1957 tested (1285 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~51m) 1514/1957 tested (1287 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~51m) 1515/1957 tested (1288 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~51m) 1517/1957 tested (1290 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~51m) 1518/1957 tested (1291 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~50m) 1520/1957 tested (1293 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~50m) 1521/1957 tested (1294 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~50m) 1523/1957 tested (1296 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~50m) 1524/1957 tested (1297 survived, 93 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~50m) 1526/1957 tested (1299 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 57m, remaining: ~49m) 1527/1957 tested (1300 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 57m, remaining: ~49m) 1529/1957 tested (1302 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 57m, remaining: ~49m) 1530/1957 tested (1303 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~49m) 1532/1957 tested (1305 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~49m) 1533/1957 tested (1306 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~49m) 1535/1957 tested (1308 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~48m) 1536/1957 tested (1309 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~48m) 1538/1957 tested (1311 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~48m) 1539/1957 tested (1312 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~48m) 1541/1957 tested (1314 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~48m) 1542/1957 tested (1315 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~47m) 1544/1957 tested (1317 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~47m) 1545/1957 tested (1318 survived, 93 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~47m) 1546/1957 tested (1319 survived, 93 timed out)
Mutation testing 79% (elapsed: ~2h 59m, remaining: ~47m) 1548/1957 tested (1321 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~47m) 1549/1957 tested (1322 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~47m) 1551/1957 tested (1324 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~47m) 1552/1957 tested (1325 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~46m) 1554/1957 tested (1327 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~46m) 1555/1957 tested (1328 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~46m) 1557/1957 tested (1330 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~46m) 1558/1957 tested (1331 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~46m) 1560/1957 tested (1333 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~46m) 1561/1957 tested (1334 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~45m) 1563/1957 tested (1336 survived, 93 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~45m) 1564/1957 tested (1337 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 1m, remaining: ~45m) 1566/1957 tested (1339 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~45m) 1567/1957 tested (1340 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~45m) 1569/1957 tested (1342 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~44m) 1570/1957 tested (1343 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~44m) 1572/1957 tested (1345 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~44m) 1573/1957 tested (1346 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~44m) 1575/1957 tested (1348 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~44m) 1576/1957 tested (1349 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~43m) 1578/1957 tested (1351 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~43m) 1579/1957 tested (1352 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~43m) 1581/1957 tested (1354 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~43m) 1582/1957 tested (1355 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~43m) 1584/1957 tested (1357 survived, 93 timed out)
Mutation testing 80% (elapsed: ~3h 4m, remaining: ~43m) 1585/1957 tested (1358 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~43m) 1586/1957 tested (1359 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~42m) 1588/1957 tested (1361 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~42m) 1589/1957 tested (1362 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~42m) 1591/1957 tested (1364 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~42m) 1592/1957 tested (1365 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~42m) 1594/1957 tested (1367 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~42m) 1595/1957 tested (1368 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~41m) 1597/1957 tested (1370 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~41m) 1598/1957 tested (1371 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~41m) 1600/1957 tested (1373 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~41m) 1601/1957 tested (1374 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~41m) 1603/1957 tested (1376 survived, 93 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~40m) 1604/1957 tested (1377 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 6m, remaining: ~40m) 1606/1957 tested (1379 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 6m, remaining: ~40m) 1607/1957 tested (1380 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 6m, remaining: ~40m) 1609/1957 tested (1382 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 6m, remaining: ~40m) 1610/1957 tested (1383 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~40m) 1612/1957 tested (1385 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~39m) 1613/1957 tested (1386 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~39m) 1615/1957 tested (1388 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~39m) 1616/1957 tested (1389 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~39m) 1618/1957 tested (1391 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~39m) 1619/1957 tested (1392 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~39m) 1620/1957 tested (1393 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~38m) 1622/1957 tested (1395 survived, 93 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~38m) 1623/1957 tested (1396 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 8m, remaining: ~38m) 1625/1957 tested (1398 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 8m, remaining: ~38m) 1626/1957 tested (1399 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 8m, remaining: ~38m) 1628/1957 tested (1401 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~38m) 1629/1957 tested (1402 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1631/1957 tested (1404 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1632/1957 tested (1405 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1634/1957 tested (1407 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1635/1957 tested (1408 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1637/1957 tested (1410 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~37m) 1638/1957 tested (1411 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~36m) 1640/1957 tested (1413 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~36m) 1641/1957 tested (1414 survived, 93 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~36m) 1643/1957 tested (1416 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 10m, remaining: ~36m) 1644/1957 tested (1417 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 10m, remaining: ~36m) 1646/1957 tested (1419 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1647/1957 tested (1420 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1649/1957 tested (1422 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1650/1957 tested (1423 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1652/1957 tested (1425 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1653/1957 tested (1426 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1655/1957 tested (1428 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1656/1957 tested (1429 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1658/1957 tested (1431 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1659/1957 tested (1432 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1660/1957 tested (1433 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1662/1957 tested (1435 survived, 93 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1663/1957 tested (1436 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1665/1957 tested (1438 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1666/1957 tested (1439 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1668/1957 tested (1441 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1669/1957 tested (1442 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1671/1957 tested (1444 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1672/1957 tested (1445 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1674/1957 tested (1447 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1675/1957 tested (1448 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1677/1957 tested (1450 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1678/1957 tested (1451 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1680/1957 tested (1453 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~31m) 1681/1957 tested (1454 survived, 93 timed out)
Mutation testing 85% (elapsed: ~3h 15m, remaining: ~31m) 1683/1957 tested (1456 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 15m, remaining: ~31m) 1684/1957 tested (1457 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 15m, remaining: ~31m) 1686/1957 tested (1459 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 15m, remaining: ~31m) 1687/1957 tested (1460 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 15m, remaining: ~31m) 1689/1957 tested (1462 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 15m, remaining: ~30m) 1690/1957 tested (1463 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1692/1957 tested (1465 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1693/1957 tested (1466 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1695/1957 tested (1468 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1696/1957 tested (1469 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~29m) 1698/1957 tested (1471 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~29m) 1699/1957 tested (1472 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~29m) 1700/1957 tested (1473 survived, 93 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~29m) 1702/1957 tested (1475 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 17m, remaining: ~29m) 1703/1957 tested (1476 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 17m, remaining: ~29m) 1705/1957 tested (1478 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 17m, remaining: ~29m) 1706/1957 tested (1479 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 17m, remaining: ~28m) 1708/1957 tested (1481 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1709/1957 tested (1482 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1711/1957 tested (1484 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1712/1957 tested (1485 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1714/1957 tested (1487 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1715/1957 tested (1488 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~27m) 1717/1957 tested (1490 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~27m) 1718/1957 tested (1491 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~27m) 1720/1957 tested (1493 survived, 93 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~27m) 1721/1957 tested (1494 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 19m, remaining: ~27m) 1723/1957 tested (1496 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 19m, remaining: ~26m) 1724/1957 tested (1497 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 19m, remaining: ~26m) 1726/1957 tested (1499 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1727/1957 tested (1500 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1729/1957 tested (1502 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1730/1957 tested (1503 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1732/1957 tested (1505 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~25m) 1733/1957 tested (1506 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~25m) 1735/1957 tested (1508 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1736/1957 tested (1509 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1738/1957 tested (1511 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1739/1957 tested (1512 survived, 93 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1740/1957 tested (1513 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 21m, remaining: ~24m) 1742/1957 tested (1515 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 21m, remaining: ~24m) 1743/1957 tested (1516 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1745/1957 tested (1518 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1746/1957 tested (1519 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1748/1957 tested (1521 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1749/1957 tested (1522 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~23m) 1751/1957 tested (1524 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~23m) 1752/1957 tested (1525 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1754/1957 tested (1527 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1755/1957 tested (1528 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1757/1957 tested (1530 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1758/1957 tested (1531 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~22m) 1760/1957 tested (1533 survived, 93 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~22m) 1761/1957 tested (1534 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~22m) 1763/1957 tested (1536 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~22m) 1764/1957 tested (1537 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~22m) 1766/1957 tested (1539 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~21m) 1767/1957 tested (1540 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~21m) 1769/1957 tested (1542 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~21m) 1770/1957 tested (1543 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~21m) 1772/1957 tested (1545 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~21m) 1773/1957 tested (1546 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~21m) 1775/1957 tested (1548 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~20m) 1776/1957 tested (1549 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~20m) 1778/1957 tested (1551 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~20m) 1779/1957 tested (1552 survived, 93 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~20m) 1780/1957 tested (1553 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 26m, remaining: ~20m) 1782/1957 tested (1555 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 26m, remaining: ~20m) 1783/1957 tested (1556 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 26m, remaining: ~19m) 1785/1957 tested (1558 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 26m, remaining: ~19m) 1786/1957 tested (1559 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 26m, remaining: ~19m) 1788/1957 tested (1561 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~19m) 1789/1957 tested (1562 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~19m) 1791/1957 tested (1564 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~19m) 1792/1957 tested (1565 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~18m) 1794/1957 tested (1567 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~18m) 1795/1957 tested (1568 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~18m) 1797/1957 tested (1570 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~18m) 1798/1957 tested (1571 survived, 93 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~18m) 1800/1957 tested (1573 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 28m, remaining: ~18m) 1801/1957 tested (1574 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 28m, remaining: ~17m) 1803/1957 tested (1576 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 28m, remaining: ~17m) 1804/1957 tested (1577 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 28m, remaining: ~17m) 1806/1957 tested (1579 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~17m) 1807/1957 tested (1580 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~17m) 1809/1957 tested (1582 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~17m) 1810/1957 tested (1583 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~16m) 1812/1957 tested (1585 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~16m) 1813/1957 tested (1586 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~16m) 1815/1957 tested (1588 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~16m) 1816/1957 tested (1589 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~16m) 1818/1957 tested (1591 survived, 93 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~15m) 1819/1957 tested (1592 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 30m, remaining: ~15m) 1821/1957 tested (1594 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 30m, remaining: ~15m) 1822/1957 tested (1595 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 30m, remaining: ~15m) 1823/1957 tested (1596 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~15m) 1825/1957 tested (1598 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~15m) 1826/1957 tested (1599 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~14m) 1828/1957 tested (1601 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~14m) 1829/1957 tested (1602 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~14m) 1831/1957 tested (1604 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~14m) 1832/1957 tested (1605 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~14m) 1834/1957 tested (1607 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~14m) 1835/1957 tested (1608 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~13m) 1837/1957 tested (1610 survived, 93 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~13m) 1838/1957 tested (1611 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 32m, remaining: ~13m) 1840/1957 tested (1613 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 32m, remaining: ~13m) 1841/1957 tested (1614 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~13m) 1843/1957 tested (1616 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~13m) 1844/1957 tested (1617 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~12m) 1846/1957 tested (1619 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~12m) 1847/1957 tested (1620 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~12m) 1849/1957 tested (1622 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~12m) 1850/1957 tested (1623 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~12m) 1852/1957 tested (1625 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~12m) 1853/1957 tested (1626 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~11m) 1855/1957 tested (1628 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~11m) 1856/1957 tested (1629 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~11m) 1858/1957 tested (1631 survived, 93 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~11m) 1859/1957 tested (1632 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~11m) 1861/1957 tested (1634 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~10m) 1862/1957 tested (1635 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~10m) 1863/1957 tested (1636 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~10m) 1865/1957 tested (1638 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~10m) 1866/1957 tested (1639 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~10m) 1868/1957 tested (1641 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~10m) 1869/1957 tested (1642 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~9m) 1871/1957 tested (1644 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~9m) 1872/1957 tested (1645 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~9m) 1874/1957 tested (1647 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~9m) 1875/1957 tested (1648 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~9m) 1877/1957 tested (1650 survived, 93 timed out)
Mutation testing 95% (elapsed: ~3h 37m, remaining: ~9m) 1878/1957 tested (1651 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 37m, remaining: ~8m) 1880/1957 tested (1653 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 37m, remaining: ~8m) 1881/1957 tested (1654 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 37m, remaining: ~8m) 1883/1957 tested (1656 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 37m, remaining: ~8m) 1884/1957 tested (1657 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 37m, remaining: ~8m) 1886/1957 tested (1659 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~8m) 1887/1957 tested (1660 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~7m) 1889/1957 tested (1662 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~7m) 1890/1957 tested (1663 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~7m) 1892/1957 tested (1665 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~7m) 1893/1957 tested (1666 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~7m) 1895/1957 tested (1668 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~7m) 1896/1957 tested (1669 survived, 93 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~6m) 1898/1957 tested (1671 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 39m, remaining: ~6m) 1899/1957 tested (1672 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 39m, remaining: ~6m) 1901/1957 tested (1674 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 39m, remaining: ~6m) 1902/1957 tested (1675 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 39m, remaining: ~6m) 1903/1957 tested (1676 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~6m) 1905/1957 tested (1678 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~5m) 1906/1957 tested (1679 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~5m) 1908/1957 tested (1681 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~5m) 1909/1957 tested (1682 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~5m) 1911/1957 tested (1684 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~5m) 1912/1957 tested (1685 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~4m) 1914/1957 tested (1687 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~4m) 1915/1957 tested (1688 survived, 93 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~4m) 1917/1957 tested (1690 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 41m, remaining: ~4m) 1918/1957 tested (1691 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 41m, remaining: ~4m) 1920/1957 tested (1693 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 41m, remaining: ~4m) 1921/1957 tested (1694 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~3m) 1923/1957 tested (1696 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~3m) 1924/1957 tested (1697 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~3m) 1926/1957 tested (1699 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~3m) 1927/1957 tested (1700 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~3m) 1929/1957 tested (1702 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~3m) 1930/1957 tested (1703 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~2m) 1932/1957 tested (1705 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~2m) 1933/1957 tested (1706 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~2m) 1935/1957 tested (1708 survived, 93 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~2m) 1936/1957 tested (1709 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 43m, remaining: ~1m) 1940/1957 tested (1710 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 43m, remaining: ~1m) 1942/1957 tested (1712 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: ~1m) 1943/1957 tested (1713 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: ~1m) 1945/1957 tested (1715 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: ~1m) 1946/1957 tested (1716 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: ~1m) 1948/1957 tested (1718 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: <1m) 1949/1957 tested (1719 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: <1m) 1950/1957 tested (1720 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: <1m) 1952/1957 tested (1722 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: <1m) 1953/1957 tested (1723 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: <1m) 1955/1957 tested (1725 survived, 93 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: <1m) 1956/1957 tested (1726 survived, 93 timed out)

All tests
  ✓ All tests (killed 137)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "string") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "Q"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "undefined"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("buggy", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("rejected", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("error", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     throw new Error("Test error");
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return "Test string";
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.define) {

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           undefined(definition);

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           null(definition);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function () {});

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function (x) {
+     return x;
+   });

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function (x) {
+     throw new Error();
+   });

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "object") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "function") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok() && ses.makeQ) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.maybeOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok && ses.notOk()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" || typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" && typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.run();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, null);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, "foo");

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, 0);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(() => {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isBrowser) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isMobile) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(function () {}), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (undefined) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (domain && domain.exit()) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (flushing || !flushing) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "function") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(0);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush(1));

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush(function () {}));

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   requestAnimationFrame(flush);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(console.log("Test log"));

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "function") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:228:13
-               requestPortTick();
+               requestTick();

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing || true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (-1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (length - 1);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index in this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index === this.length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 1 >= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index >= length - 1) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index == length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 0) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (Object.prototype.hasOwnProperty.call(this, index)) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in Object.getOwnPropertyNames(this)) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(undefined, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(null, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(0, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index - 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] = null, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index--);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i == this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = 0) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] == value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] === undefined) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, index, value, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, self, index));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, this));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call({}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 0, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, undefined));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== null) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key])) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key--)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[key]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue === "string") {

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.source; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.then(function () {
+     return promise;
+   }); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.catch(function () {
+     return promise;
+   }); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.then) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.catch) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.finally) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source.source) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ >= p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(0));

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.concat());

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.slice(1));

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.split("\n")[0]);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.split("\n")[1]);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.split("\n")[2]);

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR);

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n")[0]);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n").reverse()[0]);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n").slice(1));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", stack);

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\r\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\n\r");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\r");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = undefined; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i == lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i + 1) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 1) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) || !isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) && isNodeFrame(line)) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isPromiseAlike(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\\n");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:)") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "string"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[2])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[1]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[2]);

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[0]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2.length) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3.length) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "1"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "0"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[4])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks && typeof console !== "undefined") {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\r");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].includes("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].match("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@filename") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@lineNumber") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@columnNumber") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn("deprecated")) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "undefined" && typeof console.warn === "function" && console.warn("deprecated")) {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(defer.prototype.constructor);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(defer.prototype.constructor.prototype);

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === undefined) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(null);

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(promise, args));

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(resolvedPromise, args));

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(0, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length > 0) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = undefined(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = null(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.source);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.inspect());

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === value) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.valueOf() === value.valueOf()) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.toString() === value.toString()) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseLike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue.promise)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue.then(function (value) {
+     return value;
+   }))) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue.catch(function (error) {
+     throw error;
+   }))) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === false) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n").length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.match(/\n/g).length);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\\n") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(0, message);

[Survived] PrecomputedMutator
q.js:624:62
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(message));

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(Q.resolve(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === false) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(resolve(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(notify(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(Q.reject("error")));

[Survived] PrecomputedMutator
q.js:649:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.promise) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.value) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.isResolved) {

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress());

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress(message));

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               deferred.reject(error);

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               promise.reject(error);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(console.log(error));

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_reduce(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_map(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[0], 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.slice(1), 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.length, 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(0);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "object") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== Function) {

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify());

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(undefined));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.fulfill(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.resolve(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.all(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(undefined).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(null);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.all([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.race([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.reject([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, null]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x > y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i == len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = 0) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.reject(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.resolve(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.all(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i - 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return null(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return undefined(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return {}(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (typeof inspect !== "function") {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op].bind(descriptor)) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply({}, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.promiseDispatch(resolve, op, args));

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(Promise.prototype.promiseDispatch.call(promise, resolve, op, args));

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(Promise.prototype.promiseDispatch.apply(promise, [resolve, op, args]));

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({}, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "when", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "then", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "catch", args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, undefined);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, void 0);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("PLACEHOLDER"));

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.value) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.reason) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "unknown") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch.bind(self));

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? null(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? undefined(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror()) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(JSON.stringify(e));

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === true) {

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.reject(new Error("something went wrong"))).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.resolve(null)).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.resolve(promise)).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(function () {
+     throw new Error("I'm a bug!");
+   });

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(function () {
+     return "I'm a bug!";
+   });

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(function () {
+     return Q.reject("I'm a bug!");
+   });

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fapply(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fbind(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, function () {});

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, null);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.reject(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.resolve(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.defer(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, resolved, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, undefined, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function (value) {
+     throw value;
+   });

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function (value) {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     throw value;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.resolve(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.defer(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(0).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(undefined)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(0)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "fulfilled" && inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isObject(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFunction(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(undefined) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise({}) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.inspect.state().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.inspect.value().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isFulfilled(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().value) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().reason) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().state) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.fulfilled().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isRejected(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(null) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(undefined) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise({}) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (true) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) > -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise) && unhandledReasons.includes(reason)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf([], promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined" && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.slice(0));

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.slice(1));

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.slice(0, 1));

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.indexOf(promise));

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.filter(function (rejection) {
+     return rejection === promise;
+   }), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledReasons);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections[0], promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.catch(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.finally(function () {}));

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport >= 0) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport < 0) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] = "new reason", promise);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledReasons.length = 0();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (undefined) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name != null) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(this);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(null);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name](value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].call(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].bind(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply({}, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, undefined);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(undefined);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, {});

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.throw);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, null, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, undefined, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, "foo", args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, []);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.fulfill(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.reject(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.resolve(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.defer(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(0).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.catch().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.finally().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(0, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "object") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "function") {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return undefined(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.toString());

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value.done) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value.then) {

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, errback, null);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return Q.reject(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return Q.resolve(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return Q.defer(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value.then(function (value) {
+     return value;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, undefined, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, reject);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, resolve);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("foo");

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.constructor === StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.stack)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return undefined(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.then(function (value) {
+     return value;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.then(function (value) {
+     return value.value;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, resolve, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, resolve);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "return"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw", "error"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw", "error", "message"));

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(undefined, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.resolve(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator())());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this, arguments))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(undefined)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply({}, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[1]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[2]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.defer(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({}).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + "d", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(args));

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.cancel, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, undefined);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.reject(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.defer(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(undefined).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q({}).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [undefined, key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [undefined, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.reject(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.resolve(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.defer(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q({}).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [null, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, value]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.reject(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.resolve(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.defer(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q({}).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, "value"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("clear", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [undefined, value]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, null]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, "foo"]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.defer(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, 1]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(1)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, null]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, 1]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, undefined]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, null]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.reject(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.resolve(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.defer(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q({}).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(undefined, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return Q.dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return Promise.prototype.dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("set", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, -1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(0, 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.reject(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.resolve(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.notify(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(function () {}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args, null]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args, undefined]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, 1]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, "foo"]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, void 0]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, void 0, void 0]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, void 0, void 0, void 0]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [this, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.reject(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.resolve(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.defer(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 3), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q({});

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 1)));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args.concat(array_slice(arguments, 3)));

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(this.arguments);

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", "foo");

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.resolve(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(undefined).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q({}).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("entries", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("hasOwnProperty", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("entries", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               undefined(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat([null]));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.map(function (promise) {
+     return promise.then(function (value) {
+       return value + 1;
+     });
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress + 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress - 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress * 2
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allResolved(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(undefined);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled));

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected).then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount === 1) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.message);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error(rejection));

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.stack);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return some(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(undefined);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.reject());

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "any");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "none");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_forEach(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.splice(index, 1, value), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(undefined, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(Q.reject(), noop, noop);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved({});

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.reject(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.resolve(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.defer(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.concat(Q.reject())).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.map(function (promise) {
+     return Q.reject(promise.inspect());
+   })).allSettled();

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Q.reject(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Q.resolve(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Q.defer(promise);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(null);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(0);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(rejected, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(fulfilled, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(noop, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless.call());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless.apply());

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, void 0);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, void 0);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.reject(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.resolve(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.defer(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(undefined).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     throw err;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     return err;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     return Q.reject(err);
+   });

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected.then(function () {
+     throw new Error("rejected");
+   }));

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, progressed, void 0);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(progressed, void 0, void 0);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, void 0);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(null).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(undefined).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(Q.reject("error")).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then("foo", void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, "foo", progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, function (value) {
+     return value;
+   });

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, function (value) {
+     throw new Error("Progress is not supported");
+   });

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, function (value) {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then("foo", void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, "foo", progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, () => {});

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.reject(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.resolve(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.defer(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](null);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](undefined);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](() => {});

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply === void 0) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply === null) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply === undefined) {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.defer(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(0);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, null);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress, undefined);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.reject(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.resolve(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.defer(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q({}).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(void 0, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, progress, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, void 0, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, resolved, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, undefined, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(undefined));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, void 0);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError, void 0);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, void 0, void 0);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then("foo", onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, function () {});

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.reject(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.resolve(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.defer(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(Q.reject(new Error("error"))).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(null, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(undefined, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.notify(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           null(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           undefined(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout < 0) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.reject(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.resolve(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.defer(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(42).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(-1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.reject(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.resolve(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.defer(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(deferred.resolve));

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       Q.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.nfapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.push(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 0, 2));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(deferred.resolve));

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== "undefined") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.fapply(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.nfapply(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.denodeify(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(function () {});

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(0, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat(args));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 0), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (err, result) {}));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(this);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q.delay(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q.reject(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q.defer(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.splice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat([]));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.filter(function () {
+     return true;
+   }));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(args));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.reverse());

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.reject(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.resolve(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.defer(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("name", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + "foo", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, undefined);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.post("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.send("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.reject(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.resolve(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.defer(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q({}).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "foo"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(0).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(null);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(undefined);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(() => {});

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback()) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback.call()) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback({}, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, "foo");

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   undefined(error);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback("error");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail.head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("error");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.reject(error));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(new Error("Custom error message"))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(null);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(Q.reject(new Error("Can't get value from closed queue")));

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(Q.resolve(end));

Ran 0.95 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.75 |      137 |        93 |       1727 |        0 |        0 |
 q.js     |   11.86 |      137 |        93 |       1710 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         17 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m04:44:04 (3380) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m04:44:04 (3380) INFO MutationTestExecutor[39m Done in 225 minutes 42 seconds.

real	225m43.895s
user	38m44.375s
sys	7m2.875s
