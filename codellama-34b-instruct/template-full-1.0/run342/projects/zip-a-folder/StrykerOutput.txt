*** using precomputed mutations ***
[32m22:37:07 (2425) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m22:37:07 (2425) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m22:37:07 (2425) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/zip-a-folder/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m22:37:07 (2425) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m22:37:07 (2425) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m22:37:07 (2425) INFO ProjectReader[39m Found 1 of 231 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 84 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression === COMPRESSION_LEVEL.medium
Mutant 1 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression === COMPRESSION_LEVEL.high + 1
Mutant 2 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression === COMPRESSION_LEVEL.uncompressed && o.compression !== COMPRESSION_LEVEL.uncompressed
Mutant 3 in ZipAFolder.ts: {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions
} replaced with {
  src,
  targetFilePath: zipFilePath,
  format: 'zip',
  zipAFolderOptions
}
Mutant 4 in ZipAFolder.ts: {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions
} replaced with {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions: {
    compression: COMPRESSION_LEVEL.uncompressed
  }
}
Mutant 5 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression == COMPRESSION_LEVEL.high
Mutant 6 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression != COMPRESSION_LEVEL.uncompressed
Mutant 7 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression === COMPRESSION_LEVEL.medium
Mutant 8 in ZipAFolder.ts: !zipAFolderOptions?.customWriteStream && targetFilePath replaced with !zipAFolderOptions?.customWriteStream && !targetFilePath
Mutant 9 in ZipAFolder.ts: !zipAFolderOptions?.customWriteStream && targetFilePath replaced with zipAFolderOptions?.customWriteStream || !targetFilePath
Mutant 10 in ZipAFolder.ts: !zipAFolderOptions?.customWriteStream && targetFilePath replaced with zipAFolderOptions === 'customWriteStream'
Mutant 11 in ZipAFolder.ts: path.dirname replaced with ''
Mutant 12 in ZipAFolder.ts: path.dirname replaced with 1
Mutant 13 in ZipAFolder.ts: targetBasePath === src replaced with targetBasePath !== src
Mutant 14 in ZipAFolder.ts: targetBasePath === src replaced with targetBasePath.split('/') === src.split('/')
Mutant 15 in ZipAFolder.ts: targetBasePath === src replaced with path.dirname(targetBasePath) === path.dirname(src)
Mutant 16 in ZipAFolder.ts: !isGlob(src) replaced with isGlob(src)
Mutant 17 in ZipAFolder.ts: !isGlob(src) replaced with !isGlob(undefined)
Mutant 18 in ZipAFolder.ts: src replaced with src[0]
Mutant 19 in ZipAFolder.ts: fs.promises.access(src, fs.constants.R_OK) replaced with fs.promises.access(src, fs.constants.W_OK)
Mutant 20 in ZipAFolder.ts: fs.promises.access(src, fs.constants.R_OK) replaced with fs.promises.access(null, null)
Mutant 21 in ZipAFolder.ts: fs.promises.access(src, fs.constants.R_OK) replaced with fs.promises.access(Math.random() * 10, Math.random() * 10)
Mutant 22 in ZipAFolder.ts: src replaced with 1 + 1
Mutant 23 in ZipAFolder.ts: src replaced with isEmpty(src)
Mutant 24 in ZipAFolder.ts: src replaced with src.length - 1
Mutant 25 in ZipAFolder.ts: fs.constants.R_OK replaced with fs.constants.W_OK
Mutant 26 in ZipAFolder.ts: fs.constants.R_OK replaced with fs.constants.X_OK
Mutant 27 in ZipAFolder.ts: fs.constants.R_OK replaced with fs.constants.F_OK
Mutant 28 in ZipAFolder.ts: fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK) replaced with fs.promises.access(targetBasePath, fs.constants.R_OK)
Mutant 29 in ZipAFolder.ts: fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK) replaced with fs.promises.access(targetBasePath, fs.constants.W_OK)
Mutant 30 in ZipAFolder.ts: fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK) replaced with fs.promises.access("", fs.constants.R_OK | fs.constants.W_OK)
Mutant 31 in ZipAFolder.ts: targetBasePath replaced with targetBasePath.substring(1)
Mutant 32 in ZipAFolder.ts: targetBasePath replaced with targetBasePath + 'test'
Mutant 33 in ZipAFolder.ts: targetBasePath replaced with path.reduce(targetBasePath, (p, c) => c.toUpperCase() + p)
Mutant 34 in ZipAFolder.ts: fs.constants.R_OK | fs.constants.W_OK replaced with fs.constants.R_OK ^ fs.constants.W_OK
Mutant 35 in ZipAFolder.ts: fs.constants.R_OK | fs.constants.W_OK replaced with fs.constants.R_OK * fs.constants.W_OK
Mutant 36 in ZipAFolder.ts: fs.constants.R_OK | fs.constants.W_OK replaced with fs.constants.R_OK + fs.constants.W_OK
Mutant 37 in ZipAFolder.ts: fs.createWriteStream replaced with fs.openWriteStream
Mutant 38 in ZipAFolder.ts: targetFilePath replaced with "targetFilePath.toUpperCase()"
Mutant 39 in ZipAFolder.ts: targetFilePath replaced with "targetFilePath + Math.random()"
Mutant 40 in ZipAFolder.ts: targetFilePath replaced with "targetFilePath.split('').reverse().join('')"
Mutant 41 in ZipAFolder.ts: zipAFolderOptions && zipAFolderOptions.customWriteStream replaced with !!!zipAFolderOptions && zipAFolderOptions.customWriteStream
Mutant 42 in ZipAFolder.ts: zipAFolderOptions && zipAFolderOptions.customWriteStream replaced with zipAFolderOptions.customWriteStream ?? zipAFolderOptions.customWriteStream
Mutant 43 in ZipAFolder.ts: zipAFolderOptions && zipAFolderOptions.customWriteStream replaced with zipAFolderOptions.customWriteStream || zipAFolderOptions.customWriteStream
Mutant 44 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver(format, null)
Mutant 45 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver(format, undefined)
Mutant 46 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver(format, {
  store: false
})
Mutant 47 in ZipAFolder.ts: archiverOptions || {} replaced with null
Mutant 48 in ZipAFolder.ts: archiverOptions || {} replaced with {}
Mutant 49 in ZipAFolder.ts: archiverOptions || {} replaced with {
  garbage: true
}
Mutant 50 in ZipAFolder.ts: output.on('close', resolve) replaced with output.on('data', resolve)
Mutant 51 in ZipAFolder.ts: output.on('close', resolve) replaced with output.on('error', reject)
Mutant 52 in ZipAFolder.ts: output.on replaced with output.off
Mutant 53 in ZipAFolder.ts: 'close' replaced with 'end'
Mutant 54 in ZipAFolder.ts: 'close' replaced with 'finish'
Mutant 55 in ZipAFolder.ts: resolve replaced with resolve(null)
Mutant 56 in ZipAFolder.ts: resolve replaced with reject('Error')
Mutant 57 in ZipAFolder.ts: resolve replaced with resolve('Triangle')
Mutant 58 in ZipAFolder.ts: output.on('error', reject) replaced with output.on('error', resolve)
Mutant 59 in ZipAFolder.ts: output.on('error', reject) replaced with output.on('close', reject)
Mutant 60 in ZipAFolder.ts: output.on replaced with output.once
Mutant 61 in ZipAFolder.ts: output.on replaced with output.off
Mutant 62 in ZipAFolder.ts: output.on replaced with output.emit
Mutant 63 in ZipAFolder.ts: reject replaced with accept
Mutant 64 in ZipAFolder.ts: reject replaced with output.reject(new Error('Some error message'))
Mutant 65 in ZipAFolder.ts: reject replaced with output.resolve(null)
Mutant 66 in ZipAFolder.ts: isGlob(src) replaced with !isGlob(src)
Mutant 67 in ZipAFolder.ts: src replaced with src + 'a'
Mutant 68 in ZipAFolder.ts: src replaced with src.substring(1)
Mutant 69 in ZipAFolder.ts: src replaced with src.toUpperCase()
Mutant 70 in ZipAFolder.ts: src.split replaced with src.substr
Mutant 71 in ZipAFolder.ts: src.split replaced with src.length
Mutant 72 in ZipAFolder.ts: src.split replaced with src.trim
not replacing src.split with src.substr
not replacing src.split with src.substr
not replacing src.split with src.length
not replacing src.split with src.length
not replacing src.split with src.trim
not replacing src.split with src.trim
Mutant 73 in ZipAFolder.ts: globPart replaced with null
Mutant 74 in ZipAFolder.ts: globPart replaced with ""
Mutant 75 in ZipAFolder.ts: zipArchive.directory(src, false) replaced with zipArchive.directory(src, true)
Mutant 76 in ZipAFolder.ts: zipArchive.directory(src, false) replaced with zipArchive.directory("some/other/path", false)
Mutant 77 in ZipAFolder.ts: zipArchive.directory replaced with zipArchive.file
Mutant 78 in ZipAFolder.ts: src replaced with 1 + src
Mutant 79 in ZipAFolder.ts: src replaced with src + 'xyz'
Mutant 80 in ZipAFolder.ts: src replaced with 'hello ' + src
Mutant 81 in ZipAFolder.ts: false replaced with true
Mutant 82 in ZipAFolder.ts: false replaced with {
  0: false,
  1: true,
  2: false
}
Mutant 83 in ZipAFolder.ts: false replaced with undefined
[32m22:37:08 (2425) INFO Instrumenter[39m Instrumented 1 source file(s) with 84 mutant(s)
[32m22:37:08 (2425) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m22:37:09 (2425) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m22:37:09 (2425) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m22:37:15 (2425) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 5 seconds (net 5933 ms, overhead 0 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~13m) 1/84 tested (1 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~9m) 3/84 tested (3 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~7m) 5/84 tested (4 survived, 0 timed out)
Mutation testing 8% (elapsed: <1m, remaining: ~7m) 7/84 tested (4 survived, 0 timed out)
Mutation testing 11% (elapsed: <1m, remaining: ~6m) 10/84 tested (4 survived, 0 timed out)
Mutation testing 15% (elapsed: ~1m, remaining: ~5m) 13/84 tested (4 survived, 0 timed out)
Mutation testing 16% (elapsed: ~1m, remaining: ~5m) 14/84 tested (4 survived, 0 timed out)
Mutation testing 17% (elapsed: ~1m, remaining: ~6m) 15/84 tested (4 survived, 1 timed out)
Mutation testing 19% (elapsed: ~1m, remaining: ~6m) 16/84 tested (4 survived, 2 timed out)
Mutation testing 19% (elapsed: ~1m, remaining: ~7m) 16/84 tested (4 survived, 2 timed out)
Mutation testing 20% (elapsed: ~1m, remaining: ~7m) 17/84 tested (4 survived, 3 timed out)
Mutation testing 21% (elapsed: ~2m, remaining: ~7m) 18/84 tested (4 survived, 4 timed out)
Mutation testing 21% (elapsed: ~2m, remaining: ~7m) 18/84 tested (4 survived, 4 timed out)
Mutation testing 22% (elapsed: ~2m, remaining: ~7m) 19/84 tested (4 survived, 5 timed out)
Mutation testing 23% (elapsed: ~2m, remaining: ~7m) 20/84 tested (4 survived, 6 timed out)
Mutation testing 25% (elapsed: ~2m, remaining: ~8m) 21/84 tested (4 survived, 7 timed out)
Mutation testing 25% (elapsed: ~2m, remaining: ~8m) 21/84 tested (4 survived, 7 timed out)
Mutation testing 26% (elapsed: ~3m, remaining: ~8m) 22/84 tested (4 survived, 8 timed out)
Mutation testing 27% (elapsed: ~3m, remaining: ~8m) 23/84 tested (4 survived, 9 timed out)
Mutation testing 27% (elapsed: ~3m, remaining: ~8m) 23/84 tested (4 survived, 9 timed out)
Mutation testing 28% (elapsed: ~3m, remaining: ~8m) 24/84 tested (4 survived, 10 timed out)
Mutation testing 29% (elapsed: ~3m, remaining: ~8m) 25/84 tested (4 survived, 11 timed out)
Mutation testing 30% (elapsed: ~3m, remaining: ~8m) 26/84 tested (4 survived, 12 timed out)
Mutation testing 30% (elapsed: ~4m, remaining: ~8m) 26/84 tested (4 survived, 12 timed out)
Mutation testing 32% (elapsed: ~4m, remaining: ~8m) 27/84 tested (4 survived, 13 timed out)
Mutation testing 33% (elapsed: ~4m, remaining: ~8m) 28/84 tested (4 survived, 14 timed out)
Mutation testing 33% (elapsed: ~4m, remaining: ~9m) 28/84 tested (4 survived, 14 timed out)
Mutation testing 34% (elapsed: ~4m, remaining: ~8m) 29/84 tested (4 survived, 15 timed out)
Mutation testing 35% (elapsed: ~4m, remaining: ~8m) 30/84 tested (4 survived, 16 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~8m) 31/84 tested (4 survived, 17 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~8m) 31/84 tested (4 survived, 17 timed out)
Mutation testing 38% (elapsed: ~5m, remaining: ~8m) 32/84 tested (4 survived, 18 timed out)
Mutation testing 39% (elapsed: ~5m, remaining: ~8m) 33/84 tested (4 survived, 19 timed out)
Mutation testing 39% (elapsed: ~5m, remaining: ~8m) 33/84 tested (4 survived, 19 timed out)
Mutation testing 40% (elapsed: ~5m, remaining: ~8m) 34/84 tested (4 survived, 20 timed out)
Mutation testing 41% (elapsed: ~6m, remaining: ~8m) 35/84 tested (4 survived, 21 timed out)
Mutation testing 42% (elapsed: ~6m, remaining: ~8m) 36/84 tested (4 survived, 22 timed out)
Mutation testing 42% (elapsed: ~6m, remaining: ~8m) 36/84 tested (4 survived, 22 timed out)
Mutation testing 44% (elapsed: ~6m, remaining: ~8m) 37/84 tested (4 survived, 23 timed out)
Mutation testing 45% (elapsed: ~6m, remaining: ~8m) 38/84 tested (4 survived, 24 timed out)
Mutation testing 45% (elapsed: ~6m, remaining: ~8m) 38/84 tested (4 survived, 24 timed out)
Mutation testing 46% (elapsed: ~7m, remaining: ~8m) 39/84 tested (4 survived, 25 timed out)
Mutation testing 47% (elapsed: ~7m, remaining: ~7m) 40/84 tested (4 survived, 26 timed out)
Mutation testing 48% (elapsed: ~7m, remaining: ~7m) 41/84 tested (4 survived, 27 timed out)
Mutation testing 48% (elapsed: ~7m, remaining: ~7m) 41/84 tested (4 survived, 27 timed out)
Mutation testing 50% (elapsed: ~7m, remaining: ~7m) 42/84 tested (4 survived, 28 timed out)
Mutation testing 51% (elapsed: ~7m, remaining: ~7m) 43/84 tested (4 survived, 29 timed out)
Mutation testing 51% (elapsed: ~8m, remaining: ~7m) 43/84 tested (4 survived, 29 timed out)
Mutation testing 52% (elapsed: ~8m, remaining: ~7m) 44/84 tested (4 survived, 30 timed out)
Mutation testing 53% (elapsed: ~8m, remaining: ~7m) 45/84 tested (4 survived, 31 timed out)
Mutation testing 54% (elapsed: ~8m, remaining: ~7m) 46/84 tested (4 survived, 32 timed out)
Mutation testing 54% (elapsed: ~8m, remaining: ~7m) 46/84 tested (4 survived, 32 timed out)
Mutation testing 55% (elapsed: ~8m, remaining: ~6m) 47/84 tested (4 survived, 33 timed out)
Mutation testing 57% (elapsed: ~9m, remaining: ~6m) 48/84 tested (4 survived, 34 timed out)
Mutation testing 58% (elapsed: ~9m, remaining: ~6m) 49/84 tested (4 survived, 35 timed out)
Mutation testing 58% (elapsed: ~9m, remaining: ~6m) 49/84 tested (4 survived, 35 timed out)
Mutation testing 59% (elapsed: ~9m, remaining: ~6m) 50/84 tested (4 survived, 36 timed out)
Mutation testing 60% (elapsed: ~9m, remaining: ~6m) 51/84 tested (4 survived, 37 timed out)
Mutation testing 60% (elapsed: ~9m, remaining: ~6m) 51/84 tested (4 survived, 37 timed out)
Mutation testing 61% (elapsed: ~10m, remaining: ~6m) 52/84 tested (4 survived, 38 timed out)
Mutation testing 63% (elapsed: ~10m, remaining: ~5m) 53/84 tested (4 survived, 39 timed out)
Mutation testing 64% (elapsed: ~10m, remaining: ~5m) 54/84 tested (4 survived, 40 timed out)
Mutation testing 64% (elapsed: ~10m, remaining: ~5m) 54/84 tested (4 survived, 40 timed out)
Mutation testing 67% (elapsed: ~10m, remaining: ~5m) 57/84 tested (4 survived, 41 timed out)
Mutation testing 69% (elapsed: ~10m, remaining: ~4m) 58/84 tested (4 survived, 41 timed out)
Mutation testing 70% (elapsed: ~11m, remaining: ~4m) 59/84 tested (4 survived, 42 timed out)
Mutation testing 70% (elapsed: ~11m, remaining: ~4m) 59/84 tested (4 survived, 42 timed out)
Mutation testing 71% (elapsed: ~11m, remaining: ~4m) 60/84 tested (4 survived, 43 timed out)
Mutation testing 72% (elapsed: ~11m, remaining: ~4m) 61/84 tested (4 survived, 44 timed out)
Mutation testing 73% (elapsed: ~11m, remaining: ~4m) 62/84 tested (4 survived, 45 timed out)
Mutation testing 77% (elapsed: ~11m, remaining: ~3m) 65/84 tested (4 survived, 45 timed out)
Mutation testing 79% (elapsed: ~12m, remaining: ~3m) 67/84 tested (4 survived, 45 timed out)
Mutation testing 80% (elapsed: ~12m, remaining: ~2m) 68/84 tested (4 survived, 46 timed out)
Mutation testing 80% (elapsed: ~12m, remaining: ~2m) 68/84 tested (4 survived, 46 timed out)
Mutation testing 82% (elapsed: ~12m, remaining: ~2m) 69/84 tested (4 survived, 47 timed out)
Mutation testing 83% (elapsed: ~12m, remaining: ~2m) 70/84 tested (4 survived, 48 timed out)
Mutation testing 84% (elapsed: ~12m, remaining: ~2m) 71/84 tested (4 survived, 49 timed out)
Mutation testing 84% (elapsed: ~13m, remaining: ~2m) 71/84 tested (4 survived, 49 timed out)
Mutation testing 85% (elapsed: ~13m, remaining: ~2m) 72/84 tested (4 survived, 50 timed out)
Mutation testing 86% (elapsed: ~13m, remaining: ~2m) 73/84 tested (4 survived, 51 timed out)
Mutation testing 86% (elapsed: ~13m, remaining: ~2m) 73/84 tested (4 survived, 51 timed out)
Mutation testing 88% (elapsed: ~13m, remaining: ~1m) 74/84 tested (4 survived, 52 timed out)
Mutation testing 89% (elapsed: ~13m, remaining: ~1m) 75/84 tested (4 survived, 53 timed out)
Mutation testing 90% (elapsed: ~14m, remaining: ~1m) 76/84 tested (4 survived, 54 timed out)
Mutation testing 94% (elapsed: ~14m, remaining: <1m) 79/84 tested (4 survived, 54 timed out)
Mutation testing 96% (elapsed: ~14m, remaining: <1m) 81/84 tested (4 survived, 54 timed out)
Mutation testing 96% (elapsed: ~14m, remaining: <1m) 81/84 tested (4 survived, 54 timed out)
Mutation testing 97% (elapsed: ~14m, remaining: <1m) 82/84 tested (4 survived, 55 timed out)
Mutation testing 98% (elapsed: ~14m, remaining: <1m) 83/84 tested (4 survived, 56 timed out)

All tests
  ✓ All tests (killed 23)

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:40:13
-           if (o.compression === COMPRESSION_LEVEL.uncompressed) {
+           if (o.compression === COMPRESSION_LEVEL.medium) {

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:40:13
-           if (o.compression === COMPRESSION_LEVEL.uncompressed) {
+           if (o.compression === COMPRESSION_LEVEL.high + 1) {

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:40:13
-           if (o.compression === COMPRESSION_LEVEL.uncompressed) {
+           if (o.compression === COMPRESSION_LEVEL.uncompressed && o.compression !== COMPRESSION_LEVEL.uncompressed) {

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:41:39
-               await ZipAFolder.compress({src, targetFilePath: tarFilePath, format: 'tar', zipAFolderOptions});
+               await ZipAFolder.compress({
+     src,
+     targetFilePath: tarFilePath,
+     format: 'tar',
+     zipAFolderOptions: {
+       compression: COMPRESSION_LEVEL.uncompressed
+     }
+   });

Ran 0.32 tests per mutant on average.
---------------|---------|----------|-----------|------------|----------|----------|
File           | % score | # killed | # timeout | # survived | # no cov | # errors |
---------------|---------|----------|-----------|------------|----------|----------|
All files      |   95.24 |       23 |        57 |          4 |        0 |        0 |
 ZipAFolder.ts |   95.24 |       23 |        57 |          4 |        0 |        0 |
---------------|---------|----------|-----------|------------|----------|----------|
[32m22:52:13 (2425) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/zip-a-folder/reports/mutation/mutation.html
[32m22:52:13 (2425) INFO MutationTestExecutor[39m Done in 15 minutes 6 seconds.

real	15m8.744s
user	2m31.370s
sys	0m18.495s
