*** using precomputed mutations ***
[32m00:50:30 (2743) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m00:50:30 (2743) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m00:50:31 (2743) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m00:50:31 (2743) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m00:50:31 (2743) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m00:50:33 (2743) INFO ProjectReader[39m Found 31 of 1504 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 740 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in throughs) exports[k] = sources[k];
Mutant 1 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in sinks) exports[k] = sources[k];
Mutant 2 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in exports) exports[k] = sources[k];
Mutant 3 in index.js: sources replaced with sinks
Mutant 4 in index.js: sources replaced with throughs.length
Mutant 5 in index.js: sources replaced with throughs[k]
Mutant 6 in index.js: throughs replaced with null
Mutant 7 in index.js: throughs replaced with {}
Mutant 8 in index.js: throughs replaced with undefined
Mutant 9 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'object'
Mutant 10 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'function' && a.length === 0
Mutant 11 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'string'
Mutant 12 in pull.js: i < length replaced with i <= length
Mutant 13 in pull.js: i < length replaced with length - i
Mutant 14 in pull.js: i < length replaced with i >= 0
Mutant 15 in pull.js: i++ replaced with i--
Mutant 16 in pull.js: i++ replaced with i + 1
Mutant 17 in pull.js: i++ replaced with i / 2
Mutant 18 in pull.js: args == null replaced with args === undefined
Mutant 19 in pull.js: args == null replaced with args.length === 0
Mutant 20 in pull.js: args == null replaced with !Array.isArray(args)
Mutant 21 in pull.js: length replaced with length - 1
Mutant 22 in pull.js: length replaced with length - 2
Mutant 23 in pull.js: length replaced with length + 1
Mutant 24 in pull.js: pull(read, ref[0]) replaced with pull(read, ref[1])
Mutant 25 in pull.js: pull(read, ref[0]) replaced with pull(read + ref[0])
Mutant 26 in pull.js: pull(read, ref[0]) replaced with pull(read * ref[0])
Mutant 27 in pull.js: read replaced with read ? read.source() : undefined
Mutant 28 in pull.js: read replaced with read ? null : undefined
Mutant 29 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], ref[2])
Mutant 30 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], ref[1], ref[3])
Mutant 31 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], ref[1], ref[2], ref[3])
Mutant 32 in pull.js: read replaced with read + 1
Mutant 33 in pull.js: read replaced with read - 1
Mutant 34 in pull.js: read replaced with null
Mutant 35 in pull.js: ref[0] replaced with ref[i]
Mutant 36 in pull.js: ref[0] replaced with ref[length - 1]
Mutant 37 in pull.js: ref[0] replaced with ref[i + 1]
Mutant 38 in pull.js: ref[1] replaced with ref[2]
Mutant 39 in pull.js: ref[1] replaced with ref.length
Mutant 40 in pull.js: ref[1] replaced with ref.push(read)
Mutant 41 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], ref[2], ref[3])
Mutant 42 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], ref[2], ref[3] + 1)
Mutant 43 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], ref[2], ref[0])
Mutant 44 in pull.js: read replaced with read.label
Mutant 45 in pull.js: read replaced with read.property
Mutant 46 in pull.js: read replaced with read.method()
Mutant 47 in pull.js: ref[0] replaced with ref[0](x)
Mutant 48 in pull.js: ref[0] replaced with ref[1](x)
Mutant 49 in pull.js: ref[0] replaced with ref[2](x)
Mutant 50 in pull.js: ref[1] replaced with ref[2]
Mutant 51 in pull.js: ref[1] replaced with undefined
Mutant 52 in pull.js: ref[1] replaced with "hello"
Mutant 53 in pull.js: ref[2] replaced with ref[3]
Mutant 54 in pull.js: ref[2] replaced with ref[1] + ref[2]
Mutant 55 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(sink, ref[0], ref[1], ref[2], ref[3])
Mutant 56 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(read.source, ref[0], ref[1], ref[2], ref[3])
Mutant 57 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(ref[3], ref[0], ref[1], ref[2], read)
Mutant 58 in pull.js: read replaced with read + 1
Mutant 59 in pull.js: read replaced with read * 2
Mutant 60 in pull.js: read replaced with read(1)
Mutant 61 in pull.js: ref[0] replaced with null
Mutant 62 in pull.js: ref[0] replaced with undefined
Mutant 63 in pull.js: ref[0] replaced with ref[1]
Mutant 64 in pull.js: ref[1] replaced with ref[0]
Mutant 65 in pull.js: ref[1] replaced with ref[2]
Mutant 66 in pull.js: ref[1] replaced with 1 + ref[1]
Mutant 67 in pull.js: ref[2] replaced with ref[3]
Mutant 68 in pull.js: ref[2] replaced with ref[0]
Mutant 69 in pull.js: ref[2] replaced with ref[2] + 1
Mutant 70 in pull.js: ref[3] replaced with ref[2]
Mutant 71 in pull.js: ref[3] replaced with ref[3] + 1
Mutant 72 in pull.js: ref[3] replaced with ref[3] * 2
Mutant 73 in pull.js: read replaced with 0
Mutant 74 in pull.js: read replaced with read + 0
Mutant 75 in pull.js: read replaced with read.bind(null)
Mutant 76 in pull.js: pull.apply(null, ref) replaced with pull.apply(undefined, ref)
Mutant 77 in pull.js: pull.apply(null, ref) replaced with pull.apply(null, null)
Mutant 78 in pull.js: pull.apply(null, ref) replaced with pull.apply(s, ref)
Mutant 79 in pull.js: null replaced with 42
Mutant 80 in pull.js: null replaced with read.source
Mutant 81 in pull.js: null replaced with s.source
Mutant 82 in pull.js: ref replaced with ref.shift()
Mutant 83 in pull.js: ref replaced with ref.pop()
Mutant 84 in pull.js: ref replaced with ref.slice(1)
Mutant 85 in pull.js: read && typeof read.source === 'function' replaced with !read || typeof read.source !== 'function'
Mutant 86 in pull.js: read && typeof read.source === 'function' replaced with read && typeof read.source === 'object'
Mutant 87 in pull.js: read && typeof read.source === 'function' replaced with read && typeof read.source === 'function' && read.source.length === 1
Mutant 88 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = 0; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 89 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = length - 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 90 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = Math.floor(Math.random() * length); i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 91 in pull.js: i++ replaced with i--
Mutant 92 in pull.js: i++ replaced with i += 2
Mutant 93 in pull.js: i++ replaced with i *= 2
Mutant 94 in pull.js: typeof s === 'function' replaced with s.name === 'function'
Mutant 95 in pull.js: typeof s === 'function' replaced with s.constructor === Function
Mutant 96 in pull.js: typeof s === 'function' replaced with s.isFunction()
Mutant 97 in pull.js: s replaced with s && s
Mutant 98 in pull.js: s replaced with s[0]
Mutant 99 in pull.js: read replaced with read + 1
Mutant 100 in pull.js: read replaced with read - 1
Mutant 101 in pull.js: read replaced with read * 2
Mutant 102 in pull.js: s.sink replaced with !s.sink
Mutant 103 in pull.js: s.sink replaced with s.source
Mutant 104 in pull.js: read replaced with null
Mutant 105 in pull.js: read replaced with ""
Mutant 106 in pull.js: read replaced with 0
Mutant 107 in collect.js: arr.push replaced with arr.splice
Mutant 108 in collect.js: arr.push replaced with arr.concat
Mutant 109 in collect.js: arr.push replaced with arr.slice
Mutant 110 in collect.js: item replaced with arr.push(item + 1)
Mutant 111 in collect.js: item replaced with arr.push(item - 1)
Mutant 112 in collect.js: item replaced with arr.push('something else')
Mutant 113 in drain.js: !done replaced with !done()
Mutant 114 in drain.js: !done replaced with !done || true
Mutant 115 in drain.js: !done replaced with !!done
Mutant 116 in drain.js: abort replaced with !abort
Mutant 117 in drain.js: abort replaced with abort === true
Mutant 118 in drain.js: abort replaced with false
Mutant 119 in drain.js: loop replaced with abort
Mutant 120 in drain.js: loop replaced with read
Mutant 121 in drain.js: loop replaced with op
Mutant 122 in drain.js: end = end || abort replaced with end = end && abort
Mutant 123 in drain.js: end = end || abort replaced with end = (end || abort) && true
Mutant 124 in drain.js: end = end || abort replaced with end = end || abort ? end : abort
Mutant 125 in drain.js: done replaced with undefined
Mutant 126 in drain.js: done replaced with null
Mutant 127 in drain.js: done replaced with done(null, err)
Mutant 128 in drain.js: end === true ? null : end replaced with end
Mutant 129 in drain.js: end === true ? null : end replaced with !end
Mutant 130 in drain.js: end === true ? null : end replaced with !(end === true)
Mutant 131 in drain.js: end && end !== true replaced with end && end == true
Mutant 132 in drain.js: end && end !== true replaced with end != null && end !== true
Mutant 133 in drain.js: end && end !== true replaced with end && (end !== true || end !== false)
Mutant 134 in drain.js: console.warn replaced with console.log
Mutant 135 in drain.js: console.warn replaced with console.error
Mutant 136 in drain.js: doneLackingErr replaced with doneLackingErr()
Mutant 137 in drain.js: doneLackingErr replaced with null
Mutant 138 in drain.js: doneLackingErr replaced with undefined
Mutant 139 in drain.js: op && false === op(data) || abort replaced with op && true === op(data) || abort
Mutant 140 in drain.js: op && false === op(data) || abort replaced with op && false == op(data) || abort
Mutant 141 in drain.js: op && false === op(data) || abort replaced with op && op(data) == false || abort
Mutant 142 in drain.js: op replaced with op + 1
Mutant 143 in drain.js: op replaced with op * 2
Mutant 144 in drain.js: op replaced with !op
Mutant 145 in drain.js: data replaced with null
Mutant 146 in drain.js: read(abort || true, done || function () {}) replaced with read(abort || false, done || function () {})
Mutant 147 in drain.js: read(abort || true, done || function () {}) replaced with read(abort || 0, done || function () {})
Mutant 148 in drain.js: read(abort || true, done || function () {}) replaced with read(abort || null, done || function () {})
Mutant 149 in drain.js: read replaced with read && {}
Mutant 150 in drain.js: read replaced with read || {}
Mutant 151 in drain.js: read replaced with read ? {} : null
Mutant 152 in drain.js: abort || true replaced with abort && false
Mutant 153 in drain.js: abort || true replaced with !abort
Mutant 154 in drain.js: abort || true replaced with null
Mutant 155 in drain.js: done || function () {} replaced with null
Mutant 156 in drain.js: done || function () {} replaced with undefined
Mutant 157 in drain.js: done || function () {} replaced with function (end, data) {}
Mutant 158 in drain.js: !loop replaced with loop
Mutant 159 in drain.js: !loop replaced with loop == 0
Mutant 160 in drain.js: next replaced with null
Mutant 161 in drain.js: !cbed replaced with loop = false
Mutant 162 in drain.js: 'function' == typeof err replaced with 'number' == typeof err
Mutant 163 in drain.js: 'function' == typeof err replaced with 'function' == typeof cb
Mutant 164 in drain.js: read replaced with abort
Mutant 165 in drain.js: read replaced with console.log
Mutant 166 in drain.js: read replaced with Sink
Mutant 167 in drain.js: read(abort, cb || function () {}) replaced with read(abort || cb())
Mutant 168 in drain.js: read(abort, cb || function () {}) replaced with read(abort && cb())
Mutant 169 in drain.js: read(abort, cb || function () {}) replaced with read(abort ? cb() : null)
Mutant 170 in drain.js: read replaced with abort = abort
Mutant 171 in drain.js: read replaced with abort = true
Mutant 172 in drain.js: read replaced with read = abort
Mutant 173 in drain.js: abort replaced with null
Mutant 174 in drain.js: abort replaced with undefined
Mutant 175 in drain.js: abort replaced with 'abort'
Mutant 176 in drain.js: cb || function () {} replaced with function () {}
Mutant 177 in drain.js: cb || function () {} replaced with true
Mutant 178 in drain.js: cb || function () {} replaced with function (err, cb) {
  return err;
}
Mutant 179 in find.js: !cb replaced with !cb || !test
Mutant 180 in find.js: !cb replaced with cb && test
Mutant 181 in find.js: !cb replaced with cb || test
Mutant 182 in find.js: prop replaced with !prop
Mutant 183 in find.js: prop replaced with prop + 1
Mutant 184 in find.js: test(data) replaced with !test(data)
Mutant 185 in find.js: test(data) replaced with test(data) && data.length > 0
Mutant 186 in find.js: test(data) replaced with test(data) || false
Mutant 187 in find.js: test replaced with test && false
Mutant 188 in find.js: data replaced with data * 2
Mutant 189 in find.js: data replaced with data + 1
Mutant 190 in find.js: cb(null, data) replaced with cb(undefined, data)
Mutant 191 in find.js: cb(null, data) replaced with cb(null, null)
Mutant 192 in find.js: cb(null, data) replaced with cb(false, data)
Mutant 193 in find.js: null replaced with undefined
Mutant 194 in find.js: null replaced with false
Mutant 195 in find.js: null replaced with 0
Mutant 196 in find.js: data replaced with {
  data: data
}
Mutant 197 in find.js: data replaced with data + 1
Mutant 198 in find.js: data replaced with data[0]
Mutant 199 in find.js: ended replaced with ended = false
Mutant 200 in find.js: ended replaced with !ended
Mutant 201 in find.js: ended replaced with test(data)
Mutant 202 in find.js: cb(err === true ? null : err, null) replaced with cb(err !== true ? null : err, null)
Mutant 203 in find.js: cb(err === true ? null : err, null) replaced with cb(err !== null ? err : null)
Mutant 204 in find.js: cb(err === true ? null : err, null) replaced with cb(err && err.message === 'test' ? err : null)
Mutant 205 in find.js: cb replaced with null
Mutant 206 in find.js: cb replaced with anonymous
Mutant 207 in find.js: cb replaced with undefined
Mutant 208 in find.js: err === true ? null : err replaced with err instanceof Error ? err : null
Mutant 209 in find.js: err === true ? null : err replaced with err ?? null
Mutant 210 in find.js: err === true ? null : err replaced with !err || null
Mutant 211 in log.js: console.log replaced with console.warn
Mutant 212 in log.js: console.log replaced with console.error
Mutant 213 in log.js: data replaced with console.log(data.split(" ").join(""))
Mutant 214 in log.js: data replaced with console.log(data.reverse())
Mutant 215 in log.js: data replaced with console.log(data.toUpperCase())
Mutant 216 in on-end.js: drain(null, done) replaced with drain((null, null))
Mutant 217 in on-end.js: drain(null, done) replaced with drain((undefined, done))
Mutant 218 in on-end.js: drain(null, done) replaced with drain((null, console.log))
Mutant 219 in on-end.js: null replaced with undefined
Mutant 220 in on-end.js: null replaced with "some string"
Mutant 221 in on-end.js: null replaced with false
Mutant 222 in on-end.js: done replaced with done(null)
Mutant 223 in on-end.js: done replaced with done(undefined)
Mutant 224 in on-end.js: done replaced with done()
Mutant 225 in reduce.js: !cb replaced with !acc
Mutant 226 in reduce.js: !cb replaced with acc && cb
Mutant 227 in reduce.js: !cb replaced with cb || acc
Mutant 228 in reduce.js: reducer(acc, data) replaced with reducer(acc + data)
Mutant 229 in reduce.js: reducer(acc, data) replaced with reducer(data)
Mutant 230 in reduce.js: reducer(acc, data) replaced with reducer(acc + 1)
Mutant 231 in reduce.js: acc replaced with 0
Mutant 232 in reduce.js: acc replaced with null
Mutant 233 in reduce.js: acc replaced with acc + data
Mutant 234 in reduce.js: data replaced with data - 1
Mutant 235 in reduce.js: data replaced with data.length
Mutant 236 in reduce.js: data replaced with data.filter(x => x > 0)
Mutant 237 in reduce.js: err replaced with null
Mutant 238 in reduce.js: err replaced with undefined
Mutant 239 in reduce.js: err replaced with false
Mutant 240 in reduce.js: acc replaced with null
Mutant 241 in reduce.js: acc replaced with undefined
Mutant 242 in reduce.js: acc replaced with 0
Mutant 243 in reduce.js: arguments.length === 2 replaced with arguments.length === 1
Mutant 244 in reduce.js: arguments.length === 2 replaced with arguments.length === 3
Mutant 245 in reduce.js: arguments.length === 2 replaced with arguments.legnth === 4
Mutant 246 in reduce.js: end replaced with acc = reducer(acc, data) === end
Mutant 247 in reduce.js: end replaced with acc = reducer(acc, data) !== end
Mutant 248 in reduce.js: end replaced with reducer(acc, data) === end
Mutant 249 in reduce.js: cb replaced with acc
Mutant 250 in reduce.js: cb replaced with acc + 1
Mutant 251 in reduce.js: end === true ? null : end replaced with end === null ? null : end
Mutant 252 in reduce.js: end === true ? null : end replaced with end === false ? null : end
Mutant 253 in reduce.js: end === true ? null : end replaced with end === undefined ? null : end
Mutant 254 in reduce.js: sink replaced with undefined
Mutant 255 in reduce.js: source replaced with null
Mutant 256 in reduce.js: source replaced with {}
Mutant 257 in reduce.js: source replaced with false
Mutant 258 in count.js: end replaced with end && end < 0
Mutant 259 in count.js: end replaced with end > 0
Mutant 260 in count.js: end replaced with !end
Mutant 261 in count.js: cb replaced with `null`
Mutant 262 in count.js: cb replaced with `cb`
Mutant 263 in count.js: end replaced with null
Mutant 264 in count.js: end replaced with 0
Mutant 265 in count.js: end replaced with false
Mutant 266 in count.js: i > max replaced with -i > max + i >= max
Mutant 267 in count.js: i > max replaced with -i > max + max < i
Mutant 268 in count.js: i > max replaced with -i > max + i == max
Mutant 269 in count.js: true replaced with false
Mutant 270 in count.js: true replaced with null
Mutant 271 in count.js: true replaced with undefined
Mutant 272 in count.js: cb replaced with null
Mutant 273 in count.js: cb replaced with undefined
Mutant 274 in count.js: cb replaced with {}
Mutant 275 in count.js: null replaced with undefined
Mutant 276 in count.js: null replaced with 1
Mutant 277 in count.js: null replaced with false
Mutant 278 in count.js: i++ replaced with i + 1
Mutant 279 in count.js: i++ replaced with i -= 1
Mutant 280 in count.js: i++ replaced with i *= 2
Mutant 281 in empty.js: cb replaced with !cb
Mutant 282 in empty.js: true replaced with false
Mutant 283 in empty.js: true replaced with null
Mutant 284 in empty.js: true replaced with undefined
Mutant 285 in error.js: cb replaced with abort
Mutant 286 in error.js: err replaced with undefined
Mutant 287 in error.js: err replaced with null
Mutant 288 in error.js: err replaced with new Error('example')
Mutant 289 in infinite.js: end replaced with end - 1
Mutant 290 in infinite.js: end replaced with end + 1
Mutant 291 in infinite.js: end replaced with !end
Mutant 292 in infinite.js: end replaced with end - 1
Mutant 293 in infinite.js: end replaced with end + 1
Mutant 294 in infinite.js: end replaced with end * 2
Mutant 295 in infinite.js: cb(null, generate()) replaced with cb(generate(null))
Mutant 296 in infinite.js: cb(null, generate()) replaced with cb(generate(/regex/g))
Mutant 297 in infinite.js: cb(null, generate()) replaced with cb(generate(new Error()))
Mutant 298 in infinite.js: null replaced with undefined
Mutant 299 in infinite.js: null replaced with true
Mutant 300 in infinite.js: null replaced with {}
Mutant 301 in infinite.js: generate() replaced with generate(end)
Mutant 302 in infinite.js: generate() replaced with generate(null, end)
Mutant 303 in infinite.js: generate() replaced with generate(cb, end)
Mutant 304 in infinite.js: generate replaced with generate / 1000
Mutant 305 in infinite.js: generate replaced with --generate
Mutant 306 in keys.js: values replaced with !values
Mutant 307 in keys.js: values replaced with values[0] + values[1]
Mutant 308 in keys.js: object replaced with null
Mutant 309 in keys.js: object replaced with undefined
Mutant 310 in keys.js: object replaced with {}
Mutant 311 in once.js: abort replaced with !abort
Mutant 312 in once.js: abort replaced with abort && onAbort()
Mutant 313 in once.js: abort replaced with abort || onAbort()
Mutant 314 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb(abort, null))
Mutant 315 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb(abort, onAbort))
Mutant 316 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb(onAbort, abort))
Mutant 317 in once.js: abortCb replaced with null
Mutant 318 in once.js: abortCb replaced with value !== null
Mutant 319 in once.js: cb replaced with cb(null, _value)
Mutant 320 in once.js: cb replaced with cb(true, _value)
Mutant 321 in once.js: cb replaced with cb(abort, _value)
Mutant 322 in once.js: onAbort replaced with 'null'
Mutant 323 in once.js: onAbort replaced with 'undefined'
Mutant 324 in once.js: onAbort replaced with 'true'
Mutant 325 in once.js: value != null replaced with value == null
Mutant 326 in once.js: value != null replaced with typeof value === 'undefined'
Mutant 327 in once.js: value != null replaced with value === undefined
Mutant 328 in once.js: cb(null, _value) replaced with cb(undefined, _value)
Mutant 329 in once.js: cb(null, _value) replaced with cb(_value, null)
Mutant 330 in once.js: cb(null, _value) replaced with cb(_value, undefined)
Mutant 331 in once.js: cb replaced with _value
Mutant 332 in once.js: cb replaced with value + 1
Mutant 333 in once.js: cb replaced with 0
Mutant 334 in once.js: null replaced with undefined
Mutant 335 in once.js: null replaced with true
Mutant 336 in once.js: null replaced with false
Mutant 337 in once.js: _value replaced with _value + 1
Mutant 338 in once.js: _value replaced with _value - 1
Mutant 339 in once.js: _value replaced with _value * 2
Mutant 340 in once.js: true replaced with false
Mutant 341 in once.js: true replaced with !value
Mutant 342 in once.js: true replaced with value === null
Mutant 343 in values.js: !array replaced with array && !array.length
Mutant 344 in values.js: !array replaced with array.length === 0
Mutant 345 in values.js: !array replaced with !Array.isArray(array)
Mutant 346 in values.js: abort replaced with !abort
Mutant 347 in values.js: abort replaced with !undefined
Mutant 348 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(onAbort, abort, cb)
Mutant 349 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, onAbort())
Mutant 350 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(abort && onAbort)
Mutant 351 in values.js: abortCb replaced with null
Mutant 352 in values.js: abortCb replaced with undefined
Mutant 353 in values.js: abortCb replaced with {}
Mutant 354 in values.js: cb replaced with null
Mutant 355 in values.js: cb replaced with !cb
Mutant 356 in values.js: cb replaced with undefined
Mutant 357 in values.js: abort replaced with null
Mutant 358 in values.js: abort replaced with !abort
Mutant 359 in values.js: onAbort replaced with null
Mutant 360 in values.js: onAbort replaced with undefined
Mutant 361 in values.js: onAbort replaced with () => {}
Mutant 362 in values.js: true replaced with false
Mutant 363 in values.js: true replaced with !array[i++]
Mutant 364 in values.js: true replaced with array[i++] >= 0
Mutant 365 in values.js: !Array.isArray(array) replaced with Array.isArray(array)
Mutant 366 in values.js: !Array.isArray(array) replaced with Object.isArray(array)
Mutant 367 in values.js: !Array.isArray(array) replaced with array instanceof Array
Mutant 368 in values.js: array replaced with array[0]
Mutant 369 in values.js: array replaced with array.length - 1
Mutant 370 in values.js: array replaced with array.slice(1)
Mutant 371 in values.js: array replaced with Object.values(array)
Mutant 372 in values.js: array replaced with Object.keys(array)
Mutant 373 in values.js: array replaced with array.map(function (k) {
  return array[k];
})
Mutant 374 in values.js: abort replaced with !abort
Mutant 375 in values.js: abort replaced with abort || null
Mutant 376 in values.js: abort replaced with !onAbort
Mutant 377 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(onAbort, cb, abort)
Mutant 378 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(array.length, i)
Mutant 379 in values.js: cb replaced with cb + 1
Mutant 380 in values.js: cb replaced with cb * 2
Mutant 381 in values.js: cb replaced with cb => cb
Mutant 382 in values.js: abort replaced with abortCb(cb, 'abort', onAbort)
Mutant 383 in values.js: abort replaced with abortCb(cb, null, onAbort)
Mutant 384 in values.js: abort replaced with abortCb(cb, onAbort, abort)
Mutant 385 in values.js: onAbort replaced with null
Mutant 386 in values.js: onAbort replaced with undefined
Mutant 387 in values.js: onAbort replaced with 0
Mutant 388 in values.js: i >= array.length replaced with i > array.length
Mutant 389 in values.js: i >= array.length replaced with i <= array.length
Mutant 390 in values.js: i >= array.length replaced with i !== array.length
Mutant 391 in values.js: true replaced with false
Mutant 392 in values.js: true replaced with null
Mutant 393 in values.js: true replaced with undefined
Mutant 394 in values.js: cb(null, array[i++]) replaced with cb(array[i++], array[i++])
Mutant 395 in values.js: cb(null, array[i++]) replaced with cb(null)
Mutant 396 in values.js: cb(null, array[i++]) replaced with cb(array.length)
Mutant 397 in values.js: cb replaced with array[i + 1]
Mutant 398 in values.js: null replaced with undefined
Mutant 399 in values.js: null replaced with true
Mutant 400 in values.js: null replaced with false
Mutant 401 in values.js: array[i++] replaced with array[i]
Mutant 402 in values.js: array[i++] replaced with array[i + 1]
Mutant 403 in values.js: array[i++] replaced with array[i * 2]
Mutant 404 in async-map.js: !map replaced with map === null
Mutant 405 in async-map.js: !map replaced with map.length === 0
Mutant 406 in async-map.js: !map replaced with map[0] === undefined
Mutant 407 in async-map.js: map replaced with !map
Mutant 408 in async-map.js: map replaced with map = {}
Mutant 409 in async-map.js: map replaced with map = function () {}
Mutant 410 in async-map.js: aborted replaced with !aborted
Mutant 411 in async-map.js: aborted replaced with aborted + 1
Mutant 412 in async-map.js: aborted replaced with null
Mutant 413 in async-map.js: cb replaced with abort
Mutant 414 in async-map.js: cb replaced with undefined
Mutant 415 in async-map.js: aborted replaced with true
Mutant 416 in async-map.js: aborted replaced with null
Mutant 417 in async-map.js: aborted replaced with !aborted
Mutant 418 in async-map.js: abort replaced with !abort
Mutant 419 in async-map.js: abort replaced with abort && false
Mutant 420 in async-map.js: abort replaced with abort || true
Mutant 421 in async-map.js: !busy replaced with busy
Mutant 422 in async-map.js: !busy replaced with true
Mutant 423 in async-map.js: abort replaced with abort()
Mutant 424 in async-map.js: abort replaced with null
Mutant 425 in async-map.js: abort replaced with "aborted"
Mutant 426 in async-map.js: busy replaced with !busy
Mutant 427 in async-map.js: busy replaced with this.busy
Mutant 428 in async-map.js: busy replaced with busy || abort
Mutant 429 in async-map.js: cb replaced with null
Mutant 430 in async-map.js: cb replaced with abortCb
Mutant 431 in async-map.js: cb replaced with next
Mutant 432 in async-map.js: abort replaced with error
Mutant 433 in async-map.js: abort replaced with aborted
Mutant 434 in async-map.js: abort replaced with null
Mutant 435 in async-map.js: end replaced with 1
Mutant 436 in async-map.js: end replaced with null
Mutant 437 in async-map.js: cb replaced with aborted
Mutant 438 in async-map.js: end replaced with data
Mutant 439 in async-map.js: end replaced with null
Mutant 440 in async-map.js: end replaced with true
Mutant 441 in async-map.js: aborted replaced with aborted = true
Mutant 442 in async-map.js: aborted replaced with !aborted
Mutant 443 in async-map.js: aborted replaced with aborted + 1
Mutant 444 in async-map.js: cb replaced with `toss`
Mutant 445 in async-map.js: cb replaced with `{abortCb}`
Mutant 446 in async-map.js: aborted replaced with !aborted
Mutant 447 in async-map.js: aborted replaced with !map
Mutant 448 in async-map.js: aborted replaced with aborted !== null
Mutant 449 in async-map.js: aborted replaced with undefined
Mutant 450 in async-map.js: aborted replaced with null
Mutant 451 in async-map.js: aborted replaced with true
Mutant 452 in async-map.js: abortCb replaced with null
Mutant 453 in async-map.js: abortCb replaced with undefined
Mutant 454 in async-map.js: aborted replaced with null
Mutant 455 in async-map.js: aborted replaced with true
Mutant 456 in async-map.js: aborted replaced with -1
Mutant 457 in async-map.js: err replaced with undefined
Mutant 458 in async-map.js: err replaced with true
Mutant 459 in async-map.js: err replaced with null
Mutant 460 in async-map.js: next(err, cb) replaced with next(null, cb)
Mutant 461 in async-map.js: next(err, cb) replaced with next(err, null)
Mutant 462 in async-map.js: next(err, cb) replaced with next(abort, null)
Mutant 463 in async-map.js: err replaced with null
Mutant 464 in async-map.js: err replaced with NaN
Mutant 465 in async-map.js: err replaced with Infinity
Mutant 466 in async-map.js: cb replaced with null
Mutant 467 in async-map.js: cb replaced with abortCb
Mutant 468 in async-map.js: cb replaced with cb(err)
Mutant 469 in async-map.js: cb(null, data) replaced with cb(null, data)
Mutant 470 in async-map.js: cb(null, data) replaced with cb(null, null)
Mutant 471 in async-map.js: cb(null, data) replaced with cb(undefined, data)
Mutant 472 in async-map.js: null replaced with undefined
Mutant 473 in async-map.js: null replaced with false
Mutant 474 in async-map.js: null replaced with 1
Mutant 475 in async-map.js: data replaced with !data
Mutant 476 in async-map.js: data replaced with data * 0
Mutant 477 in async-map.js: data replaced with data.length
Mutant 478 in filter-not.js: tester replaced with "tester"
Mutant 479 in filter-not.js: tester replaced with !tester
Mutant 480 in filter-not.js: test replaced with !test
Mutant 481 in filter-not.js: test replaced with test === true
Mutant 482 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return test(data);
}
Mutant 483 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) && data;
}
Mutant 484 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) || data;
}
Mutant 485 in filter-not.js: data replaced with data.name === undefined
Mutant 486 in filter-not.js: data replaced with data.length % 2 === 0
Mutant 487 in filter-not.js: data replaced with typeof data !== 'object'
Mutant 488 in filter.js: test replaced with !test(data)
Mutant 489 in filter.js: test replaced with test(data + 'foo')
Mutant 490 in filter.js: test replaced with test(data - 1)
Mutant 491 in filter.js: loop replaced with !loop
Mutant 492 in filter.js: loop replaced with loop == false
Mutant 493 in filter.js: !end && !test(data) replaced with end || test(data)
Mutant 494 in filter.js: !end && !test(data) replaced with !test(data)
Mutant 495 in filter.js: test replaced with test && false
Mutant 496 in filter.js: test replaced with test || true
Mutant 497 in filter.js: data replaced with data + 0
Mutant 498 in filter.js: data replaced with data.length
Mutant 499 in filter.js: data replaced with data[0]
Mutant 500 in filter.js: next(end, cb) replaced with next(end, data)
Mutant 501 in filter.js: next(end, cb) replaced with next(end, null)
Mutant 502 in filter.js: next(end, cb) replaced with next(end, undefined)
Mutant 503 in filter.js: next replaced with loop = false
Mutant 504 in filter.js: next replaced with sync = false
Mutant 505 in filter.js: cb replaced with null
Mutant 506 in filter.js: cb replaced with console.log
Mutant 507 in filter.js: cb replaced with function notCb() {}
Mutant 508 in filter.js: cb(end, data) replaced with cb(end, null)
Mutant 509 in filter.js: cb(end, data) replaced with cb(end, 0)
Mutant 510 in filter.js: cb(end, data) replaced with cb(end, '')
Mutant 511 in filter.js: end replaced with !end
Mutant 512 in filter.js: end replaced with end && data
Mutant 513 in filter.js: end replaced with end || data
Mutant 514 in filter.js: data replaced with !data
Mutant 515 in filter.js: data replaced with data * 2
Mutant 516 in filter.js: data replaced with null
Mutant 517 in flatten.js: abort replaced with !abort
Mutant 518 in flatten.js: abort replaced with abort + 1
Mutant 519 in flatten.js: abort replaced with abort || true
Mutant 520 in flatten.js: read(err || abort, cb) replaced with read(abort && err)
Mutant 521 in flatten.js: read(err || abort, cb) replaced with read(!abort || !err)
Mutant 522 in flatten.js: err || abort replaced with abort && err
Mutant 523 in flatten.js: err || abort replaced with abort ? err : abort
Mutant 524 in flatten.js: err || abort replaced with err ? abort : abort
Mutant 525 in flatten.js: cb replaced with abort
Mutant 526 in flatten.js: cb replaced with null
Mutant 527 in flatten.js: cb replaced with function () {
  return abort(cb);
}
Mutant 528 in flatten.js: read(abort, cb) replaced with read(null, cb)
Mutant 529 in flatten.js: read(abort, cb) replaced with read(abort && cb)
Mutant 530 in flatten.js: read(abort, cb) replaced with read(null, function () {
  cb(abort);
})
Mutant 531 in flatten.js: abort replaced with null
Mutant 532 in flatten.js: abort replaced with true
Mutant 533 in flatten.js: abort replaced with 7
Mutant 534 in flatten.js: cb replaced with undefined
Mutant 535 in flatten.js: cb replaced with null
Mutant 536 in flatten.js: cb replaced with function () {}
Mutant 537 in flatten.js: _read replaced with _read === undefined
Mutant 538 in flatten.js: _read replaced with _read == undefined
Mutant 539 in flatten.js: _read replaced with _read.abort
Mutant 540 in flatten.js: nextChunk replaced with _read = nextChunk
Mutant 541 in flatten.js: err === true replaced with err !== true
Mutant 542 in flatten.js: err === true replaced with err == true
Mutant 543 in flatten.js: err === true replaced with !err
Mutant 544 in flatten.js: err replaced with err.toString()
Mutant 545 in flatten.js: err replaced with 'some error message'
Mutant 546 in flatten.js: err replaced with null
Mutant 547 in flatten.js: cb(null, data) replaced with cb(undefined, data)
Mutant 548 in flatten.js: cb(null, data) replaced with cb(null, null)
Mutant 549 in flatten.js: cb(null, data) replaced with cb(data, data)
Mutant 550 in flatten.js: cb replaced with null
Mutant 551 in flatten.js: cb replaced with undefined
Mutant 552 in flatten.js: cb replaced with "something else"
Mutant 553 in flatten.js: null replaced with undefined
Mutant 554 in flatten.js: null replaced with false
Mutant 555 in flatten.js: null replaced with 0
Mutant 556 in flatten.js: data replaced with !data
Mutant 557 in flatten.js: data replaced with data.length
Mutant 558 in flatten.js: data replaced with data[0]
Mutant 559 in flatten.js: end replaced with !end
Mutant 560 in flatten.js: end replaced with end === true
Mutant 561 in flatten.js: end replaced with end !== true
Mutant 562 in flatten.js: end replaced with !end
Mutant 563 in flatten.js: end replaced with undefined
Mutant 564 in flatten.js: end replaced with null
Mutant 565 in flatten.js: stream && 'object' === typeof stream replaced with stream && stream.length === 0
Mutant 566 in flatten.js: stream && 'object' === typeof stream replaced with !stream
Mutant 567 in flatten.js: stream && 'object' === typeof stream replaced with stream.some()
Mutant 568 in flatten.js: values replaced with 0
Mutant 569 in flatten.js: values replaced with 1
Mutant 570 in flatten.js: values replaced with values.length
Mutant 571 in flatten.js: stream replaced with stream + 1
Mutant 572 in flatten.js: stream replaced with stream.isFinished
Mutant 573 in flatten.js: stream replaced with null
Mutant 574 in flatten.js: 'function' !== typeof stream replaced with 'object' !== typeof stream
Mutant 575 in flatten.js: 'function' !== typeof stream replaced with true
Mutant 576 in flatten.js: once replaced with none
Mutant 577 in flatten.js: once replaced with never
Mutant 578 in flatten.js: once replaced with 2
Mutant 579 in flatten.js: stream replaced with "hello world"
Mutant 580 in flatten.js: stream replaced with null
Mutant 581 in flatten.js: stream replaced with undefined
Mutant 582 in flatten.js: nextChunk replaced with null
Mutant 583 in map.js: !mapper replaced with mapper == null
Mutant 584 in map.js: !mapper replaced with mapper = null
Mutant 585 in map.js: !mapper replaced with prop(mapper) == null
Mutant 586 in map.js: prop replaced with prop = "something else"
Mutant 587 in map.js: prop replaced with mapper = "something else"
Mutant 588 in map.js: prop replaced with read = "something else"
Mutant 589 in map.js: mapper replaced with mapper.bind(this)
Mutant 590 in map.js: mapper replaced with mapper.call(this)
Mutant 591 in map.js: mapper replaced with mapper.apply(this, [])
Mutant 592 in map.js: mapper replaced with !mapper
Mutant 593 in map.js: mapper replaced with mapper + 1
Mutant 594 in map.js: mapper replaced with mapper * 2
Mutant 595 in map.js: data replaced with undefined
Mutant 596 in map.js: data replaced with null
Mutant 597 in map.js: data replaced with NaN
Mutant 598 in map.js: cb replaced with null
Mutant 599 in map.js: cb replaced with 0
Mutant 600 in map.js: err replaced with undefined
Mutant 601 in map.js: err replaced with null
Mutant 602 in map.js: err replaced with ''
Mutant 603 in map.js: cb(end, data) replaced with cb(end, !data)
Mutant 604 in map.js: cb(end, data) replaced with cb(end, data + 10)
Mutant 605 in map.js: cb(end, data) replaced with cb(end, data / 0)
Mutant 606 in map.js: cb replaced with !cb
Mutant 607 in map.js: end replaced with !end
Mutant 608 in map.js: end replaced with end && data
Mutant 609 in map.js: end replaced with data || end
Mutant 610 in map.js: data replaced with data + 1
Mutant 611 in map.js: data replaced with data * 2
Mutant 612 in map.js: data replaced with data.length
Mutant 613 in non-unique.js: unique(field, true) replaced with unique(field, false)
Mutant 614 in non-unique.js: unique(field, true) replaced with unique(field, null)
Mutant 615 in non-unique.js: unique(field, true) replaced with unique(field, undefined)
Mutant 616 in non-unique.js: field replaced with field + 1
Mutant 617 in non-unique.js: field replaced with field * 2
Mutant 618 in non-unique.js: field replaced with field - 1
Mutant 619 in non-unique.js: true replaced with false
Mutant 620 in non-unique.js: true replaced with true == false
Mutant 621 in non-unique.js: true replaced with 1 + 1 == 2
Mutant 622 in take.js: 'number' === typeof test replaced with 'boolean' === typeof test
Mutant 623 in take.js: 'number' === typeof test replaced with test < 0
Mutant 624 in take.js: 'number' === typeof test replaced with test === NaN
Mutant 625 in take.js: err || true replaced with err && true
Mutant 626 in take.js: err || true replaced with err !== true
Mutant 627 in take.js: err || true replaced with err === false
Mutant 628 in take.js: ended && !end replaced with end || !ended
Mutant 629 in take.js: ended && !end replaced with ended && !!end
Mutant 630 in take.js: ended && !end replaced with ended || end
Mutant 631 in take.js: cb replaced with end
Mutant 632 in take.js: cb replaced with last
Mutant 633 in take.js: cb replaced with null
Mutant 634 in take.js: ended replaced with !ended
Mutant 635 in take.js: ended replaced with null
Mutant 636 in take.js: ended replaced with stop
Mutant 637 in take.js: ended = end replaced with ended = !end
Mutant 638 in take.js: ended = end replaced with ended = end || last
Mutant 639 in take.js: ended = end replaced with ended = end && last
Mutant 640 in take.js: read(ended, cb) replaced with read(ended && cb)
Mutant 641 in take.js: read(ended, cb) replaced with read(ended || cb)
Mutant 642 in take.js: read(ended, cb) replaced with read(ended ^ cb)
Mutant 643 in take.js: ended replaced with !ended
Mutant 644 in take.js: ended replaced with !last
Mutant 645 in take.js: ended replaced with ended && !last
Mutant 646 in take.js: cb replaced with cb(true)
Mutant 647 in take.js: cb replaced with cb(false)
Mutant 648 in take.js: cb replaced with cb(n)
Mutant 649 in take.js: ended replaced with !ended
Mutant 650 in take.js: ended replaced with ended = false
Mutant 651 in take.js: ended replaced with ended == false
Mutant 652 in take.js: !test(data) replaced with test(data)
Mutant 653 in take.js: !test(data) replaced with !!test(data)
Mutant 654 in take.js: !test(data) replaced with test(data) && last
Mutant 655 in take.js: test replaced with test == false
Mutant 656 in take.js: test replaced with test !== false
Mutant 657 in take.js: data replaced with null
Mutant 658 in take.js: data replaced with true
Mutant 659 in take.js: data replaced with !data
Mutant 660 in take.js: cb(null, data) replaced with cb(undefined, data)
Mutant 661 in take.js: cb(null, data) replaced with cb(null, 'different data')
Mutant 662 in take.js: cb(null, data) replaced with cb(null, data + 'extra_data')
Mutant 663 in take.js: null replaced with undefined
Mutant 664 in take.js: null replaced with NaN
Mutant 665 in take.js: null replaced with Infinity
Mutant 666 in take.js: data replaced with null
Mutant 667 in take.js: data replaced with "data"
Mutant 668 in take.js: data replaced with undefined
Mutant 669 in take.js: cb replaced with cb('error')
Mutant 670 in take.js: cb replaced with cb(null, data)
Mutant 671 in take.js: cb(null, data) replaced with cb(undefined, data)
Mutant 672 in take.js: cb(null, data) replaced with cb(data, null)
Mutant 673 in take.js: null replaced with undefined
Mutant 674 in take.js: null replaced with false
Mutant 675 in take.js: null replaced with 0
Mutant 676 in take.js: data replaced with null
Mutant 677 in take.js: data replaced with data * 2
Mutant 678 in through.js: a || !onEnd replaced with a && onEnd
Mutant 679 in through.js: a || !onEnd replaced with !a || onEnd
Mutant 680 in through.js: onEnd replaced with onEnd ? null : abort
Mutant 681 in through.js: onEnd replaced with onEnd ? abort : null
Mutant 682 in through.js: abort === true ? null : abort replaced with abort === true ? null : null
Mutant 683 in through.js: abort === true ? null : abort replaced with abort === true ? 'error' : abort
Mutant 684 in through.js: abort === true ? null : abort replaced with abort === true ? null : undefined
Mutant 685 in through.js: end replaced with end && true
Mutant 686 in through.js: end replaced with end === false
Mutant 687 in through.js: end replaced with end !== true
Mutant 688 in through.js: end replaced with null
Mutant 689 in through.js: end replaced with undefined
Mutant 690 in through.js: end replaced with 0
Mutant 691 in through.js: !end replaced with end
Mutant 692 in through.js: !end replaced with end && !op
Mutant 693 in through.js: !end replaced with end === false
Mutant 694 in through.js: op replaced with op + 1
Mutant 695 in through.js: op replaced with op && false
Mutant 696 in through.js: op replaced with op || true
Mutant 697 in through.js: data replaced with 1 + data
Mutant 698 in through.js: data replaced with data * 2
Mutant 699 in through.js: data replaced with data && true
Mutant 700 in through.js: end replaced with end + 1
Mutant 701 in through.js: end replaced with end - 1
Mutant 702 in through.js: end replaced with end && false
Mutant 703 in through.js: cb(end, data) replaced with cb(end, data.length)
Mutant 704 in through.js: cb(end, data) replaced with cb(end, data[0])
Mutant 705 in through.js: cb(end, data) replaced with cb(end, data.slice())
Mutant 706 in through.js: cb replaced with !cb
Mutant 707 in through.js: cb replaced with cb + 1
Mutant 708 in through.js: cb replaced with cb * 10
Mutant 709 in through.js: data replaced with null
Mutant 710 in through.js: data replaced with undefined
Mutant 711 in through.js: data replaced with false
Mutant 712 in unique.js: field replaced with field.toUpperCase()
Mutant 713 in unique.js: field replaced with field.length
Mutant 714 in unique.js: field replaced with field.toLowerCase()
Mutant 715 in unique.js: field replaced with field + 1
Mutant 716 in unique.js: field replaced with field * 2
Mutant 717 in unique.js: field replaced with field - 1
Mutant 718 in unique.js: data replaced with field(key)
Mutant 719 in unique.js: data replaced with data.field
Mutant 720 in unique.js: data replaced with field(data)
Mutant 721 in unique.js: seen[key] replaced with seen[key] !== undefined
Mutant 722 in unique.js: seen[key] replaced with seen[key] = true
Mutant 723 in unique.js: seen[key] replaced with seen[key] = !!invert
Mutant 724 in abort-cb.js: cb replaced with !abort
Mutant 725 in abort-cb.js: cb replaced with abort === true
Mutant 726 in abort-cb.js: abort replaced with false
Mutant 727 in abort-cb.js: abort replaced with null
Mutant 728 in abort-cb.js: abort replaced with abort !== true
Mutant 729 in abort-cb.js: abort === true ? null : abort replaced with abort !== true ? null : abort
Mutant 730 in abort-cb.js: abort === true ? null : abort replaced with abort === false ? null : abort
Mutant 731 in abort-cb.js: abort === true ? null : abort replaced with !abort ? null : abort
Mutant 732 in prop.js: data replaced with data[key] + 1
Mutant 733 in prop.js: data replaced with data[key][0]
Mutant 734 in prop.js: data replaced with data[key + 'a']
Mutant 735 in tester.js: test.test replaced with test.doesNotExist
Mutant 736 in tester.js: test.test replaced with "string" === typeof test.test
Mutant 737 in tester.js: data replaced with data + 1
Mutant 738 in tester.js: data replaced with data === 1
Mutant 739 in tester.js: data replaced with NaN
[32m00:50:33 (2743) INFO Instrumenter[39m Instrumented 31 source file(s) with 740 mutant(s)
[32m00:50:33 (2743) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m00:50:35 (2743) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m00:50:35 (2743) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m00:50:36 (2743) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 1 second (net 1823 ms, overhead 0 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~9m) 13/740 tested (1 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~16m) 15/740 tested (2 survived, 1 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~22m) 16/740 tested (2 survived, 2 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~28m) 17/740 tested (2 survived, 3 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~27m) 22/740 tested (5 survived, 4 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~25m) 28/740 tested (10 survived, 4 timed out)
Mutation testing 4% (elapsed: ~1m, remaining: ~24m) 34/740 tested (13 survived, 4 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~22m) 41/740 tested (13 survived, 4 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~21m) 49/740 tested (15 survived, 4 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~19m) 57/740 tested (17 survived, 4 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~20m) 62/740 tested (22 survived, 4 timed out)
Mutation testing 9% (elapsed: ~2m, remaining: ~19m) 68/740 tested (28 survived, 4 timed out)
Mutation testing 9% (elapsed: ~2m, remaining: ~19m) 73/740 tested (33 survived, 4 timed out)
Mutation testing 10% (elapsed: ~2m, remaining: ~19m) 79/740 tested (39 survived, 4 timed out)
Mutation testing 11% (elapsed: ~2m, remaining: ~19m) 84/740 tested (44 survived, 4 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~19m) 90/740 tested (47 survived, 4 timed out)
Mutation testing 13% (elapsed: ~2m, remaining: ~18m) 98/740 tested (49 survived, 5 timed out)
Mutation testing 14% (elapsed: ~3m, remaining: ~17m) 106/740 tested (53 survived, 5 timed out)
Mutation testing 15% (elapsed: ~3m, remaining: ~16m) 117/740 tested (56 survived, 5 timed out)
Mutation testing 16% (elapsed: ~3m, remaining: ~17m) 120/740 tested (58 survived, 5 timed out)
Mutation testing 16% (elapsed: ~3m, remaining: ~17m) 122/740 tested (58 survived, 7 timed out)
Mutation testing 17% (elapsed: ~3m, remaining: ~17m) 126/740 tested (59 survived, 8 timed out)
Mutation testing 18% (elapsed: ~3m, remaining: ~17m) 134/740 tested (62 survived, 8 timed out)
Mutation testing 18% (elapsed: ~4m, remaining: ~17m) 140/740 tested (67 survived, 8 timed out)
Mutation testing 20% (elapsed: ~4m, remaining: ~16m) 148/740 tested (71 survived, 8 timed out)
Mutation testing 20% (elapsed: ~4m, remaining: ~16m) 154/740 tested (75 survived, 8 timed out)
Mutation testing 22% (elapsed: ~4m, remaining: ~15m) 163/740 tested (78 survived, 8 timed out)
Mutation testing 23% (elapsed: ~4m, remaining: ~15m) 171/740 tested (81 survived, 8 timed out)
Mutation testing 24% (elapsed: ~4m, remaining: ~15m) 178/740 tested (84 survived, 8 timed out)
Mutation testing 25% (elapsed: ~5m, remaining: ~15m) 185/740 tested (85 survived, 8 timed out)
Mutation testing 25% (elapsed: ~5m, remaining: ~14m) 191/740 tested (87 survived, 8 timed out)
Mutation testing 26% (elapsed: ~5m, remaining: ~14m) 197/740 tested (91 survived, 8 timed out)
Mutation testing 27% (elapsed: ~5m, remaining: ~14m) 204/740 tested (92 survived, 8 timed out)
Mutation testing 28% (elapsed: ~5m, remaining: ~14m) 211/740 tested (94 survived, 8 timed out)
Mutation testing 29% (elapsed: ~5m, remaining: ~14m) 216/740 tested (99 survived, 8 timed out)
Mutation testing 30% (elapsed: ~6m, remaining: ~13m) 223/740 tested (102 survived, 8 timed out)
Mutation testing 31% (elapsed: ~6m, remaining: ~13m) 235/740 tested (102 survived, 8 timed out)
Mutation testing 33% (elapsed: ~6m, remaining: ~12m) 246/740 tested (104 survived, 8 timed out)
Mutation testing 33% (elapsed: ~6m, remaining: ~12m) 251/740 tested (108 survived, 8 timed out)
Mutation testing 34% (elapsed: ~6m, remaining: ~12m) 258/740 tested (111 survived, 8 timed out)
Mutation testing 35% (elapsed: ~6m, remaining: ~12m) 265/740 tested (115 survived, 8 timed out)
Mutation testing 37% (elapsed: ~7m, remaining: ~11m) 277/740 tested (117 survived, 8 timed out)
Mutation testing 38% (elapsed: ~7m, remaining: ~11m) 282/740 tested (118 survived, 8 timed out)
Mutation testing 38% (elapsed: ~7m, remaining: ~11m) 283/740 tested (118 survived, 9 timed out)
Mutation testing 38% (elapsed: ~7m, remaining: ~11m) 285/740 tested (118 survived, 11 timed out)
Mutation testing 39% (elapsed: ~7m, remaining: ~11m) 289/740 tested (118 survived, 11 timed out)
Mutation testing 39% (elapsed: ~7m, remaining: ~12m) 291/740 tested (118 survived, 13 timed out)
Mutation testing 39% (elapsed: ~8m, remaining: ~12m) 292/740 tested (118 survived, 14 timed out)
Mutation testing 39% (elapsed: ~8m, remaining: ~12m) 295/740 tested (120 survived, 15 timed out)
Mutation testing 40% (elapsed: ~8m, remaining: ~12m) 302/740 tested (122 survived, 15 timed out)
Mutation testing 41% (elapsed: ~8m, remaining: ~11m) 310/740 tested (124 survived, 15 timed out)
Mutation testing 42% (elapsed: ~8m, remaining: ~11m) 313/740 tested (125 survived, 16 timed out)
Mutation testing 42% (elapsed: ~8m, remaining: ~11m) 318/740 tested (129 survived, 16 timed out)
Mutation testing 43% (elapsed: ~9m, remaining: ~11m) 324/740 tested (135 survived, 16 timed out)
Mutation testing 44% (elapsed: ~9m, remaining: ~11m) 330/740 tested (137 survived, 16 timed out)
Mutation testing 45% (elapsed: ~9m, remaining: ~11m) 336/740 tested (138 survived, 16 timed out)
Mutation testing 45% (elapsed: ~9m, remaining: ~11m) 340/740 tested (139 survived, 16 timed out)
Mutation testing 46% (elapsed: ~9m, remaining: ~11m) 344/740 tested (141 survived, 17 timed out)
Mutation testing 47% (elapsed: ~9m, remaining: ~11m) 349/740 tested (145 survived, 17 timed out)
Mutation testing 47% (elapsed: ~10m, remaining: ~10m) 355/740 tested (151 survived, 17 timed out)
Mutation testing 48% (elapsed: ~10m, remaining: ~10m) 360/740 tested (156 survived, 17 timed out)
Mutation testing 49% (elapsed: ~10m, remaining: ~10m) 365/740 tested (161 survived, 17 timed out)
Mutation testing 49% (elapsed: ~10m, remaining: ~10m) 367/740 tested (161 survived, 18 timed out)
Mutation testing 50% (elapsed: ~10m, remaining: ~10m) 371/740 tested (163 survived, 19 timed out)
Mutation testing 50% (elapsed: ~10m, remaining: ~10m) 374/740 tested (163 survived, 19 timed out)
Mutation testing 51% (elapsed: ~11m, remaining: ~10m) 383/740 tested (164 survived, 20 timed out)
Mutation testing 52% (elapsed: ~11m, remaining: ~9m) 391/740 tested (164 survived, 20 timed out)
Mutation testing 52% (elapsed: ~11m, remaining: ~10m) 392/740 tested (164 survived, 21 timed out)
Mutation testing 53% (elapsed: ~11m, remaining: ~10m) 395/740 tested (164 survived, 23 timed out)
Mutation testing 53% (elapsed: ~11m, remaining: ~9m) 399/740 tested (165 survived, 24 timed out)
Mutation testing 54% (elapsed: ~11m, remaining: ~9m) 402/740 tested (166 survived, 25 timed out)
Mutation testing 54% (elapsed: ~12m, remaining: ~10m) 403/740 tested (166 survived, 26 timed out)
Mutation testing 55% (elapsed: ~12m, remaining: ~9m) 407/740 tested (168 survived, 27 timed out)
Mutation testing 55% (elapsed: ~12m, remaining: ~9m) 411/740 tested (168 survived, 28 timed out)
Mutation testing 56% (elapsed: ~12m, remaining: ~9m) 417/740 tested (172 survived, 28 timed out)
Mutation testing 56% (elapsed: ~12m, remaining: ~9m) 420/740 tested (173 survived, 29 timed out)
Mutation testing 57% (elapsed: ~12m, remaining: ~9m) 426/740 tested (173 survived, 30 timed out)
Mutation testing 58% (elapsed: ~13m, remaining: ~9m) 436/740 tested (174 survived, 30 timed out)
Mutation testing 59% (elapsed: ~13m, remaining: ~9m) 438/740 tested (174 survived, 31 timed out)
Mutation testing 59% (elapsed: ~13m, remaining: ~9m) 439/740 tested (174 survived, 32 timed out)
Mutation testing 60% (elapsed: ~13m, remaining: ~8m) 451/740 tested (176 survived, 33 timed out)
Mutation testing 62% (elapsed: ~13m, remaining: ~8m) 465/740 tested (178 survived, 33 timed out)
Mutation testing 63% (elapsed: ~13m, remaining: ~7m) 473/740 tested (181 survived, 33 timed out)
Mutation testing 64% (elapsed: ~14m, remaining: ~7m) 480/740 tested (182 survived, 33 timed out)
Mutation testing 65% (elapsed: ~14m, remaining: ~7m) 481/740 tested (182 survived, 34 timed out)
Mutation testing 65% (elapsed: ~14m, remaining: ~7m) 486/740 tested (183 survived, 35 timed out)
Mutation testing 66% (elapsed: ~14m, remaining: ~7m) 493/740 tested (183 survived, 35 timed out)
Mutation testing 66% (elapsed: ~14m, remaining: ~7m) 494/740 tested (183 survived, 36 timed out)
Mutation testing 67% (elapsed: ~14m, remaining: ~7m) 498/740 tested (185 survived, 37 timed out)
Mutation testing 67% (elapsed: ~15m, remaining: ~7m) 499/740 tested (185 survived, 38 timed out)
Mutation testing 67% (elapsed: ~15m, remaining: ~7m) 503/740 tested (188 survived, 39 timed out)
Mutation testing 68% (elapsed: ~15m, remaining: ~7m) 508/740 tested (193 survived, 39 timed out)
Mutation testing 69% (elapsed: ~15m, remaining: ~6m) 512/740 tested (193 survived, 39 timed out)
Mutation testing 70% (elapsed: ~15m, remaining: ~6m) 518/740 tested (193 survived, 40 timed out)
Mutation testing 70% (elapsed: ~15m, remaining: ~6m) 525/740 tested (196 survived, 40 timed out)
Mutation testing 71% (elapsed: ~16m, remaining: ~6m) 531/740 tested (196 survived, 40 timed out)
Mutation testing 72% (elapsed: ~16m, remaining: ~6m) 538/740 tested (197 survived, 40 timed out)
Mutation testing 73% (elapsed: ~16m, remaining: ~5m) 545/740 tested (198 survived, 40 timed out)
Mutation testing 73% (elapsed: ~16m, remaining: ~5m) 547/740 tested (198 survived, 41 timed out)
Mutation testing 74% (elapsed: ~16m, remaining: ~5m) 553/740 tested (199 survived, 41 timed out)
Mutation testing 75% (elapsed: ~16m, remaining: ~5m) 560/740 tested (202 survived, 41 timed out)
Mutation testing 75% (elapsed: ~17m, remaining: ~5m) 562/740 tested (203 survived, 41 timed out)
Mutation testing 76% (elapsed: ~17m, remaining: ~5m) 564/740 tested (203 survived, 43 timed out)
Mutation testing 76% (elapsed: ~17m, remaining: ~5m) 566/740 tested (203 survived, 44 timed out)
Mutation testing 77% (elapsed: ~17m, remaining: ~5m) 573/740 tested (203 survived, 44 timed out)
Mutation testing 78% (elapsed: ~17m, remaining: ~4m) 580/740 tested (203 survived, 44 timed out)
Mutation testing 79% (elapsed: ~17m, remaining: ~4m) 589/740 tested (205 survived, 44 timed out)
Mutation testing 81% (elapsed: ~18m, remaining: ~4m) 601/740 tested (206 survived, 44 timed out)
Mutation testing 82% (elapsed: ~18m, remaining: ~3m) 608/740 tested (206 survived, 44 timed out)
Mutation testing 82% (elapsed: ~18m, remaining: ~3m) 614/740 tested (206 survived, 45 timed out)
Mutation testing 83% (elapsed: ~18m, remaining: ~3m) 620/740 tested (209 survived, 45 timed out)
Mutation testing 84% (elapsed: ~18m, remaining: ~3m) 628/740 tested (211 survived, 45 timed out)
Mutation testing 85% (elapsed: ~18m, remaining: ~3m) 629/740 tested (211 survived, 46 timed out)
Mutation testing 85% (elapsed: ~19m, remaining: ~3m) 636/740 tested (213 survived, 47 timed out)
Mutation testing 87% (elapsed: ~19m, remaining: ~2m) 649/740 tested (216 survived, 47 timed out)
Mutation testing 89% (elapsed: ~19m, remaining: ~2m) 659/740 tested (219 survived, 47 timed out)
Mutation testing 90% (elapsed: ~19m, remaining: ~2m) 666/740 tested (222 survived, 47 timed out)
Mutation testing 91% (elapsed: ~19m, remaining: ~1m) 674/740 tested (224 survived, 47 timed out)
Mutation testing 92% (elapsed: ~19m, remaining: ~1m) 682/740 tested (226 survived, 47 timed out)
Mutation testing 92% (elapsed: ~20m, remaining: ~1m) 688/740 tested (232 survived, 47 timed out)
Mutation testing 93% (elapsed: ~20m, remaining: ~1m) 694/740 tested (235 survived, 47 timed out)
Mutation testing 94% (elapsed: ~20m, remaining: ~1m) 700/740 tested (239 survived, 47 timed out)
Mutation testing 96% (elapsed: ~20m, remaining: <1m) 712/740 tested (242 survived, 47 timed out)
Mutation testing 97% (elapsed: ~20m, remaining: <1m) 718/740 tested (242 survived, 47 timed out)
Mutation testing 97% (elapsed: ~20m, remaining: <1m) 723/740 tested (244 survived, 47 timed out)
Mutation testing 98% (elapsed: ~21m, remaining: <1m) 731/740 tested (244 survived, 47 timed out)
Mutation testing 99% (elapsed: ~21m, remaining: <1m) 737/740 tested (247 survived, 47 timed out)
Mutation testing 99% (elapsed: ~21m, remaining: <1m) 739/740 tested (248 survived, 48 timed out)

All tests
  ✓ All tests (killed 443)

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (!done || true) {

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (!!done) {

[Survived] PrecomputedMutator
sinks/drain.js:14:8
-       if(abort) return sink.abort()
+       if(abort === true) return sink.abort()

[Survived] PrecomputedMutator
sinks/drain.js:14:8
-       if(abort) return sink.abort()
+       if(false) return sink.abort()

[Survived] PrecomputedMutator
sinks/drain.js:24:16
-               if(end = end || abort) {
+               if(end = end || abort ? end : abort) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end && end == true) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end != null && end !== true) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end && (end !== true || end !== false)) {

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.log(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.error(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(doneLackingErr())

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(null)

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(undefined)

[Survived] PrecomputedMutator
sinks/drain.js:32:21
-               else if(op && false === op(data) || abort) {
+               else if(op && false == op(data) || abort) {

[Survived] PrecomputedMutator
sinks/drain.js:32:21
-               else if(op && false === op(data) || abort) {
+               else if(op && op(data) == false || abort) {

[Survived] PrecomputedMutator
sinks/drain.js:34:15
-                 read(abort || true, done || function () {})
+                 read(abort || false, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:15
-                 read(abort || true, done || function () {})
+                 read(abort || 0, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:15
-                 read(abort || true, done || function () {})
+                 read(abort || null, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:15
-                 read(abort || true, done || function () {})
+                 read || {}(abort || true, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(abort && false, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(!abort, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(null, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:36:21
-               else if(!loop){
+               else if(loop == 0){

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if('number' == typeof err)

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if('function' == typeof cb)

[Survived] PrecomputedMutator
sinks/drain.js:52:8
-       if(read) return read(abort, cb || function () {})
+       if(abort) return read(abort, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:8
-       if(read) return read(abort, cb || function () {})
+       if(console.log) return read(abort, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:26
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(null, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:26
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(undefined, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:33
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:33
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, function (err, cb) {
+     return err;
+   })

[Survived] PrecomputedMutator
sinks/find.js:15:8
-       if(test(data)) {
+       if(test(data) || false) {

[Survived] PrecomputedMutator
sinks/find.js:17:7
-         cb(null, data)
+         cb(undefined, data)

[Survived] PrecomputedMutator
sinks/find.js:17:7
-         cb(null, data)
+         cb(false, data)

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb(undefined, data)

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb(false, data)

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb(0, data)

[Survived] PrecomputedMutator
sinks/find.js:22:5
-       cb(err === true ? null : err, null)
+       cb(err !== true ? null : err, null)

[Survived] PrecomputedMutator
sinks/find.js:22:8
-       cb(err === true ? null : err, null)
+       cb(err instanceof Error ? err : null, null)

[Survived] PrecomputedMutator
sinks/find.js:22:8
-       cb(err === true ? null : err, null)
+       cb(err ?? null, null)

[Survived] PrecomputedMutator
sinks/log.js:7:5
-       console.log(data)
+       console.warn(data)

[Survived] PrecomputedMutator
sinks/log.js:7:5
-       console.log(data)
+       console.error(data)

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(console.log(data.split(" ").join("")))

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(console.log(data.reverse()))

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(console.log(data.toUpperCase()))

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(undefined, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain("some string", done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(false, done)

[Survived] PrecomputedMutator
sinks/reduce.js:12:7
-     if (arguments.length === 2)
+     if (arguments.length === 1)

[Survived] PrecomputedMutator
sinks/reduce.js:12:7
-     if (arguments.length === 2)
+     if (arguments.legnth === 4)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(acc = reducer(acc, data) === end) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(reducer(acc, data) === end) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:24
-           if(end) return cb(end === true ? null : end)
+           if(end) return acc(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:24
-           if(end) return cb(end === true ? null : end)
+           if(end) return acc + 1(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end === null ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end === false ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end === undefined ? null : end)

[Survived] PrecomputedMutator
sources/count.js:6:8
-       if(end) return cb && cb(end)
+       if(end && end < 0) return cb && cb(end)

[Survived] PrecomputedMutator
sources/count.js:6:8
-       if(end) return cb && cb(end)
+       if(end > 0) return cb && cb(end)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(null)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(0)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(false)

[Survived] PrecomputedMutator
sources/count.js:9:8
-       cb(null, i++)
+       cb(undefined, i++)

[Survived] PrecomputedMutator
sources/count.js:9:8
-       cb(null, i++)
+       cb(false, i++)

[Survived] PrecomputedMutator
sources/infinite.js:5:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(end + 1)

[Survived] PrecomputedMutator
sources/infinite.js:5:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(end * 2)

[Survived] PrecomputedMutator
sources/infinite.js:6:15
-       return cb(null, generate())
+       return cb(undefined, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:21
-       return cb(null, generate())
+       return cb(null, generate(end))

[Survived] PrecomputedMutator
sources/infinite.js:6:21
-       return cb(null, generate())
+       return cb(null, generate(null, end))

[Survived] PrecomputedMutator
sources/infinite.js:6:21
-       return cb(null, generate())
+       return cb(null, generate(cb, end))

[Survived] PrecomputedMutator
sources/once.js:6:8
-       if(abort)
+       if(abort && onAbort())

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(abort, null))

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(abort, onAbort))

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(onAbort, abort))

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return null(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return value !== null(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(null, _value), abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(true, _value), abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(abort, _value), abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, 'null')

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, 'undefined')

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, 'true')

[Survived] PrecomputedMutator
sources/once.js:10:7
-         cb(null, _value)
+         cb(undefined, _value)

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(undefined, _value)

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(false, _value)

[Survived] PrecomputedMutator
sources/once.js:12:10
-         cb(true)
+         cb(!value)

[Survived] PrecomputedMutator
sources/once.js:12:10
-         cb(true)
+         cb(value === null)

[Survived] PrecomputedMutator
sources/values.js:5:6
-     if(!array)
+     if(array.length === 0)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(!abort) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(!undefined) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(onAbort, abort, cb)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, onAbort())

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(abort && onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return null(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return undefined(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return {}(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(null, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(!cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(undefined, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, null, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, !abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, undefined)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, () => {})

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(false)

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(!array[i++])

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(array[i++] >= 0)

[Survived] PrecomputedMutator
sources/values.js:10:21
-     if(!Array.isArray(array))
+     if(!Array.isArray(array[0]))

[Survived] PrecomputedMutator
sources/values.js:10:21
-     if(!Array.isArray(array))
+     if(!Array.isArray(array.length - 1))

[Survived] PrecomputedMutator
sources/values.js:16:8
-       if(abort)
+       if(abort || null)

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(undefined, array[i++])

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(false, array[i++])

[Survived] PrecomputedMutator
throughs/async-map.js:7:6
-     if(!map) return id
+     if(map === null) return id

[Survived] PrecomputedMutator
throughs/async-map.js:7:6
-     if(!map) return id
+     if(map.length === 0) return id

[Survived] PrecomputedMutator
throughs/async-map.js:12:10
-         if(aborted) return cb(aborted)
+         if(aborted + 1) return cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:12:10
-         if(aborted) return cb(aborted)
+         if(null) return cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(true)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(null)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(!aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:23:19
-             else cb(abort)
+             else cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:28:22
-             if(end) cb(end)
+             if(end) cb(true)

[Survived] PrecomputedMutator
throughs/async-map.js:29:19
-             else if(aborted) cb(aborted)
+             else if(aborted + 1) cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:36:36
-                   abortCb && abortCb(aborted)
+                   abortCb && abortCb(true)

[Survived] PrecomputedMutator
throughs/async-map.js:36:36
-                   abortCb && abortCb(aborted)
+                   abortCb && abortCb(-1)

[Survived] PrecomputedMutator
throughs/async-map.js:39:20
-                 else cb(null, data)
+                 else cb(null, data)

[Survived] PrecomputedMutator
throughs/async-map.js:39:20
-                 else cb(null, data)
+                 else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(false, data)

[Survived] PrecomputedMutator
throughs/filter-not.js:8:17
-     return filter(function (data) { return !test(data) })
+     return filter(function (data) {
+     return !test(data) && data;
+   })

[Survived] PrecomputedMutator
throughs/filter.js:15:23
-             if(!end && !test(data))
+             if(!end && !test || true(data))

[Survived] PrecomputedMutator
throughs/filter.js:15:28
-             if(!end && !test(data))
+             if(!end && !test(data + 0))

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, data)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, null)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, undefined)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : loop = false(end, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : sync = false(end, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, null)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, console.log)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, function notCb() {})

[Survived] PrecomputedMutator
throughs/flatten.js:13:16
-             read(err || abort, cb)
+             read(abort && err, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:13:16
-             read(err || abort, cb)
+             read(abort ? err : abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:13:16
-             read(err || abort, cb)
+             read(err ? abort : abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:14:19
-           }) : read(abort, cb)
+           }) : read(true, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:22:17
-               if (err === true) nextStream()
+               if (err == true) nextStream()

[Survived] PrecomputedMutator
throughs/flatten.js:28:16
-             else cb(null, data)
+             else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(false, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(0, data)

[Survived] PrecomputedMutator
throughs/flatten.js:34:14
-             if(end)
+             if(end === true)

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(mapper == null) return id

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(prop(mapper) == null) return id

[Survived] PrecomputedMutator
throughs/map.js:8:17
-     mapper = prop(mapper)
+     mapper = prop(mapper.bind(this))

[Survived] PrecomputedMutator
throughs/non-unique.js:7:17
-     return unique(field, true)
+     return unique(field + 1, true)

[Survived] PrecomputedMutator
throughs/non-unique.js:7:17
-     return unique(field, true)
+     return unique(field * 2, true)

[Survived] PrecomputedMutator
throughs/non-unique.js:7:17
-     return unique(field, true)
+     return unique(field - 1, true)

[Survived] PrecomputedMutator
throughs/non-unique.js:7:24
-     return unique(field, true)
+     return unique(field, 1 + 1 == 2)

[Survived] PrecomputedMutator
throughs/take.js:19:26
-           last = false; cb(err || true)
+           last = false; cb(err && true)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(!ended)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(null)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(stop)

[Survived] PrecomputedMutator
throughs/take.js:25:33
-         else if(ended = end) read(ended, cb)
+         else if(ended = end) read(!last, cb)

[Survived] PrecomputedMutator
throughs/take.js:25:33
-         else if(ended = end) read(ended, cb)
+         else if(ended = end) read(ended && !last, cb)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(!ended)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(ended = false)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(ended == false)

[Survived] PrecomputedMutator
throughs/take.js:34:20
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(undefined, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(undefined, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(NaN, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:37:13
-               cb(null, data)
+               cb(undefined, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(undefined, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(false, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(0, data)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === true ? null : null)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === true ? 'error' : abort)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === true ? null : undefined)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(end && true) once(end)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(end === false) once(end)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(end !== true) once(end)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(null)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(undefined)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(0)

[Survived] PrecomputedMutator
throughs/through.js:17:24
-           if(!end) op && op(data)
+           if(!end) op && op || true(data)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(1 + data)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(data * 2)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(data && true)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(end + 1)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(end - 1)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(end && false)

[Survived] PrecomputedMutator
throughs/unique.js:12:21
-       var key = field(data)
+       var key = field(field(data))

[Survived] PrecomputedMutator
throughs/unique.js:13:8
-       if(seen[key]) return !!invert //false, by default
+       if(seen[key] !== undefined) return !!invert //false, by default

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(data[key] + 1); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(data[key][0]); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(data[key + 'a']); return v && v[0] }

[Survived] PrecomputedMutator
util/tester.js:8:42
-       ? function (data) { return test.test(data) }
+       ? function (data) { return test.test(data + 1) }

[Survived] PrecomputedMutator
pull.js:7:20
-       for(var i = 0; i < length; i++)
+       for(var i = 0; i <= length; i++)

[Survived] PrecomputedMutator
pull.js:7:20
-       for(var i = 0; i < length; i++)
+       for(var i = 0; length - i; i++)

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (args === undefined) {

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (args.length === 0) {

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (!Array.isArray(args)) {

[Survived] PrecomputedMutator
pull.js:20:15
-         switch (length) {
+         switch (length + 1) {

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[1])

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read + ref[0])

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read * ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read ? read.source() : undefined, ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read ? null : undefined, ref[0])

[Survived] PrecomputedMutator
pull.js:22:22
-         case 2: return pull(read, ref[0], ref[1])
+         case 2: return pull(read, ref[0], ref[1], ref[3])

[Survived] PrecomputedMutator
pull.js:22:22
-         case 2: return pull(read, ref[0], ref[1])
+         case 2: return pull(read, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:23:22
-         case 3: return pull(read, ref[0], ref[1], ref[2])
+         case 3: return pull(read, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:23:22
-         case 3: return pull(read, ref[0], ref[1], ref[2])
+         case 3: return pull(read, ref[0], ref[1], ref[2], ref[3] + 1)

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(sink, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read.source, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(ref[3], ref[0], ref[1], ref[2], read)

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read + 1, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read * 2, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read(1), ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, null, ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, undefined, ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[1], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[0], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[2], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], 1 + ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[3], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[0], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2] + 1, ref[3])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[2])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3] + 1)

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3] * 2)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(0)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(read + 0)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(read.bind(null))

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(undefined, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(null, null)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(s, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(42, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(read.source, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(s.source, ref)

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.shift())

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.pop())

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.slice(1))

[Survived] PrecomputedMutator
pull.js:34:7
-     if (read && typeof read.source === 'function') {
+     if (read && typeof read.source === 'object') {

[Survived] PrecomputedMutator
pull.js:34:7
-     if (read && typeof read.source === 'function') {
+     if (read && typeof read.source === 'function' && read.source.length === 1) {

[Survived] PrecomputedMutator
pull.js:40:9
-       if (typeof s === 'function') {
+       if (s.constructor === Function) {

[Survived] PrecomputedMutator
pull.js:41:14
-         read = s(read)
+         read = s && s(read)

[Survived] PrecomputedMutator
pull.js:43:7
-         s.sink(read)
+         !s.sink(read)

[Survived] PrecomputedMutator
pull.js:43:7
-         s.sink(read)
+         s.source(read)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(null)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink("")

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(0)

Ran 0.93 tests per mutant on average.
----------------|---------|----------|-----------|------------|----------|----------|
File            | % score | # killed | # timeout | # survived | # no cov | # errors |
----------------|---------|----------|-----------|------------|----------|----------|
All files       |   66.49 |      443 |        49 |        248 |        0 |        0 |
 sinks          |   62.25 |       91 |         3 |         57 |        0 |        0 |
  collect.js    |  100.00 |        6 |         0 |          0 |        0 |        0 |
  drain.js      |   53.03 |       32 |         3 |         31 |        0 |        0 |
  find.js       |   71.88 |       23 |         0 |          9 |        0 |        0 |
  log.js        |    0.00 |        0 |         0 |          5 |        0 |        0 |
  on-end.js     |   66.67 |        6 |         0 |          3 |        0 |        0 |
  reduce.js     |   72.73 |       24 |         0 |          9 |        0 |        0 |
 sources        |   62.33 |       72 |        19 |         55 |        0 |        0 |
  count.js      |   69.57 |       16 |         0 |          7 |        0 |        0 |
  empty.js      |  100.00 |        1 |         3 |          0 |        0 |        0 |
  error.js      |  100.00 |        4 |         0 |          0 |        0 |        0 |
  infinite.js   |   64.71 |        7 |         4 |          6 |        0 |        0 |
  keys.js       |  100.00 |        5 |         0 |          0 |        0 |        0 |
  once.js       |   46.88 |       13 |         2 |         17 |        0 |        0 |
  values.js     |   59.02 |       26 |        10 |         25 |        0 |        0 |
 throughs       |   75.63 |      222 |        20 |         78 |        0 |        0 |
  async-map.js  |   78.38 |       52 |         6 |         16 |        0 |        0 |
  filter-not.js |   90.00 |        7 |         2 |          1 |        0 |        0 |
  filter.js     |   65.52 |       14 |         5 |         10 |        0 |        0 |
  flatten.js    |   84.85 |       52 |         4 |         10 |        0 |        0 |
  map.js        |   90.00 |       26 |         1 |          3 |        0 |        0 |
  non-unique.js |   55.56 |        5 |         0 |          4 |        0 |        0 |
  take.js       |   71.43 |       38 |         2 |         16 |        0 |        0 |
  through.js    |   52.94 |       18 |         0 |         16 |        0 |        0 |
  unique.js     |   83.33 |       10 |         0 |          2 |        0 |        0 |
 util           |   75.00 |       10 |         2 |          4 |        0 |        0 |
  abort-cb.js   |  100.00 |        8 |         0 |          0 |        0 |        0 |
  prop.js       |    0.00 |        0 |         0 |          3 |        0 |        0 |
  tester.js     |   80.00 |        2 |         2 |          1 |        0 |        0 |
 index.js       |  100.00 |        9 |         0 |          0 |        0 |        0 |
 pull.js        |   44.90 |       39 |         5 |         54 |        0 |        0 |
----------------|---------|----------|-----------|------------|----------|----------|
[32m01:12:03 (2743) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/reports/mutation/mutation.html
[32m01:12:03 (2743) INFO MutationTestExecutor[39m Done in 21 minutes 33 seconds.

real	21m34.611s
user	8m10.434s
sys	1m40.946s
