*** using precomputed mutations ***
[32m09:15:03 (2567) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m09:15:03 (2567) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m09:15:03 (2567) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m09:15:03 (2567) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m09:15:03 (2567) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m09:15:03 (2567) INFO ProjectReader[39m Found 1 of 632 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 303 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(slice(-1))
Mutant 1 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(slice(0, -3))
Mutant 2 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(slice(0, 8))
Mutant 3 in index.js: obj replaced with true
Mutant 4 in index.js: obj replaced with false
Mutant 5 in index.js: obj replaced with !Boolean(obj)
Mutant 6 in index.js: 8 replaced with 7
Mutant 7 in index.js: 8 replaced with 3
Mutant 8 in index.js: 8 replaced with 9
Mutant 9 in index.js: -1 replaced with len + 8 - 1
Mutant 10 in index.js: -1 replaced with len + 1
Mutant 11 in index.js: [match, result] replaced with []
Mutant 12 in index.js: [match, result] replaced with [result, match]
Mutant 13 in index.js: [match, result] replaced with ['foo', 'bar']
Mutant 14 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 2) + 'ies';
})
Mutant 15 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'i';
})
Mutant 16 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'is';
})
Mutant 17 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$|quy$/gi
Mutant 18 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ies';
}
Mutant 19 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'uses';
}
Mutant 20 in index.js: w.substr(0, w.length - 1) replaced with w.substr(1, w.length - 1)
Mutant 21 in index.js: w.substr(0, w.length - 1) replaced with w.substr(0, w.length)
Mutant 22 in index.js: w.substr replaced with w.slice
Mutant 23 in index.js: w.substr replaced with w.toUpperCase
Mutant 24 in index.js: w.substr replaced with w.length - 2 + 'ies'
Mutant 25 in index.js: 0 replaced with w.length - 3
Mutant 26 in index.js: 0 replaced with w.length - 4
Mutant 27 in index.js: w.length - 1 replaced with w.length - 3
Mutant 28 in index.js: w.length - 1 replaced with w.length - 4
Mutant 29 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule("^e$|ch$|s$")
Mutant 30 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule("ch|s")
Mutant 31 in index.js: /x$|ch$|s$/i replaced with /y$|ch$|s$/i
Mutant 32 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$|plural/i
Mutant 33 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|ice$/i
Mutant 34 in index.js: function (w) {
  return w + 'es';
} replaced with w.substr(0, w.length - 1) + 'es'
Mutant 35 in index.js: function (w) {
  return w + 'es';
} replaced with w.slice(0, -1) + 'es'
Mutant 36 in index.js: function (w) {
  return w + 'es';
} replaced with w.split('').reverse().join('') + 'es'
Mutant 37 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|fungus|cactus|focus|syllabus/gi, function (w) {
  return w.substr(0, w.length - 2) + 'i';
})
Mutant 38 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|fungus|cactus|focus|syllabus/g, function (w) {
  return w.substr(0, w.length - 2) + 'u';
})
Mutant 39 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w + 'es';
}
Mutant 40 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 41 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ii';
}
Mutant 42 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length - 1)
Mutant 43 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length + 1, w.length + 1)
Mutant 44 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length / 2, w.length / 2)
Mutant 45 in index.js: w.substr replaced with w.substring
Mutant 46 in index.js: 0 replaced with -1
Mutant 47 in index.js: 0 replaced with x
Mutant 48 in index.js: w.length - 2 replaced with w.length - 3
Mutant 49 in index.js: w.length - 2 replaced with w.length + 1
Mutant 50 in index.js: w.length - 2 replaced with w.length / 2
Mutant 51 in index.js: /thesis|crisis/i replaced with /thesis|crises/i
Mutant 52 in index.js: /thesis|crisis/i replaced with Alex
Mutant 53 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  w.substr(0, w.length - 2) + 'is';
}
Mutant 54 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  w.slice(-2, -1) + 'es';
}
Mutant 55 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  w.split('').reverse().join('');
}
Mutant 56 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length - 1)
Mutant 57 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length, w.length)
Mutant 58 in index.js: w.substr(0, w.length - 2) replaced with w.substr(0, w.length - 1)
Mutant 59 in index.js: 0 replaced with w.substr(1, w.length - 2) + 'ees'
Mutant 60 in index.js: 0 replaced with w.substr(2, w.length - 2) + 'ees'
Mutant 61 in index.js: 0 replaced with w.substr(3, w.length - 2) + 'ees'
Mutant 62 in index.js: w.length - 2 replaced with w.length - 3
Mutant 63 in index.js: w.length - 2 replaced with w.length + 1
Mutant 64 in index.js: w.length - 2 replaced with foo.length - 2
Mutant 65 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.slice(0, -2) + 'ices';
})
Mutant 66 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.slice(0, -2) + 'i';
})
Mutant 67 in index.js: /appendix|index/i replaced with /appendix$|index/i
Mutant 68 in index.js: /appendix|index/i replaced with /index$|appendix/i
Mutant 69 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'eaux';
}
Mutant 70 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'eses';
}
Mutant 71 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'exes';
}
Mutant 72 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length - 1)
Mutant 73 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length, w.length + 1)
Mutant 74 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length / 2, w.length)
Mutant 75 in index.js: 0 replaced with w.length - 1
Mutant 76 in index.js: 0 replaced with w.length + 1
Mutant 77 in index.js: w.length - 2 replaced with w.substr(-2)
Mutant 78 in index.js: w.length - 2 replaced with w.charAt(w.length - 2)
Mutant 79 in index.js: w.length - 2 replaced with w.slice(-2)
Mutant 80 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]e$/i, function (w) {
  return w + 'es';
})
Mutant 81 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/^./, function (w, regex) {
  return w.replace(regex, rules.conjugate(w));
})
Mutant 82 in index.js: /[aeiouy]o$/i replaced with /[^aeiou]o$/i
Mutant 83 in index.js: /[aeiouy]o$/i replaced with /[aeiou]o$/i
Mutant 84 in index.js: /[aeiouy]o$/i replaced with /^[aeiouy]o$/i
Mutant 85 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w;
}
Mutant 86 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'es';
}
Mutant 87 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 88 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'e';
})
Mutant 89 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'ses';
})
Mutant 90 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + ' os';
})
Mutant 91 in index.js: /[^aeiouy]o$/i replaced with /o$/i
Mutant 92 in index.js: /[^aeiouy]o$/i replaced with /y$/i
Mutant 93 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'ie';
}
Mutant 94 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'SE';
}
Mutant 95 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'es' + w;
}
Mutant 96 in index.js: w === 'dwarf' || w === 'roof' replaced with w != 'dwarf' && w != 'roof'
Mutant 97 in index.js: w === 'dwarf' || w === 'roof' replaced with w !== 'dwarf' || w !== 'roof'
Mutant 98 in index.js: regex replaced with w.replace(new RegExp('ves$'), 'ves')
Mutant 99 in index.js: regex replaced with w.replace(/ves$/, 'ves')
Mutant 100 in index.js: regex replaced with w.replace('ves', 'ves')
Mutant 101 in index.js: 'ves' replaced with w.replace(regex, 'ves')
Mutant 102 in index.js: 'ves' replaced with w.replace(regex, 'ves') + 'es'
Mutant 103 in index.js: 'ves' replaced with w.replace(regex, function (m) {
  return m.toLowerCase() + 'ves';
})
Mutant 104 in index.js: addRule('criterion', 'criteria') replaced with addRule('criteria', 'criterion')
Mutant 105 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterion')
Mutant 106 in index.js: 'criterion' replaced with 'criteria'
Mutant 107 in index.js: 'criterion' replaced with 'criterions'
Mutant 108 in index.js: 'criteria' replaced with 'criterias'
Mutant 109 in index.js: 'criteria' replaced with 'criterions'
Mutant 110 in index.js: 'criteria' replaced with 'criterio'
Mutant 111 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacterium')
Mutant 112 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'virus')
Mutant 113 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('virus', 'bacterium')
Mutant 114 in index.js: 'bacterium' replaced with 'bacteria'
Mutant 115 in index.js: 'bacteria' replaced with 'bacterium'
Mutant 116 in index.js: 'bacteria' replaced with 'bacteria' + 'bacterium'
Mutant 117 in index.js: 'bacteria' replaced with 'bacteria' + 'bacteria'
Mutant 118 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memas')
Mutant 119 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'undos')
Mutant 120 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'pizzas')
Mutant 121 in index.js: 'memo' replaced with 'memo' && function () {
  return 'memos';
}
Mutant 122 in index.js: 'memo' replaced with 'memo' || function () {
  return 'memos';
}
Mutant 123 in index.js: 'memo' replaced with 'memos' / 0
Mutant 124 in index.js: 'memos' replaced with 'memo'
Mutant 125 in index.js: 'memos' replaced with 'memories'
Mutant 126 in index.js: 'memos' replaced with 'micro'
Mutant 127 in index.js: addRule('cello', 'cellos') replaced with addRule('cell', 'cells')
Mutant 128 in index.js: addRule('cello', 'cellos') replaced with addRule('cellobomb', 'cellobombs')
Mutant 129 in index.js: addRule('cello', 'cellos') replaced with addRule('celloglyph', 'celloglyphs')
Mutant 130 in index.js: 'cello' replaced with 'cello' + 's'
Mutant 131 in index.js: 'cello' replaced with 'cello'.length
Mutant 132 in index.js: 'cello' replaced with 'cello' + ''
Mutant 133 in index.js: 'cellos' replaced with 'cello'
Mutant 134 in index.js: 'cellos' replaced with 'cellos' + 's'
Mutant 135 in index.js: 'cellos' replaced with typeof 'cello'
Mutant 136 in index.js: addRule('die', 'dice') replaced with addRule('dye', 'dyes')
Mutant 137 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dies')
Mutant 138 in index.js: addRule('die', 'dice') replaced with addRule('dice', 'dying')
Mutant 139 in index.js: 'die' replaced with 'die' !== 'dice'
Mutant 140 in index.js: 'die' replaced with "dicee"
Mutant 141 in index.js: 'die' replaced with "dies"
Mutant 142 in index.js: 'dice' replaced with 'die'
Mutant 143 in index.js: 'dice' replaced with 'bison'
Mutant 144 in index.js: 'dice' replaced with 'pliers'
Mutant 145 in index.js: addRule('goose', 'geese') replaced with addRule('sparrow', 'sparrows')
Mutant 146 in index.js: addRule('goose', 'geese') replaced with addRule('gooses', 'goose')
Mutant 147 in index.js: addRule('goose', 'geese') replaced with addRule('geese', 'geese')
Mutant 148 in index.js: 'goose' replaced with 'bicycle'
Mutant 149 in index.js: 'goose' replaced with 'sheet'
Mutant 150 in index.js: 'goose' replaced with 'goose|gooses'
Mutant 151 in index.js: 'geese' replaced with 'goose'
Mutant 152 in index.js: 'geese' replaced with 'goose' + 's'
Mutant 153 in index.js: 'geese' replaced with 'goose' + 'es'
Mutant 154 in index.js: addRule('mouse', 'mice') replaced with addRule('mice', 'mice')
Mutant 155 in index.js: addRule('mouse', 'mice') replaced with addRule('mouse', 'dog')
Mutant 156 in index.js: addRule('mouse', 'mice') replaced with addRule('bird', 'mouse')
Mutant 157 in index.js: 'mouse' replaced with 'horse'
Mutant 158 in index.js: 'mouse' replaced with 'x'
Mutant 159 in index.js: 'mouse' replaced with save(kafka, 'mouse')
Mutant 160 in index.js: 'mice' replaced with 'mice'[0]
Mutant 161 in index.js: 'mice' replaced with 'monkey'
Mutant 162 in index.js: 'mice' replaced with 'mice' + 1
Mutant 163 in index.js: addRule('person', 'people') replaced with addRule('pers assigned', 'peoples')
Mutant 164 in index.js: addRule('person', 'people') replaced with addRule('persons', 'peoples')
Mutant 165 in index.js: addRule('person', 'people') replaced with addRule('person', 'peoples')
Mutant 166 in index.js: 'person' replaced with 'persona'
Mutant 167 in index.js: 'person' replaced with 'persona' || 'people'
Mutant 168 in index.js: 'person' replaced with 'person' + 's'
Mutant 169 in index.js: 'people' replaced with 'person'
Mutant 170 in index.js: 'people' replaced with 'persons'
Mutant 171 in index.js: 'people' replaced with 'individuals'
Mutant 172 in index.js: addRule('chilli', 'chillies') replaced with addRule('chilli', 'chilles')
Mutant 173 in index.js: addRule('chilli', 'chillies') replaced with addRule('chilli', 'chillie')
Mutant 174 in index.js: addRule('chilli', 'chillies') replaced with addRule('chilli', 'chillen')
Mutant 175 in index.js: 'chilli' replaced with 'chili'
Mutant 176 in index.js: 'chilli' replaced with 'chill'
Mutant 177 in index.js: 'chilli' replaced with 'peppers'
Mutant 178 in index.js: 'chillies' replaced with 'chilliz'
Mutant 179 in index.js: 'chillies' replaced with 'chilli'
Mutant 180 in index.js: 'chillies' replaced with 'chillis'
Mutant 181 in index.js: /^(?:wo)?man$/i replaced with /^Wo?Man$/i
Mutant 182 in index.js: /^(?:wo)?man$/i replaced with /^Wo(?:Man|Woman)$/i
Mutant 183 in index.js: /^(?:wo)?man$/i replaced with /^(?:Wo|Man)$/i
Mutant 184 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/o/, 'e');
}
Mutant 185 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w + 's';
}
Mutant 186 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/[aeiouy]$/, '');
}
Mutant 187 in index.js: w.replace(/a/, 'e') replaced with w.replace(/b/, 'e')
Mutant 188 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/gi, 'e')
Mutant 189 in index.js: w.replace(/a/, 'e') replaced with w.replace(/\bmar\b/i, 'e')
Mutant 190 in index.js: w.replace replaced with w + '*'
Mutant 191 in index.js: w.replace replaced with w[0] + '*'
Mutant 192 in index.js: /a/ replaced with /a\b/
Mutant 193 in index.js: /a/ replaced with /b/
Mutant 194 in index.js: /a/ replaced with /(a|b)/
Mutant 195 in index.js: 'e' replaced with ' '
Mutant 196 in index.js: 'e' replaced with null
Mutant 197 in index.js: 'e' replaced with undefined
Mutant 198 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/bison|cod|deer|fowl|halibut|moose|sheep|bear\b/i, function (w) {
  return w;
})
Mutant 199 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?!bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
})
Mutant 200 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep|!bear)\b/i, function (w) {
  return w;
})
Mutant 201 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/gi
Mutant 202 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)s\b/i
Mutant 203 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)s\b/gi
Mutant 204 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.split('').reverse().join('');
}
Mutant 205 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.slice(0, w.length - 1);
}
Mutant 206 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 207 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(/\b(?:goggle|scissor|plier|tong|tweezer)s\b/i)
Mutant 208 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(/this/i)
Mutant 209 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(/\bNone\b/i)
Mutant 210 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with /\b(?:goggle|scissor|plier|tong|tweezer)s\b/i
Mutant 211 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with /\b(?:trousers|pants|panties|clothes|games|illnesses|miscellaneous)s\b/i
Mutant 212 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with /\b(?:shoes|bikes|cars|hats|cats|dogs)s/i
Mutant 213 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes || games || illnesses || misc)
Mutant 214 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes.concat(games).concat(illnesses).concat(misc))
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes || games || illnesses || misc)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes.concat(games).concat(illnesses).concat(misc))
Mutant 215 in index.js: clothes replaced with addRule(/\b(?:truer|false|knive|purse)\b/i, function (w) {
  return w;
})
Mutant 216 in index.js: clothes replaced with addRule(/\b(?:shirt|skirt)\b/i, function (w) {
  return w;
})
Mutant 217 in index.js: clothes replaced with addRule(/\b(?:fridge|stove)\b/i, function (w) {
  return w;
})
Mutant 218 in index.js: games replaced with Math.floor(Math.random() * 2)
Mutant 219 in index.js: games replaced with "games".split("").reverse().join("")
Mutant 220 in index.js: illnesses replaced with "kwan"
Mutant 221 in index.js: illnesses replaced with "illness"
Mutant 222 in index.js: illnesses replaced with "cancer"
Mutant 223 in index.js: misc replaced with misc.pop()
Mutant 224 in index.js: misc replaced with misc[0] = '<some_string>'
Mutant 225 in index.js: function (w) {
  return w;
} replaced with function (word) {
  return word + 'es';
}
Mutant 226 in index.js: function (w) {
  return w;
} replaced with function (word) {
  return word + 'is';
}
Mutant 227 in index.js: function (w) {
  return w;
} replaced with function (word) {
  return word + 'os';
}
Mutant 228 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w + 's';
})
Mutant 229 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w.replace('ics', 'ies');
})
Mutant 230 in index.js: addRule replaced with /s$/i
Mutant 231 in index.js: addRule replaced with /ics$/i
Mutant 232 in index.js: /ics$/i replaced with /igc$/i
Mutant 233 in index.js: /ics$/i replaced with /ics+/i
Mutant 234 in index.js: /ics$/i replaced with /[cs]/i
Mutant 235 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.length + 1;
}
Mutant 236 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w[0] = 'a';
}
Mutant 237 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w[1] = w[1].toLowerCase();
}
Mutant 238 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with /(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i
Mutant 239 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)./i
Mutant 240 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w * 2;
}
Mutant 241 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + "s";
}
Mutant 242 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 2);
}
Mutant 243 in index.js: num !== 1 || num === undefined replaced with num !== 1 && num !== undefined
Mutant 244 in index.js: num !== 1 || num === undefined replaced with num === 1 || num === "one"
Mutant 245 in index.js: num !== 1 || num === undefined replaced with num === "one" && num !== "two"
Mutant 246 in index.js: i < rules.length replaced with i < rules.lenth + 1
Mutant 247 in index.js: i < rules.length replaced with i < rules.length - 1
Mutant 248 in index.js: i++ replaced with i += 2
Mutant 249 in index.js: i++ replaced with i--
Mutant 250 in index.js: i++ replaced with i = 0
Mutant 251 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].isPrototypeOf(word)
Mutant 252 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].toString().includes(word)
Mutant 253 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].toUpperCase().includes(word)
Mutant 254 in index.js: type replaced with typeof type
Mutant 255 in index.js: rule[0] replaced with rule[1]
Mutant 256 in index.js: rule[0] replaced with rule.length
Mutant 257 in index.js: rule[0] replaced with type(rule)
Mutant 258 in index.js: rule[0].test replaced with !rule[0].test
Mutant 259 in index.js: rule[0].test replaced with rule[0].match
Mutant 260 in index.js: type replaced with w === 'aye'
Mutant 261 in index.js: type replaced with w[w.length - 1] === 's'
Mutant 262 in index.js: type replaced with w[w.length - 2] === 'c'
Mutant 263 in index.js: rule[1] replaced with rule[2]
Mutant 264 in index.js: rule[1] replaced with rules[0][1]
Mutant 265 in index.js: rule[1] replaced with function () {}
Mutant 266 in index.js: rule[1](word, rule[0]) replaced with rule[1](word + rule[0])
Mutant 267 in index.js: rule[1](word, rule[0]) replaced with rule[1](rule[1])
Mutant 268 in index.js: rule[1](word, rule[0]) replaced with rule[1](word - rule[0])
Mutant 269 in index.js: rule[1] replaced with rule[0]
Mutant 270 in index.js: word replaced with word + 's'
Mutant 271 in index.js: word replaced with word + 'es'
Mutant 272 in index.js: word replaced with word.substring(0, word.length - 1)
Mutant 273 in index.js: rule[0] replaced with 1
Mutant 274 in index.js: rule[0] replaced with null
Mutant 275 in index.js: rule[0] replaced with undefined
Mutant 276 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0] === Number(word)
Mutant 277 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0] == word
Mutant 278 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0].indexOf(word) > -1
Mutant 279 in index.js: rule[0] replaced with rule[-1]
Mutant 280 in index.js: rule[0] replaced with rules[0].regex.test(word)
Mutant 281 in index.js: rule[0] replaced with rule[1](word)
Mutant 282 in index.js: rule[1] replaced with rule[2]
Mutant 283 in index.js: rule[1] replaced with rule[1] + 1
Mutant 284 in index.js: rule[1] replaced with null
Mutant 285 in index.js: rule[1] replaced with rule[0]
Mutant 286 in index.js: rule[1] replaced with 1
Mutant 287 in index.js: rule[1] replaced with rules.length
Mutant 288 in index.js: word replaced with "Pl}rc"
Mutant 289 in index.js: word replaced with "clouk"
Mutant 290 in index.js: word replaced with "monkey"
Mutant 291 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = "placeholder_string"
Mutant 292 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function (str) {
  return str + "palceholder_string";
}
Mutant 293 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function (str) {
  return str * 2;
}
Mutant 294 in index.js: plural(this, num) replaced with plural("hello world!", num)
Mutant 295 in index.js: plural(this, num) replaced with plural("a", num + 10)
Mutant 296 in index.js: plural(this, num) replaced with plural("b", num - 10)
Mutant 297 in index.js: this replaced with "something"
Mutant 298 in index.js: this replaced with null
Mutant 299 in index.js: this replaced with undefined
Mutant 300 in index.js: num replaced with 1
Mutant 301 in index.js: num replaced with "foo"
Mutant 302 in index.js: num replaced with num * 2
[32m09:15:04 (2567) INFO Instrumenter[39m Instrumented 1 source file(s) with 303 mutant(s)
[32m09:15:04 (2567) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m09:15:05 (2567) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m09:15:05 (2567) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m09:15:05 (2567) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 488 ms, overhead 0 ms).
Mutation testing 6% (elapsed: <1m, remaining: ~2m) 20/303 tested (0 survived, 0 timed out)
Mutation testing 13% (elapsed: <1m, remaining: ~2m) 41/303 tested (3 survived, 0 timed out)
Mutation testing 20% (elapsed: <1m, remaining: ~1m) 61/303 tested (6 survived, 0 timed out)
Mutation testing 26% (elapsed: <1m, remaining: ~1m) 81/303 tested (11 survived, 0 timed out)
Mutation testing 33% (elapsed: <1m, remaining: ~1m) 102/303 tested (14 survived, 0 timed out)
Mutation testing 40% (elapsed: ~1m, remaining: ~1m) 122/303 tested (21 survived, 0 timed out)
Mutation testing 47% (elapsed: ~1m, remaining: ~1m) 143/303 tested (31 survived, 0 timed out)
Mutation testing 53% (elapsed: ~1m, remaining: ~1m) 163/303 tested (31 survived, 0 timed out)
Mutation testing 60% (elapsed: ~1m, remaining: <1m) 184/303 tested (31 survived, 0 timed out)
Mutation testing 67% (elapsed: ~1m, remaining: <1m) 204/303 tested (34 survived, 0 timed out)
Mutation testing 74% (elapsed: ~1m, remaining: <1m) 225/303 tested (35 survived, 0 timed out)
Mutation testing 80% (elapsed: ~2m, remaining: <1m) 245/303 tested (37 survived, 0 timed out)
Mutation testing 84% (elapsed: ~2m, remaining: <1m) 255/303 tested (37 survived, 1 timed out)
Mutation testing 91% (elapsed: ~2m, remaining: <1m) 276/303 tested (38 survived, 1 timed out)
Mutation testing 97% (elapsed: ~2m, remaining: <1m) 296/303 tested (53 survived, 1 timed out)

All tests
  ✓ All tests (killed 242)

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.slice(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|s$|plural/i, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|ice$/i, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substring(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:23:57
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substr(w.substr(1, w.length - 2) + 'ees', w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:57
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substr(w.substr(2, w.length - 2) + 'ees', w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:57
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substr(w.substr(3, w.length - 2) + 'ees', w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:24:1
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function (w) {
+     return w.slice(0, -2) + 'ices';
+   });

[Survived] PrecomputedMutator
index.js:24:9
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix$|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:9
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/index$|appendix/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[aeiouy]e$/i, function (w) {
+     return w + 'es';
+   });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiou]o$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[aeiou]o$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/^[aeiouy]o$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'virus')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('virus', 'bacterium')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteria' + 'bacterium')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteria' + 'bacteria')

[Survived] PrecomputedMutator
index.js:41:9
-   addRule('memo', 'memos')
+   addRule('memo' || function () {
+     return 'memos';
+   }, 'memos')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cell', 'cells')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cellobomb', 'cellobombs')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('celloglyph', 'celloglyphs')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cello' + 's', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cello'.length, 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cello' + '', 'cellos')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cello')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cellos' + 's')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', typeof 'cello')

[Survived] PrecomputedMutator
index.js:49:47
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/gi, 'e') })

[Survived] PrecomputedMutator
index.js:49:57
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/(a|b)/, 'e') })

[Survived] PrecomputedMutator
index.js:52:1
-   addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function(w) { return w })
+   addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep|!bear)\b/i, function (w) {
+     return w;
+   })

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes.concat(games).concat(illnesses).concat(misc)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:67:9
-   addRule(/ics$/i, function(w) { return w })
+   addRule(/ics+/i, function(w) { return w })

[Survived] PrecomputedMutator
index.js:70:9
-   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function(w) { return w })
+   addRule(/(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function(w) { return w })

[Survived] PrecomputedMutator
index.js:81:21
-           return type(rule[1]) === 'Function' ? rule[1](word, rule[0]) : rule[1]
+           return type(function () {}) === 'Function' ? rule[1](word, rule[0]) : rule[1]

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (rule[0] == word) {

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[2]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1] + 1) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(null) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[0](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? 1(word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rules.length(word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1]("Pl}rc") : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1]("clouk") : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1]("monkey") : rule[1]

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = "placeholder_string") {

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function (str) {
+     return str + "palceholder_string";
+   }) {

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function (str) {
+     return str * 2;
+   }) {

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural("hello world!", num)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural("a", num + 10)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural("b", num - 10)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural("something", num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(undefined, num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, "foo")

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num * 2)

Ran 1.00 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   80.20 |      242 |         1 |         60 |        0 |        0 |
 index.js |   80.20 |      242 |         1 |         60 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m09:17:38 (2567) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/reports/mutation/mutation.html
[32m09:17:38 (2567) INFO MutationTestExecutor[39m Done in 2 minutes 35 seconds.

real	2m36.910s
user	2m38.925s
sys	0m26.591s
