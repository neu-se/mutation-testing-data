*** using precomputed mutations ***
[32m00:41:15 (3313) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m00:41:15 (3313) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m00:41:15 (3313) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m00:41:16 (3313) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m00:41:16 (3313) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m00:41:16 (3313) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2002 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.25/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition + 1)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition * 2)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition - 1)
Mutant 6 in q.js: bootstrap replaced with "promise"
Mutant 7 in q.js: bootstrap replaced with "q"
Mutant 8 in q.js: bootstrap replaced with "function"
Mutant 9 in q.js: "promise" replaced with "fulfilled"
Mutant 10 in q.js: "promise" replaced with "rejected"
Mutant 11 in q.js: "promise" replaced with "pending"
Mutant 12 in q.js: definition replaced with null
Mutant 13 in q.js: definition replaced with undefined
Mutant 14 in q.js: definition replaced with function () {}
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports !== "object" && typeof module === "object"
Mutant 16 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "function" && typeof module === "object"
Mutant 17 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module !== "object"
Mutant 18 in q.js: definition replaced with null
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.isNodeJS
Mutant 20 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.isNodeJS === false
Mutant 21 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.isNodeJS !== true
Mutant 22 in q.js: definition replaced with definition()
Mutant 23 in q.js: definition replaced with null
Mutant 24 in q.js: definition replaced with "foo"
Mutant 25 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 26 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "object"
Mutant 27 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "function"
Mutant 28 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 29 in q.js: !ses.ok() replaced with !ses.ok
Mutant 30 in q.js: !ses.ok() replaced with ses.ok()
Mutant 31 in q.js: ses.ok replaced with ses.maybeOk
Mutant 32 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 33 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" ^ typeof self !== "undefined"
Mutant 34 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined" && typeof document !== "undefined"
Mutant 35 in q.js: captureLine replaced with captureLine + 1
Mutant 36 in q.js: captureLine replaced with captureLine - 1
Mutant 37 in q.js: captureLine replaced with captureLine * 2
Mutant 38 in q.js: head.next replaced with head.next.next
Mutant 39 in q.js: head.next replaced with head.next.next.next
Mutant 40 in q.js: head.next replaced with head.next.next.next.next
Mutant 41 in q.js: domain replaced with !domain
Mutant 42 in q.js: domain replaced with domain + 1
Mutant 43 in q.js: domain replaced with domain.foo
Mutant 44 in q.js: domain.enter replaced with domain.exit
Mutant 45 in q.js: domain.enter replaced with domain.run
Mutant 46 in q.js: domain.enter replaced with domain.bind
Mutant 47 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, undefined)
Mutant 48 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, null)
Mutant 49 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, {})
Mutant 50 in q.js: task replaced with null
Mutant 51 in q.js: task replaced with undefined
Mutant 52 in q.js: task replaced with 0
Mutant 53 in q.js: domain replaced with undefined
Mutant 54 in q.js: domain replaced with null
Mutant 55 in q.js: domain replaced with 0
Mutant 56 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 57 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 58 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 59 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 60 in q.js: laterQueue.pop replaced with laterQueue.length
Mutant 61 in q.js: runSingle replaced with noop
Mutant 62 in q.js: runSingle replaced with undefined
Mutant 63 in q.js: runSingle replaced with null
Mutant 64 in q.js: task replaced with null
Mutant 65 in q.js: task replaced with undefined
Mutant 66 in q.js: task replaced with 0
Mutant 67 in q.js: task replaced with task + 1
Mutant 68 in q.js: task replaced with task * 2
Mutant 69 in q.js: task replaced with task - 1
Mutant 70 in q.js: isNodeJS replaced with !isNodeJS
Mutant 71 in q.js: isNodeJS replaced with isNodeJS === false
Mutant 72 in q.js: isNodeJS replaced with typeof isNodeJS === "undefined"
Mutant 73 in q.js: domain replaced with domain.exit()
Mutant 74 in q.js: domain replaced with domain.enter()
Mutant 75 in q.js: domain.exit replaced with domain.enter
Mutant 76 in q.js: domain.exit replaced with domain.run
Mutant 77 in q.js: domain.exit replaced with domain.bind
Mutant 78 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 79 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "0")
Mutant 80 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 81 in q.js: setTimeout replaced with setInterval
Mutant 82 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 83 in q.js: flush replaced with flush()
Mutant 84 in q.js: flush replaced with flush(1)
Mutant 85 in q.js: flush replaced with flush.call(null)
Mutant 86 in q.js: 0 replaced with 1
Mutant 87 in q.js: 0 replaced with -1
Mutant 88 in q.js: 0 replaced with Infinity
Mutant 89 in q.js: domain replaced with !domain
Mutant 90 in q.js: domain replaced with domain + 1
Mutant 91 in q.js: domain replaced with domain.foo
Mutant 92 in q.js: domain.enter replaced with domain.exit
Mutant 93 in q.js: domain replaced with !domain
Mutant 94 in q.js: domain replaced with domain && false
Mutant 95 in q.js: domain replaced with domain || true
Mutant 96 in q.js: domain.exit replaced with domain.enter
Mutant 97 in q.js: !flushing replaced with flushing
Mutant 98 in q.js: !flushing replaced with !flushing && true
Mutant 99 in q.js: !flushing replaced with flushing || true
Mutant 100 in q.js: flush replaced with flush()
Mutant 101 in q.js: flush replaced with flush(1)
Mutant 102 in q.js: flush replaced with flush(undefined)
Mutant 103 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 104 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 105 in q.js: typeof window !== "undefined" replaced with typeof window !== "function"
Mutant 106 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 107 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 108 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind({})
Mutant 109 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 110 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 111 in q.js: window replaced with undefined
Mutant 112 in q.js: window replaced with null
Mutant 113 in q.js: window replaced with {}
Mutant 114 in q.js: flush replaced with flush()
Mutant 115 in q.js: flush replaced with flush(1)
Mutant 116 in q.js: flush replaced with flush(function () {})
Mutant 117 in q.js: flush replaced with flush()
Mutant 118 in q.js: flush replaced with flush(1)
Mutant 119 in q.js: flush replaced with flush(function () {})
Mutant 120 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 121 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 122 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "function"
Mutant 123 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 124 in q.js: 0 replaced with 1
Mutant 125 in q.js: 0 replaced with "hello"
Mutant 126 in q.js: 0 replaced with null
Mutant 127 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 128 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 129 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 130 in q.js: flush replaced with flush()
Mutant 131 in q.js: flush replaced with requestTick()
Mutant 132 in q.js: 0 replaced with 1
Mutant 133 in q.js: 0 replaced with -1
Mutant 134 in q.js: 0 replaced with null
Mutant 135 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 136 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 137 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "hello")
Mutant 138 in q.js: setTimeout replaced with setInterval
Mutant 139 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 140 in q.js: flush replaced with flush()
Mutant 141 in q.js: flush replaced with flush(0)
Mutant 142 in q.js: flush replaced with flush(1)
Mutant 143 in q.js: 0 replaced with 1
Mutant 144 in q.js: 0 replaced with -1
Mutant 145 in q.js: 0 replaced with Infinity
Mutant 146 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 147 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 148 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 149 in q.js: task replaced with null
Mutant 150 in q.js: task replaced with undefined
Mutant 151 in q.js: task replaced with 0
Mutant 152 in q.js: !flushing replaced with flushing
Mutant 153 in q.js: !flushing replaced with flushing === true
Mutant 154 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 155 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 156 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[2])
Mutant 157 in q.js: call.apply replaced with call.bind
Mutant 158 in q.js: call.apply replaced with call.call
Mutant 159 in q.js: f replaced with f + 1
Mutant 160 in q.js: f replaced with f * 2
Mutant 161 in q.js: f replaced with f - 1
Mutant 162 in q.js: arguments replaced with [1, 2, 3]
Mutant 163 in q.js: arguments replaced with "hello"
Mutant 164 in q.js: arguments replaced with null
Mutant 165 in q.js: Array.prototype.slice replaced with Array.prototype.reverse
Mutant 166 in q.js: Array.prototype.slice replaced with Array.prototype.splice
Mutant 167 in q.js: Array.prototype.slice replaced with Array.prototype.concat
Mutant 168 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 169 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 170 in q.js: 1 replaced with 1 + 1
Mutant 171 in q.js: 1 replaced with "hello"
Mutant 172 in q.js: 1 replaced with []
Mutant 173 in q.js: index in this replaced with index > this.length
Mutant 174 in q.js: index in this replaced with index >= this.length
Mutant 175 in q.js: index in this replaced with index > 0
Mutant 176 in q.js: ++index >= length replaced with index > length
Mutant 177 in q.js: ++index >= length replaced with index <= length
Mutant 178 in q.js: ++index >= length replaced with index == length
Mutant 179 in q.js: index < length replaced with index > length
Mutant 180 in q.js: index < length replaced with index <= length
Mutant 181 in q.js: index < length replaced with index >= length
Mutant 182 in q.js: index++ replaced with index--
Mutant 183 in q.js: index++ replaced with index += 2
Mutant 184 in q.js: index++ replaced with index = 0
Mutant 185 in q.js: index in this replaced with index > this.length
Mutant 186 in q.js: index in this replaced with index < this.length
Mutant 187 in q.js: index in this replaced with index === this.length
Mutant 188 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 189 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 190 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index * 2)
Mutant 191 in q.js: basis replaced with basis + 1
Mutant 192 in q.js: basis replaced with basis - 1
Mutant 193 in q.js: basis replaced with basis * 2
Mutant 194 in q.js: this[index] replaced with this[index + 1]
Mutant 195 in q.js: this[index] replaced with this[index - 1]
Mutant 196 in q.js: this[index] replaced with this[index] = 0
Mutant 197 in q.js: index replaced with index + 1
Mutant 198 in q.js: index replaced with index - 1
Mutant 199 in q.js: index replaced with index * 2
Mutant 200 in q.js: i < this.length replaced with i <= this.length
Mutant 201 in q.js: i < this.length replaced with i > this.length
Mutant 202 in q.js: i < this.length replaced with i != this.length
Mutant 203 in q.js: i++ replaced with i--
Mutant 204 in q.js: i++ replaced with i += 2
Mutant 205 in q.js: i++ replaced with i *= 2
Mutant 206 in q.js: this[i] === value replaced with this[i] !== value
Mutant 207 in q.js: this[i] === value replaced with this[i] < value
Mutant 208 in q.js: this[i] === value replaced with this[i] > value
Mutant 209 in q.js: collect.push replaced with collect.pop
Mutant 210 in q.js: collect.push replaced with collect.shift
Mutant 211 in q.js: collect.push replaced with collect.unshift
Mutant 212 in q.js: callback.call(thisp, value, index, self) replaced with callback(value, index, self)
Mutant 213 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(thisp, [value, index, self])
Mutant 214 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self.length)
Mutant 215 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self.prototype)
Mutant 216 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self.constructor)
Mutant 217 in q.js: callback.call replaced with callback.bind
Mutant 218 in q.js: thisp replaced with null
Mutant 219 in q.js: thisp replaced with undefined
Mutant 220 in q.js: thisp replaced with {}
Mutant 221 in q.js: value replaced with undefined
Mutant 222 in q.js: value replaced with null
Mutant 223 in q.js: value replaced with 0
Mutant 224 in q.js: index replaced with index + 1
Mutant 225 in q.js: index replaced with index - 1
Mutant 226 in q.js: index replaced with length - index
Mutant 227 in q.js: self replaced with undefined
Mutant 228 in q.js: self replaced with null
Mutant 229 in q.js: self replaced with "foo"
Mutant 230 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 231 in q.js: object replaced with null
Mutant 232 in q.js: object replaced with undefined
Mutant 233 in q.js: object replaced with {}
Mutant 234 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && key !== "prototype"
Mutant 235 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || key === "prototype"
Mutant 236 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && key !== "length"
Mutant 237 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object)
Mutant 238 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(key)
Mutant 239 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object.hasOwnProperty(key))
Mutant 240 in q.js: object_hasOwnProperty replaced with key in this
Mutant 241 in q.js: object replaced with null
Mutant 242 in q.js: object replaced with undefined
Mutant 243 in q.js: object replaced with {}
Mutant 244 in q.js: key replaced with this[key]
Mutant 245 in q.js: key replaced with window[key]
Mutant 246 in q.js: key replaced with global[key]
Mutant 247 in q.js: key replaced with this[key]
Mutant 248 in q.js: key replaced with key + 1
Mutant 249 in q.js: Object replaced with null
Mutant 250 in q.js: Object replaced with undefined
Mutant 251 in q.js: Object replaced with {}
Mutant 252 in q.js: value replaced with value + 1
Mutant 253 in q.js: value replaced with value * 2
Mutant 254 in q.js: value replaced with value - 1
Mutant 255 in q.js: exception replaced with exception.message
Mutant 256 in q.js: exception replaced with exception.stack
Mutant 257 in q.js: exception replaced with exception.name
Mutant 258 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "function"
Mutant 259 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "undefined"
Mutant 260 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "object"
Mutant 261 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.value) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 262 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.valueOf()) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 263 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.toString()) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 264 in q.js: !!p replaced with !p
Mutant 265 in q.js: !!p replaced with p && true
Mutant 266 in q.js: !!p replaced with p || false
Mutant 267 in q.js: p = p.source replaced with p = p.source.slice()
Mutant 268 in q.js: p = p.source replaced with p = p.source.filter(function (x) {
  return x !== undefined;
})
Mutant 269 in q.js: p = p.source replaced with p = p.source.map(function (x) {
  return x + 1;
})
Mutant 270 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 271 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 272 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 273 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 274 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter * 2,
  configurable: true
})
Mutant 275 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 276 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 277 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__" + 1
Mutant 278 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 279 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 280 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 281 in q.js: stacks.unshift replaced with stacks.push
Mutant 282 in q.js: stacks.unshift replaced with stacks.pop
Mutant 283 in q.js: stacks.unshift replaced with stacks.shift
Mutant 284 in q.js: p.stack replaced with p.source.stack
Mutant 285 in q.js: p.stack replaced with p.stack + "foo"
Mutant 286 in q.js: p.stack replaced with p.stack.toUpperCase()
Mutant 287 in q.js: stacks.unshift replaced with stacks.push
Mutant 288 in q.js: stacks.unshift replaced with stacks.pop
Mutant 289 in q.js: stacks.unshift replaced with stacks.shift
Mutant 290 in q.js: error.stack replaced with error.message
Mutant 291 in q.js: error.stack replaced with error.name
Mutant 292 in q.js: error.stack replaced with error.code
Mutant 293 in q.js: stacks.join replaced with stacks.concat
Mutant 294 in q.js: stacks.join replaced with stacks.push
Mutant 295 in q.js: stacks.join replaced with stacks.pop
Mutant 296 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + " "
Mutant 297 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + "\t"
Mutant 298 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + "\r\n"
Mutant 299 in q.js: concatedStacks replaced with concatedStacks.split("\n")[0]
Mutant 300 in q.js: concatedStacks replaced with concatedStacks.split("\n").reverse()[0]
Mutant 301 in q.js: concatedStacks replaced with concatedStacks.split("\n").slice(1)
Mutant 302 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: true
})
Mutant 303 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 304 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: false
})
Mutant 305 in q.js: "stack" replaced with "stackTrace"
Mutant 306 in q.js: "stack" replaced with "error"
Mutant 307 in q.js: "stack" replaced with "message"
Mutant 308 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 309 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  enumerable: true
}
Mutant 310 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  writable: false
}
Mutant 311 in q.js: "\n" replaced with " "
Mutant 312 in q.js: "\n" replaced with "\t"
Mutant 313 in q.js: "\n" replaced with "\\n"
Mutant 314 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 315 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 316 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = array.length - 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 317 in q.js: i < lines.length replaced with i <= lines.length
Mutant 318 in q.js: i < lines.length replaced with i > lines.length
Mutant 319 in q.js: i < lines.length replaced with i = lines.length
Mutant 320 in q.js: ++i replaced with i--
Mutant 321 in q.js: ++i replaced with i += 2
Mutant 322 in q.js: ++i replaced with i *= 2
Mutant 323 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && line.length > 0
Mutant 324 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && line.indexOf(" ") > -1
Mutant 325 in q.js: isInternalFrame replaced with isExternalFrame
Mutant 326 in q.js: isInternalFrame replaced with isBrowserFrame
Mutant 327 in q.js: line replaced with line + 1
Mutant 328 in q.js: line replaced with line - 1
Mutant 329 in q.js: line replaced with line * 2
Mutant 330 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 331 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 332 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 333 in q.js: line replaced with line + 1
Mutant 334 in q.js: line replaced with line - 1
Mutant 335 in q.js: line replaced with line * 2
Mutant 336 in q.js: "\n" replaced with " "
Mutant 337 in q.js: "\n" replaced with "\t"
Mutant 338 in q.js: "\n" replaced with "<br>"
Mutant 339 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 340 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 341 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 342 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 343 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 344 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 345 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 346 in q.js: stackLine replaced with stackLine.split(" ").slice(1).join(" ")
Mutant 347 in q.js: stackLine replaced with stackLine.split(" ").slice(2).join(" ")
Mutant 348 in q.js: attempt1 replaced with attempt1[1] !== undefined
Mutant 349 in q.js: attempt1 replaced with attempt1[1] !== null
Mutant 350 in q.js: attempt1 replaced with attempt1[1] !== ""
Mutant 351 in q.js: Number replaced with "0"
Mutant 352 in q.js: Number replaced with null
Mutant 353 in q.js: Number replaced with undefined
Mutant 354 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 355 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 356 in q.js: attempt1[2] replaced with attempt2[1]
Mutant 357 in q.js: stackLine replaced with stackLine.trim()
Mutant 358 in q.js: stackLine replaced with stackLine.toLowerCase()
Mutant 359 in q.js: stackLine replaced with stackLine.split(" ").join("")
Mutant 360 in q.js: attempt2 replaced with attempt2[1] > 1
Mutant 361 in q.js: attempt2 replaced with attempt2[1] === 1
Mutant 362 in q.js: attempt2 replaced with attempt2[1] < 1
Mutant 363 in q.js: Number replaced with "hello"
Mutant 364 in q.js: Number replaced with null
Mutant 365 in q.js: Number replaced with undefined
Mutant 366 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 367 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 368 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 369 in q.js: stackLine replaced with stackLine.split("@")[0]
Mutant 370 in q.js: stackLine replaced with stackLine.replace(/^.*@/, "")
Mutant 371 in q.js: stackLine replaced with stackLine.substring(stackLine.indexOf("@") + 1)
Mutant 372 in q.js: attempt3 replaced with attempt3[0]
Mutant 373 in q.js: attempt3 replaced with attempt3[1]
Mutant 374 in q.js: attempt3 replaced with attempt3[2]
Mutant 375 in q.js: Number replaced with "1"
Mutant 376 in q.js: Number replaced with null
Mutant 377 in q.js: Number replaced with undefined
Mutant 378 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 379 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 380 in q.js: attempt3[2] replaced with attempt3[4]
Mutant 381 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 382 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[1]
Mutant 383 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[2]
Mutant 384 in q.js: stackLine replaced with stackLine.split("at ")[1]
Mutant 385 in q.js: stackLine replaced with stackLine.split("at ")[0]
Mutant 386 in q.js: stackLine replaced with stackLine.split("at ")[2]
Mutant 387 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 388 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 389 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 390 in q.js: !hasStacks replaced with hasStacks
Mutant 391 in q.js: "\n" replaced with "\t"
Mutant 392 in q.js: "\n" replaced with "\r"
Mutant 393 in q.js: "\n" replaced with "\v"
Mutant 394 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 395 in q.js: lines[0].indexOf replaced with lines[lines.length - 1].indexOf
Mutant 396 in q.js: "@" replaced with "#"
Mutant 397 in q.js: "@" replaced with "%"
Mutant 398 in q.js: "@" replaced with "^"
Mutant 399 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 400 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber.length
Mutant 401 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0]
Mutant 402 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1]
Mutant 403 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length
Mutant 404 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== "function"
Mutant 405 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn !== "function"
Mutant 406 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== "function" && typeof console !== "undefined"
Mutant 407 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, null)
Mutant 408 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, undefined)
Mutant 409 in q.js: callback.apply replaced with callback.call
Mutant 410 in q.js: callback.apply replaced with callback.bind
Mutant 411 in q.js: callback.apply replaced with callback.toString
Mutant 412 in q.js: callback replaced with callback.apply(this, arguments)
Mutant 413 in q.js: callback replaced with callback.apply(null, arguments)
Mutant 414 in q.js: callback replaced with callback.apply(undefined, arguments)
Mutant 415 in q.js: arguments replaced with null
Mutant 416 in q.js: arguments replaced with []
Mutant 417 in q.js: arguments replaced with [1, 2, 3]
Mutant 418 in q.js: value instanceof Promise replaced with value === Promise
Mutant 419 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 420 in q.js: value instanceof Promise replaced with Object.getPrototypeOf(value) === Promise.prototype
Mutant 421 in q.js: isPromiseAlike(value) replaced with value instanceof Promise
Mutant 422 in q.js: isPromiseAlike(value) replaced with value.then
Mutant 423 in q.js: isPromiseAlike(value) replaced with value.constructor === Promise
Mutant 424 in q.js: isPromiseAlike replaced with typeof value === "object"
Mutant 425 in q.js: isPromiseAlike replaced with value.then && typeof value.then === "function"
Mutant 426 in q.js: value replaced with value + 1
Mutant 427 in q.js: value replaced with value * 2
Mutant 428 in q.js: value replaced with value - 1
Mutant 429 in q.js: value replaced with value + 1
Mutant 430 in q.js: value replaced with value - 1
Mutant 431 in q.js: value replaced with value * 2
Mutant 432 in q.js: fulfill replaced with reject
Mutant 433 in q.js: value replaced with null
Mutant 434 in q.js: value replaced with undefined
Mutant 435 in q.js: value replaced with 0
Mutant 436 in q.js: object_create replaced with Object.create
Mutant 437 in q.js: object_create replaced with null
Mutant 438 in q.js: object_create replaced with null
Mutant 439 in q.js: object_create replaced with undefined
Mutant 440 in q.js: object_create replaced with {}
Mutant 441 in q.js: Promise.prototype replaced with Object.prototype
Mutant 442 in q.js: Promise.prototype replaced with null
Mutant 443 in q.js: Promise.prototype replaced with undefined
Mutant 444 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 445 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 446 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 447 in q.js: messages replaced with messages.length
Mutant 448 in q.js: messages replaced with resolvedPromise
Mutant 449 in q.js: messages replaced with promise.inspect().state
Mutant 450 in q.js: args replaced with args.slice(1)
Mutant 451 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 452 in q.js: args replaced with args.map(function (x) {
  return x * 2;
})
Mutant 453 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 454 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 455 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === 0
Mutant 456 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 457 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 458 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 459 in q.js: operands[1] replaced with operands[0]
Mutant 460 in q.js: operands[1] replaced with operands[2]
Mutant 461 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(promise))
Mutant 462 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(deferred))
Mutant 463 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(Q))
Mutant 464 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 465 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.bind
Mutant 466 in q.js: resolvedPromise replaced with promise
Mutant 467 in q.js: resolvedPromise replaced with deferred.promise
Mutant 468 in q.js: resolvedPromise replaced with Q.resolve(promise)
Mutant 469 in q.js: args replaced with [args]
Mutant 470 in q.js: args replaced with args.slice(1)
Mutant 471 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 472 in q.js: messages replaced with messages.length
Mutant 473 in q.js: messages replaced with messages[0]
Mutant 474 in q.js: messages replaced with resolvedPromise
Mutant 475 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 476 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 477 in q.js: resolvedPromise replaced with fulfill(resolvedPromise)
Mutant 478 in q.js: isPromise(nearerValue) replaced with nearerValue === undefined
Mutant 479 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 480 in q.js: isPromise(nearerValue) replaced with nearerValue === "foo"
Mutant 481 in q.js: isPromise replaced with isPromiseAlike
Mutant 482 in q.js: isPromise replaced with !isPromise
Mutant 483 in q.js: isPromise replaced with isPromise || isPromiseAlike
Mutant 484 in q.js: nearerValue replaced with nearerValue + 1
Mutant 485 in q.js: nearerValue replaced with nearerValue - 1
Mutant 486 in q.js: nearerValue replaced with nearerValue * 2
Mutant 487 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 488 in q.js: !resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 489 in q.js: !resolvedPromise replaced with resolvedPromise === null
Mutant 490 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 491 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 492 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && hasStacks && false
Mutant 493 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 494 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") - 1
Mutant 495 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") + 2
Mutant 496 in q.js: e.stack.indexOf replaced with e.stack.lastIndexOf
Mutant 497 in q.js: e.stack.indexOf replaced with e.stack.includes
Mutant 498 in q.js: "\n" replaced with "\t"
Mutant 499 in q.js: "\n" replaced with " "
Mutant 500 in q.js: "\n" replaced with "\\"
Mutant 501 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 502 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 503 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 504 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.length)
Mutant 505 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.pop())
Mutant 506 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 507 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 508 in q.js: newPromise replaced with undefined
Mutant 509 in q.js: newPromise replaced with null
Mutant 510 in q.js: newPromise replaced with new Error()
Mutant 511 in q.js: message replaced with message.reverse()
Mutant 512 in q.js: message replaced with message.slice(1)
Mutant 513 in q.js: message replaced with message.concat(["foo"])
Mutant 514 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 515 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 516 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 517 in q.js: Q replaced with Q.reject
Mutant 518 in q.js: Q replaced with Q.resolve
Mutant 519 in q.js: Q replaced with Q.all
Mutant 520 in q.js: value replaced with !value
Mutant 521 in q.js: value replaced with value + 1
Mutant 522 in q.js: value replaced with value * 2
Mutant 523 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 524 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 525 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 526 in q.js: fulfill(value) replaced with reject(value)
Mutant 527 in q.js: fulfill(value) replaced with fulfill(undefined)
Mutant 528 in q.js: fulfill(value) replaced with fulfill(null)
Mutant 529 in q.js: fulfill replaced with resolve
Mutant 530 in q.js: fulfill replaced with notify
Mutant 531 in q.js: value replaced with Q.reject("error")
Mutant 532 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 533 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 534 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 535 in q.js: reject replaced with fulfill
Mutant 536 in q.js: reject replaced with notify
Mutant 537 in q.js: reason replaced with null
Mutant 538 in q.js: reason replaced with undefined
Mutant 539 in q.js: reason replaced with "error"
Mutant 540 in q.js: resolvedPromise replaced with rejectedPromise
Mutant 541 in q.js: resolvedPromise replaced with deferred.promise
Mutant 542 in q.js: progressListener replaced with progressListeners[0]
Mutant 543 in q.js: progress replaced with progress + 1
Mutant 544 in q.js: progress replaced with progress - 1
Mutant 545 in q.js: progress replaced with progress * 2
Mutant 546 in q.js: error replaced with null
Mutant 547 in q.js: error replaced with new Error("foo")
Mutant 548 in q.js: error replaced with new TypeError("bar")
Mutant 549 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 550 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 551 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 552 in q.js: self.resolve replaced with self.reject
Mutant 553 in q.js: self.resolve replaced with self.notify
Mutant 554 in q.js: self.resolve replaced with self.fulfill
Mutant 555 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 556 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 557 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 3)
Mutant 558 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 559 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 560 in q.js: arguments replaced with "hello"
Mutant 561 in q.js: arguments replaced with function () {}
Mutant 562 in q.js: 1 replaced with 0
Mutant 563 in q.js: 1 replaced with null
Mutant 564 in q.js: self.resolve replaced with self.reject
Mutant 565 in q.js: self.resolve replaced with self.notify
Mutant 566 in q.js: self.resolve replaced with self.fulfill
Mutant 567 in q.js: value replaced with null
Mutant 568 in q.js: value replaced with undefined
Mutant 569 in q.js: value replaced with false
Mutant 570 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 571 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "object"
Mutant 572 in q.js: typeof resolver !== "function" replaced with resolver.constructor !== Function
Mutant 573 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.fulfill)
Mutant 574 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject(new Error("Testing mutation")))
Mutant 575 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify("Testing mutation"))
Mutant 576 in q.js: deferred.resolve replaced with deferred.reject
Mutant 577 in q.js: deferred.resolve replaced with deferred.notify
Mutant 578 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 579 in q.js: deferred.reject replaced with deferred.resolve
Mutant 580 in q.js: deferred.reject replaced with deferred.notify
Mutant 581 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 582 in q.js: deferred.notify replaced with deferred.notify("progress")
Mutant 583 in q.js: deferred.notify replaced with deferred.notify(progress)
Mutant 584 in q.js: deferred.notify replaced with deferred.notify(10)
Mutant 585 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 586 in q.js: deferred.reject replaced with deferred.notify
Mutant 587 in q.js: deferred.reject replaced with deferred.resolve
Mutant 588 in q.js: reason replaced with null
Mutant 589 in q.js: reason replaced with undefined
Mutant 590 in q.js: reason replaced with "Error"
Mutant 591 in q.js: Q replaced with Q.reject
Mutant 592 in q.js: Q replaced with Q.resolve
Mutant 593 in q.js: Q replaced with Q.all
Mutant 594 in q.js: x replaced with x + 1
Mutant 595 in q.js: x replaced with x * 2
Mutant 596 in q.js: x replaced with x - 1
Mutant 597 in q.js: y replaced with x
Mutant 598 in q.js: y replaced with y + 1
Mutant 599 in q.js: y replaced with x + y
Mutant 600 in q.js: [this, that] replaced with [that, this]
Mutant 601 in q.js: [this, that] replaced with [this, this]
Mutant 602 in q.js: [this, that] replaced with [that, that]
Mutant 603 in q.js: x === y replaced with x !== y
Mutant 604 in q.js: x === y replaced with x == y
Mutant 605 in q.js: x === y replaced with x > y
Mutant 606 in q.js: i < len replaced with i > len
Mutant 607 in q.js: i < len replaced with i <= len
Mutant 608 in q.js: i < len replaced with i >= len
Mutant 609 in q.js: i++ replaced with i--
Mutant 610 in q.js: i++ replaced with i += 2
Mutant 611 in q.js: i++ replaced with i = i + 1
Mutant 612 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 613 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, resolve)
Mutant 614 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve, reject)
Mutant 615 in q.js: Q replaced with Q.reject
Mutant 616 in q.js: Q replaced with Q.resolve
Mutant 617 in q.js: Q replaced with Q.all
Mutant 618 in q.js: answerPs[i] replaced with answerPs[i + 1]
Mutant 619 in q.js: answerPs[i] replaced with answerPs[i - 1]
Mutant 620 in q.js: answerPs[i] replaced with answerPs[i + 2]
Mutant 621 in q.js: resolve replaced with reject
Mutant 622 in q.js: reject replaced with resolve
Mutant 623 in q.js: this.then replaced with deferred.promise
Mutant 624 in q.js: this.then replaced with deferred.reject
Mutant 625 in q.js: this.then replaced with deferred.notify
Mutant 626 in q.js: Q.race replaced with Q.reject
Mutant 627 in q.js: Q.race replaced with Q.resolve
Mutant 628 in q.js: Q.race replaced with Q.all
Mutant 629 in q.js: fallback === void 0 replaced with fallback === null
Mutant 630 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 631 in q.js: fallback === void 0 replaced with fallback === NaN
Mutant 632 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 633 in q.js: inspect === void 0 replaced with inspect === null
Mutant 634 in q.js: inspect === void 0 replaced with typeof inspect === "undefined"
Mutant 635 in q.js: object_create replaced with null
Mutant 636 in q.js: object_create replaced with undefined
Mutant 637 in q.js: object_create replaced with {}
Mutant 638 in q.js: Promise.prototype replaced with Object.prototype
Mutant 639 in q.js: Promise.prototype replaced with Function.prototype
Mutant 640 in q.js: Promise.prototype replaced with Array.prototype
Mutant 641 in q.js: descriptor[op] replaced with descriptor[op] + 1
Mutant 642 in q.js: descriptor[op] replaced with descriptor[op] = function () {}
Mutant 643 in q.js: descriptor[op] replaced with descriptor[op] = null
Mutant 644 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args, null)
Mutant 645 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args, undefined)
Mutant 646 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args, "foo")
Mutant 647 in q.js: args replaced with args[0]
Mutant 648 in q.js: args replaced with args.slice(1)
Mutant 649 in q.js: args replaced with args.concat(["extra argument"])
Mutant 650 in q.js: promise replaced with null
Mutant 651 in q.js: promise replaced with undefined
Mutant 652 in q.js: promise replaced with {}
Mutant 653 in q.js: op replaced with op + 1
Mutant 654 in q.js: op replaced with op * 2
Mutant 655 in q.js: op replaced with op - 1
Mutant 656 in q.js: args replaced with null
Mutant 657 in q.js: args replaced with undefined
Mutant 658 in q.js: args replaced with "foo"
Mutant 659 in q.js: reject replaced with resolve
Mutant 660 in q.js: exception replaced with exception.message
Mutant 661 in q.js: exception replaced with new Error(exception)
Mutant 662 in q.js: exception replaced with exception.toString()
Mutant 663 in q.js: resolve replaced with !resolve
Mutant 664 in q.js: resolve replaced with resolve && false
Mutant 665 in q.js: resolve replaced with resolve || true
Mutant 666 in q.js: resolve replaced with deferred.reject
Mutant 667 in q.js: resolve replaced with deferred.notify
Mutant 668 in q.js: result replaced with null
Mutant 669 in q.js: result replaced with undefined
Mutant 670 in q.js: inspect replaced with inspect.state
Mutant 671 in q.js: inspect replaced with inspect.toString()
Mutant 672 in q.js: inspect replaced with inspect.valueOf()
Mutant 673 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 674 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 675 in q.js: inspected.state === "rejected" replaced with inspected.state === "settled"
Mutant 676 in q.js: inspect replaced with inspect.state
Mutant 677 in q.js: inspect replaced with inspect.value
Mutant 678 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 679 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "rejected"
Mutant 680 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 681 in q.js: fulfilled replaced with rejected
Mutant 682 in q.js: fulfilled replaced with undefined
Mutant 683 in q.js: fulfilled replaced with null
Mutant 684 in q.js: value replaced with null
Mutant 685 in q.js: value replaced with undefined
Mutant 686 in q.js: value replaced with 0
Mutant 687 in q.js: reject replaced with resolve
Mutant 688 in q.js: exception replaced with null
Mutant 689 in q.js: exception replaced with undefined
Mutant 690 in q.js: exception replaced with new Error("Some error message")
Mutant 691 in q.js: typeof rejected === "function" replaced with rejected !== undefined
Mutant 692 in q.js: typeof rejected === "function" replaced with typeof rejected !== "undefined"
Mutant 693 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 694 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self)
Mutant 695 in q.js: exception replaced with null
Mutant 696 in q.js: exception replaced with undefined
Mutant 697 in q.js: exception replaced with new Error("Different error message")
Mutant 698 in q.js: reject replaced with resolve
Mutant 699 in q.js: newException replaced with reject(exception)
Mutant 700 in q.js: reject replaced with undefined
Mutant 701 in q.js: exception replaced with null
Mutant 702 in q.js: exception replaced with undefined
Mutant 703 in q.js: exception replaced with new Error("Rejection reason")
Mutant 704 in q.js: value replaced with null
Mutant 705 in q.js: value replaced with undefined
Mutant 706 in q.js: value replaced with "foo"
Mutant 707 in q.js: done replaced with !done
Mutant 708 in q.js: done replaced with done === true
Mutant 709 in q.js: done replaced with done !== false
Mutant 710 in q.js: deferred.resolve replaced with deferred.reject
Mutant 711 in q.js: deferred.resolve replaced with deferred.notify
Mutant 712 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 713 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 714 in q.js: _fulfilled(value) replaced with _fulfilled(value, true)
Mutant 715 in q.js: value replaced with null
Mutant 716 in q.js: value replaced with undefined
Mutant 717 in q.js: value replaced with 0
Mutant 718 in q.js: done replaced with !done
Mutant 719 in q.js: done replaced with done && false
Mutant 720 in q.js: done replaced with done || true
Mutant 721 in q.js: deferred.resolve replaced with deferred.reject
Mutant 722 in q.js: deferred.resolve replaced with deferred.notify
Mutant 723 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 724 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 725 in q.js: _rejected(exception) replaced with _rejected(new Error("Test error"))
Mutant 726 in q.js: _rejected replaced with _progressed
Mutant 727 in q.js: _progressed replaced with _rejected
Mutant 728 in q.js: _progressed replaced with _fulfilled
Mutant 729 in q.js: value replaced with undefined
Mutant 730 in q.js: value replaced with null
Mutant 731 in q.js: value replaced with "value"
Mutant 732 in q.js: e replaced with e.message
Mutant 733 in q.js: e replaced with e.stack
Mutant 734 in q.js: e replaced with e.toString()
Mutant 735 in q.js: !threw replaced with threw
Mutant 736 in q.js: !threw replaced with threw === true
Mutant 737 in q.js: deferred.notify replaced with deferred.resolve
Mutant 738 in q.js: deferred.notify replaced with deferred.reject
Mutant 739 in q.js: deferred.notify replaced with deferred.progress
Mutant 740 in q.js: newValue replaced with newValue + 1
Mutant 741 in q.js: newValue replaced with newValue * 2
Mutant 742 in q.js: newValue replaced with newValue - 1
Mutant 743 in q.js: callback replaced with 1 + callback
Mutant 744 in q.js: callback replaced with callback + 1
Mutant 745 in q.js: callback replaced with callback.toString()
Mutant 746 in q.js: Q replaced with Q.fcall
Mutant 747 in q.js: Q replaced with Q.resolve
Mutant 748 in q.js: Q replaced with Q.reject
Mutant 749 in q.js: callback replaced with callback.fcall(value).thenResolve(value)
Mutant 750 in q.js: callback replaced with callback.then(value)
Mutant 751 in q.js: callback replaced with callback.resolve(value)
Mutant 752 in q.js: callback.fcall replaced with callback.fapply
Mutant 753 in q.js: callback.fcall replaced with callback.fbind
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fapply
not replacing callback.fcall with callback.fbind
not replacing callback.fcall with callback.fbind
Mutant 754 in q.js: value replaced with undefined
Mutant 755 in q.js: value replaced with null
Mutant 756 in q.js: value replaced with {}
Mutant 757 in q.js: value replaced with null
Mutant 758 in q.js: value replaced with undefined
Mutant 759 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 760 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, "extra argument")
Mutant 761 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, null)
Mutant 762 in q.js: value replaced with undefined
Mutant 763 in q.js: value replaced with Promise.reject()
Mutant 764 in q.js: fulfilled replaced with rejected
Mutant 765 in q.js: fulfilled replaced with undefined
Mutant 766 in q.js: fulfilled replaced with null
Mutant 767 in q.js: rejected replaced with fulfilled
Mutant 768 in q.js: rejected replaced with undefined
Mutant 769 in q.js: progressed replaced with null
Mutant 770 in q.js: progressed replaced with undefined
Mutant 771 in q.js: progressed replaced with false
Mutant 772 in q.js: this.then replaced with this.thenResolve
Mutant 773 in q.js: this.then replaced with this.thenReject
Mutant 774 in q.js: function () {
  return value;
} replaced with function () {
  return value + 1;
}
Mutant 775 in q.js: function () {
  return value;
} replaced with function () {
  return value * 2;
}
Mutant 776 in q.js: function () {
  return value;
} replaced with function () {
  return value - 1;
}
Mutant 777 in q.js: Q replaced with Q.reject
Mutant 778 in q.js: Q replaced with Q.resolve
Mutant 779 in q.js: Q replaced with Q.defer
Mutant 780 in q.js: promise replaced with null
Mutant 781 in q.js: promise replaced with undefined
Mutant 782 in q.js: promise replaced with 0
Mutant 783 in q.js: value replaced with null
Mutant 784 in q.js: value replaced with undefined
Mutant 785 in q.js: value replaced with "foo"
Mutant 786 in q.js: this.then replaced with this.then.catch
Mutant 787 in q.js: this.then replaced with this.then.finally
Mutant 788 in q.js: this.then replaced with this.then.then
Mutant 789 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 790 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 791 in q.js: function () {
  throw reason;
} replaced with function () {
  return Q.reject(reason);
}
Mutant 792 in q.js: promise replaced with null
Mutant 793 in q.js: promise replaced with undefined
Mutant 794 in q.js: promise replaced with Promise.reject()
Mutant 795 in q.js: reason replaced with null
Mutant 796 in q.js: reason replaced with undefined
Mutant 797 in q.js: reason replaced with {}
Mutant 798 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 799 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 800 in q.js: isPromise(value) replaced with isPending(value)
Mutant 801 in q.js: isPromise replaced with isFulfilled
Mutant 802 in q.js: isPromise replaced with isRejected
Mutant 803 in q.js: value replaced with null
Mutant 804 in q.js: value replaced with undefined
Mutant 805 in q.js: value replaced with 0
Mutant 806 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 807 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 808 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "fulfilled" && inspected.value === undefined
Mutant 809 in q.js: isObject replaced with isPromiseAlike
Mutant 810 in q.js: isObject replaced with isRejected
Mutant 811 in q.js: isObject replaced with isFulfilled
Mutant 812 in q.js: object replaced with object.a
Mutant 813 in q.js: object replaced with object[0]
Mutant 814 in q.js: object replaced with object.b
Mutant 815 in q.js: isPromise replaced with isPromiseAlike
Mutant 816 in q.js: isPromise replaced with isObject
Mutant 817 in q.js: isPromise replaced with isFulfilled
Mutant 818 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 819 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 820 in q.js: isPromise replaced with isPromiseAlike
Mutant 821 in q.js: isPromise replaced with !isPromise
Mutant 822 in q.js: isPromise replaced with isRejected
Mutant 823 in q.js: object replaced with object.then()
Mutant 824 in q.js: object replaced with object.catch()
Mutant 825 in q.js: object replaced with object.finally()
Mutant 826 in q.js: this.inspect replaced with this.inspect.state
Mutant 827 in q.js: this.inspect replaced with this.inspect.value
Mutant 828 in q.js: this.inspect replaced with this.inspect.reason
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
not replacing this.inspect with this.inspect.reason
Mutant 829 in q.js: isPromise replaced with !isPromise
Mutant 830 in q.js: isPromise replaced with isPromiseAlike
Mutant 831 in q.js: isPromise replaced with isFulfilled
Mutant 832 in q.js: object replaced with object.then()
Mutant 833 in q.js: object replaced with object.then(function () {})
Mutant 834 in q.js: object replaced with object.then(function () {
  return reason;
})
Mutant 835 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 836 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections.valueOf()
Mutant 837 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections.toString()
Mutant 838 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 839 in q.js: !trackUnhandledRejections replaced with typeof trackUnhandledRejections === "boolean"
Mutant 840 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 841 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) > -1
Mutant 842 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.some(p => p === promise)
Mutant 843 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reason)
Mutant 844 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 845 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, reason)
Mutant 846 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 847 in q.js: array_indexOf replaced with array_findIndex
Mutant 848 in q.js: array_indexOf replaced with array_findLastIndex
Mutant 849 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 850 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 851 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 852 in q.js: promise replaced with promise.then(function () {
  throw new Error("unhandled rejection");
})
Mutant 853 in q.js: promise replaced with promise.then(function () {
  return Q.reject(reason);
})
Mutant 854 in q.js: promise replaced with promise.then(function () {
  return Q.reject(new Error("unhandled rejection"));
})
Mutant 855 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 856 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, null)
Mutant 857 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "foo"
Mutant 858 in q.js: "unhandledRejection" replaced with "unhandledRejection" + 1
Mutant 859 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "bar"
Mutant 860 in q.js: reason replaced with reason.stack
Mutant 861 in q.js: reason replaced with reason.message
Mutant 862 in q.js: reason replaced with reason.name
Mutant 863 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 864 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.shift
Mutant 865 in q.js: promise replaced with promise.then(function () {
  throw new Error("rejected");
})
Mutant 866 in q.js: promise replaced with promise.then(function () {
  return "fulfilled";
})
Mutant 867 in q.js: promise replaced with promise.then(function () {
  return "rejected";
})
Mutant 868 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 869 in q.js: unhandledRejections.push replaced with unhandledRejections.shift
Mutant 870 in q.js: unhandledRejections.push replaced with unhandledRejections.unshift
Mutant 871 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack === "undefined"
Mutant 872 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 873 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined" && typeof reason.stack !== "undefined"
Mutant 874 in q.js: reason.stack replaced with reason.stack.toLowerCase()
Mutant 875 in q.js: reason.stack replaced with reason.stack.split("").reverse().join("")
Mutant 876 in q.js: reason.stack replaced with reason.stack.length
Mutant 877 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 878 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 879 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 880 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 881 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 882 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 883 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 884 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(), promise)
Mutant 885 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.splice(0, 1), promise)
Mutant 886 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.pop(), promise)
Mutant 887 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 888 in q.js: array_indexOf replaced with array_includes
Mutant 889 in q.js: array_indexOf replaced with array_findIndex
Mutant 890 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 891 in q.js: unhandledRejections replaced with unhandledRejections.concat()
Mutant 892 in q.js: unhandledRejections replaced with unhandledRejections.filter(function (rejection) {
  return rejection !== promise;
})
Mutant 893 in q.js: at !== -1 replaced with at == -1
Mutant 894 in q.js: at !== -1 replaced with at > -1
Mutant 895 in q.js: at !== -1 replaced with at >= 0
Mutant 896 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length, promise)
Mutant 897 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.indexOf(promise) !== -1)
Mutant 898 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.includes(promise))
Mutant 899 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 900 in q.js: array_indexOf replaced with array_includes
Mutant 901 in q.js: array_indexOf replaced with array_findIndex
Mutant 902 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 903 in q.js: reportedUnhandledRejections replaced with []
Mutant 904 in q.js: reportedUnhandledRejections replaced with null
Mutant 905 in q.js: atReport !== -1 replaced with reportedUnhandledRejections.length > 0
Mutant 906 in q.js: atReport !== -1 replaced with reportedUnhandledRejections.indexOf(promise) !== -1
Mutant 907 in q.js: atReport !== -1 replaced with reportedUnhandledRejections.length === 0
Mutant 908 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 909 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at])
Mutant 910 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at])
Mutant 911 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] = "buggy reason"
Mutant 912 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] = unhandledReasons[at] + "buggy reason"
Mutant 913 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] = null
Mutant 914 in q.js: promise replaced with promise.then(function () {
  throw new Error("Something went wrong");
})
Mutant 915 in q.js: promise replaced with promise.then(function () {
  return Q.reject("Something went wrong");
})
Mutant 916 in q.js: promise replaced with promise.then(function () {
  return Q.fulfill("Something went wrong");
})
Mutant 917 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 918 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, -1)
Mutant 919 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, reportedUnhandledRejections.length - 1)
Mutant 920 in q.js: atReport replaced with atReport + 1
Mutant 921 in q.js: atReport replaced with atReport - 1
Mutant 922 in q.js: atReport replaced with atReport * 2
Mutant 923 in q.js: 1 replaced with -1
Mutant 924 in q.js: 1 replaced with 0
Mutant 925 in q.js: 1 replaced with array.length
Mutant 926 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 927 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 928 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, unhandledRejections.length - 1)
Mutant 929 in q.js: at replaced with at + 1
Mutant 930 in q.js: at replaced with at - 1
Mutant 931 in q.js: at replaced with at + 2
Mutant 932 in q.js: 1 replaced with 0
Mutant 933 in q.js: 1 replaced with 2
Mutant 934 in q.js: 1 replaced with -1
Mutant 935 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 936 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 937 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 938 in q.js: at replaced with at + 1
Mutant 939 in q.js: at replaced with at - 1
Mutant 940 in q.js: at replaced with at + 2
Mutant 941 in q.js: 1 replaced with -1
Mutant 942 in q.js: 1 replaced with 0
Mutant 943 in q.js: 1 replaced with 10
Mutant 944 in q.js: rejected replaced with !rejected
Mutant 945 in q.js: rejected replaced with rejected && false
Mutant 946 in q.js: rejected replaced with rejected || true
Mutant 947 in q.js: this replaced with null
Mutant 948 in q.js: this replaced with undefined
Mutant 949 in q.js: this replaced with {}
Mutant 950 in q.js: reason replaced with null
Mutant 951 in q.js: reason replaced with undefined
Mutant 952 in q.js: reason replaced with "Error"
Mutant 953 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, null)
Mutant 954 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, undefined)
Mutant 955 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, {})
Mutant 956 in q.js: trackRejection replaced with untrackRejection
Mutant 957 in q.js: rejection replaced with null
Mutant 958 in q.js: rejection replaced with undefined
Mutant 959 in q.js: rejection replaced with rejection.reason
Mutant 960 in q.js: reason replaced with null
Mutant 961 in q.js: reason replaced with undefined
Mutant 962 in q.js: reason replaced with "some other reason"
Mutant 963 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 964 in q.js: name === null || name === void 0 replaced with name == null
Mutant 965 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 966 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 967 in q.js: value.apply(void 0, args) replaced with value.apply(undefined, args)
Mutant 968 in q.js: value.apply(void 0, args) replaced with value.apply(args, null)
Mutant 969 in q.js: value.apply replaced with value.call
Mutant 970 in q.js: value.apply replaced with value.bind
Mutant 971 in q.js: value.apply replaced with value.toString
Mutant 972 in q.js: void 0 replaced with null
Mutant 973 in q.js: void 0 replaced with undefined
Mutant 974 in q.js: void 0 replaced with 0
Mutant 975 in q.js: args replaced with args[0]
Mutant 976 in q.js: args replaced with args.slice(1)
Mutant 977 in q.js: args replaced with args.concat(["extra argument"])
Mutant 978 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice())
Mutant 979 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, [].concat(args))
Mutant 980 in q.js: value[name].apply replaced with value[name].call
Mutant 981 in q.js: value[name].apply replaced with value[name].bind
Mutant 982 in q.js: value replaced with value + 1
Mutant 983 in q.js: value replaced with value * 2
Mutant 984 in q.js: value replaced with value - 1
Mutant 985 in q.js: args replaced with args[0]
Mutant 986 in q.js: args replaced with args.slice(1)
Mutant 987 in q.js: args replaced with args.length
Mutant 988 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.slice())
Mutant 989 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.concat())
Mutant 990 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.filter())
Mutant 991 in q.js: value.apply replaced with value.call
Mutant 992 in q.js: value.apply replaced with value.bind
Mutant 993 in q.js: value.apply replaced with value.toString
Mutant 994 in q.js: thisp replaced with null
Mutant 995 in q.js: thisp replaced with undefined
Mutant 996 in q.js: thisp replaced with this
Mutant 997 in q.js: args replaced with args.slice()
Mutant 998 in q.js: args replaced with args.concat()
Mutant 999 in q.js: args replaced with args.map(function (x) {
  return x;
})
Mutant 1000 in q.js: object_keys replaced with object_values
Mutant 1001 in q.js: object_keys replaced with object_entries
Mutant 1002 in q.js: value replaced with null
Mutant 1003 in q.js: value replaced with undefined
Mutant 1004 in q.js: value replaced with {}
Mutant 1005 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(reason))
Mutant 1006 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject(reason))
Mutant 1007 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify(reason))
Mutant 1008 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1009 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1010 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1011 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1012 in q.js: deferred.reject replaced with deferred.notify
Mutant 1013 in q.js: deferred.reject replaced with deferred.cancel
Mutant 1014 in q.js: deferred.notify replaced with deferred.reject
Mutant 1015 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1016 in q.js: deferred.notify replaced with deferred.promise
Mutant 1017 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1018 in q.js: deferred.reject replaced with deferred.notify
Mutant 1019 in q.js: deferred.reject replaced with deferred.cancel
Mutant 1020 in q.js: exception replaced with undefined
Mutant 1021 in q.js: exception replaced with null
Mutant 1022 in q.js: exception replaced with new Error()
Mutant 1023 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[0])
Mutant 1024 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[1])
Mutant 1025 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[2])
Mutant 1026 in q.js: object replaced with null
Mutant 1027 in q.js: object replaced with undefined
Mutant 1028 in q.js: object replaced with {}
Mutant 1029 in q.js: op replaced with op + 1
Mutant 1030 in q.js: op replaced with op - 1
Mutant 1031 in q.js: op replaced with op * 2
Mutant 1032 in q.js: args replaced with args[0]
Mutant 1033 in q.js: args replaced with args.slice(1)
Mutant 1034 in q.js: args replaced with args.length
Mutant 1035 in q.js: Q replaced with Q.reject
Mutant 1036 in q.js: Q replaced with Q.resolve
Mutant 1037 in q.js: Q replaced with Q.defer
Mutant 1038 in q.js: object replaced with null
Mutant 1039 in q.js: object replaced with undefined
Mutant 1040 in q.js: object replaced with {}
Mutant 1041 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1042 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, rejected, null)
Mutant 1043 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled, undefined)
Mutant 1044 in q.js: value replaced with 0
Mutant 1045 in q.js: fulfilled replaced with rejected
Mutant 1046 in q.js: fulfilled replaced with undefined
Mutant 1047 in q.js: fulfilled replaced with null
Mutant 1048 in q.js: rejected replaced with undefined
Mutant 1049 in q.js: rejected replaced with null
Mutant 1050 in q.js: rejected replaced with "error"
Mutant 1051 in q.js: this.all replaced with this.then
Mutant 1052 in q.js: this.all replaced with this.catch
Mutant 1053 in q.js: this.all replaced with this.finally
not replacing this.all with this.then
not replacing this.all with this.then
not replacing this.all with this.catch
not replacing this.all with this.catch
not replacing this.all with this.finally
not replacing this.all with this.finally
Mutant 1054 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1055 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 1056 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(array.length)
Mutant 1057 in q.js: fulfilled.apply replaced with rejected.apply
Mutant 1058 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 1059 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 1060 in q.js: void 0 replaced with null
Mutant 1061 in q.js: void 0 replaced with undefined
Mutant 1062 in q.js: void 0 replaced with 0
Mutant 1063 in q.js: array replaced with array.slice()
Mutant 1064 in q.js: array replaced with array.concat()
Mutant 1065 in q.js: array replaced with array.map(function (x) {
  return x;
})
Mutant 1066 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === "undefined"
Mutant 1067 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1068 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "undefined" && "undefined"
Mutant 1069 in q.js: arg replaced with arg + 1
Mutant 1070 in q.js: arg replaced with arg * 2
Mutant 1071 in q.js: arg replaced with arg - 1
Mutant 1072 in q.js: reject replaced with resolve
Mutant 1073 in q.js: reject replaced with deferred.reject
Mutant 1074 in q.js: exception replaced with exception.message
Mutant 1075 in q.js: exception replaced with exception.stack
Mutant 1076 in q.js: exception replaced with exception.name
Mutant 1077 in q.js: result.done replaced with result.value
Mutant 1078 in q.js: result.done replaced with result.rejected
Mutant 1079 in q.js: result.done replaced with result.isFulfilled
Mutant 1080 in q.js: result.value replaced with result.value + 1
Mutant 1081 in q.js: result.value replaced with result.value * 2
Mutant 1082 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1083 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, errback, result.value)
Mutant 1084 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, errback, result.value, result.value)
Mutant 1085 in q.js: result.value replaced with result.value + 1
Mutant 1086 in q.js: result.value replaced with result.value * 2
Mutant 1087 in q.js: result.value replaced with result.value - 1
Mutant 1088 in q.js: callback replaced with reject
Mutant 1089 in q.js: callback replaced with undefined
Mutant 1090 in q.js: errback replaced with undefined
Mutant 1091 in q.js: errback replaced with null
Mutant 1092 in q.js: errback replaced with function () {}
Mutant 1093 in q.js: arg replaced with arg + 1
Mutant 1094 in q.js: arg replaced with arg * 2
Mutant 1095 in q.js: arg replaced with arg - 1
Mutant 1096 in q.js: isStopIteration(exception) replaced with isStopIteration(exception) && false
Mutant 1097 in q.js: isStopIteration(exception) replaced with isStopIteration(exception) || true
Mutant 1098 in q.js: isStopIteration(exception) replaced with isStopIteration(exception) ^ true
Mutant 1099 in q.js: isStopIteration replaced with isStopIteration = false
Mutant 1100 in q.js: isStopIteration replaced with isStopIteration = true
Mutant 1101 in q.js: isStopIteration replaced with isStopIteration = !isStopIteration
Mutant 1102 in q.js: exception replaced with exception.value
Mutant 1103 in q.js: exception replaced with exception.message
Mutant 1104 in q.js: exception replaced with exception.name
Mutant 1105 in q.js: exception.value replaced with exception
Mutant 1106 in q.js: exception.value replaced with exception.message
Mutant 1107 in q.js: exception.value replaced with exception.stack
Mutant 1108 in q.js: reject replaced with resolve
Mutant 1109 in q.js: exception replaced with exception.message
Mutant 1110 in q.js: exception replaced with exception.stack
Mutant 1111 in q.js: exception replaced with exception.name
Mutant 1112 in q.js: when(result, callback, errback) replaced with when(result, errback, callback)
Mutant 1113 in q.js: when(result, callback, errback) replaced with when(result, callback, errback, result)
Mutant 1114 in q.js: when replaced with Q.reject
Mutant 1115 in q.js: when replaced with Q.resolve
Mutant 1116 in q.js: when replaced with Q.defer
Mutant 1117 in q.js: result replaced with result + 1
Mutant 1118 in q.js: result replaced with result * 2
Mutant 1119 in q.js: result replaced with result - 1
Mutant 1120 in q.js: callback replaced with errback
Mutant 1121 in q.js: callback replaced with reject
Mutant 1122 in q.js: callback replaced with resolve
Mutant 1123 in q.js: errback replaced with reject
Mutant 1124 in q.js: errback replaced with resolve
Mutant 1125 in q.js: errback replaced with function (error) {
  return reject(error);
}
Mutant 1126 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1127 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1128 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1129 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1130 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1131 in q.js: makeGenerator.apply replaced with makeGenerator.toString
Mutant 1132 in q.js: this replaced with null
Mutant 1133 in q.js: this replaced with undefined
Mutant 1134 in q.js: this replaced with {}
Mutant 1135 in q.js: arguments replaced with null
Mutant 1136 in q.js: arguments replaced with undefined
Mutant 1137 in q.js: arguments replaced with []
Mutant 1138 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1139 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 1140 in q.js: continuer replaced with continuer.bind(null, "next")
Mutant 1141 in q.js: continuer replaced with continuer.bind(undefined, "next")
Mutant 1142 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1143 in q.js: "next" replaced with "send"
Mutant 1144 in q.js: "next" replaced with "throw"
Mutant 1145 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(null, "throw"))
Mutant 1146 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(undefined, "throw"))
Mutant 1147 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(function () {}, "throw"))
Mutant 1148 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1149 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1150 in q.js: continuer replaced with continuer.bind(undefined, "throw")
Mutant 1151 in q.js: "throw" replaced with "next"
Mutant 1152 in q.js: "throw" replaced with "return"
Mutant 1153 in q.js: callback replaced with errback
Mutant 1154 in q.js: callback replaced with null
Mutant 1155 in q.js: callback replaced with undefined
Mutant 1156 in q.js: Q.done replaced with Q.fail
Mutant 1157 in q.js: Q.done replaced with Q.reject
Mutant 1158 in q.js: Q.done replaced with Q.resolve
Mutant 1159 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1160 in q.js: makeGenerator replaced with makeGenerator.call(null)
Mutant 1161 in q.js: makeGenerator replaced with makeGenerator.apply(this, arguments)
Mutant 1162 in q.js: all replaced with none
Mutant 1163 in q.js: all replaced with some
Mutant 1164 in q.js: all replaced with every
Mutant 1165 in q.js: arguments replaced with [1, 2, 3]
Mutant 1166 in q.js: arguments replaced with null
Mutant 1167 in q.js: arguments replaced with undefined
Mutant 1168 in q.js: callback.apply(self, args) replaced with callback.apply(self, args, null)
Mutant 1169 in q.js: callback.apply(self, args) replaced with callback.apply(args, self)
Mutant 1170 in q.js: callback.apply(self, args) replaced with callback.apply(self, args, undefined)
Mutant 1171 in q.js: callback.apply replaced with callback.call
Mutant 1172 in q.js: callback.apply replaced with callback.bind
Mutant 1173 in q.js: self replaced with this
Mutant 1174 in q.js: self replaced with null
Mutant 1175 in q.js: self replaced with undefined
Mutant 1176 in q.js: args replaced with args[0]
Mutant 1177 in q.js: args replaced with args.slice(1)
Mutant 1178 in q.js: args replaced with args.concat(args[0])
Mutant 1179 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice(1))
Mutant 1180 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.concat(1))
Mutant 1181 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.reverse())
Mutant 1182 in q.js: Q replaced with Q.reject
Mutant 1183 in q.js: Q replaced with Q.resolve
Mutant 1184 in q.js: Q replaced with Q.all
Mutant 1185 in q.js: object replaced with null
Mutant 1186 in q.js: object replaced with undefined
Mutant 1187 in q.js: object replaced with object.foo
Mutant 1188 in q.js: op replaced with op + 1
Mutant 1189 in q.js: op replaced with op - 1
Mutant 1190 in q.js: op replaced with op * 2
Mutant 1191 in q.js: args replaced with null
Mutant 1192 in q.js: args replaced with undefined
Mutant 1193 in q.js: args replaced with []
Mutant 1194 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1195 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.slice(1))
Mutant 1196 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.concat(args))
Mutant 1197 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1198 in q.js: self.promiseDispatch replaced with deferred.resolve
Mutant 1199 in q.js: self.promiseDispatch replaced with deferred.notify
Mutant 1200 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1201 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1202 in q.js: deferred.resolve replaced with undefined
Mutant 1203 in q.js: op replaced with op + 1
Mutant 1204 in q.js: op replaced with op - 1
Mutant 1205 in q.js: op replaced with op * 2
Mutant 1206 in q.js: args replaced with null
Mutant 1207 in q.js: args replaced with undefined
Mutant 1208 in q.js: args replaced with []
Mutant 1209 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1210 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key, []])
Mutant 1211 in q.js: Q replaced with Q.reject
Mutant 1212 in q.js: Q replaced with Q.resolve
Mutant 1213 in q.js: Q replaced with Q.all
Mutant 1214 in q.js: object replaced with null
Mutant 1215 in q.js: object replaced with {}
Mutant 1216 in q.js: "get" replaced with "set"
Mutant 1217 in q.js: "get" replaced with "post"
Mutant 1218 in q.js: [key] replaced with [key + 1]
Mutant 1219 in q.js: [key] replaced with [key - 1]
Mutant 1220 in q.js: [key] replaced with [key * 2]
Mutant 1221 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1222 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key, value])
Mutant 1223 in q.js: "get" replaced with "set"
Mutant 1224 in q.js: "get" replaced with "post"
Mutant 1225 in q.js: [key] replaced with [key + 1]
Mutant 1226 in q.js: [key] replaced with [key - 1]
Mutant 1227 in q.js: [key] replaced with ["key"]
Mutant 1228 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1229 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, key])
Mutant 1230 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, value])
Mutant 1231 in q.js: object replaced with null
Mutant 1232 in q.js: object replaced with undefined
Mutant 1233 in q.js: object replaced with "foo"
Mutant 1234 in q.js: "set" replaced with "get"
Mutant 1235 in q.js: "set" replaced with "post"
Mutant 1236 in q.js: [key, value] replaced with [value, key]
Mutant 1237 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1238 in q.js: [key, value] replaced with [key, "new value"]
Mutant 1239 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1240 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, key])
Mutant 1241 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value])
Mutant 1242 in q.js: "set" replaced with "post"
Mutant 1243 in q.js: "set" replaced with "apply"
Mutant 1244 in q.js: [key, value] replaced with [value, key]
Mutant 1245 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1246 in q.js: [key, value] replaced with [key, value * 2]
Mutant 1247 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1248 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1249 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, ""])
Mutant 1250 in q.js: Q replaced with Q.reject
Mutant 1251 in q.js: Q replaced with Q.defer
Mutant 1252 in q.js: Q replaced with Q.when
Mutant 1253 in q.js: object replaced with {}
Mutant 1254 in q.js: [key] replaced with [key, value]
Mutant 1255 in q.js: [key] replaced with [key, "value"]
Mutant 1256 in q.js: [key] replaced with [key, undefined]
Mutant 1257 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1258 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, null])
Mutant 1259 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, ""])
Mutant 1260 in q.js: [key] replaced with [key, key]
Mutant 1261 in q.js: [key] replaced with [key, null]
Mutant 1262 in q.js: [key] replaced with [key, undefined]
Mutant 1263 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.slice(1)])
Mutant 1264 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.concat(args)])
Mutant 1265 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.reverse()])
Mutant 1266 in q.js: Q replaced with Q.reject
Mutant 1267 in q.js: Q replaced with Q.resolve
Mutant 1268 in q.js: Q replaced with Q.defer
Mutant 1269 in q.js: object replaced with null
Mutant 1270 in q.js: object replaced with undefined
Mutant 1271 in q.js: object replaced with {}
Mutant 1272 in q.js: "post" replaced with "get"
Mutant 1273 in q.js: "post" replaced with "set"
Mutant 1274 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1275 in q.js: [name, args] replaced with [name, args.concat(args)]
Mutant 1276 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1277 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1278 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.reverse()])
Mutant 1279 in q.js: "post" replaced with "put"
Mutant 1280 in q.js: "post" replaced with "patch"
Mutant 1281 in q.js: [name, args] replaced with [name, args, 1]
Mutant 1282 in q.js: [name, args] replaced with [name, args.slice()]
Mutant 1283 in q.js: [name, args] replaced with [name, args.concat()]
Mutant 1284 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1285 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)])
Mutant 1286 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1287 in q.js: Q replaced with Q.reject
Mutant 1288 in q.js: Q replaced with Q.resolve
Mutant 1289 in q.js: Q replaced with Q.delay
Mutant 1290 in q.js: object replaced with null
Mutant 1291 in q.js: object replaced with undefined
Mutant 1292 in q.js: object replaced with "foo"
Mutant 1293 in q.js: "post" replaced with "put"
Mutant 1294 in q.js: "post" replaced with "get"
Mutant 1295 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1296 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1297 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 2, 1)]
Mutant 1298 in q.js: array_slice(arguments, 2) replaced with array_slice(args, 2)
Mutant 1299 in q.js: array_slice(arguments, 2) replaced with array_slice([], 2)
Mutant 1300 in q.js: arguments replaced with null
Mutant 1301 in q.js: arguments replaced with undefined
Mutant 1302 in q.js: arguments replaced with []
Mutant 1303 in q.js: 2 replaced with 0
Mutant 1304 in q.js: 2 replaced with -1
Mutant 1305 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1306 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1307 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 0, 1)])
Mutant 1308 in q.js: "post" replaced with "put"
Mutant 1309 in q.js: "post" replaced with "get"
Mutant 1310 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1311 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 0, 1)]
Mutant 1312 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, 2)]
Mutant 1313 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1314 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1315 in q.js: arguments replaced with null
Mutant 1316 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1317 in q.js: 1 replaced with -1
Mutant 1318 in q.js: 1 replaced with arguments.length - 1
Mutant 1319 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1320 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, [args]])
Mutant 1321 in q.js: object replaced with null
Mutant 1322 in q.js: object replaced with undefined
Mutant 1323 in q.js: object replaced with Q.reject
Mutant 1324 in q.js: "apply" replaced with "call"
Mutant 1325 in q.js: "apply" replaced with "bind"
Mutant 1326 in q.js: "apply" replaced with "eval"
Mutant 1327 in q.js: [void 0, args] replaced with [void 1, args]
Mutant 1328 in q.js: [void 0, args] replaced with [args, void 0]
Mutant 1329 in q.js: [void 0, args] replaced with [args, void 1]
Mutant 1330 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1331 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [undefined, args])
Mutant 1332 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args])
Mutant 1333 in q.js: "apply" replaced with "call"
Mutant 1334 in q.js: "apply" replaced with "bind"
Mutant 1335 in q.js: "apply" replaced with "apply" + "call"
Mutant 1336 in q.js: [void 0, args] replaced with [void 0, args, 1]
Mutant 1337 in q.js: [void 0, args] replaced with [void 0, args, "foo"]
Mutant 1338 in q.js: [void 0, args] replaced with [void 0, args, null]
Mutant 1339 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [null, array_slice(arguments, 1)])
Mutant 1340 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1341 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)])
Mutant 1342 in q.js: Q replaced with Q.reject
Mutant 1343 in q.js: Q replaced with Q.resolve
Mutant 1344 in q.js: Q replaced with Q.defer
Mutant 1345 in q.js: object replaced with undefined
Mutant 1346 in q.js: object replaced with "foo"
Mutant 1347 in q.js: "apply" replaced with "call"
Mutant 1348 in q.js: "apply" replaced with "bind"
Mutant 1349 in q.js: "apply" replaced with "concat"
Mutant 1350 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1351 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 0, 1)]
Mutant 1352 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, 2)]
Mutant 1353 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length + 1)
Mutant 1354 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1355 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1356 in q.js: 1 replaced with 1 + 1
Mutant 1357 in q.js: 1 replaced with 3
Mutant 1358 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, array_slice(arguments)])
Mutant 1359 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1360 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1361 in q.js: "apply" replaced with "call"
Mutant 1362 in q.js: "apply" replaced with "bind"
Mutant 1363 in q.js: "apply" replaced with "post"
Mutant 1364 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1365 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1366 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 3)]
Mutant 1367 in q.js: arguments replaced with array_slice(arguments, 1, 2)
Mutant 1368 in q.js: arguments replaced with array_slice(arguments, 1, arguments.length - 1)
Mutant 1369 in q.js: object replaced with null
Mutant 1370 in q.js: object replaced with undefined
Mutant 1371 in q.js: object replaced with {}
Mutant 1372 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1373 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 1374 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[0])
Mutant 1375 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1376 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1377 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1378 in q.js: 1 replaced with 0
Mutant 1379 in q.js: 1 replaced with -1
Mutant 1380 in q.js: 1 replaced with arguments.length - 1
Mutant 1381 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1382 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1383 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1384 in q.js: arguments replaced with null
Mutant 1385 in q.js: arguments replaced with undefined
Mutant 1386 in q.js: arguments replaced with []
Mutant 1387 in q.js: arguments replaced with args
Mutant 1388 in q.js: arguments replaced with arguments.slice(1)
Mutant 1389 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1390 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1391 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1392 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1, 2)
Mutant 1393 in q.js: arguments replaced with null
Mutant 1394 in q.js: arguments replaced with undefined
Mutant 1395 in q.js: arguments replaced with []
Mutant 1396 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1, 2, 3])
Mutant 1397 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", null)
Mutant 1398 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1399 in q.js: Q replaced with Q.reject
Mutant 1400 in q.js: Q replaced with Q.resolve
Mutant 1401 in q.js: Q replaced with Q.defer
Mutant 1402 in q.js: object replaced with object.foo
Mutant 1403 in q.js: object replaced with object.bar
Mutant 1404 in q.js: object replaced with object.baz
Mutant 1405 in q.js: "keys" replaced with "values"
Mutant 1406 in q.js: "keys" replaced with "length"
Mutant 1407 in q.js: "keys" replaced with "join"
Mutant 1408 in q.js: [] replaced with [1]
Mutant 1409 in q.js: [] replaced with [undefined]
Mutant 1410 in q.js: [] replaced with [null]
Mutant 1411 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1412 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", [])
Mutant 1413 in q.js: this.dispatch("keys", []) replaced with this.dispatch("toString", [])
Mutant 1414 in q.js: "keys" replaced with "values"
Mutant 1415 in q.js: "keys" replaced with "length"
Mutant 1416 in q.js: "keys" replaced with "toString"
Mutant 1417 in q.js: [] replaced with [1]
Mutant 1418 in q.js: [] replaced with [undefined]
Mutant 1419 in q.js: [] replaced with [null]
Mutant 1420 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1421 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1422 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "fulfilled" && promise.inspect().value === undefined
Mutant 1423 in q.js: promise replaced with promise.then(function () {
  return null;
})
Mutant 1424 in q.js: promise replaced with promise.then(function () {
  throw new Error();
})
Mutant 1425 in q.js: promise replaced with promise.then(function () {
  return Q.reject(new Error());
})
Mutant 1426 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1427 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1428 in q.js: --pendingCount === 0 replaced with pendingCount === 0 && promises.length === 0
Mutant 1429 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1430 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1431 in q.js: promises replaced with promises.slice(1)
Mutant 1432 in q.js: promises replaced with promises.concat([Q.reject()])
Mutant 1433 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.inspect().state === "rejected";
})
Mutant 1434 in q.js: deferred.notify replaced with deferred.reject
Mutant 1435 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1436 in q.js: deferred.notify replaced with deferred.progress
Mutant 1437 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + 1,
  value: progress
}
Mutant 1438 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index - 1,
  value: progress
}
Mutant 1439 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index * 2,
  value: progress
}
Mutant 1440 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1441 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1442 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1443 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1444 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1445 in q.js: deferred.resolve replaced with undefined
Mutant 1446 in q.js: promises replaced with promises.slice(1)
Mutant 1447 in q.js: promises replaced with promises.concat([])
Mutant 1448 in q.js: promises replaced with promises.filter(function () {
  return true;
})
Mutant 1449 in q.js: all replaced with any
Mutant 1450 in q.js: all replaced with none
Mutant 1451 in q.js: all replaced with race
Mutant 1452 in q.js: this replaced with null
Mutant 1453 in q.js: this replaced with undefined
Mutant 1454 in q.js: this replaced with []
Mutant 1455 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1456 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1457 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1458 in q.js: Q.resolve replaced with Q.reject
Mutant 1459 in q.js: Q.resolve replaced with Q.defer
Mutant 1460 in q.js: Q.resolve replaced with Q.when
Mutant 1461 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1462 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onRejected, onFulfilled, onProgress))
Mutant 1463 in q.js: promise replaced with promise.then(onFulfilled, onRejected)
Mutant 1464 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected)
Mutant 1465 in q.js: onFulfilled replaced with onRejected
Mutant 1466 in q.js: onFulfilled replaced with onProgress
Mutant 1467 in q.js: onFulfilled replaced with noop
Mutant 1468 in q.js: onRejected replaced with onFulfilled
Mutant 1469 in q.js: onRejected replaced with onProgress
Mutant 1470 in q.js: onRejected replaced with undefined
Mutant 1471 in q.js: onProgress replaced with onRejected
Mutant 1472 in q.js: onProgress replaced with onFulfilled
Mutant 1473 in q.js: onProgress replaced with noop
Mutant 1474 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1475 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1476 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1477 in q.js: result replaced with null
Mutant 1478 in q.js: result replaced with undefined
Mutant 1479 in q.js: result replaced with "foo"
Mutant 1480 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1481 in q.js: pendingCount === 0 replaced with pendingCount < promises.length
Mutant 1482 in q.js: pendingCount === 0 replaced with promises[index].state === "rejected"
Mutant 1483 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1484 in q.js: deferred.reject replaced with deferred.notify
Mutant 1485 in q.js: deferred.reject replaced with deferred.inspect
Mutant 1486 in q.js: rejection replaced with rejection.message
Mutant 1487 in q.js: rejection replaced with deferred.reject(rejection)
Mutant 1488 in q.js: rejection replaced with deferred.resolve(rejection)
Mutant 1489 in q.js: any replaced with all
Mutant 1490 in q.js: any replaced with none
Mutant 1491 in q.js: any replaced with some
Mutant 1492 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allSettled, "allSettled", "allResolved")
Mutant 1493 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allSettled", "allResolved")
Mutant 1494 in q.js: allResolved replaced with any
Mutant 1495 in q.js: allResolved replaced with allSettled
Mutant 1496 in q.js: "allResolved" replaced with "allRejected"
Mutant 1497 in q.js: "allResolved" replaced with "any"
Mutant 1498 in q.js: "allResolved" replaced with "none"
Mutant 1499 in q.js: "allSettled" replaced with "allResolved"
Mutant 1500 in q.js: "allSettled" replaced with "any"
Mutant 1501 in q.js: "allSettled" replaced with "all"
Mutant 1502 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1503 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.defer)
Mutant 1504 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.when)
Mutant 1505 in q.js: array_map replaced with array_filter
Mutant 1506 in q.js: array_map replaced with array_reduce
Mutant 1507 in q.js: array_map replaced with array_forEach
Mutant 1508 in q.js: promises replaced with promises.slice(0, promises.length - 1)
Mutant 1509 in q.js: promises replaced with promises.slice(1)
Mutant 1510 in q.js: promises replaced with promises.reverse()
Mutant 1511 in q.js: Q replaced with Q.reject
Mutant 1512 in q.js: Q replaced with Q.defer
Mutant 1513 in q.js: Q replaced with Q.when
Mutant 1514 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1515 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop))
Mutant 1516 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop).then(noop, noop))
Mutant 1517 in q.js: promise replaced with promise.then(function (value) {
  return value;
})
Mutant 1518 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 1519 in q.js: allResolved replaced with allSettled
Mutant 1520 in q.js: allResolved replaced with any
Mutant 1521 in q.js: this replaced with null
Mutant 1522 in q.js: this replaced with undefined
Mutant 1523 in q.js: this replaced with 0
Mutant 1524 in q.js: promises replaced with promises.slice(1)
Mutant 1525 in q.js: promises replaced with promises.reverse()
Mutant 1526 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.isFulfilled();
})
Mutant 1527 in q.js: promise.then(regardless, regardless) replaced with promise.then(regardless, regardless, regardless)
Mutant 1528 in q.js: promise.then(regardless, regardless) replaced with promise.then(noop, noop, noop)
Mutant 1529 in q.js: regardless replaced with promise.inspect()
Mutant 1530 in q.js: regardless replaced with promise.then(noop)
Mutant 1531 in q.js: regardless replaced with promise.then(function () {
  return promise;
})
Mutant 1532 in q.js: regardless replaced with regardless()
Mutant 1533 in q.js: regardless replaced with promise.regardless()
Mutant 1534 in q.js: regardless replaced with Q.regardless()
Mutant 1535 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1536 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(undefined, rejected)
Mutant 1537 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, null)
Mutant 1538 in q.js: object replaced with 0
Mutant 1539 in q.js: void 0 replaced with null
Mutant 1540 in q.js: void 0 replaced with undefined
Mutant 1541 in q.js: rejected replaced with rejected.then(function () {
  throw new Error("rejected");
})
Mutant 1542 in q.js: rejected replaced with rejected.then(function () {
  throw new Error("rejected");
}, function () {
  throw new Error("rejected");
})
Mutant 1543 in q.js: rejected replaced with rejected.then(function () {
  throw new Error("rejected");
}, function () {
  throw new Error("rejected");
}, function () {
  throw new Error("rejected");
})
Mutant 1544 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1545 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1546 in q.js: this.then(void 0, rejected) replaced with this.then(rejected, null)
Mutant 1547 in q.js: void 0 replaced with null
Mutant 1548 in q.js: void 0 replaced with undefined
Mutant 1549 in q.js: rejected replaced with resolved
Mutant 1550 in q.js: rejected replaced with deferred.reject(err)
Mutant 1551 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, progressed, void 0)
Mutant 1552 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(progressed, void 0, void 0)
Mutant 1553 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, void 0, void 0)
Mutant 1554 in q.js: object replaced with null
Mutant 1555 in q.js: object replaced with undefined
Mutant 1556 in q.js: void 0 replaced with null
Mutant 1557 in q.js: void 0 replaced with undefined
Mutant 1558 in q.js: void 0 replaced with NaN
Mutant 1559 in q.js: void 0 replaced with null
Mutant 1560 in q.js: void 0 replaced with undefined
Mutant 1561 in q.js: void 0 replaced with () => {}
Mutant 1562 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1563 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1564 in q.js: void 0 replaced with null
Mutant 1565 in q.js: void 0 replaced with undefined
Mutant 1566 in q.js: void 0 replaced with () => {}
Mutant 1567 in q.js: void 0 replaced with null
Mutant 1568 in q.js: void 0 replaced with undefined
Mutant 1569 in q.js: void 0 replaced with function () {}
Mutant 1570 in q.js: progressed replaced with undefined
Mutant 1571 in q.js: progressed replaced with null
Mutant 1572 in q.js: progressed replaced with () => {}
Mutant 1573 in q.js: Q replaced with Q.reject
Mutant 1574 in q.js: Q replaced with Q.defer
Mutant 1575 in q.js: Q replaced with Q.fcall
Mutant 1576 in q.js: object replaced with null
Mutant 1577 in q.js: object replaced with undefined
Mutant 1578 in q.js: object replaced with Q.reject(new Error("Test error"))
Mutant 1579 in q.js: callback replaced with callback.bind(null)
Mutant 1580 in q.js: callback replaced with callback.apply(null)
Mutant 1581 in q.js: callback replaced with callback.call(null)
Mutant 1582 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply === "function"
Mutant 1583 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply !== "function"
Mutant 1584 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply === "undefined"
Mutant 1585 in q.js: Q replaced with Q.reject
Mutant 1586 in q.js: Q replaced with Q.resolve
Mutant 1587 in q.js: Q replaced with Q.defer
Mutant 1588 in q.js: callback replaced with callback.fcall()
Mutant 1589 in q.js: callback replaced with callback.apply()
Mutant 1590 in q.js: callback replaced with callback.bind()
Mutant 1591 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1592 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, 1)
Mutant 1593 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, null)
Mutant 1594 in q.js: Q replaced with Q.reject
Mutant 1595 in q.js: Q replaced with Q.defer
Mutant 1596 in q.js: Q replaced with Q.fcall
Mutant 1597 in q.js: object replaced with undefined
Mutant 1598 in q.js: object replaced with "foo"
Mutant 1599 in q.js: fulfilled replaced with rejected
Mutant 1600 in q.js: fulfilled replaced with progressed
Mutant 1601 in q.js: fulfilled replaced with null
Mutant 1602 in q.js: rejected replaced with fulfilled
Mutant 1603 in q.js: rejected replaced with void 0
Mutant 1604 in q.js: progress replaced with null
Mutant 1605 in q.js: progress replaced with undefined
Mutant 1606 in q.js: progress replaced with function () {}
Mutant 1607 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.then())
Mutant 1608 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.catch())
Mutant 1609 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.finally())
Mutant 1610 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected)
Mutant 1611 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled)
Mutant 1612 in q.js: fulfilled replaced with rejected
Mutant 1613 in q.js: fulfilled replaced with undefined
Mutant 1614 in q.js: fulfilled replaced with null
Mutant 1615 in q.js: rejected replaced with fulfilled
Mutant 1616 in q.js: rejected replaced with null
Mutant 1617 in q.js: rejected replaced with undefined
Mutant 1618 in q.js: progress replaced with void 0
Mutant 1619 in q.js: progress replaced with null
Mutant 1620 in q.js: progress replaced with undefined
Mutant 1621 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1622 in q.js: onUnhandledError replaced with onUnhandledError.call(null)
Mutant 1623 in q.js: onUnhandledError replaced with onUnhandledError.apply(null)
Mutant 1624 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1625 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1626 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, null)
Mutant 1627 in q.js: void 0 replaced with null
Mutant 1628 in q.js: void 0 replaced with undefined
Mutant 1629 in q.js: void 0 replaced with NaN
Mutant 1630 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1631 in q.js: onUnhandledError replaced with onUnhandledError(new Error())
Mutant 1632 in q.js: onUnhandledError replaced with onUnhandledError(null)
Mutant 1633 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, new Error("Timeout"))
Mutant 1634 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, error.message)
Mutant 1635 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, error.stack)
Mutant 1636 in q.js: object replaced with null
Mutant 1637 in q.js: object replaced with undefined
Mutant 1638 in q.js: object replaced with Q.reject("error")
Mutant 1639 in q.js: ms replaced with 0
Mutant 1640 in q.js: ms replaced with -1
Mutant 1641 in q.js: ms replaced with NaN
Mutant 1642 in q.js: error replaced with null
Mutant 1643 in q.js: error replaced with undefined
Mutant 1644 in q.js: error replaced with new Error()
Mutant 1645 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1646 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1647 in q.js: !error || "string" === typeof error replaced with error || "string" === typeof error
Mutant 1648 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1649 in q.js: deferred.reject replaced with null
Mutant 1650 in q.js: deferred.reject replaced with undefined
Mutant 1651 in q.js: error replaced with null
Mutant 1652 in q.js: error replaced with undefined
Mutant 1653 in q.js: error replaced with new Error("Different error message")
Mutant 1654 in q.js: clearTimeout replaced with clearInterval
Mutant 1655 in q.js: timeoutId replaced with null
Mutant 1656 in q.js: timeoutId replaced with undefined
Mutant 1657 in q.js: timeoutId replaced with 0
Mutant 1658 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1659 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1660 in q.js: deferred.resolve replaced with undefined
Mutant 1661 in q.js: value replaced with null
Mutant 1662 in q.js: value replaced with undefined
Mutant 1663 in q.js: clearTimeout replaced with clearInterval
Mutant 1664 in q.js: timeoutId replaced with null
Mutant 1665 in q.js: timeoutId replaced with undefined
Mutant 1666 in q.js: timeoutId replaced with 0
Mutant 1667 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1668 in q.js: deferred.reject replaced with Q.reject
Mutant 1669 in q.js: exception replaced with null
Mutant 1670 in q.js: exception replaced with undefined
Mutant 1671 in q.js: exception replaced with "error"
Mutant 1672 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1673 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1674 in q.js: timeout === void 0 replaced with timeout === undefined
Mutant 1675 in q.js: object replaced with null
Mutant 1676 in q.js: object replaced with undefined
Mutant 1677 in q.js: object replaced with {}
Mutant 1678 in q.js: timeout replaced with 0
Mutant 1679 in q.js: timeout replaced with -1
Mutant 1680 in q.js: timeout replaced with null
Mutant 1681 in q.js: defer replaced with defer.promise
Mutant 1682 in q.js: defer replaced with defer.resolve
Mutant 1683 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1684 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1685 in q.js: value replaced with null
Mutant 1686 in q.js: value replaced with undefined
Mutant 1687 in q.js: value replaced with 0
Mutant 1688 in q.js: callback replaced with null
Mutant 1689 in q.js: callback replaced with undefined
Mutant 1690 in q.js: callback replaced with function () {}
Mutant 1691 in q.js: args replaced with null
Mutant 1692 in q.js: args replaced with undefined
Mutant 1693 in q.js: args replaced with []
Mutant 1694 in q.js: args replaced with null
Mutant 1695 in q.js: args replaced with undefined
Mutant 1696 in q.js: args replaced with []
Mutant 1697 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1698 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1699 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1700 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1701 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1702 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (error, result) {})
Mutant 1703 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1704 in q.js: nodeArgs replaced with nodeArgs.concat([1])
Mutant 1705 in q.js: nodeArgs replaced with nodeArgs.filter(function (arg) {
  return arg !== 1;
})
Mutant 1706 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1707 in q.js: deferred.reject replaced with deferred.notify(error)
Mutant 1708 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1709 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1710 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length - 1)
Mutant 1711 in q.js: arguments replaced with null
Mutant 1712 in q.js: arguments replaced with []
Mutant 1713 in q.js: arguments replaced with {}
Mutant 1714 in q.js: 1 replaced with 0
Mutant 1715 in q.js: 1 replaced with 2
Mutant 1716 in q.js: 1 replaced with null
Mutant 1717 in q.js: callback replaced with undefined
Mutant 1718 in q.js: callback replaced with null
Mutant 1719 in q.js: callback replaced with function () {}
Mutant 1720 in q.js: args replaced with null
Mutant 1721 in q.js: args replaced with undefined
Mutant 1722 in q.js: args replaced with []
Mutant 1723 in q.js: arguments replaced with null
Mutant 1724 in q.js: arguments replaced with undefined
Mutant 1725 in q.js: arguments replaced with []
Mutant 1726 in q.js: defer replaced with defer.resolve
Mutant 1727 in q.js: defer replaced with defer.reject
Mutant 1728 in q.js: defer replaced with defer.notify
Mutant 1729 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1730 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1731 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1732 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1733 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1734 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1735 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1736 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1737 in q.js: nodeArgs replaced with nodeArgs.reverse()
Mutant 1738 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1739 in q.js: deferred.reject replaced with deferred.notify
Mutant 1740 in q.js: deferred.reject replaced with null
Mutant 1741 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1742 in q.js: callback === undefined replaced with callback === null
Mutant 1743 in q.js: callback === undefined replaced with typeof callback !== "function"
Mutant 1744 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1745 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 1)
Mutant 1746 in q.js: array_slice(arguments, 1) replaced with array_slice(baseArgs, 1)
Mutant 1747 in q.js: arguments replaced with null
Mutant 1748 in q.js: arguments replaced with undefined
Mutant 1749 in q.js: arguments replaced with []
Mutant 1750 in q.js: 1 replaced with 2
Mutant 1751 in q.js: 1 replaced with 3
Mutant 1752 in q.js: 1 replaced with 4
Mutant 1753 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1754 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1755 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1756 in q.js: arguments replaced with null
Mutant 1757 in q.js: arguments replaced with undefined
Mutant 1758 in q.js: arguments replaced with []
Mutant 1759 in q.js: defer replaced with deferred
Mutant 1760 in q.js: defer replaced with undefined
Mutant 1761 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1762 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1763 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1764 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1765 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1766 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.resolve)
Mutant 1767 in q.js: Q replaced with deferred
Mutant 1768 in q.js: callback replaced with null
Mutant 1769 in q.js: callback replaced with undefined
Mutant 1770 in q.js: callback replaced with function () {}
Mutant 1771 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1772 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1773 in q.js: nodeArgs replaced with nodeArgs.filter(function () {
  return true;
})
Mutant 1774 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1775 in q.js: deferred.reject replaced with deferred.notify
Mutant 1776 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1777 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1778 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1779 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1780 in q.js: args.unshift replaced with args.push
Mutant 1781 in q.js: args.unshift replaced with args.shift
Mutant 1782 in q.js: args.unshift replaced with args.pop
Mutant 1783 in q.js: this replaced with undefined
Mutant 1784 in q.js: this replaced with null
Mutant 1785 in q.js: this replaced with 0
Mutant 1786 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this)
Mutant 1787 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1788 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(0)
Mutant 1789 in q.js: Q.denodeify.apply replaced with Q.nfbind
Mutant 1790 in q.js: Q.denodeify.apply replaced with Q.nbind
Mutant 1791 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1792 in q.js: void 0 replaced with void 1
Mutant 1793 in q.js: void 0 replaced with null
Mutant 1794 in q.js: void 0 replaced with undefined
Mutant 1795 in q.js: args replaced with args.slice(1)
Mutant 1796 in q.js: args replaced with args.concat([1])
Mutant 1797 in q.js: args replaced with args.filter(function (x) {
  return x !== 1;
})
Mutant 1798 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1799 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1800 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1801 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1802 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1803 in q.js: arguments replaced with array_slice(arguments, 4)
Mutant 1804 in q.js: 2 replaced with 1
Mutant 1805 in q.js: 2 replaced with 0
Mutant 1806 in q.js: 2 replaced with -1
Mutant 1807 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1808 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, -1)
Mutant 1809 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1810 in q.js: arguments replaced with null
Mutant 1811 in q.js: arguments replaced with undefined
Mutant 1812 in q.js: arguments replaced with []
Mutant 1813 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1814 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1815 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1816 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1817 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1818 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (error) {})
Mutant 1819 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(null)
Mutant 1820 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(undefined)
Mutant 1821 in q.js: callback.apply(thisp, arguments) replaced with callback.apply({})
Mutant 1822 in q.js: callback.apply replaced with callback.call
Mutant 1823 in q.js: thisp replaced with null
Mutant 1824 in q.js: thisp replaced with undefined
Mutant 1825 in q.js: thisp replaced with {}
Mutant 1826 in q.js: arguments replaced with null
Mutant 1827 in q.js: arguments replaced with undefined
Mutant 1828 in q.js: arguments replaced with []
Mutant 1829 in q.js: bound replaced with null
Mutant 1830 in q.js: bound replaced with undefined
Mutant 1831 in q.js: bound replaced with () => {}
Mutant 1832 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1833 in q.js: nodeArgs replaced with nodeArgs.concat([1, 2, 3])
Mutant 1834 in q.js: nodeArgs replaced with nodeArgs.filter(function (arg) {
  return arg !== 1;
})
Mutant 1835 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1836 in q.js: deferred.reject replaced with null
Mutant 1837 in q.js: deferred.reject replaced with undefined
Mutant 1838 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1839 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, -1)
Mutant 1840 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, "foo")
Mutant 1841 in q.js: arguments replaced with null
Mutant 1842 in q.js: arguments replaced with undefined
Mutant 1843 in q.js: arguments replaced with []
Mutant 1844 in q.js: 0 replaced with 1
Mutant 1845 in q.js: 0 replaced with -1
Mutant 1846 in q.js: 0 replaced with null
Mutant 1847 in q.js: args.unshift replaced with args.shift
Mutant 1848 in q.js: args.unshift replaced with args.pop
Mutant 1849 in q.js: args.unshift replaced with args.push
Mutant 1850 in q.js: this replaced with null
Mutant 1851 in q.js: this replaced with undefined
Mutant 1852 in q.js: this replaced with Promise.resolve()
Mutant 1853 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1854 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1855 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1856 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1857 in q.js: Q.nbind.apply replaced with Q.nbind.apply.bind
Mutant 1858 in q.js: void 0 replaced with null
Mutant 1859 in q.js: void 0 replaced with undefined
Mutant 1860 in q.js: void 0 replaced with this
Mutant 1861 in q.js: args replaced with args.slice(0, -1)
Mutant 1862 in q.js: args replaced with args.concat(["extra argument"])
Mutant 1863 in q.js: args replaced with args.reverse()
Mutant 1864 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1865 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat(deferred.makeNodeResolver()))
Mutant 1866 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.pop())
Mutant 1867 in q.js: object replaced with null
Mutant 1868 in q.js: object replaced with undefined
Mutant 1869 in q.js: object replaced with {}
Mutant 1870 in q.js: name replaced with name.toUpperCase()
Mutant 1871 in q.js: name replaced with name + "!"
Mutant 1872 in q.js: name replaced with name.length
Mutant 1873 in q.js: args replaced with args.slice(1)
Mutant 1874 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 1875 in q.js: args replaced with args.filter(function (x) {
  return x !== 1;
})
Mutant 1876 in q.js: args || [] replaced with null
Mutant 1877 in q.js: args || [] replaced with undefined
Mutant 1878 in q.js: args || [] replaced with []
Mutant 1879 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1880 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1881 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1882 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1883 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1884 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1885 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1886 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, 1])
Mutant 1887 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, 1])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1888 in q.js: "post" replaced with "get"
Mutant 1889 in q.js: "post" replaced with "head"
Mutant 1890 in q.js: "post" replaced with "put"
Mutant 1891 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1892 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 1893 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1894 in q.js: deferred.reject replaced with deferred.notify
Mutant 1895 in q.js: deferred.reject replaced with null
Mutant 1896 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1897 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1898 in q.js: array_slice(arguments, 2) replaced with array_slice(args)
Mutant 1899 in q.js: arguments replaced with null
Mutant 1900 in q.js: arguments replaced with undefined
Mutant 1901 in q.js: arguments replaced with []
Mutant 1902 in q.js: 2 replaced with 1
Mutant 1903 in q.js: 2 replaced with 3
Mutant 1904 in q.js: 2 replaced with -1
Mutant 1905 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1906 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1907 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1908 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(true)
Mutant 1909 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(false)
Mutant 1910 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1911 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1912 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [nodeArgs, name])
Mutant 1913 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, null])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [nodeArgs, name])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, null])
Mutant 1914 in q.js: Q replaced with this
Mutant 1915 in q.js: object replaced with undefined
Mutant 1916 in q.js: object replaced with 0
Mutant 1917 in q.js: "post" replaced with "get"
Mutant 1918 in q.js: "post" replaced with "put"
Mutant 1919 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1920 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1921 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1922 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1923 in q.js: deferred.reject replaced with null
Mutant 1924 in q.js: deferred.reject replaced with undefined
Mutant 1925 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1926 in q.js: array_slice(arguments, 1) replaced with array_slice(nodeArgs, 0)
Mutant 1927 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 1)
Mutant 1928 in q.js: arguments replaced with null
Mutant 1929 in q.js: arguments replaced with undefined
Mutant 1930 in q.js: arguments replaced with []
Mutant 1931 in q.js: 1 replaced with 0
Mutant 1932 in q.js: 1 replaced with 2
Mutant 1933 in q.js: 1 replaced with nodeArgs.length
Mutant 1934 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1935 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1936 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1937 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1938 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1939 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1940 in q.js: deferred.makeNodeResolver replaced with undefined
Mutant 1941 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, 1])
Mutant 1942 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1943 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, 1])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
Mutant 1944 in q.js: "post" replaced with "send"
Mutant 1945 in q.js: "post" replaced with "dispatch"
Mutant 1946 in q.js: "post" replaced with "apply"
Mutant 1947 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, 1]
Mutant 1948 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, function () {}]
Mutant 1949 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, function () {
  throw new Error("Test error");
}]
Mutant 1950 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1951 in q.js: deferred.reject replaced with null
Mutant 1952 in q.js: deferred.reject replaced with undefined
Mutant 1953 in q.js: Q replaced with null
Mutant 1954 in q.js: Q replaced with undefined
Mutant 1955 in q.js: Q replaced with 0
Mutant 1956 in q.js: object replaced with null
Mutant 1957 in q.js: object replaced with undefined
Mutant 1958 in q.js: object replaced with 0
Mutant 1959 in q.js: nodeback replaced with nodeback.bind(null)
Mutant 1960 in q.js: nodeback replaced with nodeback.apply(null)
Mutant 1961 in q.js: nodeback replaced with nodeback.call(null)
Mutant 1962 in q.js: nodeback replaced with !nodeback
Mutant 1963 in q.js: nodeback replaced with nodeback + 1
Mutant 1964 in q.js: nodeback replaced with nodeback()
Mutant 1965 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1966 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 1967 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 1968 in q.js: null replaced with undefined
Mutant 1969 in q.js: null replaced with 0
Mutant 1970 in q.js: null replaced with NaN
Mutant 1971 in q.js: value replaced with null
Mutant 1972 in q.js: value replaced with undefined
Mutant 1973 in q.js: value replaced with "value"
Mutant 1974 in q.js: error replaced with null
Mutant 1975 in q.js: error replaced with new Error("some other error")
Mutant 1976 in q.js: error replaced with undefined
Mutant 1977 in q.js: captureLine replaced with captureLine + 1
Mutant 1978 in q.js: captureLine replaced with captureLine - 1
Mutant 1979 in q.js: captureLine replaced with captureLine * 2
Mutant 1980 in queue.js: Q.defer replaced with Q.reject
Mutant 1981 in queue.js: Q.defer replaced with Q.resolve
Mutant 1982 in queue.js: "head" replaced with "tail"
Mutant 1983 in queue.js: "head" replaced with "head" + "tail"
Mutant 1984 in queue.js: "head" replaced with "head" + "tail" + "head"
Mutant 1985 in queue.js: ends.promise.get replaced with ends.promise.then
Mutant 1986 in queue.js: ends.promise.get replaced with ends.promise.catch
Mutant 1987 in queue.js: ends.promise.get replaced with ends.promise.finally
Mutant 1988 in queue.js: "tail" replaced with "head"
Mutant 1989 in queue.js: "tail" replaced with "tail" + "tail"
Mutant 1990 in queue.js: "tail" replaced with "tail".toUpperCase()
Mutant 1991 in queue.js: closed.resolve replaced with closed.reject
Mutant 1992 in queue.js: error replaced with null
Mutant 1993 in queue.js: error replaced with new Error("Queue is closed")
Mutant 1994 in queue.js: error replaced with Q.reject(error)
Mutant 1995 in queue.js: Q.reject replaced with Q.resolve
Mutant 1996 in queue.js: Q.reject replaced with null
Mutant 1997 in queue.js: error replaced with null
Mutant 1998 in queue.js: error replaced with undefined
Mutant 1999 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 2000 in queue.js: ends.resolve replaced with ends.reject
Mutant 2001 in queue.js: ends.resolve replaced with ends.resolve = null
[32m00:41:17 (3313) INFO Instrumenter[39m Instrumented 2 source file(s) with 2002 mutant(s)
[32m00:41:17 (3313) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m00:41:19 (3313) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m00:41:19 (3313) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m00:41:26 (3313) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6802 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 51m) 3/2002 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 46m) 4/2002 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 46m) 6/2002 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 10m) 7/2002 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 4m) 9/2002 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 19m) 10/2002 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 13m) 12/2002 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 24m) 13/2002 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 18m) 15/2002 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 53m) 19/2002 tested (13 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 52m) 21/2002 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 0m) 22/2002 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 58m) 24/2002 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 4m) 25/2002 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 2m) 27/2002 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 8m) 28/2002 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 6m) 30/2002 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 10m) 31/2002 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 8m) 33/2002 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 12m) 34/2002 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 0m) 38/2002 tested (29 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 9m) 38/2002 tested (29 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 12m) 39/2002 tested (29 survived, 1 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 16m) 40/2002 tested (29 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 24m) 40/2002 tested (29 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 27m) 41/2002 tested (29 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 30m) 42/2002 tested (29 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 37m) 42/2002 tested (29 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 40m) 43/2002 tested (29 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 42m) 44/2002 tested (29 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 44m) 45/2002 tested (30 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 41m) 47/2002 tested (32 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 43m) 48/2002 tested (33 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 32m) 52/2002 tested (35 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 30m) 54/2002 tested (36 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 32m) 55/2002 tested (37 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 26m) 58/2002 tested (39 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 28m) 59/2002 tested (40 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 30m) 60/2002 tested (41 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 32m) 61/2002 tested (41 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 33m) 62/2002 tested (42 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 35m) 63/2002 tested (42 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 40m) 63/2002 tested (42 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 28m) 68/2002 tested (42 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 23m) 71/2002 tested (43 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 25m) 72/2002 tested (44 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 24m) 74/2002 tested (46 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 25m) 75/2002 tested (47 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 24m) 77/2002 tested (49 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 25m) 78/2002 tested (50 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 24m) 80/2002 tested (52 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 25m) 81/2002 tested (53 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 24m) 83/2002 tested (55 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 25m) 84/2002 tested (56 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 24m) 86/2002 tested (58 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 25m) 87/2002 tested (59 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 26m) 88/2002 tested (60 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 25m) 90/2002 tested (62 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 26m) 91/2002 tested (63 survived, 9 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 25m) 93/2002 tested (65 survived, 9 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 28m) 93/2002 tested (65 survived, 9 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 27m) 95/2002 tested (66 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 30m) 95/2002 tested (66 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 31m) 96/2002 tested (66 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 32m) 97/2002 tested (67 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 33m) 98/2002 tested (67 survived, 12 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 32m) 100/2002 tested (69 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 26m) 104/2002 tested (70 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 27m) 105/2002 tested (71 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 28m) 106/2002 tested (72 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 27m) 108/2002 tested (74 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 28m) 109/2002 tested (75 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 27m) 111/2002 tested (77 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 28m) 112/2002 tested (78 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 27m) 114/2002 tested (80 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 27m) 115/2002 tested (81 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 26m) 117/2002 tested (83 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 27m) 118/2002 tested (84 survived, 12 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 26m) 120/2002 tested (86 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 27m) 121/2002 tested (87 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 26m) 123/2002 tested (89 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 26m) 124/2002 tested (90 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 25m) 126/2002 tested (92 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 26m) 127/2002 tested (93 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 25m) 129/2002 tested (95 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 26m) 130/2002 tested (96 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 25m) 132/2002 tested (98 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 26m) 133/2002 tested (99 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 25m) 135/2002 tested (101 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 25m) 136/2002 tested (102 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 24m) 138/2002 tested (104 survived, 12 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 25m) 139/2002 tested (105 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 24m) 141/2002 tested (107 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 25m) 142/2002 tested (108 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 25m) 143/2002 tested (109 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 24m) 145/2002 tested (111 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 25m) 146/2002 tested (112 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 24m) 148/2002 tested (114 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 20m) 152/2002 tested (115 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 21m) 153/2002 tested (116 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 17m) 157/2002 tested (117 survived, 12 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 18m) 158/2002 tested (117 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 9m) 166/2002 tested (117 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 11m) 166/2002 tested (117 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 11m) 168/2002 tested (117 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 10m) 170/2002 tested (119 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 10m) 171/2002 tested (120 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 173/2002 tested (122 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 174/2002 tested (123 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 176/2002 tested (125 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 177/2002 tested (126 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 179/2002 tested (128 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 10m) 180/2002 tested (129 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 11m) 181/2002 tested (130 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 10m) 183/2002 tested (132 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 11m) 184/2002 tested (133 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 10m) 186/2002 tested (135 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 10m) 187/2002 tested (136 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 10m) 189/2002 tested (138 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 10m) 190/2002 tested (139 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 10m) 192/2002 tested (141 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 10m) 193/2002 tested (142 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 9m) 195/2002 tested (144 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 10m) 196/2002 tested (145 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 9m) 198/2002 tested (147 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 10m) 199/2002 tested (148 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 9m) 201/2002 tested (150 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 10m) 202/2002 tested (151 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 9m) 204/2002 tested (153 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 9m) 205/2002 tested (154 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 9m) 207/2002 tested (156 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 9m) 208/2002 tested (157 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 9m) 210/2002 tested (159 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 9m) 211/2002 tested (160 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 8m) 213/2002 tested (162 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 9m) 214/2002 tested (163 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 8m) 216/2002 tested (165 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 9m) 217/2002 tested (166 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 9m) 218/2002 tested (167 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 9m) 220/2002 tested (169 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 9m) 221/2002 tested (170 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 8m) 223/2002 tested (172 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 9m) 224/2002 tested (173 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 8m) 226/2002 tested (175 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 8m) 227/2002 tested (176 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 8m) 229/2002 tested (178 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 8m) 230/2002 tested (179 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 8m) 232/2002 tested (181 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 8m) 233/2002 tested (182 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 7m) 235/2002 tested (184 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 8m) 236/2002 tested (185 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 7m) 238/2002 tested (187 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 8m) 239/2002 tested (188 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 7m) 241/2002 tested (190 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 7m) 242/2002 tested (191 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 244/2002 tested (193 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 245/2002 tested (194 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 247/2002 tested (196 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 248/2002 tested (197 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 5m) 252/2002 tested (198 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 5m) 253/2002 tested (198 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 4m) 255/2002 tested (198 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 5m) 256/2002 tested (199 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 3m) 259/2002 tested (201 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 2m) 262/2002 tested (202 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 2m) 263/2002 tested (203 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 2m) 265/2002 tested (205 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 2m) 266/2002 tested (206 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 2m) 268/2002 tested (208 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 2m) 269/2002 tested (209 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 2m) 271/2002 tested (211 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 2m) 272/2002 tested (212 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 1m) 274/2002 tested (214 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 2m) 275/2002 tested (215 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 1m) 277/2002 tested (217 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 1m) 278/2002 tested (218 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 2m) 279/2002 tested (219 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~3h 1m) 281/2002 tested (221 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~3h 1m) 282/2002 tested (222 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 1m) 284/2002 tested (224 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 1m) 285/2002 tested (225 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 1m) 287/2002 tested (227 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 1m) 288/2002 tested (228 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 1m) 290/2002 tested (230 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 1m) 291/2002 tested (231 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 0m) 293/2002 tested (233 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 1m) 294/2002 tested (234 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 0m) 296/2002 tested (236 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 0m) 297/2002 tested (237 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 0m) 299/2002 tested (239 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 0m) 300/2002 tested (240 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 0m) 302/2002 tested (242 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 0m) 303/2002 tested (243 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 59m) 305/2002 tested (245 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 0m) 306/2002 tested (246 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 59m) 308/2002 tested (248 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 59m) 309/2002 tested (249 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 59m) 311/2002 tested (251 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 59m) 312/2002 tested (252 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 59m) 313/2002 tested (253 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 59m) 315/2002 tested (255 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 59m) 316/2002 tested (256 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~2h 59m) 318/2002 tested (258 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~2h 59m) 319/2002 tested (259 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 58m) 321/2002 tested (261 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 59m) 322/2002 tested (262 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 58m) 324/2002 tested (264 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 58m) 325/2002 tested (265 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 58m) 327/2002 tested (267 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 58m) 328/2002 tested (268 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 58m) 330/2002 tested (270 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 58m) 331/2002 tested (271 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 57m) 333/2002 tested (273 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 58m) 334/2002 tested (274 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 57m) 336/2002 tested (276 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~2h 57m) 337/2002 tested (277 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~2h 57m) 339/2002 tested (279 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~2h 57m) 340/2002 tested (280 survived, 14 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 57m) 342/2002 tested (282 survived, 14 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 57m) 343/2002 tested (283 survived, 14 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 56m) 345/2002 tested (285 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 57m) 346/2002 tested (286 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 57m) 347/2002 tested (287 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 55m) 351/2002 tested (288 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 55m) 353/2002 tested (290 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 55m) 354/2002 tested (291 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 54m) 356/2002 tested (293 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 55m) 357/2002 tested (294 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 54m) 359/2002 tested (296 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 54m) 360/2002 tested (297 survived, 14 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 54m) 362/2002 tested (299 survived, 14 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 52m) 366/2002 tested (300 survived, 14 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 53m) 367/2002 tested (301 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 369/2002 tested (303 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 370/2002 tested (304 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 372/2002 tested (306 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 373/2002 tested (307 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 375/2002 tested (309 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 376/2002 tested (310 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 51m) 378/2002 tested (312 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 52m) 379/2002 tested (313 survived, 14 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 51m) 381/2002 tested (315 survived, 14 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 51m) 382/2002 tested (316 survived, 14 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 51m) 384/2002 tested (318 survived, 14 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 51m) 385/2002 tested (319 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 51m) 387/2002 tested (321 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 51m) 388/2002 tested (322 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 51m) 389/2002 tested (323 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 50m) 391/2002 tested (325 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 51m) 392/2002 tested (326 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 50m) 394/2002 tested (328 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 50m) 395/2002 tested (329 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 50m) 397/2002 tested (331 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 50m) 398/2002 tested (332 survived, 14 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 49m) 401/2002 tested (333 survived, 14 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 49m) 403/2002 tested (335 survived, 14 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 49m) 404/2002 tested (336 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 49m) 406/2002 tested (338 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 49m) 407/2002 tested (339 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 48m) 409/2002 tested (341 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 48m) 410/2002 tested (342 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 48m) 412/2002 tested (344 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 48m) 413/2002 tested (345 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 48m) 415/2002 tested (347 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 48m) 416/2002 tested (348 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 48m) 418/2002 tested (350 survived, 14 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 47m) 421/2002 tested (351 survived, 14 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 45m) 426/2002 tested (351 survived, 14 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 45m) 427/2002 tested (351 survived, 14 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 45m) 428/2002 tested (351 survived, 14 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 45m) 430/2002 tested (351 survived, 14 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 45m) 431/2002 tested (351 survived, 14 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 45m) 432/2002 tested (351 survived, 14 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 45m) 433/2002 tested (351 survived, 15 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 46m) 433/2002 tested (351 survived, 15 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 46m) 434/2002 tested (351 survived, 16 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 46m) 434/2002 tested (351 survived, 16 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 46m) 435/2002 tested (351 survived, 17 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 47m) 436/2002 tested (351 survived, 18 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 44m) 443/2002 tested (352 survived, 18 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 43m) 446/2002 tested (352 survived, 18 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 43m) 448/2002 tested (352 survived, 19 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 42m) 451/2002 tested (352 survived, 19 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 42m) 452/2002 tested (353 survived, 19 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 42m) 453/2002 tested (353 survived, 20 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 42m) 455/2002 tested (355 survived, 20 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 42m) 456/2002 tested (356 survived, 20 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 41m) 458/2002 tested (358 survived, 20 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 41m) 459/2002 tested (359 survived, 20 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 41m) 461/2002 tested (361 survived, 20 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 42m) 461/2002 tested (361 survived, 20 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 42m) 462/2002 tested (361 survived, 21 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 42m) 462/2002 tested (361 survived, 21 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 42m) 463/2002 tested (361 survived, 22 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 42m) 465/2002 tested (361 survived, 23 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 43m) 465/2002 tested (361 survived, 23 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 42m) 467/2002 tested (362 survived, 24 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 42m) 468/2002 tested (363 survived, 24 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 41m) 471/2002 tested (364 survived, 24 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 41m) 473/2002 tested (366 survived, 24 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 41m) 474/2002 tested (367 survived, 24 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 41m) 476/2002 tested (369 survived, 24 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 41m) 477/2002 tested (370 survived, 24 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 41m) 479/2002 tested (372 survived, 24 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 41m) 480/2002 tested (373 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 41m) 481/2002 tested (374 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 40m) 483/2002 tested (376 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 41m) 484/2002 tested (377 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 40m) 486/2002 tested (379 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 40m) 487/2002 tested (380 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 40m) 489/2002 tested (382 survived, 24 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 40m) 490/2002 tested (383 survived, 24 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 40m) 492/2002 tested (385 survived, 24 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 40m) 493/2002 tested (386 survived, 24 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 39m) 495/2002 tested (388 survived, 24 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 39m) 496/2002 tested (389 survived, 24 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 39m) 498/2002 tested (391 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 39m) 499/2002 tested (392 survived, 24 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 39m) 501/2002 tested (394 survived, 24 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 39m) 502/2002 tested (395 survived, 24 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 39m) 503/2002 tested (396 survived, 24 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 39m) 505/2002 tested (396 survived, 25 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 39m) 505/2002 tested (396 survived, 25 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 39m) 507/2002 tested (396 survived, 26 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 39m) 508/2002 tested (396 survived, 27 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 39m) 509/2002 tested (397 survived, 27 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 39m) 510/2002 tested (398 survived, 27 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 38m) 514/2002 tested (400 survived, 27 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 38m) 515/2002 tested (400 survived, 27 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 38m) 516/2002 tested (400 survived, 28 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 38m) 517/2002 tested (400 survived, 28 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 38m) 518/2002 tested (400 survived, 29 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 38m) 519/2002 tested (401 survived, 29 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 38m) 520/2002 tested (401 survived, 30 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 39m) 520/2002 tested (401 survived, 30 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 39m) 521/2002 tested (401 survived, 31 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 39m) 522/2002 tested (401 survived, 32 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 39m) 522/2002 tested (401 survived, 32 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 39m) 523/2002 tested (401 survived, 33 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 39m) 525/2002 tested (403 survived, 33 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 39m) 526/2002 tested (404 survived, 33 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 39m) 528/2002 tested (406 survived, 33 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 39m) 529/2002 tested (407 survived, 33 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 38m) 531/2002 tested (409 survived, 33 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 38m) 533/2002 tested (410 survived, 33 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 38m) 534/2002 tested (410 survived, 33 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 38m) 535/2002 tested (410 survived, 34 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 39m) 535/2002 tested (410 survived, 34 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 38m) 537/2002 tested (410 survived, 35 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 38m) 538/2002 tested (410 survived, 35 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 38m) 539/2002 tested (410 survived, 35 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 38m) 540/2002 tested (410 survived, 35 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 38m) 542/2002 tested (412 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 38m) 543/2002 tested (413 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 38m) 545/2002 tested (415 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 38m) 546/2002 tested (416 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 38m) 547/2002 tested (417 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 37m) 549/2002 tested (419 survived, 35 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 37m) 550/2002 tested (420 survived, 35 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 37m) 552/2002 tested (422 survived, 35 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 37m) 553/2002 tested (423 survived, 35 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 37m) 555/2002 tested (425 survived, 35 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 37m) 556/2002 tested (426 survived, 35 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 36m) 558/2002 tested (428 survived, 35 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 37m) 559/2002 tested (429 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 36m) 561/2002 tested (431 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 36m) 562/2002 tested (432 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 36m) 564/2002 tested (434 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 36m) 565/2002 tested (435 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 36m) 567/2002 tested (437 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 36m) 568/2002 tested (438 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 35m) 570/2002 tested (440 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 35m) 571/2002 tested (441 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 35m) 573/2002 tested (443 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 35m) 574/2002 tested (444 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 35m) 576/2002 tested (446 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 35m) 577/2002 tested (447 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 34m) 579/2002 tested (449 survived, 35 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 34m) 580/2002 tested (450 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 34m) 581/2002 tested (451 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 34m) 583/2002 tested (453 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 34m) 584/2002 tested (454 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 34m) 586/2002 tested (456 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 34m) 587/2002 tested (457 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 33m) 589/2002 tested (459 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 33m) 590/2002 tested (460 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 33m) 592/2002 tested (462 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 33m) 593/2002 tested (463 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 33m) 595/2002 tested (465 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 33m) 596/2002 tested (466 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 33m) 598/2002 tested (468 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 33m) 599/2002 tested (469 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 32m) 601/2002 tested (471 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 32m) 602/2002 tested (472 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 32m) 604/2002 tested (474 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 32m) 605/2002 tested (475 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 32m) 607/2002 tested (477 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 32m) 608/2002 tested (478 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 31m) 610/2002 tested (480 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 31m) 611/2002 tested (481 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 31m) 613/2002 tested (483 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 31m) 614/2002 tested (484 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 31m) 615/2002 tested (485 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 31m) 617/2002 tested (487 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 31m) 618/2002 tested (488 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 30m) 620/2002 tested (490 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 30m) 621/2002 tested (491 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 30m) 623/2002 tested (493 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 30m) 624/2002 tested (494 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 30m) 626/2002 tested (496 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 30m) 627/2002 tested (497 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 29m) 629/2002 tested (499 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 29m) 630/2002 tested (500 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 29m) 632/2002 tested (502 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 29m) 633/2002 tested (503 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 636/2002 tested (505 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 638/2002 tested (505 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 639/2002 tested (505 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 639/2002 tested (505 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 28m) 640/2002 tested (505 survived, 37 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 28m) 641/2002 tested (505 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 28m) 642/2002 tested (506 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 29m) 643/2002 tested (506 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 29m) 643/2002 tested (506 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 29m) 644/2002 tested (506 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 29m) 646/2002 tested (508 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 29m) 647/2002 tested (509 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 29m) 647/2002 tested (509 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 29m) 648/2002 tested (509 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 29m) 649/2002 tested (509 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 29m) 651/2002 tested (511 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 29m) 652/2002 tested (512 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 28m) 654/2002 tested (514 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 28m) 655/2002 tested (515 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 28m) 657/2002 tested (517 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 28m) 658/2002 tested (518 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 28m) 659/2002 tested (519 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 28m) 661/2002 tested (521 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 28m) 662/2002 tested (522 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 664/2002 tested (523 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 667/2002 tested (523 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 668/2002 tested (523 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 27m) 669/2002 tested (523 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 669/2002 tested (523 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 671/2002 tested (524 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 27m) 672/2002 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 674/2002 tested (527 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 675/2002 tested (528 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 676/2002 tested (529 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 678/2002 tested (529 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 679/2002 tested (530 survived, 45 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 681/2002 tested (532 survived, 45 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 681/2002 tested (532 survived, 45 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 682/2002 tested (532 survived, 46 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 683/2002 tested (532 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 683/2002 tested (532 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 684/2002 tested (532 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 685/2002 tested (532 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 685/2002 tested (532 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 686/2002 tested (532 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 687/2002 tested (532 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 688/2002 tested (532 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 689/2002 tested (532 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 690/2002 tested (532 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 690/2002 tested (532 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 692/2002 tested (532 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 693/2002 tested (532 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 694/2002 tested (532 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 695/2002 tested (533 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 695/2002 tested (533 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 696/2002 tested (533 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 697/2002 tested (533 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 697/2002 tested (533 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 27m) 698/2002 tested (533 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 27m) 699/2002 tested (533 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 27m) 700/2002 tested (533 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 27m) 701/2002 tested (533 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 27m) 702/2002 tested (533 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 27m) 703/2002 tested (533 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 27m) 704/2002 tested (533 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 27m) 705/2002 tested (534 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 27m) 707/2002 tested (536 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 27m) 707/2002 tested (536 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 27m) 709/2002 tested (537 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 27m) 710/2002 tested (538 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 710/2002 tested (538 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 711/2002 tested (538 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 712/2002 tested (538 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 712/2002 tested (538 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 713/2002 tested (538 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 27m) 714/2002 tested (538 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 27m) 715/2002 tested (539 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 27m) 716/2002 tested (539 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 27m) 716/2002 tested (539 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 27m) 717/2002 tested (539 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 27m) 718/2002 tested (539 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 28m) 718/2002 tested (539 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 28m) 719/2002 tested (539 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 28m) 720/2002 tested (540 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 28m) 721/2002 tested (540 survived, 64 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 28m) 721/2002 tested (540 survived, 64 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 28m) 722/2002 tested (540 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 28m) 723/2002 tested (540 survived, 66 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 723/2002 tested (540 survived, 66 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 724/2002 tested (540 survived, 67 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 725/2002 tested (540 survived, 68 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 725/2002 tested (540 survived, 68 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 726/2002 tested (540 survived, 69 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 28m) 727/2002 tested (540 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 28m) 728/2002 tested (541 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 28m) 730/2002 tested (543 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 28m) 731/2002 tested (544 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 28m) 733/2002 tested (546 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 27m) 734/2002 tested (547 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 27m) 736/2002 tested (549 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 27m) 737/2002 tested (550 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 27m) 739/2002 tested (552 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 27m) 740/2002 tested (553 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 26m) 742/2002 tested (555 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 26m) 743/2002 tested (556 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 26m) 745/2002 tested (558 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 26m) 746/2002 tested (559 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 26m) 747/2002 tested (560 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 26m) 749/2002 tested (562 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 26m) 750/2002 tested (563 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 25m) 752/2002 tested (565 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 25m) 753/2002 tested (566 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 25m) 755/2002 tested (568 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 25m) 756/2002 tested (569 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 24m) 758/2002 tested (571 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 24m) 759/2002 tested (572 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 24m) 761/2002 tested (574 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 24m) 762/2002 tested (575 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 24m) 764/2002 tested (577 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 24m) 765/2002 tested (578 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 23m) 767/2002 tested (580 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 23m) 768/2002 tested (581 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 23m) 770/2002 tested (583 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 23m) 771/2002 tested (584 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 23m) 773/2002 tested (586 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 23m) 774/2002 tested (587 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 22m) 776/2002 tested (589 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 22m) 777/2002 tested (590 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 22m) 779/2002 tested (592 survived, 70 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 22m) 780/2002 tested (593 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 21m) 782/2002 tested (595 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 21m) 783/2002 tested (596 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 21m) 784/2002 tested (597 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 21m) 786/2002 tested (599 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 21m) 787/2002 tested (600 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 21m) 789/2002 tested (602 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 21m) 790/2002 tested (603 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 20m) 792/2002 tested (605 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 20m) 793/2002 tested (606 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 20m) 795/2002 tested (608 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 20m) 796/2002 tested (609 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 20m) 798/2002 tested (611 survived, 70 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 20m) 799/2002 tested (612 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 19m) 801/2002 tested (614 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 19m) 802/2002 tested (615 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 19m) 804/2002 tested (617 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 19m) 805/2002 tested (618 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 18m) 807/2002 tested (620 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 18m) 808/2002 tested (621 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 18m) 810/2002 tested (622 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 17m) 815/2002 tested (622 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 17m) 817/2002 tested (624 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 17m) 818/2002 tested (625 survived, 70 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 16m) 820/2002 tested (627 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 16m) 821/2002 tested (628 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 16m) 823/2002 tested (630 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 16m) 824/2002 tested (631 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 15m) 826/2002 tested (633 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 15m) 827/2002 tested (634 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 15m) 828/2002 tested (635 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 15m) 830/2002 tested (637 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 15m) 831/2002 tested (638 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 15m) 833/2002 tested (640 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 15m) 834/2002 tested (641 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 14m) 836/2002 tested (643 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 14m) 837/2002 tested (644 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 14m) 839/2002 tested (646 survived, 70 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 14m) 840/2002 tested (647 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 14m) 842/2002 tested (649 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 14m) 843/2002 tested (650 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 13m) 845/2002 tested (652 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 12m) 849/2002 tested (653 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 12m) 850/2002 tested (654 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 12m) 852/2002 tested (656 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 12m) 853/2002 tested (657 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 12m) 854/2002 tested (658 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 12m) 856/2002 tested (660 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 12m) 857/2002 tested (661 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 11m) 859/2002 tested (663 survived, 70 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 11m) 860/2002 tested (664 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 11m) 862/2002 tested (666 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 11m) 863/2002 tested (667 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 11m) 865/2002 tested (669 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 10m) 866/2002 tested (670 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 10m) 868/2002 tested (672 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 10m) 869/2002 tested (673 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 10m) 871/2002 tested (675 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 10m) 872/2002 tested (676 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 9m) 874/2002 tested (678 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 9m) 875/2002 tested (679 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 9m) 876/2002 tested (680 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 9m) 878/2002 tested (682 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 9m) 879/2002 tested (683 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 9m) 880/2002 tested (683 survived, 70 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 9m) 882/2002 tested (683 survived, 70 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 9m) 883/2002 tested (684 survived, 70 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 885/2002 tested (686 survived, 70 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 886/2002 tested (687 survived, 70 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 887/2002 tested (687 survived, 70 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 888/2002 tested (687 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 888/2002 tested (687 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 8m) 889/2002 tested (687 survived, 72 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 8m) 889/2002 tested (687 survived, 72 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 8m) 891/2002 tested (688 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 8m) 892/2002 tested (689 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 8m) 894/2002 tested (691 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 8m) 895/2002 tested (692 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 7m) 897/2002 tested (694 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 7m) 898/2002 tested (695 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 7m) 902/2002 tested (696 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 904/2002 tested (698 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 906/2002 tested (699 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 907/2002 tested (700 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 909/2002 tested (702 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 6m) 910/2002 tested (703 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 5m) 912/2002 tested (705 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 5m) 913/2002 tested (706 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 5m) 915/2002 tested (708 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 5m) 916/2002 tested (709 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 4m) 918/2002 tested (711 survived, 73 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 4m) 919/2002 tested (712 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 921/2002 tested (714 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 922/2002 tested (715 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 923/2002 tested (716 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 925/2002 tested (718 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 4m) 926/2002 tested (719 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 3m) 928/2002 tested (721 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 3m) 929/2002 tested (722 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 3m) 931/2002 tested (724 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 3m) 932/2002 tested (725 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 3m) 934/2002 tested (727 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 3m) 935/2002 tested (728 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 2m) 937/2002 tested (730 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 2m) 938/2002 tested (731 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 2m) 940/2002 tested (733 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~2h 2m) 941/2002 tested (734 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~2h 2m) 943/2002 tested (736 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~2h 1m) 944/2002 tested (737 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 1m) 946/2002 tested (739 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 1m) 947/2002 tested (740 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 1m) 949/2002 tested (742 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 1m) 950/2002 tested (743 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 1m) 950/2002 tested (743 survived, 73 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 1m) 951/2002 tested (743 survived, 74 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 1m) 952/2002 tested (743 survived, 75 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 1m) 952/2002 tested (743 survived, 75 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 1m) 954/2002 tested (744 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 1m) 955/2002 tested (745 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 0m) 957/2002 tested (747 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 0m) 958/2002 tested (748 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 0m) 960/2002 tested (750 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~2h 0m) 961/2002 tested (751 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~2h 0m) 963/2002 tested (753 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~2h 0m) 964/2002 tested (754 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~1h 59m) 966/2002 tested (756 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~1h 59m) 967/2002 tested (757 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 59m) 969/2002 tested (759 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 59m) 970/2002 tested (760 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 59m) 971/2002 tested (761 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 58m) 973/2002 tested (763 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 58m) 974/2002 tested (764 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 58m) 976/2002 tested (766 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~1h 58m) 977/2002 tested (767 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~1h 58m) 979/2002 tested (769 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~1h 58m) 980/2002 tested (770 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 57m) 982/2002 tested (772 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 57m) 983/2002 tested (773 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 57m) 985/2002 tested (775 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 57m) 986/2002 tested (776 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 57m) 988/2002 tested (778 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 57m) 989/2002 tested (779 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 56m) 991/2002 tested (781 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 56m) 992/2002 tested (782 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 56m) 994/2002 tested (784 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 56m) 995/2002 tested (785 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 56m) 997/2002 tested (787 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 56m) 998/2002 tested (788 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~1h 55m) 1000/2002 tested (790 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 55m, remaining: ~1h 55m) 1001/2002 tested (791 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 55m, remaining: ~1h 55m) 1003/2002 tested (793 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 55m) 1004/2002 tested (794 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 55m) 1005/2002 tested (795 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 54m) 1007/2002 tested (795 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 54m) 1008/2002 tested (795 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 54m) 1009/2002 tested (795 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 54m) 1011/2002 tested (795 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 54m) 1012/2002 tested (795 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 54m) 1014/2002 tested (795 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 54m) 1015/2002 tested (796 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 53m) 1017/2002 tested (798 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 53m) 1018/2002 tested (799 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 53m) 1020/2002 tested (801 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 53m) 1021/2002 tested (802 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 53m) 1023/2002 tested (804 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 53m) 1024/2002 tested (805 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 52m) 1026/2002 tested (807 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 52m) 1027/2002 tested (808 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 52m) 1028/2002 tested (809 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 52m) 1030/2002 tested (811 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 52m) 1031/2002 tested (812 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 51m) 1033/2002 tested (814 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 51m) 1034/2002 tested (815 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 51m) 1036/2002 tested (817 survived, 76 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 51m) 1037/2002 tested (818 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 51m) 1039/2002 tested (820 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 51m) 1040/2002 tested (821 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 50m) 1042/2002 tested (823 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 50m) 1043/2002 tested (824 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 50m) 1045/2002 tested (826 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 50m) 1046/2002 tested (827 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 50m) 1048/2002 tested (829 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 50m) 1049/2002 tested (830 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 49m) 1051/2002 tested (832 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 49m) 1052/2002 tested (833 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 49m) 1054/2002 tested (835 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 49m) 1055/2002 tested (836 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 49m) 1057/2002 tested (838 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 49m) 1058/2002 tested (839 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 48m) 1060/2002 tested (841 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 48m) 1061/2002 tested (842 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 48m) 1063/2002 tested (844 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 48m) 1064/2002 tested (845 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 48m) 1065/2002 tested (846 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1067/2002 tested (848 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1068/2002 tested (849 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1070/2002 tested (851 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1071/2002 tested (852 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 47m) 1073/2002 tested (854 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 47m) 1074/2002 tested (855 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 46m) 1076/2002 tested (857 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 46m) 1077/2002 tested (858 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 46m) 1079/2002 tested (860 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 4m, remaining: ~1h 46m) 1080/2002 tested (861 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 4m, remaining: ~1h 46m) 1082/2002 tested (863 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 46m) 1083/2002 tested (864 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 45m) 1085/2002 tested (866 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 45m) 1086/2002 tested (867 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 45m) 1088/2002 tested (869 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 45m) 1089/2002 tested (870 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 45m) 1091/2002 tested (872 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 45m) 1092/2002 tested (873 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 44m) 1094/2002 tested (875 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 44m) 1095/2002 tested (876 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 44m) 1097/2002 tested (878 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 44m) 1098/2002 tested (879 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 44m) 1100/2002 tested (881 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 43m) 1101/2002 tested (882 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 43m) 1103/2002 tested (884 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 43m) 1104/2002 tested (885 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 43m) 1105/2002 tested (886 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 43m) 1107/2002 tested (888 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 43m) 1108/2002 tested (889 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 42m) 1110/2002 tested (891 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 42m) 1111/2002 tested (892 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 42m) 1113/2002 tested (894 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 42m) 1114/2002 tested (895 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 42m) 1116/2002 tested (897 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 42m) 1117/2002 tested (898 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 41m) 1119/2002 tested (900 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 41m) 1120/2002 tested (901 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 41m) 1122/2002 tested (903 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 41m) 1123/2002 tested (904 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 41m) 1125/2002 tested (906 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 41m) 1126/2002 tested (907 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 40m) 1128/2002 tested (909 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 40m) 1129/2002 tested (910 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 40m) 1131/2002 tested (912 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 40m) 1132/2002 tested (913 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 40m) 1134/2002 tested (915 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 39m) 1135/2002 tested (916 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 39m) 1137/2002 tested (918 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 39m) 1138/2002 tested (919 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 39m) 1140/2002 tested (921 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 39m) 1141/2002 tested (922 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 39m) 1142/2002 tested (923 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 38m) 1144/2002 tested (925 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 38m) 1145/2002 tested (926 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 38m) 1147/2002 tested (928 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 38m) 1148/2002 tested (929 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 38m) 1150/2002 tested (931 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 38m) 1151/2002 tested (932 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 37m) 1153/2002 tested (934 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 37m) 1154/2002 tested (935 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 37m) 1156/2002 tested (937 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 37m) 1157/2002 tested (938 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 37m) 1159/2002 tested (940 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 13m, remaining: ~1h 37m) 1160/2002 tested (941 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 36m) 1162/2002 tested (943 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 36m) 1163/2002 tested (944 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 36m) 1165/2002 tested (946 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 36m) 1166/2002 tested (947 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 36m) 1168/2002 tested (949 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 35m) 1169/2002 tested (950 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 35m) 1171/2002 tested (952 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 35m) 1172/2002 tested (953 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 35m) 1174/2002 tested (955 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 35m) 1175/2002 tested (956 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 34m) 1177/2002 tested (958 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 34m) 1178/2002 tested (959 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 34m) 1179/2002 tested (960 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 34m) 1181/2002 tested (962 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 34m) 1182/2002 tested (963 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 34m) 1184/2002 tested (965 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 34m) 1185/2002 tested (966 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 33m) 1187/2002 tested (968 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 33m) 1188/2002 tested (969 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 33m) 1190/2002 tested (971 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 33m) 1191/2002 tested (972 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 33m) 1193/2002 tested (974 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 33m) 1194/2002 tested (975 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 32m) 1196/2002 tested (977 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 32m) 1197/2002 tested (978 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 18m, remaining: ~1h 32m) 1199/2002 tested (980 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 18m, remaining: ~1h 32m) 1200/2002 tested (981 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 32m) 1202/2002 tested (983 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 31m) 1203/2002 tested (984 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 31m) 1205/2002 tested (986 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 31m) 1206/2002 tested (987 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 31m) 1208/2002 tested (989 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 31m) 1209/2002 tested (990 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 31m) 1210/2002 tested (991 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 30m) 1212/2002 tested (993 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 30m) 1213/2002 tested (994 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 30m) 1215/2002 tested (996 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 30m) 1216/2002 tested (997 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 30m) 1218/2002 tested (999 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 30m) 1219/2002 tested (1000 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 20m, remaining: ~1h 29m) 1221/2002 tested (1002 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 29m) 1222/2002 tested (1003 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 29m) 1224/2002 tested (1005 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 29m) 1225/2002 tested (1006 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 29m) 1227/2002 tested (1008 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 29m) 1228/2002 tested (1009 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 28m) 1230/2002 tested (1011 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 28m) 1231/2002 tested (1012 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 28m) 1233/2002 tested (1014 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 28m) 1234/2002 tested (1015 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 28m) 1236/2002 tested (1017 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 28m) 1237/2002 tested (1018 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 27m) 1239/2002 tested (1020 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 22m, remaining: ~1h 27m) 1240/2002 tested (1021 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 27m) 1242/2002 tested (1023 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 27m) 1243/2002 tested (1024 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 27m) 1244/2002 tested (1025 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 26m) 1246/2002 tested (1027 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 26m) 1247/2002 tested (1028 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 26m) 1249/2002 tested (1030 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 26m) 1250/2002 tested (1031 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 26m) 1252/2002 tested (1033 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 26m) 1253/2002 tested (1034 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 25m) 1255/2002 tested (1036 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 25m) 1256/2002 tested (1037 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 25m) 1258/2002 tested (1039 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 25m) 1259/2002 tested (1040 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 25m, remaining: ~1h 25m) 1261/2002 tested (1042 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 25m) 1262/2002 tested (1043 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 24m) 1264/2002 tested (1045 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 24m) 1265/2002 tested (1046 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 24m) 1267/2002 tested (1048 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 24m) 1268/2002 tested (1049 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 24m) 1270/2002 tested (1051 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 24m) 1271/2002 tested (1052 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 23m) 1273/2002 tested (1054 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 23m) 1274/2002 tested (1055 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 23m) 1275/2002 tested (1056 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 23m) 1277/2002 tested (1058 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 27m, remaining: ~1h 23m) 1278/2002 tested (1059 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 27m, remaining: ~1h 23m) 1280/2002 tested (1061 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 27m, remaining: ~1h 22m) 1281/2002 tested (1062 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 22m) 1283/2002 tested (1064 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 22m) 1284/2002 tested (1065 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 22m) 1286/2002 tested (1067 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 22m) 1287/2002 tested (1068 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 21m) 1289/2002 tested (1070 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 21m) 1290/2002 tested (1071 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 21m) 1292/2002 tested (1073 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 21m) 1293/2002 tested (1074 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 21m) 1295/2002 tested (1076 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 21m) 1296/2002 tested (1077 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 20m) 1298/2002 tested (1079 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 20m) 1299/2002 tested (1080 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 29m, remaining: ~1h 20m) 1301/2002 tested (1082 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 20m) 1302/2002 tested (1083 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 20m) 1304/2002 tested (1085 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 20m) 1305/2002 tested (1086 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 20m) 1306/2002 tested (1087 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 19m) 1308/2002 tested (1089 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 19m) 1309/2002 tested (1090 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 19m) 1311/2002 tested (1092 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 19m) 1312/2002 tested (1093 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 19m) 1314/2002 tested (1095 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 18m) 1315/2002 tested (1096 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 18m) 1317/2002 tested (1098 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 18m) 1318/2002 tested (1099 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 18m) 1320/2002 tested (1101 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 31m, remaining: ~1h 18m) 1321/2002 tested (1102 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 18m) 1323/2002 tested (1104 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 17m) 1324/2002 tested (1105 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 17m) 1326/2002 tested (1107 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 17m) 1327/2002 tested (1108 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 17m) 1329/2002 tested (1110 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 17m) 1330/2002 tested (1111 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 16m) 1332/2002 tested (1113 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 16m) 1333/2002 tested (1114 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 16m) 1335/2002 tested (1116 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 16m) 1336/2002 tested (1117 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 16m) 1338/2002 tested (1119 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 33m, remaining: ~1h 16m) 1339/2002 tested (1120 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 34m, remaining: ~1h 15m) 1341/2002 tested (1122 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 15m) 1342/2002 tested (1123 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 15m) 1343/2002 tested (1124 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 15m) 1345/2002 tested (1126 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 15m) 1346/2002 tested (1127 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 15m) 1348/2002 tested (1129 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 15m) 1349/2002 tested (1130 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 14m) 1351/2002 tested (1132 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 14m) 1352/2002 tested (1133 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 14m) 1354/2002 tested (1135 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 14m) 1355/2002 tested (1136 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 14m) 1357/2002 tested (1138 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 36m, remaining: ~1h 13m) 1358/2002 tested (1139 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 36m, remaining: ~1h 13m) 1360/2002 tested (1141 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 36m, remaining: ~1h 13m) 1361/2002 tested (1142 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 13m) 1363/2002 tested (1144 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 13m) 1364/2002 tested (1145 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 13m) 1366/2002 tested (1147 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 12m) 1367/2002 tested (1148 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 12m) 1369/2002 tested (1150 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 12m) 1370/2002 tested (1151 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 12m) 1372/2002 tested (1153 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 12m) 1373/2002 tested (1154 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 11m) 1375/2002 tested (1156 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 38m, remaining: ~1h 11m) 1376/2002 tested (1157 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 38m, remaining: ~1h 11m) 1378/2002 tested (1159 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 38m, remaining: ~1h 11m) 1379/2002 tested (1160 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 38m, remaining: ~1h 11m) 1380/2002 tested (1161 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 11m) 1382/2002 tested (1163 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 11m) 1383/2002 tested (1164 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 10m) 1385/2002 tested (1166 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 10m) 1386/2002 tested (1167 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 10m) 1388/2002 tested (1169 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 10m) 1389/2002 tested (1170 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 10m) 1391/2002 tested (1172 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 10m) 1392/2002 tested (1173 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 40m, remaining: ~1h 9m) 1394/2002 tested (1175 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 40m, remaining: ~1h 9m) 1395/2002 tested (1176 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 40m, remaining: ~1h 9m) 1397/2002 tested (1178 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 40m, remaining: ~1h 9m) 1398/2002 tested (1179 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 40m, remaining: ~1h 9m) 1400/2002 tested (1181 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 40m, remaining: ~1h 8m) 1401/2002 tested (1182 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 8m) 1403/2002 tested (1184 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 8m) 1404/2002 tested (1185 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 8m) 1406/2002 tested (1187 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 8m) 1407/2002 tested (1188 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 8m) 1409/2002 tested (1190 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 7m) 1410/2002 tested (1191 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 42m, remaining: ~1h 7m) 1412/2002 tested (1193 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 42m, remaining: ~1h 7m) 1413/2002 tested (1194 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 42m, remaining: ~1h 7m) 1415/2002 tested (1196 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 42m, remaining: ~1h 7m) 1416/2002 tested (1197 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 42m, remaining: ~1h 7m) 1417/2002 tested (1198 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 42m, remaining: ~1h 6m) 1419/2002 tested (1200 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 43m, remaining: ~1h 6m) 1420/2002 tested (1201 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 6m) 1422/2002 tested (1203 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 6m) 1423/2002 tested (1204 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 6m) 1425/2002 tested (1206 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 6m) 1426/2002 tested (1207 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 5m) 1428/2002 tested (1209 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 44m, remaining: ~1h 5m) 1429/2002 tested (1210 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 44m, remaining: ~1h 5m) 1431/2002 tested (1212 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 44m, remaining: ~1h 5m) 1432/2002 tested (1213 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 44m, remaining: ~1h 5m) 1434/2002 tested (1215 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 44m, remaining: ~1h 5m) 1435/2002 tested (1216 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 44m, remaining: ~1h 4m) 1437/2002 tested (1218 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 45m, remaining: ~1h 4m) 1438/2002 tested (1219 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 45m, remaining: ~1h 4m) 1440/2002 tested (1221 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 45m, remaining: ~1h 4m) 1441/2002 tested (1222 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 4m) 1443/2002 tested (1224 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 4m) 1444/2002 tested (1225 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 3m) 1446/2002 tested (1227 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 3m) 1447/2002 tested (1228 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 3m) 1449/2002 tested (1230 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 3m) 1450/2002 tested (1231 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 3m) 1452/2002 tested (1233 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 2m) 1453/2002 tested (1234 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 2m) 1454/2002 tested (1235 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 47m, remaining: ~1h 2m) 1456/2002 tested (1237 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 47m, remaining: ~1h 2m) 1457/2002 tested (1238 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 47m, remaining: ~1h 2m) 1459/2002 tested (1240 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 47m, remaining: ~1h 2m) 1460/2002 tested (1241 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 1m) 1462/2002 tested (1243 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 1m) 1463/2002 tested (1244 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~1h 1m) 1465/2002 tested (1246 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~1h 1m) 1466/2002 tested (1247 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~1h 1m) 1468/2002 tested (1249 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~1h 1m) 1469/2002 tested (1250 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~1h 0m) 1471/2002 tested (1252 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~1h 0m) 1472/2002 tested (1253 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 49m, remaining: ~1h 0m) 1474/2002 tested (1255 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 49m, remaining: ~1h 0m) 1475/2002 tested (1256 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 49m, remaining: ~1h 0m) 1477/2002 tested (1258 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 49m, remaining: ~1h 0m) 1478/2002 tested (1259 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 49m, remaining: ~59m) 1480/2002 tested (1261 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 49m, remaining: ~59m) 1481/2002 tested (1262 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~59m) 1483/2002 tested (1264 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~59m) 1484/2002 tested (1265 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~59m) 1486/2002 tested (1267 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~59m) 1487/2002 tested (1268 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~58m) 1489/2002 tested (1270 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~58m) 1490/2002 tested (1271 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 51m, remaining: ~58m) 1491/2002 tested (1272 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 51m, remaining: ~58m) 1493/2002 tested (1274 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 51m, remaining: ~58m) 1494/2002 tested (1275 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 51m, remaining: ~58m) 1496/2002 tested (1277 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 51m, remaining: ~57m) 1497/2002 tested (1278 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 51m, remaining: ~57m) 1499/2002 tested (1280 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 52m, remaining: ~57m) 1500/2002 tested (1281 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~57m) 1502/2002 tested (1283 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~57m) 1503/2002 tested (1284 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~56m) 1505/2002 tested (1286 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~56m) 1506/2002 tested (1287 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~56m) 1508/2002 tested (1289 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 53m, remaining: ~56m) 1509/2002 tested (1290 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 53m, remaining: ~56m) 1511/2002 tested (1292 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 53m, remaining: ~56m) 1512/2002 tested (1293 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 53m, remaining: ~55m) 1514/2002 tested (1295 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 53m, remaining: ~55m) 1515/2002 tested (1296 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 53m, remaining: ~55m) 1517/2002 tested (1298 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 54m, remaining: ~55m) 1518/2002 tested (1299 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 54m, remaining: ~55m) 1520/2002 tested (1301 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 54m, remaining: ~55m) 1521/2002 tested (1302 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~54m) 1523/2002 tested (1304 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~54m) 1524/2002 tested (1305 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~54m) 1526/2002 tested (1307 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 55m, remaining: ~54m) 1527/2002 tested (1308 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 55m, remaining: ~54m) 1528/2002 tested (1309 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 55m, remaining: ~54m) 1530/2002 tested (1311 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 55m, remaining: ~53m) 1531/2002 tested (1312 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 55m, remaining: ~53m) 1533/2002 tested (1314 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 55m, remaining: ~53m) 1534/2002 tested (1315 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 56m, remaining: ~53m) 1536/2002 tested (1317 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 56m, remaining: ~53m) 1537/2002 tested (1318 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 56m, remaining: ~53m) 1539/2002 tested (1320 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 56m, remaining: ~52m) 1540/2002 tested (1321 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~52m) 1542/2002 tested (1323 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~52m) 1543/2002 tested (1324 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~52m) 1545/2002 tested (1326 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~52m) 1546/2002 tested (1327 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~52m) 1548/2002 tested (1329 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~51m) 1549/2002 tested (1330 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~51m) 1551/2002 tested (1332 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~51m) 1552/2002 tested (1333 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 58m, remaining: ~51m) 1554/2002 tested (1335 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 58m, remaining: ~51m) 1555/2002 tested (1336 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 58m, remaining: ~50m) 1557/2002 tested (1338 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 58m, remaining: ~50m) 1558/2002 tested (1339 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 58m, remaining: ~50m) 1560/2002 tested (1341 survived, 76 timed out)
Mutation testing 77% (elapsed: ~2h 58m, remaining: ~50m) 1561/2002 tested (1342 survived, 76 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~50m) 1563/2002 tested (1344 survived, 76 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~50m) 1564/2002 tested (1345 survived, 76 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~50m) 1565/2002 tested (1346 survived, 76 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~49m) 1567/2002 tested (1348 survived, 76 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~49m) 1568/2002 tested (1349 survived, 76 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~49m) 1570/2002 tested (1351 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 0m, remaining: ~49m) 1571/2002 tested (1352 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 0m, remaining: ~49m) 1573/2002 tested (1354 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 0m, remaining: ~49m) 1574/2002 tested (1355 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 0m, remaining: ~48m) 1576/2002 tested (1357 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 0m, remaining: ~48m) 1577/2002 tested (1358 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 0m, remaining: ~48m) 1579/2002 tested (1360 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 1m, remaining: ~48m) 1580/2002 tested (1361 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~48m) 1582/2002 tested (1363 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~47m) 1583/2002 tested (1364 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~47m) 1585/2002 tested (1366 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~47m) 1586/2002 tested (1367 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~47m) 1588/2002 tested (1369 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 2m, remaining: ~47m) 1589/2002 tested (1370 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 2m, remaining: ~47m) 1591/2002 tested (1372 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 2m, remaining: ~46m) 1592/2002 tested (1373 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 2m, remaining: ~46m) 1594/2002 tested (1375 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 2m, remaining: ~46m) 1595/2002 tested (1376 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 2m, remaining: ~46m) 1597/2002 tested (1378 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 3m, remaining: ~46m) 1598/2002 tested (1379 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 3m, remaining: ~46m) 1599/2002 tested (1380 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 3m, remaining: ~45m) 1601/2002 tested (1382 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~45m) 1602/2002 tested (1383 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~45m) 1604/2002 tested (1385 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~45m) 1605/2002 tested (1386 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 4m, remaining: ~45m) 1607/2002 tested (1388 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 4m, remaining: ~45m) 1608/2002 tested (1389 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 4m, remaining: ~44m) 1610/2002 tested (1391 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 4m, remaining: ~44m) 1611/2002 tested (1392 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 4m, remaining: ~44m) 1613/2002 tested (1394 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 4m, remaining: ~44m) 1614/2002 tested (1395 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 5m, remaining: ~44m) 1616/2002 tested (1397 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 5m, remaining: ~44m) 1617/2002 tested (1398 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 5m, remaining: ~43m) 1619/2002 tested (1400 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 5m, remaining: ~43m) 1620/2002 tested (1401 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~43m) 1622/2002 tested (1403 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~43m) 1623/2002 tested (1404 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~43m) 1625/2002 tested (1406 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~43m) 1626/2002 tested (1407 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~42m) 1628/2002 tested (1409 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~42m) 1629/2002 tested (1410 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~42m) 1631/2002 tested (1412 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~42m) 1632/2002 tested (1413 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 7m, remaining: ~42m) 1634/2002 tested (1415 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 7m, remaining: ~42m) 1635/2002 tested (1416 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 7m, remaining: ~41m) 1636/2002 tested (1417 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 7m, remaining: ~41m) 1638/2002 tested (1419 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 7m, remaining: ~41m) 1639/2002 tested (1420 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 7m, remaining: ~41m) 1641/2002 tested (1422 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~41m) 1642/2002 tested (1423 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~40m) 1644/2002 tested (1425 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~40m) 1645/2002 tested (1426 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~40m) 1647/2002 tested (1428 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~40m) 1648/2002 tested (1429 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~40m) 1650/2002 tested (1431 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 9m, remaining: ~40m) 1651/2002 tested (1432 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 9m, remaining: ~39m) 1653/2002 tested (1434 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 9m, remaining: ~39m) 1654/2002 tested (1435 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 9m, remaining: ~39m) 1656/2002 tested (1437 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 9m, remaining: ~39m) 1657/2002 tested (1438 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 9m, remaining: ~39m) 1659/2002 tested (1440 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 10m, remaining: ~39m) 1660/2002 tested (1441 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~38m) 1662/2002 tested (1443 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~38m) 1663/2002 tested (1444 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~38m) 1665/2002 tested (1446 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~38m) 1666/2002 tested (1447 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~38m) 1668/2002 tested (1449 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 11m, remaining: ~38m) 1669/2002 tested (1450 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 11m, remaining: ~37m) 1671/2002 tested (1452 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 11m, remaining: ~37m) 1672/2002 tested (1453 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 11m, remaining: ~37m) 1673/2002 tested (1454 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 11m, remaining: ~37m) 1675/2002 tested (1456 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 11m, remaining: ~37m) 1676/2002 tested (1457 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 12m, remaining: ~37m) 1678/2002 tested (1459 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 12m, remaining: ~36m) 1679/2002 tested (1460 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 12m, remaining: ~36m) 1681/2002 tested (1462 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~36m) 1682/2002 tested (1463 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~36m) 1684/2002 tested (1465 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~36m) 1685/2002 tested (1466 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 13m, remaining: ~36m) 1687/2002 tested (1468 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 13m, remaining: ~35m) 1688/2002 tested (1469 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 13m, remaining: ~35m) 1690/2002 tested (1471 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 13m, remaining: ~35m) 1691/2002 tested (1472 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 13m, remaining: ~35m) 1693/2002 tested (1474 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 13m, remaining: ~35m) 1694/2002 tested (1475 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 14m, remaining: ~35m) 1696/2002 tested (1477 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 14m, remaining: ~34m) 1697/2002 tested (1478 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 14m, remaining: ~34m) 1699/2002 tested (1480 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 14m, remaining: ~34m) 1700/2002 tested (1481 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~34m) 1702/2002 tested (1483 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~34m) 1703/2002 tested (1484 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 15m, remaining: ~33m) 1705/2002 tested (1486 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 15m, remaining: ~33m) 1706/2002 tested (1487 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 15m, remaining: ~33m) 1708/2002 tested (1489 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 15m, remaining: ~33m) 1709/2002 tested (1490 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 15m, remaining: ~33m) 1710/2002 tested (1491 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 15m, remaining: ~33m) 1712/2002 tested (1493 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 16m, remaining: ~33m) 1713/2002 tested (1494 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 16m, remaining: ~32m) 1715/2002 tested (1496 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 16m, remaining: ~32m) 1716/2002 tested (1497 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 16m, remaining: ~32m) 1718/2002 tested (1499 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 16m, remaining: ~32m) 1719/2002 tested (1500 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 16m, remaining: ~32m) 1721/2002 tested (1502 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~32m) 1722/2002 tested (1503 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~31m) 1724/2002 tested (1505 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~31m) 1725/2002 tested (1506 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~31m) 1727/2002 tested (1508 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~31m) 1728/2002 tested (1509 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~31m) 1730/2002 tested (1511 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 18m, remaining: ~30m) 1731/2002 tested (1512 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 18m, remaining: ~30m) 1733/2002 tested (1514 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 18m, remaining: ~30m) 1734/2002 tested (1515 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 18m, remaining: ~30m) 1736/2002 tested (1517 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 18m, remaining: ~30m) 1737/2002 tested (1518 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 18m, remaining: ~30m) 1739/2002 tested (1520 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 19m, remaining: ~29m) 1740/2002 tested (1521 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~29m) 1742/2002 tested (1523 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~29m) 1743/2002 tested (1524 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~29m) 1745/2002 tested (1526 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~29m) 1746/2002 tested (1527 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~29m) 1747/2002 tested (1528 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 20m, remaining: ~28m) 1749/2002 tested (1530 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 20m, remaining: ~28m) 1750/2002 tested (1531 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 20m, remaining: ~28m) 1752/2002 tested (1533 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 20m, remaining: ~28m) 1753/2002 tested (1534 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 20m, remaining: ~28m) 1755/2002 tested (1536 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 20m, remaining: ~28m) 1756/2002 tested (1537 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 21m, remaining: ~27m) 1758/2002 tested (1539 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 21m, remaining: ~27m) 1759/2002 tested (1540 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 21m, remaining: ~27m) 1761/2002 tested (1542 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~27m) 1762/2002 tested (1543 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~27m) 1764/2002 tested (1545 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~27m) 1765/2002 tested (1546 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 22m, remaining: ~26m) 1767/2002 tested (1548 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 22m, remaining: ~26m) 1768/2002 tested (1549 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 22m, remaining: ~26m) 1770/2002 tested (1551 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 22m, remaining: ~26m) 1771/2002 tested (1552 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 22m, remaining: ~26m) 1773/2002 tested (1554 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 22m, remaining: ~26m) 1774/2002 tested (1555 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 23m, remaining: ~25m) 1776/2002 tested (1557 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 23m, remaining: ~25m) 1777/2002 tested (1558 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 23m, remaining: ~25m) 1779/2002 tested (1560 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 23m, remaining: ~25m) 1780/2002 tested (1561 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~25m) 1782/2002 tested (1563 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~25m) 1783/2002 tested (1564 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 24m, remaining: ~24m) 1784/2002 tested (1565 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 24m, remaining: ~24m) 1786/2002 tested (1567 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 24m, remaining: ~24m) 1787/2002 tested (1568 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 24m, remaining: ~24m) 1789/2002 tested (1570 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 24m, remaining: ~24m) 1790/2002 tested (1571 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 24m, remaining: ~24m) 1792/2002 tested (1573 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 25m, remaining: ~23m) 1793/2002 tested (1574 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 25m, remaining: ~23m) 1795/2002 tested (1576 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 25m, remaining: ~23m) 1796/2002 tested (1577 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 25m, remaining: ~23m) 1798/2002 tested (1579 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 25m, remaining: ~23m) 1799/2002 tested (1580 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 25m, remaining: ~22m) 1801/2002 tested (1582 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~22m) 1802/2002 tested (1583 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~22m) 1804/2002 tested (1585 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~22m) 1805/2002 tested (1586 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~22m) 1807/2002 tested (1588 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~22m) 1808/2002 tested (1589 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~21m) 1810/2002 tested (1591 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 27m, remaining: ~21m) 1811/2002 tested (1592 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 27m, remaining: ~21m) 1812/2002 tested (1593 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 27m, remaining: ~21m) 1814/2002 tested (1595 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 27m, remaining: ~21m) 1815/2002 tested (1596 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 27m, remaining: ~21m) 1817/2002 tested (1598 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 27m, remaining: ~21m) 1818/2002 tested (1599 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 28m, remaining: ~20m) 1820/2002 tested (1601 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 28m, remaining: ~20m) 1821/2002 tested (1602 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~20m) 1823/2002 tested (1604 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~20m) 1824/2002 tested (1605 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~20m) 1826/2002 tested (1607 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~20m) 1827/2002 tested (1608 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 29m, remaining: ~19m) 1829/2002 tested (1610 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 29m, remaining: ~19m) 1830/2002 tested (1611 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 29m, remaining: ~19m) 1832/2002 tested (1613 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 29m, remaining: ~19m) 1833/2002 tested (1614 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 29m, remaining: ~19m) 1835/2002 tested (1616 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 29m, remaining: ~18m) 1836/2002 tested (1617 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 30m, remaining: ~18m) 1838/2002 tested (1619 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 30m, remaining: ~18m) 1839/2002 tested (1620 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 30m, remaining: ~18m) 1841/2002 tested (1622 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~18m) 1842/2002 tested (1623 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~18m) 1844/2002 tested (1625 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~17m) 1845/2002 tested (1626 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 31m, remaining: ~17m) 1847/2002 tested (1628 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 31m, remaining: ~17m) 1848/2002 tested (1629 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 31m, remaining: ~17m) 1849/2002 tested (1630 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 31m, remaining: ~17m) 1851/2002 tested (1632 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 31m, remaining: ~17m) 1852/2002 tested (1633 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 31m, remaining: ~16m) 1854/2002 tested (1635 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 32m, remaining: ~16m) 1855/2002 tested (1636 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 32m, remaining: ~16m) 1857/2002 tested (1638 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 32m, remaining: ~16m) 1858/2002 tested (1639 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 32m, remaining: ~16m) 1860/2002 tested (1641 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 32m, remaining: ~16m) 1861/2002 tested (1642 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~15m) 1863/2002 tested (1644 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 33m, remaining: ~15m) 1864/2002 tested (1645 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 33m, remaining: ~15m) 1866/2002 tested (1647 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 33m, remaining: ~15m) 1867/2002 tested (1648 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 33m, remaining: ~15m) 1869/2002 tested (1650 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 33m, remaining: ~15m) 1870/2002 tested (1651 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 33m, remaining: ~14m) 1872/2002 tested (1653 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 34m, remaining: ~14m) 1873/2002 tested (1654 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 34m, remaining: ~14m) 1875/2002 tested (1656 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 34m, remaining: ~14m) 1876/2002 tested (1657 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 34m, remaining: ~14m) 1877/2002 tested (1658 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 34m, remaining: ~14m) 1879/2002 tested (1660 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 34m, remaining: ~13m) 1880/2002 tested (1661 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 35m, remaining: ~13m) 1882/2002 tested (1663 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 35m, remaining: ~13m) 1883/2002 tested (1664 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 35m, remaining: ~13m) 1885/2002 tested (1666 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 35m, remaining: ~13m) 1886/2002 tested (1667 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 35m, remaining: ~13m) 1888/2002 tested (1669 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 35m, remaining: ~12m) 1889/2002 tested (1670 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 36m, remaining: ~12m) 1891/2002 tested (1672 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 36m, remaining: ~12m) 1892/2002 tested (1673 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 36m, remaining: ~12m) 1894/2002 tested (1675 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 36m, remaining: ~12m) 1895/2002 tested (1676 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 36m, remaining: ~11m) 1897/2002 tested (1678 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 36m, remaining: ~11m) 1898/2002 tested (1679 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 37m, remaining: ~11m) 1900/2002 tested (1681 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 37m, remaining: ~11m) 1901/2002 tested (1682 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 37m, remaining: ~11m) 1903/2002 tested (1684 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 37m, remaining: ~11m) 1904/2002 tested (1685 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 37m, remaining: ~10m) 1906/2002 tested (1687 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 37m, remaining: ~10m) 1907/2002 tested (1688 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 38m, remaining: ~10m) 1909/2002 tested (1690 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 38m, remaining: ~10m) 1910/2002 tested (1691 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 38m, remaining: ~10m) 1911/2002 tested (1692 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 38m, remaining: ~10m) 1913/2002 tested (1694 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 38m, remaining: ~10m) 1914/2002 tested (1695 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 38m, remaining: ~9m) 1916/2002 tested (1697 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 39m, remaining: ~9m) 1917/2002 tested (1698 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 39m, remaining: ~9m) 1919/2002 tested (1700 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 39m, remaining: ~9m) 1920/2002 tested (1701 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~9m) 1922/2002 tested (1703 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~9m) 1923/2002 tested (1704 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~8m) 1925/2002 tested (1706 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 40m, remaining: ~8m) 1926/2002 tested (1707 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 40m, remaining: ~8m) 1928/2002 tested (1709 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 40m, remaining: ~8m) 1929/2002 tested (1710 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 40m, remaining: ~8m) 1931/2002 tested (1712 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 40m, remaining: ~7m) 1932/2002 tested (1713 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 40m, remaining: ~7m) 1934/2002 tested (1715 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 41m, remaining: ~7m) 1935/2002 tested (1716 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 41m, remaining: ~7m) 1937/2002 tested (1718 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 41m, remaining: ~7m) 1938/2002 tested (1719 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 41m, remaining: ~7m) 1940/2002 tested (1721 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 41m, remaining: ~6m) 1941/2002 tested (1722 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~6m) 1943/2002 tested (1724 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 42m, remaining: ~6m) 1944/2002 tested (1725 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 42m, remaining: ~6m) 1946/2002 tested (1727 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 42m, remaining: ~6m) 1947/2002 tested (1728 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 42m, remaining: ~6m) 1948/2002 tested (1729 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 42m, remaining: ~5m) 1950/2002 tested (1731 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 42m, remaining: ~5m) 1951/2002 tested (1732 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 43m, remaining: ~5m) 1953/2002 tested (1734 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 43m, remaining: ~5m) 1954/2002 tested (1735 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 43m, remaining: ~5m) 1956/2002 tested (1737 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 43m, remaining: ~5m) 1957/2002 tested (1738 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 43m, remaining: ~4m) 1959/2002 tested (1740 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 43m, remaining: ~4m) 1960/2002 tested (1741 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 44m, remaining: ~4m) 1962/2002 tested (1743 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 44m, remaining: ~4m) 1963/2002 tested (1744 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 44m, remaining: ~4m) 1965/2002 tested (1746 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 44m, remaining: ~4m) 1966/2002 tested (1747 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 44m, remaining: ~3m) 1968/2002 tested (1749 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 44m, remaining: ~3m) 1969/2002 tested (1750 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 45m, remaining: ~3m) 1971/2002 tested (1752 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 45m, remaining: ~3m) 1972/2002 tested (1753 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 45m, remaining: ~3m) 1974/2002 tested (1755 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 45m, remaining: ~3m) 1975/2002 tested (1756 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 45m, remaining: ~2m) 1977/2002 tested (1758 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 45m, remaining: ~2m) 1981/2002 tested (1759 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 46m, remaining: ~2m) 1982/2002 tested (1760 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 46m, remaining: ~2m) 1984/2002 tested (1762 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 46m, remaining: ~1m) 1985/2002 tested (1763 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 46m, remaining: ~1m) 1987/2002 tested (1765 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 46m, remaining: ~1m) 1988/2002 tested (1766 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 46m, remaining: ~1m) 1990/2002 tested (1768 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 47m, remaining: ~1m) 1991/2002 tested (1769 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 47m, remaining: ~1m) 1992/2002 tested (1770 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 47m, remaining: <1m) 1994/2002 tested (1772 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 47m, remaining: <1m) 1995/2002 tested (1773 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 47m, remaining: <1m) 1997/2002 tested (1775 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 47m, remaining: <1m) 1998/2002 tested (1776 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 48m, remaining: <1m) 2000/2002 tested (1778 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 48m, remaining: <1m) 2001/2002 tested (1779 survived, 76 timed out)

All tests
  ✓ All tests (killed 146)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition + 1);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition * 2);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition - 1);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "q"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "function"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("fulfilled", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("rejected", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("pending", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", undefined);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.isNodeJS) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.isNodeJS === false) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.isNodeJS !== true) {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition());

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define("foo");

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "object") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "function") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (!ses.ok) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.maybeOk()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" ^ typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined" && typeof document !== "undefined") {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.run();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.bind();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, null);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, {});

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, 0);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS === false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (typeof isNodeJS === "undefined") {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.run();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.bind();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, "0");

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush.call(null), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain + 1) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.foo) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (domain && false) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (flushing || true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "function") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({});

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush(1));

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush(function () {}));

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush());

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush(1));

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush(function () {}));

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "function") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(requestTick(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(0), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing === true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (1 + 1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while ("hello");

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while ([]);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index >= this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > 0) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index <= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index == length) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index >= length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 0) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index > this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index === this.length) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index - 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] = 0, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i != this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] < value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] > value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback(value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.length));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.prototype));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.constructor));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call({}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 0, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, length - index, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, undefined));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, "foo"));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && key !== "prototype") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || key === "prototype") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && key !== "length") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.hasOwnProperty(key))) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (key in this(object, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, this[key])) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, window[key])) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, global[key])) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[key]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.value) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.valueOf()) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.toString()) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && true; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p || false; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.slice()) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.filter(function (x) {
+     return x !== undefined;
+   })) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.map(function (x) {
+     return x + 1;
+   })) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__" + 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.source.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack + "foo");

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.toUpperCase());

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.code);

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.push("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.pop("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + " ");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\t");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\r\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n")[0]);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n").reverse()[0]);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n").slice(1));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "error", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "message", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = array.length - 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i = lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && line.length > 0) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && line.indexOf(" ") > -1) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isExternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isBrowserFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line + 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line - 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line * 2) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ").slice(1).join(" "));

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ").slice(2).join(" "));

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "0"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.trim());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.toLowerCase());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ").join(""));

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] > 1) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] === 1) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] < 1) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split("@")[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.replace(/^.*@/, ""));

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.substring(stackLine.indexOf("@") + 1));

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[2]) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "1"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], undefined(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[4])];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[0](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[1](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[2](stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("at ")[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("at ")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("at ")[2]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\r");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\v");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[lines.length - 1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("^") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[1]) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== "function" && typeof console !== "undefined") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.toString(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(this, arguments), arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(null, arguments), arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(undefined, arguments), arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:558:20
-       var deferred = object_create(defer.prototype);
+       var deferred = Object.create(defer.prototype);

[Survived] PrecomputedMutator
q.js:564:27
-               messages.push(args);
+               messages.push(args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === 0) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(promise, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(deferred.promise, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(Q.resolve(promise), args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (resolvedPromise) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.source);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(fulfill(resolvedPromise));

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === undefined) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === "foo") {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise || isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (typeof resolvedPromise === "undefined") {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && hasStacks && false) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 2);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.includes("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\\") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(new Error(), message);

[Survived] PrecomputedMutator
q.js:624:62
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(["foo"]));

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(Q.resolve(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== false) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(resolve(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(notify(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(Q.reject("error")));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (rejectedPromise) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (deferred.promise) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[0](progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress - 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress * 2);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(new Error("foo"));

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(new TypeError("bar"));

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice("hello", 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(function () {}, 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, null));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(false);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "object") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver.constructor !== Function) {

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject(new Error("Testing mutation")));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify("Testing mutation"));

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.makeNodeResolver, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify("progress"));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(10));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.fulfill(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("Error");

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.resolve(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.all(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * 2).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x - 1).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x > y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i >= len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i + 1) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.reject(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.resolve(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.all(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i - 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 2]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return deferred.promise(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return deferred.reject(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return deferred.notify(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === NaN) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (typeof inspect === "undefined") {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op] + 1) {

[Survived] PrecomputedMutator
q.js:808:26
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args, null);

[Survived] PrecomputedMutator
q.js:808:26
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args, undefined);

[Survived] PrecomputedMutator
q.js:808:26
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args, "foo");

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({}, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op * 2, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op - 1, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, undefined);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, "foo");

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = resolve(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(exception.message);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error(exception));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(exception.toString());

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.toString()) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.valueOf()) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed("foo") : value;

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done === true) {

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done !== false) {

[Survived] PrecomputedMutator
q.js:883:30
-               deferred.resolve(_fulfilled(value));
+               deferred.resolve(_fulfilled(value, true));

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed("value");

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === true) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.resolve(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.progress(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue + 1);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue * 2);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue - 1);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(1 + callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback + 1);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.toString());

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.then(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.resolve(value));

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fapply(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.fbind(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall({}).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, "extra argument");

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, null);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(Promise.reject()).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, undefined, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, false);

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.thenResolve(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.thenReject(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value * 2;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value - 1;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.resolve(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.defer(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve("foo");

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return this.then.catch(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return this.then.finally(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return this.then.then(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return Q.reject(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Promise.reject()).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject({});

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPending(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(undefined)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(0)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "fulfilled" && inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isObject(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isRejected(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.then()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.catch()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.finally()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.reason().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromise(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.then()) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.then(function () {})) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.then(function () {
+     return reason;
+   })) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections.valueOf()) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections.toString()) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (typeof trackUnhandledRejections === "boolean") {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) > -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.some(p => p === promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     throw new Error("unhandled rejection");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.reject(reason);
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.reject(new Error("unhandled rejection"));
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "foo", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + 1, reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "bar", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.name, promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function () {
+     throw new Error("rejected");
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function () {
+     return "fulfilled";
+   }));

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then(function () {
+     return "rejected";
+   }));

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack === "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined" && typeof reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.toLowerCase());

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.split("").reverse().join(""));

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.length);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.pop("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.shift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.splice(0, 1), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.filter(function (rejection) {
+     return rejection !== promise;
+   }), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at == -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at >= 0) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.indexOf(promise) !== -1);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.includes(promise));

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (reportedUnhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (reportedUnhandledRejections.indexOf(promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (reportedUnhandledRejections.length === 0) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] = "buggy reason", promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] = unhandledReasons[at] + "buggy reason", promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] = null, promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function () {
+     throw new Error("Something went wrong");
+   }));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function () {
+     return Q.reject("Something went wrong");
+   }));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function () {
+     return Q.fulfill("Something went wrong");
+   }));

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, reportedUnhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport * 2, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, array.length);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, unhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 10);

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || true) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection({});

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, {});

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.reason, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "some other reason");

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args, null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(0, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args[0]);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, [].concat(args));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].call(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].bind(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value + 1, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value * 2, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value - 1, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args[0]);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice(1));

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.length);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.filter());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_entries(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.promise);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.cancel(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error());

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[1]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[2]);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.length);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.resolve(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.defer(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(0).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, "error");

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.catch().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.finally().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(array.length);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return rejected.apply(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(0, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "undefined" && "undefined") {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg * 2);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg - 1);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return resolve(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return deferred.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.rejected) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isFulfilled) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value * 2);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, errback, result.value);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, errback, result.value, result.value);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, undefined, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, undefined);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, null);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, function () {});

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg * 2);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg - 1);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception) && false) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception) || true) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception) ^ true) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration = false(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration = true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration = !isStopIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.name)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return resolve(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, errback, callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback, result);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.defer(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, resolve, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, resolve);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, function (error) {
+     return reject(error);
+   });

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.toString(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(undefined, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(undefined, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(function () {}, "throw"));

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(undefined, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return null();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return undefined();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.resolve(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(null))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this, arguments))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, every(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([1, 2, 3])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(undefined)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args, null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args, self);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args, undefined);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.reverse());

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.all(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(object.foo).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, undefined);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(args));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.resolve(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.notify(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, undefined);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key, []]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.reject(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.resolve(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.all(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q({}).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", ["key"]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q("foo").dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, "new value"]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("apply", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.reject(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.defer(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.when(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q({}).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, "value"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, null]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.defer(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("patch", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, 1]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice()]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.concat()]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.reject(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.resolve(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.delay(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q("foo").dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(args, 2)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(undefined, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(Q.reject).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("eval", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 1, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 1]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply" + "call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, 1]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, "foo"]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, null]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.reject(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.resolve(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.defer(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q("foo").dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("concat", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.length + 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(null)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 3), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1 + 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("post", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 2))]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, arguments.length - 1))]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q({});

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, arguments.length - 1);

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1, 2))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.resolve(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.foo).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.bar).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.baz).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("join", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [undefined]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [undefined]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [null]);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "fulfilled" && promise.inspect().value === undefined

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return null;
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     throw new Error();
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return Q.reject(new Error());
+   })) &&

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === 0 && promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat([Q.reject()]));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.filter(function (promise) {
+     return promise.inspect().state === "rejected";
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index - 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index * 2,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               undefined(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.concat([]));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.filter(function () {
+     return true;
+   }));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return race(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(undefined);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onRejected, onFulfilled, onProgress));

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, undefined, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.cancel(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve("foo");

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < promises.length) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promises[index].state === "rejected") {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.inspect(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.message);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(deferred.reject(rejection));

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(deferred.resolve(rejection));

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return some(this);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "none", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "any");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.when);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_forEach(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(0, promises.length - 1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.reverse(), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.when);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function (value) {
+     return value;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function (value) {
+     return value + 1;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(0);

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.reverse()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.filter(function (promise) {
+     return promise.isFulfilled();
+   })).allSettled();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(noop, noop, noop);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.inspect(), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(noop), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(function () {
+     return promise;
+   }), regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, promise.regardless());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, Q.regardless());

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, null);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(0).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, rejected.then(function () {
+     throw new Error("rejected");
+   }));

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, rejected.then(function () {
+     throw new Error("rejected");
+   }, function () {
+     throw new Error("rejected");
+   }));

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, rejected.then(function () {
+     throw new Error("rejected");
+   }, function () {
+     throw new Error("rejected");
+   }, function () {
+     throw new Error("rejected");
+   }));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(rejected, null);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, deferred.reject(err));

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, progressed, void 0);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(progressed, void 0, void 0);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, void 0);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(null).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(undefined).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(NaN, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, () => {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(() => {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, () => {});

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.reject(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.defer(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.fcall(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q.reject(new Error("Test error")))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.bind(null));

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.apply(null));

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.call(null));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply === "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply === "undefined") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.defer(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.apply());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.bind());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, 1);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, null);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.reject(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.defer(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.fcall(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q("foo").done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, void 0, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.catch());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.finally());

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, null, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, undefined, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, void 0) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.call(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.apply(null));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, null);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(NaN, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError(new Error()));

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError(null));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Timeout"));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, error.message);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, error.stack);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(Q.reject("error")).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(-1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(NaN, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error());

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           undefined(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           undefined(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === undefined) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q({}).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(-1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (error, result) {}));

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([1])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.filter(function (arg) {
+     return arg !== 1;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify(error));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.length - 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice({}, 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = defer.notify();

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.reverse()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback === null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(baseArgs, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(deferred.resolve));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.filter(function () {
+     return true;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(0);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nfbind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nbind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 1, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat([1]));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.filter(function (x) {
+     return x !== 1;
+   }));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 4), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, -1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (error) {}));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply({});

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(() => {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat([1, 2, 3])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.filter(function (arg) {
+     return arg !== 1;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.pop());

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + "!", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.length, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.filter(function (x) {
+     return x !== 1;
+   }));

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("head", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(args);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(true));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(false));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(0).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs, 0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, nodeArgs.length);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {
+     throw new Error("Test error");
+   }]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return 0(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(0).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback.bind(null));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback.apply(null));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback.call(null));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback + 1) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback()) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(NaN, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, "value");

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error("some other error"));

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.reject();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.resolve();

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head" + "tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head" + "tail" + "head");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.then("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.catch("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.finally("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + "tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail".toUpperCase());

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(new Error("Queue is closed"));

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.reject(error));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: null(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(new Error("Can't get value from closed queue")))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.resolve = null(end);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.09 |      146 |        76 |       1780 |        0 |        0 |
 q.js     |   11.21 |      146 |        76 |       1758 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         22 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m04:29:38 (3313) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m04:29:38 (3313) INFO MutationTestExecutor[39m Done in 228 minutes 22 seconds.

real	228m24.144s
user	40m35.034s
sys	6m58.633s
