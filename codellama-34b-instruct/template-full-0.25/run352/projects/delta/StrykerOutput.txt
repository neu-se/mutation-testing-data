*** using precomputed mutations ***
[32m01:41:16 (2858) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m01:41:16 (2858) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m01:41:16 (2858) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m01:41:16 (2858) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m01:41:16 (2858) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m01:41:17 (2858) INFO ProjectReader[39m Found 4 of 1895 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 765 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.25/mutants.json ***
Mutant 0 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 1 in AttributeMap.ts: typeof a !== 'object' replaced with a === undefined
Mutant 2 in AttributeMap.ts: typeof a !== 'object' replaced with a === 'object'
Mutant 3 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 4 in AttributeMap.ts: typeof b !== 'object' replaced with b.constructor !== Object
Mutant 5 in AttributeMap.ts: typeof b !== 'object' replaced with !Object.prototype.hasOwnProperty.call(b, 'constructor')
Mutant 6 in AttributeMap.ts: b replaced with a
Mutant 7 in AttributeMap.ts: b replaced with b[key]
Mutant 8 in AttributeMap.ts: b replaced with a[key]
Mutant 9 in AttributeMap.ts: !keepNull replaced with keepNull
Mutant 10 in AttributeMap.ts: !keepNull replaced with !keepNull || true
Mutant 11 in AttributeMap.ts: !keepNull replaced with keepNull && false
Mutant 12 in AttributeMap.ts: attributes replaced with attributes.length
Mutant 13 in AttributeMap.ts: attributes replaced with attributes[0]
Mutant 14 in AttributeMap.ts: attributes replaced with attributes.slice(1)
Mutant 15 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] === null
Mutant 16 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] !== undefined
Mutant 17 in AttributeMap.ts: attributes[key] != null replaced with !attributes[key]
Mutant 18 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key in b) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 19 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key in a && key in b) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 20 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key in a || key in b) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 21 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] !== null && b[key] === undefined
Mutant 22 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] !== undefined && b[key] !== undefined
Mutant 23 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] !== undefined && b[key] === null
Mutant 24 in AttributeMap.ts: attributes replaced with Object.keys(attributes).length
Mutant 25 in AttributeMap.ts: attributes replaced with Object.keys(attributes).length > 0
Mutant 26 in AttributeMap.ts: attributes replaced with Object.keys(attributes).length === 0
Mutant 27 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 28 in AttributeMap.ts: typeof a !== 'object' replaced with a !== b
Mutant 29 in AttributeMap.ts: typeof a !== 'object' replaced with !a
Mutant 30 in AttributeMap.ts: typeof b !== 'object' replaced with b === undefined
Mutant 31 in AttributeMap.ts: typeof b !== 'object' replaced with b !== 'object'
Mutant 32 in AttributeMap.ts: typeof b !== 'object' replaced with !b
Mutant 33 in AttributeMap.ts: a replaced with b
Mutant 34 in AttributeMap.ts: a replaced with a + b
Mutant 35 in AttributeMap.ts: a replaced with a - b
Mutant 36 in AttributeMap.ts: b replaced with a
Mutant 37 in AttributeMap.ts: b replaced with null
Mutant 38 in AttributeMap.ts: b replaced with undefined
Mutant 39 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] !== b[key]
Mutant 40 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with !isEqual(a[key], b[key]) && a[key] !== b[key]
Mutant 41 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with !isEqual(a[key], b[key]) || a[key] !== b[key]
Mutant 42 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] === b[key])
Mutant 43 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] !== b[key])
Mutant 44 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] > b[key])
Mutant 45 in AttributeMap.ts: isEqual replaced with a[key] !== b[key] && a[key] !== null
Mutant 46 in AttributeMap.ts: a[key] replaced with a[key] + 1
Mutant 47 in AttributeMap.ts: a[key] replaced with a[key] - 1
Mutant 48 in AttributeMap.ts: a[key] replaced with a[key] * 2
Mutant 49 in AttributeMap.ts: b[key] replaced with b[key] + 1
Mutant 50 in AttributeMap.ts: b[key] replaced with b[key] * 2
Mutant 51 in AttributeMap.ts: attributes replaced with attributes.length
Mutant 52 in AttributeMap.ts: attributes replaced with Object.keys(attributes).length
Mutant 53 in AttributeMap.ts: attributes replaced with Object.values(attributes).length
Mutant 54 in AttributeMap.ts: base replaced with base.invert()
Mutant 55 in AttributeMap.ts: base replaced with base.invert(attr)
Mutant 56 in AttributeMap.ts: base replaced with base.invert(attr, base)
Mutant 57 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] || attr[key] === undefined
Mutant 58 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] === attr[key] && attr[key] !== undefined
Mutant 59 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] && attr[key] === undefined
Mutant 60 in AttributeMap.ts: attr replaced with base
Mutant 61 in AttributeMap.ts: attr replaced with attr[key]
Mutant 62 in AttributeMap.ts: attr replaced with base[key]
Mutant 63 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] !== base[key] || base[key] === undefined
Mutant 64 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] !== base[key] && base[key] !== undefined
Mutant 65 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] === base[key] && base[key] === undefined
Mutant 66 in AttributeMap.ts: typeof a !== 'object' replaced with a !== 'object'
Mutant 67 in AttributeMap.ts: typeof a !== 'object' replaced with a !== Object
Mutant 68 in AttributeMap.ts: typeof a !== 'object' replaced with a !== 'object' && typeof a !== 'function'
Mutant 69 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 70 in AttributeMap.ts: typeof b !== 'object' replaced with b instanceof Object
Mutant 71 in AttributeMap.ts: typeof b !== 'object' replaced with Object.prototype.toString.call(b) !== '[object Object]'
Mutant 72 in AttributeMap.ts: !priority replaced with priority
Mutant 73 in AttributeMap.ts: !priority replaced with !b
Mutant 74 in AttributeMap.ts: !priority replaced with a && b
Mutant 75 in AttributeMap.ts: b replaced with a
Mutant 76 in AttributeMap.ts: b replaced with b && a
Mutant 77 in AttributeMap.ts: b replaced with a || b
Mutant 78 in AttributeMap.ts: a[key] === undefined replaced with a[key] !== undefined
Mutant 79 in AttributeMap.ts: a[key] === undefined replaced with b[key] === undefined
Mutant 80 in AttributeMap.ts: a[key] === undefined replaced with a[key] === null
Mutant 81 in AttributeMap.ts: attributes replaced with Object.keys(a)
Mutant 82 in AttributeMap.ts: attributes replaced with Object.values(a)
Mutant 83 in AttributeMap.ts: attributes replaced with Object.entries(a)
Mutant 84 in Delta.ts: 0 replaced with 1
Mutant 85 in Delta.ts: 0 replaced with 'a'
Mutant 86 in Delta.ts: 0 replaced with ' '
Mutant 87 in Delta.ts: typeof a !== 'object' || a === null replaced with typeof a !== 'object'
Mutant 88 in Delta.ts: typeof a !== 'object' || a === null replaced with a === null
Mutant 89 in Delta.ts: typeof a !== 'object' || a === null replaced with a === undefined
Mutant 90 in Delta.ts: typeof b !== 'object' || b === null replaced with typeof b !== 'object'
Mutant 91 in Delta.ts: typeof b !== 'object' || b === null replaced with b !== null
Mutant 92 in Delta.ts: typeof b !== 'object' || b === null replaced with typeof b !== 'object' && b !== null
Mutant 93 in Delta.ts: a replaced with a + 1
Mutant 94 in Delta.ts: a replaced with b
Mutant 95 in Delta.ts: a replaced with a * b
Mutant 96 in Delta.ts: b replaced with a
Mutant 97 in Delta.ts: b replaced with b[0]
Mutant 98 in Delta.ts: b replaced with b.length
Mutant 99 in Delta.ts: b replaced with a
Mutant 100 in Delta.ts: b replaced with c
Mutant 101 in Delta.ts: b replaced with 1
Mutant 102 in Delta.ts: !handler replaced with handler === undefined
Mutant 103 in Delta.ts: !handler replaced with handler !== null
Mutant 104 in Delta.ts: !handler replaced with typeof handler !== 'function'
Mutant 105 in Delta.ts: Array.isArray(ops) replaced with ops.length > 0
Mutant 106 in Delta.ts: Array.isArray(ops) replaced with ops.length === 0
Mutant 107 in Delta.ts: Array.isArray(ops) replaced with ops.length > 1
Mutant 108 in Delta.ts: ops replaced with ops.slice()
Mutant 109 in Delta.ts: ops replaced with ops.concat([])
Mutant 110 in Delta.ts: ops replaced with ops.filter(() => true)
Mutant 111 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops != null && Array.isArray(ops)
Mutant 112 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops != null && Array.isArray(ops.ops) && ops.ops.length > 0
Mutant 113 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops != null && Array.isArray(ops.ops) && ops.ops.length === 0
Mutant 114 in Delta.ts: Array.isArray replaced with !Array.isArray
Mutant 115 in Delta.ts: ops.ops replaced with ops.ops[0]
Mutant 116 in Delta.ts: ops.ops replaced with ops.ops.slice(1)
Mutant 117 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with typeof arg === 'number'
Mutant 118 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg.length === 1
Mutant 119 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg.length > 0
Mutant 120 in Delta.ts: attributes replaced with attributes = {}
Mutant 121 in Delta.ts: attributes replaced with attributes = null
Mutant 122 in Delta.ts: attributes replaced with attributes = undefined
Mutant 123 in Delta.ts: this.push replaced with this.ops
Mutant 124 in Delta.ts: this.push replaced with this.ops.length
Mutant 125 in Delta.ts: length <= 0 replaced with length < 0
Mutant 126 in Delta.ts: length <= 0 replaced with length > 0
Mutant 127 in Delta.ts: length <= 0 replaced with length === 0
Mutant 128 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length < 0
Mutant 129 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length !== 0
Mutant 130 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length === 0
Mutant 131 in Delta.ts: attributes replaced with attributes.length
Mutant 132 in Delta.ts: attributes replaced with attributes[0]
Mutant 133 in Delta.ts: attributes replaced with attributes.slice(1)
Mutant 134 in Delta.ts: cloneDeep replaced with cloneShallow
Mutant 135 in Delta.ts: typeof lastOp === 'object' replaced with typeof lastOp !== 'object'
Mutant 136 in Delta.ts: typeof lastOp === 'object' replaced with lastOp.insert != null
Mutant 137 in Delta.ts: typeof lastOp === 'object' replaced with lastOp.insert !== 'string'
Mutant 138 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp.insert != null
Mutant 139 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp.insert !== undefined
Mutant 140 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp.insert !== 'string'
Mutant 141 in Delta.ts: this.ops.unshift replaced with this.ops.push
Mutant 142 in Delta.ts: this.ops.unshift replaced with this.ops.pop
Mutant 143 in Delta.ts: this.ops.unshift replaced with this.ops.shift
Mutant 144 in Delta.ts: newOp replaced with null
Mutant 145 in Delta.ts: newOp replaced with undefined
Mutant 146 in Delta.ts: newOp replaced with {}
Mutant 147 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with newOp.attributes !== lastOp.attributes
Mutant 148 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with !isEqual(newOp.attributes, lastOp.attributes)
Mutant 149 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with newOp.attributes !== lastOp.attributes && !isEqual(newOp.attributes, lastOp.attributes)
Mutant 150 in Delta.ts: lastOp.attributes replaced with lastOp.attributes[0]
Mutant 151 in Delta.ts: lastOp.attributes replaced with lastOp.attributes.length
Mutant 152 in Delta.ts: lastOp.attributes replaced with lastOp.attributes.slice(1)
Mutant 153 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with typeof newOp.insert === 'number' && typeof lastOp.insert === 'number'
Mutant 154 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with typeof newOp.insert === 'object' && typeof lastOp.insert === 'object'
Mutant 155 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with typeof newOp.insert === 'function' && typeof lastOp.insert === 'function'
Mutant 156 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes === null
Mutant 157 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes === undefined
Mutant 158 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes === {}
Mutant 159 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'string' && typeof lastOp.retain === 'string'
Mutant 160 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with typeof newOp.retain === 'boolean' && typeof lastOp.retain === 'boolean'
Mutant 161 in Delta.ts: typeof newOp.attributes === 'object' replaced with typeof newOp.attributes !== 'object'
Mutant 162 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes === undefined
Mutant 163 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes == null
Mutant 164 in Delta.ts: index === this.ops.length replaced with index > this.ops.length
Mutant 165 in Delta.ts: index === this.ops.length replaced with index < this.ops.length
Mutant 166 in Delta.ts: index === this.ops.length replaced with index !== this.ops.length
Mutant 167 in Delta.ts: this.ops.push replaced with this.ops.unshift
Mutant 168 in Delta.ts: this.ops.push replaced with this.ops.pop
Mutant 169 in Delta.ts: this.ops.push replaced with this.ops.shift
Mutant 170 in Delta.ts: newOp replaced with null
Mutant 171 in Delta.ts: newOp replaced with undefined
Mutant 172 in Delta.ts: newOp replaced with this.ops.length
Mutant 173 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, 1, newOp)
Mutant 174 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, 0, newOp.retain)
Mutant 175 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, 0, newOp.insert)
Mutant 176 in Delta.ts: index replaced with index + 1
Mutant 177 in Delta.ts: index replaced with index - 1
Mutant 178 in Delta.ts: index replaced with index * 2
Mutant 179 in Delta.ts: 0 replaced with 1
Mutant 180 in Delta.ts: 0 replaced with -1
Mutant 181 in Delta.ts: 0 replaced with this.ops.length
Mutant 182 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'number' && lastOp.attributes
Mutant 183 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'number' && lastOp.attributes === undefined
Mutant 184 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp && typeof lastOp.retain === 'number' && lastOp.attributes === null
Mutant 185 in Delta.ts: this.ops.pop replaced with this.ops.shift
Mutant 186 in Delta.ts: this.ops.forEach replaced with this.ops.map
Mutant 187 in Delta.ts: this.ops.forEach replaced with this.ops.filter
Mutant 188 in Delta.ts: this.ops.forEach replaced with this.ops.reduce
Mutant 189 in Delta.ts: predicate replaced with predicate(op, index + 1)
Mutant 190 in Delta.ts: predicate replaced with predicate(op, index - 1)
Mutant 191 in Delta.ts: predicate replaced with predicate(op, index * 2)
Mutant 192 in Delta.ts: this.ops.map replaced with this.ops.filter
Mutant 193 in Delta.ts: this.ops.map replaced with this.ops.forEach
Mutant 194 in Delta.ts: this.ops.map replaced with this.ops.reduce
Mutant 195 in Delta.ts: predicate replaced with (op, index) => !predicate(op, index)
Mutant 196 in Delta.ts: predicate replaced with (op, index) => predicate(op, index) && index % 2 === 0
Mutant 197 in Delta.ts: predicate replaced with (op, index) => predicate(op, index) || index === 0
Mutant 198 in Delta.ts: op replaced with op.insert
Mutant 199 in Delta.ts: op replaced with op.attributes
Mutant 200 in Delta.ts: target.push replaced with target.pop
Mutant 201 in Delta.ts: target.push replaced with target.shift
Mutant 202 in Delta.ts: target.push replaced with target.unshift
Mutant 203 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce(predicate, initialValue + 1)
Mutant 204 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce(predicate, initialValue * 2)
Mutant 205 in Delta.ts: this.ops.reduce(predicate, initialValue) replaced with this.ops.reduce(predicate, initialValue - 1)
Mutant 206 in Delta.ts: predicate replaced with (accum, curr, index) => accum + curr
Mutant 207 in Delta.ts: predicate replaced with (accum, curr, index) => accum - curr
Mutant 208 in Delta.ts: predicate replaced with (accum, curr, index) => accum * curr
Mutant 209 in Delta.ts: initialValue replaced with 0
Mutant 210 in Delta.ts: initialValue replaced with null
Mutant 211 in Delta.ts: initialValue replaced with undefined
Mutant 212 in Delta.ts: elem.insert replaced with elem.retain
Mutant 213 in Delta.ts: elem.insert replaced with elem.attributes
Mutant 214 in Delta.ts: Op.length replaced with Op.length + 1
Mutant 215 in Delta.ts: Op.length replaced with Op.length - 1
Mutant 216 in Delta.ts: Op.length replaced with Op.length * 2
Mutant 217 in Delta.ts: elem replaced with elem.insert
Mutant 218 in Delta.ts: elem replaced with elem.retain
Mutant 219 in Delta.ts: Op.length replaced with Op.length + 1
Mutant 220 in Delta.ts: Op.length replaced with Op.length - 1
Mutant 221 in Delta.ts: Op.length replaced with Op.length * 2
Mutant 222 in Delta.ts: elem replaced with elem.insert
Mutant 223 in Delta.ts: elem replaced with elem.retain
Mutant 224 in Delta.ts: index < end && iter.hasNext() replaced with index <= end && iter.hasNext()
Mutant 225 in Delta.ts: index < end && iter.hasNext() replaced with index < end || iter.hasNext()
Mutant 226 in Delta.ts: index < end && iter.hasNext() replaced with index < end && !iter.hasNext()
Mutant 227 in Delta.ts: index < start replaced with index > start
Mutant 228 in Delta.ts: index < start replaced with index <= start
Mutant 229 in Delta.ts: index < start replaced with index >= start
Mutant 230 in Delta.ts: start - index replaced with start + index
Mutant 231 in Delta.ts: start - index replaced with start * index
Mutant 232 in Delta.ts: start - index replaced with start / index
Mutant 233 in Delta.ts: end - index replaced with end - index + 1
Mutant 234 in Delta.ts: end - index replaced with end - index - 1
Mutant 235 in Delta.ts: end - index replaced with end - index * 2
Mutant 236 in Delta.ts: nextOp replaced with nextOp.insert
Mutant 237 in Delta.ts: nextOp replaced with nextOp.retain
Mutant 238 in Delta.ts: Op.length replaced with Op.length + 1
Mutant 239 in Delta.ts: Op.length replaced with Op.length - 1
Mutant 240 in Delta.ts: Op.length replaced with Op.length * 2
Mutant 241 in Delta.ts: nextOp replaced with nextOp.insert
Mutant 242 in Delta.ts: nextOp replaced with nextOp.retain
Mutant 243 in Delta.ts: otherIter.peek replaced with otherIter.next
Mutant 244 in Delta.ts: otherIter.peek replaced with otherIter.hasNext
Mutant 245 in Delta.ts: otherIter.peek replaced with otherIter.rest
Mutant 246 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes != null
Mutant 247 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes.length > 0
Mutant 248 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft && thisIter.peekLength() > 0
Mutant 249 in Delta.ts: thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft replaced with thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft && thisIter.peekLength() !== 0
Mutant 250 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength + 1
Mutant 251 in Delta.ts: thisIter.next() replaced with thisIter.next(1)
Mutant 252 in Delta.ts: thisIter.next() replaced with thisIter.next(thisIter.peekLength())
Mutant 253 in Delta.ts: thisIter.next() replaced with otherIter.next(1)
Mutant 254 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain - firstLeft < 0
Mutant 255 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain - firstLeft === 0
Mutant 256 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with firstOther.retain - firstLeft !== 0
Mutant 257 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain + firstLeft
Mutant 258 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain * firstLeft
Mutant 259 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain / firstLeft
Mutant 260 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() && otherIter.hasNext()
Mutant 261 in Delta.ts: otherIter.hasNext replaced with other.ops.length > 0
Mutant 262 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() !== 'insert'
Mutant 263 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekLength() > 0
Mutant 264 in Delta.ts: otherIter.next() replaced with otherIter.next(length)
Mutant 265 in Delta.ts: otherIter.next() replaced with otherIter.next(length - 1)
Mutant 266 in Delta.ts: otherIter.next() replaced with otherIter.next(length + 1)
Mutant 267 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'retain'
Mutant 268 in Delta.ts: thisIter.peekType() === 'delete' replaced with thisIter.peekType() === 'insert'
Mutant 269 in Delta.ts: thisIter.peekType replaced with otherIter.peekType
Mutant 270 in Delta.ts: thisIter.peekType replaced with thisIter.peekLength
Mutant 271 in Delta.ts: thisIter.peekType replaced with otherIter.peekLength
Mutant 272 in Delta.ts: thisIter.next() replaced with otherIter.next()
Mutant 273 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 274 in Delta.ts: thisIter.next() replaced with otherIter.peek()
Mutant 275 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + 1, otherIter.peekLength() + 1)
Mutant 276 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() - 1, otherIter.peekLength() - 1)
Mutant 277 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() * 2, otherIter.peekLength() * 2)
Mutant 278 in Delta.ts: Math.min replaced with Math.max
Mutant 279 in Delta.ts: Math.min replaced with length - 1
Mutant 280 in Delta.ts: Math.min replaced with length * 2
Mutant 281 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength()
Mutant 282 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() + 1
Mutant 283 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength() - 1
Mutant 284 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() + 1
Mutant 285 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() - 1
Mutant 286 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() * 2
Mutant 287 in Delta.ts: length replaced with length + 1
Mutant 288 in Delta.ts: length replaced with length - 1
Mutant 289 in Delta.ts: length replaced with length * 2
Mutant 290 in Delta.ts: length replaced with 0
Mutant 291 in Delta.ts: length replaced with -1
Mutant 292 in Delta.ts: length replaced with Infinity
Mutant 293 in Delta.ts: otherOp.retain replaced with otherOp.retain + 1
Mutant 294 in Delta.ts: otherOp.retain replaced with otherOp.retain - 1
Mutant 295 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'string'
Mutant 296 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'object'
Mutant 297 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain === 'undefined'
Mutant 298 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof otherOp.retain === 'object'
Mutant 299 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof otherOp.retain === 'string'
Mutant 300 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof otherOp.retain === 'boolean'
Mutant 301 in Delta.ts: thisOp.retain == null replaced with thisOp.retain === undefined
Mutant 302 in Delta.ts: thisOp.retain == null replaced with thisOp.retain === 0
Mutant 303 in Delta.ts: thisOp.retain == null replaced with thisOp.retain === 'retain'
Mutant 304 in Delta.ts: embedType replaced with embedType + 1
Mutant 305 in Delta.ts: embedType replaced with embedType - 1
Mutant 306 in Delta.ts: embedType replaced with embedType * 2
Mutant 307 in Delta.ts: attributes replaced with attributes && attributes.length > 0
Mutant 308 in Delta.ts: attributes replaced with attributes && attributes.length > 1
Mutant 309 in Delta.ts: attributes replaced with attributes && attributes.length > 2
Mutant 310 in Delta.ts: delta.push replaced with delta.retain
Mutant 311 in Delta.ts: delta.push replaced with delta.concat
Mutant 312 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with otherIter.peekLength() === 0
Mutant 313 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with otherIter.peekLength() < 0
Mutant 314 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[delta.ops.length - 2], newOp)
Mutant 315 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[0], newOp)
Mutant 316 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[Math.floor(Math.random() * delta.ops.length)], newOp)
Mutant 317 in Delta.ts: isEqual replaced with !isEqual
Mutant 318 in Delta.ts: isEqual replaced with isNotEqual
Mutant 319 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[0]
Mutant 320 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[delta.ops.length - 2]
Mutant 321 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with delta.ops[Math.floor(Math.random() * delta.ops.length)]
Mutant 322 in Delta.ts: delta.concat replaced with delta.retain
Mutant 323 in Delta.ts: delta.concat replaced with delta.insert
not replacing delta.concat with delta.retain
not replacing delta.concat with delta.retain
not replacing delta.concat with delta.insert
not replacing delta.concat with delta.insert
Mutant 324 in Delta.ts: rest replaced with this.ops.slice(start)
Mutant 325 in Delta.ts: rest replaced with this.ops.slice(start, end)
Mutant 326 in Delta.ts: rest replaced with this.ops.slice(start, end).reverse()
Mutant 327 in Delta.ts: otherOp replaced with null
Mutant 328 in Delta.ts: otherOp replaced with otherOp.retain
Mutant 329 in Delta.ts: other.ops.length > 0 replaced with other.ops.length < 0
Mutant 330 in Delta.ts: other.ops.length > 0 replaced with other.ops.length === 0
Mutant 331 in Delta.ts: delta.push replaced with delta.insert
Mutant 332 in Delta.ts: delta.push replaced with delta.ops.push
Mutant 333 in Delta.ts: delta.push replaced with delta.ops.unshift
Mutant 334 in Delta.ts: other.ops[0] replaced with other.ops[1]
Mutant 335 in Delta.ts: other.ops[0] replaced with other.ops[0].retain
Mutant 336 in Delta.ts: other.ops[0] replaced with other.ops[0].insert
Mutant 337 in Delta.ts: other.ops.slice(1) replaced with other.ops.slice(0)
Mutant 338 in Delta.ts: other.ops.slice(1) replaced with other.ops.slice(2)
Mutant 339 in Delta.ts: other.ops.slice(1) replaced with other.ops.slice(1, 2)
Mutant 340 in Delta.ts: other.ops.slice replaced with other.ops.splice
Mutant 341 in Delta.ts: other.ops.slice replaced with other.ops.pop
Mutant 342 in Delta.ts: other.ops.slice replaced with other.ops.shift
Mutant 343 in Delta.ts: 1 replaced with -1
Mutant 344 in Delta.ts: this.ops === other.ops replaced with this.ops !== other.ops
Mutant 345 in Delta.ts: this.ops === other.ops replaced with this.ops.length !== other.ops.length
Mutant 346 in Delta.ts: this.ops === other.ops replaced with this.ops.length === other.ops.length
Mutant 347 in Delta.ts: op.insert != null replaced with op.insert !== null
Mutant 348 in Delta.ts: op.insert != null replaced with op.insert !== undefined
Mutant 349 in Delta.ts: op.insert != null replaced with op.insert !== 'null'
Mutant 350 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings[1], strings[0], cursor)
Mutant 351 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings[0], strings[1], cursor + 1)
Mutant 352 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(strings[0], strings[1], cursor - 1)
Mutant 353 in Delta.ts: strings[0] replaced with strings[1]
Mutant 354 in Delta.ts: strings[0] replaced with strings[0].length
Mutant 355 in Delta.ts: strings[0] replaced with strings[0].toUpperCase()
Mutant 356 in Delta.ts: strings[1] replaced with strings[0]
Mutant 357 in Delta.ts: strings[1] replaced with strings[2]
Mutant 358 in Delta.ts: strings[1] replaced with strings[3]
Mutant 359 in Delta.ts: cursor replaced with cursor + 1
Mutant 360 in Delta.ts: cursor replaced with cursor - 1
Mutant 361 in Delta.ts: cursor replaced with cursor + 2
Mutant 362 in Delta.ts: length > 0 replaced with length <= 0
Mutant 363 in Delta.ts: length > 0 replaced with length !== 0
Mutant 364 in Delta.ts: length > 0 replaced with length === 0
Mutant 365 in Delta.ts: component[0] replaced with component[1]
Mutant 366 in Delta.ts: component[0] replaced with component.length
Mutant 367 in Delta.ts: component[0] replaced with component[0] + 1
Mutant 368 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peekLength() - length)
Mutant 369 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(length - otherIter.peekLength())
Mutant 370 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.peekLength() + length)
Mutant 371 in Delta.ts: Math.min replaced with Math.max
Mutant 372 in Delta.ts: Math.min replaced with Math.abs
Mutant 373 in Delta.ts: Math.min replaced with Math.floor
Mutant 374 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() + 1
Mutant 375 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() - 1
Mutant 376 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() * 2
Mutant 377 in Delta.ts: length replaced with length + 1
Mutant 378 in Delta.ts: length replaced with length - 1
Mutant 379 in Delta.ts: length replaced with length * 2
Mutant 380 in Delta.ts: retDelta.push replaced with retDelta.insert
Mutant 381 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength - 1)
Mutant 382 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength + 1)
Mutant 383 in Delta.ts: otherIter.next(opLength) replaced with otherIter.next(opLength * 2)
Mutant 384 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(length, otherIter.peekLength())
Mutant 385 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(length, thisIter.peekLength() + 1)
Mutant 386 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(length, thisIter.peekLength() - 1)
Mutant 387 in Delta.ts: Math.min replaced with Math.max
Mutant 388 in Delta.ts: Math.min replaced with Math.abs
Mutant 389 in Delta.ts: Math.min replaced with Math.floor
Mutant 390 in Delta.ts: length replaced with length + 1
Mutant 391 in Delta.ts: length replaced with length - 1
Mutant 392 in Delta.ts: length replaced with length * 2
Mutant 393 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength()
Mutant 394 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() + 1
Mutant 395 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength() - 1
Mutant 396 in Delta.ts: thisIter.next replaced with length - 1
Mutant 397 in Delta.ts: opLength replaced with length - 1
Mutant 398 in Delta.ts: opLength replaced with length + 1
Mutant 399 in Delta.ts: opLength replaced with length * 2
Mutant 400 in Delta.ts: retDelta.delete replaced with retDelta.retain
Mutant 401 in Delta.ts: retDelta.delete replaced with retDelta.insert
Mutant 402 in Delta.ts: retDelta.delete replaced with retDelta.push
Mutant 403 in Delta.ts: opLength replaced with opLength + 1
Mutant 404 in Delta.ts: opLength replaced with opLength - 1
Mutant 405 in Delta.ts: opLength replaced with opLength * 2
Mutant 406 in Delta.ts: opLength replaced with opLength + 1
Mutant 407 in Delta.ts: opLength replaced with opLength - 1
Mutant 408 in Delta.ts: opLength replaced with opLength * 2
Mutant 409 in Delta.ts: opLength replaced with opLength + 1
Mutant 410 in Delta.ts: opLength replaced with opLength - 1
Mutant 411 in Delta.ts: opLength replaced with opLength * 2
Mutant 412 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with !isEqual(thisOp.insert, otherOp.insert)
Mutant 413 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert === otherOp.insert
Mutant 414 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert != otherOp.insert
Mutant 415 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.retain, otherOp.retain)
Mutant 416 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual(thisOp.insert, otherOp.retain)
Mutant 417 in Delta.ts: isEqual replaced with isNotEqual
Mutant 418 in Delta.ts: isEqual replaced with isLessThan
Mutant 419 in Delta.ts: isEqual replaced with isGreaterThan
Mutant 420 in Delta.ts: thisOp.insert replaced with null
Mutant 421 in Delta.ts: otherOp.insert replaced with otherOp.retain
Mutant 422 in Delta.ts: otherOp.insert replaced with otherOp.attributes
Mutant 423 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.insert, otherOp.insert)
Mutant 424 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.retain, otherOp.retain)
Mutant 425 in Delta.ts: thisOp.attributes replaced with thisOp.retain
Mutant 426 in Delta.ts: thisOp.attributes replaced with otherOp.attributes
Mutant 427 in Delta.ts: thisOp.attributes replaced with null
Mutant 428 in Delta.ts: otherOp.attributes replaced with otherOp.retain
Mutant 429 in Delta.ts: otherOp.attributes replaced with otherOp.insert
Mutant 430 in Delta.ts: retDelta.push replaced with retDelta.retain
Mutant 431 in Delta.ts: retDelta.push replaced with retDelta.insert
not replacing retDelta.push with retDelta.retain
not replacing retDelta.push with retDelta.retain
not replacing retDelta.push with retDelta.insert
not replacing retDelta.push with retDelta.insert
Mutant 432 in Delta.ts: otherOp replaced with otherOp.retain
Mutant 433 in Delta.ts: otherOp replaced with otherOp.attributes
Mutant 434 in Delta.ts: otherOp replaced with otherOp.insert
Mutant 435 in Delta.ts: opLength replaced with opLength + 1
Mutant 436 in Delta.ts: opLength replaced with opLength - 1
Mutant 437 in Delta.ts: opLength replaced with opLength * 2
Mutant 438 in Delta.ts: iter.hasNext() replaced with !iter.hasNext()
Mutant 439 in Delta.ts: iter.hasNext() replaced with iter.hasNext() && false
Mutant 440 in Delta.ts: iter.hasNext() replaced with iter.hasNext() || true
Mutant 441 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() === 'retain'
Mutant 442 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() === 'insert' && iter.peekLength() > 0
Mutant 443 in Delta.ts: Op.length replaced with 0
Mutant 444 in Delta.ts: Op.length replaced with 1
Mutant 445 in Delta.ts: Op.length replaced with -1
Mutant 446 in Delta.ts: thisOp replaced with thisOp.retain
Mutant 447 in Delta.ts: thisOp replaced with otherOp.retain
Mutant 448 in Delta.ts: thisOp replaced with delta.retain
Mutant 449 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline, start + 1)
Mutant 450 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline, start - 1)
Mutant 451 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline, start + 2)
Mutant 452 in Delta.ts: thisOp.insert.indexOf replaced with thisOp.insert.length
Mutant 453 in Delta.ts: newline replaced with '\r\n'
Mutant 454 in Delta.ts: newline replaced with '\n'
Mutant 455 in Delta.ts: newline replaced with '\r'
Mutant 456 in Delta.ts: start replaced with start + 1
Mutant 457 in Delta.ts: start replaced with start - 1
Mutant 458 in Delta.ts: start replaced with start * 2
Mutant 459 in Delta.ts: index < 0 replaced with index > 0
Mutant 460 in Delta.ts: index < 0 replaced with index >= 0
Mutant 461 in Delta.ts: index < 0 replaced with index !== 0
Mutant 462 in Delta.ts: line.push replaced with line.retain
Mutant 463 in Delta.ts: line.push replaced with line.insert
Mutant 464 in Delta.ts: iter.next() replaced with iter.next(2)
Mutant 465 in Delta.ts: iter.next() replaced with iter.previous()
Mutant 466 in Delta.ts: iter.next() replaced with iter.peek()
Mutant 467 in Delta.ts: index > 0 replaced with index < 0
Mutant 468 in Delta.ts: index > 0 replaced with index === 0
Mutant 469 in Delta.ts: index > 0 replaced with index !== 0
Mutant 470 in Delta.ts: iter.next(index) replaced with iter.next(index + 1)
Mutant 471 in Delta.ts: iter.next(index) replaced with iter.next(index - 1)
Mutant 472 in Delta.ts: iter.next(index) replaced with iter.next(index * 2)
Mutant 473 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, {}, i) === false
Mutant 474 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, iter.next(2).attributes || {}, i) === false
Mutant 475 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, iter.next(1).attributes || {}, i + 1) === false
Mutant 476 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(line, iter.next(1).attributes || {}, i - 1)
Mutant 477 in Delta.ts: line replaced with line.length
Mutant 478 in Delta.ts: line replaced with line.substr(1)
Mutant 479 in Delta.ts: line replaced with line.toUpperCase()
Mutant 480 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(1).attributes && {}
Mutant 481 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(1).attributes ? {} : null
Mutant 482 in Delta.ts: 1 replaced with 0
Mutant 483 in Delta.ts: 1 replaced with -1
Mutant 484 in Delta.ts: i replaced with i - 1
Mutant 485 in Delta.ts: i replaced with i * 2
Mutant 486 in Delta.ts: line.length() > 0 replaced with line.length() < 0
Mutant 487 in Delta.ts: line.length() > 0 replaced with line.length() === 0
Mutant 488 in Delta.ts: line.length() > 0 replaced with line.length() > 1
Mutant 489 in Delta.ts: line.length replaced with line.length + 1
Mutant 490 in Delta.ts: line.length replaced with line.length - 1
Mutant 491 in Delta.ts: line.length replaced with line.length * 2
Mutant 492 in Delta.ts: predicate(line, {}, i) replaced with predicate(line, {}, i + 1)
Mutant 493 in Delta.ts: predicate(line, {}, i) replaced with predicate(line, {}, i - 1)
Mutant 494 in Delta.ts: predicate(line, {}, i) replaced with predicate(line, {}, 0)
Mutant 495 in Delta.ts: i replaced with i + 1
Mutant 496 in Delta.ts: i replaced with i - 1
Mutant 497 in Delta.ts: i replaced with i * 2
Mutant 498 in Delta.ts: op.insert replaced with op.retain
Mutant 499 in Delta.ts: op.insert replaced with op.length
Mutant 500 in Delta.ts: inverted.delete replaced with inverted.insert
Mutant 501 in Delta.ts: Op.length(op) replaced with Op.length(op) + 1
Mutant 502 in Delta.ts: Op.length(op) replaced with Op.length(op) - 1
Mutant 503 in Delta.ts: Op.length(op) replaced with Op.length(op) * 2
Mutant 504 in Delta.ts: Op.length replaced with Op.length + 1
Mutant 505 in Delta.ts: Op.length replaced with Op.length - 1
Mutant 506 in Delta.ts: Op.length replaced with Op.length * 2
Mutant 507 in Delta.ts: op replaced with op.insert
Mutant 508 in Delta.ts: op replaced with op.retain
Mutant 509 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes != null
Mutant 510 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes === null
Mutant 511 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes !== null
Mutant 512 in Delta.ts: op.retain replaced with op.retain + 1
Mutant 513 in Delta.ts: op.retain replaced with op.retain - 1
Mutant 514 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + 1, baseIndex + length + 1)
Mutant 515 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex - 1, baseIndex + length - 1)
Mutant 516 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex + length, baseIndex + length)
Mutant 517 in Delta.ts: baseIndex replaced with baseIndex + 1
Mutant 518 in Delta.ts: baseIndex replaced with baseIndex - 1
Mutant 519 in Delta.ts: baseIndex replaced with baseIndex + 2
Mutant 520 in Delta.ts: baseIndex + length replaced with baseIndex - length
Mutant 521 in Delta.ts: baseIndex + length replaced with baseIndex + length + 1
Mutant 522 in Delta.ts: baseIndex + length replaced with baseIndex + length * 2
Mutant 523 in Delta.ts: op.delete replaced with op.retain
Mutant 524 in Delta.ts: op.delete replaced with op.insert
Mutant 525 in Delta.ts: op.delete replaced with op.retain(0)
Mutant 526 in Delta.ts: baseOp replaced with baseOp.insert
Mutant 527 in Delta.ts: baseOp replaced with baseOp.attributes
Mutant 528 in Delta.ts: baseOp replaced with baseOp.retain
Mutant 529 in Delta.ts: op.retain && op.attributes replaced with op.retain || op.attributes
Mutant 530 in Delta.ts: op.retain && op.attributes replaced with op.retain && !op.attributes
Mutant 531 in Delta.ts: op.retain && op.attributes replaced with op.retain ? op.attributes : null
Mutant 532 in Delta.ts: Op.length replaced with Op.length + 1
Mutant 533 in Delta.ts: Op.length replaced with Op.length - 1
Mutant 534 in Delta.ts: Op.length replaced with Op.length * 2
Mutant 535 in Delta.ts: baseOp replaced with baseOp.insert
Mutant 536 in Delta.ts: baseOp replaced with baseOp.attributes
Mutant 537 in Delta.ts: baseOp replaced with baseOp.retain
Mutant 538 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes, other.attributes)
Mutant 539 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes, this.attributes)
Mutant 540 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(baseOp.attributes, other.attributes)
Mutant 541 in Delta.ts: AttributeMap.invert replaced with AttributeMap.transform
Mutant 542 in Delta.ts: AttributeMap.invert replaced with AttributeMap.compose
Mutant 543 in Delta.ts: AttributeMap.invert replaced with AttributeMap.diff
Mutant 544 in Delta.ts: op.attributes replaced with op.attributes.length
Mutant 545 in Delta.ts: op.attributes replaced with op.attributes.keys()
Mutant 546 in Delta.ts: op.attributes replaced with op.attributes.values()
Mutant 547 in Delta.ts: baseOp.attributes replaced with baseOp.insert
Mutant 548 in Delta.ts: baseOp.attributes replaced with baseOp.retain
Mutant 549 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain === 'object'
Mutant 550 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== null
Mutant 551 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== 'object'
Mutant 552 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex, baseIndex + 2)
Mutant 553 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex, baseIndex + 3)
Mutant 554 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex, baseIndex + 4)
Mutant 555 in Delta.ts: baseIndex replaced with baseIndex + 1
Mutant 556 in Delta.ts: baseIndex replaced with baseIndex - 1
Mutant 557 in Delta.ts: baseIndex replaced with baseIndex * 2
Mutant 558 in Delta.ts: baseIndex + 1 replaced with baseIndex + 2
Mutant 559 in Delta.ts: baseIndex + 1 replaced with baseIndex - 1
Mutant 560 in Delta.ts: baseIndex + 1 replaced with baseIndex + length
Mutant 561 in Delta.ts: embedType replaced with embedType + 1
Mutant 562 in Delta.ts: embedType replaced with embedType - 1
Mutant 563 in Delta.ts: embedType replaced with embedType * 2
Mutant 564 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData, baseOpData[0])
Mutant 565 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData[0], baseOpData)
Mutant 566 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(opData[0], baseOpData[0])
Mutant 567 in Delta.ts: opData replaced with opData + 1
Mutant 568 in Delta.ts: opData replaced with opData - 1
Mutant 569 in Delta.ts: opData replaced with opData * 2
Mutant 570 in Delta.ts: baseOpData replaced with baseOpData + 1
Mutant 571 in Delta.ts: baseOpData replaced with baseOpData * 2
Mutant 572 in Delta.ts: baseOpData replaced with baseOpData - 1
Mutant 573 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes, op.attributes)
Mutant 574 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(baseOp.attributes, op.attributes)
Mutant 575 in Delta.ts: AttributeMap.invert replaced with AttributeMap.transform
Mutant 576 in Delta.ts: AttributeMap.invert replaced with AttributeMap.compose
Mutant 577 in Delta.ts: AttributeMap.invert replaced with AttributeMap.diff
Mutant 578 in Delta.ts: op.attributes replaced with op.attributes.invert()
Mutant 579 in Delta.ts: op.attributes replaced with op.attributes.length
Mutant 580 in Delta.ts: op.attributes replaced with op.attributes.keys()
Mutant 581 in Delta.ts: baseOp.attributes replaced with baseOp.insert
Mutant 582 in Delta.ts: baseOp.attributes replaced with baseOp.retain
Mutant 583 in Delta.ts: inverted.chop replaced with inverted.ops.length
Mutant 584 in Delta.ts: typeof arg === 'number' replaced with typeof arg !== 'number'
Mutant 585 in Delta.ts: typeof arg === 'number' replaced with arg === undefined
Mutant 586 in Delta.ts: typeof arg === 'number' replaced with arg === null
Mutant 587 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg, !priority)
Mutant 588 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg + 1, priority)
Mutant 589 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg * 2, priority)
Mutant 590 in Delta.ts: this.transformPosition replaced with this.transformPosition + 1
Mutant 591 in Delta.ts: this.transformPosition replaced with this.transformPosition - 1
Mutant 592 in Delta.ts: this.transformPosition replaced with this.transformPosition * 2
Mutant 593 in Delta.ts: arg replaced with arg + 1
Mutant 594 in Delta.ts: arg replaced with arg * 2
Mutant 595 in Delta.ts: arg replaced with arg - 1
Mutant 596 in Delta.ts: priority replaced with !priority
Mutant 597 in Delta.ts: priority replaced with priority + 1
Mutant 598 in Delta.ts: priority replaced with priority * 2
Mutant 599 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() && otherIter.hasNext()
Mutant 600 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() || !otherIter.hasNext()
Mutant 601 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.hasNext() && !otherIter.hasNext()
Mutant 602 in Delta.ts: thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert') replaced with thisIter.peekType() === 'retain' && (priority || otherIter.peekType() !== 'retain')
Mutant 603 in Delta.ts: thisIter.peekType replaced with thisIter.peekLength
Mutant 604 in Delta.ts: Op.length(thisIter.next()) replaced with Op.length(thisIter.next()) + 1
Mutant 605 in Delta.ts: Op.length(thisIter.next()) replaced with Op.length(thisIter.next()) - 1
Mutant 606 in Delta.ts: Op.length(thisIter.next()) replaced with Op.length(thisIter.next()) * 2
Mutant 607 in Delta.ts: Op.length replaced with Op.length + 1
Mutant 608 in Delta.ts: Op.length replaced with Op.length - 1
Mutant 609 in Delta.ts: Op.length replaced with Op.length * 2
Mutant 610 in Delta.ts: thisIter.next() replaced with thisIter.next(2)
Mutant 611 in Delta.ts: thisIter.next() replaced with thisIter.next(0)
Mutant 612 in Delta.ts: thisIter.next() replaced with thisIter.next(-1)
Mutant 613 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() !== 'insert'
Mutant 614 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() === 'retain'
Mutant 615 in Delta.ts: otherIter.next() replaced with otherIter.next(length + 1)
Mutant 616 in Delta.ts: otherIter.next() replaced with otherIter.next(length - 1)
Mutant 617 in Delta.ts: otherIter.next() replaced with otherIter.next(length * 2)
Mutant 618 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 619 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() - otherIter.peekLength())
Mutant 620 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(otherIter.peekLength() - thisIter.peekLength())
Mutant 621 in Delta.ts: Math.min replaced with Math.max
Mutant 622 in Delta.ts: Math.min replaced with Math.abs
Mutant 623 in Delta.ts: Math.min replaced with Math.floor
Mutant 624 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() + 1
Mutant 625 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() - 1
Mutant 626 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() * 2
Mutant 627 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() + 1
Mutant 628 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() - 1
Mutant 629 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() * 2
Mutant 630 in Delta.ts: otherIter.peekLength replaced with otherIter.peekLength - 1
Mutant 631 in Delta.ts: otherIter.peekLength replaced with otherIter.peekLength + 1
Mutant 632 in Delta.ts: length replaced with 0
Mutant 633 in Delta.ts: length replaced with -1
Mutant 634 in Delta.ts: length replaced with 0
Mutant 635 in Delta.ts: length replaced with 1
Mutant 636 in Delta.ts: length replaced with length - 1
Mutant 637 in Delta.ts: thisOp.delete replaced with thisOp.retain
Mutant 638 in Delta.ts: thisOp.delete replaced with thisOp.insert
Mutant 639 in Delta.ts: thisOp.delete replaced with thisOp.attributes
Mutant 640 in Delta.ts: otherOp.delete replaced with otherOp.retain
Mutant 641 in Delta.ts: delta.push replaced with delta.retain
Mutant 642 in Delta.ts: otherOp replaced with otherOp.retain
Mutant 643 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null && thisData.length > 0
Mutant 644 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null && thisData.length === otherData.length
Mutant 645 in Delta.ts: thisData replaced with thisData.length
Mutant 646 in Delta.ts: thisData replaced with otherData.length
Mutant 647 in Delta.ts: thisData replaced with thisData.retain
Mutant 648 in Delta.ts: otherData replaced with otherData + 1
Mutant 649 in Delta.ts: otherData replaced with !otherData
Mutant 650 in Delta.ts: otherData replaced with otherData * 2
Mutant 651 in Delta.ts: embedType replaced with embedType.toLowerCase()
Mutant 652 in Delta.ts: embedType replaced with embedType.length
Mutant 653 in Delta.ts: embedType replaced with embedType.charAt(0)
Mutant 654 in Delta.ts: handler replaced with handler.transform(thisData[embedType], otherData[embedType], !priority)
Mutant 655 in Delta.ts: handler replaced with handler.transform(otherData[embedType], thisData[embedType], priority)
Mutant 656 in Delta.ts: handler replaced with handler.transform(thisData[embedType], otherData[embedType], priority)
Mutant 657 in Delta.ts: delta.chop replaced with delta.retain
Mutant 658 in Delta.ts: delta.chop replaced with delta.insert
Mutant 659 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.hasNext() && offset >= index
Mutant 660 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.hasNext() && offset != index
Mutant 661 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.hasNext() && offset < index
Mutant 662 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength + 1
Mutant 663 in Delta.ts: thisIter.peekType replaced with thisIter.peekLength
Mutant 664 in Delta.ts: thisIter.peekType replaced with thisIter.nextType
Mutant 665 in Delta.ts: thisIter.peekType replaced with thisIter.peekOp
Mutant 666 in Delta.ts: nextType === 'delete' replaced with nextType === 'insert'
Mutant 667 in Delta.ts: nextType === 'delete' replaced with nextType === 'retain'
Mutant 668 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(index - offset)
Mutant 669 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(length * index - offset)
Mutant 670 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(offset - index)
Mutant 671 in Delta.ts: Math.min replaced with Math.max
Mutant 672 in Delta.ts: Math.min replaced with index - length
Mutant 673 in Delta.ts: Math.min replaced with offset - length
Mutant 674 in Delta.ts: length replaced with 0
Mutant 675 in Delta.ts: length replaced with null
Mutant 676 in Delta.ts: length replaced with undefined
Mutant 677 in Delta.ts: index - offset replaced with index + offset
Mutant 678 in Delta.ts: index - offset replaced with offset - index
Mutant 679 in Delta.ts: index - offset replaced with 2 * index - offset
Mutant 680 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset > index || !priority)
Mutant 681 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset === index || !priority)
Mutant 682 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset !== index || !priority)
Mutant 683 in Delta.ts: typeof module === 'object' replaced with typeof module !== 'object'
Mutant 684 in Delta.ts: typeof module === 'object' replaced with typeof module === 'undefined'
Mutant 685 in Delta.ts: typeof module === 'object' replaced with typeof module === 'function'
Mutant 686 in Op.ts: typeof op.retain === 'number' replaced with typeof op.retain === 'string'
Mutant 687 in Op.ts: typeof op.retain === 'number' replaced with op.retain === 0
Mutant 688 in Op.ts: typeof op.retain === 'number' replaced with op.retain !== null
Mutant 689 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain === null
Mutant 690 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain !== null
Mutant 691 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number'
Mutant 692 in OpIterator.ts: !length replaced with length === 0
Mutant 693 in OpIterator.ts: !length replaced with length < 0
Mutant 694 in OpIterator.ts: !length replaced with length !== Infinity
Mutant 695 in OpIterator.ts: nextOp replaced with this.ops[this.index + 1]
Mutant 696 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 697 in OpIterator.ts: nextOp replaced with this.ops[this.index + 2]
Mutant 698 in OpIterator.ts: Op.length replaced with Op.length - 1
Mutant 699 in OpIterator.ts: Op.length replaced with Op.length + 1
Mutant 700 in OpIterator.ts: Op.length replaced with Op.length * 2
Mutant 701 in OpIterator.ts: nextOp replaced with null
Mutant 702 in OpIterator.ts: nextOp replaced with undefined
Mutant 703 in OpIterator.ts: nextOp replaced with {}
Mutant 704 in OpIterator.ts: length >= opLength - offset replaced with length > opLength - offset
Mutant 705 in OpIterator.ts: length >= opLength - offset replaced with length <= opLength - offset
Mutant 706 in OpIterator.ts: length >= opLength - offset replaced with length < opLength - offset
Mutant 707 in OpIterator.ts: typeof nextOp.delete === 'number' replaced with typeof nextOp.retain === 'number'
Mutant 708 in OpIterator.ts: typeof nextOp.delete === 'number' replaced with typeof nextOp.insert === 'string'
Mutant 709 in OpIterator.ts: typeof nextOp.delete === 'number' replaced with typeof nextOp.retain === 'object'
Mutant 710 in OpIterator.ts: nextOp.attributes replaced with nextOp.attributes[0]
Mutant 711 in OpIterator.ts: nextOp.attributes replaced with nextOp.attributes[1]
Mutant 712 in OpIterator.ts: nextOp.attributes replaced with nextOp.attributes.length
Mutant 713 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'string'
Mutant 714 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'object' && nextOp.retain !== null
Mutant 715 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'number'
Mutant 716 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'object' && nextOp.retain === null
Mutant 717 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'string'
Mutant 718 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with typeof nextOp.insert !== 'string'
Mutant 719 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.insert.length > 0
Mutant 720 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with nextOp.insert.substr(offset, length) !== nextOp.insert.substr(0, length)
Mutant 721 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(offset + length)
Mutant 722 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(offset - length)
Mutant 723 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(length - offset)
Mutant 724 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.substring
Mutant 725 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.slice
Mutant 726 in OpIterator.ts: offset replaced with offset + 1
Mutant 727 in OpIterator.ts: offset replaced with offset - 1
Mutant 728 in OpIterator.ts: offset replaced with offset * 2
Mutant 729 in OpIterator.ts: length replaced with 0
Mutant 730 in OpIterator.ts: length replaced with -1
Mutant 731 in OpIterator.ts: length replaced with length + 1
Mutant 732 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 1]
Mutant 733 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 734 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 2]
Mutant 735 in OpIterator.ts: Op.length replaced with Op.length - 1
Mutant 736 in OpIterator.ts: Op.length replaced with Op.length + 1
Mutant 737 in OpIterator.ts: Op.length replaced with Op.length * 2
Mutant 738 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 1]
Mutant 739 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index - 1]
Mutant 740 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 2]
Mutant 741 in OpIterator.ts: op replaced with op.retain
Mutant 742 in OpIterator.ts: op replaced with op.insert
Mutant 743 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 744 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with op.retain === null
Mutant 745 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'object' && op.retain === null
Mutant 746 in OpIterator.ts: !this.hasNext() replaced with this.hasNext()
Mutant 747 in OpIterator.ts: !this.hasNext() replaced with this.index < this.ops.length
Mutant 748 in OpIterator.ts: !this.hasNext() replaced with this.offset < Op.length(this.ops[this.index])
Mutant 749 in OpIterator.ts: this.hasNext replaced with !this.hasNext
Mutant 750 in OpIterator.ts: this.offset === 0 replaced with this.offset !== 0
Mutant 751 in OpIterator.ts: this.offset === 0 replaced with this.offset > 0
Mutant 752 in OpIterator.ts: this.offset === 0 replaced with this.offset < 0
Mutant 753 in OpIterator.ts: this.index replaced with this.ops.length
Mutant 754 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 755 in OpIterator.ts: this.index replaced with this.ops[this.index + 1]
Mutant 756 in OpIterator.ts: this.index replaced with this.index + 1
Mutant 757 in OpIterator.ts: this.index replaced with this.index - 1
Mutant 758 in OpIterator.ts: this.index replaced with this.ops.length - this.index
Mutant 759 in OpIterator.ts: [next].concat replaced with [next].slice
Mutant 760 in OpIterator.ts: [next].concat replaced with [next].push
Mutant 761 in OpIterator.ts: [next].concat replaced with [next].unshift
Mutant 762 in OpIterator.ts: rest replaced with rest.slice(1)
Mutant 763 in OpIterator.ts: rest replaced with rest.splice(1)
Mutant 764 in OpIterator.ts: rest replaced with rest.pop()
[32m01:41:17 (2858) INFO Instrumenter[39m Instrumented 4 source file(s) with 765 mutant(s)
[32m01:41:18 (2858) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m01:41:19 (2858) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m01:41:19 (2858) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m01:41:24 (2858) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4810 ms, overhead 2 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 3m) 2/765 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~1h 3m) 4/765 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~1h 3m) 6/765 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~1h 3m) 8/765 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~1h 2m) 10/765 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~1h 2m) 12/765 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~1h 2m) 14/765 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~1h 2m) 16/765 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~1h 2m) 18/765 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~1h 2m) 20/765 tested (5 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~59m) 23/765 tested (7 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~59m) 25/765 tested (7 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~59m) 27/765 tested (7 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~59m) 29/765 tested (8 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~59m) 31/765 tested (10 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~59m) 33/765 tested (11 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~59m) 35/765 tested (11 survived, 0 timed out)
Mutation testing 4% (elapsed: ~3m, remaining: ~59m) 37/765 tested (11 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~58m) 39/765 tested (11 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~58m) 41/765 tested (12 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~58m) 43/765 tested (12 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~57m) 46/765 tested (12 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~57m) 48/765 tested (12 survived, 0 timed out)
Mutation testing 6% (elapsed: ~4m, remaining: ~57m) 50/765 tested (12 survived, 0 timed out)
Mutation testing 6% (elapsed: ~4m, remaining: ~57m) 52/765 tested (12 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~57m) 54/765 tested (12 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~56m) 56/765 tested (12 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~56m) 58/765 tested (12 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~56m) 60/765 tested (12 survived, 0 timed out)
Mutation testing 8% (elapsed: ~5m, remaining: ~56m) 62/765 tested (12 survived, 0 timed out)
Mutation testing 8% (elapsed: ~5m, remaining: ~56m) 64/765 tested (12 survived, 0 timed out)
Mutation testing 8% (elapsed: ~5m, remaining: ~56m) 66/765 tested (12 survived, 0 timed out)
Mutation testing 8% (elapsed: ~5m, remaining: ~56m) 68/765 tested (12 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~56m) 70/765 tested (12 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~55m) 73/765 tested (13 survived, 0 timed out)
Mutation testing 9% (elapsed: ~6m, remaining: ~55m) 75/765 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~6m, remaining: ~55m) 77/765 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~6m, remaining: ~54m) 79/765 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~6m, remaining: ~54m) 81/765 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~6m, remaining: ~54m) 83/765 tested (15 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~54m) 85/765 tested (17 survived, 0 timed out)
Mutation testing 11% (elapsed: ~7m, remaining: ~54m) 87/765 tested (19 survived, 0 timed out)
Mutation testing 11% (elapsed: ~7m, remaining: ~54m) 89/765 tested (20 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~53m) 92/765 tested (21 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~53m) 94/765 tested (22 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~53m) 96/765 tested (22 survived, 0 timed out)
Mutation testing 12% (elapsed: ~7m, remaining: ~53m) 98/765 tested (22 survived, 0 timed out)
Mutation testing 13% (elapsed: ~8m, remaining: ~53m) 100/765 tested (22 survived, 0 timed out)
Mutation testing 13% (elapsed: ~8m, remaining: ~53m) 102/765 tested (22 survived, 0 timed out)
Mutation testing 13% (elapsed: ~8m, remaining: ~52m) 104/765 tested (23 survived, 0 timed out)
Mutation testing 13% (elapsed: ~8m, remaining: ~52m) 106/765 tested (23 survived, 0 timed out)
Mutation testing 14% (elapsed: ~8m, remaining: ~52m) 108/765 tested (23 survived, 0 timed out)
Mutation testing 14% (elapsed: ~8m, remaining: ~52m) 110/765 tested (23 survived, 0 timed out)
Mutation testing 14% (elapsed: ~9m, remaining: ~52m) 112/765 tested (23 survived, 0 timed out)
Mutation testing 14% (elapsed: ~9m, remaining: ~52m) 114/765 tested (24 survived, 0 timed out)
Mutation testing 15% (elapsed: ~9m, remaining: ~51m) 117/765 tested (25 survived, 0 timed out)
Mutation testing 15% (elapsed: ~9m, remaining: ~51m) 119/765 tested (25 survived, 0 timed out)
Mutation testing 15% (elapsed: ~9m, remaining: ~51m) 121/765 tested (25 survived, 0 timed out)
Mutation testing 16% (elapsed: ~9m, remaining: ~51m) 123/765 tested (25 survived, 0 timed out)
Mutation testing 16% (elapsed: ~10m, remaining: ~51m) 125/765 tested (25 survived, 0 timed out)
Mutation testing 16% (elapsed: ~10m, remaining: ~51m) 127/765 tested (25 survived, 0 timed out)
Mutation testing 16% (elapsed: ~10m, remaining: ~50m) 129/765 tested (26 survived, 0 timed out)
Mutation testing 17% (elapsed: ~10m, remaining: ~50m) 131/765 tested (27 survived, 0 timed out)
Mutation testing 17% (elapsed: ~10m, remaining: ~50m) 133/765 tested (27 survived, 0 timed out)
Mutation testing 17% (elapsed: ~10m, remaining: ~50m) 135/765 tested (27 survived, 0 timed out)
Mutation testing 17% (elapsed: ~11m, remaining: ~50m) 137/765 tested (27 survived, 0 timed out)
Mutation testing 18% (elapsed: ~11m, remaining: ~50m) 139/765 tested (27 survived, 0 timed out)
Mutation testing 18% (elapsed: ~11m, remaining: ~50m) 141/765 tested (27 survived, 0 timed out)
Mutation testing 18% (elapsed: ~11m, remaining: ~49m) 144/765 tested (27 survived, 0 timed out)
Mutation testing 19% (elapsed: ~11m, remaining: ~49m) 146/765 tested (27 survived, 0 timed out)
Mutation testing 19% (elapsed: ~11m, remaining: ~49m) 148/765 tested (27 survived, 0 timed out)
Mutation testing 19% (elapsed: ~12m, remaining: ~49m) 150/765 tested (27 survived, 0 timed out)
Mutation testing 19% (elapsed: ~12m, remaining: ~49m) 152/765 tested (27 survived, 0 timed out)
Mutation testing 20% (elapsed: ~12m, remaining: ~48m) 154/765 tested (27 survived, 0 timed out)
Mutation testing 20% (elapsed: ~12m, remaining: ~48m) 156/765 tested (27 survived, 0 timed out)
Mutation testing 20% (elapsed: ~12m, remaining: ~48m) 158/765 tested (27 survived, 0 timed out)
Mutation testing 20% (elapsed: ~12m, remaining: ~48m) 160/765 tested (27 survived, 0 timed out)
Mutation testing 21% (elapsed: ~13m, remaining: ~48m) 162/765 tested (27 survived, 0 timed out)
Mutation testing 21% (elapsed: ~13m, remaining: ~47m) 165/765 tested (28 survived, 0 timed out)
Mutation testing 21% (elapsed: ~13m, remaining: ~47m) 167/765 tested (28 survived, 0 timed out)
Mutation testing 22% (elapsed: ~13m, remaining: ~47m) 169/765 tested (28 survived, 0 timed out)
Mutation testing 22% (elapsed: ~13m, remaining: ~47m) 171/765 tested (28 survived, 0 timed out)
Mutation testing 22% (elapsed: ~13m, remaining: ~47m) 173/765 tested (28 survived, 0 timed out)
Mutation testing 22% (elapsed: ~14m, remaining: ~47m) 175/765 tested (28 survived, 0 timed out)
Mutation testing 23% (elapsed: ~14m, remaining: ~47m) 177/765 tested (28 survived, 0 timed out)
Mutation testing 23% (elapsed: ~14m, remaining: ~46m) 179/765 tested (28 survived, 0 timed out)
Mutation testing 23% (elapsed: ~14m, remaining: ~46m) 181/765 tested (29 survived, 0 timed out)
Mutation testing 24% (elapsed: ~14m, remaining: ~46m) 184/765 tested (30 survived, 0 timed out)
Mutation testing 24% (elapsed: ~14m, remaining: ~46m) 186/765 tested (30 survived, 0 timed out)
Mutation testing 24% (elapsed: ~15m, remaining: ~46m) 188/765 tested (32 survived, 0 timed out)
Mutation testing 24% (elapsed: ~15m, remaining: ~45m) 190/765 tested (32 survived, 0 timed out)
Mutation testing 25% (elapsed: ~15m, remaining: ~45m) 192/765 tested (32 survived, 0 timed out)
Mutation testing 25% (elapsed: ~15m, remaining: ~45m) 194/765 tested (32 survived, 0 timed out)
Mutation testing 25% (elapsed: ~15m, remaining: ~45m) 196/765 tested (32 survived, 0 timed out)
Mutation testing 25% (elapsed: ~15m, remaining: ~45m) 198/765 tested (32 survived, 0 timed out)
Mutation testing 26% (elapsed: ~16m, remaining: ~44m) 201/765 tested (32 survived, 0 timed out)
Mutation testing 26% (elapsed: ~16m, remaining: ~44m) 203/765 tested (32 survived, 0 timed out)
Mutation testing 26% (elapsed: ~16m, remaining: ~44m) 205/765 tested (33 survived, 0 timed out)
Mutation testing 27% (elapsed: ~16m, remaining: ~44m) 207/765 tested (33 survived, 0 timed out)
Mutation testing 27% (elapsed: ~16m, remaining: ~44m) 209/765 tested (33 survived, 0 timed out)
Mutation testing 27% (elapsed: ~16m, remaining: ~44m) 211/765 tested (35 survived, 0 timed out)
Mutation testing 27% (elapsed: ~17m, remaining: ~44m) 213/765 tested (36 survived, 0 timed out)
Mutation testing 28% (elapsed: ~17m, remaining: ~43m) 215/765 tested (36 survived, 0 timed out)
Mutation testing 28% (elapsed: ~17m, remaining: ~43m) 218/765 tested (36 survived, 0 timed out)
Mutation testing 28% (elapsed: ~17m, remaining: ~43m) 220/765 tested (36 survived, 0 timed out)
Mutation testing 29% (elapsed: ~17m, remaining: ~43m) 222/765 tested (36 survived, 0 timed out)
Mutation testing 29% (elapsed: ~17m, remaining: ~43m) 224/765 tested (36 survived, 0 timed out)
Mutation testing 29% (elapsed: ~18m, remaining: ~43m) 225/765 tested (36 survived, 0 timed out)
Mutation testing 29% (elapsed: ~18m, remaining: ~43m) 227/765 tested (36 survived, 1 timed out)
Mutation testing 29% (elapsed: ~18m, remaining: ~43m) 227/765 tested (36 survived, 1 timed out)
Mutation testing 29% (elapsed: ~18m, remaining: ~43m) 229/765 tested (36 survived, 2 timed out)
Mutation testing 30% (elapsed: ~18m, remaining: ~43m) 230/765 tested (36 survived, 3 timed out)
Mutation testing 30% (elapsed: ~18m, remaining: ~43m) 232/765 tested (36 survived, 3 timed out)
Mutation testing 30% (elapsed: ~19m, remaining: ~43m) 234/765 tested (36 survived, 3 timed out)
Mutation testing 30% (elapsed: ~19m, remaining: ~43m) 235/765 tested (36 survived, 3 timed out)
Mutation testing 30% (elapsed: ~19m, remaining: ~43m) 237/765 tested (36 survived, 4 timed out)
Mutation testing 31% (elapsed: ~19m, remaining: ~42m) 239/765 tested (36 survived, 4 timed out)
Mutation testing 31% (elapsed: ~19m, remaining: ~42m) 241/765 tested (36 survived, 4 timed out)
Mutation testing 31% (elapsed: ~19m, remaining: ~42m) 243/765 tested (36 survived, 4 timed out)
Mutation testing 32% (elapsed: ~20m, remaining: ~42m) 245/765 tested (37 survived, 4 timed out)
Mutation testing 32% (elapsed: ~20m, remaining: ~42m) 247/765 tested (38 survived, 4 timed out)
Mutation testing 32% (elapsed: ~20m, remaining: ~42m) 249/765 tested (39 survived, 4 timed out)
Mutation testing 32% (elapsed: ~20m, remaining: ~41m) 252/765 tested (40 survived, 4 timed out)
Mutation testing 33% (elapsed: ~20m, remaining: ~41m) 254/765 tested (41 survived, 4 timed out)
Mutation testing 33% (elapsed: ~20m, remaining: ~41m) 256/765 tested (41 survived, 4 timed out)
Mutation testing 33% (elapsed: ~21m, remaining: ~41m) 258/765 tested (42 survived, 4 timed out)
Mutation testing 33% (elapsed: ~21m, remaining: ~41m) 260/765 tested (42 survived, 4 timed out)
Mutation testing 34% (elapsed: ~21m, remaining: ~40m) 262/765 tested (42 survived, 4 timed out)
Mutation testing 34% (elapsed: ~21m, remaining: ~41m) 263/765 tested (42 survived, 5 timed out)
Mutation testing 34% (elapsed: ~21m, remaining: ~41m) 263/765 tested (42 survived, 5 timed out)
Mutation testing 34% (elapsed: ~21m, remaining: ~41m) 265/765 tested (42 survived, 6 timed out)
Mutation testing 34% (elapsed: ~22m, remaining: ~41m) 267/765 tested (42 survived, 6 timed out)
Mutation testing 35% (elapsed: ~22m, remaining: ~41m) 268/765 tested (42 survived, 7 timed out)
Mutation testing 35% (elapsed: ~22m, remaining: ~41m) 269/765 tested (42 survived, 7 timed out)
Mutation testing 35% (elapsed: ~22m, remaining: ~41m) 271/765 tested (42 survived, 8 timed out)
Mutation testing 35% (elapsed: ~22m, remaining: ~41m) 272/765 tested (42 survived, 8 timed out)
Mutation testing 35% (elapsed: ~22m, remaining: ~41m) 273/765 tested (42 survived, 9 timed out)
Mutation testing 35% (elapsed: ~23m, remaining: ~41m) 274/765 tested (42 survived, 10 timed out)
Mutation testing 35% (elapsed: ~23m, remaining: ~41m) 274/765 tested (42 survived, 10 timed out)
Mutation testing 36% (elapsed: ~23m, remaining: ~41m) 276/765 tested (42 survived, 11 timed out)
Mutation testing 36% (elapsed: ~23m, remaining: ~40m) 279/765 tested (42 survived, 11 timed out)
Mutation testing 36% (elapsed: ~23m, remaining: ~40m) 281/765 tested (42 survived, 11 timed out)
Mutation testing 36% (elapsed: ~23m, remaining: ~40m) 283/765 tested (42 survived, 11 timed out)
Mutation testing 37% (elapsed: ~24m, remaining: ~40m) 285/765 tested (42 survived, 11 timed out)
Mutation testing 37% (elapsed: ~24m, remaining: ~40m) 287/765 tested (42 survived, 11 timed out)
Mutation testing 37% (elapsed: ~24m, remaining: ~40m) 289/765 tested (42 survived, 11 timed out)
Mutation testing 38% (elapsed: ~24m, remaining: ~39m) 291/765 tested (42 survived, 11 timed out)
Mutation testing 38% (elapsed: ~24m, remaining: ~39m) 292/765 tested (42 survived, 12 timed out)
Mutation testing 38% (elapsed: ~24m, remaining: ~39m) 294/765 tested (43 survived, 12 timed out)
Mutation testing 38% (elapsed: ~25m, remaining: ~39m) 296/765 tested (43 survived, 12 timed out)
Mutation testing 38% (elapsed: ~25m, remaining: ~39m) 298/765 tested (43 survived, 12 timed out)
Mutation testing 39% (elapsed: ~25m, remaining: ~39m) 300/765 tested (43 survived, 12 timed out)
Mutation testing 39% (elapsed: ~25m, remaining: ~39m) 302/765 tested (44 survived, 12 timed out)
Mutation testing 39% (elapsed: ~25m, remaining: ~38m) 305/765 tested (44 survived, 12 timed out)
Mutation testing 40% (elapsed: ~25m, remaining: ~38m) 307/765 tested (44 survived, 12 timed out)
Mutation testing 40% (elapsed: ~26m, remaining: ~38m) 309/765 tested (44 survived, 12 timed out)
Mutation testing 40% (elapsed: ~26m, remaining: ~38m) 311/765 tested (44 survived, 12 timed out)
Mutation testing 40% (elapsed: ~26m, remaining: ~38m) 313/765 tested (45 survived, 12 timed out)
Mutation testing 41% (elapsed: ~26m, remaining: ~37m) 315/765 tested (47 survived, 12 timed out)
Mutation testing 41% (elapsed: ~26m, remaining: ~37m) 317/765 tested (49 survived, 12 timed out)
Mutation testing 41% (elapsed: ~26m, remaining: ~37m) 319/765 tested (49 survived, 12 timed out)
Mutation testing 41% (elapsed: ~27m, remaining: ~37m) 321/765 tested (51 survived, 12 timed out)
Mutation testing 42% (elapsed: ~27m, remaining: ~37m) 323/765 tested (52 survived, 12 timed out)
Mutation testing 42% (elapsed: ~27m, remaining: ~36m) 326/765 tested (52 survived, 12 timed out)
Mutation testing 42% (elapsed: ~27m, remaining: ~36m) 328/765 tested (52 survived, 12 timed out)
Mutation testing 43% (elapsed: ~27m, remaining: ~36m) 330/765 tested (52 survived, 12 timed out)
Mutation testing 43% (elapsed: ~27m, remaining: ~36m) 332/765 tested (52 survived, 12 timed out)
Mutation testing 43% (elapsed: ~28m, remaining: ~36m) 334/765 tested (52 survived, 12 timed out)
Mutation testing 43% (elapsed: ~28m, remaining: ~35m) 336/765 tested (52 survived, 12 timed out)
Mutation testing 44% (elapsed: ~28m, remaining: ~35m) 338/765 tested (52 survived, 12 timed out)
Mutation testing 44% (elapsed: ~28m, remaining: ~35m) 340/765 tested (53 survived, 12 timed out)
Mutation testing 44% (elapsed: ~28m, remaining: ~35m) 342/765 tested (54 survived, 12 timed out)
Mutation testing 44% (elapsed: ~28m, remaining: ~35m) 344/765 tested (54 survived, 12 timed out)
Mutation testing 45% (elapsed: ~29m, remaining: ~34m) 347/765 tested (54 survived, 12 timed out)
Mutation testing 45% (elapsed: ~29m, remaining: ~34m) 349/765 tested (55 survived, 12 timed out)
Mutation testing 45% (elapsed: ~29m, remaining: ~34m) 351/765 tested (55 survived, 12 timed out)
Mutation testing 46% (elapsed: ~29m, remaining: ~34m) 353/765 tested (57 survived, 12 timed out)
Mutation testing 46% (elapsed: ~29m, remaining: ~34m) 355/765 tested (57 survived, 12 timed out)
Mutation testing 46% (elapsed: ~29m, remaining: ~34m) 357/765 tested (57 survived, 12 timed out)
Mutation testing 46% (elapsed: ~30m, remaining: ~33m) 359/765 tested (57 survived, 12 timed out)
Mutation testing 47% (elapsed: ~30m, remaining: ~33m) 361/765 tested (59 survived, 12 timed out)
Mutation testing 47% (elapsed: ~30m, remaining: ~33m) 363/765 tested (60 survived, 12 timed out)
Mutation testing 47% (elapsed: ~30m, remaining: ~33m) 365/765 tested (61 survived, 12 timed out)
Mutation testing 47% (elapsed: ~30m, remaining: ~33m) 366/765 tested (61 survived, 13 timed out)
Mutation testing 47% (elapsed: ~30m, remaining: ~33m) 366/765 tested (61 survived, 13 timed out)
Mutation testing 47% (elapsed: ~31m, remaining: ~33m) 367/765 tested (61 survived, 14 timed out)
Mutation testing 48% (elapsed: ~31m, remaining: ~33m) 368/765 tested (61 survived, 15 timed out)
Mutation testing 48% (elapsed: ~31m, remaining: ~33m) 370/765 tested (61 survived, 16 timed out)
Mutation testing 48% (elapsed: ~31m, remaining: ~33m) 372/765 tested (63 survived, 16 timed out)
Mutation testing 48% (elapsed: ~31m, remaining: ~33m) 374/765 tested (65 survived, 16 timed out)
Mutation testing 49% (elapsed: ~31m, remaining: ~32m) 376/765 tested (66 survived, 16 timed out)
Mutation testing 49% (elapsed: ~32m, remaining: ~32m) 378/765 tested (68 survived, 16 timed out)
Mutation testing 49% (elapsed: ~32m, remaining: ~32m) 379/765 tested (68 survived, 17 timed out)
Mutation testing 49% (elapsed: ~32m, remaining: ~32m) 381/765 tested (69 survived, 17 timed out)
Mutation testing 50% (elapsed: ~32m, remaining: ~32m) 383/765 tested (70 survived, 17 timed out)
Mutation testing 50% (elapsed: ~32m, remaining: ~32m) 385/765 tested (72 survived, 17 timed out)
Mutation testing 50% (elapsed: ~32m, remaining: ~32m) 387/765 tested (74 survived, 17 timed out)
Mutation testing 50% (elapsed: ~33m, remaining: ~31m) 389/765 tested (75 survived, 17 timed out)
Mutation testing 51% (elapsed: ~33m, remaining: ~31m) 391/765 tested (76 survived, 17 timed out)
Mutation testing 51% (elapsed: ~33m, remaining: ~31m) 392/765 tested (76 survived, 18 timed out)
Mutation testing 51% (elapsed: ~33m, remaining: ~31m) 394/765 tested (77 survived, 18 timed out)
Mutation testing 51% (elapsed: ~33m, remaining: ~31m) 396/765 tested (79 survived, 18 timed out)
Mutation testing 52% (elapsed: ~33m, remaining: ~31m) 398/765 tested (79 survived, 18 timed out)
Mutation testing 52% (elapsed: ~34m, remaining: ~31m) 400/765 tested (79 survived, 18 timed out)
Mutation testing 52% (elapsed: ~34m, remaining: ~30m) 403/765 tested (79 survived, 18 timed out)
Mutation testing 52% (elapsed: ~34m, remaining: ~30m) 405/765 tested (79 survived, 18 timed out)
Mutation testing 53% (elapsed: ~34m, remaining: ~30m) 407/765 tested (79 survived, 18 timed out)
Mutation testing 53% (elapsed: ~34m, remaining: ~30m) 409/765 tested (79 survived, 18 timed out)
Mutation testing 53% (elapsed: ~34m, remaining: ~30m) 411/765 tested (79 survived, 18 timed out)
Mutation testing 53% (elapsed: ~35m, remaining: ~29m) 413/765 tested (79 survived, 18 timed out)
Mutation testing 54% (elapsed: ~35m, remaining: ~29m) 415/765 tested (79 survived, 18 timed out)
Mutation testing 54% (elapsed: ~35m, remaining: ~29m) 417/765 tested (79 survived, 18 timed out)
Mutation testing 54% (elapsed: ~35m, remaining: ~29m) 420/765 tested (79 survived, 18 timed out)
Mutation testing 55% (elapsed: ~35m, remaining: ~28m) 422/765 tested (79 survived, 18 timed out)
Mutation testing 55% (elapsed: ~35m, remaining: ~28m) 424/765 tested (79 survived, 18 timed out)
Mutation testing 55% (elapsed: ~36m, remaining: ~28m) 426/765 tested (79 survived, 18 timed out)
Mutation testing 55% (elapsed: ~36m, remaining: ~28m) 428/765 tested (79 survived, 18 timed out)
Mutation testing 56% (elapsed: ~36m, remaining: ~28m) 430/765 tested (79 survived, 18 timed out)
Mutation testing 56% (elapsed: ~36m, remaining: ~28m) 432/765 tested (79 survived, 18 timed out)
Mutation testing 56% (elapsed: ~36m, remaining: ~27m) 435/765 tested (79 survived, 18 timed out)
Mutation testing 57% (elapsed: ~36m, remaining: ~27m) 437/765 tested (79 survived, 18 timed out)
Mutation testing 57% (elapsed: ~37m, remaining: ~27m) 439/765 tested (79 survived, 18 timed out)
Mutation testing 57% (elapsed: ~37m, remaining: ~27m) 441/765 tested (79 survived, 18 timed out)
Mutation testing 57% (elapsed: ~37m, remaining: ~27m) 443/765 tested (80 survived, 18 timed out)
Mutation testing 58% (elapsed: ~37m, remaining: ~26m) 445/765 tested (80 survived, 18 timed out)
Mutation testing 58% (elapsed: ~37m, remaining: ~26m) 447/765 tested (80 survived, 18 timed out)
Mutation testing 58% (elapsed: ~37m, remaining: ~26m) 450/765 tested (80 survived, 18 timed out)
Mutation testing 59% (elapsed: ~38m, remaining: ~26m) 452/765 tested (80 survived, 18 timed out)
Mutation testing 59% (elapsed: ~38m, remaining: ~26m) 454/765 tested (80 survived, 18 timed out)
Mutation testing 59% (elapsed: ~38m, remaining: ~25m) 456/765 tested (81 survived, 18 timed out)
Mutation testing 59% (elapsed: ~38m, remaining: ~25m) 458/765 tested (81 survived, 18 timed out)
Mutation testing 60% (elapsed: ~38m, remaining: ~25m) 460/765 tested (81 survived, 18 timed out)
Mutation testing 60% (elapsed: ~38m, remaining: ~25m) 462/765 tested (81 survived, 18 timed out)
Mutation testing 60% (elapsed: ~39m, remaining: ~25m) 464/765 tested (81 survived, 18 timed out)
Mutation testing 60% (elapsed: ~39m, remaining: ~25m) 466/765 tested (82 survived, 18 timed out)
Mutation testing 61% (elapsed: ~39m, remaining: ~25m) 467/765 tested (82 survived, 19 timed out)
Mutation testing 61% (elapsed: ~39m, remaining: ~24m) 469/765 tested (82 survived, 19 timed out)
Mutation testing 61% (elapsed: ~39m, remaining: ~24m) 471/765 tested (83 survived, 19 timed out)
Mutation testing 61% (elapsed: ~39m, remaining: ~24m) 473/765 tested (83 survived, 19 timed out)
Mutation testing 61% (elapsed: ~40m, remaining: ~24m) 474/765 tested (83 survived, 20 timed out)
Mutation testing 62% (elapsed: ~40m, remaining: ~24m) 476/765 tested (83 survived, 20 timed out)
Mutation testing 62% (elapsed: ~40m, remaining: ~24m) 478/765 tested (83 survived, 20 timed out)
Mutation testing 62% (elapsed: ~40m, remaining: ~24m) 480/765 tested (83 survived, 20 timed out)
Mutation testing 63% (elapsed: ~40m, remaining: ~23m) 482/765 tested (83 survived, 20 timed out)
Mutation testing 63% (elapsed: ~40m, remaining: ~23m) 483/765 tested (83 survived, 20 timed out)
Mutation testing 63% (elapsed: ~41m, remaining: ~23m) 485/765 tested (83 survived, 21 timed out)
Mutation testing 63% (elapsed: ~41m, remaining: ~23m) 487/765 tested (83 survived, 21 timed out)
Mutation testing 63% (elapsed: ~41m, remaining: ~23m) 489/765 tested (83 survived, 21 timed out)
Mutation testing 64% (elapsed: ~41m, remaining: ~23m) 491/765 tested (83 survived, 21 timed out)
Mutation testing 64% (elapsed: ~41m, remaining: ~22m) 494/765 tested (83 survived, 21 timed out)
Mutation testing 64% (elapsed: ~41m, remaining: ~22m) 496/765 tested (83 survived, 21 timed out)
Mutation testing 65% (elapsed: ~42m, remaining: ~22m) 498/765 tested (83 survived, 21 timed out)
Mutation testing 65% (elapsed: ~42m, remaining: ~22m) 500/765 tested (83 survived, 21 timed out)
Mutation testing 65% (elapsed: ~42m, remaining: ~22m) 502/765 tested (83 survived, 21 timed out)
Mutation testing 65% (elapsed: ~42m, remaining: ~22m) 504/765 tested (83 survived, 21 timed out)
Mutation testing 66% (elapsed: ~42m, remaining: ~21m) 506/765 tested (83 survived, 21 timed out)
Mutation testing 66% (elapsed: ~42m, remaining: ~21m) 508/765 tested (83 survived, 21 timed out)
Mutation testing 66% (elapsed: ~43m, remaining: ~21m) 511/765 tested (83 survived, 21 timed out)
Mutation testing 67% (elapsed: ~43m, remaining: ~21m) 513/765 tested (83 survived, 21 timed out)
Mutation testing 67% (elapsed: ~43m, remaining: ~21m) 515/765 tested (83 survived, 21 timed out)
Mutation testing 67% (elapsed: ~43m, remaining: ~20m) 517/765 tested (83 survived, 21 timed out)
Mutation testing 67% (elapsed: ~43m, remaining: ~20m) 519/765 tested (83 survived, 21 timed out)
Mutation testing 68% (elapsed: ~43m, remaining: ~20m) 521/765 tested (83 survived, 21 timed out)
Mutation testing 68% (elapsed: ~44m, remaining: ~20m) 523/765 tested (83 survived, 21 timed out)
Mutation testing 68% (elapsed: ~44m, remaining: ~20m) 525/765 tested (83 survived, 21 timed out)
Mutation testing 69% (elapsed: ~44m, remaining: ~19m) 528/765 tested (83 survived, 21 timed out)
Mutation testing 69% (elapsed: ~44m, remaining: ~19m) 530/765 tested (84 survived, 21 timed out)
Mutation testing 69% (elapsed: ~44m, remaining: ~19m) 532/765 tested (85 survived, 21 timed out)
Mutation testing 69% (elapsed: ~44m, remaining: ~19m) 534/765 tested (85 survived, 21 timed out)
Mutation testing 70% (elapsed: ~45m, remaining: ~19m) 536/765 tested (85 survived, 21 timed out)
Mutation testing 70% (elapsed: ~45m, remaining: ~19m) 538/765 tested (85 survived, 21 timed out)
Mutation testing 70% (elapsed: ~45m, remaining: ~18m) 540/765 tested (85 survived, 21 timed out)
Mutation testing 70% (elapsed: ~45m, remaining: ~18m) 542/765 tested (85 survived, 21 timed out)
Mutation testing 71% (elapsed: ~45m, remaining: ~18m) 545/765 tested (85 survived, 21 timed out)
Mutation testing 71% (elapsed: ~45m, remaining: ~18m) 547/765 tested (85 survived, 21 timed out)
Mutation testing 71% (elapsed: ~46m, remaining: ~18m) 549/765 tested (85 survived, 21 timed out)
Mutation testing 72% (elapsed: ~46m, remaining: ~17m) 551/765 tested (86 survived, 21 timed out)
Mutation testing 72% (elapsed: ~46m, remaining: ~17m) 553/765 tested (88 survived, 21 timed out)
Mutation testing 72% (elapsed: ~46m, remaining: ~17m) 555/765 tested (90 survived, 21 timed out)
Mutation testing 72% (elapsed: ~46m, remaining: ~17m) 557/765 tested (90 survived, 21 timed out)
Mutation testing 73% (elapsed: ~46m, remaining: ~17m) 559/765 tested (91 survived, 21 timed out)
Mutation testing 73% (elapsed: ~47m, remaining: ~17m) 561/765 tested (91 survived, 21 timed out)
Mutation testing 73% (elapsed: ~47m, remaining: ~16m) 564/765 tested (91 survived, 21 timed out)
Mutation testing 73% (elapsed: ~47m, remaining: ~16m) 566/765 tested (91 survived, 21 timed out)
Mutation testing 74% (elapsed: ~47m, remaining: ~16m) 568/765 tested (91 survived, 21 timed out)
Mutation testing 74% (elapsed: ~47m, remaining: ~16m) 570/765 tested (91 survived, 21 timed out)
Mutation testing 74% (elapsed: ~47m, remaining: ~16m) 572/765 tested (91 survived, 21 timed out)
Mutation testing 75% (elapsed: ~48m, remaining: ~15m) 574/765 tested (91 survived, 21 timed out)
Mutation testing 75% (elapsed: ~48m, remaining: ~15m) 576/765 tested (91 survived, 21 timed out)
Mutation testing 75% (elapsed: ~48m, remaining: ~15m) 579/765 tested (92 survived, 21 timed out)
Mutation testing 75% (elapsed: ~48m, remaining: ~15m) 581/765 tested (92 survived, 21 timed out)
Mutation testing 76% (elapsed: ~48m, remaining: ~15m) 583/765 tested (92 survived, 21 timed out)
Mutation testing 76% (elapsed: ~48m, remaining: ~15m) 585/765 tested (92 survived, 21 timed out)
Mutation testing 76% (elapsed: ~49m, remaining: ~14m) 587/765 tested (92 survived, 21 timed out)
Mutation testing 76% (elapsed: ~49m, remaining: ~14m) 589/765 tested (92 survived, 21 timed out)
Mutation testing 77% (elapsed: ~49m, remaining: ~14m) 591/765 tested (92 survived, 21 timed out)
Mutation testing 77% (elapsed: ~49m, remaining: ~14m) 593/765 tested (92 survived, 21 timed out)
Mutation testing 77% (elapsed: ~49m, remaining: ~14m) 596/765 tested (92 survived, 21 timed out)
Mutation testing 78% (elapsed: ~49m, remaining: ~13m) 598/765 tested (92 survived, 21 timed out)
Mutation testing 78% (elapsed: ~50m, remaining: ~13m) 600/765 tested (93 survived, 21 timed out)
Mutation testing 78% (elapsed: ~50m, remaining: ~13m) 600/765 tested (93 survived, 21 timed out)
Mutation testing 78% (elapsed: ~50m, remaining: ~13m) 602/765 tested (93 survived, 22 timed out)
Mutation testing 78% (elapsed: ~50m, remaining: ~13m) 603/765 tested (93 survived, 23 timed out)
Mutation testing 79% (elapsed: ~50m, remaining: ~13m) 605/765 tested (93 survived, 23 timed out)
Mutation testing 79% (elapsed: ~50m, remaining: ~13m) 607/765 tested (93 survived, 23 timed out)
Mutation testing 79% (elapsed: ~51m, remaining: ~13m) 609/765 tested (93 survived, 23 timed out)
Mutation testing 80% (elapsed: ~51m, remaining: ~12m) 612/765 tested (95 survived, 23 timed out)
Mutation testing 80% (elapsed: ~51m, remaining: ~12m) 612/765 tested (95 survived, 23 timed out)
Mutation testing 80% (elapsed: ~51m, remaining: ~12m) 613/765 tested (95 survived, 24 timed out)
Mutation testing 80% (elapsed: ~51m, remaining: ~12m) 614/765 tested (95 survived, 25 timed out)
Mutation testing 80% (elapsed: ~51m, remaining: ~12m) 615/765 tested (95 survived, 26 timed out)
Mutation testing 80% (elapsed: ~52m, remaining: ~12m) 617/765 tested (95 survived, 26 timed out)
Mutation testing 80% (elapsed: ~52m, remaining: ~12m) 619/765 tested (95 survived, 26 timed out)
Mutation testing 81% (elapsed: ~52m, remaining: ~12m) 620/765 tested (95 survived, 27 timed out)
Mutation testing 81% (elapsed: ~52m, remaining: ~12m) 621/765 tested (95 survived, 28 timed out)
Mutation testing 81% (elapsed: ~52m, remaining: ~12m) 623/765 tested (95 survived, 28 timed out)
Mutation testing 81% (elapsed: ~52m, remaining: ~11m) 625/765 tested (95 survived, 28 timed out)
Mutation testing 81% (elapsed: ~53m, remaining: ~11m) 627/765 tested (95 survived, 28 timed out)
Mutation testing 82% (elapsed: ~53m, remaining: ~11m) 629/765 tested (95 survived, 28 timed out)
Mutation testing 82% (elapsed: ~53m, remaining: ~11m) 631/765 tested (95 survived, 28 timed out)
Mutation testing 82% (elapsed: ~53m, remaining: ~11m) 633/765 tested (95 survived, 28 timed out)
Mutation testing 82% (elapsed: ~53m, remaining: ~11m) 634/765 tested (95 survived, 29 timed out)
Mutation testing 83% (elapsed: ~53m, remaining: ~10m) 636/765 tested (95 survived, 29 timed out)
Mutation testing 83% (elapsed: ~54m, remaining: ~10m) 638/765 tested (95 survived, 29 timed out)
Mutation testing 83% (elapsed: ~54m, remaining: ~10m) 640/765 tested (95 survived, 29 timed out)
Mutation testing 83% (elapsed: ~54m, remaining: ~10m) 642/765 tested (95 survived, 29 timed out)
Mutation testing 84% (elapsed: ~54m, remaining: ~10m) 644/765 tested (95 survived, 29 timed out)
Mutation testing 84% (elapsed: ~54m, remaining: ~9m) 647/765 tested (96 survived, 29 timed out)
Mutation testing 84% (elapsed: ~54m, remaining: ~9m) 649/765 tested (96 survived, 29 timed out)
Mutation testing 85% (elapsed: ~55m, remaining: ~9m) 651/765 tested (96 survived, 29 timed out)
Mutation testing 85% (elapsed: ~55m, remaining: ~9m) 653/765 tested (97 survived, 29 timed out)
Mutation testing 85% (elapsed: ~55m, remaining: ~9m) 655/765 tested (98 survived, 29 timed out)
Mutation testing 85% (elapsed: ~55m, remaining: ~9m) 657/765 tested (100 survived, 29 timed out)
Mutation testing 86% (elapsed: ~55m, remaining: ~8m) 659/765 tested (100 survived, 29 timed out)
Mutation testing 86% (elapsed: ~55m, remaining: ~8m) 661/765 tested (100 survived, 29 timed out)
Mutation testing 86% (elapsed: ~56m, remaining: ~8m) 664/765 tested (100 survived, 29 timed out)
Mutation testing 87% (elapsed: ~56m, remaining: ~8m) 666/765 tested (100 survived, 29 timed out)
Mutation testing 87% (elapsed: ~56m, remaining: ~8m) 668/765 tested (100 survived, 29 timed out)
Mutation testing 87% (elapsed: ~56m, remaining: ~8m) 670/765 tested (100 survived, 29 timed out)
Mutation testing 87% (elapsed: ~56m, remaining: ~7m) 672/765 tested (100 survived, 29 timed out)
Mutation testing 88% (elapsed: ~56m, remaining: ~7m) 674/765 tested (100 survived, 29 timed out)
Mutation testing 88% (elapsed: ~57m, remaining: ~7m) 676/765 tested (100 survived, 29 timed out)
Mutation testing 88% (elapsed: ~57m, remaining: ~7m) 678/765 tested (100 survived, 29 timed out)
Mutation testing 89% (elapsed: ~57m, remaining: ~7m) 681/765 tested (101 survived, 29 timed out)
Mutation testing 89% (elapsed: ~57m, remaining: ~6m) 683/765 tested (102 survived, 29 timed out)
Mutation testing 89% (elapsed: ~57m, remaining: ~6m) 685/765 tested (104 survived, 29 timed out)
Mutation testing 89% (elapsed: ~57m, remaining: ~6m) 687/765 tested (105 survived, 29 timed out)
Mutation testing 89% (elapsed: ~58m, remaining: ~6m) 688/765 tested (105 survived, 29 timed out)
Mutation testing 90% (elapsed: ~58m, remaining: ~6m) 690/765 tested (106 survived, 30 timed out)
Mutation testing 90% (elapsed: ~58m, remaining: ~6m) 692/765 tested (107 survived, 30 timed out)
Mutation testing 90% (elapsed: ~58m, remaining: ~6m) 692/765 tested (107 survived, 30 timed out)
Mutation testing 90% (elapsed: ~58m, remaining: ~6m) 693/765 tested (107 survived, 31 timed out)
Mutation testing 90% (elapsed: ~58m, remaining: ~5m) 695/765 tested (107 survived, 32 timed out)
Mutation testing 90% (elapsed: ~59m, remaining: ~5m) 695/765 tested (107 survived, 32 timed out)
Mutation testing 90% (elapsed: ~59m, remaining: ~5m) 696/765 tested (107 survived, 33 timed out)
Mutation testing 91% (elapsed: ~59m, remaining: ~5m) 697/765 tested (107 survived, 34 timed out)
Mutation testing 91% (elapsed: ~59m, remaining: ~5m) 699/765 tested (107 survived, 35 timed out)
Mutation testing 91% (elapsed: ~59m, remaining: ~5m) 701/765 tested (107 survived, 35 timed out)
Mutation testing 91% (elapsed: ~59m, remaining: ~5m) 703/765 tested (107 survived, 35 timed out)
Mutation testing 92% (elapsed: ~1h 0m, remaining: ~5m) 705/765 tested (107 survived, 35 timed out)
Mutation testing 92% (elapsed: ~1h 0m, remaining: ~5m) 705/765 tested (107 survived, 35 timed out)
Mutation testing 92% (elapsed: ~1h 0m, remaining: ~5m) 706/765 tested (107 survived, 36 timed out)
Mutation testing 92% (elapsed: ~1h 0m, remaining: ~4m) 708/765 tested (107 survived, 37 timed out)
Mutation testing 92% (elapsed: ~1h 0m, remaining: ~4m) 710/765 tested (107 survived, 37 timed out)
Mutation testing 93% (elapsed: ~1h 0m, remaining: ~4m) 712/765 tested (107 survived, 37 timed out)
Mutation testing 93% (elapsed: ~1h 1m, remaining: ~4m) 714/765 tested (107 survived, 37 timed out)
Mutation testing 93% (elapsed: ~1h 1m, remaining: ~4m) 716/765 tested (107 survived, 37 timed out)
Mutation testing 93% (elapsed: ~1h 1m, remaining: ~4m) 718/765 tested (107 survived, 37 timed out)
Mutation testing 94% (elapsed: ~1h 1m, remaining: ~3m) 721/765 tested (108 survived, 37 timed out)
Mutation testing 94% (elapsed: ~1h 1m, remaining: ~3m) 723/765 tested (108 survived, 37 timed out)
Mutation testing 94% (elapsed: ~1h 1m, remaining: ~3m) 725/765 tested (108 survived, 37 timed out)
Mutation testing 95% (elapsed: ~1h 2m, remaining: ~3m) 727/765 tested (108 survived, 37 timed out)
Mutation testing 95% (elapsed: ~1h 2m, remaining: ~3m) 729/765 tested (108 survived, 37 timed out)
Mutation testing 95% (elapsed: ~1h 2m, remaining: ~2m) 731/765 tested (108 survived, 37 timed out)
Mutation testing 95% (elapsed: ~1h 2m, remaining: ~2m) 733/765 tested (108 survived, 37 timed out)
Mutation testing 96% (elapsed: ~1h 2m, remaining: ~2m) 735/765 tested (108 survived, 37 timed out)
Mutation testing 96% (elapsed: ~1h 2m, remaining: ~2m) 737/765 tested (108 survived, 37 timed out)
Mutation testing 96% (elapsed: ~1h 3m, remaining: ~2m) 739/765 tested (108 survived, 37 timed out)
Mutation testing 96% (elapsed: ~1h 3m, remaining: ~2m) 741/765 tested (108 survived, 37 timed out)
Mutation testing 97% (elapsed: ~1h 3m, remaining: ~1m) 743/765 tested (108 survived, 37 timed out)
Mutation testing 97% (elapsed: ~1h 3m, remaining: ~1m) 745/765 tested (108 survived, 37 timed out)
Mutation testing 97% (elapsed: ~1h 3m, remaining: ~1m) 747/765 tested (108 survived, 37 timed out)
Mutation testing 97% (elapsed: ~1h 3m, remaining: ~1m) 749/765 tested (108 survived, 37 timed out)
Mutation testing 98% (elapsed: ~1h 4m, remaining: ~1m) 751/765 tested (108 survived, 37 timed out)
Mutation testing 98% (elapsed: ~1h 4m, remaining: <1m) 754/765 tested (109 survived, 37 timed out)
Mutation testing 98% (elapsed: ~1h 4m, remaining: <1m) 756/765 tested (109 survived, 37 timed out)
Mutation testing 99% (elapsed: ~1h 4m, remaining: <1m) 758/765 tested (109 survived, 37 timed out)
Mutation testing 99% (elapsed: ~1h 4m, remaining: <1m) 760/765 tested (109 survived, 37 timed out)
Mutation testing 99% (elapsed: ~1h 4m, remaining: <1m) 762/765 tested (109 survived, 37 timed out)
Mutation testing 99% (elapsed: ~1h 5m, remaining: <1m) 764/765 tested (109 survived, 37 timed out)

All tests
  ✓ All tests (killed 619)

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a === 'object') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b.constructor !== Object) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:29:5
-       for (const key in a) {
-         if (a[key] !== undefined && b[key] === undefined) {
-           attributes[key] = a[key];
-         }
-       }
+       for (const key in a || key in b) {
+     if (a[key] !== undefined && b[key] === undefined) {
+       attributes[key] = a[key];
+     }
+   }

[Survived] PrecomputedMutator
src/AttributeMap.ts:30:11
-         if (a[key] !== undefined && b[key] === undefined) {
+         if (a[key] !== null && b[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (!a) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (b === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (!b) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:50:13
-           if (!isEqual(a[key], b[key])) {
+           if (!isEqual(a[key], b[key]) && a[key] !== b[key]) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:85:9
-       if (typeof b !== 'object') {
+       if (Object.prototype.toString.call(b) !== '[object Object]') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:97:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.keys(a)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:97:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.values(a)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:97:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.entries(a)).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(1); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode('a'); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(' '); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:20:7
-     if (typeof a !== 'object' || a === null) {
+     if (typeof a !== 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:23:7
-     if (typeof b !== 'object' || b === null) {
+     if (typeof b !== 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:23:7
-     if (typeof b !== 'object' || b === null) {
+     if (typeof b !== 'object' && b !== null) {

[Survived] PrecomputedMutator
src/Delta.ts:51:9
-       if (!handler) {
+       if (handler === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:62:16
-       } else if (ops != null && Array.isArray(ops.ops)) {
+       } else if (ops != null && Array.isArray(ops.ops) && ops.ops.length > 0) {

[Survived] PrecomputedMutator
src/Delta.ts:62:45
-       } else if (ops != null && Array.isArray(ops.ops)) {
+       } else if (ops != null && Array.isArray(ops.ops.slice(1))) {

[Survived] PrecomputedMutator
src/Delta.ts:89:9
-       if (length <= 0) {
+       if (length === 0) {

[Survived] PrecomputedMutator
src/Delta.ts:99:9
-       if (typeof length === 'number' && length <= 0) {
+       if (length === 0) {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index > this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:160:30
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:167:9
-       if (lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes) {
+       if (lastOp && typeof lastOp.retain === 'number' && lastOp.attributes === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:178:5
-       this.ops.forEach(predicate);
+       this.ops.map(predicate);

[Survived] PrecomputedMutator
src/Delta.ts:178:5
-       this.ops.forEach(predicate);
+       this.ops.filter(predicate);

[Survived] PrecomputedMutator
src/Delta.ts:199:12
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, initialValue * 2);

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, 0);

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, null);

[Survived] PrecomputedMutator
src/Delta.ts:204:11
-         if (elem.insert) {
+         if (elem.retain) {

[Survived] PrecomputedMutator
src/Delta.ts:240:24
-       const firstOther = otherIter.peek();
+       const firstOther = otherIter.hasNext();

[Survived] PrecomputedMutator
src/Delta.ts:240:24
-       const firstOther = otherIter.peek();
+       const firstOther = otherIter.rest();

[Survived] PrecomputedMutator
src/Delta.ts:248:9
-           thisIter.peekType() === 'insert' &&
-           thisIter.peekLength() <= firstLeft
+           thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft && thisIter.peekLength() > 0

[Survived] PrecomputedMutator
src/Delta.ts:248:9
-           thisIter.peekType() === 'insert' &&
-           thisIter.peekLength() <= firstLeft
+           thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft && thisIter.peekLength() !== 0

[Survived] PrecomputedMutator
src/Delta.ts:252:18
-           ops.push(thisIter.next());
+           ops.push(thisIter.next(thisIter.peekLength()));

[Survived] PrecomputedMutator
src/Delta.ts:254:11
-         if (firstOther.retain - firstLeft > 0) {
+         if (firstOther.retain - firstLeft !== 0) {

[Survived] PrecomputedMutator
src/Delta.ts:268:13
-           if (otherOp.retain) {
+           if (otherOp.retain + 1) {

[Survived] PrecomputedMutator
src/Delta.ts:275:19
-                 if (thisOp.retain == null) {
+                 if (thisOp.retain === undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               otherIter.peekLength() === 0

[Survived] PrecomputedMutator
src/Delta.ts:309:13
-               !otherIter.hasNext() &&
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               otherIter.peekLength() < 0

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[Math.floor(Math.random() * delta.ops.length)], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[delta.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[Math.floor(Math.random() * delta.ops.length)], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:334:36
-         delta.ops = delta.ops.concat(other.ops.slice(1));
+         delta.ops = delta.ops.concat(other.ops.slice(1, 2));

[Survived] PrecomputedMutator
src/Delta.ts:334:36
-         delta.ops = delta.ops.concat(other.ops.slice(1));
+         delta.ops = delta.ops.concat(other.ops.splice(1));

[Survived] PrecomputedMutator
src/Delta.ts:346:15
-             if (op.insert != null) {
+             if (op.insert !== undefined) {

[Survived] PrecomputedMutator
src/Delta.ts:355:24
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], cursor + 1);

[Survived] PrecomputedMutator
src/Delta.ts:355:24
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], cursor - 1);

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], cursor + 1);

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], cursor - 1);

[Survived] PrecomputedMutator
src/Delta.ts:355:53
-       const diffResult = diff(strings[0], strings[1], cursor);
+       const diffResult = diff(strings[0], strings[1], cursor + 2);

[Survived] PrecomputedMutator
src/Delta.ts:360:14
-         while (length > 0) {
+         while (length !== 0) {

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength() + length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.max(otherIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.abs(otherIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.floor(otherIter.peekLength(), length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength() + 1, length);

[Survived] PrecomputedMutator
src/Delta.ts:364:33
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength() * 2, length);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), length + 1);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), length * 2);

[Survived] PrecomputedMutator
src/Delta.ts:365:27
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(opLength + 1));

[Survived] PrecomputedMutator
src/Delta.ts:365:27
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(opLength * 2));

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, thisIter.peekLength() + 1);

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, thisIter.peekLength() - 1);

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.abs(length, thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.floor(length, thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, thisIter.peekLength() + 1);

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, otherIter.peekLength() - 1);

[Survived] PrecomputedMutator
src/Delta.ts:408:11
-         if (iter.peekType() !== 'insert') {
+         if (iter.peekType() === 'retain') {

[Survived] PrecomputedMutator
src/Delta.ts:415:35
-             ? thisOp.insert.indexOf(newline, start) - start
+             ? thisOp.insert.indexOf('\n', start) - start

[Survived] PrecomputedMutator
src/Delta.ts:418:19
-           line.push(iter.next());
+           line.push(iter.next(2));

[Survived] PrecomputedMutator
src/Delta.ts:419:18
-         } else if (index > 0) {
+         } else if (index !== 0) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain || op.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.retain ? op.attributes : null) {

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain !== null) {

[Survived] PrecomputedMutator
src/Delta.ts:456:18
-         } else if (typeof op.retain === 'object' && op.retain !== null) {
+         } else if (op.retain !== 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:457:23
-           const slice = base.slice(baseIndex, baseIndex + 1);
+           const slice = base.slice(baseIndex, baseIndex + 2);

[Survived] PrecomputedMutator
src/Delta.ts:457:23
-           const slice = base.slice(baseIndex, baseIndex + 1);
+           const slice = base.slice(baseIndex, baseIndex + 3);

[Survived] PrecomputedMutator
src/Delta.ts:457:23
-           const slice = base.slice(baseIndex, baseIndex + 1);
+           const slice = base.slice(baseIndex, baseIndex + 4);

[Survived] PrecomputedMutator
src/Delta.ts:457:45
-           const slice = base.slice(baseIndex, baseIndex + 1);
+           const slice = base.slice(baseIndex, baseIndex + 2);

[Survived] PrecomputedMutator
src/Delta.ts:466:11
-             AttributeMap.invert(op.attributes, baseOp.attributes),
+             AttributeMap.diff(op.attributes, baseOp.attributes),

[Survived] PrecomputedMutator
src/Delta.ts:480:42
-         return this.transformPosition(arg, priority);
+         return this.transformPosition(arg, priority * 2);

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(2)));

[Survived] PrecomputedMutator
src/Delta.ts:491:32
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(0)));

[Survived] PrecomputedMutator
src/Delta.ts:511:13
-               typeof thisData === 'object' &&
-               thisData !== null &&
-               typeof otherData === 'object' &&
-               otherData !== null
+               typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null && thisData.length === otherData.length

[Survived] PrecomputedMutator
src/Delta.ts:518:48
-                 const handler = Delta.getHandler(embedType);
+                 const handler = Delta.getHandler(embedType.toLowerCase());

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if (handler.transform(thisData[embedType], otherData[embedType], !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if (handler.transform(otherData[embedType], thisData[embedType], priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if (handler.transform(thisData[embedType], otherData[embedType], priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:557:18
-         } else if (nextType === 'insert' && (offset < index || !priority)) {
+         } else if (nextType === 'insert' && (offset > index || !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:557:18
-         } else if (nextType === 'insert' && (offset < index || !priority)) {
+         } else if (nextType === 'insert' && (offset !== index || !priority)) {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof module !== 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof module === 'undefined') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (typeof module === 'function') {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (op.retain === null) {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (typeof op.retain === 'number') {

[Survived] PrecomputedMutator
src/OpIterator.ts:48:20
-           } else if (typeof nextOp.insert === 'string') {
+           } else if (nextOp.insert.length > 0) {

[Survived] PrecomputedMutator
src/OpIterator.ts:94:16
-       } else if (this.offset === 0) {
+       } else if (this.offset < 0) {

Ran 0.95 tests per mutant on average.
-----------------|---------|----------|-----------|------------|----------|----------|
File             | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------|---------|----------|-----------|------------|----------|----------|
All files        |   85.75 |      619 |        37 |        109 |        0 |        0 |
 AttributeMap.ts |   80.95 |       68 |         0 |         16 |        0 |        0 |
 Delta.ts        |   85.22 |      484 |        29 |         89 |        0 |        0 |
 Op.ts           |   66.67 |        3 |         1 |          2 |        0 |        0 |
 OpIterator.ts   |   97.26 |       64 |         7 |          2 |        0 |        0 |
-----------------|---------|----------|-----------|------------|----------|----------|
[32m02:46:27 (2858) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/reports/mutation/mutation.html
[32m02:46:27 (2858) INFO MutationTestExecutor[39m Done in 65 minutes 11 seconds.

real	65m12.894s
user	94m55.323s
sys	3m52.520s
