*** using precomputed mutations ***
[32m18:18:03 (3041) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m18:18:03 (3041) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m18:18:03 (3041) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m18:18:03 (3041) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m18:18:03 (3041) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m18:18:04 (3041) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2028 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition + 1)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition - 1)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition * 2)
Mutant 6 in q.js: bootstrap replaced with "hello"
Mutant 7 in q.js: bootstrap replaced with console.log
Mutant 8 in q.js: "promise" replaced with "fulfilled"
Mutant 9 in q.js: "promise" replaced with "rejected"
Mutant 10 in q.js: "promise" replaced with "pending"
Mutant 11 in q.js: definition replaced with 0
Mutant 12 in q.js: definition replaced with null
Mutant 13 in q.js: definition replaced with "hello"
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined" && typeof module === "undefined"
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "function" && typeof module === "function"
Mutant 16 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "object" && exports.module === "module"
Mutant 17 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && false
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && true
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && typeof define.amd.amd === "function"
Mutant 20 in q.js: definition replaced with null
Mutant 21 in q.js: definition replaced with undefined
Mutant 22 in q.js: definition replaced with 0
Mutant 23 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 24 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "object"
Mutant 25 in q.js: typeof ses !== "undefined" replaced with typeof ses === "string"
Mutant 26 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 27 in q.js: !ses.ok() replaced with !ses.notOk()
Mutant 28 in q.js: ses.ok replaced with ses.maybeOk
Mutant 29 in q.js: ses.ok replaced with ses.ok === true
Mutant 30 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" || typeof self !== "undefined" || typeof global !== "undefined"
Mutant 31 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 32 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" || typeof self !== "undefined" || typeof document !== "undefined"
Mutant 33 in q.js: definition replaced with 0
Mutant 34 in q.js: definition replaced with null
Mutant 35 in q.js: definition replaced with undefined
Mutant 36 in q.js: captureLine replaced with 1 + 1
Mutant 37 in q.js: captureLine replaced with "hello world"
Mutant 38 in q.js: captureLine replaced with null
Mutant 39 in q.js: head.next replaced with head.task
Mutant 40 in q.js: head.next replaced with head.next.task
Mutant 41 in q.js: head.next replaced with head.task = null
Mutant 42 in q.js: domain replaced with !domain
Mutant 43 in q.js: domain replaced with domain.exit()
Mutant 44 in q.js: domain replaced with domain.enter()
Mutant 45 in q.js: domain.enter replaced with console.log
Mutant 46 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, 1 + 1)
Mutant 47 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, false)
Mutant 48 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, null)
Mutant 49 in q.js: task replaced with undefined
Mutant 50 in q.js: task replaced with null
Mutant 51 in q.js: task replaced with 0
Mutant 52 in q.js: domain replaced with 0
Mutant 53 in q.js: domain replaced with null
Mutant 54 in q.js: domain replaced with undefined
Mutant 55 in q.js: laterQueue.length replaced with laterQueue.pop()
Mutant 56 in q.js: laterQueue.length replaced with laterQueue.shift()
Mutant 57 in q.js: laterQueue.length replaced with laterQueue.slice(1)
Mutant 58 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 59 in q.js: laterQueue.pop replaced with laterQueue.length
Mutant 60 in q.js: task replaced with undefined
Mutant 61 in q.js: task replaced with null
Mutant 62 in q.js: task replaced with 0
Mutant 63 in q.js: isNodeJS replaced with !isNodeJS
Mutant 64 in q.js: isNodeJS replaced with isNodeJS && false
Mutant 65 in q.js: isNodeJS replaced with isNodeJS || true
Mutant 66 in q.js: domain replaced with domain.exit()
Mutant 67 in q.js: domain replaced with domain.enter()
Mutant 68 in q.js: domain replaced with domain.foo()
Mutant 69 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush())
Mutant 70 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush + 0)
Mutant 71 in q.js: setTimeout replaced with setInterval
Mutant 72 in q.js: flush replaced with console.log("hello")
Mutant 73 in q.js: 0 replaced with 1
Mutant 74 in q.js: 0 replaced with null
Mutant 75 in q.js: 0 replaced with undefined
Mutant 76 in q.js: domain replaced with !domain
Mutant 77 in q.js: domain replaced with domain && true
Mutant 78 in q.js: domain replaced with domain || false
Mutant 79 in q.js: domain.enter replaced with domain.exit
Mutant 80 in q.js: domain replaced with !domain
Mutant 81 in q.js: domain replaced with domain === undefined
Mutant 82 in q.js: domain.exit replaced with domain.enter
Mutant 83 in q.js: domain.exit replaced with domain.remove
Mutant 84 in q.js: domain.exit replaced with domain.pop
Mutant 85 in q.js: !flushing replaced with !flushing && true
Mutant 86 in q.js: !flushing replaced with flushing || false
Mutant 87 in q.js: !flushing replaced with flushing ? false : true
Mutant 88 in q.js: flush replaced with function () {
  throw new Error("Testing mutation");
}
Mutant 89 in q.js: flush replaced with function () {
  return "Testing mutation";
}
Mutant 90 in q.js: flush replaced with function () {
  return;
}
Mutant 91 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 92 in q.js: typeof window !== "undefined" replaced with typeof window !== "string"
Mutant 93 in q.js: typeof window !== "undefined" replaced with typeof window !== "function"
Mutant 94 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 95 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 96 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(NaN)
Mutant 97 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 98 in q.js: window replaced with null
Mutant 99 in q.js: window replaced with undefined
Mutant 100 in q.js: window replaced with {
  toString: function () {
    return "object";
  }
}
Mutant 101 in q.js: flush replaced with flush()
Mutant 102 in q.js: flush replaced with flush(0)
Mutant 103 in q.js: flush replaced with flush(1)
Mutant 104 in q.js: flush replaced with null
Mutant 105 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && MessageChannel.toString().indexOf("[native code]") === -1
Mutant 106 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && MessageChannel.toString().indexOf("[object MessageChannel]") === -1
Mutant 107 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && MessageChannel.toString().indexOf("MessageChannel") === -1
Mutant 108 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 109 in q.js: 0 replaced with 1
Mutant 110 in q.js: 0 replaced with "hello"
Mutant 111 in q.js: 0 replaced with null
Mutant 112 in q.js: setTimeout replaced with setInterval
Mutant 113 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 114 in q.js: flush replaced with flush()
Mutant 115 in q.js: flush replaced with flush.call()
Mutant 116 in q.js: 0 replaced with 1
Mutant 117 in q.js: 0 replaced with -1
Mutant 118 in q.js: 0 replaced with NaN
Mutant 119 in q.js: requestPortTick replaced with requestTick
Mutant 120 in q.js: setTimeout replaced with setInterval
Mutant 121 in q.js: flush replaced with flush()
Mutant 122 in q.js: flush replaced with flush + 1
Mutant 123 in q.js: flush replaced with flush + 2
Mutant 124 in q.js: 0 replaced with 1
Mutant 125 in q.js: 0 replaced with -1
Mutant 126 in q.js: 0 replaced with Math.random()
Mutant 127 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 128 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 129 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 130 in q.js: task replaced with null
Mutant 131 in q.js: task replaced with undefined
Mutant 132 in q.js: task replaced with 0
Mutant 133 in q.js: !flushing replaced with flushing
Mutant 134 in q.js: !flushing replaced with !flushing && true
Mutant 135 in q.js: !flushing replaced with flushing || false
Mutant 136 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 137 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 138 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments.length)
Mutant 139 in q.js: call.apply replaced with call.bind
Mutant 140 in q.js: call.apply replaced with call.call
Mutant 141 in q.js: f replaced with f + 1
Mutant 142 in q.js: f replaced with f - 1
Mutant 143 in q.js: f replaced with f * 2
Mutant 144 in q.js: arguments replaced with 1
Mutant 145 in q.js: arguments replaced with "1"
Mutant 146 in q.js: arguments replaced with true
Mutant 147 in q.js: uncurryThis replaced with null
Mutant 148 in q.js: uncurryThis replaced with undefined
Mutant 149 in q.js: Array.prototype.slice replaced with Array.prototype.filter
Mutant 150 in q.js: Array.prototype.slice replaced with Array.prototype.sort
Mutant 151 in q.js: Array.prototype.slice replaced with Array.prototype.reverse
Mutant 152 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 153 in q.js: arguments.length === 1 replaced with arguments.length === 2
Mutant 154 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 155 in q.js: 1 replaced with 1 + 1
Mutant 156 in q.js: 1 replaced with 2
Mutant 157 in q.js: 1 replaced with 3
Mutant 158 in q.js: index in this replaced with index >= this.length
Mutant 159 in q.js: index in this replaced with index > this.length
Mutant 160 in q.js: index in this replaced with index !== this.length
Mutant 161 in q.js: ++index >= length replaced with ++index > length
Mutant 162 in q.js: ++index >= length replaced with index++ >= length
Mutant 163 in q.js: ++index >= length replaced with index++ > length
Mutant 164 in q.js: index < length replaced with index > length
Mutant 165 in q.js: index < length replaced with index += 1
Mutant 166 in q.js: index < length replaced with index *= 2
Mutant 167 in q.js: index++ replaced with index--
Mutant 168 in q.js: index++ replaced with index += 2
Mutant 169 in q.js: index++ replaced with index = index + 1
Mutant 170 in q.js: index in this replaced with index > this
Mutant 171 in q.js: index in this replaced with index === this
Mutant 172 in q.js: index in this replaced with index + 1 in this
Mutant 173 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 174 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 175 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], this[index + 1])
Mutant 176 in q.js: basis replaced with basis + 1
Mutant 177 in q.js: basis replaced with basis * 2
Mutant 178 in q.js: basis replaced with basis - 1
Mutant 179 in q.js: this[index] replaced with this[index] + 1
Mutant 180 in q.js: this[index] replaced with this[index] * 2
Mutant 181 in q.js: this[index] replaced with this[index] - 1
Mutant 182 in q.js: index replaced with index + 1
Mutant 183 in q.js: index replaced with index - 1
Mutant 184 in q.js: index replaced with index * 2
Mutant 185 in q.js: i < this.length replaced with i <= this.length
Mutant 186 in q.js: i < this.length replaced with i > this.length
Mutant 187 in q.js: i < this.length replaced with i + 1 < this.length
Mutant 188 in q.js: i++ replaced with i--
Mutant 189 in q.js: i++ replaced with i *= 2
Mutant 190 in q.js: i++ replaced with i = i + 2
Mutant 191 in q.js: this[i] === value replaced with this[i] !== value
Mutant 192 in q.js: this[i] === value replaced with this[i] + value
Mutant 193 in q.js: this[i] === value replaced with this[i] - value
Mutant 194 in q.js: collect.push replaced with collect.pop
Mutant 195 in q.js: collect.push replaced with collect.shift
Mutant 196 in q.js: collect.push replaced with collect.unshift
Mutant 197 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(thisp, [value, index, self])
Mutant 198 in q.js: callback.call(thisp, value, index, self) replaced with callback.bind(thisp, value, index, self)()
Mutant 199 in q.js: callback.call(thisp, value, index, self) replaced with callback(value, index, self)
Mutant 200 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, self, index)
Mutant 201 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, index, self, value)
Mutant 202 in q.js: thisp replaced with null
Mutant 203 in q.js: thisp replaced with undefined
Mutant 204 in q.js: thisp replaced with 0
Mutant 205 in q.js: value replaced with undefined
Mutant 206 in q.js: value replaced with null
Mutant 207 in q.js: value replaced with 0
Mutant 208 in q.js: index replaced with index + 1
Mutant 209 in q.js: index replaced with index - 1
Mutant 210 in q.js: index replaced with this[index]
Mutant 211 in q.js: self replaced with self.length
Mutant 212 in q.js: self replaced with self[0]
Mutant 213 in q.js: self replaced with self[i]
Mutant 214 in q.js: uncurryThis replaced with function_bind.call.uncurryThis
Mutant 215 in q.js: uncurryThis replaced with Function.call.uncurryThis
Mutant 216 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 217 in q.js: object replaced with null
Mutant 218 in q.js: object replaced with undefined
Mutant 219 in q.js: object replaced with {}
Mutant 220 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && key !== "prototype"
Mutant 221 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && key !== "length"
Mutant 222 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && key !== "constructor"
Mutant 223 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key])
Mutant 224 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(key in object)
Mutant 225 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object.hasOwnProperty(key))
Mutant 226 in q.js: object replaced with null
Mutant 227 in q.js: object replaced with undefined
Mutant 228 in q.js: object replaced with 0
Mutant 229 in q.js: key replaced with value
Mutant 230 in q.js: key replaced with this[key]
Mutant 231 in q.js: key replaced with key + 1
Mutant 232 in q.js: key replaced with this[key]
Mutant 233 in q.js: key replaced with key + 1
Mutant 234 in q.js: key replaced with key + "foo"
Mutant 235 in q.js: Object replaced with null
Mutant 236 in q.js: Object replaced with undefined
Mutant 237 in q.js: Object replaced with 0
Mutant 238 in q.js: value replaced with value + 1
Mutant 239 in q.js: value replaced with value * 2
Mutant 240 in q.js: value replaced with value - 1
Mutant 241 in q.js: exception replaced with exception.message
Mutant 242 in q.js: exception replaced with exception.stack
Mutant 243 in q.js: exception replaced with exception.name
Mutant 244 in q.js: typeof ReturnValue !== "undefined" replaced with typeof QReturnValue !== "undefined"
Mutant 245 in q.js: typeof ReturnValue !== "undefined" replaced with QReturnValue !== undefined
Mutant 246 in q.js: typeof ReturnValue !== "undefined" replaced with QReturnValue !== null
Mutant 247 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack !== undefined
Mutant 248 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack.length > 0
Mutant 249 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 250 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.source; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 251 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.source.length; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 252 in q.js: !!p replaced with !p
Mutant 253 in q.js: !!p replaced with p && true
Mutant 254 in q.js: !!p replaced with p || false
Mutant 255 in q.js: p = p.source replaced with p = p.source.next
Mutant 256 in q.js: p = p.source replaced with p = p.source.previous
Mutant 257 in q.js: p = p.source replaced with p = p.source.next.next
Mutant 258 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ < p.stackCounter
Mutant 259 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ === p.stackCounter
Mutant 260 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 261 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 262 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: Math.random(),
  configurable: true
})
Mutant 263 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 264 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 265 in q.js: "__minimumStackCounter__" replaced with "__stackTrace__"
Mutant 266 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 267 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter,
  configurable: false
}
Mutant 268 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter,
  configurable: true,
  writable: false
}
Mutant 269 in q.js: stacks.unshift replaced with stacks.push
Mutant 270 in q.js: stacks.unshift replaced with stacks.pop
Mutant 271 in q.js: stacks.unshift replaced with stacks.shift
Mutant 272 in q.js: p.stack replaced with promise.stackCounter
Mutant 273 in q.js: p.stack replaced with promise.stack.length
Mutant 274 in q.js: p.stack replaced with promise.stack.split("\n")[0]
Mutant 275 in q.js: stacks.unshift replaced with stacks.pop
Mutant 276 in q.js: stacks.unshift replaced with stacks.push
Mutant 277 in q.js: stacks.unshift replaced with stacks.shift
Mutant 278 in q.js: error.stack replaced with error.message
Mutant 279 in q.js: error.stack replaced with error.name
Mutant 280 in q.js: error.stack replaced with error.code
Mutant 281 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + " "
Mutant 282 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\t" + STACK_JUMP_SEPARATOR + "\t"
Mutant 283 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "" + STACK_JUMP_SEPARATOR + ""
Mutant 284 in q.js: filterStackString replaced with concatedStacks
Mutant 285 in q.js: concatedStacks replaced with concatedStacks.reverse()
Mutant 286 in q.js: concatedStacks replaced with concatedStacks.slice(1)
Mutant 287 in q.js: concatedStacks replaced with concatedStacks.concat(["new error"])
Mutant 288 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 289 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: false
})
Mutant 290 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: true
})
Mutant 291 in q.js: "stack" replaced with "stackTrace"
Mutant 292 in q.js: "stack" replaced with "error"
Mutant 293 in q.js: "stack" replaced with "message"
Mutant 294 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 295 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.toUpperCase(),
  configurable: true
}
Mutant 296 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.split("").reverse().join(""),
  configurable: true
}
Mutant 297 in q.js: "\n" replaced with " "
Mutant 298 in q.js: "\n" replaced with "\\n"
Mutant 299 in q.js: "\n" replaced with "\\s+"
Mutant 300 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 301 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 302 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = NaN; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 303 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 0; i <= lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 304 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = lines.length - 1; i >= 0; --i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 305 in q.js: i < lines.length replaced with i <= lines.length
Mutant 306 in q.js: i < lines.length replaced with i > lines.length
Mutant 307 in q.js: i < lines.length replaced with i + 1 < lines.length
Mutant 308 in q.js: ++i replaced with i--
Mutant 309 in q.js: ++i replaced with i += 2
Mutant 310 in q.js: ++i replaced with i = i + 1
Mutant 311 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) || !isNodeFrame(line) || line
Mutant 312 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && line
Mutant 313 in q.js: isInternalFrame replaced with isInternalFrame !== true
Mutant 314 in q.js: line replaced with line + 1
Mutant 315 in q.js: line replaced with line - 1
Mutant 316 in q.js: line replaced with line * 2
Mutant 317 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 318 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 319 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 320 in q.js: line replaced with line - 1
Mutant 321 in q.js: line replaced with line + 1
Mutant 322 in q.js: line replaced with line * 2
Mutant 323 in q.js: "\n" replaced with "\t"
Mutant 324 in q.js: "\n" replaced with " "
Mutant 325 in q.js: "\n" replaced with ""
Mutant 326 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 327 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 328 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 329 in q.js: "(module.js:" replaced with "(module.js:)" + 1
Mutant 330 in q.js: "(module.js:" replaced with "(module.js:)" + "1"
Mutant 331 in q.js: "(module.js:" replaced with "(module.js:)" + "1" + "2"
Mutant 332 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 333 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 334 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 335 in q.js: "(node.js:" replaced with "(node.js:)"
Mutant 336 in q.js: stackLine replaced with stackLine.toLowerCase()
Mutant 337 in q.js: stackLine replaced with stackLine.split('').reverse().join('')
Mutant 338 in q.js: stackLine replaced with stackLine.slice(stackLine.length - 1, stackLine.length)
Mutant 339 in q.js: attempt1 replaced with attempt1[1] === undefined
Mutant 340 in q.js: attempt1 replaced with attempt1[1] === null
Mutant 341 in q.js: attempt1 replaced with attempt1[1] === 0
Mutant 342 in q.js: Number replaced with "a"
Mutant 343 in q.js: Number replaced with null
Mutant 344 in q.js: Number replaced with undefined
Mutant 345 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 346 in q.js: attempt1[2] replaced with attempt1[0]
Mutant 347 in q.js: attempt1[2] replaced with attempt2[1]
Mutant 348 in q.js: stackLine replaced with stackLine.split(" ").reverse().join(" ")
Mutant 349 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 350 in q.js: stackLine replaced with stackLine.replace(/\d+/g, "X")
Mutant 351 in q.js: attempt2 replaced with attempt2[2]
Mutant 352 in q.js: attempt2 replaced with attempt2[1]
Mutant 353 in q.js: attempt2 replaced with attempt2[0]
Mutant 354 in q.js: Number replaced with "hello"
Mutant 355 in q.js: Number replaced with undefined
Mutant 356 in q.js: Number replaced with null
Mutant 357 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 358 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 359 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 360 in q.js: stackLine replaced with stackLine.toLowerCase()
Mutant 361 in q.js: stackLine replaced with stackLine.split(" ").join("")
Mutant 362 in q.js: stackLine replaced with stackLine.substr(1)
Mutant 363 in q.js: attempt3 replaced with attempt3[1]
Mutant 364 in q.js: attempt3 replaced with attempt3.length
Mutant 365 in q.js: attempt3 replaced with attempt3[0]
Mutant 366 in q.js: Number replaced with "1"
Mutant 367 in q.js: Number replaced with 1 + 1
Mutant 368 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 369 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 370 in q.js: attempt3[2] replaced with attempt3[4]
Mutant 371 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 372 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[1]
Mutant 373 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 374 in q.js: stackLine replaced with stackLine.split(" ")[1]
Mutant 375 in q.js: stackLine replaced with stackLine.split(":")[1]
Mutant 376 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber == null
Mutant 377 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 378 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === null
Mutant 379 in q.js: !hasStacks replaced with hasStacks
Mutant 380 in q.js: !hasStacks replaced with resolvedPromise
Mutant 381 in q.js: e.stack.split replaced with e.stack.slice
Mutant 382 in q.js: e.stack.split replaced with e.stack.substring
Mutant 383 in q.js: e.stack.split replaced with e.stack.replace
Mutant 384 in q.js: "\n" replaced with "\t"
Mutant 385 in q.js: "\n" replaced with " "
Mutant 386 in q.js: "\n" replaced with "\\n"
Mutant 387 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 388 in q.js: lines[0].indexOf replaced with lines[0].lastIndexOf
Mutant 389 in q.js: lines[0].indexOf replaced with lines[lines.length - 1].indexOf
Mutant 390 in q.js: "@" replaced with "%"
Mutant 391 in q.js: "@" replaced with "#"
Mutant 392 in q.js: "@" replaced with "&"
Mutant 393 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 394 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 395 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 396 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, null)
Mutant 397 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, "foo")
Mutant 398 in q.js: arguments replaced with []
Mutant 399 in q.js: arguments replaced with {}
Mutant 400 in q.js: arguments replaced with [1, 2, 3]
Mutant 401 in q.js: value instanceof Promise replaced with value !== null
Mutant 402 in q.js: value instanceof Promise replaced with value !== undefined
Mutant 403 in q.js: value instanceof Promise replaced with value !== "Promise"
Mutant 404 in q.js: isPromiseAlike(value) replaced with value instanceof Promise
Mutant 405 in q.js: isPromiseAlike(value) replaced with value.then
Mutant 406 in q.js: isPromiseAlike(value) replaced with value.constructor.name === "Promise"
Mutant 407 in q.js: value replaced with value + 1
Mutant 408 in q.js: value replaced with value - 1
Mutant 409 in q.js: value replaced with value * 2
Mutant 410 in q.js: value replaced with value + 1
Mutant 411 in q.js: value replaced with value * 2
Mutant 412 in q.js: value replaced with value - 1
Mutant 413 in q.js: fulfill replaced with reject
Mutant 414 in q.js: value replaced with null
Mutant 415 in q.js: value replaced with undefined
Mutant 416 in q.js: value replaced with "foo"
Mutant 417 in q.js: object_create replaced with null
Mutant 418 in q.js: object_create replaced with undefined
Mutant 419 in q.js: object_create replaced with {}
Mutant 420 in q.js: object_create replaced with null
Mutant 421 in q.js: object_create replaced with undefined
Mutant 422 in q.js: object_create replaced with 0
Mutant 423 in q.js: Promise.prototype replaced with Object.prototype
Mutant 424 in q.js: Promise.prototype replaced with Promise.reject
Mutant 425 in q.js: Promise.prototype replaced with null
Mutant 426 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 427 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 428 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 429 in q.js: messages replaced with messages.length
Mutant 430 in q.js: messages replaced with !messages.length
Mutant 431 in q.js: messages replaced with messages.length > 0
Mutant 432 in q.js: messages.push replaced with messages.unshift
Mutant 433 in q.js: messages.push replaced with messages.pop
Mutant 434 in q.js: args replaced with [args]
Mutant 435 in q.js: args replaced with args[0]
Mutant 436 in q.js: args replaced with args[args.length - 1]
Mutant 437 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 438 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 439 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === 0
Mutant 440 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 441 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 442 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 443 in q.js: operands[1] replaced with operands[2]
Mutant 444 in q.js: operands[1] replaced with operands[1] + 1
Mutant 445 in q.js: operands[1] replaced with null
Mutant 446 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(promise))
Mutant 447 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(this))
Mutant 448 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch.apply(null))
Mutant 449 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 450 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.bind
Mutant 451 in q.js: resolvedPromise replaced with null
Mutant 452 in q.js: resolvedPromise replaced with undefined
Mutant 453 in q.js: resolvedPromise replaced with false
Mutant 454 in q.js: args replaced with args.slice(1)
Mutant 455 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 456 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 457 in q.js: messages replaced with messages.length
Mutant 458 in q.js: messages replaced with messages[0]
Mutant 459 in q.js: messages replaced with messages.slice(1)
Mutant 460 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 461 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 462 in q.js: resolvedPromise replaced with fulfill(resolvedPromise)
Mutant 463 in q.js: isPromise(nearerValue) replaced with nearerValue === undefined
Mutant 464 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 465 in q.js: isPromise(nearerValue) replaced with nearerValue === 'foo'
Mutant 466 in q.js: isPromise replaced with isObject
Mutant 467 in q.js: isPromise replaced with isFunction
Mutant 468 in q.js: isPromise replaced with isString
Mutant 469 in q.js: nearerValue replaced with nearer(reject(reason))
Mutant 470 in q.js: nearerValue replaced with fulfill(reason)
Mutant 471 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 472 in q.js: !resolvedPromise replaced with !resolvedPromise || !promise
Mutant 473 in q.js: !resolvedPromise replaced with resolvedPromise && promise
Mutant 474 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 475 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 476 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport ? hasStacks : !hasStacks
Mutant 477 in q.js: e.stack.substring replaced with e.stack.length
Mutant 478 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 479 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") - 1
Mutant 480 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") + 2
Mutant 481 in q.js: e.stack.indexOf replaced with e.stack.replace
Mutant 482 in q.js: e.stack.indexOf replaced with e.stack.split
Mutant 483 in q.js: "\n" replaced with "\t"
Mutant 484 in q.js: "\n" replaced with "\r"
Mutant 485 in q.js: "\n" replaced with "\n\n"
Mutant 486 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || !hasStacks
Mutant 487 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 488 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 489 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, undefined)
Mutant 490 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, null)
Mutant 491 in q.js: newPromise replaced with undefined
Mutant 492 in q.js: newPromise replaced with null
Mutant 493 in q.js: newPromise replaced with reject(new Error("invalid promise"))
Mutant 494 in q.js: message replaced with message[0]
Mutant 495 in q.js: message replaced with message.slice(1)
Mutant 496 in q.js: message replaced with message.pop()
Mutant 497 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 498 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 499 in q.js: resolvedPromise replaced with resolvedPromise === null
Mutant 500 in q.js: Q(value) replaced with Q.reject(value)
Mutant 501 in q.js: Q(value) replaced with Q.resolve(null)
Mutant 502 in q.js: Q(value) replaced with Q.resolve(Q.reject(value))
Mutant 503 in q.js: Q replaced with Q.all
Mutant 504 in q.js: value replaced with !value
Mutant 505 in q.js: value replaced with value + 1
Mutant 506 in q.js: value replaced with value * 2
Mutant 507 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 508 in q.js: resolvedPromise replaced with resolvedPromise && resolvedPromise.isFulfilled()
Mutant 509 in q.js: resolvedPromise replaced with resolvedPromise && resolvedPromise.isPending()
Mutant 510 in q.js: become replaced with deferred.reject
Mutant 511 in q.js: become replaced with deferred.notify
Mutant 512 in q.js: become replaced with deferred.promise
Mutant 513 in q.js: fulfill(value) replaced with reject(value)
Mutant 514 in q.js: fulfill(value) replaced with fulfill()
Mutant 515 in q.js: fulfill(value) replaced with fulfill(undefined)
Mutant 516 in q.js: value replaced with null
Mutant 517 in q.js: value replaced with 0
Mutant 518 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 519 in q.js: resolvedPromise replaced with resolvedPromise === null
Mutant 520 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 521 in q.js: reject(reason) replaced with resolve(reason)
Mutant 522 in q.js: reject(reason) replaced with reject(null)
Mutant 523 in q.js: reject replaced with fulfill
Mutant 524 in q.js: reject replaced with Q.reject
Mutant 525 in q.js: reason replaced with reason + 1
Mutant 526 in q.js: reason replaced with undefined
Mutant 527 in q.js: resolvedPromise replaced with resolvedPromise.isFulfilled()
Mutant 528 in q.js: resolvedPromise replaced with resolvedPromise.valueOf()
Mutant 529 in q.js: resolvedPromise replaced with resolvedPromise.state
Mutant 530 in q.js: progress replaced with progress + 1
Mutant 531 in q.js: progress replaced with progress - 1
Mutant 532 in q.js: progress replaced with progress * 2
Mutant 533 in q.js: error replaced with !error
Mutant 534 in q.js: error replaced with error.message
Mutant 535 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 536 in q.js: arguments.length > 2 replaced with arguments.length === 0
Mutant 537 in q.js: arguments.length > 2 replaced with arguments.length % 2 === 0
Mutant 538 in q.js: self.resolve replaced with self.reject
Mutant 539 in q.js: self.resolve replaced with self.notify
Mutant 540 in q.js: self.resolve replaced with self.fulfill
Mutant 541 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 542 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 543 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 544 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, "foo")
Mutant 545 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 546 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 547 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 548 in q.js: 1 replaced with -1
Mutant 549 in q.js: self.resolve replaced with self.reject
Mutant 550 in q.js: self.resolve replaced with self.notify
Mutant 551 in q.js: self.resolve replaced with self.fulfill
Mutant 552 in q.js: value replaced with null
Mutant 553 in q.js: value replaced with undefined
Mutant 554 in q.js: value replaced with "error"
Mutant 555 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 556 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "object"
Mutant 557 in q.js: typeof resolver !== "function" replaced with resolver.constructor !== Function
Mutant 558 in q.js: defer replaced with defer.resolve
Mutant 559 in q.js: defer replaced with defer.reject
Mutant 560 in q.js: defer replaced with defer.notify
Mutant 561 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.resolve, deferred.notify)
Mutant 562 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify, deferred.reject, deferred.resolve)
Mutant 563 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.resolve, deferred.notify, deferred.reject)
Mutant 564 in q.js: deferred.resolve replaced with deferred.reject
Mutant 565 in q.js: deferred.resolve replaced with deferred.notify
Mutant 566 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 567 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 568 in q.js: deferred.reject replaced with deferred.notify
Mutant 569 in q.js: deferred.reject replaced with undefined
Mutant 570 in q.js: deferred.notify replaced with deferred.notify()
Mutant 571 in q.js: deferred.notify replaced with deferred.notify(undefined)
Mutant 572 in q.js: deferred.notify replaced with deferred.notify(null)
Mutant 573 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 574 in q.js: deferred.reject replaced with deferred.resolve
Mutant 575 in q.js: deferred.reject replaced with deferred.notify
Mutant 576 in q.js: reason replaced with null
Mutant 577 in q.js: reason replaced with undefined
Mutant 578 in q.js: reason replaced with "reason"
Mutant 579 in q.js: x replaced with x + 1
Mutant 580 in q.js: x replaced with y
Mutant 581 in q.js: x replaced with x * y
Mutant 582 in q.js: y replaced with x
Mutant 583 in q.js: y replaced with !y
Mutant 584 in q.js: y replaced with y + 1
Mutant 585 in q.js: Q replaced with Q.reject
Mutant 586 in q.js: Q replaced with Q.resolve
Mutant 587 in q.js: Q replaced with Q.all
Mutant 588 in q.js: [this, that] replaced with [that, this]
Mutant 589 in q.js: [this, that] replaced with [this, this]
Mutant 590 in q.js: [this, that] replaced with [null, that]
Mutant 591 in q.js: x === y replaced with x !== y
Mutant 592 in q.js: x === y replaced with x == y
Mutant 593 in q.js: x === y replaced with x > y
Mutant 594 in q.js: i < len replaced with i > len
Mutant 595 in q.js: i < len replaced with i <= len
Mutant 596 in q.js: i < len replaced with i >= len
Mutant 597 in q.js: i++ replaced with i--
Mutant 598 in q.js: i++ replaced with i += 2
Mutant 599 in q.js: i++ replaced with i *= 2
Mutant 600 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 601 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, resolve)
Mutant 602 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, reject)
Mutant 603 in q.js: Q replaced with 1 + 1
Mutant 604 in q.js: Q replaced with "Q"
Mutant 605 in q.js: answerPs[i] replaced with answerPs[i] + 1
Mutant 606 in q.js: answerPs[i] replaced with answerPs[i] - 1
Mutant 607 in q.js: answerPs[i] replaced with answerPs[i] * 2
Mutant 608 in q.js: resolve replaced with reject
Mutant 609 in q.js: reject replaced with resolve
Mutant 610 in q.js: reject replaced with Q.reject
Mutant 611 in q.js: reject replaced with function () {}
Mutant 612 in q.js: Q.race replaced with Q.reject
Mutant 613 in q.js: Q.race replaced with Q.resolve
Mutant 614 in q.js: Q.race replaced with Q.all
Mutant 615 in q.js: fallback === void 0 replaced with fallback === null
Mutant 616 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 617 in q.js: fallback === void 0 replaced with fallback === function () {}
Mutant 618 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 619 in q.js: inspect === void 0 replaced with inspect === null
Mutant 620 in q.js: inspect === void 0 replaced with inspect === undefined
Mutant 621 in q.js: object_create replaced with null
Mutant 622 in q.js: object_create replaced with undefined
Mutant 623 in q.js: object_create replaced with {}
Mutant 624 in q.js: Promise.prototype replaced with Object.prototype
Mutant 625 in q.js: Promise.prototype replaced with Function.prototype
Mutant 626 in q.js: Promise.prototype replaced with Array.prototype
Mutant 627 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.resolve(args))
Mutant 628 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.reject(args))
Mutant 629 in q.js: promise replaced with null
Mutant 630 in q.js: promise replaced with undefined
Mutant 631 in q.js: promise replaced with 0
Mutant 632 in q.js: args replaced with args[0]
Mutant 633 in q.js: args replaced with args[args.length - 1]
Mutant 634 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.then)
Mutant 635 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.resolve)
Mutant 636 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.reject)
Mutant 637 in q.js: fallback.call replaced with fallback.apply
Mutant 638 in q.js: fallback.call replaced with fallback.bind
Mutant 639 in q.js: fallback.call replaced with fallback.toString
Mutant 640 in q.js: op replaced with 1 + 1
Mutant 641 in q.js: op replaced with "hello"
Mutant 642 in q.js: op replaced with function () {}
Mutant 643 in q.js: args replaced with null
Mutant 644 in q.js: args replaced with undefined
Mutant 645 in q.js: args replaced with "foo"
Mutant 646 in q.js: reject replaced with resolve
Mutant 647 in q.js: reject replaced with deferred.reject
Mutant 648 in q.js: exception replaced with new Error("PLACEHOLDER")
Mutant 649 in q.js: exception replaced with null
Mutant 650 in q.js: exception replaced with undefined
Mutant 651 in q.js: resolve replaced with !resolve
Mutant 652 in q.js: resolve replaced with resolve && false
Mutant 653 in q.js: resolve replaced with resolve || true
Mutant 654 in q.js: result replaced with result + 1
Mutant 655 in q.js: result replaced with result * 2
Mutant 656 in q.js: result replaced with result - 1
Mutant 657 in q.js: inspect replaced with inspect.valueOf
Mutant 658 in q.js: inspect replaced with inspect.inspect
Mutant 659 in q.js: inspect replaced with inspect.promiseDispatch
Mutant 660 in q.js: inspect replaced with inspect.state
Mutant 661 in q.js: inspect replaced with promise.inspect.state
Mutant 662 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 663 in q.js: inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 664 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled" || inspected.state === "rejected"
Mutant 665 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 666 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "rejected" || inspected.state === "pending"
Mutant 667 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "settled"
Mutant 668 in q.js: fulfilled replaced with rejected
Mutant 669 in q.js: value replaced with null
Mutant 670 in q.js: value replaced with undefined
Mutant 671 in q.js: value replaced with value.length
Mutant 672 in q.js: exception replaced with reject(new Error(exception))
Mutant 673 in q.js: exception replaced with resolve(exception)
Mutant 674 in q.js: typeof rejected === "function" replaced with rejected !== undefined
Mutant 675 in q.js: typeof rejected === "function" replaced with typeof rejected !== "undefined"
Mutant 676 in q.js: typeof rejected === "function" replaced with typeof rejected === "boolean"
Mutant 677 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.promiseDispatch)
Mutant 678 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.inspect)
Mutant 679 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.valueOf)
Mutant 680 in q.js: self replaced with self.promiseDispatch
Mutant 681 in q.js: self replaced with self.promiseDispatch()
Mutant 682 in q.js: self replaced with self.promiseDispatch.call(self)
Mutant 683 in q.js: rejected replaced with resolve
Mutant 684 in q.js: exception replaced with null
Mutant 685 in q.js: exception replaced with new Error()
Mutant 686 in q.js: exception replaced with undefined
Mutant 687 in q.js: reject replaced with resolve
Mutant 688 in q.js: newException replaced with reject(new Exception("New exception message"))
Mutant 689 in q.js: newException replaced with resolve(new Exception("New exception message"))
Mutant 690 in q.js: exception replaced with null
Mutant 691 in q.js: exception replaced with undefined
Mutant 692 in q.js: exception replaced with "error"
Mutant 693 in q.js: progressed replaced with null
Mutant 694 in q.js: progressed replaced with undefined
Mutant 695 in q.js: value replaced with null
Mutant 696 in q.js: value replaced with undefined
Mutant 697 in q.js: value replaced with "foo"
Mutant 698 in q.js: done replaced with !done
Mutant 699 in q.js: done replaced with done === true
Mutant 700 in q.js: done replaced with done === false
Mutant 701 in q.js: deferred.resolve replaced with deferred.reject
Mutant 702 in q.js: deferred.resolve replaced with deferred.notify
Mutant 703 in q.js: deferred.resolve replaced with null
Mutant 704 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 705 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 706 in q.js: _fulfilled(value) replaced with _fulfilled(reject(value))
Mutant 707 in q.js: value replaced with null
Mutant 708 in q.js: value replaced with undefined
Mutant 709 in q.js: value replaced with {}
Mutant 710 in q.js: done replaced with done && !done
Mutant 711 in q.js: done replaced with done || !done
Mutant 712 in q.js: done replaced with !done && done
Mutant 713 in q.js: deferred.resolve replaced with deferred.reject
Mutant 714 in q.js: deferred.resolve replaced with deferred.notify
Mutant 715 in q.js: _rejected(exception) replaced with _rejected(new Error("Buggy code"))
Mutant 716 in q.js: _rejected(exception) replaced with _rejected(exception.message)
Mutant 717 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 718 in q.js: _rejected replaced with _fulfilled
Mutant 719 in q.js: _rejected replaced with _progressed
Mutant 720 in q.js: _progressed replaced with _rejected
Mutant 721 in q.js: _progressed replaced with _fulfilled
Mutant 722 in q.js: value replaced with null
Mutant 723 in q.js: value replaced with undefined
Mutant 724 in q.js: value replaced with 0
Mutant 725 in q.js: Q.onerror replaced with Q.onerror(e)
Mutant 726 in q.js: Q.onerror replaced with Q.onerror.call(this, e)
Mutant 727 in q.js: Q.onerror replaced with Q.onerror.apply(this, e)
Mutant 728 in q.js: e replaced with null
Mutant 729 in q.js: e replaced with true
Mutant 730 in q.js: e replaced with false
Mutant 731 in q.js: !threw replaced with threw
Mutant 732 in q.js: !threw replaced with threw === true
Mutant 733 in q.js: newValue replaced with null
Mutant 734 in q.js: newValue replaced with undefined
Mutant 735 in q.js: newValue replaced with 0
Mutant 736 in q.js: promise replaced with promise.then(function () {
  return value;
})
Mutant 737 in q.js: promise replaced with promise.then(function () {
  throw value;
})
Mutant 738 in q.js: promise replaced with promise.then(function () {
  return Q(value);
})
Mutant 739 in q.js: callback replaced with callback(null)
Mutant 740 in q.js: callback replaced with callback(undefined)
Mutant 741 in q.js: callback replaced with callback(null, value)
Mutant 742 in q.js: callback replaced with null
Mutant 743 in q.js: callback replaced with undefined
Mutant 744 in q.js: callback replaced with 0
Mutant 745 in q.js: callback.fcall replaced with callback.call
Mutant 746 in q.js: callback.fcall replaced with callback.bind
Mutant 747 in q.js: callback.fcall replaced with callback.apply
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.bind
not replacing callback.fcall with callback.bind
not replacing callback.fcall with callback.apply
not replacing callback.fcall with callback.apply
Mutant 748 in q.js: value replaced with null
Mutant 749 in q.js: value replaced with undefined
Mutant 750 in q.js: value replaced with 0
Mutant 751 in q.js: value replaced with value + 1
Mutant 752 in q.js: value replaced with value * 2
Mutant 753 in q.js: value replaced with value - 1
Mutant 754 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 755 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, progressed, rejected)
Mutant 756 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(progressed, rejected, fulfilled)
Mutant 757 in q.js: value replaced with null
Mutant 758 in q.js: value replaced with undefined
Mutant 759 in q.js: value replaced with 0
Mutant 760 in q.js: fulfilled replaced with rejected
Mutant 761 in q.js: fulfilled replaced with undefined
Mutant 762 in q.js: fulfilled replaced with null
Mutant 763 in q.js: rejected replaced with fulfilled
Mutant 764 in q.js: rejected replaced with function () {}
Mutant 765 in q.js: rejected replaced with function (value) {
  return value;
}
Mutant 766 in q.js: progressed replaced with null
Mutant 767 in q.js: progressed replaced with undefined
Mutant 768 in q.js: progressed replaced with function () {}
Mutant 769 in q.js: function () {
  return value;
} replaced with function () {
  return value + 1;
}
Mutant 770 in q.js: function () {
  return value;
} replaced with function () {
  return value + "foo";
}
Mutant 771 in q.js: function () {
  return value;
} replaced with function () {
  return value.toUpperCase();
}
Mutant 772 in q.js: promise replaced with null
Mutant 773 in q.js: promise replaced with undefined
Mutant 774 in q.js: promise replaced with 0
Mutant 775 in q.js: value replaced with null
Mutant 776 in q.js: value replaced with undefined
Mutant 777 in q.js: value replaced with 0
Mutant 778 in q.js: this.then replaced with null
Mutant 779 in q.js: this.then replaced with undefined
Mutant 780 in q.js: this.then replaced with false
Mutant 781 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 782 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason.message;
}
Mutant 783 in q.js: function () {
  throw reason;
} replaced with function () {
  return;
}
Mutant 784 in q.js: Q(promise).thenReject replaced with Q.reject
Mutant 785 in q.js: Q(promise).thenReject replaced with Q.resolve
Mutant 786 in q.js: Q(promise).thenReject replaced with Q.when
Mutant 787 in q.js: promise replaced with null
Mutant 788 in q.js: promise replaced with undefined
Mutant 789 in q.js: promise replaced with new Error("test")
Mutant 790 in q.js: reason replaced with null
Mutant 791 in q.js: reason replaced with undefined
Mutant 792 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 793 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 794 in q.js: isPromise(value) replaced with isFulfilled(value)
Mutant 795 in q.js: isPromise replaced with isRejected
Mutant 796 in q.js: value replaced with value + 1
Mutant 797 in q.js: value replaced with value.length
Mutant 798 in q.js: value replaced with value.toUpperCase()
Mutant 799 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 800 in q.js: inspected.state === "fulfilled" replaced with inspected.value === undefined
Mutant 801 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 802 in q.js: isObject replaced with isPromiseAlike
Mutant 803 in q.js: isObject replaced with isFulfilled
Mutant 804 in q.js: isObject replaced with isRejected
Mutant 805 in q.js: object replaced with object.value
Mutant 806 in q.js: object replaced with object.method
Mutant 807 in q.js: object replaced with object.property
Mutant 808 in q.js: isPromise replaced with !isPromise
Mutant 809 in q.js: isPromise replaced with isPromiseAlike
Mutant 810 in q.js: isPromise replaced with isPending
Mutant 811 in q.js: object replaced with object.inspect().value
Mutant 812 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 813 in q.js: object replaced with object.inspect().state === "pending"
Mutant 814 in q.js: object.inspect replaced with object.inspect + 1
not replacing object.inspect with object.inspect + 1
Mutant 815 in q.js: this.inspect replaced with this.inspect.then
Mutant 816 in q.js: this.inspect replaced with this.inspect.catch
Mutant 817 in q.js: this.inspect replaced with this.inspect.finally
not replacing this.inspect with this.inspect.then
not replacing this.inspect with this.inspect.catch
not replacing this.inspect with this.inspect.finally
Mutant 818 in q.js: isPromise replaced with !isPromise
Mutant 819 in q.js: isPromise replaced with isPromiseAlike
Mutant 820 in q.js: isPromise replaced with isFulfilled
Mutant 821 in q.js: object replaced with object.value
Mutant 822 in q.js: object replaced with object.toString()
Mutant 823 in q.js: object replaced with object.length
Mutant 824 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 825 in q.js: isPromise replaced with isPromiseAlike
Mutant 826 in q.js: isPromise replaced with !isPromise
Mutant 827 in q.js: isPromise replaced with isPending
Mutant 828 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 829 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 830 in q.js: object replaced with object.inspect().state === "pending"
Mutant 831 in q.js: object.inspect replaced with object.inspect.state === "rejected"
not replacing object.inspect with object.inspect.state === "rejected"
Mutant 832 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 833 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections !== false
Mutant 834 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 835 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 836 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise) && unhandledReasons.includes(reason)
Mutant 837 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.length > 0
Mutant 838 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, reason)
Mutant 839 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, rejection)
Mutant 840 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 841 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 842 in q.js: array_indexOf replaced with unhandledReasons.indexOf
Mutant 843 in q.js: array_indexOf replaced with reportedUnhandledRejections.indexOf
Mutant 844 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 845 in q.js: unhandledRejections replaced with unhandledReasons.length
Mutant 846 in q.js: promise replaced with promise.then(function () {
  return reason;
})
Mutant 847 in q.js: promise replaced with promise.catch(function () {
  return reason;
})
Mutant 848 in q.js: promise replaced with promise.then(function () {
  return;
})
Mutant 849 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, null)
Mutant 850 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", null, promise)
Mutant 851 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "Error"
Mutant 852 in q.js: "unhandledRejection" replaced with "unhandledRejection" + 1
Mutant 853 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "rejection"
Mutant 854 in q.js: reason replaced with reason.stack
Mutant 855 in q.js: reason replaced with reason.message
Mutant 856 in q.js: reason replaced with reason.name
Mutant 857 in q.js: promise replaced with null
Mutant 858 in q.js: promise replaced with undefined
Mutant 859 in q.js: promise replaced with 0
Mutant 860 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 861 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.shift
Mutant 862 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.unshift
Mutant 863 in q.js: promise replaced with rejection
Mutant 864 in q.js: promise replaced with reason
Mutant 865 in q.js: promise replaced with undefined
Mutant 866 in q.js: unhandledRejections.push replaced with unhandledReasons.push
Mutant 867 in q.js: unhandledRejections.push replaced with reportedUnhandledRejections.push
Mutant 868 in q.js: promise replaced with null
Mutant 869 in q.js: promise replaced with undefined
Mutant 870 in q.js: promise replaced with 0
Mutant 871 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack === "undefined"
Mutant 872 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack !== "string"
Mutant 873 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack !== "number"
Mutant 874 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 875 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 876 in q.js: reason.stack replaced with reason + ".stack"
Mutant 877 in q.js: reason.stack replaced with reason.stack + "foo"
Mutant 878 in q.js: reason.stack replaced with reason.stack.toUpperCase()
Mutant 879 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 880 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 881 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 882 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 883 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.name
Mutant 884 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 885 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === true
Mutant 886 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 887 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 888 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length)
Mutant 889 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length)
Mutant 890 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons.length)
Mutant 891 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 892 in q.js: array_indexOf replaced with array_findIndex
Mutant 893 in q.js: array_indexOf replaced with array_findLastIndex
Mutant 894 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 895 in q.js: unhandledRejections replaced with unhandledRejections[0]
Mutant 896 in q.js: unhandledRejections replaced with unhandledRejections.indexOf(promise) !== -1
Mutant 897 in q.js: promise replaced with null
Mutant 898 in q.js: promise replaced with undefined
Mutant 899 in q.js: promise replaced with 0
Mutant 900 in q.js: at !== -1 replaced with at === -1
Mutant 901 in q.js: at !== -1 replaced with at > -1
Mutant 902 in q.js: at !== -1 replaced with at < -1
Mutant 903 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections[0], promise)
Mutant 904 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(unhandledRejections, promise)
Mutant 905 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, unhandledRejections)
Mutant 906 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 907 in q.js: array_indexOf replaced with array_findIndex
Mutant 908 in q.js: array_indexOf replaced with array_includes
Mutant 909 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 910 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections[0]
Mutant 911 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 912 in q.js: promise replaced with promise.then()
Mutant 913 in q.js: promise replaced with promise.catch()
Mutant 914 in q.js: promise replaced with promise.finally()
Mutant 915 in q.js: atReport !== -1 replaced with atReport === -2
Mutant 916 in q.js: atReport !== -1 replaced with atReport === 0
Mutant 917 in q.js: atReport !== -1 replaced with atReport === array_length - 1
Mutant 918 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 919 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at])
Mutant 920 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at])
Mutant 921 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 922 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, -1)
Mutant 923 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 924 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 2)
Mutant 925 in q.js: atReport replaced with atReport + 1
Mutant 926 in q.js: atReport replaced with atReport - 1
Mutant 927 in q.js: atReport replaced with reportedUnhandledRejections.length
Mutant 928 in q.js: 1 replaced with 2
Mutant 929 in q.js: 1 replaced with 3
Mutant 930 in q.js: 1 replaced with 4
Mutant 931 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 932 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 933 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, unhandledRejections.length - 1)
Mutant 934 in q.js: at replaced with at - 1
Mutant 935 in q.js: at replaced with at + 1
Mutant 936 in q.js: 1 replaced with 2
Mutant 937 in q.js: 1 replaced with 0
Mutant 938 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 939 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 940 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 941 in q.js: unhandledReasons.splice replaced with unhandledReasons.shift
Mutant 942 in q.js: unhandledReasons.splice replaced with unhandledReasons.pop
Mutant 943 in q.js: at replaced with at - 1
Mutant 944 in q.js: at replaced with at + 1
Mutant 945 in q.js: at replaced with at - 2
Mutant 946 in q.js: 1 replaced with 0
Mutant 947 in q.js: 1 replaced with unhandledReasons.length
Mutant 948 in q.js: 1 replaced with array_indexOf(unhandledRejections, promise)
Mutant 949 in q.js: rejected replaced with rejected && true
Mutant 950 in q.js: rejected replaced with !rejected
Mutant 951 in q.js: rejected replaced with rejected || false
Mutant 952 in q.js: this replaced with null
Mutant 953 in q.js: this replaced with undefined
Mutant 954 in q.js: this replaced with Promise.resolve()
Mutant 955 in q.js: rejected replaced with resolved
Mutant 956 in q.js: reason replaced with reason + 1
Mutant 957 in q.js: reason replaced with reason * 2
Mutant 958 in q.js: reason replaced with reason - 1
Mutant 959 in q.js: trackRejection(rejection, reason) replaced with trackRejection(promise, reason)
Mutant 960 in q.js: trackRejection(rejection, reason) replaced with trackRejection(reject, reason)
Mutant 961 in q.js: trackRejection replaced with untrackRejection
Mutant 962 in q.js: rejection replaced with null
Mutant 963 in q.js: rejection replaced with undefined
Mutant 964 in q.js: rejection replaced with Promise.resolve()
Mutant 965 in q.js: reason replaced with null
Mutant 966 in q.js: reason replaced with undefined
Mutant 967 in q.js: reason replaced with "some random string"
Mutant 968 in q.js: name === null || name === void 0 replaced with name === null
Mutant 969 in q.js: name === null || name === void 0 replaced with name !== null
Mutant 970 in q.js: name === null || name === void 0 replaced with typeof name === "undefined"
Mutant 971 in q.js: value.apply(void 0, args) replaced with value.apply(null)
Mutant 972 in q.js: value.apply(void 0, args) replaced with value.apply(this)
Mutant 973 in q.js: value.apply(void 0, args) replaced with value.apply(args[0])
Mutant 974 in q.js: value.apply replaced with value.call
Mutant 975 in q.js: value.apply replaced with value.bind
Mutant 976 in q.js: value.apply replaced with value.toString
Mutant 977 in q.js: void 0 replaced with null
Mutant 978 in q.js: void 0 replaced with 42
Mutant 979 in q.js: void 0 replaced with this
Mutant 980 in q.js: args replaced with args + 1
Mutant 981 in q.js: args replaced with args[0]
Mutant 982 in q.js: args replaced with args.length
Mutant 983 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice())
Mutant 984 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.concat())
Mutant 985 in q.js: value[name].apply replaced with value[name].call
Mutant 986 in q.js: value replaced with value + 1
Mutant 987 in q.js: value replaced with undefined
Mutant 988 in q.js: value replaced with null
Mutant 989 in q.js: args replaced with args.concat([])
Mutant 990 in q.js: args replaced with args.slice()
Mutant 991 in q.js: value.apply(thisp, args) replaced with value.apply(void 0)
Mutant 992 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 993 in q.js: value.apply(thisp, args) replaced with value.apply("thisp, args")
Mutant 994 in q.js: value.apply replaced with value.call
Mutant 995 in q.js: value.apply replaced with value.bind
Mutant 996 in q.js: value.apply replaced with value.toString
Mutant 997 in q.js: thisp replaced with null
Mutant 998 in q.js: thisp replaced with undefined
Mutant 999 in q.js: thisp replaced with {}
Mutant 1000 in q.js: args replaced with 42
Mutant 1001 in q.js: args replaced with null
Mutant 1002 in q.js: args replaced with args.length
Mutant 1003 in q.js: object_keys replaced with object_values
Mutant 1004 in q.js: object_keys replaced with Object.values
Mutant 1005 in q.js: object_keys replaced with Object.entries
Mutant 1006 in q.js: value replaced with undefined
Mutant 1007 in q.js: value replaced with null
Mutant 1008 in q.js: value replaced with "undefined"
Mutant 1009 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1010 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1011 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1012 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1013 in q.js: deferred.reject replaced with deferred.notify
Mutant 1014 in q.js: deferred.reject replaced with null
Mutant 1015 in q.js: deferred.notify replaced with deferred.reject
Mutant 1016 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1017 in q.js: deferred.notify replaced with deferred.progress
Mutant 1018 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1019 in q.js: deferred.reject replaced with deferred.notify
Mutant 1020 in q.js: deferred.reject replaced with Q.reject
Mutant 1021 in q.js: exception replaced with reject(new Error("This is a different bug."))
Mutant 1022 in q.js: dispatch(object, op, args) replaced with dispatch(object, args, op)
Mutant 1023 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[0])
Mutant 1024 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[1])
Mutant 1025 in q.js: object replaced with null
Mutant 1026 in q.js: object replaced with undefined
Mutant 1027 in q.js: object replaced with {}
Mutant 1028 in q.js: op replaced with op + 1
Mutant 1029 in q.js: op replaced with op - 1
Mutant 1030 in q.js: op replaced with op * 2
Mutant 1031 in q.js: args replaced with undefined
Mutant 1032 in q.js: args replaced with null
Mutant 1033 in q.js: args replaced with []
Mutant 1034 in q.js: Q replaced with Q.reject
Mutant 1035 in q.js: Q replaced with Q.resolve
Mutant 1036 in q.js: Q replaced with Promise.reject
Mutant 1037 in q.js: object replaced with null
Mutant 1038 in q.js: object replaced with undefined
Mutant 1039 in q.js: object replaced with {}
Mutant 1040 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1041 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled)
Mutant 1042 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(null, fulfilled)
Mutant 1043 in q.js: value replaced with undefined
Mutant 1044 in q.js: value replaced with Q.reject("error message")
Mutant 1045 in q.js: fulfilled replaced with rejected
Mutant 1046 in q.js: fulfilled replaced with null
Mutant 1047 in q.js: fulfilled replaced with undefined
Mutant 1048 in q.js: rejected replaced with fulfilled
Mutant 1049 in q.js: rejected replaced with undefined
Mutant 1050 in q.js: rejected replaced with null
Mutant 1051 in q.js: this.all replaced with this.race
Mutant 1052 in q.js: this.all replaced with this.any
Mutant 1053 in q.js: this.all replaced with this.none
not replacing this.all with this.race
not replacing this.all with this.race
not replacing this.all with this.any
not replacing this.all with this.any
not replacing this.all with this.none
not replacing this.all with this.none
Mutant 1054 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(this)
Mutant 1055 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1056 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(123)
Mutant 1057 in q.js: fulfilled.apply replaced with fulfilled.reject
Mutant 1058 in q.js: fulfilled.apply replaced with fulfilled.notify
Mutant 1059 in q.js: fulfilled.apply replaced with fulfilled.all
Mutant 1060 in q.js: void 0 replaced with void 1
Mutant 1061 in q.js: void 0 replaced with null
Mutant 1062 in q.js: void 0 replaced with undefined
Mutant 1063 in q.js: array replaced with null
Mutant 1064 in q.js: array replaced with undefined
Mutant 1065 in q.js: array replaced with []
Mutant 1066 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === undefined
Mutant 1067 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1068 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "object"
Mutant 1069 in q.js: arg replaced with arg + 1
Mutant 1070 in q.js: arg replaced with arg - 1
Mutant 1071 in q.js: arg replaced with arg * 2
Mutant 1072 in q.js: reject replaced with resolve
Mutant 1073 in q.js: result.done replaced with result.fail
Mutant 1074 in q.js: result.done replaced with result.reject
Mutant 1075 in q.js: result.done replaced with result.catch
Mutant 1076 in q.js: result.value replaced with result.error
Mutant 1077 in q.js: result.value replaced with result.value + 1
Mutant 1078 in q.js: result.value replaced with null
Mutant 1079 in q.js: when(result.value, callback, errback) replaced with when(result, callback, errback)
Mutant 1080 in q.js: when(result.value, callback, errback) replaced with when(result.value.all(callback, errback))
Mutant 1081 in q.js: result.value replaced with result.value + 1
Mutant 1082 in q.js: result.value replaced with result.value * 2
Mutant 1083 in q.js: result.value replaced with result.value - 1
Mutant 1084 in q.js: callback replaced with reject
Mutant 1085 in q.js: callback replaced with undefined
Mutant 1086 in q.js: errback replaced with reject
Mutant 1087 in q.js: errback replaced with resolve
Mutant 1088 in q.js: errback replaced with Q.reject
Mutant 1089 in q.js: arg replaced with null
Mutant 1090 in q.js: arg replaced with undefined
Mutant 1091 in q.js: arg replaced with 1
Mutant 1092 in q.js: isStopIteration(exception) replaced with isStopIteration(exception.value)
Mutant 1093 in q.js: isStopIteration(exception) replaced with isStopIteration(Q(exception.value))
Mutant 1094 in q.js: isStopIteration(exception) replaced with isStopIteration(Q.resolve(exception.value))
Mutant 1095 in q.js: isStopIteration replaced with !isStopIteration
Mutant 1096 in q.js: exception replaced with isStopIteration(exception)
Mutant 1097 in q.js: exception replaced with isStopIteration(exception.value.message)
Mutant 1098 in q.js: exception.value replaced with exception
Mutant 1099 in q.js: exception.value replaced with undefined
Mutant 1100 in q.js: exception.value replaced with null
Mutant 1101 in q.js: reject replaced with resolve
Mutant 1102 in q.js: exception replaced with exception.message
Mutant 1103 in q.js: exception replaced with exception.stack
Mutant 1104 in q.js: exception replaced with exception.toString()
Mutant 1105 in q.js: when(result, callback, errback) replaced with when(result, errback, callback)
Mutant 1106 in q.js: when(result, callback, errback) replaced with when(result, errback)
Mutant 1107 in q.js: result replaced with result.value
Mutant 1108 in q.js: result replaced with result.promise
Mutant 1109 in q.js: result replaced with result.then(function (value) {
  return value;
})
Mutant 1110 in q.js: callback replaced with errback
Mutant 1111 in q.js: callback replaced with reject
Mutant 1112 in q.js: errback replaced with reject
Mutant 1113 in q.js: errback replaced with resolve
Mutant 1114 in q.js: errback replaced with deferred.reject
Mutant 1115 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1116 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1117 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(42)
Mutant 1118 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1119 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1120 in q.js: this replaced with null
Mutant 1121 in q.js: this replaced with undefined
Mutant 1122 in q.js: this replaced with {}
Mutant 1123 in q.js: arguments replaced with null
Mutant 1124 in q.js: arguments replaced with undefined
Mutant 1125 in q.js: arguments replaced with []
Mutant 1126 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1127 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(null, "throw"))
Mutant 1128 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(undefined, "throw"))
Mutant 1129 in q.js: continuer replaced with continuer.bind(null, "next")
Mutant 1130 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1131 in q.js: "next" replaced with "throw"
Mutant 1132 in q.js: "next" replaced with "return"
Mutant 1133 in q.js: "next" replaced with "undefined"
Mutant 1134 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(null, "throw"))
Mutant 1135 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1136 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(function () {}, "throw"))
Mutant 1137 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1138 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1139 in q.js: "throw" replaced with "send"
Mutant 1140 in q.js: "throw" replaced with "reject"
Mutant 1141 in q.js: "throw" replaced with "resolve"
Mutant 1142 in q.js: callback replaced with errback
Mutant 1143 in q.js: callback replaced with Q.reject
Mutant 1144 in q.js: callback replaced with Q.resolve
Mutant 1145 in q.js: Q.done replaced with Q.fail
Mutant 1146 in q.js: Q.done replaced with Q.reject
Mutant 1147 in q.js: Q.done replaced with Q.then
Mutant 1148 in q.js: makeGenerator replaced with makeGenerator.bind(null)
Mutant 1149 in q.js: makeGenerator replaced with makeGenerator.call(null)
Mutant 1150 in q.js: makeGenerator replaced with makeGenerator.apply(null)
Mutant 1151 in q.js: all replaced with none
Mutant 1152 in q.js: all replaced with some
Mutant 1153 in q.js: all replaced with any
Mutant 1154 in q.js: arguments replaced with null
Mutant 1155 in q.js: arguments replaced with undefined
Mutant 1156 in q.js: arguments replaced with []
Mutant 1157 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 1158 in q.js: callback.apply(self, args) replaced with callback.apply(undefined)
Mutant 1159 in q.js: callback.apply(self, args) replaced with callback.apply({})
Mutant 1160 in q.js: callback.apply replaced with callback.call
Mutant 1161 in q.js: self replaced with null
Mutant 1162 in q.js: self replaced with undefined
Mutant 1163 in q.js: self replaced with {}
Mutant 1164 in q.js: args replaced with [args]
Mutant 1165 in q.js: args replaced with args.slice()
Mutant 1166 in q.js: args replaced with args.concat()
Mutant 1167 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args[0])
Mutant 1168 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice(1))
Mutant 1169 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.concat(1))
Mutant 1170 in q.js: Q replaced with Q.reject
Mutant 1171 in q.js: Q replaced with Q.resolve
Mutant 1172 in q.js: Q replaced with Q.all
Mutant 1173 in q.js: object replaced with null
Mutant 1174 in q.js: object replaced with undefined
Mutant 1175 in q.js: op replaced with op + 1
Mutant 1176 in q.js: op replaced with op + "1"
Mutant 1177 in q.js: op replaced with op * 2
Mutant 1178 in q.js: args replaced with [args]
Mutant 1179 in q.js: args replaced with args[0]
Mutant 1180 in q.js: args replaced with args.length
Mutant 1181 in q.js: defer replaced with deferred
Mutant 1182 in q.js: defer replaced with defer.resolve
Mutant 1183 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1184 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.notify, op, args)
Mutant 1185 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolveWith, op, args)
Mutant 1186 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1187 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1188 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1189 in q.js: deferred.resolve replaced with null
Mutant 1190 in q.js: op replaced with op + 1
Mutant 1191 in q.js: op replaced with op - 1
Mutant 1192 in q.js: op replaced with op * 2
Mutant 1193 in q.js: args replaced with [args]
Mutant 1194 in q.js: args replaced with args.slice(1)
Mutant 1195 in q.js: args replaced with args.concat(1)
Mutant 1196 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, value])
Mutant 1197 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key, value])
Mutant 1198 in q.js: Q replaced with Q.reject
Mutant 1199 in q.js: Q replaced with undefined
Mutant 1200 in q.js: Q replaced with Q.defer
Mutant 1201 in q.js: object replaced with object.undefinedProperty
Mutant 1202 in q.js: object replaced with object.toString()
Mutant 1203 in q.js: object replaced with object[Symbol.iterator]()
Mutant 1204 in q.js: "get" replaced with "set"
Mutant 1205 in q.js: "get" replaced with "post"
Mutant 1206 in q.js: [key] replaced with [key + 1]
Mutant 1207 in q.js: [key] replaced with [key.toUpperCase()]
Mutant 1208 in q.js: [key] replaced with [key + "foo"]
Mutant 1209 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1210 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key, value])
Mutant 1211 in q.js: "get" replaced with "set"
Mutant 1212 in q.js: "get" replaced with "post"
Mutant 1213 in q.js: [key] replaced with [key, key]
Mutant 1214 in q.js: [key] replaced with [key + 1]
Mutant 1215 in q.js: [key] replaced with ["key"]
Mutant 1216 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value + 1])
Mutant 1217 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key + 1, value])
Mutant 1218 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key + 1, value + 1])
Mutant 1219 in q.js: Q replaced with Q['return']
Mutant 1220 in q.js: object replaced with null
Mutant 1221 in q.js: object replaced with undefined
Mutant 1222 in q.js: object replaced with {
  key: undefined
}
Mutant 1223 in q.js: "set" replaced with "get"
Mutant 1224 in q.js: "set" replaced with "post"
Mutant 1225 in q.js: [key, value] replaced with [value, key]
Mutant 1226 in q.js: [key, value] replaced with [key, value, null]
Mutant 1227 in q.js: [key, value] replaced with [key, value, undefined]
Mutant 1228 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1229 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, key])
Mutant 1230 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, null])
Mutant 1231 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1232 in q.js: "set" replaced with "get"
Mutant 1233 in q.js: "set" replaced with "post"
Mutant 1234 in q.js: [key, value] replaced with [key, value, undefined]
Mutant 1235 in q.js: [key, value] replaced with [key, value, null]
Mutant 1236 in q.js: [key, value] replaced with [key, value, ""]
Mutant 1237 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1238 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1239 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, value])
Mutant 1240 in q.js: object replaced with 0
Mutant 1241 in q.js: "delete" replaced with "set"
Mutant 1242 in q.js: "delete" replaced with "post"
Mutant 1243 in q.js: [key] replaced with [key, value]
Mutant 1244 in q.js: [key] replaced with [key, "value"]
Mutant 1245 in q.js: [key] replaced with [key, void 0]
Mutant 1246 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, value])
Mutant 1247 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("get", [key])
Mutant 1248 in q.js: this.dispatch replaced with null
Mutant 1249 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1250 in q.js: "delete" replaced with "set"
Mutant 1251 in q.js: "delete" replaced with "get"
Mutant 1252 in q.js: "delete" replaced with "post"
Mutant 1253 in q.js: [key] replaced with [key, value]
Mutant 1254 in q.js: [key] replaced with [key, null]
Mutant 1255 in q.js: [key] replaced with [key, undefined]
Mutant 1256 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1257 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.slice(2)])
Mutant 1258 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.slice(1)])
Mutant 1259 in q.js: Q replaced with Q.reject
Mutant 1260 in q.js: Q replaced with Q.resolve
Mutant 1261 in q.js: Q replaced with Q.defer
Mutant 1262 in q.js: object replaced with null
Mutant 1263 in q.js: object replaced with undefined
Mutant 1264 in q.js: object replaced with {}
Mutant 1265 in q.js: "post" replaced with "put"
Mutant 1266 in q.js: "post" replaced with "apply"
Mutant 1267 in q.js: "post" replaced with "call"
Mutant 1268 in q.js: [name, args] replaced with [name, args.concat(array_slice(arguments, 1))]
Mutant 1269 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1270 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.concat(array_slice(arguments, 1))])
Mutant 1271 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.slice(1)])
Mutant 1272 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.reverse()])
Mutant 1273 in q.js: "post" replaced with "put"
Mutant 1274 in q.js: "post" replaced with "post" + "get"
Mutant 1275 in q.js: "post" replaced with "post" * 2
Mutant 1276 in q.js: [name, args] replaced with [name, args[0]]
Mutant 1277 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1278 in q.js: [name, args] replaced with [name, args.slice(0, -1)]
Mutant 1279 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1280 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1281 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 0, 1)])
Mutant 1282 in q.js: object replaced with object.foo
Mutant 1283 in q.js: object replaced with object.bar
Mutant 1284 in q.js: object replaced with object.baz
Mutant 1285 in q.js: "post" replaced with "get"
Mutant 1286 in q.js: "post" replaced with "set"
Mutant 1287 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1288 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1289 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 4)]
Mutant 1290 in q.js: array_slice(arguments, 2) replaced with array_slice([arguments[0], arguments[2]])
Mutant 1291 in q.js: arguments replaced with null
Mutant 1292 in q.js: arguments replaced with void 0
Mutant 1293 in q.js: arguments replaced with "foo"
Mutant 1294 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1295 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 0)])
Mutant 1296 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, -1)])
Mutant 1297 in q.js: "post" replaced with "put"
Mutant 1298 in q.js: "post" replaced with "patch"
Mutant 1299 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1300 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 0)]
Mutant 1301 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 3)]
Mutant 1302 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 0, 1))
Mutant 1303 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 1304 in q.js: arguments replaced with null
Mutant 1305 in q.js: arguments replaced with undefined
Mutant 1306 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1307 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("bind", [void 0, args])
Mutant 1308 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [args, void 0])
Mutant 1309 in q.js: object replaced with null
Mutant 1310 in q.js: object replaced with undefined
Mutant 1311 in q.js: "apply" replaced with "call"
Mutant 1312 in q.js: "apply" replaced with "bind"
Mutant 1313 in q.js: "apply" replaced with "applyAll"
Mutant 1314 in q.js: [void 0, args] replaced with [void 0, args[0]]
Mutant 1315 in q.js: [void 0, args] replaced with [void 0, [args]]
Mutant 1316 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1317 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [this, args])
Mutant 1318 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1319 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("call", [void 0, args])
Mutant 1320 in q.js: "apply" replaced with "call"
Mutant 1321 in q.js: "apply" replaced with "bind"
Mutant 1322 in q.js: "apply" replaced with "map"
Mutant 1323 in q.js: [void 0, args] replaced with [void 1, args]
Mutant 1324 in q.js: [void 0, args] replaced with [void 0, args.concat(1)]
Mutant 1325 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1326 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1327 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)])
Mutant 1328 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, -1)])
Mutant 1329 in q.js: Q replaced with Q.reject
Mutant 1330 in q.js: Q replaced with Q.resolve
Mutant 1331 in q.js: object replaced with null
Mutant 1332 in q.js: object replaced with undefined
Mutant 1333 in q.js: object replaced with {}
Mutant 1334 in q.js: "apply" replaced with "call"
Mutant 1335 in q.js: "apply" replaced with "bind"
Mutant 1336 in q.js: "apply" replaced with "applyAll"
Mutant 1337 in q.js: [void 0, array_slice(arguments, 1)] replaced with [this, array_slice(arguments, 1)]
Mutant 1338 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1339 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1), void 0]
Mutant 1340 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1341 in q.js: arguments replaced with arguments.slice(1)
Mutant 1342 in q.js: 1 replaced with 3
Mutant 1343 in q.js: 1 replaced with 4
Mutant 1344 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, array_slice(arguments)])
Mutant 1345 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1346 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("call", [void 0, array_slice(arguments)])
Mutant 1347 in q.js: "apply" replaced with "call"
Mutant 1348 in q.js: "apply" replaced with "bind"
Mutant 1349 in q.js: "apply" replaced with "test"
Mutant 1350 in q.js: [void 0, array_slice(arguments)] replaced with [this, array_slice(arguments)]
Mutant 1351 in q.js: [void 0, array_slice(arguments)] replaced with [null, array_slice(arguments)]
Mutant 1352 in q.js: [void 0, array_slice(arguments)] replaced with [undefined, array_slice(arguments)]
Mutant 1353 in q.js: arguments replaced with arguments[0]
Mutant 1354 in q.js: arguments replaced with arguments.length
Mutant 1355 in q.js: arguments replaced with arguments.slice(1)
Mutant 1356 in q.js: Q replaced with Q + 1
Mutant 1357 in q.js: object replaced with null
Mutant 1358 in q.js: object replaced with undefined
Mutant 1359 in q.js: object replaced with "foo"
Mutant 1360 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 2)
Mutant 1361 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 0)
Mutant 1362 in q.js: array_slice(arguments, 1) replaced with array_slice(args, void 0)
Mutant 1363 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1364 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1365 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1366 in q.js: 1 replaced with 0
Mutant 1367 in q.js: 1 replaced with 2
Mutant 1368 in q.js: 1 replaced with void 0
Mutant 1369 in q.js: args.concat replaced with args + args
Mutant 1370 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1371 in q.js: array_slice(arguments) replaced with array_slice(arguments, -1)
Mutant 1372 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 2)
Mutant 1373 in q.js: arguments replaced with args.concat(array_slice(arguments))
Mutant 1374 in q.js: arguments replaced with args.concat(array_slice(promises))
Mutant 1375 in q.js: arguments replaced with args.concat(array_slice(deferred))
Mutant 1376 in q.js: array_slice replaced with array_reverse
Mutant 1377 in q.js: array_slice replaced with array_concat
Mutant 1378 in q.js: array_slice replaced with array_filter
Mutant 1379 in q.js: arguments replaced with args
Mutant 1380 in q.js: arguments replaced with this.arguments
Mutant 1381 in q.js: arguments replaced with null
Mutant 1382 in q.js: args.concat replaced with args + args
Mutant 1383 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, -1)
Mutant 1384 in q.js: array_slice(arguments) replaced with array_slice(arguments).reverse()
Mutant 1385 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1386 in q.js: arguments replaced with null
Mutant 1387 in q.js: arguments replaced with undefined
Mutant 1388 in q.js: arguments replaced with "foo"
Mutant 1389 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1390 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1])
Mutant 1391 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["foo"])
Mutant 1392 in q.js: Q replaced with Q.reject
Mutant 1393 in q.js: Q replaced with Q.resolve
Mutant 1394 in q.js: Q replaced with Q.defer
Mutant 1395 in q.js: object replaced with object.length
Mutant 1396 in q.js: object replaced with object.valueOf()
Mutant 1397 in q.js: object replaced with object.toString()
Mutant 1398 in q.js: "keys" replaced with "values"
Mutant 1399 in q.js: "keys" replaced with "length"
Mutant 1400 in q.js: "keys" replaced with "toString"
Mutant 1401 in q.js: [] replaced with [1]
Mutant 1402 in q.js: [] replaced with null
Mutant 1403 in q.js: [] replaced with undefined
Mutant 1404 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1405 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", ["foo"])
Mutant 1406 in q.js: this.dispatch("keys", []) replaced with this.dispatch("keys", [void 0])
Mutant 1407 in q.js: "keys" replaced with "values"
Mutant 1408 in q.js: "keys" replaced with "length"
Mutant 1409 in q.js: "keys" replaced with "pop"
Mutant 1410 in q.js: [] replaced with [1, 2, 3]
Mutant 1411 in q.js: [] replaced with [1, 2, 3].length
Mutant 1412 in q.js: [] replaced with [1, 2, 3].slice(0, 2)
Mutant 1413 in q.js: defer replaced with deferred.reject
Mutant 1414 in q.js: defer replaced with deferred.resolve
Mutant 1415 in q.js: defer replaced with deferred.notify
Mutant 1416 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1417 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with !isPromise(promise)
Mutant 1418 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1419 in q.js: promise replaced with promise.then(function () {
  throw new Error("something went wrong");
})
Mutant 1420 in q.js: promise replaced with promise.then(function () {
  return Q.reject("something went wrong");
})
Mutant 1421 in q.js: promise replaced with promise.then(function () {
  return Q.defer().resolve("something went wrong");
})
Mutant 1422 in q.js: promise.inspect replaced with promise.state
Mutant 1423 in q.js: promise.inspect replaced with promise.value
Mutant 1424 in q.js: promise.inspect replaced with promise.inspect.state
Mutant 1425 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1426 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1427 in q.js: --pendingCount === 0 replaced with pendingCount >= promises.length
Mutant 1428 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1429 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1430 in q.js: promises replaced with promises.slice(1)
Mutant 1431 in q.js: promises replaced with undefined
Mutant 1432 in q.js: promises replaced with []
Mutant 1433 in q.js: deferred.notify replaced with deferred.reject
Mutant 1434 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1435 in q.js: deferred.notify replaced with deferred.progress
Mutant 1436 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress * 2
}
Mutant 1437 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress + 1
}
Mutant 1438 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress - 1
}
Mutant 1439 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1440 in q.js: pendingCount === 0 replaced with pendingCount !== 0
Mutant 1441 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1442 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1443 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1444 in q.js: deferred.resolve replaced with Q.reject
Mutant 1445 in q.js: promises replaced with promises[0]
Mutant 1446 in q.js: promises replaced with promises.slice(1)
Mutant 1447 in q.js: promises replaced with promises.concat(Q.reject("error"))
Mutant 1448 in q.js: all replaced with any
Mutant 1449 in q.js: all replaced with allSettled
Mutant 1450 in q.js: all replaced with allResolved
Mutant 1451 in q.js: this replaced with Q.reject("Error")
Mutant 1452 in q.js: this replaced with Q.resolve("Success")
Mutant 1453 in q.js: this replaced with Q.delay(1000).then(() => Q.reject("Error"))
Mutant 1454 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1455 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1456 in q.js: promises.length === 0 replaced with promises.length >= 2
Mutant 1457 in q.js: Q.resolve replaced with Q.reject
Mutant 1458 in q.js: Q.resolve replaced with Promise.reject
Mutant 1459 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onRejected, onFulfilled, onProgress)
Mutant 1460 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onRejected, onProgress, onFulfilled)
Mutant 1461 in q.js: promise replaced with promise.then(null, onRejected)
Mutant 1462 in q.js: promise replaced with Q.reject(promise)
Mutant 1463 in q.js: promise replaced with Promise.resolve(promise)
Mutant 1464 in q.js: onFulfilled replaced with onRejected
Mutant 1465 in q.js: onFulfilled replaced with onProgress
Mutant 1466 in q.js: onFulfilled replaced with noop
Mutant 1467 in q.js: onRejected replaced with onFulfilled
Mutant 1468 in q.js: onRejected replaced with onProgress
Mutant 1469 in q.js: onProgress replaced with onRejected
Mutant 1470 in q.js: onProgress replaced with onFulfilled
Mutant 1471 in q.js: onProgress replaced with noop
Mutant 1472 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1473 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1474 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1475 in q.js: result replaced with null
Mutant 1476 in q.js: result replaced with undefined
Mutant 1477 in q.js: result replaced with false
Mutant 1478 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1479 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1480 in q.js: pendingCount === 0 replaced with pendingCount < promises.length
Mutant 1481 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1482 in q.js: rejection replaced with undefined
Mutant 1483 in q.js: rejection replaced with null
Mutant 1484 in q.js: rejection replaced with Q.reject()
Mutant 1485 in q.js: any replaced with all
Mutant 1486 in q.js: any replaced with none
Mutant 1487 in q.js: any replaced with some
Mutant 1488 in q.js: this replaced with this.dispatch("keys", [])
Mutant 1489 in q.js: this replaced with this.dispatch("keys", [1, 2, 3])
Mutant 1490 in q.js: this replaced with this.dispatch("keys", [promises])
Mutant 1491 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allSettled", "allResolved")
Mutant 1492 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allSettled, "allResolved", "allSettled")
Mutant 1493 in q.js: allResolved replaced with allRejected
Mutant 1494 in q.js: allResolved replaced with anyResolved
Mutant 1495 in q.js: allResolved replaced with allSettled
Mutant 1496 in q.js: "allResolved" replaced with "allSettled"
Mutant 1497 in q.js: "allResolved" replaced with "any"
Mutant 1498 in q.js: "allResolved" replaced with "all"
Mutant 1499 in q.js: "allSettled" replaced with "allRejected"
Mutant 1500 in q.js: "allSettled" replaced with "anySettled"
Mutant 1501 in q.js: "allSettled" replaced with "allFulfilled"
Mutant 1502 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1503 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve)
Mutant 1504 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.defer())
Mutant 1505 in q.js: array_map replaced with array_filter
Mutant 1506 in q.js: array_map replaced with array_reduce
Mutant 1507 in q.js: array_map replaced with array_reverse
Mutant 1508 in q.js: promises replaced with promises.slice()
Mutant 1509 in q.js: promises replaced with promises.concat()
Mutant 1510 in q.js: Q replaced with Q.resolve()
Mutant 1511 in q.js: Q replaced with Q.reject()
Mutant 1512 in q.js: Q replaced with Q.defer()
Mutant 1513 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1514 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop, noop))
Mutant 1515 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop))
Mutant 1516 in q.js: promise replaced with promise + 1
Mutant 1517 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 1518 in q.js: promise replaced with Q.reject(promise)
Mutant 1519 in q.js: noop replaced with function noop() {
  throw new Error("Something went wrong");
}
Mutant 1520 in q.js: noop replaced with function noop() {
  return "Hello, world!";
}
Mutant 1521 in q.js: noop replaced with function noop() {
  return Q.reject("Something went wrong");
}
Mutant 1522 in q.js: allResolved replaced with any
Mutant 1523 in q.js: allResolved replaced with allSettled
Mutant 1524 in q.js: this replaced with null
Mutant 1525 in q.js: this replaced with undefined
Mutant 1526 in q.js: this replaced with 0
Mutant 1527 in q.js: Q replaced with Q.reject
Mutant 1528 in q.js: Q replaced with Q.resolve
Mutant 1529 in q.js: Q replaced with Promise.reject
Mutant 1530 in q.js: promises replaced with promises.reverse()
Mutant 1531 in q.js: promises replaced with promises.sort()
Mutant 1532 in q.js: promises replaced with promises.slice(1)
Mutant 1533 in q.js: Q replaced with null
Mutant 1534 in q.js: Q replaced with undefined
Mutant 1535 in q.js: Q replaced with 0
Mutant 1536 in q.js: promise replaced with promise.then(function (result) {
  return result + 1;
})
Mutant 1537 in q.js: promise replaced with promise.then(function (result) {
  return result * 2;
})
Mutant 1538 in q.js: promise replaced with promise.then(function (result) {
  return result - 1;
})
Mutant 1539 in q.js: promise.then(regardless, regardless) replaced with promise.then(promise.inspect())
Mutant 1540 in q.js: promise.then replaced with promise.catch
Mutant 1541 in q.js: promise.then replaced with promise.resolve
Mutant 1542 in q.js: promise.then replaced with promise.reject
Mutant 1543 in q.js: regardless replaced with promise.reject()
Mutant 1544 in q.js: regardless replaced with promise.resolve()
Mutant 1545 in q.js: regardless replaced with promise.notify()
Mutant 1546 in q.js: regardless replaced with regardless()
Mutant 1547 in q.js: regardless replaced with void 0
Mutant 1548 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1549 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(undefined, rejected)
Mutant 1550 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, rejected, void 0)
Mutant 1551 in q.js: object replaced with Q.reject("error")
Mutant 1552 in q.js: void 0 replaced with null
Mutant 1553 in q.js: void 0 replaced with undefined
Mutant 1554 in q.js: void 0 replaced with () => {}
Mutant 1555 in q.js: rejected replaced with function (err) {
  throw err;
}
Mutant 1556 in q.js: rejected replaced with function (err) {
  return err;
}
Mutant 1557 in q.js: rejected replaced with function (err) {
  return Q.reject(err);
}
Mutant 1558 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1559 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1560 in q.js: this.then(void 0, rejected) replaced with this.then(true, rejected)
Mutant 1561 in q.js: void 0 replaced with null
Mutant 1562 in q.js: void 0 replaced with false
Mutant 1563 in q.js: void 0 replaced with {}
Mutant 1564 in q.js: rejected replaced with resolved
Mutant 1565 in q.js: rejected replaced with rejected(new Error("Custom error message"))
Mutant 1566 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(undefined, undefined, progressed)
Mutant 1567 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1568 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(function () {}, function () {}, progressed)
Mutant 1569 in q.js: object replaced with 0
Mutant 1570 in q.js: void 0 replaced with null
Mutant 1571 in q.js: void 0 replaced with undefined
Mutant 1572 in q.js: void 0 replaced with {}
Mutant 1573 in q.js: void 0 replaced with null
Mutant 1574 in q.js: void 0 replaced with undefined
Mutant 1575 in q.js: void 0 replaced with NaN
Mutant 1576 in q.js: progressed replaced with null
Mutant 1577 in q.js: progressed replaced with undefined
Mutant 1578 in q.js: progressed replaced with () => {}
Mutant 1579 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1580 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1581 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(progressed, null, null)
Mutant 1582 in q.js: void 0 replaced with null
Mutant 1583 in q.js: void 0 replaced with undefined
Mutant 1584 in q.js: void 0 replaced with 0
Mutant 1585 in q.js: void 0 replaced with null
Mutant 1586 in q.js: void 0 replaced with undefined
Mutant 1587 in q.js: void 0 replaced with () => {}
Mutant 1588 in q.js: progressed replaced with promise
Mutant 1589 in q.js: progressed replaced with this
Mutant 1590 in q.js: progressed replaced with Q.resolve(promise)
Mutant 1591 in q.js: object replaced with null
Mutant 1592 in q.js: object replaced with undefined
Mutant 1593 in q.js: object replaced with 0
Mutant 1594 in q.js: callback replaced with callback()
Mutant 1595 in q.js: callback replaced with callback.apply()
Mutant 1596 in q.js: callback replaced with callback.call()
Mutant 1597 in q.js: !callback || typeof callback.apply !== "function" replaced with callback === null
Mutant 1598 in q.js: !callback || typeof callback.apply !== "function" replaced with callback !== void 0
Mutant 1599 in q.js: !callback || typeof callback.apply !== "function" replaced with typeof callback !== "function"
Mutant 1600 in q.js: Q replaced with 1
Mutant 1601 in q.js: Q replaced with Q + 1
Mutant 1602 in q.js: callback replaced with callback.fail()
Mutant 1603 in q.js: callback replaced with callback.then(function () {
  throw new Error("Test error");
})
Mutant 1604 in q.js: callback replaced with callback.then(function () {
  return Q.reject(new Error("Test error"));
})
Mutant 1605 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progressed)
Mutant 1606 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress())
Mutant 1607 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress + 1)
Mutant 1608 in q.js: object replaced with null
Mutant 1609 in q.js: object replaced with undefined
Mutant 1610 in q.js: object replaced with 0
Mutant 1611 in q.js: fulfilled replaced with rejected
Mutant 1612 in q.js: fulfilled replaced with progress
Mutant 1613 in q.js: fulfilled replaced with null
Mutant 1614 in q.js: rejected replaced with rejected, reason
Mutant 1615 in q.js: rejected replaced with resolved, value
Mutant 1616 in q.js: rejected replaced with resolved(value)
Mutant 1617 in q.js: progress replaced with null
Mutant 1618 in q.js: progress replaced with undefined
Mutant 1619 in q.js: progress replaced with () => {}
Mutant 1620 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, Q)
Mutant 1621 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(promise, error)
Mutant 1622 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(null, error)
Mutant 1623 in q.js: error replaced with error.message
Mutant 1624 in q.js: error replaced with null
Mutant 1625 in q.js: Q.onerror replaced with Q.onerror.apply(null, arguments)
Mutant 1626 in q.js: Q.onerror replaced with Q.onerror.apply(this, arguments)
Mutant 1627 in q.js: Q.onerror replaced with Q.onerror.call(null, arguments)
Mutant 1628 in q.js: error replaced with error.message
Mutant 1629 in q.js: error replaced with null
Mutant 1630 in q.js: error replaced with new Error()
Mutant 1631 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, progressed)
Mutant 1632 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, progress.then())
Mutant 1633 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, Q.progress())
Mutant 1634 in q.js: fulfilled replaced with rejected
Mutant 1635 in q.js: fulfilled replaced with undefined
Mutant 1636 in q.js: fulfilled replaced with null
Mutant 1637 in q.js: rejected replaced with resolved
Mutant 1638 in q.js: rejected replaced with new Error()
Mutant 1639 in q.js: rejected replaced with void 0
Mutant 1640 in q.js: progress replaced with null
Mutant 1641 in q.js: progress replaced with undefined
Mutant 1642 in q.js: progress replaced with 0
Mutant 1643 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1644 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1645 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError, onUnhandledError)
Mutant 1646 in q.js: void 0 replaced with null
Mutant 1647 in q.js: void 0 replaced with undefined
Mutant 1648 in q.js: void 0 replaced with 0
Mutant 1649 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1650 in q.js: onUnhandledError replaced with undefined
Mutant 1651 in q.js: onUnhandledError replaced with null
Mutant 1652 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(timeout, error)
Mutant 1653 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, new Error())
Mutant 1654 in q.js: object replaced with null
Mutant 1655 in q.js: object replaced with undefined
Mutant 1656 in q.js: object replaced with "foo"
Mutant 1657 in q.js: ms replaced with ms + 1000
Mutant 1658 in q.js: ms replaced with ms - 1000
Mutant 1659 in q.js: error replaced with null
Mutant 1660 in q.js: error replaced with new Error()
Mutant 1661 in q.js: defer replaced with deferred
Mutant 1662 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1663 in q.js: !error || "string" === typeof error replaced with error && error instanceof Error
Mutant 1664 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error && error.message === "Timed out after 1000 ms"
Mutant 1665 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1666 in q.js: deferred.reject replaced with undefined
Mutant 1667 in q.js: error replaced with null
Mutant 1668 in q.js: error replaced with undefined
Mutant 1669 in q.js: error replaced with new Error()
Mutant 1670 in q.js: clearTimeout replaced with clearInterval
Mutant 1671 in q.js: clearTimeout replaced with clearImmediate
Mutant 1672 in q.js: timeoutId replaced with timeoutId + 1
Mutant 1673 in q.js: timeoutId replaced with timeoutId - 1
Mutant 1674 in q.js: timeoutId replaced with 0
Mutant 1675 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1676 in q.js: deferred.resolve replaced with Q.reject
Mutant 1677 in q.js: value replaced with undefined
Mutant 1678 in q.js: value replaced with null
Mutant 1679 in q.js: value replaced with Promise.reject(new Error("Oops!"))
Mutant 1680 in q.js: clearTimeout replaced with clearInterval
Mutant 1681 in q.js: timeoutId replaced with null
Mutant 1682 in q.js: timeoutId replaced with undefined
Mutant 1683 in q.js: timeoutId replaced with 0
Mutant 1684 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1685 in q.js: deferred.reject replaced with undefined
Mutant 1686 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1687 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1688 in q.js: timeout === void 0 replaced with timeout !== null
Mutant 1689 in q.js: Q replaced with Q.reject
Mutant 1690 in q.js: Q replaced with Q.resolve
Mutant 1691 in q.js: Q replaced with Q.defer
Mutant 1692 in q.js: object replaced with undefined
Mutant 1693 in q.js: object replaced with null
Mutant 1694 in q.js: object replaced with 42
Mutant 1695 in q.js: timeout replaced with 0
Mutant 1696 in q.js: timeout replaced with null
Mutant 1697 in q.js: timeout replaced with undefined
Mutant 1698 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1699 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1700 in q.js: deferred.resolve replaced with undefined
Mutant 1701 in q.js: value replaced with null
Mutant 1702 in q.js: value replaced with undefined
Mutant 1703 in q.js: value replaced with NaN
Mutant 1704 in q.js: callback replaced with null
Mutant 1705 in q.js: callback replaced with undefined
Mutant 1706 in q.js: callback replaced with () => {}
Mutant 1707 in q.js: args replaced with null
Mutant 1708 in q.js: args replaced with []
Mutant 1709 in q.js: args replaced with [1, 2, 3]
Mutant 1710 in q.js: args replaced with args.slice(1)
Mutant 1711 in q.js: args replaced with args.concat(["extra argument"])
Mutant 1712 in q.js: args replaced with null
Mutant 1713 in q.js: nodeArgs.push replaced with nodeArgs[0] = null
Mutant 1714 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.bind(deferred)
Mutant 1715 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.call(deferred)
Mutant 1716 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.apply(deferred)
Mutant 1717 in q.js: nodeArgs replaced with null
Mutant 1718 in q.js: nodeArgs replaced with {}
Mutant 1719 in q.js: nodeArgs replaced with []
Mutant 1720 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1721 in q.js: deferred.reject replaced with deferred.notify
Mutant 1722 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1723 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1724 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 0, 2))
Mutant 1725 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1726 in q.js: arguments replaced with []
Mutant 1727 in q.js: arguments replaced with null
Mutant 1728 in q.js: arguments replaced with undefined
Mutant 1729 in q.js: 1 replaced with 0
Mutant 1730 in q.js: 1 replaced with 2
Mutant 1731 in q.js: 1 replaced with void 0
Mutant 1732 in q.js: callback replaced with null
Mutant 1733 in q.js: callback replaced with undefined
Mutant 1734 in q.js: callback replaced with () => {}
Mutant 1735 in q.js: arguments replaced with null
Mutant 1736 in q.js: arguments replaced with undefined
Mutant 1737 in q.js: arguments replaced with []
Mutant 1738 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1739 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1740 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1741 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1742 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1743 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().then(null)
Mutant 1744 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1745 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1746 in q.js: this.fapply replaced with this.fail
Mutant 1747 in q.js: this.fapply replaced with this.then
Mutant 1748 in q.js: this.fapply replaced with this.catch
not replacing this.fapply with this.fail
not replacing this.fapply with this.fail
not replacing this.fapply with this.then
not replacing this.fapply with this.then
not replacing this.fapply with this.catch
not replacing this.fapply with this.catch
Mutant 1749 in q.js: nodeArgs replaced with nodeArgs.slice(0)
Mutant 1750 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1751 in q.js: nodeArgs replaced with nodeArgs.splice(0, 0, null)
Mutant 1752 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1753 in q.js: deferred.reject replaced with deferred.notify
Mutant 1754 in q.js: deferred.reject replaced with deferred.reject("error")
Mutant 1755 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1756 in q.js: callback === undefined replaced with callback !== null
Mutant 1757 in q.js: callback === undefined replaced with callback !== "undefined"
Mutant 1758 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1759 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments), 1)
Mutant 1760 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1))
Mutant 1761 in q.js: arguments replaced with null
Mutant 1762 in q.js: arguments replaced with undefined
Mutant 1763 in q.js: arguments replaced with []
Mutant 1764 in q.js: 1 replaced with 2
Mutant 1765 in q.js: 1 replaced with -1
Mutant 1766 in q.js: 1 replaced with "foo"
Mutant 1767 in q.js: array_slice(arguments) replaced with array_slice(arguments).reverse()
Mutant 1768 in q.js: array_slice(arguments) replaced with array_slice(arguments).slice(1)
Mutant 1769 in q.js: array_slice(arguments) replaced with array_slice(arguments).concat(["foo"])
Mutant 1770 in q.js: arguments replaced with null
Mutant 1771 in q.js: arguments replaced with undefined
Mutant 1772 in q.js: arguments replaced with []
Mutant 1773 in q.js: defer replaced with deferred
Mutant 1774 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1775 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1776 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1777 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1778 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1779 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1780 in q.js: Q replaced with deferred
Mutant 1781 in q.js: Q replaced with resolve
Mutant 1782 in q.js: Q replaced with reject
Mutant 1783 in q.js: callback replaced with null
Mutant 1784 in q.js: callback replaced with undefined
Mutant 1785 in q.js: callback replaced with () => {}
Mutant 1786 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1787 in q.js: nodeArgs replaced with nodeArgs.shift()
Mutant 1788 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1789 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1790 in q.js: deferred.reject replaced with null
Mutant 1791 in q.js: deferred.reject replaced with deferred.notify
Mutant 1792 in q.js: arguments replaced with null
Mutant 1793 in q.js: arguments replaced with undefined
Mutant 1794 in q.js: arguments replaced with {}
Mutant 1795 in q.js: args.unshift replaced with args.pop
Mutant 1796 in q.js: args.unshift replaced with args.shift
Mutant 1797 in q.js: args.unshift replaced with args.push
Mutant 1798 in q.js: this replaced with null
Mutant 1799 in q.js: this replaced with undefined
Mutant 1800 in q.js: this replaced with 0
Mutant 1801 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1802 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this)
Mutant 1803 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(void 0)
Mutant 1804 in q.js: Q.denodeify.apply replaced with Q.nfapply
Mutant 1805 in q.js: Q.denodeify.apply replaced with Q.nfcall
Mutant 1806 in q.js: Q.denodeify.apply replaced with Q.nbind
Mutant 1807 in q.js: void 0 replaced with 1
Mutant 1808 in q.js: void 0 replaced with null
Mutant 1809 in q.js: void 0 replaced with undefined
Mutant 1810 in q.js: args replaced with args[0]
Mutant 1811 in q.js: args replaced with args.slice(1)
Mutant 1812 in q.js: args replaced with args.concat(deferred.makeNodeResolver())
Mutant 1813 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1814 in q.js: array_slice(arguments, 2) replaced with array_slice(args, 2)
Mutant 1815 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1816 in q.js: array_slice replaced with array_slice.length
Mutant 1817 in q.js: arguments replaced with null
Mutant 1818 in q.js: arguments replaced with undefined
Mutant 1819 in q.js: arguments replaced with []
Mutant 1820 in q.js: 2 replaced with 1
Mutant 1821 in q.js: 2 replaced with 0
Mutant 1822 in q.js: 2 replaced with -1
Mutant 1823 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1824 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1825 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1826 in q.js: array_slice replaced with array_slice.length
Mutant 1827 in q.js: arguments replaced with null
Mutant 1828 in q.js: arguments replaced with []
Mutant 1829 in q.js: arguments replaced with [1, 2, 3]
Mutant 1830 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1831 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1832 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1833 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.call(null)
Mutant 1834 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.bind(null)
Mutant 1835 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver.apply(null)
Mutant 1836 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1837 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1838 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp.arguments)
Mutant 1839 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp[arguments])
Mutant 1840 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp[arguments[0]])
Mutant 1841 in q.js: callback.apply replaced with callback.call
Mutant 1842 in q.js: callback.apply replaced with callback.bind
Mutant 1843 in q.js: callback.apply replaced with callback.apply.bind
Mutant 1844 in q.js: thisp replaced with null
Mutant 1845 in q.js: thisp replaced with undefined
Mutant 1846 in q.js: thisp replaced with {}
Mutant 1847 in q.js: arguments replaced with nodeArgs
Mutant 1848 in q.js: arguments replaced with []
Mutant 1849 in q.js: arguments replaced with null
Mutant 1850 in q.js: Q replaced with 1 + 1
Mutant 1851 in q.js: Q replaced with "Q"
Mutant 1852 in q.js: Q replaced with undefined
Mutant 1853 in q.js: bound replaced with null
Mutant 1854 in q.js: bound replaced with undefined
Mutant 1855 in q.js: bound replaced with function () {}
Mutant 1856 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1857 in q.js: deferred.reject replaced with null
Mutant 1858 in q.js: deferred.reject replaced with deferred.notify
Mutant 1859 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1860 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 2)
Mutant 1861 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, -1)
Mutant 1862 in q.js: arguments replaced with null
Mutant 1863 in q.js: arguments replaced with undefined
Mutant 1864 in q.js: arguments replaced with []
Mutant 1865 in q.js: 0 replaced with 1
Mutant 1866 in q.js: 0 replaced with -1
Mutant 1867 in q.js: 0 replaced with null
Mutant 1868 in q.js: args.unshift replaced with args.push
Mutant 1869 in q.js: args.unshift replaced with args.shift
Mutant 1870 in q.js: args.unshift replaced with args.pop
Mutant 1871 in q.js: this replaced with null
Mutant 1872 in q.js: this replaced with {}
Mutant 1873 in q.js: this replaced with Q
Mutant 1874 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1875 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1876 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(false, args)
Mutant 1877 in q.js: Q.nbind.apply replaced with Q.nbind
Mutant 1878 in q.js: Q.nbind.apply replaced with Q.denodeify
Mutant 1879 in q.js: Q.nbind.apply replaced with Q.nfbind
Mutant 1880 in q.js: void 0 replaced with null
Mutant 1881 in q.js: void 0 replaced with undefined
Mutant 1882 in q.js: void 0 replaced with 1
Mutant 1883 in q.js: args replaced with args.concat(array_slice(arguments))
Mutant 1884 in q.js: args replaced with args.slice(0, -1)
Mutant 1885 in q.js: args replaced with args.map(function (arg) {
  return arg + 1;
})
Mutant 1886 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, [args])
Mutant 1887 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args[0])
Mutant 1888 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.pop())
Mutant 1889 in q.js: Q replaced with Q.reject
Mutant 1890 in q.js: Q replaced with Q.deferred
Mutant 1891 in q.js: Q replaced with Q.when
Mutant 1892 in q.js: object replaced with null
Mutant 1893 in q.js: object replaced with undefined
Mutant 1894 in q.js: object replaced with {}
Mutant 1895 in q.js: name replaced with null
Mutant 1896 in q.js: name replaced with "not-a-function"
Mutant 1897 in q.js: name replaced with function () {}
Mutant 1898 in q.js: args replaced with args[0]
Mutant 1899 in q.js: args replaced with args.length
Mutant 1900 in q.js: args replaced with args.slice(1)
Mutant 1901 in q.js: args || [] replaced with args || [1]
Mutant 1902 in q.js: args || [] replaced with args || [null]
Mutant 1903 in q.js: args || [] replaced with args || ["hello"]
Mutant 1904 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1905 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1906 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1907 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1908 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1909 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1910 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1911 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1912 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [nodeArgs, name])
Mutant 1913 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1914 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [nodeArgs, name])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
Mutant 1915 in q.js: this.dispatch replaced with this.post
not replacing this.dispatch with this.post
not replacing this.dispatch with this.post
Mutant 1916 in q.js: "post" replaced with "get"
Mutant 1917 in q.js: "post" replaced with "put"
Mutant 1918 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1919 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 1920 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.concat([1])]
Mutant 1921 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1922 in q.js: deferred.reject replaced with deferred.notify
Mutant 1923 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1924 in q.js: arguments replaced with 1
Mutant 1925 in q.js: arguments replaced with "test"
Mutant 1926 in q.js: arguments replaced with function () {
  return 1;
}
Mutant 1927 in q.js: 2 replaced with 1
Mutant 1928 in q.js: 2 replaced with -1
Mutant 1929 in q.js: 2 replaced with 0
Mutant 1930 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1931 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1932 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver("foo")
Mutant 1933 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(42)
Mutant 1934 in q.js: deferred.makeNodeResolver replaced with undefined
Mutant 1935 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1936 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("call", [name, nodeArgs])
Mutant 1937 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("apply", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("call", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("apply", [name, nodeArgs])
Mutant 1938 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1939 in q.js: Q(object).dispatch replaced with Q.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with Q.dispatch
not replacing Q(object).dispatch with Q.dispatch
Mutant 1940 in q.js: Q replaced with null
Mutant 1941 in q.js: Q replaced with undefined
Mutant 1942 in q.js: object replaced with null
Mutant 1943 in q.js: object replaced with undefined
Mutant 1944 in q.js: "post" replaced with "send"
Mutant 1945 in q.js: "post" replaced with "get"
Mutant 1946 in q.js: "post" replaced with "set"
Mutant 1947 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1948 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1949 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 1950 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1951 in q.js: deferred.reject replaced with deferred.notify
Mutant 1952 in q.js: deferred.reject replaced with deferred.throw
Mutant 1953 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1954 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1955 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length - 1)
Mutant 1956 in q.js: arguments replaced with 1
Mutant 1957 in q.js: arguments replaced with "hello"
Mutant 1958 in q.js: arguments replaced with null
Mutant 1959 in q.js: 1 replaced with 2
Mutant 1960 in q.js: 1 replaced with 3
Mutant 1961 in q.js: 1 replaced with 4
Mutant 1962 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1963 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1964 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1965 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1966 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1967 in q.js: deferred.makeNodeResolver() replaced with () => {}
Mutant 1968 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("send", [name, nodeArgs])
Mutant 1969 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("dispatch", [name, nodeArgs])
Mutant 1970 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("makeNodeResolver", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("send", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("dispatch", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("makeNodeResolver", [name, nodeArgs])
Mutant 1971 in q.js: "post" replaced with "pre"
Mutant 1972 in q.js: "post" replaced with "get"
Mutant 1973 in q.js: "post" replaced with "set"
Mutant 1974 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1975 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1976 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, function () {}]
Mutant 1977 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1978 in q.js: deferred.reject replaced with undefined
Mutant 1979 in q.js: deferred.reject replaced with null
Mutant 1980 in q.js: Q(object).nodeify replaced with object.nodeify
Mutant 1981 in q.js: Q(object).nodeify replaced with null
Mutant 1982 in q.js: Q replaced with undefined
Mutant 1983 in q.js: object replaced with undefined
Mutant 1984 in q.js: object replaced with 0
Mutant 1985 in q.js: nodeback replaced with undefined
Mutant 1986 in q.js: nodeback replaced with null
Mutant 1987 in q.js: nodeback replaced with () => {}
Mutant 1988 in q.js: nodeback replaced with nodeback(error, null)
Mutant 1989 in q.js: nodeback replaced with nodeback(null, value)
Mutant 1990 in q.js: nodeback replaced with nodeback(error, value)
Mutant 1991 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1992 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 1993 in q.js: nodeback(null, value) replaced with nodeback(null, undefined)
Mutant 1994 in q.js: null replaced with undefined
Mutant 1995 in q.js: null replaced with 0
Mutant 1996 in q.js: null replaced with false
Mutant 1997 in q.js: value replaced with null
Mutant 1998 in q.js: value replaced with undefined
Mutant 1999 in q.js: value replaced with 0
Mutant 2000 in q.js: error replaced with null
Mutant 2001 in q.js: error replaced with undefined
Mutant 2002 in q.js: error replaced with 0
Mutant 2003 in q.js: captureLine replaced with captureLine + 1
Mutant 2004 in q.js: captureLine replaced with captureLine * 2
Mutant 2005 in q.js: captureLine replaced with captureLine - 10
Mutant 2006 in queue.js: Q.defer replaced with Q.resolve
Mutant 2007 in queue.js: Q.defer replaced with Q.reject
Mutant 2008 in queue.js: Q.defer replaced with Q.all
Mutant 2009 in queue.js: ends.promise.get replaced with ends.promise.then
Mutant 2010 in queue.js: ends.promise.get replaced with ends.promise.catch
Mutant 2011 in queue.js: ends.promise.get replaced with ends.promise.finally
Mutant 2012 in queue.js: "head" replaced with "tail"
Mutant 2013 in queue.js: "head" replaced with "head.tail"
Mutant 2014 in queue.js: "head" replaced with "head.tail.head"
Mutant 2015 in queue.js: "tail" replaced with "head"
Mutant 2016 in queue.js: "tail" replaced with "tail" + "head"
Mutant 2017 in queue.js: "tail" replaced with "tail" - "head"
Mutant 2018 in queue.js: closed.resolve replaced with closed.reject
Mutant 2019 in queue.js: error replaced with error.message
Mutant 2020 in queue.js: error replaced with new Error("Different error message")
Mutant 2021 in queue.js: error replaced with undefined
Mutant 2022 in queue.js: Q.reject replaced with Q.resolve
Mutant 2023 in queue.js: ends.resolve replaced with ends.reject
Mutant 2024 in queue.js: ends.resolve replaced with closed.resolve
Mutant 2025 in queue.js: end replaced with ends.reject(error)
Mutant 2026 in queue.js: end replaced with ends.resolve(Q.reject(error))
Mutant 2027 in queue.js: end replaced with ends.resolve(Q.resolve(error))
[32m18:18:04 (3041) INFO Instrumenter[39m Instrumented 2 source file(s) with 2028 mutant(s)
[32m18:18:05 (3041) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m18:18:07 (3041) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m18:18:07 (3041) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m18:18:13 (3041) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6779 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 52m) 3/2028 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 48m) 4/2028 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 48m) 6/2028 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 12m) 7/2028 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 6m) 9/2028 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 21m) 10/2028 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 16m) 12/2028 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 26m) 13/2028 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 57m) 17/2028 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 56m) 19/2028 tested (14 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 4m) 20/2028 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 11m) 21/2028 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 8m) 23/2028 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 14m) 24/2028 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 12m) 26/2028 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 17m) 27/2028 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 15m) 29/2028 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 19m) 30/2028 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 17m) 32/2028 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 21m) 33/2028 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 19m) 35/2028 tested (30 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 7m) 39/2028 tested (31 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 15m) 39/2028 tested (31 survived, 0 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 18m) 40/2028 tested (31 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 21m) 41/2028 tested (31 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 30m) 41/2028 tested (31 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 32m) 42/2028 tested (31 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 35m) 43/2028 tested (31 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 43m) 43/2028 tested (31 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 45m) 44/2028 tested (31 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 47m) 45/2028 tested (31 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 49m) 46/2028 tested (32 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 46m) 48/2028 tested (34 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 35m) 52/2028 tested (35 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 37m) 53/2028 tested (36 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 39m) 54/2028 tested (37 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 29m) 58/2028 tested (38 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 31m) 59/2028 tested (39 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 33m) 60/2028 tested (39 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 24m) 64/2028 tested (40 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 26m) 65/2028 tested (41 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 24m) 67/2028 tested (43 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 26m) 68/2028 tested (44 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 28m) 69/2028 tested (45 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 26m) 71/2028 tested (47 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 28m) 72/2028 tested (48 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 26m) 74/2028 tested (50 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 28m) 75/2028 tested (51 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 26m) 77/2028 tested (53 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 28m) 78/2028 tested (54 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 26m) 80/2028 tested (56 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 31m) 80/2028 tested (56 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 32m) 81/2028 tested (56 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 33m) 82/2028 tested (56 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 34m) 83/2028 tested (57 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 33m) 85/2028 tested (59 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 34m) 86/2028 tested (60 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 38m) 86/2028 tested (60 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 36m) 88/2028 tested (61 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 40m) 88/2028 tested (61 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 41m) 89/2028 tested (61 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 42m) 90/2028 tested (61 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 46m) 90/2028 tested (61 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 47m) 91/2028 tested (61 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 45m) 93/2028 tested (63 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 46m) 94/2028 tested (64 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 44m) 96/2028 tested (66 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 45m) 97/2028 tested (67 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 44m) 99/2028 tested (69 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 44m) 100/2028 tested (70 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 43m) 102/2028 tested (72 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 44m) 103/2028 tested (73 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 42m) 105/2028 tested (75 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 43m) 106/2028 tested (76 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 42m) 108/2028 tested (78 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 43m) 109/2028 tested (79 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 41m) 111/2028 tested (81 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 42m) 112/2028 tested (82 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 41m) 114/2028 tested (84 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 41m) 115/2028 tested (85 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 40m) 117/2028 tested (87 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 41m) 118/2028 tested (88 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 41m) 119/2028 tested (89 survived, 13 timed out)
Mutation testing 5% (elapsed: ~14m, remaining: ~3h 40m) 121/2028 tested (91 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 41m) 122/2028 tested (92 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 40m) 124/2028 tested (94 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 40m) 125/2028 tested (95 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 39m) 127/2028 tested (97 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 40m) 128/2028 tested (98 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 37m) 131/2028 tested (100 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 34m) 134/2028 tested (101 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 35m) 135/2028 tested (102 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 30m) 139/2028 tested (103 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 32m) 139/2028 tested (103 survived, 13 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 19m) 149/2028 tested (103 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 16m) 153/2028 tested (104 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 16m) 154/2028 tested (105 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 17m) 155/2028 tested (106 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 16m) 157/2028 tested (108 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 17m) 158/2028 tested (109 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 16m) 160/2028 tested (111 survived, 14 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 17m) 161/2028 tested (112 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 16m) 163/2028 tested (114 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 17m) 164/2028 tested (115 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 16m) 166/2028 tested (117 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 16m) 167/2028 tested (118 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 16m) 169/2028 tested (120 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 170/2028 tested (121 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 172/2028 tested (123 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 173/2028 tested (124 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 15m) 175/2028 tested (126 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 176/2028 tested (127 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 15m) 178/2028 tested (129 survived, 14 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 16m) 179/2028 tested (130 survived, 14 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 15m) 181/2028 tested (132 survived, 14 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 16m) 182/2028 tested (133 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 15m) 184/2028 tested (135 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 15m) 185/2028 tested (136 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 16m) 186/2028 tested (137 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 15m) 188/2028 tested (139 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 16m) 189/2028 tested (140 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 15m) 191/2028 tested (142 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 16m) 192/2028 tested (143 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 15m) 194/2028 tested (145 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 15m) 195/2028 tested (146 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 15m) 197/2028 tested (148 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 15m) 198/2028 tested (149 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 14m) 200/2028 tested (151 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 15m) 201/2028 tested (152 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 14m) 203/2028 tested (154 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 15m) 204/2028 tested (155 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 14m) 206/2028 tested (157 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 15m) 207/2028 tested (158 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 14m) 209/2028 tested (160 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 14m) 210/2028 tested (161 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 14m) 212/2028 tested (163 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 14m) 213/2028 tested (164 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 216/2028 tested (165 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 218/2028 tested (167 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 219/2028 tested (168 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 221/2028 tested (170 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 12m) 222/2028 tested (171 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 11m) 224/2028 tested (173 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 12m) 225/2028 tested (174 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 227/2028 tested (176 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 12m) 228/2028 tested (177 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 230/2028 tested (179 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 231/2028 tested (180 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 11m) 233/2028 tested (182 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 234/2028 tested (183 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 9m) 238/2028 tested (184 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 9m) 239/2028 tested (184 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 9m) 241/2028 tested (184 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 9m) 242/2028 tested (185 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 8m) 244/2028 tested (187 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 9m) 245/2028 tested (188 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 247/2028 tested (189 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 249/2028 tested (191 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 250/2028 tested (192 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 7m) 252/2028 tested (194 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 8m) 253/2028 tested (195 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 255/2028 tested (197 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 8m) 256/2028 tested (198 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 258/2028 tested (200 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 259/2028 tested (201 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 261/2028 tested (203 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 7m) 262/2028 tested (204 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 264/2028 tested (206 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 265/2028 tested (207 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 6m) 267/2028 tested (209 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 268/2028 tested (210 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 7m) 269/2028 tested (211 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 6m) 271/2028 tested (213 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 7m) 272/2028 tested (214 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 274/2028 tested (216 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 275/2028 tested (217 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 277/2028 tested (219 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 278/2028 tested (220 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 6m) 280/2028 tested (222 survived, 14 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 6m) 281/2028 tested (223 survived, 14 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 6m) 283/2028 tested (225 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 6m) 284/2028 tested (226 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 5m) 286/2028 tested (228 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 6m) 287/2028 tested (229 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 5m) 289/2028 tested (231 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 290/2028 tested (232 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 292/2028 tested (234 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 293/2028 tested (235 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 295/2028 tested (237 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 5m) 296/2028 tested (238 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 4m) 298/2028 tested (240 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 5m) 299/2028 tested (241 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 4m) 301/2028 tested (243 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 4m) 302/2028 tested (244 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 4m) 304/2028 tested (246 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 4m) 305/2028 tested (247 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 4m) 306/2028 tested (248 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 308/2028 tested (250 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 309/2028 tested (251 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 311/2028 tested (253 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 4m) 312/2028 tested (254 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 3m) 314/2028 tested (256 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 3m) 315/2028 tested (257 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 317/2028 tested (259 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 318/2028 tested (260 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 320/2028 tested (262 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 321/2028 tested (263 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 2m) 323/2028 tested (265 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 3m) 324/2028 tested (266 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 326/2028 tested (268 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 327/2028 tested (269 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 329/2028 tested (271 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 330/2028 tested (272 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 332/2028 tested (274 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 2m) 333/2028 tested (275 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 1m) 335/2028 tested (277 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 2m) 336/2028 tested (278 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 1m) 338/2028 tested (280 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~2h 59m) 342/2028 tested (281 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 0m) 343/2028 tested (282 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 0m) 344/2028 tested (283 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 59m) 346/2028 tested (285 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 0m) 347/2028 tested (286 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 59m) 349/2028 tested (288 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 59m) 350/2028 tested (289 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 59m) 352/2028 tested (291 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 59m) 353/2028 tested (292 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 357/2028 tested (293 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 359/2028 tested (295 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 360/2028 tested (296 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 362/2028 tested (298 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 57m) 363/2028 tested (299 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 56m) 365/2028 tested (301 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 57m) 366/2028 tested (302 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 56m) 368/2028 tested (304 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 56m) 369/2028 tested (305 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 56m) 371/2028 tested (307 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 56m) 372/2028 tested (308 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 56m) 374/2028 tested (310 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 56m) 375/2028 tested (311 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 55m) 377/2028 tested (313 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 56m) 378/2028 tested (314 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 55m) 380/2028 tested (316 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 55m) 382/2028 tested (317 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 55m) 383/2028 tested (318 survived, 14 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 54m) 385/2028 tested (320 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 55m) 386/2028 tested (321 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 388/2028 tested (323 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 389/2028 tested (324 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 391/2028 tested (326 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 54m) 392/2028 tested (327 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 54m) 394/2028 tested (329 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 54m) 395/2028 tested (330 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 53m) 397/2028 tested (332 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 54m) 398/2028 tested (333 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 53m) 400/2028 tested (335 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 52m) 404/2028 tested (336 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 51m) 407/2028 tested (336 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 51m) 408/2028 tested (336 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 51m) 409/2028 tested (336 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 51m) 410/2028 tested (336 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 51m) 412/2028 tested (336 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 51m) 413/2028 tested (336 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 52m) 413/2028 tested (336 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 52m) 414/2028 tested (336 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 52m) 415/2028 tested (336 survived, 16 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 52m) 415/2028 tested (336 survived, 16 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 416/2028 tested (336 survived, 17 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 51m) 420/2028 tested (336 survived, 18 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 48m) 427/2028 tested (336 survived, 18 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 49m) 427/2028 tested (336 survived, 18 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 47m) 432/2028 tested (336 survived, 19 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 47m) 433/2028 tested (336 survived, 19 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 48m) 433/2028 tested (336 survived, 19 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 47m) 435/2028 tested (336 survived, 20 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 47m) 436/2028 tested (336 survived, 21 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 48m) 436/2028 tested (336 survived, 21 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 48m) 438/2028 tested (337 survived, 22 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 48m) 439/2028 tested (338 survived, 22 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 47m) 441/2028 tested (340 survived, 22 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 48m) 442/2028 tested (341 survived, 22 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 48m) 443/2028 tested (342 survived, 22 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 47m) 445/2028 tested (344 survived, 22 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 47m) 446/2028 tested (345 survived, 22 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 48m) 447/2028 tested (345 survived, 23 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 48m) 447/2028 tested (345 survived, 23 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 48m) 448/2028 tested (345 survived, 24 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 48m) 449/2028 tested (345 survived, 25 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 48m) 450/2028 tested (345 survived, 25 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 49m) 451/2028 tested (345 survived, 26 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 48m) 453/2028 tested (347 survived, 26 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 48m) 455/2028 tested (348 survived, 26 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 47m) 457/2028 tested (349 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 47m) 459/2028 tested (351 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 47m) 460/2028 tested (352 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 47m) 461/2028 tested (353 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 47m) 463/2028 tested (355 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 47m) 464/2028 tested (356 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 47m) 466/2028 tested (358 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 47m) 467/2028 tested (359 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 46m) 469/2028 tested (361 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 46m) 470/2028 tested (362 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 46m) 472/2028 tested (364 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 46m) 473/2028 tested (365 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 46m) 475/2028 tested (367 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 46m) 476/2028 tested (368 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 45m) 478/2028 tested (370 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 46m) 479/2028 tested (371 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 45m) 481/2028 tested (373 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 45m) 482/2028 tested (374 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 45m) 484/2028 tested (376 survived, 26 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 45m) 485/2028 tested (377 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 45m) 487/2028 tested (379 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 45m) 488/2028 tested (380 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 45m) 489/2028 tested (381 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 45m) 490/2028 tested (381 survived, 27 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 45m) 490/2028 tested (381 survived, 27 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 491/2028 tested (381 survived, 28 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 493/2028 tested (383 survived, 28 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 494/2028 tested (384 survived, 28 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 496/2028 tested (384 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 496/2028 tested (384 survived, 29 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 45m) 498/2028 tested (384 survived, 30 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 500/2028 tested (385 survived, 30 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 500/2028 tested (385 survived, 30 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 501/2028 tested (385 survived, 31 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 45m) 502/2028 tested (385 survived, 32 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 502/2028 tested (385 survived, 32 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 503/2028 tested (385 survived, 33 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 504/2028 tested (385 survived, 34 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 504/2028 tested (385 survived, 34 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 505/2028 tested (385 survived, 35 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 46m) 506/2028 tested (385 survived, 36 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 47m) 506/2028 tested (385 survived, 36 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 47m) 507/2028 tested (385 survived, 37 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 47m) 509/2028 tested (387 survived, 37 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 47m) 510/2028 tested (388 survived, 37 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 46m) 512/2028 tested (390 survived, 37 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 46m) 513/2028 tested (391 survived, 37 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 46m) 515/2028 tested (393 survived, 37 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 46m) 516/2028 tested (394 survived, 37 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 46m) 518/2028 tested (396 survived, 37 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 520/2028 tested (396 survived, 37 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 522/2028 tested (396 survived, 37 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 523/2028 tested (396 survived, 37 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 524/2028 tested (396 survived, 38 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 45m) 525/2028 tested (397 survived, 38 timed out)
Mutation testing 25% (elapsed: ~58m, remaining: ~2h 45m) 526/2028 tested (397 survived, 38 timed out)
Mutation testing 25% (elapsed: ~58m, remaining: ~2h 45m) 527/2028 tested (397 survived, 38 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 45m) 528/2028 tested (398 survived, 38 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 45m) 530/2028 tested (400 survived, 38 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 45m) 531/2028 tested (401 survived, 38 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 45m) 533/2028 tested (403 survived, 38 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 45m) 534/2028 tested (404 survived, 38 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 536/2028 tested (406 survived, 38 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 537/2028 tested (407 survived, 38 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 539/2028 tested (409 survived, 38 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 540/2028 tested (410 survived, 38 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 44m) 542/2028 tested (412 survived, 38 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 44m) 543/2028 tested (413 survived, 38 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 43m) 545/2028 tested (415 survived, 38 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 43m) 546/2028 tested (416 survived, 38 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 43m) 547/2028 tested (417 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 43m) 549/2028 tested (419 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 43m) 550/2028 tested (420 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 43m) 552/2028 tested (422 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 43m) 553/2028 tested (423 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 42m) 555/2028 tested (425 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 42m) 556/2028 tested (426 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 42m) 558/2028 tested (428 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 42m) 559/2028 tested (429 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 42m) 561/2028 tested (431 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 42m) 562/2028 tested (432 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 41m) 564/2028 tested (434 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 41m) 565/2028 tested (435 survived, 38 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 41m) 567/2028 tested (437 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 41m) 568/2028 tested (438 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 41m) 570/2028 tested (440 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 41m) 571/2028 tested (441 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 573/2028 tested (443 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 574/2028 tested (444 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 576/2028 tested (446 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 577/2028 tested (447 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 40m) 579/2028 tested (449 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 40m) 580/2028 tested (450 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 40m) 581/2028 tested (451 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 583/2028 tested (453 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 584/2028 tested (454 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 586/2028 tested (456 survived, 38 timed out)
Mutation testing 28% (elapsed: ~1h 5m, remaining: ~2h 39m) 587/2028 tested (457 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 39m) 589/2028 tested (459 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 39m) 590/2028 tested (460 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 592/2028 tested (462 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 593/2028 tested (463 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 595/2028 tested (465 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 596/2028 tested (466 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 598/2028 tested (468 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 38m) 599/2028 tested (469 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 601/2028 tested (471 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 602/2028 tested (472 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 604/2028 tested (474 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 37m) 605/2028 tested (475 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 37m) 607/2028 tested (477 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 37m) 608/2028 tested (478 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 610/2028 tested (480 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 611/2028 tested (481 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 612/2028 tested (482 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 614/2028 tested (484 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 615/2028 tested (485 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 617/2028 tested (487 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 36m) 618/2028 tested (488 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 620/2028 tested (490 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 34m) 624/2028 tested (491 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 624/2028 tested (491 survived, 38 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 625/2028 tested (491 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 626/2028 tested (491 survived, 40 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 626/2028 tested (491 survived, 40 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 627/2028 tested (491 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 628/2028 tested (491 survived, 42 timed out)
Mutation testing 30% (elapsed: ~1h 10m, remaining: ~2h 36m) 628/2028 tested (491 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 36m) 629/2028 tested (491 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 631/2028 tested (493 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 632/2028 tested (494 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 633/2028 tested (494 survived, 44 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 36m) 633/2028 tested (494 survived, 44 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 36m) 634/2028 tested (494 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 636/2028 tested (496 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 637/2028 tested (497 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 639/2028 tested (499 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 640/2028 tested (500 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 642/2028 tested (502 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 643/2028 tested (503 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 34m) 645/2028 tested (505 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 34m) 646/2028 tested (506 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 34m) 648/2028 tested (508 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 34m) 649/2028 tested (509 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 34m) 651/2028 tested (511 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 652/2028 tested (511 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 33m) 654/2028 tested (511 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 654/2028 tested (511 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 655/2028 tested (511 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 656/2028 tested (511 survived, 48 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 34m) 656/2028 tested (511 survived, 48 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 34m) 658/2028 tested (512 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 34m) 659/2028 tested (513 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 662/2028 tested (514 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 664/2028 tested (516 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 665/2028 tested (517 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 32m) 667/2028 tested (519 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 32m) 668/2028 tested (520 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 668/2028 tested (520 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 33m) 669/2028 tested (520 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 33m) 670/2028 tested (520 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 33m) 670/2028 tested (520 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 33m) 671/2028 tested (520 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 672/2028 tested (520 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 673/2028 tested (520 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 674/2028 tested (520 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 675/2028 tested (520 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 676/2028 tested (520 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 677/2028 tested (520 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 678/2028 tested (521 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 32m) 680/2028 tested (523 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 32m) 681/2028 tested (524 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 32m) 682/2028 tested (524 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 682/2028 tested (524 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 683/2028 tested (524 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 684/2028 tested (524 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 684/2028 tested (524 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 685/2028 tested (524 survived, 58 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 686/2028 tested (524 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 686/2028 tested (524 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 687/2028 tested (524 survived, 60 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 33m) 688/2028 tested (524 survived, 60 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 34m) 688/2028 tested (524 survived, 60 timed out)
Mutation testing 33% (elapsed: ~1h 19m, remaining: ~2h 34m) 689/2028 tested (524 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 34m) 690/2028 tested (524 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 34m) 691/2028 tested (524 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 34m) 692/2028 tested (524 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 34m) 693/2028 tested (524 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 695/2028 tested (526 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 696/2028 tested (527 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 698/2028 tested (529 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 698/2028 tested (529 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 700/2028 tested (530 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 700/2028 tested (530 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 701/2028 tested (530 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 701/2028 tested (530 survived, 62 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 702/2028 tested (530 survived, 63 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 704/2028 tested (530 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 704/2028 tested (530 survived, 64 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 33m) 705/2028 tested (530 survived, 65 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 33m) 706/2028 tested (530 survived, 66 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 34m) 706/2028 tested (530 survived, 66 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 34m) 707/2028 tested (530 survived, 67 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 34m) 708/2028 tested (530 survived, 68 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 34m) 708/2028 tested (530 survived, 68 timed out)
Mutation testing 34% (elapsed: ~1h 23m, remaining: ~2h 34m) 709/2028 tested (530 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 34m) 710/2028 tested (530 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 34m) 711/2028 tested (531 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 34m) 712/2028 tested (531 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 34m) 713/2028 tested (532 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 34m) 713/2028 tested (532 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 714/2028 tested (532 survived, 72 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 715/2028 tested (532 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 715/2028 tested (532 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 716/2028 tested (532 survived, 74 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 717/2028 tested (532 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 35m) 717/2028 tested (532 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 35m) 718/2028 tested (532 survived, 76 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 35m) 719/2028 tested (532 survived, 77 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 35m) 719/2028 tested (532 survived, 77 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 721/2028 tested (533 survived, 78 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 722/2028 tested (534 survived, 78 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 724/2028 tested (536 survived, 78 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 725/2028 tested (537 survived, 78 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 726/2028 tested (538 survived, 78 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 728/2028 tested (540 survived, 78 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 729/2028 tested (541 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 33m) 731/2028 tested (543 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 33m) 732/2028 tested (544 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 33m) 734/2028 tested (546 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 33m) 735/2028 tested (547 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 737/2028 tested (549 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 738/2028 tested (550 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 740/2028 tested (552 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 741/2028 tested (553 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 32m) 743/2028 tested (555 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 32m) 744/2028 tested (556 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 746/2028 tested (558 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 747/2028 tested (559 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 749/2028 tested (561 survived, 78 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 750/2028 tested (562 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 31m) 752/2028 tested (564 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 753/2028 tested (565 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 755/2028 tested (567 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 756/2028 tested (568 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 758/2028 tested (570 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 759/2028 tested (571 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 760/2028 tested (572 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 29m) 762/2028 tested (574 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 29m) 763/2028 tested (575 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 29m) 765/2028 tested (577 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 29m) 766/2028 tested (578 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 29m) 768/2028 tested (580 survived, 78 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 28m) 769/2028 tested (581 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 771/2028 tested (583 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 772/2028 tested (584 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 774/2028 tested (586 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 775/2028 tested (587 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 27m) 777/2028 tested (589 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 778/2028 tested (590 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 780/2028 tested (592 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 781/2028 tested (593 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 783/2028 tested (595 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 784/2028 tested (596 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 26m) 786/2028 tested (598 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 26m) 787/2028 tested (599 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 26m) 789/2028 tested (601 survived, 78 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 26m) 790/2028 tested (602 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 26m) 791/2028 tested (603 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 25m) 793/2028 tested (605 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 25m) 794/2028 tested (606 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 796/2028 tested (608 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 797/2028 tested (609 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 799/2028 tested (611 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 800/2028 tested (612 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 24m) 803/2028 tested (614 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 23m) 807/2028 tested (614 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 23m) 809/2028 tested (615 survived, 78 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 23m) 810/2028 tested (616 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 22m) 812/2028 tested (618 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 22m) 813/2028 tested (619 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 22m) 815/2028 tested (621 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 22m) 816/2028 tested (622 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 22m) 818/2028 tested (624 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 21m) 819/2028 tested (625 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 21m) 821/2028 tested (627 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 21m) 822/2028 tested (628 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 21m) 824/2028 tested (630 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 21m) 825/2028 tested (631 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 20m) 827/2028 tested (633 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 20m) 828/2028 tested (634 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 20m) 830/2028 tested (636 survived, 78 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 20m) 831/2028 tested (637 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 20m) 832/2028 tested (638 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 20m) 834/2028 tested (640 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 20m) 835/2028 tested (641 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 837/2028 tested (643 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 838/2028 tested (644 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 18m) 842/2028 tested (646 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 18m) 845/2028 tested (647 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 18m) 846/2028 tested (648 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 17m) 848/2028 tested (650 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 17m) 849/2028 tested (651 survived, 78 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 17m) 850/2028 tested (652 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 17m) 852/2028 tested (654 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 17m) 853/2028 tested (655 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 16m) 855/2028 tested (657 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 856/2028 tested (658 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 858/2028 tested (660 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 859/2028 tested (661 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 861/2028 tested (663 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 862/2028 tested (664 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 15m) 864/2028 tested (665 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 866/2028 tested (667 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 867/2028 tested (668 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 869/2028 tested (670 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 870/2028 tested (671 survived, 78 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 14m) 872/2028 tested (673 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 14m) 873/2028 tested (674 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 875/2028 tested (676 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 876/2028 tested (677 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 878/2028 tested (679 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 13m) 879/2028 tested (680 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 13m) 881/2028 tested (682 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 13m) 882/2028 tested (683 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 883/2028 tested (683 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 885/2028 tested (683 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 886/2028 tested (684 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 12m) 888/2028 tested (686 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 12m) 889/2028 tested (687 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 12m) 890/2028 tested (688 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 12m) 891/2028 tested (689 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 12m) 892/2028 tested (689 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 12m) 892/2028 tested (689 survived, 79 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 12m) 893/2028 tested (689 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 12m) 894/2028 tested (689 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 12m) 896/2028 tested (691 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 12m) 897/2028 tested (692 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 12m) 899/2028 tested (694 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 12m) 900/2028 tested (695 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 11m) 902/2028 tested (697 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 11m) 903/2028 tested (698 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 11m) 904/2028 tested (699 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 10m) 908/2028 tested (701 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 10m) 910/2028 tested (702 survived, 81 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 10m) 911/2028 tested (703 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 10m) 913/2028 tested (705 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 9m) 915/2028 tested (706 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 9m) 917/2028 tested (708 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 9m) 919/2028 tested (709 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 9m) 920/2028 tested (710 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 8m) 922/2028 tested (712 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 8m) 923/2028 tested (713 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 8m) 925/2028 tested (715 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 8m) 926/2028 tested (716 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 8m) 928/2028 tested (718 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 7m) 929/2028 tested (719 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 7m) 931/2028 tested (721 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 7m) 932/2028 tested (722 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 7m) 934/2028 tested (724 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 7m) 935/2028 tested (725 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 937/2028 tested (727 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 938/2028 tested (728 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 940/2028 tested (730 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 941/2028 tested (731 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 943/2028 tested (733 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 944/2028 tested (734 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 946/2028 tested (736 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 947/2028 tested (737 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 949/2028 tested (739 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 950/2028 tested (740 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 951/2028 tested (741 survived, 81 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 953/2028 tested (743 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 954/2028 tested (744 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 955/2028 tested (744 survived, 82 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 5m) 955/2028 tested (744 survived, 82 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 5m) 956/2028 tested (744 survived, 83 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 957/2028 tested (744 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 5m) 957/2028 tested (744 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 5m) 958/2028 tested (744 survived, 85 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 5m) 959/2028 tested (744 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 4m) 960/2028 tested (745 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 4m) 961/2028 tested (746 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 4m) 963/2028 tested (748 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 4m) 965/2028 tested (749 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 967/2028 tested (751 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 968/2028 tested (752 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 970/2028 tested (754 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 971/2028 tested (755 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 3m) 973/2028 tested (757 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~2h 3m) 974/2028 tested (758 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 2m) 976/2028 tested (760 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 2m) 977/2028 tested (761 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 2m) 979/2028 tested (763 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 2m) 980/2028 tested (764 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 2m) 982/2028 tested (766 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 2m) 983/2028 tested (767 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 2m) 984/2028 tested (768 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 1m) 986/2028 tested (770 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 1m) 987/2028 tested (771 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 1m) 989/2028 tested (773 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 1m) 990/2028 tested (774 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 0m) 992/2028 tested (776 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 0m) 993/2028 tested (777 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~2h 0m) 995/2028 tested (779 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~2h 0m) 996/2028 tested (780 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~2h 0m) 998/2028 tested (782 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~2h 0m) 999/2028 tested (783 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 59m) 1001/2028 tested (785 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 59m) 1002/2028 tested (786 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 59m) 1004/2028 tested (788 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 59m) 1005/2028 tested (789 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 59m) 1007/2028 tested (791 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 59m) 1008/2028 tested (792 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 59m) 1009/2028 tested (793 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 58m) 1011/2028 tested (793 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 58m) 1012/2028 tested (793 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 58m) 1014/2028 tested (793 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 58m) 1015/2028 tested (793 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 57m) 1017/2028 tested (795 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 57m) 1018/2028 tested (796 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 57m) 1020/2028 tested (798 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 57m) 1021/2028 tested (799 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 57m) 1022/2028 tested (800 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 57m) 1024/2028 tested (802 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 57m) 1025/2028 tested (803 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 56m) 1027/2028 tested (805 survived, 86 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 56m) 1028/2028 tested (806 survived, 86 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 56m) 1030/2028 tested (808 survived, 86 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 56m) 1031/2028 tested (809 survived, 86 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 56m) 1033/2028 tested (811 survived, 86 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 55m) 1034/2028 tested (812 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 55m) 1036/2028 tested (814 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 55m) 1037/2028 tested (815 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 55m) 1039/2028 tested (817 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 55m) 1040/2028 tested (818 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 54m) 1042/2028 tested (820 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 54m) 1043/2028 tested (821 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 54m) 1045/2028 tested (823 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 54m) 1046/2028 tested (824 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 54m) 1048/2028 tested (826 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 54m) 1049/2028 tested (827 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 53m) 1051/2028 tested (829 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 53m) 1052/2028 tested (830 survived, 86 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 53m) 1053/2028 tested (831 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 53m) 1055/2028 tested (833 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 53m) 1056/2028 tested (834 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 53m) 1058/2028 tested (836 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 53m) 1059/2028 tested (837 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 52m) 1061/2028 tested (839 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 52m) 1062/2028 tested (840 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 52m) 1064/2028 tested (842 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 52m) 1065/2028 tested (843 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 51m) 1067/2028 tested (845 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 51m) 1068/2028 tested (846 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 51m) 1070/2028 tested (848 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 51m) 1071/2028 tested (849 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 51m) 1073/2028 tested (851 survived, 86 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 51m) 1074/2028 tested (852 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 50m) 1076/2028 tested (854 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 50m) 1077/2028 tested (855 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 50m) 1079/2028 tested (857 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 50m) 1080/2028 tested (858 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 50m) 1081/2028 tested (859 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 50m) 1083/2028 tested (861 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 50m) 1084/2028 tested (862 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 49m) 1086/2028 tested (864 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 49m) 1087/2028 tested (865 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 49m) 1089/2028 tested (867 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 49m) 1090/2028 tested (868 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 49m) 1092/2028 tested (870 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 48m) 1093/2028 tested (871 survived, 86 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 48m) 1095/2028 tested (873 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 48m) 1096/2028 tested (874 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 48m) 1098/2028 tested (876 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 48m) 1099/2028 tested (877 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 47m) 1101/2028 tested (879 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 47m) 1102/2028 tested (880 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 47m) 1104/2028 tested (882 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 47m) 1105/2028 tested (883 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 47m) 1106/2028 tested (884 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 47m) 1108/2028 tested (886 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 47m) 1109/2028 tested (887 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 46m) 1111/2028 tested (889 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 46m) 1112/2028 tested (890 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 46m) 1114/2028 tested (892 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 46m) 1115/2028 tested (893 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 46m) 1117/2028 tested (895 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 45m) 1118/2028 tested (896 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 45m) 1120/2028 tested (898 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 45m) 1121/2028 tested (899 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 45m) 1123/2028 tested (901 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 45m) 1124/2028 tested (902 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1126/2028 tested (904 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1127/2028 tested (905 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1129/2028 tested (907 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1130/2028 tested (908 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1132/2028 tested (910 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1133/2028 tested (911 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 44m) 1134/2028 tested (912 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1136/2028 tested (914 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1137/2028 tested (915 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1139/2028 tested (917 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1140/2028 tested (918 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1142/2028 tested (920 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1143/2028 tested (921 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1145/2028 tested (923 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1146/2028 tested (924 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1148/2028 tested (926 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1149/2028 tested (927 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 41m) 1151/2028 tested (929 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 41m) 1152/2028 tested (930 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 41m) 1154/2028 tested (932 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 41m) 1155/2028 tested (933 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 41m) 1157/2028 tested (935 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 41m) 1158/2028 tested (936 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 40m) 1160/2028 tested (938 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1161/2028 tested (939 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1163/2028 tested (941 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1164/2028 tested (942 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1165/2028 tested (943 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1167/2028 tested (945 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1168/2028 tested (946 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1170/2028 tested (948 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1171/2028 tested (949 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1173/2028 tested (951 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1174/2028 tested (952 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1176/2028 tested (954 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 38m) 1177/2028 tested (955 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1179/2028 tested (957 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1180/2028 tested (958 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1182/2028 tested (960 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1183/2028 tested (961 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 37m) 1185/2028 tested (963 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 37m) 1186/2028 tested (964 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1188/2028 tested (966 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1189/2028 tested (967 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1191/2028 tested (969 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1192/2028 tested (970 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 36m) 1194/2028 tested (972 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 36m) 1195/2028 tested (973 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1197/2028 tested (975 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1198/2028 tested (976 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1199/2028 tested (977 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1201/2028 tested (979 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 35m) 1202/2028 tested (980 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 35m) 1204/2028 tested (982 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1205/2028 tested (983 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1207/2028 tested (985 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1208/2028 tested (986 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 34m) 1210/2028 tested (988 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 34m) 1211/2028 tested (989 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 34m) 1213/2028 tested (991 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 34m) 1214/2028 tested (992 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 34m) 1216/2028 tested (994 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 34m) 1217/2028 tested (995 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 33m) 1219/2028 tested (997 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 33m) 1220/2028 tested (998 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 33m) 1222/2028 tested (1000 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 33m) 1223/2028 tested (1001 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 33m) 1225/2028 tested (1003 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 33m) 1226/2028 tested (1004 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1228/2028 tested (1006 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1229/2028 tested (1007 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1231/2028 tested (1009 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 32m) 1232/2028 tested (1010 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 32m) 1233/2028 tested (1011 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 32m) 1235/2028 tested (1013 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 31m) 1236/2028 tested (1014 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 31m) 1238/2028 tested (1016 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 31m) 1239/2028 tested (1017 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 31m) 1241/2028 tested (1019 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 31m) 1242/2028 tested (1020 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1244/2028 tested (1022 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1245/2028 tested (1023 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1247/2028 tested (1025 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1248/2028 tested (1026 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 30m) 1250/2028 tested (1028 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 30m) 1251/2028 tested (1029 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1253/2028 tested (1031 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1254/2028 tested (1032 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1256/2028 tested (1034 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1257/2028 tested (1035 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 29m) 1259/2028 tested (1037 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 29m) 1260/2028 tested (1038 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1262/2028 tested (1040 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1263/2028 tested (1041 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1264/2028 tested (1042 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1266/2028 tested (1044 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 28m) 1267/2028 tested (1045 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 28m) 1269/2028 tested (1047 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1270/2028 tested (1048 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1272/2028 tested (1050 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1273/2028 tested (1051 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1275/2028 tested (1053 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 27m) 1276/2028 tested (1054 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1278/2028 tested (1056 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1279/2028 tested (1057 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1281/2028 tested (1059 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1282/2028 tested (1060 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1284/2028 tested (1062 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 26m) 1285/2028 tested (1063 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1287/2028 tested (1065 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1288/2028 tested (1066 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1290/2028 tested (1068 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1291/2028 tested (1069 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1293/2028 tested (1071 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 25m) 1294/2028 tested (1072 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 24m) 1295/2028 tested (1073 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 24m) 1297/2028 tested (1075 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 24m) 1298/2028 tested (1076 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 24m) 1300/2028 tested (1078 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 24m) 1301/2028 tested (1079 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 24m) 1303/2028 tested (1081 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1304/2028 tested (1082 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1306/2028 tested (1084 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1307/2028 tested (1085 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1309/2028 tested (1087 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1310/2028 tested (1088 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1312/2028 tested (1090 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1313/2028 tested (1091 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1315/2028 tested (1093 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1316/2028 tested (1094 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1318/2028 tested (1096 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 32m, remaining: ~1h 22m) 1319/2028 tested (1097 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1321/2028 tested (1099 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1322/2028 tested (1100 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1324/2028 tested (1102 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1325/2028 tested (1103 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1326/2028 tested (1104 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1328/2028 tested (1106 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1329/2028 tested (1107 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1331/2028 tested (1109 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1332/2028 tested (1110 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1334/2028 tested (1112 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1335/2028 tested (1113 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1337/2028 tested (1115 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 19m) 1338/2028 tested (1116 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1340/2028 tested (1118 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1341/2028 tested (1119 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1343/2028 tested (1121 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1344/2028 tested (1122 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 18m) 1346/2028 tested (1124 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1347/2028 tested (1125 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1349/2028 tested (1127 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1350/2028 tested (1128 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1352/2028 tested (1130 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1353/2028 tested (1131 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 17m) 1355/2028 tested (1133 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 17m) 1356/2028 tested (1134 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 17m) 1358/2028 tested (1136 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1359/2028 tested (1137 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1360/2028 tested (1138 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1362/2028 tested (1140 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1363/2028 tested (1141 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1365/2028 tested (1143 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1366/2028 tested (1144 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1368/2028 tested (1146 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1369/2028 tested (1147 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1371/2028 tested (1149 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 15m) 1372/2028 tested (1150 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1374/2028 tested (1152 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1375/2028 tested (1153 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1377/2028 tested (1155 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1378/2028 tested (1156 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 14m) 1380/2028 tested (1158 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 14m) 1381/2028 tested (1159 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1383/2028 tested (1161 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1384/2028 tested (1162 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1386/2028 tested (1164 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1387/2028 tested (1165 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 13m) 1389/2028 tested (1167 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 13m) 1390/2028 tested (1168 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1392/2028 tested (1170 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1393/2028 tested (1171 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1395/2028 tested (1173 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1396/2028 tested (1174 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1397/2028 tested (1175 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 12m) 1399/2028 tested (1177 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1400/2028 tested (1178 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1402/2028 tested (1180 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1403/2028 tested (1181 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1405/2028 tested (1183 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 11m) 1406/2028 tested (1184 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 11m) 1408/2028 tested (1186 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1409/2028 tested (1187 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1411/2028 tested (1189 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1412/2028 tested (1190 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 10m) 1414/2028 tested (1192 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 10m) 1415/2028 tested (1193 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 10m) 1417/2028 tested (1195 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 10m) 1418/2028 tested (1196 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 10m) 1420/2028 tested (1198 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 10m) 1421/2028 tested (1199 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 9m) 1423/2028 tested (1201 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 9m) 1424/2028 tested (1202 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 9m) 1426/2028 tested (1204 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1427/2028 tested (1205 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1428/2028 tested (1206 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1430/2028 tested (1208 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1431/2028 tested (1209 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 8m) 1433/2028 tested (1211 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 8m) 1434/2028 tested (1212 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 8m) 1436/2028 tested (1214 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 8m) 1437/2028 tested (1215 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 8m) 1439/2028 tested (1217 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 7m) 1440/2028 tested (1218 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 7m) 1442/2028 tested (1220 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 7m) 1443/2028 tested (1221 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 7m) 1445/2028 tested (1223 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 7m) 1446/2028 tested (1224 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 7m) 1448/2028 tested (1226 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 6m) 1449/2028 tested (1227 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 6m) 1451/2028 tested (1229 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 6m) 1452/2028 tested (1230 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 6m) 1454/2028 tested (1232 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 6m) 1455/2028 tested (1233 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 5m) 1457/2028 tested (1235 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 5m) 1458/2028 tested (1236 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 5m) 1460/2028 tested (1238 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 48m, remaining: ~1h 5m) 1461/2028 tested (1239 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 5m) 1462/2028 tested (1240 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 5m) 1464/2028 tested (1242 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 5m) 1465/2028 tested (1243 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1467/2028 tested (1245 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1468/2028 tested (1246 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1470/2028 tested (1248 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 4m) 1471/2028 tested (1249 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 4m) 1473/2028 tested (1251 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 4m) 1474/2028 tested (1252 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1476/2028 tested (1254 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1477/2028 tested (1255 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1479/2028 tested (1257 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 3m) 1480/2028 tested (1258 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 3m) 1482/2028 tested (1260 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1483/2028 tested (1261 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1485/2028 tested (1263 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1486/2028 tested (1264 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1488/2028 tested (1266 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 2m) 1489/2028 tested (1267 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 2m) 1491/2028 tested (1269 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1492/2028 tested (1270 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1495/2028 tested (1271 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1497/2028 tested (1273 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1498/2028 tested (1274 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 0m) 1500/2028 tested (1276 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1501/2028 tested (1277 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1503/2028 tested (1279 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1504/2028 tested (1280 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1506/2028 tested (1282 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1507/2028 tested (1283 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~1h 0m) 1508/2028 tested (1284 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1510/2028 tested (1286 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1511/2028 tested (1287 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1513/2028 tested (1289 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1514/2028 tested (1290 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1516/2028 tested (1292 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~58m) 1517/2028 tested (1293 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~58m) 1519/2028 tested (1295 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~58m) 1520/2028 tested (1296 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~58m) 1522/2028 tested (1298 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~58m) 1523/2028 tested (1299 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~57m) 1525/2028 tested (1301 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1526/2028 tested (1302 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1528/2028 tested (1304 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1529/2028 tested (1305 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1531/2028 tested (1307 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1532/2028 tested (1308 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~56m) 1534/2028 tested (1310 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1535/2028 tested (1311 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1537/2028 tested (1313 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1538/2028 tested (1314 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1540/2028 tested (1316 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1541/2028 tested (1317 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 57m, remaining: ~56m) 1542/2028 tested (1318 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1544/2028 tested (1320 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1545/2028 tested (1321 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1547/2028 tested (1323 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1548/2028 tested (1324 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1550/2028 tested (1326 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~54m) 1551/2028 tested (1327 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1553/2028 tested (1329 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1554/2028 tested (1330 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1556/2028 tested (1332 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1557/2028 tested (1333 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1559/2028 tested (1335 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~53m) 1560/2028 tested (1336 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1562/2028 tested (1338 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1563/2028 tested (1339 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1565/2028 tested (1341 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1566/2028 tested (1342 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1568/2028 tested (1344 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~52m) 1569/2028 tested (1345 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1571/2028 tested (1347 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1572/2028 tested (1348 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1574/2028 tested (1350 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1575/2028 tested (1351 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~51m) 1577/2028 tested (1353 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~51m) 1578/2028 tested (1354 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~51m) 1579/2028 tested (1355 survived, 86 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~51m) 1581/2028 tested (1357 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~51m) 1582/2028 tested (1358 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~51m) 1584/2028 tested (1360 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~51m) 1585/2028 tested (1361 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~50m) 1587/2028 tested (1363 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1588/2028 tested (1364 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1590/2028 tested (1366 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1591/2028 tested (1367 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1593/2028 tested (1369 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1594/2028 tested (1370 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~49m) 1596/2028 tested (1372 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1597/2028 tested (1373 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1599/2028 tested (1375 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1600/2028 tested (1376 survived, 86 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1602/2028 tested (1378 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~48m) 1603/2028 tested (1379 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 4m, remaining: ~48m) 1605/2028 tested (1381 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1606/2028 tested (1382 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1608/2028 tested (1384 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1609/2028 tested (1385 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1611/2028 tested (1387 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~47m) 1612/2028 tested (1388 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~47m) 1613/2028 tested (1389 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1615/2028 tested (1391 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1616/2028 tested (1392 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1618/2028 tested (1394 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1619/2028 tested (1395 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~46m) 1621/2028 tested (1397 survived, 86 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~46m) 1622/2028 tested (1398 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1624/2028 tested (1400 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1625/2028 tested (1401 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1627/2028 tested (1403 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1628/2028 tested (1404 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~45m) 1630/2028 tested (1406 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~45m) 1631/2028 tested (1407 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1633/2028 tested (1409 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1634/2028 tested (1410 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1636/2028 tested (1412 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1637/2028 tested (1413 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~44m) 1639/2028 tested (1415 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~44m) 1640/2028 tested (1416 survived, 86 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~44m) 1642/2028 tested (1418 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~44m) 1643/2028 tested (1419 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~44m) 1645/2028 tested (1421 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~43m) 1646/2028 tested (1422 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~43m) 1648/2028 tested (1424 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~43m) 1649/2028 tested (1425 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~43m) 1650/2028 tested (1426 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~43m) 1652/2028 tested (1428 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~43m) 1653/2028 tested (1429 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~42m) 1655/2028 tested (1431 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~42m) 1656/2028 tested (1432 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~42m) 1658/2028 tested (1434 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~42m) 1659/2028 tested (1435 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~42m) 1661/2028 tested (1437 survived, 86 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~42m) 1662/2028 tested (1438 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~41m) 1664/2028 tested (1440 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~41m) 1665/2028 tested (1441 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 11m, remaining: ~41m) 1667/2028 tested (1443 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~41m) 1668/2028 tested (1444 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~41m) 1670/2028 tested (1446 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~41m) 1671/2028 tested (1447 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~40m) 1673/2028 tested (1449 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~40m) 1674/2028 tested (1450 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~40m) 1676/2028 tested (1452 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~40m) 1677/2028 tested (1453 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~40m) 1679/2028 tested (1455 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~40m) 1680/2028 tested (1456 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~39m) 1682/2028 tested (1458 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~39m) 1683/2028 tested (1459 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 13m, remaining: ~39m) 1684/2028 tested (1460 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~39m) 1686/2028 tested (1462 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~39m) 1687/2028 tested (1463 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~39m) 1689/2028 tested (1465 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~38m) 1690/2028 tested (1466 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~38m) 1692/2028 tested (1468 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~38m) 1693/2028 tested (1469 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~38m) 1695/2028 tested (1471 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~38m) 1696/2028 tested (1472 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~37m) 1698/2028 tested (1474 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~37m) 1699/2028 tested (1475 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~37m) 1701/2028 tested (1477 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~37m) 1702/2028 tested (1478 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~37m) 1704/2028 tested (1480 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~37m) 1705/2028 tested (1481 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~36m) 1707/2028 tested (1483 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~36m) 1708/2028 tested (1484 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~36m) 1710/2028 tested (1486 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~36m) 1711/2028 tested (1487 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~36m) 1713/2028 tested (1489 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~36m) 1714/2028 tested (1490 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~35m) 1716/2028 tested (1492 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~35m) 1717/2028 tested (1493 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~35m) 1718/2028 tested (1494 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~35m) 1720/2028 tested (1496 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~35m) 1721/2028 tested (1497 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~35m) 1723/2028 tested (1499 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~34m) 1724/2028 tested (1500 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~34m) 1726/2028 tested (1502 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~34m) 1727/2028 tested (1503 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 18m, remaining: ~34m) 1729/2028 tested (1505 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~34m) 1730/2028 tested (1506 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~34m) 1732/2028 tested (1508 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~33m) 1733/2028 tested (1509 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~33m) 1735/2028 tested (1511 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~33m) 1736/2028 tested (1512 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~33m) 1738/2028 tested (1514 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~33m) 1739/2028 tested (1515 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~32m) 1741/2028 tested (1517 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~32m) 1742/2028 tested (1518 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~32m) 1744/2028 tested (1520 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~32m) 1745/2028 tested (1521 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 20m, remaining: ~32m) 1747/2028 tested (1523 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~32m) 1748/2028 tested (1524 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~31m) 1750/2028 tested (1526 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~31m) 1751/2028 tested (1527 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~31m) 1752/2028 tested (1528 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~31m) 1754/2028 tested (1530 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~31m) 1755/2028 tested (1531 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~31m) 1757/2028 tested (1533 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~31m) 1758/2028 tested (1534 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~30m) 1760/2028 tested (1536 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~30m) 1761/2028 tested (1537 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~30m) 1763/2028 tested (1539 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~30m) 1764/2028 tested (1540 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~30m) 1766/2028 tested (1542 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~30m) 1767/2028 tested (1543 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~29m) 1769/2028 tested (1545 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~29m) 1770/2028 tested (1546 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~29m) 1772/2028 tested (1548 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~29m) 1773/2028 tested (1549 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~29m) 1775/2028 tested (1551 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~28m) 1776/2028 tested (1552 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~28m) 1778/2028 tested (1554 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~28m) 1779/2028 tested (1555 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~28m) 1781/2028 tested (1557 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~28m) 1782/2028 tested (1558 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~28m) 1783/2028 tested (1559 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~27m) 1785/2028 tested (1561 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~27m) 1786/2028 tested (1562 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~27m) 1788/2028 tested (1564 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~27m) 1789/2028 tested (1565 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 25m, remaining: ~27m) 1791/2028 tested (1567 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~27m) 1792/2028 tested (1568 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~26m) 1794/2028 tested (1570 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~26m) 1795/2028 tested (1571 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~26m) 1797/2028 tested (1573 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~26m) 1798/2028 tested (1574 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~26m) 1800/2028 tested (1576 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~26m) 1801/2028 tested (1577 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~25m) 1803/2028 tested (1579 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~25m) 1804/2028 tested (1580 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~25m) 1806/2028 tested (1582 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~25m) 1807/2028 tested (1583 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 27m, remaining: ~25m) 1809/2028 tested (1585 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~25m) 1810/2028 tested (1586 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~24m) 1812/2028 tested (1588 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~24m) 1813/2028 tested (1589 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~24m) 1814/2028 tested (1590 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~24m) 1816/2028 tested (1592 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~24m) 1817/2028 tested (1593 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~24m) 1819/2028 tested (1595 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~23m) 1820/2028 tested (1596 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~23m) 1822/2028 tested (1598 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~23m) 1823/2028 tested (1599 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~23m) 1825/2028 tested (1601 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 29m, remaining: ~23m) 1826/2028 tested (1602 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~22m) 1828/2028 tested (1604 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~22m) 1829/2028 tested (1605 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~22m) 1831/2028 tested (1607 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~22m) 1832/2028 tested (1608 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~22m) 1834/2028 tested (1610 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~22m) 1835/2028 tested (1611 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~21m) 1837/2028 tested (1613 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~21m) 1838/2028 tested (1614 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~21m) 1840/2028 tested (1616 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~21m) 1841/2028 tested (1617 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~21m) 1843/2028 tested (1619 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~21m) 1844/2028 tested (1620 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~21m) 1845/2028 tested (1621 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~20m) 1847/2028 tested (1623 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~20m) 1848/2028 tested (1624 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~20m) 1850/2028 tested (1626 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~20m) 1851/2028 tested (1627 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~20m) 1853/2028 tested (1629 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~19m) 1854/2028 tested (1630 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~19m) 1856/2028 tested (1632 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~19m) 1857/2028 tested (1633 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~19m) 1859/2028 tested (1635 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~19m) 1860/2028 tested (1636 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~19m) 1862/2028 tested (1638 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~18m) 1863/2028 tested (1639 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~18m) 1865/2028 tested (1641 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~18m) 1866/2028 tested (1642 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~18m) 1868/2028 tested (1644 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~18m) 1869/2028 tested (1645 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 34m, remaining: ~18m) 1871/2028 tested (1647 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~17m) 1872/2028 tested (1648 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~17m) 1874/2028 tested (1650 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~17m) 1875/2028 tested (1651 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~17m) 1877/2028 tested (1653 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~17m) 1878/2028 tested (1654 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~17m) 1879/2028 tested (1655 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~16m) 1881/2028 tested (1657 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~16m) 1882/2028 tested (1658 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~16m) 1884/2028 tested (1660 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~16m) 1885/2028 tested (1661 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~16m) 1887/2028 tested (1663 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 36m, remaining: ~16m) 1888/2028 tested (1664 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~15m) 1890/2028 tested (1666 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~15m) 1891/2028 tested (1667 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~15m) 1893/2028 tested (1669 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~15m) 1894/2028 tested (1670 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~15m) 1896/2028 tested (1672 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~15m) 1897/2028 tested (1673 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~14m) 1899/2028 tested (1675 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~14m) 1900/2028 tested (1676 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~14m) 1902/2028 tested (1678 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~14m) 1903/2028 tested (1679 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~14m) 1905/2028 tested (1681 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~14m) 1906/2028 tested (1682 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~13m) 1908/2028 tested (1684 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~13m) 1909/2028 tested (1685 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~13m) 1911/2028 tested (1687 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~13m) 1912/2028 tested (1688 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~13m) 1914/2028 tested (1690 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~12m) 1915/2028 tested (1691 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~12m) 1916/2028 tested (1692 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~12m) 1918/2028 tested (1694 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~12m) 1919/2028 tested (1695 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~12m) 1921/2028 tested (1697 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~12m) 1922/2028 tested (1698 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~11m) 1924/2028 tested (1700 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~11m) 1925/2028 tested (1701 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~11m) 1927/2028 tested (1703 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~11m) 1928/2028 tested (1704 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~11m) 1930/2028 tested (1706 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~11m) 1931/2028 tested (1707 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 41m, remaining: ~10m) 1933/2028 tested (1709 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~10m) 1934/2028 tested (1710 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~10m) 1936/2028 tested (1712 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~10m) 1937/2028 tested (1713 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~10m) 1939/2028 tested (1715 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~10m) 1940/2028 tested (1716 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~9m) 1942/2028 tested (1718 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~9m) 1943/2028 tested (1719 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~9m) 1945/2028 tested (1721 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~9m) 1946/2028 tested (1722 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~9m) 1948/2028 tested (1724 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~9m) 1949/2028 tested (1725 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 43m, remaining: ~8m) 1950/2028 tested (1726 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~8m) 1952/2028 tested (1728 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~8m) 1953/2028 tested (1729 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~8m) 1955/2028 tested (1731 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~8m) 1956/2028 tested (1732 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~8m) 1958/2028 tested (1734 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~7m) 1959/2028 tested (1735 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~7m) 1961/2028 tested (1737 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~7m) 1962/2028 tested (1738 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~7m) 1964/2028 tested (1740 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~7m) 1965/2028 tested (1741 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~6m) 1967/2028 tested (1743 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 45m, remaining: ~6m) 1968/2028 tested (1744 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~6m) 1970/2028 tested (1746 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~6m) 1971/2028 tested (1747 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~6m) 1973/2028 tested (1749 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~6m) 1974/2028 tested (1750 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~5m) 1976/2028 tested (1752 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~5m) 1977/2028 tested (1753 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~5m) 1979/2028 tested (1755 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~5m) 1980/2028 tested (1756 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~5m) 1981/2028 tested (1757 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~5m) 1983/2028 tested (1759 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~5m) 1984/2028 tested (1760 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~4m) 1986/2028 tested (1762 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~4m) 1987/2028 tested (1763 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~4m) 1989/2028 tested (1765 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~4m) 1990/2028 tested (1766 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~4m) 1992/2028 tested (1768 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~4m) 1993/2028 tested (1769 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 48m, remaining: ~3m) 1995/2028 tested (1771 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~3m) 1996/2028 tested (1772 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~3m) 1998/2028 tested (1774 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~3m) 1999/2028 tested (1775 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~3m) 2001/2028 tested (1777 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~2m) 2002/2028 tested (1778 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~2m) 2006/2028 tested (1779 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: ~2m) 2008/2028 tested (1781 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: ~2m) 2009/2028 tested (1782 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: ~1m) 2011/2028 tested (1784 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: ~1m) 2012/2028 tested (1785 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: ~1m) 2014/2028 tested (1787 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 50m, remaining: ~1m) 2015/2028 tested (1788 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: ~1m) 2016/2028 tested (1789 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: ~1m) 2018/2028 tested (1791 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: ~1m) 2019/2028 tested (1792 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: <1m) 2021/2028 tested (1794 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: <1m) 2022/2028 tested (1795 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: <1m) 2024/2028 tested (1797 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: <1m) 2025/2028 tested (1798 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: <1m) 2027/2028 tested (1800 survived, 86 timed out)

All tests
  ✓ All tests (killed 141)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition + 1);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition - 1);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition * 2);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "hello"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           console.log("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("fulfilled", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("rejected", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("pending", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", 0);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", "hello");

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && false) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && true) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && typeof define.amd.amd === "function") {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(undefined);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(0);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "object") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "string") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (!ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.maybeOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok === true()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" || typeof self !== "undefined" || typeof global !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" || typeof self !== "undefined" || typeof document !== "undefined") {

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = 0();

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = null();

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = undefined();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   console.log();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, 1 + 1);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, false);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, 0);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS && false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS || true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.foo()) {

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush());

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush + 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(console.log("hello"), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, undefined);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain && true) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain || false) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.remove();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.pop();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (flushing ? false : true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "string") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "function") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(NaN);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({
+     toString: function () {
+       return "object";
+     }
+   }, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush(0));

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush(1));

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(null);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && MessageChannel.toString().indexOf("[native code]") === -1) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && MessageChannel.toString().indexOf("[object MessageChannel]") === -1) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && MessageChannel.toString().indexOf("MessageChannel") === -1) {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush.call(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, NaN);

[Survived] PrecomputedMutator
q.js:228:13
-               requestPortTick();
+               requestTick();

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush + 1, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush + 2, 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing || false) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (1 + 1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (2);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (3);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index >= this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index !== this.length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (++index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index++ >= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index++ > length) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index += 1; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index *= 2; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = index + 1) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index > this) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index === this) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index + 1 in this) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], this[index + 1]);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] * 2, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] - 1, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i + 1 < this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = i + 2) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] + value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] - value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self)());

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback(value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, self, index));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, index, self, value));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(0, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 0, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, this[index], self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.length));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self[0]));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self[i]));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && key !== "prototype") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && key !== "length") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && key !== "constructor") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(key in object)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.hasOwnProperty(key))) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(0, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, value)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, this[key])) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[key]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + "foo");

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof QReturnValue !== "undefined") {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (QReturnValue !== undefined) {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack !== undefined

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack.length > 0

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.source; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.source.length; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && true; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p || false; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.next) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.previous) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.next.next) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ < p.stackCounter) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ === p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: Math.random(),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackTrace__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter,
+     configurable: true,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(promise.stackCounter);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(promise.stack.length);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(promise.stack.split("\n")[0]);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.code);

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + " ");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\t" + STACK_JUMP_SEPARATOR + "\t");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("" + STACK_JUMP_SEPARATOR + "");

[Survived] PrecomputedMutator
q.js:397:21
-           var stack = filterStackString(concatedStacks);
+           var stack = concatedStacks(concatedStacks);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.reverse());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.slice(1));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.concat(["new error"]));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: true
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "error", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "message", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.toUpperCase(),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.split("").reverse().join(""),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\\s+");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = NaN; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 0; i <= lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = lines.length - 1; i >= 0; --i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i + 1 < lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = i + 1) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) || !isNodeFrame(line) || line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame !== true(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line + 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line - 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line * 2) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:)" + 1) !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:)" + "1") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("(module.js:)" + "1" + "2") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.toLowerCase());

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split('').reverse().join(''));

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.slice(stackLine.length - 1, stackLine.length));

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "a"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[0])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ").reverse().join(" "));

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.replace(/\d+/g, "X"));

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[2]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[0]) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.toLowerCase());

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ").join(""));

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.substr(1));

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3.length) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[0]) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "1"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], 1 + 1(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[4])];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[0](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[1](stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(" ")[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber == null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] === null) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:466:21
-           var lines = e.stack.split("\n");
+           var lines = e.stack.slice("\n");

[Survived] PrecomputedMutator
q.js:466:21
-           var lines = e.stack.split("\n");
+           var lines = e.stack.substring("\n");

[Survived] PrecomputedMutator
q.js:466:21
-           var lines = e.stack.split("\n");
+           var lines = e.stack.replace("\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\\n");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].lastIndexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[lines.length - 1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("&") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, "foo");

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, {});

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === 0) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[1] + 1);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(null);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(false, args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.slice(1)) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.source);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(fulfill(resolvedPromise));

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === undefined) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === 'foo') {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isObject(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isFunction(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isString(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearer(reject(reason)))) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(fulfill(reason))) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (!resolvedPromise || !promise) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise && promise) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport ? hasStacks : !hasStacks) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.length(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 2);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.replace("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\r") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n\n") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(reject(new Error("invalid promise")), message);

[Survived] PrecomputedMutator
q.js:634:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise && resolvedPromise.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise && resolvedPromise.isPending()) {

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           deferred.reject(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           deferred.notify(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           deferred.promise(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill());

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(0));

[Survived] PrecomputedMutator
q.js:653:16
-           become(reject(reason));
+           become(Q.reject(reason));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.valueOf()) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.state) {

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress - 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress * 2);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (!error) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.message) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length % 2 === 0) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, "foo"));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(null));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 1), 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 0, 1), 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, -1));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve("error");

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "object") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver.constructor !== Function) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.notify();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.resolve, deferred.notify, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, undefined, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify());

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(undefined));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(null));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.fulfill(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("reason");

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * y).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(!y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.reject([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.resolve([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.all([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x > y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i >= len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i *= 2) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               1 + 1(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               "Q"(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] + 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] - 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] * 2).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, Q.reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, function () {});

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === function () {}) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === undefined) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(0, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.then);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.resolve);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.reject);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.apply(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.bind(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.toString(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, 1 + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "hello", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, function () {}, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, undefined);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, "foo");

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = resolve(exception);

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = deferred.reject(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("PLACEHOLDER"));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.valueOf) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.inspect) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.promiseDispatch) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled" || inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "rejected" || inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.inspect);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.valueOf);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? null(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? undefined(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed("foo") : value;

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done === true) {

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && !done) {

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (!done && done) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(0);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(e)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror.call(this, e)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror.apply(this, e)) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(true);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(false);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === true) {

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(0);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.then(function () {
+     return value;
+   })).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.then(function () {
+     throw value;
+   })).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.then(function () {
+     return Q(value);
+   })).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback(undefined));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback(null, value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(0);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.call(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.bind(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.apply(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(value + 1);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(value * 2);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(value - 1);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, progressed, rejected);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(progressed, rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function (value) {
+     return value;
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value + "foo";
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value.toUpperCase();
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(0);

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return null(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return undefined(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:12
-       return this.then(function () { throw reason; });
+       return false(function () { throw reason; });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason.message;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.reject(reason);

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.resolve(reason);

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.when(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(new Error("test")).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value.length)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value.toUpperCase())) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isPromise(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPending(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().value) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "pending") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object.inspect + 1().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.then().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.catch().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.finally().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isFulfilled(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.value) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.toString()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.length) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromise(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPending(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "pending") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.inspect.state === "rejected"().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections !== false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise) && unhandledReasons.includes(reason)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return reason;
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.catch(function () {
+     return reason;
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return;
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "Error", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + 1, reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "rejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.name, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, undefined);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, 0);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(reason);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledReasons.push(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       reportedUnhandledRejections.push(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(0);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack === "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack !== "string") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack !== "number") {

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.pop(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.shift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason + ".stack");

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack + "foo");

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.toUpperCase());

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.pop("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.shift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.unshift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === true) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(reportedUnhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections[0], promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.indexOf(promise) !== -1, promise);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, undefined);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, 0);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < -1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections[0], promise);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledRejections);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections[0], promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.then());

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.catch());

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -2) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === 0) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections.length, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 3);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 4);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, unhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.shift(at, 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.pop(at, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, array_indexOf(unhandledRejections, promise));

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && true) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || false) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(promise, reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(reject, reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "some random string");

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name !== null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (typeof name === "undefined") {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(this);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args[0]);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(42, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args + 1);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args[0]);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.length);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].call(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value + 1, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat([]));

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(void 0);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply("thisp, args");

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, 42);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.length);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.entries(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys("undefined");

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.progress);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(reject(new Error("This is a different bug.")));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, args, op);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[1]);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, []);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.resolve(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Promise.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(Q.reject("error message")).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.race().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.any().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.none().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(123);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.reject(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.notify(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.all(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 1, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === undefined) {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "object") {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg - 1);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg * 2);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return resolve(exception);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.fail) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.reject) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.catch) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.error);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(null);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value.all(callback, errback));

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, undefined, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, reject);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, resolve);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, Q.reject);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](1);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(Q(exception.value))) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(Q.resolve(exception.value))) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (!isStopIteration(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(isStopIteration(exception))) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(isStopIteration(exception.value.message))) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(undefined);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return resolve(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.toString());

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, errback, callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.promise, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.then(function (value) {
+     return value;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, resolve);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, deferred.reject);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(42);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null, "throw"));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(undefined, "throw"));

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(null, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "undefined");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(function () {}, "throw"));

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "next"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "reject");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "resolve");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return Q.resolve();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.then(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(null))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(null))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(null))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(undefined)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(undefined);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply({});

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply({}, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, [args]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice());

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat());

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.all(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + "1", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, [args]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.length);

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolveWith, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, [args]);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(1));

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.reject(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return undefined(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.defer(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object.undefinedProperty).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object.toString()).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object[Symbol.iterator]()).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key.toUpperCase()]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + "foo"]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", ["key"]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key + 1, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key + 1, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q['return'](object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q({
+     key: undefined
+   }).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, undefined]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.promiseDispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, undefined]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, ""]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(0).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, "value"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, void 0]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return null("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.promiseDispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, null]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(2)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.defer(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("call", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(array_slice(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.concat(array_slice(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post" + "get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post" * 2, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(0, -1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object.foo).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object.bar).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object.baz).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([arguments[0], arguments[2]])]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(void 0, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice("foo", 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("patch", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 0, 1))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments.length)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("applyAll", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args[0]]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [this, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("map", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 1, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.concat(1)]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.reject(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.resolve(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q({}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("applyAll", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [this, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1), void 0]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([].slice.call(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.slice(1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("test", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [null, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [undefined, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments[0])]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments.length)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments.slice(1))]);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = Q + 1(object);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q("foo");

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args, 0);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args, void 0);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, void 0);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args + args(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, -1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 2))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(args.concat(array_slice(arguments))))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(args.concat(array_slice(promises))))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(args.concat(array_slice(deferred))))

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = array_reverse(arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = array_concat(arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = array_filter(arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(this.arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               args + args(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, -1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments).reverse())

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice("foo"))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["foo"]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.resolve(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.length).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.valueOf()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.toString()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", ["foo"]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [void 0]);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("pop", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3].length);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3].slice(0, 2));

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = deferred.resolve();

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = deferred.notify();

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   !isPromise(promise)

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     throw new Error("something went wrong");
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return Q.reject("something went wrong");
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return Q.defer().resolve("something went wrong");
+   })) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount >= promises.length) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress * 2
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress + 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress - 1
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount !== 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               Q.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises[0]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.concat(Q.reject("error")));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allResolved(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Q.reject("Error"));

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Q.resolve("Success"));

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Q.delay(1000).then(() => Q.reject("Error")));

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length >= 2) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Promise.reject();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onProgress, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(null, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(Q.reject(promise), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(Promise.resolve(promise), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.cancel(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(false);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < promises.length) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(Q.reject());

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return some(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.dispatch("keys", []));

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.dispatch("keys", [1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.dispatch("keys", [promises]));

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allRejected");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "anySettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer());

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reverse(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat(), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer());

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise + 1, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function (value) {
+     return value + 1;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(Q.reject(promise), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function noop() {
+     throw new Error("Something went wrong");
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function noop() {
+     return "Hello, world!";
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function noop() {
+     return Q.reject("Something went wrong");
+   }, noop);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(0);

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.reject(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.resolve(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Promise.reject(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.reverse()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.sort()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = null(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = undefined(promise);

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = 0(promise);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (result) {
+     return result + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (result) {
+     return result * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (result) {
+     return result - 1;
+   }));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(promise.inspect());

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.catch(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.resolve(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.reject(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.reject(), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.resolve(), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.notify(), regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, void 0);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, rejected, void 0);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject("error")).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(() => {}, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     throw err;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     return err;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     return Q.reject(err);
+   });

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(true, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(false, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then({}, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected(new Error("Custom error message")));

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function () {}, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(0).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then({}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, NaN, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, () => {});

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(progressed, null, null);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, () => {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, promise);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, this);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, Q.resolve(promise));

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(0)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.apply());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.call());

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback === null) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback !== void 0) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = 1(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q + 1(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fail());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.then(function () {
+     throw new Error("Test error");
+   }));

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.then(function () {
+     return Q.reject(new Error("Test error"));
+   }));

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress + 1);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(0).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progress, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, reason, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, resolved, value, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, resolved(value), progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, () => {});

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, Q);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(promise, error);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, error);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error.message, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.onerror.apply(null, arguments)) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.onerror.apply(this, arguments)) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.onerror.call(null, arguments)) {

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(error.message);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(new Error());

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progressed) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progress.then()) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, Q.progress()) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, resolved, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, new Error(), progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, void 0, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, 0) :

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(timeout, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error());

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q("foo").timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1000, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms - 1000, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error());

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && error instanceof Error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error && error.message === "Timed out after 1000 ms") {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           undefined(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error());

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearImmediate(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(timeoutId + 1);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(timeoutId - 1);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           Q.reject(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(Promise.reject(new Error("Oops!")));

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           undefined(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== null) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.reject(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.resolve(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.defer(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(42).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(undefined);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               undefined(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(NaN);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(() => {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs[0] = null(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver.bind(deferred));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver.call(deferred));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver.apply(deferred));

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply({}).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 0, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, void 0);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(() => {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().then(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fail(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.then(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.catch(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.splice(0, 0, null)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject("error"));

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== "undefined") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).reverse());

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).slice(1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).concat(["foo"]));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           resolve(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           reject(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(() => {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.shift()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice({});

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nfapply(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nfcall(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.nbind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(1, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args[0]);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(args, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice.length(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice.length(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver.call(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver.bind(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver.apply(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp.arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp[arguments]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp[arguments[0]]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           1 + 1(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           "Q"(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           undefined(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift({});

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(Q);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(false, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.denodeify(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nfbind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(1, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat(array_slice(arguments)));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.map(function (arg) {
+     return arg + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, [args]);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args[0]);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.pop());

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.reject(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.deferred(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.when(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(null, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("not-a-function", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(function () {}, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args[0]);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.length);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args || [1]);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args || [null]);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args || ["hello"]);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.post("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.concat([1])]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(1, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice("test", 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(function () {
+     return 1;
+   }, 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver("foo"));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(42));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined());

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("call", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       null(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       undefined(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("set", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.throw);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments.length - 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(1, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice("hello", 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => {});

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("makeNodeResolver", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("pre", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("set", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return object.nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(0).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(undefined);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(null);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(() => {});

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback(error, null)) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback(null, value)) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback(error, value)) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(false, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 0);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(0);

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.resolve();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.reject();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.all();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.then("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.catch("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.finally("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail.head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + "head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" - "head");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(error.message);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(new Error("Different error message"));

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(ends.reject(error));

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(ends.resolve(Q.reject(error)));

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(ends.resolve(Q.resolve(error)));

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.19 |      141 |        86 |       1801 |        0 |        0 |
 q.js     |   11.32 |      141 |        86 |       1779 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         22 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m22:10:29 (3041) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m22:10:29 (3041) INFO MutationTestExecutor[39m Done in 232 minutes 26 seconds.

real	232m27.692s
user	41m5.693s
sys	7m5.076s
