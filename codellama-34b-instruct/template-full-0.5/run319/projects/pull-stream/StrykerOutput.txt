*** using precomputed mutations ***
[32m12:29:45 (2690) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m12:29:45 (2690) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m12:29:45 (2690) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m12:29:45 (2690) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m12:29:45 (2690) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m12:29:47 (2690) INFO ProjectReader[39m Found 31 of 1504 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 784 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in sinks) exports[k] = sources[k];
Mutant 1 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in throughs) exports[k] = sources[k];
Mutant 2 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in sources.keys()) exports[k] = sources[k];
Mutant 3 in index.js: sources replaced with sinks
Mutant 4 in index.js: sources replaced with throughs
Mutant 5 in index.js: sources replaced with exports
Mutant 6 in index.js: for (var k in throughs) exports[k] = throughs[k]; replaced with for (var k in throughs.keys()) exports[k] = throughs[k];
Mutant 7 in index.js: for (var k in throughs) exports[k] = throughs[k]; replaced with for (var k in sinks) exports[k] = throughs[k];
Mutant 8 in index.js: for (var k in throughs) exports[k] = throughs[k]; replaced with for (var k in sources) exports[k] = throughs[k];
Mutant 9 in index.js: throughs replaced with throughs.reverse()
Mutant 10 in index.js: throughs replaced with throughs.slice()
Mutant 11 in index.js: throughs replaced with throughs.concat(throughs)
Mutant 12 in index.js: for (var k in sinks) exports[k] = sinks[k]; replaced with for (var k in throughs) exports[k] = sinks[k];
Mutant 13 in index.js: for (var k in sinks) exports[k] = sinks[k]; replaced with for (var k in sources) exports[k] = sinks[k];
Mutant 14 in index.js: for (var k in sinks) exports[k] = sinks[k]; replaced with for (var k in exports) exports[k] = sinks[k];
Mutant 15 in index.js: sinks replaced with sources
Mutant 16 in index.js: sinks replaced with throughs
Mutant 17 in index.js: sinks replaced with {}
Mutant 18 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'function' && a.length > 1
Mutant 19 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'function' && a.length === 0
Mutant 20 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'function' && a.length % 2 === 0
Mutant 21 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = 1; i < length; i++) args[i] = arguments[i];
Mutant 22 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = length - 1; i < length; i++) args[i] = arguments[i];
Mutant 23 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = Math.floor(length / 2); i < length; i++) args[i] = arguments[i];
Mutant 24 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = 1; i <= length; i++) args[i] = arguments[i];
Mutant 25 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = 0; i < length - 1; i++) args[i] = arguments[i];
Mutant 26 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = 0; i < length / 2; i++) args[i] = arguments[i];
Mutant 27 in pull.js: i < length replaced with i <= length
Mutant 28 in pull.js: i < length replaced with i > length
Mutant 29 in pull.js: i < length replaced with i += length
Mutant 30 in pull.js: i++ replaced with i += 2
Mutant 31 in pull.js: i++ replaced with i--
Mutant 32 in pull.js: i++ replaced with i *= 2
Mutant 33 in pull.js: args == null replaced with args != null
Mutant 34 in pull.js: args == null replaced with args.length > 0
Mutant 35 in pull.js: args == null replaced with read == null
Mutant 36 in pull.js: length replaced with length - 1
Mutant 37 in pull.js: length replaced with length + 1
Mutant 38 in pull.js: length replaced with length * 2
Mutant 39 in pull.js: pull(read, ref[0]) replaced with pull(read, ref[1])
Mutant 40 in pull.js: pull(read, ref[0]) replaced with pull(read, ref[0], ref[1])
Mutant 41 in pull.js: pull(read, ref[0]) replaced with pull(read, ref[0], ref[1], ref[2])
Mutant 42 in pull.js: read replaced with read + 1
Mutant 43 in pull.js: read replaced with read - 1
Mutant 44 in pull.js: read replaced with read * 2
Mutant 45 in pull.js: ref[0] replaced with ref[1]
Mutant 46 in pull.js: ref[0] replaced with ref[2]
Mutant 47 in pull.js: ref[0] replaced with ref[3]
Mutant 48 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[1], ref[0])
Mutant 49 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], ref[1], ref[2])
Mutant 50 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], ref[1], ref[3])
Mutant 51 in pull.js: read replaced with read + 1
Mutant 52 in pull.js: read replaced with read - 1
Mutant 53 in pull.js: read replaced with read * 2
Mutant 54 in pull.js: ref[0] replaced with ref[1]
Mutant 55 in pull.js: ref[0] replaced with ref[0] + 1
Mutant 56 in pull.js: ref[0] replaced with ref[0] * 2
Mutant 57 in pull.js: ref[1] replaced with ref[0]
Mutant 58 in pull.js: ref[1] replaced with ref[2]
Mutant 59 in pull.js: ref[1] replaced with ref[3]
Mutant 60 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], ref[3])
Mutant 61 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], ref[2], ref[3])
Mutant 62 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], ref[2] + ref[3])
Mutant 63 in pull.js: read replaced with read + 1
Mutant 64 in pull.js: read replaced with read * 2
Mutant 65 in pull.js: read replaced with read.slice(1)
Mutant 66 in pull.js: ref[0] replaced with ref[1]
Mutant 67 in pull.js: ref[0] replaced with ref[length - 1]
Mutant 68 in pull.js: ref[0] replaced with ref.pop()
Mutant 69 in pull.js: ref[1] replaced with ref[0]
Mutant 70 in pull.js: ref[1] replaced with ref[2]
Mutant 71 in pull.js: ref[1] replaced with ref[length - 1]
Mutant 72 in pull.js: ref[2] replaced with ref[3]
Mutant 73 in pull.js: ref[2] replaced with ref[1]
Mutant 74 in pull.js: ref[2] replaced with ref[0]
Mutant 75 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(read, ref[0], ref[1], ref[2], ref[3] + 1)
Mutant 76 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(read, ref[0], ref[1], ref[2], ref[3] * 2)
Mutant 77 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(read, ref[0], ref[1], ref[2], ref[3] - 1)
Mutant 78 in pull.js: read replaced with read + 1
Mutant 79 in pull.js: read replaced with read.toString()
Mutant 80 in pull.js: read replaced with read.call(null, read)
Mutant 81 in pull.js: ref[0] replaced with ref[1]
Mutant 82 in pull.js: ref[0] replaced with ref[i]
Mutant 83 in pull.js: ref[0] replaced with ref[length - 1]
Mutant 84 in pull.js: ref[1] replaced with ref[2]
Mutant 85 in pull.js: ref[1] replaced with ref[1] + 1
Mutant 86 in pull.js: ref[1] replaced with ref[1] * 2
Mutant 87 in pull.js: ref[2] replaced with ref[3]
Mutant 88 in pull.js: ref[2] replaced with ref.length
Mutant 89 in pull.js: ref[2] replaced with null
Mutant 90 in pull.js: ref[3] replaced with ref[0]
Mutant 91 in pull.js: ref[3] replaced with ref[length - 1]
Mutant 92 in pull.js: ref[3] replaced with ref[Math.floor(Math.random() * ref.length)]
Mutant 93 in pull.js: ref.unshift replaced with ref.pop
Mutant 94 in pull.js: ref.unshift replaced with ref.shift
Mutant 95 in pull.js: read replaced with read + 1
Mutant 96 in pull.js: read replaced with read * 2
Mutant 97 in pull.js: read replaced with read - 1
Mutant 98 in pull.js: pull.apply(null, ref) replaced with pull.apply(undefined, ref)
Mutant 99 in pull.js: pull.apply(null, ref) replaced with pull.apply(ref, null)
Mutant 100 in pull.js: pull.apply replaced with pull.call
Mutant 101 in pull.js: pull.apply replaced with pull.bind
Mutant 102 in pull.js: pull.apply replaced with pull.curry
Mutant 103 in pull.js: null replaced with undefined
Mutant 104 in pull.js: null replaced with {}
Mutant 105 in pull.js: ref replaced with ref.slice()
Mutant 106 in pull.js: ref replaced with ref.splice(0, 1)
Mutant 107 in pull.js: ref replaced with ref.concat([])
Mutant 108 in pull.js: read && typeof read.source === 'function' replaced with read && typeof read.source === 'object'
Mutant 109 in pull.js: read && typeof read.source === 'function' replaced with read && typeof read.source !== 'function'
Mutant 110 in pull.js: read && typeof read.source === 'function' replaced with read && typeof read.source === 'undefined'
Mutant 111 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = 0; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 112 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = length - 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 113 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = Math.floor(Math.random() * length); i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 114 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = length - 1; i >= 0; i--) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 115 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = 1; i <= length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 116 in pull.js: i < length replaced with i <= length
Mutant 117 in pull.js: i < length replaced with i >= length
Mutant 118 in pull.js: i < length replaced with i == length
Mutant 119 in pull.js: i++ replaced with i = i + 2
Mutant 120 in pull.js: i++ replaced with i -= 1
Mutant 121 in pull.js: i++ replaced with i *= 2
Mutant 122 in pull.js: typeof s === 'function' replaced with s === 'function'
Mutant 123 in pull.js: typeof s === 'function' replaced with typeof s !== 'function'
Mutant 124 in pull.js: typeof s === 'function' replaced with s instanceof Function
Mutant 125 in pull.js: s replaced with s + 1
Mutant 126 in pull.js: s replaced with s.length
Mutant 127 in pull.js: read replaced with read + 1
Mutant 128 in pull.js: read replaced with read - 1
Mutant 129 in pull.js: read replaced with read * 2
Mutant 130 in pull.js: s && typeof s === 'object' replaced with s != null
Mutant 131 in pull.js: s && typeof s === 'object' replaced with s !== null
Mutant 132 in pull.js: s && typeof s === 'object' replaced with typeof s === 'object' && s !== null
Mutant 133 in pull.js: s.sink replaced with s.source
Mutant 134 in pull.js: read replaced with read + 1
Mutant 135 in pull.js: read replaced with read - 1
Mutant 136 in pull.js: read replaced with read * 2
Mutant 137 in collect.js: arr.push replaced with arr.pop
Mutant 138 in collect.js: arr.push replaced with arr.shift
Mutant 139 in collect.js: arr.push replaced with arr.unshift
Mutant 140 in collect.js: item replaced with null
Mutant 141 in collect.js: item replaced with undefined
Mutant 142 in collect.js: item replaced with arr.push(item + 1)
Mutant 143 in drain.js: !done replaced with !done()
Mutant 144 in drain.js: !done replaced with done === false
Mutant 145 in drain.js: !done replaced with done !== true
Mutant 146 in drain.js: abort replaced with !abort
Mutant 147 in drain.js: abort replaced with abort === true
Mutant 148 in drain.js: abort replaced with abort ? true : false
Mutant 149 in drain.js: loop replaced with !loop
Mutant 150 in drain.js: loop replaced with loop + 1
Mutant 151 in drain.js: loop replaced with loop - 1
Mutant 152 in drain.js: end = end || abort replaced with end = abort
Mutant 153 in drain.js: end = end || abort replaced with end = !abort
Mutant 154 in drain.js: end = end || abort replaced with end = null
Mutant 155 in drain.js: done replaced with !done
Mutant 156 in drain.js: done replaced with done && false
Mutant 157 in drain.js: done replaced with done || true
Mutant 158 in drain.js: end === true ? null : end replaced with end === false ? null : end
Mutant 159 in drain.js: end === true ? null : end replaced with end === true ? end : null
Mutant 160 in drain.js: end && end !== true replaced with end || end !== true
Mutant 161 in drain.js: end && end !== true replaced with end && end !== false
Mutant 162 in drain.js: end && end !== true replaced with end && end !== null
Mutant 163 in drain.js: console.warn replaced with console.error
Mutant 164 in drain.js: console.warn replaced with console.log
Mutant 165 in drain.js: console.warn replaced with console.info
Mutant 166 in drain.js: doneLackingErr replaced with doneLackingErr.message
Mutant 167 in drain.js: doneLackingErr replaced with doneLackingErr.stack
Mutant 168 in drain.js: op && false === op(data) || abort replaced with op && false === op(data) || !abort
Mutant 169 in drain.js: op && false === op(data) || abort replaced with op && false === op(data) || !op
Mutant 170 in drain.js: op replaced with op + 1
Mutant 171 in drain.js: op replaced with op * 2
Mutant 172 in drain.js: data replaced with null
Mutant 173 in drain.js: data replaced with undefined
Mutant 174 in drain.js: data replaced with NaN
Mutant 175 in drain.js: read(abort || true, done || function () {}) replaced with read(abort || false, done || function () {})
Mutant 176 in drain.js: abort || true replaced with abort && true
Mutant 177 in drain.js: abort || true replaced with !abort
Mutant 178 in drain.js: abort || true replaced with abort == true
Mutant 179 in drain.js: done || function () {} replaced with done && function () {}
Mutant 180 in drain.js: done || function () {} replaced with done || function (err) {
  throw err;
}
Mutant 181 in drain.js: !loop replaced with loop
Mutant 182 in drain.js: !loop replaced with !cbed
Mutant 183 in drain.js: !loop replaced with !read
Mutant 184 in drain.js: !cbed replaced with cbed
Mutant 185 in drain.js: !cbed replaced with cbed && false
Mutant 186 in drain.js: !cbed replaced with !cbed || true
Mutant 187 in drain.js: 'function' == typeof err replaced with err instanceof Function
Mutant 188 in drain.js: 'function' == typeof err replaced with err.constructor === Function
Mutant 189 in drain.js: 'function' == typeof err replaced with typeof err === 'function'
Mutant 190 in drain.js: read replaced with read(abort || true, cb || function () {})
Mutant 191 in drain.js: read replaced with read(abort || false, cb || function () {})
Mutant 192 in drain.js: read replaced with read(abort || true, done || function () {})
Mutant 193 in drain.js: read(abort, cb || function () {}) replaced with read(abort, function () {})
Mutant 194 in drain.js: abort replaced with null
Mutant 195 in drain.js: abort replaced with undefined
Mutant 196 in drain.js: abort replaced with true
Mutant 197 in drain.js: cb || function () {} replaced with cb || function (err) {
  throw err;
}
Mutant 198 in drain.js: cb || function () {} replaced with cb || function (err) {
  console.log(err);
}
Mutant 199 in drain.js: cb || function () {} replaced with cb || function (err) {
  return err;
}
Mutant 200 in find.js: !cb replaced with !test
Mutant 201 in find.js: !cb replaced with cb && test
Mutant 202 in find.js: !cb replaced with test && cb
Mutant 203 in find.js: prop replaced with prop.foo
Mutant 204 in find.js: prop replaced with prop['bar']
Mutant 205 in find.js: test replaced with test && false
Mutant 206 in find.js: test replaced with test || true
Mutant 207 in find.js: test replaced with test !== test
Mutant 208 in find.js: test(data) replaced with test(null)
Mutant 209 in find.js: test(data) replaced with test(undefined)
Mutant 210 in find.js: test(data) replaced with test(data + 1)
Mutant 211 in find.js: test replaced with !test
Mutant 212 in find.js: test replaced with test && false
Mutant 213 in find.js: test replaced with test || true
Mutant 214 in find.js: data replaced with "test"
Mutant 215 in find.js: data replaced with data.length
Mutant 216 in find.js: cb(null, data) replaced with cb(undefined, data)
Mutant 217 in find.js: cb(null, data) replaced with cb(null, null)
Mutant 218 in find.js: cb(null, data) replaced with cb(data, null)
Mutant 219 in find.js: null replaced with undefined
Mutant 220 in find.js: null replaced with true
Mutant 221 in find.js: null replaced with 'hello'
Mutant 222 in find.js: data replaced with null
Mutant 223 in find.js: data replaced with undefined
Mutant 224 in find.js: data replaced with 0
Mutant 225 in find.js: ended replaced with !ended
Mutant 226 in find.js: ended replaced with ended === true
Mutant 227 in find.js: cb(err === true ? null : err, null) replaced with cb(err !== true ? null : err, null)
Mutant 228 in find.js: cb(err === true ? null : err, null) replaced with cb(err ? null : err, null)
Mutant 229 in find.js: cb(err === true ? null : err, null) replaced with cb(err ? err : null, null)
Mutant 230 in find.js: err === true ? null : err replaced with err === false ? null : err
Mutant 231 in find.js: err === true ? null : err replaced with err ? null : err
Mutant 232 in find.js: null replaced with undefined
Mutant 233 in find.js: null replaced with false
Mutant 234 in find.js: null replaced with NaN
Mutant 235 in log.js: console.log replaced with console.error
Mutant 236 in log.js: data replaced with data + 1
Mutant 237 in log.js: data replaced with data[0]
Mutant 238 in log.js: data replaced with data.length
Mutant 239 in on-end.js: drain(null, done) replaced with drain(undefined, done)
Mutant 240 in on-end.js: drain(null, done) replaced with drain(null, null)
Mutant 241 in on-end.js: null replaced with undefined
Mutant 242 in on-end.js: null replaced with ''
Mutant 243 in on-end.js: null replaced with false
Mutant 244 in on-end.js: done replaced with undefined
Mutant 245 in on-end.js: done replaced with null
Mutant 246 in on-end.js: done replaced with () => {}
Mutant 247 in reduce.js: !cb replaced with cb === null
Mutant 248 in reduce.js: !cb replaced with acc === null
Mutant 249 in reduce.js: !cb replaced with sink === null
Mutant 250 in reduce.js: reducer(acc, data) replaced with reducer(acc + data)
Mutant 251 in reduce.js: reducer(acc, data) replaced with reducer(acc * data)
Mutant 252 in reduce.js: reducer(acc, data) replaced with reducer(acc - data)
Mutant 253 in reduce.js: acc replaced with null
Mutant 254 in reduce.js: acc replaced with undefined
Mutant 255 in reduce.js: acc replaced with acc + data
Mutant 256 in reduce.js: data replaced with null
Mutant 257 in reduce.js: data replaced with undefined
Mutant 258 in reduce.js: data replaced with "data"
Mutant 259 in reduce.js: cb(err, acc) replaced with cb(null, acc)
Mutant 260 in reduce.js: cb(err, acc) replaced with cb(err, null)
Mutant 261 in reduce.js: cb(err, acc) replaced with cb(acc, err)
Mutant 262 in reduce.js: err replaced with null
Mutant 263 in reduce.js: err replaced with undefined
Mutant 264 in reduce.js: err replaced with 0
Mutant 265 in reduce.js: acc replaced with null
Mutant 266 in reduce.js: acc replaced with undefined
Mutant 267 in reduce.js: acc replaced with 0
Mutant 268 in reduce.js: arguments.length === 2 replaced with arguments.length < 2
Mutant 269 in reduce.js: arguments.length === 2 replaced with arguments.length > 2
Mutant 270 in reduce.js: arguments.length === 2 replaced with arguments.length === 1
Mutant 271 in reduce.js: end replaced with end !== true
Mutant 272 in reduce.js: end replaced with acc = null
Mutant 273 in reduce.js: end replaced with sink(source)
Mutant 274 in reduce.js: cb replaced with null
Mutant 275 in reduce.js: cb replaced with undefined
Mutant 276 in reduce.js: cb replaced with true
Mutant 277 in reduce.js: end === true ? null : end replaced with end !== true ? null : end
Mutant 278 in reduce.js: end === true ? null : end replaced with end ? null : end
Mutant 279 in reduce.js: end === true ? null : end replaced with !end ? null : end
Mutant 280 in reduce.js: source replaced with null
Mutant 281 in reduce.js: source replaced with undefined
Mutant 282 in reduce.js: source replaced with {}
Mutant 283 in count.js: end replaced with end + 1
Mutant 284 in count.js: end replaced with !end
Mutant 285 in count.js: end replaced with end && cb(end)
Mutant 286 in count.js: end replaced with end + 1
Mutant 287 in count.js: end replaced with end - 1
Mutant 288 in count.js: end replaced with null
Mutant 289 in count.js: cb replaced with !cb
Mutant 290 in count.js: cb replaced with null
Mutant 291 in count.js: cb replaced with undefined
Mutant 292 in count.js: true replaced with false
Mutant 293 in count.js: true replaced with i < max
Mutant 294 in count.js: true replaced with i >= max
Mutant 295 in count.js: cb(null, i++) replaced with cb(undefined, i++)
Mutant 296 in count.js: cb(null, i++) replaced with cb(NaN, i++)
Mutant 297 in count.js: cb(null, i++) replaced with cb(0, i++)
Mutant 298 in count.js: null replaced with undefined
Mutant 299 in count.js: null replaced with NaN
Mutant 300 in count.js: null replaced with Infinity
Mutant 301 in count.js: i++ replaced with i--
Mutant 302 in count.js: i++ replaced with max++
Mutant 303 in count.js: i++ replaced with i = 0
Mutant 304 in empty.js: cb replaced with !cb
Mutant 305 in empty.js: true replaced with false
Mutant 306 in empty.js: true replaced with null
Mutant 307 in empty.js: true replaced with undefined
Mutant 308 in error.js: err replaced with null
Mutant 309 in error.js: err replaced with undefined
Mutant 310 in error.js: err replaced with new Error('some error message')
Mutant 311 in infinite.js: cb(null, generate()) replaced with cb(undefined, generate())
Mutant 312 in infinite.js: cb(null, generate()) replaced with cb(null, generate() + 1)
Mutant 313 in infinite.js: cb(null, generate()) replaced with cb(null, generate() * 2)
Mutant 314 in infinite.js: null replaced with undefined
Mutant 315 in infinite.js: null replaced with NaN
Mutant 316 in infinite.js: null replaced with {}
Mutant 317 in infinite.js: generate() replaced with generate() + 1
Mutant 318 in infinite.js: generate() replaced with generate(1)
Mutant 319 in infinite.js: generate() replaced with generate(end)
Mutant 320 in infinite.js: generate replaced with generate + 1
Mutant 321 in infinite.js: generate replaced with generate - 1
Mutant 322 in keys.js: object replaced with object.keys()
Mutant 323 in keys.js: object replaced with Object.values(object)
Mutant 324 in keys.js: object replaced with Object.entries(object)
Mutant 325 in once.js: abort replaced with abort !== null
Mutant 326 in once.js: abort replaced with abort == null
Mutant 327 in once.js: abort replaced with abort.toString() === 'null'
Mutant 328 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb(null, abort))
Mutant 329 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb(true, abort))
Mutant 330 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(onAbort(abort))
Mutant 331 in once.js: cb replaced with cb(null, null)
Mutant 332 in once.js: cb replaced with cb(true, null)
Mutant 333 in once.js: cb replaced with cb(false, null)
Mutant 334 in once.js: abort replaced with !abort
Mutant 335 in once.js: abort replaced with abort + 1
Mutant 336 in once.js: abort replaced with abort - 1
Mutant 337 in once.js: onAbort replaced with onAbort()
Mutant 338 in once.js: onAbort replaced with null
Mutant 339 in once.js: onAbort replaced with undefined
Mutant 340 in once.js: value != null replaced with value === null
Mutant 341 in once.js: value != null replaced with value == undefined
Mutant 342 in once.js: value != null replaced with !value
Mutant 343 in once.js: cb(null, _value) replaced with cb(undefined, _value)
Mutant 344 in once.js: cb(null, _value) replaced with cb(null, _value + 1)
Mutant 345 in once.js: cb(null, _value) replaced with cb(null, _value * 2)
Mutant 346 in once.js: cb replaced with _value
Mutant 347 in once.js: cb replaced with _value == null
Mutant 348 in once.js: null replaced with undefined
Mutant 349 in once.js: null replaced with true
Mutant 350 in once.js: null replaced with 0
Mutant 351 in once.js: _value replaced with _value + 1
Mutant 352 in once.js: _value replaced with _value - 1
Mutant 353 in once.js: _value replaced with _value * 2
Mutant 354 in once.js: true replaced with false
Mutant 355 in once.js: true replaced with null
Mutant 356 in once.js: true replaced with undefined
Mutant 357 in values.js: !array replaced with array.length === 0
Mutant 358 in values.js: !array replaced with array.length > 0
Mutant 359 in values.js: !array replaced with array.length === 1
Mutant 360 in values.js: abort replaced with !abort
Mutant 361 in values.js: abort replaced with abort || true
Mutant 362 in values.js: abort replaced with abort !== true
Mutant 363 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, onAbort(cb, abort))
Mutant 364 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, onAbort(abort, cb))
Mutant 365 in values.js: abortCb replaced with null
Mutant 366 in values.js: abortCb replaced with undefined
Mutant 367 in values.js: cb replaced with null
Mutant 368 in values.js: cb replaced with undefined
Mutant 369 in values.js: cb replaced with {}
Mutant 370 in values.js: abort replaced with abortCb(cb, null, onAbort)
Mutant 371 in values.js: abort replaced with abortCb(cb, abort, onAbort)
Mutant 372 in values.js: abort replaced with abortCb(cb, i, onAbort)
Mutant 373 in values.js: onAbort replaced with onAbort(abort, cb)
Mutant 374 in values.js: true replaced with false
Mutant 375 in values.js: true replaced with i > array.length
Mutant 376 in values.js: true replaced with array[i] === undefined
Mutant 377 in values.js: !Array.isArray(array) replaced with Array.isArray(array)
Mutant 378 in values.js: !Array.isArray(array) replaced with array.length === 0
Mutant 379 in values.js: !Array.isArray(array) replaced with !array.length
Mutant 380 in values.js: array replaced with array[0]
Mutant 381 in values.js: array replaced with array.slice(1)
Mutant 382 in values.js: array replaced with array.length
Mutant 383 in values.js: array replaced with array[0]
Mutant 384 in values.js: array replaced with array.slice(1)
Mutant 385 in values.js: abort replaced with abort !== true
Mutant 386 in values.js: abort replaced with abort !== false
Mutant 387 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(abort, cb, onAbort)
Mutant 388 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, onAbort + 1)
Mutant 389 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, onAbort * 2)
Mutant 390 in values.js: cb replaced with abort
Mutant 391 in values.js: cb replaced with null
Mutant 392 in values.js: cb replaced with undefined
Mutant 393 in values.js: abort replaced with abort || false
Mutant 394 in values.js: abort replaced with !abort
Mutant 395 in values.js: abort replaced with abort && true
Mutant 396 in values.js: onAbort replaced with onAbort()
Mutant 397 in values.js: onAbort replaced with onAbort.call(null)
Mutant 398 in values.js: onAbort replaced with onAbort.bind(null)
Mutant 399 in values.js: i >= array.length replaced with i <= array.length
Mutant 400 in values.js: i >= array.length replaced with i < array.length - 1
Mutant 401 in values.js: i >= array.length replaced with i >= 0
Mutant 402 in values.js: true replaced with false
Mutant 403 in values.js: true replaced with null
Mutant 404 in values.js: true replaced with undefined
Mutant 405 in values.js: cb(null, array[i++]) replaced with cb(undefined, array[i++])
Mutant 406 in values.js: cb(null, array[i++]) replaced with cb(null, array[i--])
Mutant 407 in values.js: cb(null, array[i++]) replaced with cb(array[i], array[i++])
Mutant 408 in values.js: null replaced with undefined
Mutant 409 in values.js: null replaced with array[i]
Mutant 410 in values.js: null replaced with array[i++]
Mutant 411 in values.js: array[i++] replaced with array[i--]
Mutant 412 in values.js: array[i++] replaced with array[i + 1]
Mutant 413 in values.js: array[i++] replaced with array[i * 2]
Mutant 414 in async-map.js: !map replaced with map === null
Mutant 415 in async-map.js: !map replaced with map !== map
Mutant 416 in async-map.js: !map replaced with map.length === 0
Mutant 417 in async-map.js: prop replaced with !prop
Mutant 418 in async-map.js: prop replaced with prop + 1
Mutant 419 in async-map.js: prop replaced with prop - 1
Mutant 420 in async-map.js: map replaced with map + 1
Mutant 421 in async-map.js: map replaced with map - 1
Mutant 422 in async-map.js: map replaced with map * 2
Mutant 423 in async-map.js: aborted replaced with !aborted
Mutant 424 in async-map.js: aborted replaced with aborted && !busy
Mutant 425 in async-map.js: aborted replaced with aborted || busy
Mutant 426 in async-map.js: cb replaced with null
Mutant 427 in async-map.js: cb replaced with undefined
Mutant 428 in async-map.js: cb replaced with 0
Mutant 429 in async-map.js: aborted replaced with null
Mutant 430 in async-map.js: aborted replaced with undefined
Mutant 431 in async-map.js: aborted replaced with false
Mutant 432 in async-map.js: abort replaced with !abort
Mutant 433 in async-map.js: abort replaced with abort && true
Mutant 434 in async-map.js: abort replaced with abort || false
Mutant 435 in async-map.js: !busy replaced with busy
Mutant 436 in async-map.js: !busy replaced with !busy && !aborted
Mutant 437 in async-map.js: cb replaced with null
Mutant 438 in async-map.js: abort replaced with null
Mutant 439 in async-map.js: abort replaced with undefined
Mutant 440 in async-map.js: abort replaced with 0
Mutant 441 in async-map.js: busy replaced with !busy
Mutant 442 in async-map.js: busy replaced with busy && false
Mutant 443 in async-map.js: busy replaced with busy || true
Mutant 444 in async-map.js: cb replaced with abortCb
Mutant 445 in async-map.js: abort replaced with null
Mutant 446 in async-map.js: abort replaced with undefined
Mutant 447 in async-map.js: abort replaced with 0
Mutant 448 in async-map.js: end replaced with !end
Mutant 449 in async-map.js: end replaced with end && true
Mutant 450 in async-map.js: end replaced with end || false
Mutant 451 in async-map.js: end replaced with !end
Mutant 452 in async-map.js: end replaced with end + 1
Mutant 453 in async-map.js: end replaced with end - 1
Mutant 454 in async-map.js: aborted replaced with !aborted
Mutant 455 in async-map.js: aborted replaced with aborted && true
Mutant 456 in async-map.js: aborted replaced with aborted || false
Mutant 457 in async-map.js: cb replaced with undefined
Mutant 458 in async-map.js: cb replaced with null
Mutant 459 in async-map.js: cb replaced with 'aborted'
Mutant 460 in async-map.js: aborted replaced with null
Mutant 461 in async-map.js: aborted replaced with undefined
Mutant 462 in async-map.js: aborted replaced with aborted + 1
Mutant 463 in async-map.js: aborted replaced with aborted || true
Mutant 464 in async-map.js: aborted replaced with !aborted
Mutant 465 in async-map.js: aborted replaced with aborted && true
Mutant 466 in async-map.js: aborted replaced with null
Mutant 467 in async-map.js: aborted replaced with undefined
Mutant 468 in async-map.js: aborted replaced with !aborted
Mutant 469 in async-map.js: aborted replaced with null
Mutant 470 in async-map.js: aborted replaced with undefined
Mutant 471 in async-map.js: aborted replaced with new Error()
Mutant 472 in async-map.js: err replaced with !err
Mutant 473 in async-map.js: err replaced with err && false
Mutant 474 in async-map.js: err replaced with err || true
Mutant 475 in async-map.js: next(err, cb) replaced with next(err, aborted)
Mutant 476 in async-map.js: next(err, cb) replaced with next(err, null)
Mutant 477 in async-map.js: next(err, cb) replaced with next(aborted, cb)
Mutant 478 in async-map.js: err replaced with null
Mutant 479 in async-map.js: err replaced with undefined
Mutant 480 in async-map.js: err replaced with "Error"
Mutant 481 in async-map.js: cb replaced with null
Mutant 482 in async-map.js: cb replaced with undefined
Mutant 483 in async-map.js: cb replaced with () => {}
Mutant 484 in async-map.js: cb(null, data) replaced with cb(undefined, data)
Mutant 485 in async-map.js: cb(null, data) replaced with cb(null, null)
Mutant 486 in async-map.js: cb(null, data) replaced with cb(data, data)
Mutant 487 in async-map.js: cb replaced with abortCb
Mutant 488 in async-map.js: cb replaced with null
Mutant 489 in async-map.js: cb replaced with undefined
Mutant 490 in async-map.js: null replaced with undefined
Mutant 491 in async-map.js: null replaced with "null"
Mutant 492 in async-map.js: null replaced with 0
Mutant 493 in async-map.js: data replaced with data + 1
Mutant 494 in async-map.js: data replaced with data * 2
Mutant 495 in async-map.js: data replaced with data.toString()
Mutant 496 in filter-not.js: tester replaced with !tester
Mutant 497 in filter-not.js: tester replaced with tester.not
Mutant 498 in filter-not.js: test replaced with !test
Mutant 499 in filter-not.js: test replaced with test(data)
Mutant 500 in filter-not.js: test replaced with test(data, {})
Mutant 501 in filter-not.js: filter replaced with filterNot
Mutant 502 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) && data !== null;
}
Mutant 503 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) || data === null;
}
Mutant 504 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) || data.length === 0;
}
Mutant 505 in filter-not.js: data replaced with data + 1
Mutant 506 in filter-not.js: data replaced with data * 2
Mutant 507 in filter.js: test replaced with test && false
Mutant 508 in filter.js: test replaced with test || true
Mutant 509 in filter.js: test replaced with test ? false : true
Mutant 510 in filter.js: loop replaced with !loop
Mutant 511 in filter.js: loop replaced with loop && false
Mutant 512 in filter.js: loop replaced with loop || true
Mutant 513 in filter.js: !end && !test(data) replaced with end && test(data)
Mutant 514 in filter.js: !end && !test(data) replaced with !end || test(data)
Mutant 515 in filter.js: !end && !test(data) replaced with end || !test(data)
Mutant 516 in filter.js: test replaced with test === false
Mutant 517 in filter.js: test replaced with test !== false
Mutant 518 in filter.js: data replaced with data + 1
Mutant 519 in filter.js: data replaced with data * 2
Mutant 520 in filter.js: data replaced with data.length
Mutant 521 in filter.js: next(end, cb) replaced with next(end, data)
Mutant 522 in filter.js: next(end, cb) replaced with next(end, null)
Mutant 523 in filter.js: next(end, cb) replaced with next(end, undefined)
Mutant 524 in filter.js: next replaced with end
Mutant 525 in filter.js: next replaced with null
Mutant 526 in filter.js: end replaced with null
Mutant 527 in filter.js: end replaced with undefined
Mutant 528 in filter.js: end replaced with "end"
Mutant 529 in filter.js: cb replaced with cb(end, data)
Mutant 530 in filter.js: cb replaced with cb(end, null)
Mutant 531 in filter.js: cb replaced with cb(end, data + 1)
Mutant 532 in filter.js: cb(end, data) replaced with cb(end, null)
Mutant 533 in filter.js: cb(end, data) replaced with cb(end, undefined)
Mutant 534 in filter.js: cb(end, data) replaced with cb(end, "foo")
Mutant 535 in filter.js: cb replaced with !cb
Mutant 536 in filter.js: cb replaced with cb && data
Mutant 537 in filter.js: end replaced with null
Mutant 538 in filter.js: end replaced with true
Mutant 539 in filter.js: end replaced with false
Mutant 540 in filter.js: data replaced with !data
Mutant 541 in filter.js: data replaced with data + 1
Mutant 542 in filter.js: data replaced with data.length
Mutant 543 in flatten.js: abort replaced with !abort
Mutant 544 in flatten.js: abort replaced with abort && false
Mutant 545 in flatten.js: abort replaced with abort || false
Mutant 546 in flatten.js: read(err || abort, cb) replaced with read(err && abort, cb)
Mutant 547 in flatten.js: read(err || abort, cb) replaced with read(err || !abort, cb)
Mutant 548 in flatten.js: read(err || abort, cb) replaced with read(err ? abort : cb)
Mutant 549 in flatten.js: err || abort replaced with err && abort
Mutant 550 in flatten.js: err || abort replaced with !err && abort
Mutant 551 in flatten.js: err || abort replaced with err || !abort
Mutant 552 in flatten.js: cb replaced with null
Mutant 553 in flatten.js: cb replaced with undefined
Mutant 554 in flatten.js: cb replaced with {}
Mutant 555 in flatten.js: read(abort, cb) replaced with read(abort, null)
Mutant 556 in flatten.js: read(abort, cb) replaced with read(null, cb)
Mutant 557 in flatten.js: read(abort, cb) replaced with read(cb, abort)
Mutant 558 in flatten.js: abort replaced with null
Mutant 559 in flatten.js: abort replaced with undefined
Mutant 560 in flatten.js: abort replaced with 0
Mutant 561 in flatten.js: cb replaced with cb(null, data)
Mutant 562 in flatten.js: cb replaced with cb(err, null)
Mutant 563 in flatten.js: cb replaced with cb(null, null)
Mutant 564 in flatten.js: _read replaced with !_read
Mutant 565 in flatten.js: _read replaced with _read + 1
Mutant 566 in flatten.js: _read replaced with _read = null
Mutant 567 in flatten.js: nextChunk replaced with nextStream
Mutant 568 in flatten.js: nextChunk replaced with null
Mutant 569 in flatten.js: err replaced with null
Mutant 570 in flatten.js: err replaced with !err
Mutant 571 in flatten.js: err replaced with err === null
Mutant 572 in flatten.js: err === true replaced with err
Mutant 573 in flatten.js: err === true replaced with err !== true
Mutant 574 in flatten.js: err === true replaced with err !== false
Mutant 575 in flatten.js: err replaced with err.message
Mutant 576 in flatten.js: err replaced with null
Mutant 577 in flatten.js: err replaced with undefined
Mutant 578 in flatten.js: cb(null, data) replaced with cb(undefined, data)
Mutant 579 in flatten.js: cb(null, data) replaced with cb(null, null)
Mutant 580 in flatten.js: cb(null, data) replaced with cb(data, data)
Mutant 581 in flatten.js: null replaced with undefined
Mutant 582 in flatten.js: null replaced with 1
Mutant 583 in flatten.js: null replaced with ''
Mutant 584 in flatten.js: data replaced with null
Mutant 585 in flatten.js: data replaced with undefined
Mutant 586 in flatten.js: data replaced with []
Mutant 587 in flatten.js: end replaced with !end
Mutant 588 in flatten.js: end replaced with end && true
Mutant 589 in flatten.js: end replaced with end || false
Mutant 590 in flatten.js: cb replaced with null
Mutant 591 in flatten.js: cb replaced with undefined
Mutant 592 in flatten.js: end replaced with null
Mutant 593 in flatten.js: end replaced with undefined
Mutant 594 in flatten.js: end replaced with true
Mutant 595 in flatten.js: stream && 'object' === typeof stream replaced with stream || 'object' === typeof stream
Mutant 596 in flatten.js: stream && 'object' === typeof stream replaced with stream && 'object' === typeof stream && stream.length > 0
Mutant 597 in flatten.js: stream && 'object' === typeof stream replaced with stream && 'object' === typeof stream && stream.length === 0
Mutant 598 in flatten.js: values replaced with stream.values
Mutant 599 in flatten.js: values replaced with stream.values.length
Mutant 600 in flatten.js: values replaced with stream.values[0]
Mutant 601 in flatten.js: stream replaced with stream.pipe(new PassThrough())
Mutant 602 in flatten.js: stream replaced with stream.pipe(new PassThrough(), {
  end: false
})
Mutant 603 in flatten.js: stream replaced with stream.pipe(new PassThrough(), {
  end: true
})
Mutant 604 in flatten.js: 'function' !== typeof stream replaced with 'string' !== typeof stream
Mutant 605 in flatten.js: 'function' !== typeof stream replaced with 'number' !== typeof stream
Mutant 606 in flatten.js: 'function' !== typeof stream replaced with 'object' === typeof stream && !('function' in stream)
Mutant 607 in flatten.js: once replaced with never
Mutant 608 in flatten.js: once replaced with twice
Mutant 609 in flatten.js: once replaced with thrice
Mutant 610 in flatten.js: stream replaced with null
Mutant 611 in flatten.js: stream replaced with undefined
Mutant 612 in flatten.js: stream replaced with {}
Mutant 613 in map.js: !mapper replaced with mapper === null
Mutant 614 in map.js: !mapper replaced with mapper !== null
Mutant 615 in map.js: !mapper replaced with typeof mapper !== 'function'
Mutant 616 in map.js: prop replaced with prop + 1
Mutant 617 in map.js: prop replaced with prop * 2
Mutant 618 in map.js: prop replaced with prop - 1
Mutant 619 in map.js: mapper replaced with mapper + 1
Mutant 620 in map.js: mapper replaced with mapper(data, data)
Mutant 621 in map.js: mapper replaced with mapper(data, 1)
Mutant 622 in map.js: mapper replaced with mapper[data]
Mutant 623 in map.js: data replaced with data + 1
Mutant 624 in map.js: data replaced with data * 2
Mutant 625 in map.js: data replaced with data.length
Mutant 626 in map.js: cb replaced with null
Mutant 627 in map.js: cb replaced with undefined
Mutant 628 in map.js: err replaced with null
Mutant 629 in map.js: err replaced with undefined
Mutant 630 in map.js: cb(end, data) replaced with cb(end, null)
Mutant 631 in map.js: cb(end, data) replaced with cb(end, data + 1)
Mutant 632 in map.js: cb(end, data) replaced with cb(end, mapper(data))
Mutant 633 in map.js: end replaced with !end
Mutant 634 in map.js: end replaced with end && mapper(data)
Mutant 635 in map.js: data replaced with null
Mutant 636 in map.js: data replaced with undefined
Mutant 637 in map.js: data replaced with 0
Mutant 638 in non-unique.js: unique(field, true) replaced with unique(field, false)
Mutant 639 in non-unique.js: unique(field, true) replaced with unique(field, field)
Mutant 640 in non-unique.js: unique(field, true) replaced with unique(field, !field)
Mutant 641 in non-unique.js: unique replaced with !unique
Mutant 642 in non-unique.js: unique replaced with unique + 1
Mutant 643 in non-unique.js: unique replaced with unique * 2
Mutant 644 in non-unique.js: field replaced with field + 1
Mutant 645 in non-unique.js: field replaced with field.toLowerCase()
Mutant 646 in non-unique.js: field replaced with field.length
Mutant 647 in non-unique.js: true replaced with false
Mutant 648 in non-unique.js: true replaced with unique(field, false)
Mutant 649 in non-unique.js: true replaced with unique(field, !unique(field, true))
Mutant 650 in take.js: 'number' === typeof test replaced with 'string' === typeof test
Mutant 651 in take.js: 'number' === typeof test replaced with test !== 'number'
Mutant 652 in take.js: 'number' === typeof test replaced with test.length !== 1
Mutant 653 in take.js: err || true replaced with err && true
Mutant 654 in take.js: err || true replaced with err || false
Mutant 655 in take.js: err || true replaced with !err
Mutant 656 in take.js: ended && !end replaced with !ended && end
Mutant 657 in take.js: ended && !end replaced with ended || !end
Mutant 658 in take.js: cb replaced with null
Mutant 659 in take.js: cb replaced with undefined
Mutant 660 in take.js: cb replaced with true
Mutant 661 in take.js: ended replaced with !ended
Mutant 662 in take.js: ended replaced with ended && !end
Mutant 663 in take.js: ended = end replaced with ended = !end
Mutant 664 in take.js: ended = end replaced with ended = end + 1
Mutant 665 in take.js: ended = end replaced with ended = true
Mutant 666 in take.js: read(ended, cb) replaced with read(ended && cb)
Mutant 667 in take.js: read(ended, cb) replaced with read(ended || cb)
Mutant 668 in take.js: read(ended, cb) replaced with read(ended ? cb : null)
Mutant 669 in take.js: ended replaced with !ended
Mutant 670 in take.js: ended replaced with ended && !end
Mutant 671 in take.js: ended replaced with ended || !end
Mutant 672 in take.js: cb replaced with !cb
Mutant 673 in take.js: cb replaced with cb()
Mutant 674 in take.js: cb replaced with cb(null)
Mutant 675 in take.js: ended = ended || end replaced with ended = end
Mutant 676 in take.js: ended = ended || end replaced with ended = !end
Mutant 677 in take.js: ended = ended || end replaced with ended = end && !last
Mutant 678 in take.js: cb replaced with !ended
Mutant 679 in take.js: cb replaced with ended && !cb
Mutant 680 in take.js: cb replaced with ended || !cb
Mutant 681 in take.js: ended replaced with last
Mutant 682 in take.js: ended replaced with !ended
Mutant 683 in take.js: ended replaced with false
Mutant 684 in take.js: !test(data) replaced with !test(data) || false
Mutant 685 in take.js: !test(data) replaced with test(data) && true
Mutant 686 in take.js: !test(data) replaced with !test(data) && false
Mutant 687 in take.js: test replaced with test && false
Mutant 688 in take.js: test replaced with test || true
Mutant 689 in take.js: data replaced with null
Mutant 690 in take.js: data replaced with undefined
Mutant 691 in take.js: data replaced with 0
Mutant 692 in take.js: cb(null, data) replaced with cb(undefined, data)
Mutant 693 in take.js: cb(null, data) replaced with cb(null, null)
Mutant 694 in take.js: cb(null, data) replaced with cb(data, null)
Mutant 695 in take.js: null replaced with undefined
Mutant 696 in take.js: null replaced with false
Mutant 697 in take.js: null replaced with NaN
Mutant 698 in take.js: data replaced with null
Mutant 699 in take.js: data replaced with undefined
Mutant 700 in take.js: data replaced with {}
Mutant 701 in take.js: cb replaced with cb(ended)
Mutant 702 in take.js: cb replaced with cb(null, data)
Mutant 703 in take.js: cb replaced with cb(null, null)
Mutant 704 in take.js: cb(null, data) replaced with cb(undefined, data)
Mutant 705 in take.js: cb(null, data) replaced with cb(null, null)
Mutant 706 in take.js: cb(null, data) replaced with cb(data, data)
Mutant 707 in take.js: null replaced with undefined
Mutant 708 in take.js: null replaced with false
Mutant 709 in take.js: null replaced with 0
Mutant 710 in take.js: data replaced with null
Mutant 711 in take.js: data replaced with undefined
Mutant 712 in take.js: data replaced with 0
Mutant 713 in through.js: a || !onEnd replaced with a && onEnd
Mutant 714 in through.js: a || !onEnd replaced with !a || !onEnd
Mutant 715 in through.js: a || !onEnd replaced with a ? onEnd : !onEnd
Mutant 716 in through.js: onEnd replaced with onEnd !== undefined
Mutant 717 in through.js: abort === true ? null : abort replaced with abort === false ? null : abort
Mutant 718 in through.js: abort === true ? null : abort replaced with abort === true ? null : null
Mutant 719 in through.js: end replaced with end && true
Mutant 720 in through.js: end replaced with end || false
Mutant 721 in through.js: end replaced with end !== true
Mutant 722 in through.js: end replaced with end + 1
Mutant 723 in through.js: end replaced with end - 1
Mutant 724 in through.js: end replaced with null
Mutant 725 in through.js: !end replaced with end
Mutant 726 in through.js: !end replaced with !end && op
Mutant 727 in through.js: !end replaced with end || op
Mutant 728 in through.js: op replaced with op + 1
Mutant 729 in through.js: op replaced with op - 1
Mutant 730 in through.js: op replaced with op * 2
Mutant 731 in through.js: data replaced with data + 1
Mutant 732 in through.js: data replaced with data - 1
Mutant 733 in through.js: data replaced with data * 2
Mutant 734 in through.js: end replaced with end + 1
Mutant 735 in through.js: end replaced with end - 1
Mutant 736 in through.js: end replaced with end * 2
Mutant 737 in through.js: cb(end, data) replaced with cb(end, !data)
Mutant 738 in through.js: cb(end, data) replaced with cb(end, data + 1)
Mutant 739 in through.js: cb(end, data) replaced with cb(end, data.length)
Mutant 740 in through.js: cb replaced with !cb
Mutant 741 in through.js: end replaced with null
Mutant 742 in through.js: end replaced with undefined
Mutant 743 in through.js: end replaced with true
Mutant 744 in through.js: data replaced with null
Mutant 745 in through.js: data replaced with undefined
Mutant 746 in through.js: data replaced with 0
Mutant 747 in unique.js: prop replaced with prop.name
Mutant 748 in unique.js: prop replaced with prop.value
Mutant 749 in unique.js: field replaced with field + 1
Mutant 750 in unique.js: field replaced with field - 1
Mutant 751 in unique.js: field replaced with field * 2
Mutant 752 in unique.js: field replaced with field + 1
Mutant 753 in unique.js: field replaced with field * 2
Mutant 754 in unique.js: field replaced with field.length
Mutant 755 in unique.js: data replaced with data.length
Mutant 756 in unique.js: data replaced with data.key
Mutant 757 in unique.js: data replaced with data.value
Mutant 758 in unique.js: seen[key] replaced with seen[key] = true
Mutant 759 in unique.js: seen[key] replaced with seen[key] = false
Mutant 760 in unique.js: seen[key] replaced with seen[key] = !seen[key]
Mutant 761 in abort-cb.js: cb replaced with cb && onAbort
Mutant 762 in abort-cb.js: cb replaced with cb || onAbort
Mutant 763 in abort-cb.js: cb replaced with cb !== onAbort
Mutant 764 in abort-cb.js: abort replaced with abort ? null : abort
Mutant 765 in abort-cb.js: abort replaced with !abort
Mutant 766 in abort-cb.js: abort replaced with abort === true ? null : abort
Mutant 767 in abort-cb.js: abort === true ? null : abort replaced with abort === true ? abort : null
Mutant 768 in abort-cb.js: abort === true ? null : abort replaced with abort !== true ? null : abort
Mutant 769 in prop.js: key.exec replaced with key.test
Mutant 770 in prop.js: key.exec replaced with key.match
Mutant 771 in prop.js: key.exec replaced with key.search
Mutant 772 in prop.js: data replaced with data[0]
Mutant 773 in prop.js: data replaced with data.length
Mutant 774 in prop.js: data replaced with data[key]
Mutant 775 in tester.js: data replaced with data[0]
Mutant 776 in tester.js: data replaced with data + 1
Mutant 777 in tester.js: data replaced with data.length
Mutant 778 in tester.js: prop replaced with prop.foo
Mutant 779 in tester.js: prop replaced with test.foo
Mutant 780 in tester.js: prop replaced with id.foo
Mutant 781 in tester.js: test replaced with test.test(data)
Mutant 782 in tester.js: test replaced with test.test(data, true)
Mutant 783 in tester.js: test replaced with test.test(data, false)
[32m12:29:48 (2690) INFO Instrumenter[39m Instrumented 31 source file(s) with 784 mutant(s)
[32m12:29:48 (2690) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m12:29:49 (2690) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m12:29:49 (2690) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m12:29:51 (2690) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 1 second (net 1809 ms, overhead 2 ms).
Mutation testing 2% (elapsed: <1m, remaining: ~6m) 19/784 tested (0 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~9m) 27/784 tested (0 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~12m) 31/784 tested (1 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~15m) 32/784 tested (1 survived, 1 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~16m) 38/784 tested (3 survived, 2 timed out)
Mutation testing 5% (elapsed: ~1m, remaining: ~17m) 43/784 tested (8 survived, 2 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~17m) 49/784 tested (13 survived, 2 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~17m) 55/784 tested (15 survived, 2 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~17m) 63/784 tested (16 survived, 2 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~16m) 71/784 tested (16 survived, 2 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~16m) 78/784 tested (19 survived, 2 timed out)
Mutation testing 10% (elapsed: ~2m, remaining: ~16m) 83/784 tested (24 survived, 2 timed out)
Mutation testing 11% (elapsed: ~2m, remaining: ~16m) 89/784 tested (30 survived, 2 timed out)
Mutation testing 11% (elapsed: ~2m, remaining: ~17m) 94/784 tested (35 survived, 2 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~17m) 100/784 tested (41 survived, 2 timed out)
Mutation testing 13% (elapsed: ~2m, remaining: ~17m) 105/784 tested (46 survived, 2 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~16m) 115/784 tested (50 survived, 2 timed out)
Mutation testing 16% (elapsed: ~3m, remaining: ~15m) 129/784 tested (53 survived, 2 timed out)
Mutation testing 17% (elapsed: ~3m, remaining: ~15m) 135/784 tested (58 survived, 2 timed out)
Mutation testing 18% (elapsed: ~3m, remaining: ~14m) 144/784 tested (60 survived, 2 timed out)
Mutation testing 19% (elapsed: ~3m, remaining: ~14m) 150/784 tested (64 survived, 2 timed out)
Mutation testing 19% (elapsed: ~3m, remaining: ~15m) 152/784 tested (64 survived, 3 timed out)
Mutation testing 19% (elapsed: ~3m, remaining: ~15m) 154/784 tested (64 survived, 4 timed out)
Mutation testing 20% (elapsed: ~4m, remaining: ~15m) 162/784 tested (67 survived, 5 timed out)
Mutation testing 21% (elapsed: ~4m, remaining: ~15m) 167/784 tested (72 survived, 5 timed out)
Mutation testing 22% (elapsed: ~4m, remaining: ~14m) 177/784 tested (75 survived, 5 timed out)
Mutation testing 23% (elapsed: ~4m, remaining: ~14m) 185/784 tested (78 survived, 5 timed out)
Mutation testing 24% (elapsed: ~4m, remaining: ~14m) 189/784 tested (79 survived, 6 timed out)
Mutation testing 24% (elapsed: ~4m, remaining: ~14m) 195/784 tested (84 survived, 6 timed out)
Mutation testing 25% (elapsed: ~5m, remaining: ~14m) 202/784 tested (87 survived, 6 timed out)
Mutation testing 26% (elapsed: ~5m, remaining: ~14m) 209/784 tested (87 survived, 6 timed out)
Mutation testing 27% (elapsed: ~5m, remaining: ~14m) 216/784 tested (88 survived, 6 timed out)
Mutation testing 28% (elapsed: ~5m, remaining: ~13m) 222/784 tested (90 survived, 6 timed out)
Mutation testing 29% (elapsed: ~5m, remaining: ~13m) 228/784 tested (92 survived, 6 timed out)
Mutation testing 29% (elapsed: ~5m, remaining: ~13m) 234/784 tested (96 survived, 6 timed out)
Mutation testing 30% (elapsed: ~6m, remaining: ~13m) 240/784 tested (101 survived, 6 timed out)
Mutation testing 31% (elapsed: ~6m, remaining: ~13m) 247/784 tested (104 survived, 6 timed out)
Mutation testing 32% (elapsed: ~6m, remaining: ~12m) 258/784 tested (104 survived, 6 timed out)
Mutation testing 34% (elapsed: ~6m, remaining: ~12m) 270/784 tested (105 survived, 6 timed out)
Mutation testing 35% (elapsed: ~6m, remaining: ~12m) 276/784 tested (109 survived, 6 timed out)
Mutation testing 35% (elapsed: ~6m, remaining: ~12m) 282/784 tested (113 survived, 6 timed out)
Mutation testing 36% (elapsed: ~7m, remaining: ~11m) 290/784 tested (116 survived, 6 timed out)
Mutation testing 37% (elapsed: ~7m, remaining: ~11m) 297/784 tested (119 survived, 6 timed out)
Mutation testing 38% (elapsed: ~7m, remaining: ~11m) 305/784 tested (122 survived, 6 timed out)
Mutation testing 39% (elapsed: ~7m, remaining: ~11m) 306/784 tested (122 survived, 7 timed out)
Mutation testing 39% (elapsed: ~7m, remaining: ~11m) 307/784 tested (122 survived, 8 timed out)
Mutation testing 39% (elapsed: ~7m, remaining: ~11m) 313/784 tested (123 survived, 9 timed out)
Mutation testing 40% (elapsed: ~8m, remaining: ~11m) 320/784 tested (127 survived, 9 timed out)
Mutation testing 41% (elapsed: ~8m, remaining: ~11m) 326/784 tested (128 survived, 9 timed out)
Mutation testing 42% (elapsed: ~8m, remaining: ~11m) 330/784 tested (130 survived, 10 timed out)
Mutation testing 42% (elapsed: ~8m, remaining: ~11m) 335/784 tested (135 survived, 10 timed out)
Mutation testing 43% (elapsed: ~8m, remaining: ~11m) 341/784 tested (140 survived, 10 timed out)
Mutation testing 44% (elapsed: ~8m, remaining: ~11m) 346/784 tested (141 survived, 10 timed out)
Mutation testing 44% (elapsed: ~9m, remaining: ~11m) 352/784 tested (143 survived, 10 timed out)
Mutation testing 45% (elapsed: ~9m, remaining: ~11m) 355/784 tested (143 survived, 11 timed out)
Mutation testing 45% (elapsed: ~9m, remaining: ~11m) 356/784 tested (143 survived, 12 timed out)
Mutation testing 45% (elapsed: ~9m, remaining: ~11m) 360/784 tested (144 survived, 13 timed out)
Mutation testing 46% (elapsed: ~9m, remaining: ~11m) 365/784 tested (149 survived, 13 timed out)
Mutation testing 47% (elapsed: ~9m, remaining: ~10m) 371/784 tested (155 survived, 13 timed out)
Mutation testing 47% (elapsed: ~10m, remaining: ~10m) 376/784 tested (160 survived, 13 timed out)
Mutation testing 48% (elapsed: ~10m, remaining: ~10m) 378/784 tested (161 survived, 14 timed out)
Mutation testing 48% (elapsed: ~10m, remaining: ~10m) 381/784 tested (163 survived, 15 timed out)
Mutation testing 49% (elapsed: ~10m, remaining: ~10m) 385/784 tested (163 survived, 15 timed out)
Mutation testing 49% (elapsed: ~10m, remaining: ~10m) 386/784 tested (163 survived, 16 timed out)
Mutation testing 50% (elapsed: ~10m, remaining: ~10m) 396/784 tested (164 survived, 17 timed out)
Mutation testing 51% (elapsed: ~11m, remaining: ~10m) 402/784 tested (164 survived, 17 timed out)
Mutation testing 51% (elapsed: ~11m, remaining: ~10m) 403/784 tested (164 survived, 18 timed out)
Mutation testing 51% (elapsed: ~11m, remaining: ~10m) 406/784 tested (165 survived, 20 timed out)
Mutation testing 52% (elapsed: ~11m, remaining: ~10m) 408/784 tested (165 survived, 21 timed out)
Mutation testing 52% (elapsed: ~11m, remaining: ~10m) 412/784 tested (166 survived, 22 timed out)
Mutation testing 52% (elapsed: ~11m, remaining: ~10m) 413/784 tested (166 survived, 23 timed out)
Mutation testing 53% (elapsed: ~12m, remaining: ~10m) 416/784 tested (168 survived, 24 timed out)
Mutation testing 53% (elapsed: ~12m, remaining: ~10m) 423/784 tested (169 survived, 24 timed out)
Mutation testing 54% (elapsed: ~12m, remaining: ~10m) 430/784 tested (171 survived, 25 timed out)
Mutation testing 55% (elapsed: ~12m, remaining: ~10m) 433/784 tested (173 survived, 26 timed out)
Mutation testing 56% (elapsed: ~12m, remaining: ~9m) 444/784 tested (176 survived, 26 timed out)
Mutation testing 57% (elapsed: ~12m, remaining: ~9m) 449/784 tested (176 survived, 27 timed out)
Mutation testing 57% (elapsed: ~13m, remaining: ~9m) 451/784 tested (178 survived, 27 timed out)
Mutation testing 57% (elapsed: ~13m, remaining: ~9m) 453/784 tested (179 survived, 28 timed out)
Mutation testing 59% (elapsed: ~13m, remaining: ~9m) 464/784 tested (182 survived, 29 timed out)
Mutation testing 60% (elapsed: ~13m, remaining: ~8m) 478/784 tested (184 survived, 29 timed out)
Mutation testing 62% (elapsed: ~13m, remaining: ~8m) 490/784 tested (185 survived, 29 timed out)
Mutation testing 63% (elapsed: ~13m, remaining: ~7m) 498/784 tested (187 survived, 29 timed out)
Mutation testing 63% (elapsed: ~14m, remaining: ~7m) 501/784 tested (187 survived, 30 timed out)
Mutation testing 64% (elapsed: ~14m, remaining: ~7m) 506/784 tested (191 survived, 30 timed out)
Mutation testing 64% (elapsed: ~14m, remaining: ~7m) 509/784 tested (192 survived, 31 timed out)
Mutation testing 65% (elapsed: ~14m, remaining: ~7m) 512/784 tested (192 survived, 31 timed out)
Mutation testing 65% (elapsed: ~14m, remaining: ~7m) 514/784 tested (192 survived, 33 timed out)
Mutation testing 65% (elapsed: ~14m, remaining: ~7m) 515/784 tested (192 survived, 34 timed out)
Mutation testing 66% (elapsed: ~15m, remaining: ~7m) 519/784 tested (192 survived, 35 timed out)
Mutation testing 66% (elapsed: ~15m, remaining: ~7m) 520/784 tested (192 survived, 36 timed out)
Mutation testing 66% (elapsed: ~15m, remaining: ~7m) 524/784 tested (195 survived, 37 timed out)
Mutation testing 67% (elapsed: ~15m, remaining: ~7m) 530/784 tested (201 survived, 37 timed out)
Mutation testing 68% (elapsed: ~15m, remaining: ~7m) 537/784 tested (203 survived, 37 timed out)
Mutation testing 68% (elapsed: ~15m, remaining: ~7m) 539/784 tested (203 survived, 38 timed out)
Mutation testing 69% (elapsed: ~16m, remaining: ~7m) 542/784 tested (203 survived, 39 timed out)
Mutation testing 70% (elapsed: ~16m, remaining: ~6m) 549/784 tested (206 survived, 39 timed out)
Mutation testing 70% (elapsed: ~16m, remaining: ~6m) 556/784 tested (208 survived, 39 timed out)
Mutation testing 71% (elapsed: ~16m, remaining: ~6m) 562/784 tested (208 survived, 39 timed out)
Mutation testing 72% (elapsed: ~16m, remaining: ~6m) 569/784 tested (209 survived, 39 timed out)
Mutation testing 72% (elapsed: ~16m, remaining: ~6m) 570/784 tested (209 survived, 40 timed out)
Mutation testing 72% (elapsed: ~17m, remaining: ~6m) 571/784 tested (209 survived, 41 timed out)
Mutation testing 73% (elapsed: ~17m, remaining: ~6m) 576/784 tested (209 survived, 42 timed out)
Mutation testing 73% (elapsed: ~17m, remaining: ~6m) 577/784 tested (209 survived, 43 timed out)
Mutation testing 74% (elapsed: ~17m, remaining: ~6m) 581/784 tested (210 survived, 44 timed out)
Mutation testing 74% (elapsed: ~17m, remaining: ~5m) 587/784 tested (212 survived, 44 timed out)
Mutation testing 75% (elapsed: ~17m, remaining: ~5m) 592/784 tested (214 survived, 44 timed out)
Mutation testing 75% (elapsed: ~18m, remaining: ~5m) 593/784 tested (214 survived, 45 timed out)
Mutation testing 76% (elapsed: ~18m, remaining: ~5m) 598/784 tested (216 survived, 46 timed out)
Mutation testing 77% (elapsed: ~18m, remaining: ~5m) 606/784 tested (216 survived, 46 timed out)
Mutation testing 78% (elapsed: ~18m, remaining: ~5m) 612/784 tested (216 survived, 46 timed out)
Mutation testing 79% (elapsed: ~18m, remaining: ~4m) 624/784 tested (218 survived, 46 timed out)
Mutation testing 80% (elapsed: ~18m, remaining: ~4m) 633/784 tested (218 survived, 46 timed out)
Mutation testing 81% (elapsed: ~19m, remaining: ~4m) 641/784 tested (219 survived, 46 timed out)
Mutation testing 82% (elapsed: ~19m, remaining: ~4m) 647/784 tested (220 survived, 46 timed out)
Mutation testing 83% (elapsed: ~19m, remaining: ~3m) 654/784 tested (224 survived, 46 timed out)
Mutation testing 83% (elapsed: ~19m, remaining: ~3m) 658/784 tested (225 survived, 47 timed out)
Mutation testing 85% (elapsed: ~19m, remaining: ~3m) 671/784 tested (227 survived, 47 timed out)
Mutation testing 86% (elapsed: ~19m, remaining: ~2m) 682/784 tested (231 survived, 47 timed out)
Mutation testing 87% (elapsed: ~20m, remaining: ~2m) 686/784 tested (234 survived, 47 timed out)
Mutation testing 88% (elapsed: ~20m, remaining: ~2m) 693/784 tested (236 survived, 48 timed out)
Mutation testing 89% (elapsed: ~20m, remaining: ~2m) 700/784 tested (239 survived, 48 timed out)
Mutation testing 90% (elapsed: ~20m, remaining: ~2m) 708/784 tested (241 survived, 48 timed out)
Mutation testing 91% (elapsed: ~20m, remaining: ~1m) 717/784 tested (244 survived, 48 timed out)
Mutation testing 92% (elapsed: ~20m, remaining: ~1m) 723/784 tested (250 survived, 48 timed out)
Mutation testing 93% (elapsed: ~21m, remaining: ~1m) 730/784 tested (253 survived, 48 timed out)
Mutation testing 93% (elapsed: ~21m, remaining: ~1m) 736/784 tested (258 survived, 48 timed out)
Mutation testing 94% (elapsed: ~21m, remaining: ~1m) 741/784 tested (259 survived, 48 timed out)
Mutation testing 94% (elapsed: ~21m, remaining: ~1m) 743/784 tested (259 survived, 50 timed out)
Mutation testing 95% (elapsed: ~21m, remaining: <1m) 751/784 tested (261 survived, 50 timed out)
Mutation testing 96% (elapsed: ~21m, remaining: <1m) 757/784 tested (262 survived, 50 timed out)
Mutation testing 97% (elapsed: ~22m, remaining: <1m) 763/784 tested (263 survived, 50 timed out)
Mutation testing 98% (elapsed: ~22m, remaining: <1m) 770/784 tested (264 survived, 50 timed out)
Mutation testing 98% (elapsed: ~22m, remaining: <1m) 775/784 tested (269 survived, 50 timed out)
Mutation testing 99% (elapsed: ~22m, remaining: <1m) 778/784 tested (270 survived, 51 timed out)

All tests
  ✓ All tests (killed 463)

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (done === false) {

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (done !== true) {

[Survived] PrecomputedMutator
sinks/drain.js:14:8
-       if(abort) return sink.abort()
+       if(abort === true) return sink.abort()

[Survived] PrecomputedMutator
sinks/drain.js:14:8
-       if(abort) return sink.abort()
+       if(abort ? true : false) return sink.abort()

[Survived] PrecomputedMutator
sinks/drain.js:26:18
-                 if(done) done(end === true ? null : end)
+                 if(done || true) done(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end || end !== true) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end && end !== false) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end && end !== null) {

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.error(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.log(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.info(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(doneLackingErr.message)

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(doneLackingErr.stack)

[Survived] PrecomputedMutator
sinks/drain.js:34:15
-                 read(abort || true, done || function () {})
+                 read(abort || false, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(abort && true, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(!abort, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(abort == true, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:35
-                 read(abort || true, done || function () {})
+                 read(abort || true, done || function (err) {
+     throw err;
+   })

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if(err instanceof Function)

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if(typeof err === 'function')

[Survived] PrecomputedMutator
sinks/drain.js:52:8
-       if(read) return read(abort, cb || function () {})
+       if(read(abort || true, cb || function () {})) return read(abort, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:8
-       if(read) return read(abort, cb || function () {})
+       if(read(abort || false, cb || function () {})) return read(abort, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:21
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:26
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(null, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:26
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(undefined, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:33
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, cb || function (err) {
+     console.log(err);
+   })

[Survived] PrecomputedMutator
sinks/drain.js:52:33
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, cb || function (err) {
+     return err;
+   })

[Survived] PrecomputedMutator
sinks/find.js:15:8
-       if(test(data)) {
+       if(test || true(data)) {

[Survived] PrecomputedMutator
sinks/find.js:17:7
-         cb(null, data)
+         cb(undefined, data)

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb(undefined, data)

[Survived] PrecomputedMutator
sinks/find.js:21:8
-       if(ended) return //already called back
+       if(ended === true) return //already called back

[Survived] PrecomputedMutator
sinks/find.js:22:5
-       cb(err === true ? null : err, null)
+       cb(err !== true ? null : err, null)

[Survived] PrecomputedMutator
sinks/find.js:22:5
-       cb(err === true ? null : err, null)
+       cb(err ? null : err, null)

[Survived] PrecomputedMutator
sinks/find.js:22:5
-       cb(err === true ? null : err, null)
+       cb(err ? err : null, null)

[Survived] PrecomputedMutator
sinks/find.js:22:8
-       cb(err === true ? null : err, null)
+       cb(err === false ? null : err, null)

[Survived] PrecomputedMutator
sinks/find.js:22:8
-       cb(err === true ? null : err, null)
+       cb(err ? null : err, null)

[Survived] PrecomputedMutator
sinks/log.js:7:5
-       console.log(data)
+       console.error(data)

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(data + 1)

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(data[0])

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(data.length)

[Survived] PrecomputedMutator
sinks/on-end.js:6:10
-     return drain(null, done)
+     return drain(undefined, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(undefined, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain('', done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(false, done)

[Survived] PrecomputedMutator
sinks/reduce.js:12:7
-     if (arguments.length === 2)
+     if (arguments.length < 2)

[Survived] PrecomputedMutator
sinks/reduce.js:12:7
-     if (arguments.length === 2)
+     if (arguments.length === 1)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(acc = null) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:24
-           if(end) return cb(end === true ? null : end)
+           if(end) return null(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:24
-           if(end) return cb(end === true ? null : end)
+           if(end) return undefined(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:24
-           if(end) return cb(end === true ? null : end)
+           if(end) return true(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end !== true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(!end ? null : end)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(end + 1)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(end - 1)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(null)

[Survived] PrecomputedMutator
sources/count.js:8:17
-         return cb(true)
+         return cb(i >= max)

[Survived] PrecomputedMutator
sources/count.js:9:5
-       cb(null, i++)
+       cb(undefined, i++)

[Survived] PrecomputedMutator
sources/count.js:9:5
-       cb(null, i++)
+       cb(NaN, i++)

[Survived] PrecomputedMutator
sources/count.js:9:5
-       cb(null, i++)
+       cb(0, i++)

[Survived] PrecomputedMutator
sources/count.js:9:8
-       cb(null, i++)
+       cb(undefined, i++)

[Survived] PrecomputedMutator
sources/count.js:9:8
-       cb(null, i++)
+       cb(NaN, i++)

[Survived] PrecomputedMutator
sources/infinite.js:6:12
-       return cb(null, generate())
+       return cb(undefined, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:15
-       return cb(null, generate())
+       return cb(undefined, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:15
-       return cb(null, generate())
+       return cb(NaN, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:21
-       return cb(null, generate())
+       return cb(null, generate(1))

[Survived] PrecomputedMutator
sources/infinite.js:6:21
-       return cb(null, generate())
+       return cb(null, generate(end))

[Survived] PrecomputedMutator
sources/once.js:6:8
-       if(abort)
+       if(abort !== null)

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(null, abort))

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(true, abort))

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(onAbort(abort))

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(null, null), abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(true, null), abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb(false, null), abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, !abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort + 1, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort - 1, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, onAbort())

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, undefined)

[Survived] PrecomputedMutator
sources/once.js:10:7
-         cb(null, _value)
+         cb(undefined, _value)

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(undefined, _value)

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(0, _value)

[Survived] PrecomputedMutator
sources/values.js:5:6
-     if(!array)
+     if(array.length === 0)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(!abort) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort || true) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort !== true) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, onAbort(cb, abort))

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, onAbort(abort, cb))

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return null(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return undefined(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(null, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(undefined, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb({}, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abortCb(cb, null, onAbort), onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abortCb(cb, abort, onAbort), onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abortCb(cb, i, onAbort), onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, onAbort(abort, cb))

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(false)

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(i > array.length)

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(array[i] === undefined)

[Survived] PrecomputedMutator
sources/values.js:10:6
-     if(!Array.isArray(array))
+     if(!array.length)

[Survived] PrecomputedMutator
sources/values.js:10:21
-     if(!Array.isArray(array))
+     if(!Array.isArray(array[0]))

[Survived] PrecomputedMutator
sources/values.js:17:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort || false, onAbort)

[Survived] PrecomputedMutator
sources/values.js:21:7
-         cb(null, array[i++])
+         cb(undefined, array[i++])

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(undefined, array[i++])

[Survived] PrecomputedMutator
throughs/async-map.js:7:6
-     if(!map) return id
+     if(map === null) return id

[Survived] PrecomputedMutator
throughs/async-map.js:7:6
-     if(!map) return id
+     if(map !== map) return id

[Survived] PrecomputedMutator
throughs/async-map.js:7:6
-     if(!map) return id
+     if(map.length === 0) return id

[Survived] PrecomputedMutator
throughs/async-map.js:12:10
-         if(aborted) return cb(aborted)
+         if(aborted && !busy) return cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(null)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(undefined)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(false)

[Survived] PrecomputedMutator
throughs/async-map.js:13:10
-         if(abort) {
+         if(abort && true) {

[Survived] PrecomputedMutator
throughs/async-map.js:13:10
-         if(abort) {
+         if(abort || false) {

[Survived] PrecomputedMutator
throughs/async-map.js:15:12
-           if(!busy) read(abort, function (err) {
+           if(!busy && !aborted) read(abort, function (err) {

[Survived] PrecomputedMutator
throughs/async-map.js:28:14
-             if(end) cb(end)
+             if(end && true) cb(end)

[Survived] PrecomputedMutator
throughs/async-map.js:28:14
-             if(end) cb(end)
+             if(end || false) cb(end)

[Survived] PrecomputedMutator
throughs/async-map.js:28:22
-             if(end) cb(end)
+             if(end) cb(end + 1)

[Survived] PrecomputedMutator
throughs/async-map.js:29:19
-             else if(aborted) cb(aborted)
+             else if(aborted && true) cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:29:19
-             else if(aborted) cb(aborted)
+             else if(aborted || false) cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:29:31
-             else if(aborted) cb(aborted)
+             else if(aborted) cb(aborted + 1)

[Survived] PrecomputedMutator
throughs/async-map.js:34:18
-                 if(aborted) {
+                 if(aborted && true) {

[Survived] PrecomputedMutator
throughs/async-map.js:36:36
-                   abortCb && abortCb(aborted)
+                   abortCb && abortCb(new Error())

[Survived] PrecomputedMutator
throughs/async-map.js:39:20
-                 else cb(null, data)
+                 else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(0, data)

[Survived] PrecomputedMutator
throughs/filter-not.js:8:17
-     return filter(function (data) { return !test(data) })
+     return filter(function (data) {
+     return !test(data) && data !== null;
+   })

[Survived] PrecomputedMutator
throughs/filter-not.js:8:17
-     return filter(function (data) { return !test(data) })
+     return filter(function (data) {
+     return !test(data) || data === null;
+   })

[Survived] PrecomputedMutator
throughs/filter-not.js:8:17
-     return filter(function (data) { return !test(data) })
+     return filter(function (data) {
+     return !test(data) || data.length === 0;
+   })

[Survived] PrecomputedMutator
throughs/filter-not.js:8:48
-     return filter(function (data) { return !test(data) })
+     return filter(function (data) { return !test(data + 1) })

[Survived] PrecomputedMutator
throughs/filter.js:7:17
-     test = tester(test)
+     test = tester(test || true)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, data)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, null)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, undefined)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : end(end, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : null(end, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(null, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(undefined, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next("end", cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, cb(end, data))

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, cb(end, null))

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, cb(end, data + 1))

[Survived] PrecomputedMutator
throughs/flatten.js:11:11
-         if (abort) { //abort the current stream, and then stream of streams.
+         if (abort || false) { //abort the current stream, and then stream of streams.

[Survived] PrecomputedMutator
throughs/flatten.js:13:11
-             read(err || abort, cb)
+             read(err && abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:13:11
-             read(err || abort, cb)
+             read(err || !abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:13:16
-             read(err || abort, cb)
+             read(err && abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:13:16
-             read(err || abort, cb)
+             read(err || !abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:16:15
-         else if(_read) nextChunk()
+         else if(_read + 1) nextChunk()

[Survived] PrecomputedMutator
throughs/flatten.js:28:16
-             else cb(null, data)
+             else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb('', data)

[Survived] PrecomputedMutator
throughs/flatten.js:34:14
-             if(end)
+             if(end && true)

[Survived] PrecomputedMutator
throughs/flatten.js:34:14
-             if(end)
+             if(end || false)

[Survived] PrecomputedMutator
throughs/flatten.js:35:23
-               return cb(end)
+               return cb(true)

[Survived] PrecomputedMutator
throughs/flatten.js:36:14
-             if(stream && 'object' === typeof stream)
+             if(stream && 'object' === typeof stream && stream.length > 0)

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(mapper === null) return id

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(typeof mapper !== 'function') return id

[Survived] PrecomputedMutator
throughs/non-unique.js:7:10
-     return unique(field, true)
+     return unique(field, !field)

[Survived] PrecomputedMutator
throughs/non-unique.js:7:17
-     return unique(field, true)
+     return unique(field + 1, true)

[Survived] PrecomputedMutator
throughs/non-unique.js:7:24
-     return unique(field, true)
+     return unique(field, unique(field, false))

[Survived] PrecomputedMutator
throughs/non-unique.js:7:24
-     return unique(field, true)
+     return unique(field, unique(field, !unique(field, true)))

[Survived] PrecomputedMutator
throughs/take.js:8:6
-     if('number' === typeof test) {
+     if(test.length !== 1) {

[Survived] PrecomputedMutator
throughs/take.js:19:26
-           last = false; cb(err || true)
+           last = false; cb(err && true)

[Survived] PrecomputedMutator
throughs/take.js:19:26
-           last = false; cb(err || true)
+           last = false; cb(err || false)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(!ended)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(ended && !end)

[Survived] PrecomputedMutator
throughs/take.js:25:33
-         else if(ended = end) read(ended, cb)
+         else if(ended = end) read(ended || !end, cb)

[Survived] PrecomputedMutator
throughs/take.js:28:14
-             if(ended = ended || end) {
+             if(ended = end) {

[Survived] PrecomputedMutator
throughs/take.js:28:14
-             if(ended = ended || end) {
+             if(ended = end && !last) {

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(last)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(!ended)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(false)

[Survived] PrecomputedMutator
throughs/take.js:32:19
-             else if(!test(data)) {
+             else if(!test(data) || false) {

[Survived] PrecomputedMutator
throughs/take.js:32:20
-             else if(!test(data)) {
+             else if(!test || true(data)) {

[Survived] PrecomputedMutator
throughs/take.js:34:20
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(undefined, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(undefined, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(false, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(NaN, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:37:13
-               cb(null, data)
+               cb(undefined, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(undefined, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(false, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(0, data)

[Survived] PrecomputedMutator
throughs/through.js:8:8
-       if(a || !onEnd) return
+       if(a ? onEnd : !onEnd) return

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === false ? null : abort)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === true ? null : null)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(end && true) once(end)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(end || false) once(end)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(end !== true) once(end)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(end + 1)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(end - 1)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(null)

[Survived] PrecomputedMutator
throughs/through.js:17:12
-           if(!end) op && op(data)
+           if(!end && op) op && op(data)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(data + 1)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(data - 1)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(data * 2)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(end + 1)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(end - 1)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(end * 2)

[Survived] PrecomputedMutator
throughs/unique.js:9:16
-     field = prop(field) || id
+     field = prop(field + 1) || id

[Survived] PrecomputedMutator
throughs/unique.js:9:16
-     field = prop(field) || id
+     field = prop(field - 1) || id

[Survived] PrecomputedMutator
throughs/unique.js:9:16
-     field = prop(field) || id
+     field = prop(field * 2) || id

[Survived] PrecomputedMutator
util/abort-cb.js:2:3
-     cb(abort)
+     cb || onAbort(abort)

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.test(data); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.match(data); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.search(data); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(data[0]); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(data.length); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(data[key]); return v && v[0] }

[Survived] PrecomputedMutator
util/tester.js:8:42
-       ? function (data) { return test.test(data) }
+       ? function (data) { return test.test(data + 1) }

[Survived] PrecomputedMutator
pull.js:7:20
-       for(var i = 0; i < length; i++)
+       for(var i = 0; i <= length; i++)

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (read == null) {

[Survived] PrecomputedMutator
pull.js:20:15
-         switch (length) {
+         switch (length + 1) {

[Survived] PrecomputedMutator
pull.js:20:15
-         switch (length) {
+         switch (length * 2) {

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[1])

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[0], ref[1])

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[0], ref[1], ref[2])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read + 1, ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read - 1, ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read * 2, ref[0])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[1])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[2])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[3])

[Survived] PrecomputedMutator
pull.js:22:22
-         case 2: return pull(read, ref[0], ref[1])
+         case 2: return pull(read, ref[0], ref[1], ref[2])

[Survived] PrecomputedMutator
pull.js:22:22
-         case 2: return pull(read, ref[0], ref[1])
+         case 2: return pull(read, ref[0], ref[1], ref[3])

[Survived] PrecomputedMutator
pull.js:23:22
-         case 3: return pull(read, ref[0], ref[1], ref[2])
+         case 3: return pull(read, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3] + 1)

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3] * 2)

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3] - 1)

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read + 1, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read.toString(), ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read.call(null, read), ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[1], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[i], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[length - 1], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[2], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1] + 1, ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1] * 2, ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[3], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref.length, ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], null, ref[3])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[0])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[length - 1])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[Math.floor(Math.random() * ref.length)])

[Survived] PrecomputedMutator
pull.js:26:9
-           ref.unshift(read)
+           ref.pop(read)

[Survived] PrecomputedMutator
pull.js:26:9
-           ref.unshift(read)
+           ref.shift(read)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(read + 1)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(read * 2)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(read - 1)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(undefined, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(ref, null)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.call(null, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.bind(null, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.curry(null, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(undefined, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply({}, ref)

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.slice())

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.splice(0, 1))

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.concat([]))

[Survived] PrecomputedMutator
pull.js:34:7
-     if (read && typeof read.source === 'function') {
+     if (read && typeof read.source === 'object') {

[Survived] PrecomputedMutator
pull.js:38:3
-     for (var i = 1; i < length; i++) {
-       var s = arguments[i]
-       if (typeof s === 'function') {
-         read = s(read)
-       } else if (s && typeof s === 'object') {
-         s.sink(read)
-         read = s.source
-       }
-     }
+     for (var i = 1; i <= length; i++) {
+     var s = arguments[i];
+     if (typeof s === 'function') {
+       read = s(read);
+     } else if (s && typeof s === 'object') {
+       s.sink(read);
+       read = s.source;
+     }
+   }

[Survived] PrecomputedMutator
pull.js:38:19
-     for (var i = 1; i < length; i++) {
+     for (var i = 1; i <= length; i++) {

[Survived] PrecomputedMutator
pull.js:40:9
-       if (typeof s === 'function') {
+       if (s instanceof Function) {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s != null) {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s !== null) {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (typeof s === 'object' && s !== null) {

[Survived] PrecomputedMutator
pull.js:43:7
-         s.sink(read)
+         s.source(read)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read + 1)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read - 1)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read * 2)

Ran 0.93 tests per mutant on average.
----------------|---------|----------|-----------|------------|----------|----------|
File            | % score | # killed | # timeout | # survived | # no cov | # errors |
----------------|---------|----------|-----------|------------|----------|----------|
All files       |   65.56 |      463 |        51 |        270 |        0 |        0 |
 sinks          |   63.70 |       89 |         4 |         53 |        0 |        0 |
  collect.js    |  100.00 |        6 |         0 |          0 |        0 |        0 |
  drain.js      |   52.63 |       26 |         4 |         27 |        0 |        0 |
  find.js       |   74.29 |       26 |         0 |          9 |        0 |        0 |
  log.js        |    0.00 |        0 |         0 |          4 |        0 |        0 |
  on-end.js     |   50.00 |        4 |         0 |          4 |        0 |        0 |
  reduce.js     |   75.00 |       27 |         0 |          9 |        0 |        0 |
 sources        |   59.54 |       60 |        18 |         53 |        0 |        0 |
  count.js      |   57.14 |       12 |         0 |          9 |        0 |        0 |
  empty.js      |  100.00 |        1 |         3 |          0 |        0 |        0 |
  error.js      |  100.00 |        3 |         0 |          0 |        0 |        0 |
  infinite.js   |   54.55 |        6 |         0 |          5 |        0 |        0 |
  keys.js       |  100.00 |        3 |         0 |          0 |        0 |        0 |
  once.js       |   50.00 |       12 |         4 |         16 |        0 |        0 |
  values.js     |   59.65 |       23 |        11 |         23 |        0 |        0 |
 throughs       |   72.33 |      225 |        26 |         96 |        0 |        0 |
  async-map.js  |   74.39 |       56 |         5 |         21 |        0 |        0 |
  filter-not.js |   63.64 |        5 |         2 |          4 |        0 |        0 |
  filter.js     |   66.67 |       16 |         8 |         12 |        0 |        0 |
  flatten.js    |   81.43 |       50 |         7 |         13 |        0 |        0 |
  map.js        |   92.00 |       23 |         0 |          2 |        0 |        0 |
  non-unique.js |   66.67 |        8 |         0 |          4 |        0 |        0 |
  take.js       |   66.67 |       40 |         2 |         21 |        0 |        0 |
  through.js    |   52.94 |       16 |         2 |         16 |        0 |        0 |
  unique.js     |   78.57 |       11 |         0 |          3 |        0 |        0 |
 util           |   65.22 |       14 |         1 |          8 |        0 |        0 |
  abort-cb.js   |   87.50 |        7 |         0 |          1 |        0 |        0 |
  prop.js       |    0.00 |        0 |         0 |          6 |        0 |        0 |
  tester.js     |   88.89 |        7 |         1 |          1 |        0 |        0 |
 index.js       |  100.00 |       18 |         0 |          0 |        0 |        0 |
 pull.js        |   49.58 |       57 |         2 |         60 |        0 |        0 |
----------------|---------|----------|-----------|------------|----------|----------|
[32m12:52:29 (2690) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/pull-stream/reports/mutation/mutation.html
[32m12:52:29 (2690) INFO MutationTestExecutor[39m Done in 22 minutes 43 seconds.

real	22m45.077s
user	8m35.186s
sys	1m43.849s
