*** using precomputed mutations ***
[32m14:13:39 (2539) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m14:13:39 (2539) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m14:13:39 (2539) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m14:13:40 (2539) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m14:13:40 (2539) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m14:13:40 (2539) INFO ProjectReader[39m Found 1 of 741 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 283 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.0/mutants.json ***
Mutant 0 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === null
Mutant 1 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === undefined
Mutant 2 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === 'undefined'
Mutant 3 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr || _has_illegal_chars(currentUrlStr)
Mutant 4 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr && !_has_illegal_chars(currentUrlStr)
Mutant 5 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr && _has_illegal_chars(currentUrlStr) && false
Mutant 6 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with baseUrlStr && _has_illegal_chars(currentUrlStr)
Mutant 7 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with !baseUrlStr || _has_illegal_chars(baseUrlStr)
Mutant 8 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with baseUrlStr && _has_illegal_chars(baseUrlStr) && _has_illegal_chars(currentUrlStr)
Mutant 9 in crawler-url-parser.js: currentUrlStr.replace(/#.*$/, '') replaced with currentUrlStr.replace(/#.*$/, ' ')
Mutant 10 in crawler-url-parser.js: /#.*$/ replaced with /^#.*$/
Mutant 11 in crawler-url-parser.js: /#.*$/ replaced with /#.*$/g
Mutant 12 in crawler-url-parser.js: /#.*$/ replaced with /#.*$/i
Mutant 13 in crawler-url-parser.js: '' replaced with '#'
Mutant 14 in crawler-url-parser.js: '' replaced with '#' + ' '
Mutant 15 in crawler-url-parser.js: '' replaced with '#' + ' ' + ' '
Mutant 16 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toLowerCase()
Mutant 17 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.split('').reverse().join('')
Mutant 18 in crawler-url-parser.js: baseUrlStr.replace(/#.*$/, '') replaced with baseUrlStr.replace(/#.*$/, ' ')
Mutant 19 in crawler-url-parser.js: baseUrlStr.replace(/#.*$/, '') replaced with baseUrlStr.replace(/#.*$/, '\\')
Mutant 20 in crawler-url-parser.js: baseUrlStr.replace(/#.*$/, '') replaced with baseUrlStr.replace(/#.*$/, '\\\\')
Mutant 21 in crawler-url-parser.js: /#.*$/ replaced with /^#.*$/
Mutant 22 in crawler-url-parser.js: /#.*$/ replaced with /#.*$/g
Mutant 23 in crawler-url-parser.js: /#.*$/ replaced with /#.*$/i
Mutant 24 in crawler-url-parser.js: '' replaced with '#'
Mutant 25 in crawler-url-parser.js: '' replaced with '#' + 'foo'
Mutant 26 in crawler-url-parser.js: '' replaced with '#' + linkurl.hash
Mutant 27 in crawler-url-parser.js: !/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr) replaced with currentUrlStr.match(/^(?!localhost)\w+:/)
Mutant 28 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, false)
Mutant 29 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, true, false)
Mutant 30 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, true)
Mutant 31 in crawler-url-parser.js: true replaced with false
Mutant 32 in crawler-url-parser.js: true replaced with null
Mutant 33 in crawler-url-parser.js: true replaced with undefined
Mutant 34 in crawler-url-parser.js: true replaced with false
Mutant 35 in crawler-url-parser.js: true replaced with null
Mutant 36 in crawler-url-parser.js: true replaced with undefined
Mutant 37 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.protocol != 'ftp:'
Mutant 38 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.protocol != 'file:'
Mutant 39 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.protocol != 'mailto:'
Mutant 40 in crawler-url-parser.js: parsedUrl.host == null && baseUrlStr replaced with parsedUrl.host == null || baseUrlStr
Mutant 41 in crawler-url-parser.js: parsedUrl.host == null && baseUrlStr replaced with parsedUrl.host == null && baseUrlStr != null
Mutant 42 in crawler-url-parser.js: parsedUrl.host == null && baseUrlStr replaced with parsedUrl.host == null || baseUrlStr != null
Mutant 43 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, false, false)
Mutant 44 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, true, false)
Mutant 45 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, false, true)
Mutant 46 in crawler-url-parser.js: true replaced with false
Mutant 47 in crawler-url-parser.js: true replaced with null
Mutant 48 in crawler-url-parser.js: true replaced with undefined
Mutant 49 in crawler-url-parser.js: true replaced with false
Mutant 50 in crawler-url-parser.js: true replaced with null
Mutant 51 in crawler-url-parser.js: true replaced with undefined
Mutant 52 in crawler-url-parser.js: URL.format replaced with URL.parse
Mutant 53 in crawler-url-parser.js: URL.format replaced with URL.resolve
Mutant 54 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.protocol = 'https:'
Mutant 55 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.host = 'example.com'
Mutant 56 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.pathname = '/path/to/resource'
Mutant 57 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl, parsedUrl, true)
Mutant 58 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl, parsedUrl, false)
Mutant 59 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl, parsedUrl, parsedUrl.protocol === 'http:')
Mutant 60 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl, parsedUrl.pathname)
Mutant 61 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl, parsedUrl.search)
Mutant 62 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl, parsedUrl.hash)
Mutant 63 in crawler-url-parser.js: URL.resolve replaced with URL.parse
Mutant 64 in crawler-url-parser.js: URL.resolve replaced with URL.format
Mutant 65 in crawler-url-parser.js: URL.resolve replaced with URL.resolveObject
Mutant 66 in crawler-url-parser.js: parsedBaseUrl replaced with baseUrl
Mutant 67 in crawler-url-parser.js: parsedBaseUrl replaced with URL.parse(currentUrlStr, true, true)
Mutant 68 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.path
Mutant 69 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.host
Mutant 70 in crawler-url-parser.js: URL.format replaced with URL.parse
Mutant 71 in crawler-url-parser.js: URL.format replaced with URL.resolve
Mutant 72 in crawler-url-parser.js: URL.format replaced with URL.toString
Mutant 73 in crawler-url-parser.js: absoluteUrl replaced with URL.parse(currentUrlStr, true, false)
Mutant 74 in crawler-url-parser.js: absoluteUrl replaced with URL.parse(currentUrlStr, false, true)
Mutant 75 in crawler-url-parser.js: absoluteUrl replaced with URL.parse(currentUrlStr, true, true)
Mutant 76 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, false)
Mutant 77 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, true, false)
Mutant 78 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, true)
Mutant 79 in crawler-url-parser.js: true replaced with false
Mutant 80 in crawler-url-parser.js: true replaced with !parsedUrl.protocol
Mutant 81 in crawler-url-parser.js: true replaced with parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:'
Mutant 82 in crawler-url-parser.js: true replaced with false
Mutant 83 in crawler-url-parser.js: true replaced with null
Mutant 84 in crawler-url-parser.js: true replaced with undefined
Mutant 85 in crawler-url-parser.js: URL.format replaced with URL.parse
Mutant 86 in crawler-url-parser.js: URL.format replaced with URL.resolve
Mutant 87 in crawler-url-parser.js: URL.format replaced with URL.toString
Mutant 88 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.path
Mutant 89 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.host
Mutant 90 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.protocol
Mutant 91 in crawler-url-parser.js: ret.host replaced with ret.hostname
Mutant 92 in crawler-url-parser.js: ret.host replaced with ret.host.split('.').pop()
Mutant 93 in crawler-url-parser.js: ret.host replaced with ret.host.replace(/^www\./, '')
Mutant 94 in crawler-url-parser.js: ret.host replaced with ret.hostname
Mutant 95 in crawler-url-parser.js: ret.host replaced with ret.host.replace('www.', '')
Mutant 96 in crawler-url-parser.js: ret.host replaced with ret.host.split('.').slice(-2).join('.')
Mutant 97 in crawler-url-parser.js: "=" replaced with "!="
Mutant 98 in crawler-url-parser.js: "=" replaced with "+"
Mutant 99 in crawler-url-parser.js: "=" replaced with "*"
Mutant 100 in crawler-url-parser.js: data replaced with $('a').attr('href')
Mutant 101 in crawler-url-parser.js: 'base' replaced with 'base' + 'a'
Mutant 102 in crawler-url-parser.js: 'base' replaced with 'base' + 'b'
Mutant 103 in crawler-url-parser.js: 'base' replaced with 'base' + 'c'
Mutant 104 in crawler-url-parser.js: 'href' replaced with 'src'
Mutant 105 in crawler-url-parser.js: 'href' replaced with 'data-href'
Mutant 106 in crawler-url-parser.js: 'href' replaced with 'href' + '?'
Mutant 107 in crawler-url-parser.js: 'a' replaced with 'b'
Mutant 108 in crawler-url-parser.js: 'a' replaced with 'a' + 'b'
Mutant 109 in crawler-url-parser.js: 'a' replaced with 'a' + 'b' + 'c'
Mutant 110 in crawler-url-parser.js: this replaced with $(this).attr('href')
Mutant 111 in crawler-url-parser.js: this replaced with $(this).find('a').attr('href')
Mutant 112 in crawler-url-parser.js: this replaced with $(this).closest('a').attr('href')
Mutant 113 in crawler-url-parser.js: 'href' replaced with 'src'
Mutant 114 in crawler-url-parser.js: 'href' replaced with 'data-href'
Mutant 115 in crawler-url-parser.js: 'href' replaced with 'href' + '?'
Mutant 116 in crawler-url-parser.js: this replaced with $(this).text().trim().split(" ")[0]
Mutant 117 in crawler-url-parser.js: this replaced with $(this).text().trim().split(" ").slice(-1)
Mutant 118 in crawler-url-parser.js: this replaced with $(this).text().trim().split(" ").slice(1)
Mutant 119 in crawler-url-parser.js: href replaced with href.replace(/;.*$/g, "")
Mutant 120 in crawler-url-parser.js: href replaced with href.replace(/;.*$/g, "").trim()
Mutant 121 in crawler-url-parser.js: href replaced with href.replace(/;.*$/g, "").toLowerCase()
Mutant 122 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href, baseUrlStr + "test")
Mutant 123 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href, baseUrlStr.split("/")[0])
Mutant 124 in crawler-url-parser.js: href replaced with href + "test"
Mutant 125 in crawler-url-parser.js: href replaced with $(this).attr("href")
Mutant 126 in crawler-url-parser.js: href replaced with $(this).prop("href")
Mutant 127 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with currentUrl || currentUrl.url
Mutant 128 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with currentUrl && currentUrl.url !== baseUrlStr
Mutant 129 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with currentUrl && currentUrl.url !== currentUrl.baseurl
Mutant 130 in crawler-url-parser.js: urlMap.has(currentUrl.url) replaced with urlMap.has(currentUrl.url) && urlMap.get(currentUrl.url).text.includes(text)
Mutant 131 in crawler-url-parser.js: urlMap.has(currentUrl.url) replaced with urlMap.has(currentUrl.url) || urlMap.get(currentUrl.url).text.includes(text)
Mutant 132 in crawler-url-parser.js: urlMap.has(currentUrl.url) replaced with urlMap.has(currentUrl.url) && !urlMap.get(currentUrl.url).text.includes(text)
Mutant 133 in crawler-url-parser.js: urlMap.has replaced with urlMap.hasOwnProperty
Mutant 134 in crawler-url-parser.js: urlMap.has replaced with urlMap.size
Mutant 135 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.baseurl
Mutant 136 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.protocol
Mutant 137 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.host
Mutant 138 in crawler-url-parser.js: urlMap.get replaced with urlMap.set
Mutant 139 in crawler-url-parser.js: urlMap.get replaced with urlMap.clear
Mutant 140 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.baseurl
Mutant 141 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.protocol
Mutant 142 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.host
Mutant 143 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.includes(text)
Mutant 144 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.indexOf(text) !== -1
Mutant 145 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.match(text)
Mutant 146 in crawler-url-parser.js: text replaced with text.toUpperCase()
Mutant 147 in crawler-url-parser.js: text replaced with text.length
Mutant 148 in crawler-url-parser.js: text replaced with text.split(" ").join("")
Mutant 149 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.baseurl)
Mutant 150 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.protocol)
Mutant 151 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.host)
Mutant 152 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.baseurl
Mutant 153 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.protocol
Mutant 154 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.host
Mutant 155 in crawler-url-parser.js: currentUrl replaced with currentUrl.url
Mutant 156 in crawler-url-parser.js: currentUrl replaced with currentUrl.url + "?"
Mutant 157 in crawler-url-parser.js: currentUrl replaced with currentUrl.url.replace("http", "https")
Mutant 158 in crawler-url-parser.js: urlMap.values() replaced with urlMap.keys()
Mutant 159 in crawler-url-parser.js: urlMap.values() replaced with urlMap.entries()
Mutant 160 in crawler-url-parser.js: urlMap.values() replaced with urlMap.size
Mutant 161 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(currentUrl.baseUrl)
Mutant 162 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(baseUrl.currentUrl)
Mutant 163 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(baseUrl.baseUrl)
Mutant 164 in crawler-url-parser.js: currentUrl replaced with currentUrl.protocol
Mutant 165 in crawler-url-parser.js: currentUrl replaced with currentUrl.host
Mutant 166 in crawler-url-parser.js: currentUrl replaced with currentUrl.pathname
Mutant 167 in crawler-url-parser.js: baseUrl replaced with baseUrl.protocol
Mutant 168 in crawler-url-parser.js: baseUrl replaced with baseUrl.host
Mutant 169 in crawler-url-parser.js: baseUrl replaced with baseUrl.pathname
Mutant 170 in crawler-url-parser.js: Array.from replaced with Array.of
Mutant 171 in crawler-url-parser.js: Array.from replaced with Array.prototype.map
Mutant 172 in crawler-url-parser.js: Array.from replaced with Array.prototype.filter
Mutant 173 in crawler-url-parser.js: urlMap.values() replaced with urlMap.keys()
Mutant 174 in crawler-url-parser.js: urlMap.values() replaced with urlMap.entries()
Mutant 175 in crawler-url-parser.js: urlMap.values() replaced with urlMap.size
Mutant 176 in crawler-url-parser.js: typeof linkurl == "string" replaced with linkurl == "string"
Mutant 177 in crawler-url-parser.js: typeof linkurl == "string" replaced with linkurl.length == 0
Mutant 178 in crawler-url-parser.js: typeof linkurl == "string" replaced with linkurl.includes("string")
Mutant 179 in crawler-url-parser.js: linkurl replaced with linkurl.path
Mutant 180 in crawler-url-parser.js: linkurl replaced with linkurl.url
Mutant 181 in crawler-url-parser.js: linkurl replaced with linkurl.text
Mutant 182 in crawler-url-parser.js: typeof pageurl == "string" replaced with pageurl == null
Mutant 183 in crawler-url-parser.js: typeof pageurl == "string" replaced with pageurl.length == 0
Mutant 184 in crawler-url-parser.js: typeof pageurl == "string" replaced with pageurl.indexOf("http") == -1
Mutant 185 in crawler-url-parser.js: pageurl replaced with pageurl.host
Mutant 186 in crawler-url-parser.js: pageurl replaced with pageurl.path
Mutant 187 in crawler-url-parser.js: pageurl replaced with pageurl.protocol
Mutant 188 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '')
Mutant 189 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, 'default')
Mutant 190 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, 'default.html')
Mutant 191 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '')
Mutant 192 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, ' ')
Mutant 193 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/\/index\.[a-z]+$/, '\\')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/\/index\.[a-z]+$/, '')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/\/index\.[a-z]+$/, ' ')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/\/index\.[a-z]+$/, '\\')
Mutant 194 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/g
Mutant 195 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/i
Mutant 196 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/m
Mutant 197 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 198 in crawler-url-parser.js: '/' replaced with ' '
Mutant 199 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/g
Mutant 200 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/i
Mutant 201 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/m
Mutant 202 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 203 in crawler-url-parser.js: '/' replaced with ' '
Mutant 204 in crawler-url-parser.js: '/' replaced with ''
Mutant 205 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '')
Mutant 206 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, 'default')
Mutant 207 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '')
Mutant 208 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, ' ')
Mutant 209 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '\\')
not replacing pageurl_path.replace(/\/index\.[a-z]+$/, '/') with pageurl_path.replace(/\/index\.[a-z]+$/, '')
not replacing pageurl_path.replace(/\/index\.[a-z]+$/, '/') with pageurl_path.replace(/\/index\.[a-z]+$/, ' ')
not replacing pageurl_path.replace(/\/index\.[a-z]+$/, '/') with pageurl_path.replace(/\/index\.[a-z]+$/, '\\')
Mutant 210 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/g
Mutant 211 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/i
Mutant 212 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/m
Mutant 213 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 214 in crawler-url-parser.js: '/' replaced with ' '
Mutant 215 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/g
Mutant 216 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/i
Mutant 217 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/m
Mutant 218 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 219 in crawler-url-parser.js: '/' replaced with ' '
Mutant 220 in crawler-url-parser.js: '/' replaced with '#'
Mutant 221 in crawler-url-parser.js: "/" replaced with "\\"
Mutant 222 in crawler-url-parser.js: "/" replaced with "\\"
Mutant 223 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with pageurl.hostname == linkurl.hostname
Mutant 224 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with pageurl.host == linkurl.host && pageurl.port == linkurl.port
Mutant 225 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with pageurl.host == linkurl.host && pageurl.protocol == linkurl.protocol
Mutant 226 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff > 0
Mutant 227 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff < 0
Mutant 228 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff != 0
Mutant 229 in crawler-url-parser.js: linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, " ")
Mutant 230 in crawler-url-parser.js: linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "\\")
Mutant 231 in crawler-url-parser.js: linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "\\\\")
Mutant 232 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/g
Mutant 233 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/i
Mutant 234 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/m
Mutant 235 in crawler-url-parser.js: "" replaced with "/"
Mutant 236 in crawler-url-parser.js: "" replaced with "\\"
Mutant 237 in crawler-url-parser.js: "" replaced with "\\\\"
Mutant 238 in crawler-url-parser.js: pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, " ")
Mutant 239 in crawler-url-parser.js: pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "\\")
Mutant 240 in crawler-url-parser.js: pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "\\\\")
Mutant 241 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/g
Mutant 242 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/i
Mutant 243 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/m
Mutant 244 in crawler-url-parser.js: "" replaced with "/"
Mutant 245 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part === pageurl_without_last_part
Mutant 246 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part !== pageurl_without_last_part
Mutant 247 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part.length === pageurl_without_last_part.length
Mutant 248 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff > 1
Mutant 249 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff >= 1
Mutant 250 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff != 1
Mutant 251 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.startsWith(pageurl_path)
Mutant 252 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.indexOf(pageurl_path) === 0
Mutant 253 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.match(pageurl_path)
Mutant 254 in crawler-url-parser.js: linkurl_path.includes replaced with linkurl_path.endsWith
Mutant 255 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "")
Mutant 256 in crawler-url-parser.js: pageurl_path replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "")
Mutant 257 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.split("/").filter(function (elem, index, array) {
  return elem.length > 0;
}).join("/")
Mutant 258 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff > 1
Mutant 259 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff != -1
Mutant 260 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff < -1
Mutant 261 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.includes(pageurl_path)
Mutant 262 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.startsWith(pageurl_path)
Mutant 263 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.endsWith(pageurl_path)
Mutant 264 in crawler-url-parser.js: pageurl_path.includes replaced with pageurl_path.startsWith
Mutant 265 in crawler-url-parser.js: pageurl_path.includes replaced with pageurl_path.endsWith
Mutant 266 in crawler-url-parser.js: pageurl_path.includes replaced with pageurl_path.indexOf
Mutant 267 in crawler-url-parser.js: linkurl_path replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "")
Mutant 268 in crawler-url-parser.js: linkurl_path replaced with linkurl_path.split("/").pop()
Mutant 269 in crawler-url-parser.js: linkurl_path replaced with linkurl_path.substring(linkurl_path.lastIndexOf("/") + 1)
Mutant 270 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain != pageurl.domain
Mutant 271 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain.length != pageurl.domain.length
Mutant 272 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain.includes(pageurl.domain)
Mutant 273 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len > pageurl_subdomain_len
Mutant 274 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len != pageurl_subdomain_len
Mutant 275 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len >= pageurl_subdomain_len
Mutant 276 in crawler-url-parser.js: !module.parent replaced with module.parent
Mutant 277 in crawler-url-parser.js: !module.parent replaced with module.children
Mutant 278 in crawler-url-parser.js: !module.parent replaced with module.exports
Mutant 279 in crawler-url-parser.js: console.log replaced with console.error
Mutant 280 in crawler-url-parser.js: url replaced with url.href
Mutant 281 in crawler-url-parser.js: url replaced with url.protocol
Mutant 282 in crawler-url-parser.js: url replaced with url.host
[32m14:13:40 (2539) INFO Instrumenter[39m Instrumented 1 source file(s) with 283 mutant(s)
[33m14:13:40 (2539) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/test/05_tubitak.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/test/05_tubitak.html (73:43) Opening tag "a" not terminated.
    at ngHtmlParser (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 736)
    at async DisableTypeChecksPreprocessor.preprocess (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m14:13:40 (2539) WARN DisableTypeChecksPreprocessor[39m (disable "warnings.preprocessorErrors" to ignore this warning
[32m14:13:40 (2539) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m14:13:41 (2539) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m14:13:41 (2539) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m14:13:47 (2539) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 5 seconds (net 5533 ms, overhead 1 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~15m) 3/283 tested (1 survived, 0 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~15m) 6/283 tested (1 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~15m) 9/283 tested (1 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~15m) 12/283 tested (4 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~14m) 15/283 tested (7 survived, 0 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~14m) 18/283 tested (8 survived, 0 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~14m) 21/283 tested (11 survived, 0 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~14m) 24/283 tested (14 survived, 0 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~14m) 27/283 tested (16 survived, 0 timed out)
Mutation testing 10% (elapsed: ~1m, remaining: ~14m) 30/283 tested (18 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~13m) 33/283 tested (21 survived, 0 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~14m) 35/283 tested (23 survived, 0 timed out)
Mutation testing 13% (elapsed: ~2m, remaining: ~13m) 38/283 tested (25 survived, 0 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~13m) 41/283 tested (27 survived, 0 timed out)
Mutation testing 15% (elapsed: ~2m, remaining: ~13m) 44/283 tested (29 survived, 0 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~13m) 47/283 tested (32 survived, 0 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~13m) 50/283 tested (35 survived, 0 timed out)
Mutation testing 18% (elapsed: ~3m, remaining: ~13m) 52/283 tested (37 survived, 0 timed out)
Mutation testing 19% (elapsed: ~3m, remaining: ~12m) 56/283 tested (37 survived, 0 timed out)
Mutation testing 20% (elapsed: ~3m, remaining: ~12m) 58/283 tested (38 survived, 0 timed out)
Mutation testing 21% (elapsed: ~3m, remaining: ~12m) 61/283 tested (40 survived, 0 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~12m) 64/283 tested (40 survived, 0 timed out)
Mutation testing 24% (elapsed: ~3m, remaining: ~12m) 68/283 tested (41 survived, 0 timed out)
Mutation testing 25% (elapsed: ~4m, remaining: ~11m) 71/283 tested (42 survived, 0 timed out)
Mutation testing 26% (elapsed: ~4m, remaining: ~11m) 74/283 tested (42 survived, 0 timed out)
Mutation testing 27% (elapsed: ~4m, remaining: ~11m) 77/283 tested (43 survived, 0 timed out)
Mutation testing 28% (elapsed: ~4m, remaining: ~11m) 80/283 tested (46 survived, 0 timed out)
Mutation testing 28% (elapsed: ~4m, remaining: ~11m) 82/283 tested (48 survived, 0 timed out)
Mutation testing 30% (elapsed: ~4m, remaining: ~11m) 85/283 tested (51 survived, 0 timed out)
Mutation testing 31% (elapsed: ~5m, remaining: ~11m) 88/283 tested (51 survived, 0 timed out)
Mutation testing 32% (elapsed: ~5m, remaining: ~10m) 91/283 tested (51 survived, 0 timed out)
Mutation testing 32% (elapsed: ~5m, remaining: ~10m) 93/283 tested (51 survived, 0 timed out)
Mutation testing 33% (elapsed: ~5m, remaining: ~10m) 96/283 tested (51 survived, 0 timed out)
Mutation testing 34% (elapsed: ~5m, remaining: ~10m) 98/283 tested (51 survived, 0 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~10m) 102/283 tested (51 survived, 0 timed out)
Mutation testing 37% (elapsed: ~6m, remaining: ~10m) 105/283 tested (51 survived, 0 timed out)
Mutation testing 38% (elapsed: ~6m, remaining: ~9m) 108/283 tested (51 survived, 0 timed out)
Mutation testing 39% (elapsed: ~6m, remaining: ~9m) 111/283 tested (51 survived, 0 timed out)
Mutation testing 40% (elapsed: ~6m, remaining: ~9m) 115/283 tested (51 survived, 0 timed out)
Mutation testing 41% (elapsed: ~6m, remaining: ~9m) 118/283 tested (52 survived, 0 timed out)
Mutation testing 42% (elapsed: ~6m, remaining: ~9m) 120/283 tested (54 survived, 0 timed out)
Mutation testing 43% (elapsed: ~7m, remaining: ~9m) 123/283 tested (57 survived, 0 timed out)
Mutation testing 44% (elapsed: ~7m, remaining: ~8m) 126/283 tested (58 survived, 0 timed out)
Mutation testing 45% (elapsed: ~7m, remaining: ~8m) 129/283 tested (60 survived, 0 timed out)
Mutation testing 46% (elapsed: ~7m, remaining: ~8m) 132/283 tested (62 survived, 0 timed out)
Mutation testing 47% (elapsed: ~7m, remaining: ~8m) 135/283 tested (64 survived, 0 timed out)
Mutation testing 48% (elapsed: ~7m, remaining: ~8m) 138/283 tested (66 survived, 0 timed out)
Mutation testing 50% (elapsed: ~8m, remaining: ~7m) 142/283 tested (66 survived, 0 timed out)
Mutation testing 51% (elapsed: ~8m, remaining: ~7m) 145/283 tested (68 survived, 0 timed out)
Mutation testing 52% (elapsed: ~8m, remaining: ~7m) 148/283 tested (71 survived, 0 timed out)
Mutation testing 53% (elapsed: ~8m, remaining: ~7m) 151/283 tested (72 survived, 0 timed out)
Mutation testing 54% (elapsed: ~8m, remaining: ~7m) 154/283 tested (72 survived, 0 timed out)
Mutation testing 55% (elapsed: ~8m, remaining: ~7m) 157/283 tested (72 survived, 0 timed out)
Mutation testing 56% (elapsed: ~9m, remaining: ~6m) 160/283 tested (72 survived, 0 timed out)
Mutation testing 57% (elapsed: ~9m, remaining: ~6m) 163/283 tested (72 survived, 0 timed out)
Mutation testing 58% (elapsed: ~9m, remaining: ~6m) 166/283 tested (72 survived, 0 timed out)
Mutation testing 59% (elapsed: ~9m, remaining: ~6m) 169/283 tested (72 survived, 0 timed out)
Mutation testing 60% (elapsed: ~9m, remaining: ~6m) 172/283 tested (72 survived, 0 timed out)
Mutation testing 61% (elapsed: ~9m, remaining: ~6m) 174/283 tested (72 survived, 0 timed out)
Mutation testing 62% (elapsed: ~10m, remaining: ~5m) 177/283 tested (72 survived, 0 timed out)
Mutation testing 63% (elapsed: ~10m, remaining: ~5m) 180/283 tested (72 survived, 0 timed out)
Mutation testing 64% (elapsed: ~10m, remaining: ~5m) 183/283 tested (72 survived, 0 timed out)
Mutation testing 65% (elapsed: ~10m, remaining: ~5m) 186/283 tested (72 survived, 0 timed out)
Mutation testing 66% (elapsed: ~10m, remaining: ~5m) 188/283 tested (72 survived, 0 timed out)
Mutation testing 67% (elapsed: ~10m, remaining: ~5m) 190/283 tested (74 survived, 0 timed out)
Mutation testing 68% (elapsed: ~11m, remaining: ~5m) 193/283 tested (76 survived, 0 timed out)
Mutation testing 68% (elapsed: ~11m, remaining: ~5m) 194/283 tested (76 survived, 0 timed out)
Mutation testing 69% (elapsed: ~11m, remaining: ~4m) 197/283 tested (79 survived, 0 timed out)
Mutation testing 70% (elapsed: ~11m, remaining: ~4m) 200/283 tested (80 survived, 0 timed out)
Mutation testing 71% (elapsed: ~11m, remaining: ~4m) 203/283 tested (83 survived, 0 timed out)
Mutation testing 72% (elapsed: ~11m, remaining: ~4m) 206/283 tested (86 survived, 0 timed out)
Mutation testing 73% (elapsed: ~12m, remaining: ~4m) 208/283 tested (88 survived, 0 timed out)
Mutation testing 74% (elapsed: ~12m, remaining: ~4m) 211/283 tested (91 survived, 0 timed out)
Mutation testing 75% (elapsed: ~12m, remaining: ~3m) 214/283 tested (94 survived, 0 timed out)
Mutation testing 76% (elapsed: ~12m, remaining: ~3m) 217/283 tested (97 survived, 0 timed out)
Mutation testing 77% (elapsed: ~12m, remaining: ~3m) 219/283 tested (99 survived, 0 timed out)
Mutation testing 78% (elapsed: ~12m, remaining: ~3m) 222/283 tested (101 survived, 0 timed out)
Mutation testing 79% (elapsed: ~13m, remaining: ~3m) 224/283 tested (101 survived, 0 timed out)
Mutation testing 79% (elapsed: ~13m, remaining: ~3m) 225/283 tested (101 survived, 1 timed out)
Mutation testing 79% (elapsed: ~13m, remaining: ~3m) 226/283 tested (102 survived, 1 timed out)
Mutation testing 80% (elapsed: ~13m, remaining: ~3m) 229/283 tested (102 survived, 1 timed out)
Mutation testing 81% (elapsed: ~13m, remaining: ~3m) 231/283 tested (102 survived, 1 timed out)
Mutation testing 82% (elapsed: ~13m, remaining: ~2m) 234/283 tested (104 survived, 1 timed out)
Mutation testing 83% (elapsed: ~14m, remaining: ~2m) 237/283 tested (105 survived, 1 timed out)
Mutation testing 84% (elapsed: ~14m, remaining: ~2m) 239/283 tested (105 survived, 1 timed out)
Mutation testing 85% (elapsed: ~14m, remaining: ~2m) 242/283 tested (106 survived, 1 timed out)
Mutation testing 86% (elapsed: ~14m, remaining: ~2m) 245/283 tested (108 survived, 1 timed out)
Mutation testing 87% (elapsed: ~14m, remaining: ~2m) 248/283 tested (110 survived, 1 timed out)
Mutation testing 88% (elapsed: ~14m, remaining: ~1m) 250/283 tested (110 survived, 1 timed out)
Mutation testing 89% (elapsed: ~15m, remaining: ~1m) 253/283 tested (112 survived, 1 timed out)
Mutation testing 90% (elapsed: ~15m, remaining: ~1m) 256/283 tested (113 survived, 1 timed out)
Mutation testing 91% (elapsed: ~15m, remaining: ~1m) 259/283 tested (114 survived, 1 timed out)
Mutation testing 92% (elapsed: ~15m, remaining: ~1m) 261/283 tested (114 survived, 1 timed out)
Mutation testing 93% (elapsed: ~15m, remaining: ~1m) 264/283 tested (114 survived, 1 timed out)
Mutation testing 94% (elapsed: ~15m, remaining: <1m) 267/283 tested (115 survived, 1 timed out)
Mutation testing 95% (elapsed: ~16m, remaining: <1m) 270/283 tested (117 survived, 1 timed out)
Mutation testing 96% (elapsed: ~16m, remaining: <1m) 273/283 tested (118 survived, 1 timed out)
Mutation testing 97% (elapsed: ~16m, remaining: <1m) 276/283 tested (118 survived, 1 timed out)
Mutation testing 98% (elapsed: ~16m, remaining: <1m) 278/283 tested (120 survived, 1 timed out)
Mutation testing 98% (elapsed: ~16m, remaining: <1m) 280/283 tested (122 survived, 1 timed out)
Mutation testing 99% (elapsed: ~16m, remaining: <1m) 282/283 tested (124 survived, 1 timed out)

All tests
  ✓ All tests (killed 157)

[Survived] PrecomputedMutator
crawler-url-parser.js:31:6
-   	if (typeof currentUrlStr === 'undefined') return null;
+   	if (currentUrlStr === undefined) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:36:18
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:40
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/^#.*$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:40
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/g, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:40
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/i, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:48
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:48
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, '#' + ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:48
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/, '#' + ' ' + ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:16
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:16
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '\\');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:16
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '\\\\');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:35
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/^#.*$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:35
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/g, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:35
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/i, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:43
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:43
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '#' + 'foo');

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, null, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, undefined, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:51:6
-   	if (parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:') return null;
+   	if (parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.protocol != 'file:') return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:51:6
-   	if (parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:') return null;
+   	if (parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' && parsedUrl.protocol != 'mailto:') return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:54:6
-   	if (parsedUrl.host == null && baseUrlStr) {
+   	if (parsedUrl.host == null && baseUrlStr != null) {

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:45
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:45
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, null, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:45
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, undefined, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:59:31
-   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl));
+   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl, true));

[Survived] PrecomputedMutator
crawler-url-parser.js:59:31
-   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl));
+   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl, false));

[Survived] PrecomputedMutator
crawler-url-parser.js:59:31
-   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl));
+   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl, parsedUrl.protocol === 'http:'));

[Survived] PrecomputedMutator
crawler-url-parser.js:59:31
-   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl));
+   		let absoluteUrl = URL.parse(URL.resolveObject(parsedBaseUrl, parsedUrl));

[Survived] PrecomputedMutator
crawler-url-parser.js:60:19
-   		currentUrlStr = URL.format(absoluteUrl);
+   		currentUrlStr = URL.parse(absoluteUrl);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, !parsedUrl.protocol, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:', true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:95:16
-   		let text = $(this).text().trim();
+   		let text = $($(this).text().trim().split(" ").slice(-1)).text().trim();

[Survived] PrecomputedMutator
crawler-url-parser.js:95:16
-   		let text = $(this).text().trim();
+   		let text = $($(this).text().trim().split(" ").slice(1)).text().trim();

[Survived] PrecomputedMutator
crawler-url-parser.js:97:92
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href.replace(/;.*$/g, ""))) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:97:92
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href.replace(/;.*$/g, "").trim())) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:97:92
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href.replace(/;.*$/g, "").toLowerCase())) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:99:20
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse(href, baseUrlStr + "test");

[Survived] PrecomputedMutator
crawler-url-parser.js:99:26
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse($(this).attr("href"), baseUrlStr);

[Survived] PrecomputedMutator
crawler-url-parser.js:99:26
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse($(this).prop("href"), baseUrlStr);

[Survived] PrecomputedMutator
crawler-url-parser.js:101:7
-   		if (currentUrl && currentUrl.url) {
+   		if (currentUrl && currentUrl.url !== baseUrlStr) {

[Survived] PrecomputedMutator
crawler-url-parser.js:101:7
-   		if (currentUrl && currentUrl.url) {
+   		if (currentUrl && currentUrl.url !== currentUrl.baseurl) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url) && urlMap.get(currentUrl.url).text.includes(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url) && !urlMap.get(currentUrl.url).text.includes(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.hasOwnProperty(currentUrl.url)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:19
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.protocol)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:19
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.host)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.includes(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.indexOf(text) !== -1) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.match(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.toUpperCase())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.length)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.split(" ").join(""))) {

[Survived] PrecomputedMutator
crawler-url-parser.js:146:17
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:17
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, 'default');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:17
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, 'default.html');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:17
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:38
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/g, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:38
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/i, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:38
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/m, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:71
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/g, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:71
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/i, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:71
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/m, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '\\');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, 'default');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, ' ').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '\\').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/g, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/i, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/m, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:58
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '\\').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:58
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, ' ').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:71
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/g, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:71
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/i, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:71
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/m, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:93
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '\\');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:93
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:93
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:156:6
-   	if (pageurl.host == linkurl.host) {
+   	if (pageurl.host == linkurl.host && pageurl.protocol == linkurl.protocol) {

[Survived] PrecomputedMutator
crawler-url-parser.js:161:57
-   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/g, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:161:57
-   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/i, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:161:57
-   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/m, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:162:57
-   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/g, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:162:57
-   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/i, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:162:57
-   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/m, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:163:8
-   			if (linkurl_without_last_part == pageurl_without_last_part) return "samelevel"
+   			if (linkurl_without_last_part === pageurl_without_last_part) return "samelevel"

[Survived] PrecomputedMutator
crawler-url-parser.js:163:8
-   			if (linkurl_without_last_part == pageurl_without_last_part) return "samelevel"
+   			if (linkurl_without_last_part.length === pageurl_without_last_part.length) return "samelevel"

[Survived] PrecomputedMutator
crawler-url-parser.js:165:8
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.startsWith(pageurl_path)) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:8
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.indexOf(pageurl_path) === 0) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:8
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.match(pageurl_path)) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:30
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.includes(pageurl_path.split("/").filter(function (elem, index, array) {
+     return elem.length > 0;
+   }).join("/"))) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:167:8
-   			if (pageurl_path.includes(linkurl_path)) return "uplevel";
+   			if (pageurl_path.startsWith(linkurl_path)) return "uplevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:167:30
-   			if (pageurl_path.includes(linkurl_path)) return "uplevel";
+   			if (pageurl_path.includes(linkurl_path.split("/").pop())) return "uplevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:167:30
-   			if (pageurl_path.includes(linkurl_path)) return "uplevel";
+   			if (pageurl_path.includes(linkurl_path.substring(linkurl_path.lastIndexOf("/") + 1))) return "uplevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:171:13
-   	} else if (linkurl.domain == pageurl.domain) {
+   	} else if (linkurl.domain.includes(pageurl.domain)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:185:5
-   if (!module.parent) {
+   if (module.parent) {

[Survived] PrecomputedMutator
crawler-url-parser.js:185:5
-   if (!module.parent) {
+   if (module.children) {

[Survived] PrecomputedMutator
crawler-url-parser.js:185:5
-   if (!module.parent) {
+   if (module.exports) {

[Survived] PrecomputedMutator
crawler-url-parser.js:186:2
-   	console.log("for testing purpose");
+   	console.error("for testing purpose");

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.href);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.protocol);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.host);

Ran 1.00 tests per mutant on average.
-----------------------|---------|----------|-----------|------------|----------|----------|
File                   | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------------|---------|----------|-----------|------------|----------|----------|
All files              |   55.83 |      157 |         1 |        125 |        0 |        0 |
 crawler-url-parser.js |   55.83 |      157 |         1 |        125 |        0 |        0 |
-----------------------|---------|----------|-----------|------------|----------|----------|
[32m14:30:40 (2539) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/reports/mutation/mutation.html
[32m14:30:40 (2539) INFO MutationTestExecutor[39m Done in 17 minutes 1 second.

real	17m2.895s
user	12m4.689s
sys	0m59.490s
