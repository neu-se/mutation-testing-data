*** using precomputed mutations ***
[32m19:42:13 (2659) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m19:42:13 (2659) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m19:42:14 (2659) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/zip-a-folder/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m19:42:14 (2659) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m19:42:14 (2659) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m19:42:14 (2659) INFO ProjectReader[39m Found 1 of 231 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 39 mutants from MUTATION_TESTING/template-onemutation_codellama-34b-instruct_0.0/mutants.json ***
Mutant 0 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression !== COMPRESSION_LEVEL.uncompressed
Mutant 1 in ZipAFolder.ts: {
  src,
  targetFilePath: tarFilePath,
  format: 'tar',
  zipAFolderOptions
} replaced with {
  src,
  targetFilePath: tarFilePath,
  format: 'zip',
  zipAFolderOptions
}
Mutant 2 in ZipAFolder.ts: o.compression === COMPRESSION_LEVEL.uncompressed replaced with o.compression !== COMPRESSION_LEVEL.uncompressed
Mutant 3 in ZipAFolder.ts: !zipAFolderOptions?.customWriteStream && targetFilePath replaced with zipAFolderOptions?.customWriteStream || targetFilePath
Mutant 4 in ZipAFolder.ts: path.dirname replaced with path.basename
Mutant 5 in ZipAFolder.ts: targetFilePath replaced with targetFilePath.toUpperCase()
Mutant 6 in ZipAFolder.ts: targetBasePath === src replaced with targetBasePath !== src
Mutant 7 in ZipAFolder.ts: !isGlob(src) replaced with isGlob(src)
Mutant 8 in ZipAFolder.ts: isGlob replaced with !isGlob
Mutant 9 in ZipAFolder.ts: src replaced with src.split(',')[0]
Mutant 10 in ZipAFolder.ts: fs.promises.access(src, fs.constants.R_OK) replaced with fs.promises.access(src, fs.constants.W_OK)
Mutant 11 in ZipAFolder.ts: src replaced with src + "foo"
Mutant 12 in ZipAFolder.ts: fs.constants.R_OK replaced with fs.constants.W_OK
Mutant 13 in ZipAFolder.ts: fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK) replaced with fs.promises.access(targetBasePath, fs.constants.R_OK & fs.constants.W_OK)
Mutant 14 in ZipAFolder.ts: targetBasePath replaced with targetBasePath.toUpperCase()
Mutant 15 in ZipAFolder.ts: fs.constants.R_OK | fs.constants.W_OK replaced with fs.constants.R_OK & fs.constants.W_OK
Mutant 16 in ZipAFolder.ts: targetFilePath replaced with targetFilePath + 'foo'
Mutant 17 in ZipAFolder.ts: zipAFolderOptions && zipAFolderOptions.customWriteStream replaced with zipAFolderOptions?.customWriteStream
Mutant 18 in ZipAFolder.ts: archiver(format, archiverOptions || {}) replaced with archiver(format, archiverOptions && {})
Mutant 19 in ZipAFolder.ts: archiver replaced with archiver.file
Mutant 20 in ZipAFolder.ts: format replaced with "zip"
Mutant 21 in ZipAFolder.ts: archiverOptions || {} replaced with archiverOptions && {}
Mutant 22 in ZipAFolder.ts: output.on('close', resolve) replaced with output.on('error', reject)
Mutant 23 in ZipAFolder.ts: output.on replaced with output.off
Mutant 24 in ZipAFolder.ts: 'close' replaced with 'end'
Mutant 25 in ZipAFolder.ts: resolve replaced with reject
Mutant 26 in ZipAFolder.ts: output.on('error', reject) replaced with output.on('end', resolve)
Mutant 27 in ZipAFolder.ts: output.on replaced with output.off
Mutant 28 in ZipAFolder.ts: 'error' replaced with 'close'
Mutant 29 in ZipAFolder.ts: reject replaced with resolve
Mutant 30 in ZipAFolder.ts: output replaced with output.end()
Mutant 31 in ZipAFolder.ts: isGlob(src) replaced with !isGlob(src)
Mutant 32 in ZipAFolder.ts: ',' replaced with ';'
Mutant 33 in ZipAFolder.ts: zipArchive.glob replaced with zipArchive.file
Mutant 34 in ZipAFolder.ts: globPart replaced with globPart.split('/').pop()
Mutant 35 in ZipAFolder.ts: zipArchive.directory(src, false) replaced with zipArchive.directory(src, true)
Mutant 36 in ZipAFolder.ts: zipArchive.directory replaced with zipArchive.file
Mutant 37 in ZipAFolder.ts: src replaced with src + "foo"
Mutant 38 in ZipAFolder.ts: false replaced with true
[32m19:42:14 (2659) INFO Instrumenter[39m Instrumented 1 source file(s) with 39 mutant(s)
[32m19:42:14 (2659) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m19:42:15 (2659) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m19:42:15 (2659) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m19:42:21 (2659) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 5 seconds (net 5854 ms, overhead 0 ms).
Mutation testing 2% (elapsed: <1m, remaining: ~6m) 1/39 tested (0 survived, 0 timed out)
Mutation testing 10% (elapsed: <1m, remaining: ~2m) 4/39 tested (1 survived, 0 timed out)
Mutation testing 15% (elapsed: <1m, remaining: ~2m) 6/39 tested (1 survived, 0 timed out)
Mutation testing 23% (elapsed: <1m, remaining: ~2m) 9/39 tested (1 survived, 0 timed out)
Mutation testing 25% (elapsed: <1m, remaining: ~2m) 10/39 tested (2 survived, 0 timed out)
Mutation testing 30% (elapsed: ~1m, remaining: ~2m) 12/39 tested (3 survived, 0 timed out)
Mutation testing 38% (elapsed: ~1m, remaining: ~1m) 15/39 tested (5 survived, 0 timed out)
Mutation testing 43% (elapsed: ~1m, remaining: ~1m) 17/39 tested (7 survived, 0 timed out)
Mutation testing 48% (elapsed: ~1m, remaining: ~1m) 19/39 tested (8 survived, 0 timed out)
Mutation testing 53% (elapsed: ~1m, remaining: ~1m) 21/39 tested (8 survived, 0 timed out)
Mutation testing 56% (elapsed: ~1m, remaining: ~1m) 22/39 tested (8 survived, 0 timed out)
Mutation testing 58% (elapsed: ~2m, remaining: ~1m) 23/39 tested (8 survived, 1 timed out)
Mutation testing 61% (elapsed: ~2m, remaining: ~1m) 24/39 tested (8 survived, 2 timed out)
Mutation testing 61% (elapsed: ~2m, remaining: ~1m) 24/39 tested (8 survived, 2 timed out)
Mutation testing 66% (elapsed: ~2m, remaining: ~1m) 26/39 tested (8 survived, 3 timed out)
Mutation testing 71% (elapsed: ~2m, remaining: ~1m) 28/39 tested (10 survived, 3 timed out)
Mutation testing 74% (elapsed: ~2m, remaining: <1m) 29/39 tested (11 survived, 3 timed out)
Mutation testing 82% (elapsed: ~3m, remaining: <1m) 32/39 tested (12 survived, 3 timed out)
Mutation testing 87% (elapsed: ~3m, remaining: <1m) 34/39 tested (14 survived, 3 timed out)
Mutation testing 92% (elapsed: ~3m, remaining: <1m) 36/39 tested (16 survived, 3 timed out)
Mutation testing 97% (elapsed: ~3m, remaining: <1m) 38/39 tested (16 survived, 3 timed out)

All tests
  âœ“ All tests (killed 19)

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:41:39
-               await ZipAFolder.compress({src, targetFilePath: tarFilePath, format: 'tar', zipAFolderOptions});
+               await ZipAFolder.compress({
+     src,
+     targetFilePath: tarFilePath,
+     format: 'zip',
+     zipAFolderOptions
+   });

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:121:29
-                   if (!isGlob(src)) {
+                   if (!isGlob(src.split(',')[0])) {

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:122:27
-                       await fs.promises.access(src, fs.constants.R_OK); //eslint-disable-line no-bitwise
+                       await fs.promises.access(src, fs.constants.W_OK); //eslint-disable-line no-bitwise

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:122:51
-                       await fs.promises.access(src, fs.constants.R_OK); //eslint-disable-line no-bitwise
+                       await fs.promises.access(src, fs.constants.W_OK); //eslint-disable-line no-bitwise

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:124:23
-                   await fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK); //eslint-disable-line no-bitwise
+                   await fs.promises.access(targetBasePath, fs.constants.R_OK & fs.constants.W_OK); //eslint-disable-line no-bitwise

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:124:58
-                   await fs.promises.access(targetBasePath, fs.constants.R_OK | fs.constants.W_OK); //eslint-disable-line no-bitwise
+                   await fs.promises.access(targetBasePath, fs.constants.R_OK & fs.constants.W_OK); //eslint-disable-line no-bitwise

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:128:43
-               output = fs.createWriteStream(targetFilePath);
+               output = fs.createWriteStream(targetFilePath + 'foo');

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:129:20
-           } else if (zipAFolderOptions && zipAFolderOptions.customWriteStream) {
+           } else if (zipAFolderOptions?.customWriteStream) {

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:139:13
-               output.on('error', reject);
+               output.on('end', resolve);

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:139:13
-               output.on('error', reject);
+               output.off('error', reject);

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:139:23
-               output.on('error', reject);
+               output.on('close', reject);

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:139:32
-               output.on('error', reject);
+               output.on('error', resolve);

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:144:27
-                   src.split(',').forEach((globPart) => {
+                   src.split(';').forEach((globPart) => {

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:145:21
-                       zipArchive.glob(globPart);
+                       zipArchive.file(globPart);

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:145:37
-                       zipArchive.glob(globPart);
+                       zipArchive.glob(globPart.split('/').pop());

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:148:17
-                   zipArchive.directory(src, false);
+                   zipArchive.directory(src, true);

[Survived] PrecomputedMutator
lib/ZipAFolder.ts:148:43
-                   zipArchive.directory(src, false);
+                   zipArchive.directory(src, true);

Ran 0.92 tests per mutant on average.
---------------|---------|----------|-----------|------------|----------|----------|
File           | % score | # killed | # timeout | # survived | # no cov | # errors |
---------------|---------|----------|-----------|------------|----------|----------|
All files      |   56.41 |       19 |         3 |         17 |        0 |        0 |
 ZipAFolder.ts |   56.41 |       19 |         3 |         17 |        0 |        0 |
---------------|---------|----------|-----------|------------|----------|----------|
[32m19:45:52 (2659) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/zip-a-folder/reports/mutation/mutation.html
[32m19:45:52 (2659) INFO MutationTestExecutor[39m Done in 3 minutes 38 seconds.

real	3m39.570s
user	3m48.405s
sys	0m29.611s
