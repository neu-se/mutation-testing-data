*** using precomputed mutations ***
[32m12:54:17 (2852) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m12:54:17 (2852) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m12:54:18 (2852) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m12:54:18 (2852) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m12:54:18 (2852) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m12:54:18 (2852) INFO ProjectReader[39m Found 4 of 1895 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 681 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in AttributeMap.ts: typeof a !== 'object' replaced with a !== 'object'
Mutant 1 in AttributeMap.ts: typeof a !== 'object' replaced with !a || typeof a !== 'object'
Mutant 2 in AttributeMap.ts: typeof a !== 'object' replaced with a !== Object(a)
Mutant 3 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b === 'undefined'
Mutant 4 in AttributeMap.ts: typeof b !== 'object' replaced with b === null
Mutant 5 in AttributeMap.ts: typeof b !== 'object' replaced with !Object.keys(b).length
Mutant 6 in AttributeMap.ts: cloneDeep replaced with attributes = {
  ...b
}
Mutant 7 in AttributeMap.ts: b replaced with a
Mutant 8 in AttributeMap.ts: b replaced with null
Mutant 9 in AttributeMap.ts: b replaced with undefined
Mutant 10 in AttributeMap.ts: !keepNull replaced with !keepNull.length
Mutant 11 in AttributeMap.ts: !keepNull replaced with keepNull.includes(undefined)
Mutant 12 in AttributeMap.ts: !keepNull replaced with keepNull.indexOf(undefined)
Mutant 13 in AttributeMap.ts: attributes replaced with attributes[key]
Mutant 14 in AttributeMap.ts: attributes replaced with attributes["key"]
Mutant 15 in AttributeMap.ts: attributes replaced with attributes["key"] = attributes[key]
Mutant 16 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] !== undefined
Mutant 17 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] !== null
Mutant 18 in AttributeMap.ts: attributes[key] != null replaced with attributes[key] == null
failed to parse replacement for (const key: string in a) {
      if (a[key] !== undefined && b[key] === undefined) {
        attributes[key] = a[key];
      }
    }: SyntaxError: Missing initializer in const declaration. (1:14)
failed to parse replacement for (const key: unknown in a) {
      if (a[key] !== undefined && b[key] === undefined) {
        attributes[key] = a[key];
      }
    }: SyntaxError: Missing initializer in const declaration. (1:14)
Mutant 19 in AttributeMap.ts: for (const key in a) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
} replaced with for (const key in b) {
  if (a[key] !== undefined && b[key] === undefined) {
    attributes[key] = a[key];
  }
}
Mutant 20 in AttributeMap.ts: a replaced with b
Mutant 21 in AttributeMap.ts: a replaced with null
Mutant 22 in AttributeMap.ts: a replaced with undefined
Mutant 23 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] == undefined && b[key] === undefined
Mutant 24 in AttributeMap.ts: a[key] !== undefined && b[key] === undefined replaced with a[key] === undefined || b[key] === undefined
Mutant 25 in AttributeMap.ts: attributes replaced with Object.keys(attributes).reverse()
Mutant 26 in AttributeMap.ts: attributes replaced with Object.keys(attributes).sort()
Mutant 27 in AttributeMap.ts: typeof a !== 'object' replaced with a === null
Mutant 28 in AttributeMap.ts: typeof a !== 'object' replaced with a !== b
Mutant 29 in AttributeMap.ts: typeof a !== 'object' replaced with a.constructor.name !== 'Object'
Mutant 30 in AttributeMap.ts: typeof b !== 'object' replaced with b == null
Mutant 31 in AttributeMap.ts: typeof b !== 'object' replaced with b === undefined
Mutant 32 in AttributeMap.ts: typeof b !== 'object' replaced with b && typeof b !== 'object'
Mutant 33 in AttributeMap.ts: a replaced with b
Mutant 34 in AttributeMap.ts: a replaced with a || b
Mutant 35 in AttributeMap.ts: a replaced with a ? a : b
Mutant 36 in AttributeMap.ts: b replaced with a
Mutant 37 in AttributeMap.ts: b replaced with null
Mutant 38 in AttributeMap.ts: b replaced with {}
Mutant 39 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with a[key] != b[key]
Mutant 40 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with !Object.is(a[key], b[key])
Mutant 41 in AttributeMap.ts: !isEqual(a[key], b[key]) replaced with !Object.deepEqual(a[key], b[key])
Mutant 42 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] + b[key])
Mutant 43 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] === b[key])
Mutant 44 in AttributeMap.ts: isEqual(a[key], b[key]) replaced with isEqual(a[key] !== b[key])
Mutant 45 in AttributeMap.ts: isEqual replaced with !isEqual
Mutant 46 in AttributeMap.ts: a[key] replaced with 0
Mutant 47 in AttributeMap.ts: a[key] replaced with null
Mutant 48 in AttributeMap.ts: a[key] replaced with a[key + 1]
Mutant 49 in AttributeMap.ts: b[key] replaced with b[key] != null
Mutant 50 in AttributeMap.ts: b[key] replaced with a[key] === b[key]
Mutant 51 in AttributeMap.ts: base replaced with undefined
Mutant 52 in AttributeMap.ts: base replaced with null
Mutant 53 in AttributeMap.ts: base replaced with Object.prototype
Mutant 54 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] === attr[key]
Mutant 55 in AttributeMap.ts: base[key] !== attr[key] && attr[key] !== undefined replaced with base[key] !== attr[key] || attr[key] === undefined
Mutant 56 in AttributeMap.ts: attr replaced with base
Mutant 57 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] !== base[key] && base[key] === null
Mutant 58 in AttributeMap.ts: attr[key] !== base[key] && base[key] === undefined replaced with attr[key] !== base[key] && base[key] === NaN
Mutant 59 in AttributeMap.ts: typeof a !== 'object' replaced with a == null
Mutant 60 in AttributeMap.ts: typeof a !== 'object' replaced with a !== null
Mutant 61 in AttributeMap.ts: typeof a !== 'object' replaced with a === undefined
Mutant 62 in AttributeMap.ts: typeof b !== 'object' replaced with typeof b !== 'function'
Mutant 63 in AttributeMap.ts: typeof b !== 'object' replaced with !b instanceof Object
Mutant 64 in AttributeMap.ts: typeof b !== 'object' replaced with b !== Object(b)
Mutant 65 in AttributeMap.ts: !priority replaced with priority
Mutant 66 in AttributeMap.ts: !priority replaced with a[key] === b[key]
Mutant 67 in AttributeMap.ts: !priority replaced with Object.keys(a).includes(key)
Mutant 68 in AttributeMap.ts: b replaced with !b
Mutant 69 in AttributeMap.ts: b replaced with b ? a : undefined
Mutant 70 in AttributeMap.ts: b replaced with typeof b === 'object' ? a : b
Mutant 71 in AttributeMap.ts: a[key] === undefined replaced with a[key] === null
Mutant 72 in AttributeMap.ts: a[key] === undefined replaced with a[key] === b[key]
Mutant 73 in AttributeMap.ts: a[key] === undefined replaced with a[key] === b[key] && b[key] !== undefined
Mutant 74 in AttributeMap.ts: attributes replaced with b
Mutant 75 in AttributeMap.ts: attributes replaced with a.include(b)
Mutant 76 in AttributeMap.ts: attributes replaced with a.merge(b)
Mutant 77 in Delta.ts: String.fromCharCode replaced with ' '
Mutant 78 in Delta.ts: String.fromCharCode replaced with '\u200b'
Mutant 79 in Delta.ts: 0 replaced with undefined
Mutant 80 in Delta.ts: 0 replaced with NaN
Mutant 81 in Delta.ts: 0 replaced with Infinity
Mutant 82 in Delta.ts: typeof b !== 'object' || b === null replaced with typeof b !== 'object' && b !== null
Mutant 83 in Delta.ts: typeof b !== 'object' || b === null replaced with typeof b === 'undefined'
Mutant 84 in Delta.ts: typeof b !== 'object' || b === null replaced with !b
Mutant 85 in Delta.ts: a replaced with isEqual(a, b)
Mutant 86 in Delta.ts: a replaced with types.isEqual(a, b)
Mutant 87 in Delta.ts: a replaced with isEqual(a, b, {
  recursive: true
})
Mutant 88 in Delta.ts: b replaced with NULL_CHARACTER
Mutant 89 in Delta.ts: b replaced with ''
Mutant 90 in Delta.ts: b replaced with {}
Mutant 91 in Delta.ts: !handler replaced with handler !== undefined
Mutant 92 in Delta.ts: !handler replaced with handler != null
Mutant 93 in Delta.ts: !handler replaced with typeof handler !== 'undefined'
Mutant 94 in Delta.ts: Array.isArray(ops) replaced with ops == null
Mutant 95 in Delta.ts: Array.isArray(ops) replaced with ops.length >= 1
Mutant 96 in Delta.ts: Array.isArray(ops) replaced with ops.some(op => op !== null)
Mutant 97 in Delta.ts: Array.isArray replaced with [].isArray
Mutant 98 in Delta.ts: Array.isArray replaced with [1, 2, 3].isArray
Mutant 99 in Delta.ts: Array.isArray replaced with a.isArray
Mutant 100 in Delta.ts: ops replaced with ops[0]
Mutant 101 in Delta.ts: ops replaced with ops[ops.length - 1]
Mutant 102 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops != null || Array.isArray(ops.ops)
Mutant 103 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with ops == null && Array.isArray(ops.ops)
Mutant 104 in Delta.ts: ops != null && Array.isArray(ops.ops) replaced with !(ops != null && Array.isArray(ops.ops))
Mutant 105 in Delta.ts: Array.isArray replaced with Array.isFrozen
Mutant 106 in Delta.ts: Array.isArray replaced with Object.isFrozen
Mutant 107 in Delta.ts: Array.isArray replaced with Array.isSealed
Mutant 108 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg !== 'string' || arg.length > 0
Mutant 109 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg !== 'string' && arg.length === 0
Mutant 110 in Delta.ts: typeof arg === 'string' && arg.length === 0 replaced with arg === 'string' || arg.length === 0
Mutant 111 in Delta.ts: attributes replaced with ATTRIBUTES
Mutant 112 in Delta.ts: attributes replaced with Object.keys(attributes)
Mutant 113 in Delta.ts: attributes replaced with attributes[Symbol("__getOwnPropertyType")]
Mutant 114 in Delta.ts: this.push replaced with this.ops.push
Mutant 115 in Delta.ts: this.push replaced with this.ops.unshift
Mutant 116 in Delta.ts: newOp replaced with {
  insert: [1, 2, 3]
}
Mutant 117 in Delta.ts: newOp replaced with {
  insert: 4
}
Mutant 118 in Delta.ts: newOp replaced with {
  retain: 5
}
Mutant 119 in Delta.ts: length <= 0 replaced with length >= 0
Mutant 120 in Delta.ts: length <= 0 replaced with length !== 0
Mutant 121 in Delta.ts: length <= 0 replaced with length == 0
Mutant 122 in Delta.ts: this.push replaced with null
Mutant 123 in Delta.ts: this.push replaced with this.insert
Mutant 124 in Delta.ts: {
  delete: length
} replaced with {
  retain: -length
}
Mutant 125 in Delta.ts: {
  delete: length
} replaced with {
  insert: length
}
Mutant 126 in Delta.ts: typeof length === 'number' && length <= 0 replaced with typeof length === 'string'
Mutant 127 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length < 0
Mutant 128 in Delta.ts: typeof length === 'number' && length <= 0 replaced with length >= 0
Mutant 129 in Delta.ts: attributes replaced with attributes[0]
Mutant 130 in Delta.ts: attributes replaced with attributes['length']
Mutant 131 in Delta.ts: attributes replaced with attributes['random']
Mutant 132 in Delta.ts: this.push replaced with this.slice
Mutant 133 in Delta.ts: this.push replaced with this.fill
Mutant 134 in Delta.ts: this.push replaced with this.splice
Mutant 135 in Delta.ts: newOp replaced with {}
Mutant 136 in Delta.ts: newOp replaced with 1
Mutant 137 in Delta.ts: newOp replaced with undefined
Mutant 138 in Delta.ts: typeof lastOp === 'object' replaced with lastOp.insert && typeof lastOp.insert === 'number'
Mutant 139 in Delta.ts: typeof lastOp === 'object' replaced with Array.isArray(lastOp) && lastOp.length > 0
Mutant 140 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp.retain && newOp.retain
Mutant 141 in Delta.ts: typeof lastOp !== 'object' replaced with lastOp.insert && newOp.insert
Mutant 142 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with Object.is(newOp.attributes, lastOp.attributes)
Mutant 143 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)
Mutant 144 in Delta.ts: isEqual(newOp.attributes, lastOp.attributes) replaced with newOp.attributes === lastOp.attributes
Mutant 145 in Delta.ts: newOp.attributes replaced with newOp.insert
Mutant 146 in Delta.ts: newOp.attributes replaced with !newOp.attributes
Mutant 147 in Delta.ts: newOp.attributes replaced with {}
Mutant 148 in Delta.ts: lastOp.attributes replaced with lastOp.insert
Mutant 149 in Delta.ts: lastOp.attributes replaced with this.ops[index - 2].attributes
Mutant 150 in Delta.ts: lastOp.attributes replaced with this.ops[index - 1].insert
Mutant 151 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with lastOp.insert === newOp.insert
Mutant 152 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert != null && lastOp.insert == null
Mutant 153 in Delta.ts: typeof newOp.insert === 'string' && typeof lastOp.insert === 'string' replaced with newOp.insert != null && lastOp.insert != null && newOp.insert.length === lastOp.insert.length
Mutant 154 in Delta.ts: typeof newOp.attributes === 'object' replaced with !isEqual(newOp.attributes, lastOp.attributes)
Mutant 155 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== lastOp.attributes
Mutant 156 in Delta.ts: typeof newOp.attributes === 'object' replaced with Object.keys(newOp.attributes).length !== Object.keys(lastOp.attributes).length
Mutant 157 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with newOp.retain !== lastOp.retain
Mutant 158 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with newOp.retain <= lastOp.retain
Mutant 159 in Delta.ts: typeof newOp.retain === 'number' && typeof lastOp.retain === 'number' replaced with newOp.retain >= lastOp.retain
Mutant 160 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes !== null && typeof newOp.attributes === 'object'
Mutant 161 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes === null || typeof newOp.attributes === 'object'
Mutant 162 in Delta.ts: typeof newOp.attributes === 'object' replaced with newOp.attributes && typeof newOp.attributes === 'object'
Mutant 163 in Delta.ts: index === this.ops.length replaced with index > this.ops.length
Mutant 164 in Delta.ts: index === this.ops.length replaced with index === other.ops.length
Mutant 165 in Delta.ts: index === this.ops.length replaced with index % 2 === 0
Mutant 166 in Delta.ts: this.ops.push replaced with this.ops.unshift
Mutant 167 in Delta.ts: newOp replaced with null
Mutant 168 in Delta.ts: newOp replaced with new Error()
Mutant 169 in Delta.ts: newOp replaced with this.ops
Mutant 170 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, -1, newOp)
Mutant 171 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, index + 1, newOp)
Mutant 172 in Delta.ts: this.ops.splice(index, 0, newOp) replaced with this.ops.splice(index, -index, newOp)
Mutant 173 in Delta.ts: index replaced with index + 1
Mutant 174 in Delta.ts: index replaced with index - 1
Mutant 175 in Delta.ts: index replaced with index * 2
Mutant 176 in Delta.ts: 0 replaced with 1
Mutant 177 in Delta.ts: 0 replaced with 2
Mutant 178 in Delta.ts: newOp replaced with null
Mutant 179 in Delta.ts: newOp replaced with undefined
Mutant 180 in Delta.ts: newOp replaced with 0
Mutant 181 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp.retain === 0
Mutant 182 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp != null && typeof lastOp.retain === 'number' && !lastOp.attributes
Mutant 183 in Delta.ts: lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes replaced with lastOp.retain !== 0
Mutant 184 in Delta.ts: this.ops.filter replaced with this.ops.map
Mutant 185 in Delta.ts: this.ops.map replaced with this.ops.forEach
Mutant 186 in Delta.ts: this.ops.map replaced with this.ops.reduce
Mutant 187 in Delta.ts: this.ops.map replaced with this.reduce
Mutant 188 in Delta.ts: predicate replaced with op.retain = length
Mutant 189 in Delta.ts: predicate replaced with op.retain = length + 1
Mutant 190 in Delta.ts: predicate replaced with op.retain = length - 1
Mutant 191 in Delta.ts: op replaced with " Bakery"
Mutant 192 in Delta.ts: op replaced with 10
Mutant 193 in Delta.ts: op replaced with null
Mutant 194 in Delta.ts: predicate replaced with predicate(1, 0)
Mutant 195 in Delta.ts: predicate replaced with predicate(1, 1)
Mutant 196 in Delta.ts: predicate replaced with predicate(0, 1)
Mutant 197 in Delta.ts: initialValue replaced with initialValue = Object.create(null)
Mutant 198 in Delta.ts: initialValue replaced with initialValue = 0
Mutant 199 in Delta.ts: initialValue replaced with initialValue = undefined
Mutant 200 in Delta.ts: elem.insert replaced with elem.retain
Mutant 201 in Delta.ts: elem.insert replaced with elem.attributes
Mutant 202 in Delta.ts: Op.length replaced with Op.length * 2
Mutant 203 in Delta.ts: Op.length replaced with Op.length + 1
Mutant 204 in Delta.ts: Op.length replaced with Op.length - 1
Mutant 205 in Delta.ts: Op.length replaced with Op.length * 2
Mutant 206 in Delta.ts: elem replaced with 3
Mutant 207 in Delta.ts: elem replaced with null
Mutant 208 in Delta.ts: elem replaced with "foo"
Mutant 209 in Delta.ts: index < end && iter.hasNext() replaced with index < end || iter.hasNext()
Mutant 210 in Delta.ts: index < end && iter.hasNext() replaced with index <= end
Mutant 211 in Delta.ts: index < end && iter.hasNext() replaced with index < end - 1
Mutant 212 in Delta.ts: index < start replaced with index > start
Mutant 213 in Delta.ts: index < start replaced with index != start
Mutant 214 in Delta.ts: index < start replaced with start > index
Mutant 215 in Delta.ts: start - index replaced with start - index + 1
Mutant 216 in Delta.ts: start - index replaced with start - index - 1
Mutant 217 in Delta.ts: start - index replaced with start + index
Mutant 218 in Delta.ts: nextOp replaced with thisIter.peek()
Mutant 219 in Delta.ts: nextOp replaced with otherIter.peek()
Mutant 220 in Delta.ts: nextOp replaced with this.ops[index]
Mutant 221 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null && Math.random() < 0.5
Mutant 222 in Delta.ts: firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null replaced with firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null && typeof firstOther.insert === 'object'
Mutant 223 in Delta.ts: thisIter.peekLength replaced with thisIter.hasNext
Mutant 224 in Delta.ts: thisIter.peekLength replaced with otherIter.hasNext
Mutant 225 in Delta.ts: ops.push replaced with ops.pop
Mutant 226 in Delta.ts: ops.push replaced with this.push
Mutant 227 in Delta.ts: ops.push replaced with other.push
Mutant 228 in Delta.ts: thisIter.next() replaced with thisIter.skip()
Mutant 229 in Delta.ts: thisIter.next() replaced with otherIter.next()
Mutant 230 in Delta.ts: thisIter.next() replaced with thisIter.peek()
Mutant 231 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with x
Mutant 232 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with y
Mutant 233 in Delta.ts: firstOther.retain - firstLeft > 0 replaced with random()
Mutant 234 in Delta.ts: firstOther.retain - firstLeft replaced with firstOther.retain + firstLeft
Mutant 235 in Delta.ts: firstOther.retain - firstLeft replaced with Math.abs(firstOther.retain - firstLeft)
Mutant 236 in Delta.ts: thisIter.hasNext replaced with otherIter.hasNext
Mutant 237 in Delta.ts: otherIter.peekType() === 'insert' replaced with OtherIter.peekType() !== 'insert'
Mutant 238 in Delta.ts: otherIter.next() replaced with otherIter.next(length)
Mutant 239 in Delta.ts: otherIter.next() replaced with otherIter[length]
Mutant 240 in Delta.ts: thisIter.peekType() === 'delete' replaced with otherIter.peekType() === 'insert'
Mutant 241 in Delta.ts: thisIter.next replaced with otherIter.next
Mutant 242 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.min(Math.floor(length), Math.floor(thisIter.peekLength() / 2)))
Mutant 243 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.min(Math.ceil(length), Math.floor(thisIter.peekLength() / 2)))
Mutant 244 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.min(Math.floor(length), Math.ceil(thisIter.peekLength() / 2)))
Mutant 245 in Delta.ts: Math.min replaced with Math.max
Mutant 246 in Delta.ts: thisIter.peekLength() replaced with 0
Mutant 247 in Delta.ts: thisIter.peekLength() replaced with 1
Mutant 248 in Delta.ts: thisIter.peekLength() replaced with -1
Mutant 249 in Delta.ts: otherIter.peekLength() replaced with `otherIter.length()`
Mutant 250 in Delta.ts: otherIter.peekLength() replaced with `thisIter.length()`
Mutant 251 in Delta.ts: otherIter.peekLength() replaced with `otherIter.peekLength()`
Mutant 252 in Delta.ts: otherIter.peekLength replaced with 0
Mutant 253 in Delta.ts: thisIter.next replaced with null
Mutant 254 in Delta.ts: length replaced with 1
Mutant 255 in Delta.ts: length replaced with 0
Mutant 256 in Delta.ts: length replaced with -1
Mutant 257 in Delta.ts: length replaced with 0
Mutant 258 in Delta.ts: length replaced with Infinity
Mutant 259 in Delta.ts: length replaced with NaN
Mutant 260 in Delta.ts: otherOp.retain replaced with otherOp.retain + 1
Mutant 261 in Delta.ts: otherOp.retain replaced with otherOp.retain - 1
Mutant 262 in Delta.ts: otherOp.retain replaced with otherOp.retain == null
Mutant 263 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof otherOp.retain === 'number'
Mutant 264 in Delta.ts: typeof thisOp.retain === 'number' replaced with typeof thisOp.retain !== 'number'
Mutant 265 in Delta.ts: typeof thisOp.retain === 'number' replaced with thisOp.retain === undefined
Mutant 266 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof thisOp.retain === 'number'
Mutant 267 in Delta.ts: typeof otherOp.retain === 'number' replaced with otherOp.retain != null
Mutant 268 in Delta.ts: typeof otherOp.retain === 'number' replaced with typeof thisOp.retain === 'object' && thisOp.retain != null
Mutant 269 in Delta.ts: thisOp.retain == null replaced with thisOp.retain != null
Mutant 270 in Delta.ts: thisOp.retain == null replaced with typeof thisOp.retain === 'object'
Mutant 271 in Delta.ts: newOp replaced with newOpNonexistent
Mutant 272 in Delta.ts: newOp replaced with newOpPlusOne
Mutant 273 in Delta.ts: newOp replaced with newOpTimesTwo
Mutant 274 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with otherIter.peekType()
Mutant 275 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with newOp != delta.ops[delta.ops.length - 1]
Mutant 276 in Delta.ts: !otherIter.hasNext() && isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with !isEqual(delta.ops[delta.ops.length - 1], newOp)
Mutant 277 in Delta.ts: otherIter.hasNext replaced with otherIter.hasNext === true
Mutant 278 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[0], newOp)
Mutant 279 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[0].insert, newOp)
Mutant 280 in Delta.ts: isEqual(delta.ops[delta.ops.length - 1], newOp) replaced with isEqual(delta.ops[0].retain, newOp)
Mutant 281 in Delta.ts: isEqual replaced with otherOp.retain === null
Mutant 282 in Delta.ts: isEqual replaced with otherOp.retain === NaN
Mutant 283 in Delta.ts: isEqual replaced with otherOp.retain === undefined
Mutant 284 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with this.ops[this.ops.length - 2]
Mutant 285 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with this.ops[0]
Mutant 286 in Delta.ts: delta.ops[delta.ops.length - 1] replaced with other.ops[0]
Mutant 287 in Delta.ts: thisIter.rest replaced with thisIter.ops
Mutant 288 in Delta.ts: delta.concat replaced with delta.retain
Mutant 289 in Delta.ts: delta.concat replaced with delta.insert
not replacing delta.concat with delta.retain
not replacing delta.concat with delta.retain
not replacing delta.concat with delta.insert
not replacing delta.concat with delta.insert
Mutant 290 in Delta.ts: delta.push replaced with ThereIsALotOfSpace.push
Mutant 291 in Delta.ts: delta.push replaced with otherIter.insert
Mutant 292 in Delta.ts: other.ops.length > 0 replaced with other.ops.length < 0
Mutant 293 in Delta.ts: other.ops.length > 0 replaced with other.ops.length === 0
Mutant 294 in Delta.ts: other.ops.length > 0 replaced with other.ops.length > 1
Mutant 295 in Delta.ts: other.ops[0] replaced with other.ops[other.ops.length - 1]
Mutant 296 in Delta.ts: other.ops[0] replaced with other.ops[Math.floor(other.ops.length / 2)]
Mutant 297 in Delta.ts: other.ops[0] replaced with other.ops[Math.random() * other.ops.length]
Mutant 298 in Delta.ts: other.ops.slice(1) replaced with other.ops.splice(1)
Mutant 299 in Delta.ts: other.ops.slice(1) replaced with other.ops.concat().slice(1)
Mutant 300 in Delta.ts: other.ops.slice(1) replaced with other.ops.slice(1).concat()
Mutant 301 in Delta.ts: other.ops.slice replaced with null
Mutant 302 in Delta.ts: other.ops.slice replaced with other.name
Mutant 303 in Delta.ts: 1 replaced with 0
Mutant 304 in Delta.ts: 1 replaced with -1
Mutant 305 in Delta.ts: op.insert != null replaced with op.insert == null
Mutant 306 in Delta.ts: op.insert != null replaced with op.attributes != null
Mutant 307 in Delta.ts: op.insert != null replaced with op.retain != null
Mutant 308 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(diff(strings[0].split(newline), strings[1].split(newline), cursor))
Mutant 309 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(diff(strings[0].split(' '), strings[1].split(' '), cursor))
Mutant 310 in Delta.ts: diff(strings[0], strings[1], cursor) replaced with diff(diff(strings.flatMap(s => s.split(newline)), cursor))
Mutant 311 in Delta.ts: strings[0] replaced with strings[1]
Mutant 312 in Delta.ts: strings[0] replaced with strings[0].split('')
Mutant 313 in Delta.ts: strings[0] replaced with strings.join('')
Mutant 314 in Delta.ts: strings[1] replaced with strings[0]
Mutant 315 in Delta.ts: strings[1] replaced with strings[0].split('')
Mutant 316 in Delta.ts: strings[1] replaced with strings[0].length
Mutant 317 in Delta.ts: length > 0 replaced with length >= 0
Mutant 318 in Delta.ts: length > 0 replaced with length < 0
Mutant 319 in Delta.ts: length > 0 replaced with length === 1
Mutant 320 in Delta.ts: component[0] replaced with component[1]
Mutant 321 in Delta.ts: component[0] replaced with component[2]
Mutant 322 in Delta.ts: component[0] replaced with component[3]
Mutant 323 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(otherIter.length)
Mutant 324 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(strings[1].length)
Mutant 325 in Delta.ts: Math.min(otherIter.peekLength(), length) replaced with Math.min(thisIter.length)
Mutant 326 in Delta.ts: otherIter.peekLength replaced with diffResult.length
Mutant 327 in Delta.ts: length replaced with 1
Mutant 328 in Delta.ts: opLength replaced with opLength * 2
Mutant 329 in Delta.ts: opLength replaced with opLength + 1
Mutant 330 in Delta.ts: opLength replaced with opLength - 1
Mutant 331 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(length, otherIter.peekLength())
Mutant 332 in Delta.ts: Math.min(length, thisIter.peekLength()) replaced with Math.min(length, Math.min(thisIter.peekLength(), 0))
Mutant 333 in Delta.ts: Math.min replaced with Math.max
Mutant 334 in Delta.ts: Math.min replaced with Math.floor
Mutant 335 in Delta.ts: Math.min replaced with Math.ceil
Mutant 336 in Delta.ts: length replaced with 0
Mutant 337 in Delta.ts: length replaced with 1
Mutant 338 in Delta.ts: length replaced with -1
Mutant 339 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength()
Mutant 340 in Delta.ts: thisIter.peekLength() replaced with length
Mutant 341 in Delta.ts: thisIter.peekLength() replaced with 0
Mutant 342 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength - 1
Mutant 343 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength + 1
Mutant 344 in Delta.ts: thisIter.peekLength replaced with thisIter.peekLength * 2
Mutant 345 in Delta.ts: opLength replaced with "a".length
Mutant 346 in Delta.ts: opLength replaced with Math.random() * 100
Mutant 347 in Delta.ts: opLength replaced with null
Mutant 348 in Delta.ts: opLength replaced with length
Mutant 349 in Delta.ts: opLength replaced with this.length
Mutant 350 in Delta.ts: opLength replaced with otherOp.length
Mutant 351 in Delta.ts: thisIter.peekLength replaced with otherIter.peekLength
Mutant 352 in Delta.ts: thisIter.peekLength replaced with length - 1
Mutant 353 in Delta.ts: thisIter.peekLength replaced with 0
Mutant 354 in Delta.ts: thisIter.next replaced with other.ops[0]
Mutant 355 in Delta.ts: opLength replaced with 10
Mutant 356 in Delta.ts: opLength replaced with opLength * 2
Mutant 357 in Delta.ts: opLength replaced with opLength + 1
Mutant 358 in Delta.ts: opLength replaced with opLength - 1
Mutant 359 in Delta.ts: opLength replaced with opLength * 2
Mutant 360 in Delta.ts: opLength replaced with opLength + 10
Mutant 361 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with typeof thisOp.insert === typeof otherOp.insert
Mutant 362 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert != otherOp.insert
Mutant 363 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with thisOp.insert !== otherOp.insert
Mutant 364 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual("ABC".concat(String.fromCharCode("ABC".charCodeAt(0) + 1)))
Mutant 365 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual("ABC".concat("ABC".repeat(2)))
Mutant 366 in Delta.ts: isEqual(thisOp.insert, otherOp.insert) replaced with isEqual("ABC".substring(1))
Mutant 367 in Delta.ts: isEqual replaced with typeof thisOp.insert === 'string' ? thisOp.insert : 'not a string'
Mutant 368 in Delta.ts: isEqual replaced with typeof thisOp.insert === 'string' ? 'not a string' : thisOp.insert
Mutant 369 in Delta.ts: thisOp.insert replaced with thisOp.retain
Mutant 370 in Delta.ts: thisOp.insert replaced with null
Mutant 371 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(otherOp.retain)
Mutant 372 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(otherOp.insert)
Mutant 373 in Delta.ts: AttributeMap.diff(thisOp.attributes, otherOp.attributes) replaced with AttributeMap.diff(thisOp.insert)
Mutant 374 in Delta.ts: thisOp.attributes replaced with opAttributes
Mutant 375 in Delta.ts: thisOp.attributes replaced with thisOp.retain
Mutant 376 in Delta.ts: otherOp.attributes replaced with newOp.insert
Mutant 377 in Delta.ts: otherOp.attributes replaced with thisOp.attributes
Mutant 378 in Delta.ts: otherOp.attributes replaced with otherData
Mutant 379 in Delta.ts: otherOp replaced with otherOp._length = 0
Mutant 380 in Delta.ts: otherOp replaced with otherOp[typeof thisOp.retain] = thisOp
Mutant 381 in Delta.ts: otherOp replaced with otherOp.push(thisOp)
Mutant 382 in Delta.ts: opLength replaced with opLength + 1
Mutant 383 in Delta.ts: opLength replaced with opLength - 1
Mutant 384 in Delta.ts: opLength replaced with opLength * 2
Mutant 385 in Delta.ts: iter.hasNext() replaced with iter.hasNext() == false
Mutant 386 in Delta.ts: iter.hasNext() replaced with iter.hasNext() >= 2
Mutant 387 in Delta.ts: iter.hasNext() replaced with iter.hasNext() % 2 == 1
Mutant 388 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() !== 'retain'
Mutant 389 in Delta.ts: iter.peekType() !== 'insert' replaced with iter.peekType() !== 'other'
Mutant 390 in Delta.ts: iter.peek replaced with iter.peek !== 'insert'
Mutant 391 in Delta.ts: iter.peek replaced with iter.peek !== 'replace'
Mutant 392 in Delta.ts: Op.length replaced with 0
Mutant 393 in Delta.ts: Op.length replaced with 1
Mutant 394 in Delta.ts: Op.length replaced with text.length
Mutant 395 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline + start)
Mutant 396 in Delta.ts: thisOp.insert.indexOf(newline, start) replaced with thisOp.insert.indexOf(newline + 1)
Mutant 397 in Delta.ts: thisOp.insert.indexOf replaced with 0
Mutant 398 in Delta.ts: thisOp.insert.indexOf replaced with Infinity
Mutant 399 in Delta.ts: thisOp.insert.indexOf replaced with NaN
Mutant 400 in Delta.ts: index < 0 replaced with index > 0
Mutant 401 in Delta.ts: index < 0 replaced with index === 1
Mutant 402 in Delta.ts: index < 0 replaced with index = 0
Mutant 403 in Delta.ts: iter.next() replaced with iter.peek()
Mutant 404 in Delta.ts: iter.next() replaced with iter.reverse()
Mutant 405 in Delta.ts: iter.next() replaced with iter.partition()
Mutant 406 in Delta.ts: index > 0 replaced with index < 0
Mutant 407 in Delta.ts: index > 0 replaced with index === 0
Mutant 408 in Delta.ts: index > 0 replaced with index % 2 === 0
Mutant 409 in Delta.ts: iter.next(index) replaced with iter.next(index + 1)
Mutant 410 in Delta.ts: iter.next(index) replaced with iter.next(index - 1)
Mutant 411 in Delta.ts: iter.next(index) replaced with iter.next(0)
Mutant 412 in Delta.ts: index replaced with index + 2
Mutant 413 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, iter.next().attributes || {}, i) === false
Mutant 414 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, iter.next(2).attributes || {}, i) === false
Mutant 415 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) === false replaced with predicate(line, iter.peek(1).attributes || {}, i) === false
Mutant 416 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(line, iter.next(1).attributes || {}, i - 1)
Mutant 417 in Delta.ts: predicate(line, iter.next(1).attributes || {}, i) replaced with predicate(line, iter.next(2).attributes || {}, i + 1)
Mutant 418 in Delta.ts: line replaced with delta - other[0]
Mutant 419 in Delta.ts: line replaced with delta + other[0]
Mutant 420 in Delta.ts: line replaced with delta * other[0]
Mutant 421 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(-1).attributes || {}
Mutant 422 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(iter.peekLength() + 1).attributes || {}
Mutant 423 in Delta.ts: iter.next(1).attributes || {} replaced with iter.next(iter.peekLength() * 2).attributes || {}
Mutant 424 in Delta.ts: line.length() > 0 replaced with line.length > 0
Mutant 425 in Delta.ts: line.length() > 0 replaced with line.length >= 0
Mutant 426 in Delta.ts: line.length() > 0 replaced with line.length > 1
Mutant 427 in Delta.ts: line.length replaced with line.size
Mutant 428 in Delta.ts: line.length replaced with line.width
Mutant 429 in Delta.ts: line.length replaced with line.text.length
Mutant 430 in Delta.ts: predicate replaced with predicate && true
Mutant 431 in Delta.ts: i replaced with i + 1
Mutant 432 in Delta.ts: i replaced with j
Mutant 433 in Delta.ts: i replaced with k
Mutant 434 in Delta.ts: inverted.delete replaced with inverted.retain
Mutant 435 in Delta.ts: inverted.delete replaced with inverted.push
Mutant 436 in Delta.ts: Op.length(op) replaced with Op.length(thisOp)
Mutant 437 in Delta.ts: Op.length(op) replaced with Op.length(otherOp)
Mutant 438 in Delta.ts: Op.length(op) replaced with Op.length(op) + 1
Mutant 439 in Delta.ts: Op.length replaced with other.length
Mutant 440 in Delta.ts: Op.length replaced with this.length
Mutant 441 in Delta.ts: op replaced with 0
Mutant 442 in Delta.ts: op replaced with 10
Mutant 443 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'string' && op.attributes == null
Mutant 444 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'number' && op.attributes != null
Mutant 445 in Delta.ts: typeof op.retain === 'number' && op.attributes == null replaced with typeof op.retain === 'object' && op.attributes == null
Mutant 446 in Delta.ts: op.retain replaced with op.insert
Mutant 447 in Delta.ts: op.retain replaced with op.length
Mutant 448 in Delta.ts: op.delete || typeof op.retain === 'number' replaced with op.retain === 'string'
Mutant 449 in Delta.ts: op.delete || typeof op.retain === 'number' replaced with op.retain > 0
Mutant 450 in Delta.ts: op.delete || typeof op.retain === 'number' replaced with op.retain < 0
Mutant 451 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex, baseIndex - length)
Mutant 452 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex, baseIndex + 1)
Mutant 453 in Delta.ts: base.slice(baseIndex, baseIndex + length) replaced with base.slice(baseIndex, otherIndex)
Mutant 454 in Delta.ts: baseIndex replaced with baseIndex + 1
Mutant 455 in Delta.ts: baseIndex replaced with baseIndex * 2
Mutant 456 in Delta.ts: baseIndex replaced with baseIndex + Math.floor(Math.random() * 10)
Mutant 457 in Delta.ts: baseIndex + length replaced with baseIndex * length
Mutant 458 in Delta.ts: baseIndex + length replaced with baseIndex + length + 1
Mutant 459 in Delta.ts: baseIndex + length replaced with baseIndex + (length << 1) + 1
Mutant 460 in Delta.ts: op.delete replaced with op.retain && op['attributes'] != null
Mutant 461 in Delta.ts: op.delete replaced with op['retain'] && !op['attributes']
Mutant 462 in Delta.ts: op.delete replaced with op['retain'] && op['attributes'] != null
Mutant 463 in Delta.ts: inverted.push replaced with inverted.insert
Mutant 464 in Delta.ts: inverted.push replaced with inverted.unshift
Mutant 465 in Delta.ts: baseOp replaced with baseOp.insert
Mutant 466 in Delta.ts: baseOp replaced with typeof baseOp
Mutant 467 in Delta.ts: baseOp replaced with baseOp.length()
Mutant 468 in Delta.ts: op.retain && op.attributes replaced with true
Mutant 469 in Delta.ts: op.retain && op.attributes replaced with false
Mutant 470 in Delta.ts: op.retain && op.attributes replaced with op.attributes || true
Mutant 471 in Delta.ts: Op.length replaced with Op.length + 1
Mutant 472 in Delta.ts: Op.length replaced with Op.length - 1
Mutant 473 in Delta.ts: Op.length replaced with Op.length * 2
Mutant 474 in Delta.ts: baseOp replaced with null
Mutant 475 in Delta.ts: baseOp replaced with undefined
Mutant 476 in Delta.ts: baseOp replaced with baseOp.insert
Mutant 477 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes, other.attributes)
Mutant 478 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes, new AttributeMap())
Mutant 479 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(other.attributes, baseOp.attributes)
Mutant 480 in Delta.ts: AttributeMap.invert replaced with AttributeMap.transform
Mutant 481 in Delta.ts: AttributeMap.invert replaced with AttributeMap.inverted
Mutant 482 in Delta.ts: op.attributes replaced with op.attributes.clone()
Mutant 483 in Delta.ts: op.attributes replaced with op.attributes.merge({})
Mutant 484 in Delta.ts: op.attributes replaced with op.attributes.get(op.insert)
Mutant 485 in Delta.ts: baseOp.attributes replaced with baseOp.retain
Mutant 486 in Delta.ts: baseOp.attributes replaced with baseOp.insert
Mutant 487 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain !== 'object'
Mutant 488 in Delta.ts: typeof op.retain === 'object' && op.retain !== null replaced with op.retain === 'object'
Mutant 489 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex, baseIndex + 2)
Mutant 490 in Delta.ts: base.slice(baseIndex, baseIndex + 1) replaced with base.slice(baseIndex + 1, baseIndex + 2)
Mutant 491 in Delta.ts: baseIndex replaced with baseIndex + 1
Mutant 492 in Delta.ts: baseIndex replaced with baseIndex - 1
Mutant 493 in Delta.ts: baseIndex replaced with 0
Mutant 494 in Delta.ts: baseIndex + 1 replaced with baseIndex - 1
Mutant 495 in Delta.ts: baseIndex + 1 replaced with baseIndex + length
Mutant 496 in Delta.ts: baseIndex + 1 replaced with baseIndex + Object.keys(embedType)[0]
Mutant 497 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(baseOpData)
Mutant 498 in Delta.ts: handler.invert(opData, baseOpData) replaced with handler.invert(thisOp.retain)
Mutant 499 in Delta.ts: handler.invert replaced with handler.insert
Mutant 500 in Delta.ts: handler.invert replaced with handler.remove
Mutant 501 in Delta.ts: handler.invert replaced with handler.toggle
Mutant 502 in Delta.ts: opData replaced with opData + 1
Mutant 503 in Delta.ts: opData replaced with !opData
Mutant 504 in Delta.ts: opData replaced with opData - 1
Mutant 505 in Delta.ts: baseOpData replaced with IsArrayCotainer(baseOpData)
Mutant 506 in Delta.ts: baseOpData replaced with baseOpData.length + 1
Mutant 507 in Delta.ts: baseOpData replaced with baseOpData[0]
Mutant 508 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes * baseOp.attributes)
Mutant 509 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes + baseOp.attributes)
Mutant 510 in Delta.ts: AttributeMap.invert(op.attributes, baseOp.attributes) replaced with AttributeMap.invert(op.attributes - baseOp.attributes)
Mutant 511 in Delta.ts: op.attributes replaced with op.attributes.retain
Mutant 512 in Delta.ts: op.attributes replaced with op.attributes[i]
Mutant 513 in Delta.ts: op.attributes replaced with op.attributes - 1
Mutant 514 in Delta.ts: baseOp.attributes replaced with baseOp.insert
Mutant 515 in Delta.ts: baseOp.attributes replaced with otherOp.insert
Mutant 516 in Delta.ts: baseOp.attributes replaced with null
Mutant 517 in Delta.ts: typeof arg === 'number' replaced with typeof arg === 'string'
Mutant 518 in Delta.ts: typeof arg === 'number' replaced with arg === NaN
Mutant 519 in Delta.ts: typeof arg === 'number' replaced with arg < NaN
Mutant 520 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(arg + 1, priority)
Mutant 521 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(priority, arg)
Mutant 522 in Delta.ts: this.transformPosition(arg, priority) replaced with this.transformPosition(priority & arg)
Mutant 523 in Delta.ts: this.transformPosition replaced with this.transform
Mutant 524 in Delta.ts: this.transformPosition replaced with this.invert
Mutant 525 in Delta.ts: arg replaced with arg.toString()
Mutant 526 in Delta.ts: arg replaced with arg + 1
Mutant 527 in Delta.ts: arg replaced with arg - 1
Mutant 528 in Delta.ts: priority replaced with priority && 1
Mutant 529 in Delta.ts: priority replaced with offset + (priority > 0 ? 1 : 0)
Mutant 530 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.next() || otherIter.next()
Mutant 531 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.next() < otherIter.next()
Mutant 532 in Delta.ts: thisIter.hasNext() || otherIter.hasNext() replaced with thisIter.next() && otherIter.next()
Mutant 533 in Delta.ts: thisIter.peekType replaced with thisIter.peekLength
Mutant 534 in Delta.ts: thisIter.peekType replaced with otherIter.peekType
Mutant 535 in Delta.ts: otherIter.peekType replaced with otherIter.nextType
Mutant 536 in Delta.ts: otherIter.peekType replaced with thisIter.peekType
Mutant 537 in Delta.ts: otherIter.peekType replaced with opIter.peekType
Mutant 538 in Delta.ts: Op.length(thisIter.next()) replaced with Op.length(thisIter.next(0))
Mutant 539 in Delta.ts: Op.length(thisIter.next()) replaced with Op.length(thisIter.next(2))
Mutant 540 in Delta.ts: Op.length replaced with Op.sum
Mutant 541 in Delta.ts: Op.length replaced with Op.count
Mutant 542 in Delta.ts: Op.length replaced with Op.first
Mutant 543 in Delta.ts: thisIter.next() replaced with thisIter.prev()
Mutant 544 in Delta.ts: thisIter.next() replaced with thisIter.prev(2)
Mutant 545 in Delta.ts: thisIter.next replaced with thisIter.next = 0
Mutant 546 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() !== 'insert'
Mutant 547 in Delta.ts: otherIter.peekType() === 'insert' replaced with otherIter.peekType() === 'retain'
Mutant 548 in Delta.ts: otherIter.peekType() === 'insert' replaced with !otherIter.equals(thisIter)
Mutant 549 in Delta.ts: otherIter.next() replaced with otherIter.previous()
Mutant 550 in Delta.ts: otherIter.next() replaced with thisIter.next()
Mutant 551 in Delta.ts: otherIter.next() replaced with otherIter.peekLength()
Mutant 552 in Delta.ts: otherIter.next replaced with otherIter.hasNext
Mutant 553 in Delta.ts: otherIter.next replaced with otherIter.length
Mutant 554 in Delta.ts: otherIter.next replaced with otherIter.index
Mutant 555 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(Math.max(thisIter.peekLength(), otherIter.peekLength()))
Mutant 556 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(0)
Mutant 557 in Delta.ts: Math.min(thisIter.peekLength(), otherIter.peekLength()) replaced with Math.min(thisIter.peekLength() + otherIter.peekLength())
Mutant 558 in Delta.ts: Math.min replaced with NaN
Mutant 559 in Delta.ts: Math.min replaced with null
Mutant 560 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() + 1
Mutant 561 in Delta.ts: thisIter.peekLength() replaced with thisIter.peekLength() - 1
Mutant 562 in Delta.ts: thisIter.peekLength() replaced with otherIter.peekLength()
Mutant 563 in Delta.ts: otherIter.peekLength() replaced with thisIter.peekLength()
Mutant 564 in Delta.ts: otherIter.peekLength() replaced with length
Mutant 565 in Delta.ts: otherIter.peekLength() replaced with otherIter.peekLength() + thisIter.peekLength()
Mutant 566 in Delta.ts: otherIter.peekLength replaced with otherIter.peekLength + length
Mutant 567 in Delta.ts: otherIter.peekLength replaced with offset + otherIter.peekLength
Mutant 568 in Delta.ts: otherIter.peekLength replaced with otherIter.peekLength - length
Mutant 569 in Delta.ts: length replaced with length()
Mutant 570 in Delta.ts: length replaced with other.length()
Mutant 571 in Delta.ts: length replaced with this.length()
Mutant 572 in Delta.ts: length replaced with 0
Mutant 573 in Delta.ts: length replaced with -1
Mutant 574 in Delta.ts: length replaced with NaN
Mutant 575 in Delta.ts: thisOp.delete replaced with thisOp.retain
Mutant 576 in Delta.ts: thisOp.delete replaced with !thisOp.insert
Mutant 577 in Delta.ts: otherOp.delete replaced with otherOp.retain
Mutant 578 in Delta.ts: otherOp.delete replaced with otherOp.attributes
Mutant 579 in Delta.ts: otherOp.delete replaced with otherOp.length
Mutant 580 in Delta.ts: delta.push replaced with delta.retain
Mutant 581 in Delta.ts: otherOp replaced with otherOp.retain
Mutant 582 in Delta.ts: otherOp replaced with parseInt(otherOp)
Mutant 583 in Delta.ts: otherOp replaced with otherOp.length
Mutant 584 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with `thisData useful op.retain && otherData useful op.retain`
Mutant 585 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with `thisData.retain[0] && otherData.retain[0]`
Mutant 586 in Delta.ts: typeof thisData === 'object' && thisData !== null && typeof otherData === 'object' && otherData !== null replaced with `Object.getPrototypeOf(thisData.retain) !== Object.getPrototypeOf(otherData.retain)`
Mutant 587 in Delta.ts: thisData replaced with thisData.attributes
Mutant 588 in Delta.ts: thisData replaced with thisData || 0
Mutant 589 in Delta.ts: otherData replaced with otherData.slice(0)
Mutant 590 in Delta.ts: otherData replaced with ~otherData
Mutant 591 in Delta.ts: embedType replaced with "image"
Mutant 592 in Delta.ts: embedType replaced with null
Mutant 593 in Delta.ts: embedType replaced with "text"
Mutant 594 in Delta.ts: handler replaced with handler[0]
Mutant 595 in Delta.ts: handler replaced with handler.method()
Mutant 596 in Delta.ts: handler replaced with handler.property = true
Mutant 597 in Delta.ts: thisIter.hasNext() && offset <= index replaced with !thisIter.hasNext() && offset <= index
Mutant 598 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.hasNext() && offset > index
Mutant 599 in Delta.ts: thisIter.hasNext() && offset <= index replaced with thisIter.hasNext() && offset == index
Mutant 600 in Delta.ts: thisIter.peekLength replaced with this.ops.length - offset
Mutant 601 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(length * 2)
Mutant 602 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(index + offset)
Mutant 603 in Delta.ts: Math.min(length, index - offset) replaced with Math.min(Math.max(length, index - offset))
Mutant 604 in Delta.ts: Math.min replaced with NaN
Mutant 605 in Delta.ts: Math.min replaced with Infinity
Mutant 606 in Delta.ts: Math.min replaced with "hello"
Mutant 607 in Delta.ts: length replaced with 0
Mutant 608 in Delta.ts: length replaced with length - 1
Mutant 609 in Delta.ts: length replaced with length + 1
Mutant 610 in Delta.ts: index - offset replaced with index - baseIndex
Mutant 611 in Delta.ts: index - offset replaced with offset + length
Mutant 612 in Delta.ts: index - offset replaced with Math.min(offset, index) - Math.min(offset, baseIndex)
Mutant 613 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'retain' && (offset < index || !priority)
Mutant 614 in Delta.ts: nextType === 'insert' && (offset < index || !priority) replaced with nextType === 'insert' && (offset < index || !priority) && thisIter.next()
Mutant 615 in Delta.ts: typeof module === 'object' replaced with module.exports == 'object'
Mutant 616 in Delta.ts: typeof module === 'object' replaced with module.exports instanceof Object
Mutant 617 in Op.ts: typeof op.retain === 'number' replaced with op.retain === 0
Mutant 618 in Op.ts: typeof op.retain === 'number' replaced with typeof op.retain === 'string'
Mutant 619 in Op.ts: typeof op.retain === 'number' replaced with op.retain !== null
Mutant 620 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'string'
Mutant 621 in Op.ts: typeof op.retain === 'object' && op.retain !== null replaced with typeof op.insert === 'number'
Mutant 622 in OpIterator.ts: this.peekLength replaced with this.index < this.ops.length
Mutant 623 in OpIterator.ts: this.peekLength replaced with this.offset < Infinity
Mutant 624 in OpIterator.ts: !length replaced with length <= 0
Mutant 625 in OpIterator.ts: !length replaced with !length > 0
Mutant 626 in OpIterator.ts: !length replaced with length >= Infinity
Mutant 627 in OpIterator.ts: nextOp replaced with this.ops[this.index - 1]
Mutant 628 in OpIterator.ts: nextOp replaced with this.ops[this.index + 1]
Mutant 629 in OpIterator.ts: nextOp replaced with this.ops.length
Mutant 630 in OpIterator.ts: length >= opLength - offset replaced with length > opLength - offset
Mutant 631 in OpIterator.ts: length >= opLength - offset replaced with length <= opLength - offset
Mutant 632 in OpIterator.ts: length >= opLength - offset replaced with length >= opLength
Mutant 633 in OpIterator.ts: typeof nextOp.delete === 'number' replaced with typeof nextOp.retain === 'number'
Mutant 634 in OpIterator.ts: nextOp.attributes replaced with nextOp.attributes.length
Mutant 635 in OpIterator.ts: nextOp.attributes replaced with nextOp.attributes[0]
Mutant 636 in OpIterator.ts: nextOp.attributes replaced with nextOp.attributes.filter(op => op.name === 'bold')
Mutant 637 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'string'
Mutant 638 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'undefined'
Mutant 639 in OpIterator.ts: typeof nextOp.retain === 'number' replaced with typeof nextOp.retain === 'object'
Mutant 640 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain !== 'object' || nextOp.retain === null
Mutant 641 in OpIterator.ts: typeof nextOp.retain === 'object' && nextOp.retain !== null replaced with typeof nextOp.retain === 'number'
Mutant 642 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with typeof nextOp.insert !== 'string'
Mutant 643 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with typeof nextOp.insert === 'number'
Mutant 644 in OpIterator.ts: typeof nextOp.insert === 'string' replaced with typeof nextOp.insert === 'object'
Mutant 645 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(offset + length)
Mutant 646 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(offset * length)
Mutant 647 in OpIterator.ts: nextOp.insert.substr(offset, length) replaced with nextOp.insert.substr(offset - length)
Mutant 648 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.replace
Mutant 649 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.insert.split
Mutant 650 in OpIterator.ts: nextOp.insert.substr replaced with nextOp.length.substr
Mutant 651 in OpIterator.ts: offset replaced with offset + 1
Mutant 652 in OpIterator.ts: offset replaced with length
Mutant 653 in OpIterator.ts: offset replaced with Math.min(offset + length, this.offset)
Mutant 654 in OpIterator.ts: length replaced with length - offset
Mutant 655 in OpIterator.ts: length replaced with length * 2
Mutant 656 in OpIterator.ts: length replaced with length - 1
Mutant 657 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + 1]
Mutant 658 in OpIterator.ts: this.ops[this.index] replaced with this.index + this.offset
Mutant 659 in OpIterator.ts: this.ops[this.index] replaced with this.ops[this.index + this.offset]
Mutant 660 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null || typeof op.insert === 'string'
Mutant 661 in OpIterator.ts: typeof op.retain === 'number' || typeof op.retain === 'object' && op.retain !== null replaced with typeof op.retain === 'number' && (typeof op.retain === 'object' || op.retain !== null)
Mutant 662 in OpIterator.ts: !this.hasNext() replaced with this.hasNext()
Mutant 663 in OpIterator.ts: !this.hasNext() replaced with !this.peek().hasNext()
Mutant 664 in OpIterator.ts: this.hasNext replaced with this.hasNext ? 1 : 0
Mutant 665 in OpIterator.ts: this.hasNext replaced with this.hasNext + 1
Mutant 666 in OpIterator.ts: this.hasNext replaced with this.hasNext - 1
Mutant 667 in OpIterator.ts: this.offset === 0 replaced with this.offset == 0
Mutant 668 in OpIterator.ts: this.offset === 0 replaced with this.offset > 0
Mutant 669 in OpIterator.ts: this.offset === 0 replaced with this.offset >= 1
Mutant 670 in OpIterator.ts: this.index replaced with this.ops.length - this.index
Mutant 671 in OpIterator.ts: this.index replaced with this.ops.length - this.offset
Mutant 672 in OpIterator.ts: this.index replaced with this.index - this.offset
Mutant 673 in OpIterator.ts: this.index replaced with this.ops.length
Mutant 674 in OpIterator.ts: this.index replaced with this.index - 1
Mutant 675 in OpIterator.ts: this.index replaced with this.ops.length - this.index
Mutant 676 in OpIterator.ts: rest replaced with rest.slice(1)
Mutant 677 in OpIterator.ts: rest replaced with rest.splice(0, 1)
Mutant 678 in OpIterator.ts: rest replaced with rest.pop()
[32m12:54:19 (2852) INFO Instrumenter[39m Instrumented 4 source file(s) with 679 mutant(s)
[32m12:54:19 (2852) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m12:54:21 (2852) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m12:54:21 (2852) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m12:54:25 (2852) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4726 ms, overhead 0 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~56m) 2/679 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~56m) 4/679 tested (3 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~56m) 6/679 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~55m) 8/679 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~55m) 10/679 tested (5 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~55m) 12/679 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~51m) 15/679 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~51m) 17/679 tested (5 survived, 0 timed out)
Mutation testing 2% (elapsed: ~1m, remaining: ~52m) 19/679 tested (6 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~52m) 21/679 tested (6 survived, 0 timed out)
Mutation testing 3% (elapsed: ~1m, remaining: ~52m) 23/679 tested (6 survived, 0 timed out)
Mutation testing 3% (elapsed: ~2m, remaining: ~52m) 25/679 tested (7 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~50m) 28/679 tested (10 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~50m) 30/679 tested (11 survived, 0 timed out)
Mutation testing 4% (elapsed: ~2m, remaining: ~50m) 32/679 tested (13 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~50m) 34/679 tested (14 survived, 0 timed out)
Mutation testing 5% (elapsed: ~2m, remaining: ~50m) 36/679 tested (16 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~50m) 38/679 tested (16 survived, 0 timed out)
Mutation testing 5% (elapsed: ~3m, remaining: ~50m) 40/679 tested (16 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~49m) 43/679 tested (16 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~49m) 45/679 tested (16 survived, 0 timed out)
Mutation testing 6% (elapsed: ~3m, remaining: ~49m) 47/679 tested (16 survived, 0 timed out)
Mutation testing 7% (elapsed: ~3m, remaining: ~49m) 49/679 tested (16 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~49m) 51/679 tested (16 survived, 0 timed out)
Mutation testing 7% (elapsed: ~4m, remaining: ~49m) 53/679 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~48m) 56/679 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~48m) 58/679 tested (16 survived, 0 timed out)
Mutation testing 8% (elapsed: ~4m, remaining: ~48m) 60/679 tested (17 survived, 0 timed out)
Mutation testing 9% (elapsed: ~4m, remaining: ~48m) 62/679 tested (18 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~48m) 64/679 tested (18 survived, 0 timed out)
Mutation testing 9% (elapsed: ~5m, remaining: ~47m) 66/679 tested (19 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~47m) 69/679 tested (19 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~47m) 71/679 tested (19 survived, 0 timed out)
Mutation testing 10% (elapsed: ~5m, remaining: ~47m) 73/679 tested (19 survived, 0 timed out)
Mutation testing 11% (elapsed: ~5m, remaining: ~46m) 75/679 tested (20 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~46m) 77/679 tested (20 survived, 0 timed out)
Mutation testing 11% (elapsed: ~6m, remaining: ~46m) 80/679 tested (21 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~46m) 82/679 tested (23 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~46m) 84/679 tested (24 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~45m) 86/679 tested (24 survived, 0 timed out)
Mutation testing 12% (elapsed: ~6m, remaining: ~45m) 88/679 tested (24 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~45m) 91/679 tested (24 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~45m) 93/679 tested (24 survived, 0 timed out)
Mutation testing 13% (elapsed: ~7m, remaining: ~45m) 95/679 tested (24 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~45m) 97/679 tested (24 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~44m) 99/679 tested (24 survived, 0 timed out)
Mutation testing 14% (elapsed: ~7m, remaining: ~44m) 101/679 tested (24 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~44m) 103/679 tested (24 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~44m) 105/679 tested (24 survived, 0 timed out)
Mutation testing 15% (elapsed: ~8m, remaining: ~44m) 108/679 tested (24 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~43m) 110/679 tested (25 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~43m) 112/679 tested (26 survived, 0 timed out)
Mutation testing 16% (elapsed: ~8m, remaining: ~43m) 114/679 tested (27 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~43m) 116/679 tested (27 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~43m) 118/679 tested (27 survived, 0 timed out)
Mutation testing 17% (elapsed: ~9m, remaining: ~43m) 121/679 tested (27 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~42m) 123/679 tested (28 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~42m) 125/679 tested (28 survived, 0 timed out)
Mutation testing 18% (elapsed: ~9m, remaining: ~42m) 127/679 tested (28 survived, 0 timed out)
Mutation testing 18% (elapsed: ~10m, remaining: ~42m) 129/679 tested (28 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~42m) 131/679 tested (28 survived, 0 timed out)
Mutation testing 19% (elapsed: ~10m, remaining: ~42m) 134/679 tested (28 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~41m) 136/679 tested (28 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~41m) 138/679 tested (28 survived, 0 timed out)
Mutation testing 20% (elapsed: ~10m, remaining: ~41m) 140/679 tested (28 survived, 0 timed out)
Mutation testing 20% (elapsed: ~11m, remaining: ~41m) 142/679 tested (28 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~41m) 144/679 tested (29 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~41m) 147/679 tested (29 survived, 0 timed out)
Mutation testing 21% (elapsed: ~11m, remaining: ~40m) 149/679 tested (29 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~40m) 151/679 tested (29 survived, 0 timed out)
Mutation testing 22% (elapsed: ~11m, remaining: ~40m) 153/679 tested (29 survived, 0 timed out)
Mutation testing 22% (elapsed: ~12m, remaining: ~40m) 155/679 tested (29 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~40m) 157/679 tested (30 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~40m) 159/679 tested (30 survived, 0 timed out)
Mutation testing 23% (elapsed: ~12m, remaining: ~39m) 162/679 tested (32 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~39m) 164/679 tested (34 survived, 0 timed out)
Mutation testing 24% (elapsed: ~12m, remaining: ~39m) 166/679 tested (34 survived, 0 timed out)
Mutation testing 24% (elapsed: ~13m, remaining: ~39m) 168/679 tested (34 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~39m) 170/679 tested (34 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~39m) 172/679 tested (35 survived, 0 timed out)
Mutation testing 25% (elapsed: ~13m, remaining: ~38m) 175/679 tested (36 survived, 0 timed out)
Mutation testing 26% (elapsed: ~13m, remaining: ~38m) 177/679 tested (36 survived, 0 timed out)
Mutation testing 26% (elapsed: ~13m, remaining: ~38m) 179/679 tested (36 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~38m) 181/679 tested (36 survived, 0 timed out)
Mutation testing 26% (elapsed: ~14m, remaining: ~38m) 183/679 tested (37 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~38m) 185/679 tested (37 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~37m) 188/679 tested (37 survived, 0 timed out)
Mutation testing 27% (elapsed: ~14m, remaining: ~37m) 190/679 tested (37 survived, 0 timed out)
Mutation testing 28% (elapsed: ~14m, remaining: ~37m) 192/679 tested (37 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~37m) 194/679 tested (37 survived, 0 timed out)
Mutation testing 28% (elapsed: ~15m, remaining: ~37m) 196/679 tested (37 survived, 0 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~37m) 198/679 tested (37 survived, 0 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~36m) 201/679 tested (39 survived, 0 timed out)
Mutation testing 29% (elapsed: ~15m, remaining: ~36m) 203/679 tested (39 survived, 0 timed out)
Mutation testing 30% (elapsed: ~15m, remaining: ~36m) 205/679 tested (39 survived, 0 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~36m) 207/679 tested (39 survived, 0 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~36m) 209/679 tested (39 survived, 0 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~36m) 210/679 tested (39 survived, 1 timed out)
Mutation testing 30% (elapsed: ~16m, remaining: ~36m) 210/679 tested (39 survived, 1 timed out)
Mutation testing 31% (elapsed: ~16m, remaining: ~36m) 212/679 tested (39 survived, 2 timed out)
Mutation testing 31% (elapsed: ~16m, remaining: ~36m) 213/679 tested (39 survived, 3 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~36m) 214/679 tested (39 survived, 4 timed out)
Mutation testing 31% (elapsed: ~17m, remaining: ~36m) 216/679 tested (40 survived, 4 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~36m) 218/679 tested (40 survived, 4 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~36m) 220/679 tested (40 survived, 4 timed out)
Mutation testing 32% (elapsed: ~17m, remaining: ~36m) 222/679 tested (41 survived, 4 timed out)
Mutation testing 33% (elapsed: ~17m, remaining: ~35m) 225/679 tested (42 survived, 4 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~35m) 227/679 tested (42 survived, 4 timed out)
Mutation testing 33% (elapsed: ~18m, remaining: ~35m) 229/679 tested (42 survived, 4 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~35m) 231/679 tested (42 survived, 4 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~35m) 233/679 tested (42 survived, 4 timed out)
Mutation testing 34% (elapsed: ~18m, remaining: ~35m) 235/679 tested (42 survived, 4 timed out)
Mutation testing 35% (elapsed: ~18m, remaining: ~34m) 238/679 tested (43 survived, 4 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~34m) 240/679 tested (43 survived, 4 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~34m) 241/679 tested (43 survived, 4 timed out)
Mutation testing 35% (elapsed: ~19m, remaining: ~34m) 242/679 tested (43 survived, 5 timed out)
Mutation testing 36% (elapsed: ~19m, remaining: ~34m) 245/679 tested (43 survived, 5 timed out)
Mutation testing 36% (elapsed: ~19m, remaining: ~34m) 247/679 tested (43 survived, 5 timed out)
Mutation testing 36% (elapsed: ~19m, remaining: ~34m) 248/679 tested (44 survived, 5 timed out)
Mutation testing 36% (elapsed: ~20m, remaining: ~34m) 249/679 tested (44 survived, 6 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~34m) 252/679 tested (44 survived, 6 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~34m) 254/679 tested (44 survived, 6 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~33m) 256/679 tested (44 survived, 6 timed out)
Mutation testing 37% (elapsed: ~20m, remaining: ~34m) 256/679 tested (44 survived, 6 timed out)
Mutation testing 38% (elapsed: ~20m, remaining: ~33m) 259/679 tested (44 survived, 7 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~33m) 261/679 tested (45 survived, 7 timed out)
Mutation testing 38% (elapsed: ~21m, remaining: ~33m) 263/679 tested (45 survived, 7 timed out)
Mutation testing 39% (elapsed: ~21m, remaining: ~33m) 265/679 tested (45 survived, 7 timed out)
Mutation testing 39% (elapsed: ~21m, remaining: ~33m) 267/679 tested (45 survived, 7 timed out)
Mutation testing 39% (elapsed: ~21m, remaining: ~33m) 269/679 tested (45 survived, 7 timed out)
Mutation testing 40% (elapsed: ~21m, remaining: ~32m) 272/679 tested (45 survived, 7 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~32m) 274/679 tested (45 survived, 7 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~32m) 276/679 tested (45 survived, 7 timed out)
Mutation testing 40% (elapsed: ~22m, remaining: ~32m) 278/679 tested (45 survived, 7 timed out)
Mutation testing 41% (elapsed: ~22m, remaining: ~32m) 280/679 tested (47 survived, 7 timed out)
Mutation testing 41% (elapsed: ~22m, remaining: ~31m) 282/679 tested (48 survived, 7 timed out)
Mutation testing 41% (elapsed: ~22m, remaining: ~31m) 285/679 tested (49 survived, 7 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~31m) 287/679 tested (51 survived, 7 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~31m) 289/679 tested (51 survived, 7 timed out)
Mutation testing 42% (elapsed: ~23m, remaining: ~31m) 291/679 tested (51 survived, 7 timed out)
Mutation testing 43% (elapsed: ~23m, remaining: ~30m) 293/679 tested (51 survived, 7 timed out)
Mutation testing 43% (elapsed: ~23m, remaining: ~30m) 296/679 tested (51 survived, 7 timed out)
Mutation testing 43% (elapsed: ~23m, remaining: ~30m) 298/679 tested (51 survived, 7 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~30m) 300/679 tested (53 survived, 7 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~30m) 302/679 tested (54 survived, 7 timed out)
Mutation testing 44% (elapsed: ~24m, remaining: ~30m) 304/679 tested (54 survived, 7 timed out)
Mutation testing 45% (elapsed: ~24m, remaining: ~29m) 307/679 tested (54 survived, 7 timed out)
Mutation testing 45% (elapsed: ~24m, remaining: ~29m) 309/679 tested (54 survived, 7 timed out)
Mutation testing 45% (elapsed: ~24m, remaining: ~29m) 311/679 tested (54 survived, 7 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~29m) 313/679 tested (54 survived, 7 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~29m) 315/679 tested (54 survived, 7 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~28m) 317/679 tested (54 survived, 7 timed out)
Mutation testing 46% (elapsed: ~25m, remaining: ~28m) 318/679 tested (54 survived, 8 timed out)
Mutation testing 47% (elapsed: ~25m, remaining: ~28m) 320/679 tested (54 survived, 8 timed out)
Mutation testing 47% (elapsed: ~25m, remaining: ~28m) 321/679 tested (54 survived, 9 timed out)
Mutation testing 47% (elapsed: ~26m, remaining: ~28m) 321/679 tested (54 survived, 9 timed out)
Mutation testing 47% (elapsed: ~26m, remaining: ~29m) 322/679 tested (54 survived, 10 timed out)
Mutation testing 47% (elapsed: ~26m, remaining: ~28m) 324/679 tested (55 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~28m) 326/679 tested (57 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~28m) 328/679 tested (58 survived, 11 timed out)
Mutation testing 48% (elapsed: ~26m, remaining: ~28m) 330/679 tested (60 survived, 11 timed out)
Mutation testing 48% (elapsed: ~27m, remaining: ~28m) 332/679 tested (61 survived, 11 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~28m) 333/679 tested (61 survived, 12 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~28m) 335/679 tested (62 survived, 12 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~28m) 336/679 tested (63 survived, 12 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~27m) 338/679 tested (64 survived, 13 timed out)
Mutation testing 49% (elapsed: ~27m, remaining: ~27m) 339/679 tested (64 survived, 14 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 341/679 tested (66 survived, 14 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 341/679 tested (66 survived, 14 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 343/679 tested (66 survived, 15 timed out)
Mutation testing 50% (elapsed: ~28m, remaining: ~27m) 346/679 tested (66 survived, 15 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~27m) 348/679 tested (66 survived, 15 timed out)
Mutation testing 51% (elapsed: ~28m, remaining: ~27m) 350/679 tested (67 survived, 15 timed out)
Mutation testing 51% (elapsed: ~29m, remaining: ~26m) 352/679 tested (67 survived, 15 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~26m) 354/679 tested (67 survived, 15 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~26m) 357/679 tested (67 survived, 15 timed out)
Mutation testing 52% (elapsed: ~29m, remaining: ~26m) 359/679 tested (67 survived, 15 timed out)
Mutation testing 53% (elapsed: ~29m, remaining: ~26m) 361/679 tested (67 survived, 15 timed out)
Mutation testing 53% (elapsed: ~29m, remaining: ~25m) 363/679 tested (67 survived, 15 timed out)
Mutation testing 53% (elapsed: ~30m, remaining: ~25m) 365/679 tested (67 survived, 15 timed out)
Mutation testing 54% (elapsed: ~30m, remaining: ~25m) 367/679 tested (67 survived, 15 timed out)
Mutation testing 54% (elapsed: ~30m, remaining: ~25m) 370/679 tested (67 survived, 15 timed out)
Mutation testing 54% (elapsed: ~30m, remaining: ~25m) 372/679 tested (67 survived, 15 timed out)
Mutation testing 55% (elapsed: ~30m, remaining: ~25m) 374/679 tested (67 survived, 15 timed out)
Mutation testing 55% (elapsed: ~30m, remaining: ~24m) 376/679 tested (67 survived, 15 timed out)
Mutation testing 55% (elapsed: ~31m, remaining: ~24m) 378/679 tested (67 survived, 15 timed out)
Mutation testing 55% (elapsed: ~31m, remaining: ~24m) 380/679 tested (67 survived, 15 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~24m) 383/679 tested (67 survived, 15 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~24m) 385/679 tested (67 survived, 15 timed out)
Mutation testing 56% (elapsed: ~31m, remaining: ~23m) 387/679 tested (67 survived, 15 timed out)
Mutation testing 57% (elapsed: ~31m, remaining: ~23m) 389/679 tested (68 survived, 15 timed out)
Mutation testing 57% (elapsed: ~32m, remaining: ~23m) 391/679 tested (68 survived, 15 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~23m) 394/679 tested (68 survived, 15 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~23m) 396/679 tested (68 survived, 15 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~22m) 398/679 tested (68 survived, 15 timed out)
Mutation testing 58% (elapsed: ~32m, remaining: ~22m) 400/679 tested (68 survived, 15 timed out)
Mutation testing 59% (elapsed: ~32m, remaining: ~22m) 402/679 tested (68 survived, 15 timed out)
Mutation testing 59% (elapsed: ~33m, remaining: ~22m) 403/679 tested (68 survived, 15 timed out)
Mutation testing 59% (elapsed: ~33m, remaining: ~22m) 405/679 tested (68 survived, 16 timed out)
Mutation testing 59% (elapsed: ~33m, remaining: ~22m) 407/679 tested (68 survived, 16 timed out)
Mutation testing 60% (elapsed: ~33m, remaining: ~22m) 409/679 tested (68 survived, 16 timed out)
Mutation testing 60% (elapsed: ~33m, remaining: ~21m) 412/679 tested (68 survived, 16 timed out)
Mutation testing 60% (elapsed: ~33m, remaining: ~21m) 414/679 tested (68 survived, 16 timed out)
Mutation testing 61% (elapsed: ~34m, remaining: ~21m) 415/679 tested (68 survived, 16 timed out)
Mutation testing 61% (elapsed: ~34m, remaining: ~21m) 416/679 tested (68 survived, 17 timed out)
Mutation testing 61% (elapsed: ~34m, remaining: ~21m) 419/679 tested (68 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~21m) 421/679 tested (68 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~21m) 421/679 tested (68 survived, 17 timed out)
Mutation testing 62% (elapsed: ~34m, remaining: ~20m) 424/679 tested (68 survived, 18 timed out)
Mutation testing 62% (elapsed: ~35m, remaining: ~20m) 426/679 tested (68 survived, 18 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 428/679 tested (68 survived, 18 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 430/679 tested (68 survived, 18 timed out)
Mutation testing 63% (elapsed: ~35m, remaining: ~20m) 432/679 tested (68 survived, 18 timed out)
Mutation testing 64% (elapsed: ~35m, remaining: ~20m) 435/679 tested (68 survived, 18 timed out)
Mutation testing 64% (elapsed: ~35m, remaining: ~19m) 437/679 tested (68 survived, 18 timed out)
Mutation testing 64% (elapsed: ~36m, remaining: ~19m) 439/679 tested (68 survived, 18 timed out)
Mutation testing 64% (elapsed: ~36m, remaining: ~19m) 441/679 tested (68 survived, 18 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~19m) 443/679 tested (68 survived, 18 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~19m) 445/679 tested (68 survived, 18 timed out)
Mutation testing 65% (elapsed: ~36m, remaining: ~18m) 448/679 tested (68 survived, 18 timed out)
Mutation testing 66% (elapsed: ~36m, remaining: ~18m) 450/679 tested (68 survived, 18 timed out)
Mutation testing 66% (elapsed: ~37m, remaining: ~18m) 452/679 tested (68 survived, 18 timed out)
Mutation testing 66% (elapsed: ~37m, remaining: ~18m) 454/679 tested (68 survived, 18 timed out)
Mutation testing 67% (elapsed: ~37m, remaining: ~18m) 456/679 tested (68 survived, 18 timed out)
Mutation testing 67% (elapsed: ~37m, remaining: ~18m) 458/679 tested (68 survived, 18 timed out)
Mutation testing 67% (elapsed: ~37m, remaining: ~17m) 461/679 tested (68 survived, 18 timed out)
Mutation testing 68% (elapsed: ~37m, remaining: ~17m) 463/679 tested (68 survived, 18 timed out)
Mutation testing 68% (elapsed: ~38m, remaining: ~17m) 465/679 tested (68 survived, 18 timed out)
Mutation testing 68% (elapsed: ~38m, remaining: ~17m) 467/679 tested (68 survived, 18 timed out)
Mutation testing 69% (elapsed: ~38m, remaining: ~17m) 469/679 tested (69 survived, 18 timed out)
Mutation testing 69% (elapsed: ~38m, remaining: ~17m) 471/679 tested (70 survived, 18 timed out)
Mutation testing 69% (elapsed: ~38m, remaining: ~16m) 473/679 tested (70 survived, 18 timed out)
Mutation testing 70% (elapsed: ~38m, remaining: ~16m) 476/679 tested (70 survived, 18 timed out)
Mutation testing 70% (elapsed: ~39m, remaining: ~16m) 478/679 tested (70 survived, 18 timed out)
Mutation testing 70% (elapsed: ~39m, remaining: ~16m) 480/679 tested (70 survived, 18 timed out)
Mutation testing 70% (elapsed: ~39m, remaining: ~16m) 482/679 tested (70 survived, 18 timed out)
Mutation testing 71% (elapsed: ~39m, remaining: ~15m) 484/679 tested (70 survived, 18 timed out)
Mutation testing 71% (elapsed: ~39m, remaining: ~15m) 486/679 tested (70 survived, 18 timed out)
Mutation testing 72% (elapsed: ~39m, remaining: ~15m) 489/679 tested (70 survived, 18 timed out)
Mutation testing 72% (elapsed: ~40m, remaining: ~15m) 491/679 tested (71 survived, 18 timed out)
Mutation testing 72% (elapsed: ~40m, remaining: ~15m) 493/679 tested (71 survived, 18 timed out)
Mutation testing 72% (elapsed: ~40m, remaining: ~14m) 495/679 tested (71 survived, 18 timed out)
Mutation testing 73% (elapsed: ~40m, remaining: ~14m) 497/679 tested (71 survived, 18 timed out)
Mutation testing 73% (elapsed: ~40m, remaining: ~14m) 500/679 tested (71 survived, 18 timed out)
Mutation testing 73% (elapsed: ~40m, remaining: ~14m) 502/679 tested (71 survived, 18 timed out)
Mutation testing 74% (elapsed: ~41m, remaining: ~14m) 504/679 tested (71 survived, 18 timed out)
Mutation testing 74% (elapsed: ~41m, remaining: ~14m) 506/679 tested (71 survived, 18 timed out)
Mutation testing 74% (elapsed: ~41m, remaining: ~13m) 508/679 tested (71 survived, 18 timed out)
Mutation testing 75% (elapsed: ~41m, remaining: ~13m) 510/679 tested (71 survived, 18 timed out)
Mutation testing 75% (elapsed: ~41m, remaining: ~13m) 513/679 tested (71 survived, 18 timed out)
Mutation testing 75% (elapsed: ~41m, remaining: ~13m) 515/679 tested (71 survived, 18 timed out)
Mutation testing 76% (elapsed: ~42m, remaining: ~13m) 517/679 tested (71 survived, 18 timed out)
Mutation testing 76% (elapsed: ~42m, remaining: ~12m) 519/679 tested (71 survived, 18 timed out)
Mutation testing 76% (elapsed: ~42m, remaining: ~12m) 521/679 tested (71 survived, 18 timed out)
Mutation testing 77% (elapsed: ~42m, remaining: ~12m) 523/679 tested (71 survived, 18 timed out)
Mutation testing 77% (elapsed: ~42m, remaining: ~12m) 525/679 tested (71 survived, 18 timed out)
Mutation testing 77% (elapsed: ~42m, remaining: ~12m) 528/679 tested (71 survived, 18 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~12m) 530/679 tested (72 survived, 18 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~12m) 530/679 tested (72 survived, 18 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~11m) 532/679 tested (72 survived, 19 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~11m) 533/679 tested (72 survived, 20 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~11m) 534/679 tested (72 survived, 20 timed out)
Mutation testing 78% (elapsed: ~43m, remaining: ~11m) 536/679 tested (72 survived, 21 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 538/679 tested (72 survived, 21 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 540/679 tested (74 survived, 21 timed out)
Mutation testing 79% (elapsed: ~44m, remaining: ~11m) 542/679 tested (74 survived, 21 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~11m) 544/679 tested (74 survived, 21 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~10m) 546/679 tested (74 survived, 21 timed out)
Mutation testing 80% (elapsed: ~44m, remaining: ~10m) 547/679 tested (74 survived, 22 timed out)
Mutation testing 80% (elapsed: ~45m, remaining: ~10m) 548/679 tested (74 survived, 23 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 550/679 tested (74 survived, 23 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 550/679 tested (74 survived, 23 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 551/679 tested (74 survived, 24 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 552/679 tested (74 survived, 25 timed out)
Mutation testing 81% (elapsed: ~45m, remaining: ~10m) 554/679 tested (74 survived, 26 timed out)
Mutation testing 81% (elapsed: ~46m, remaining: ~10m) 556/679 tested (74 survived, 26 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~10m) 558/679 tested (74 survived, 26 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~9m) 560/679 tested (74 survived, 26 timed out)
Mutation testing 82% (elapsed: ~46m, remaining: ~9m) 562/679 tested (74 survived, 26 timed out)
Mutation testing 83% (elapsed: ~46m, remaining: ~9m) 564/679 tested (74 survived, 26 timed out)
Mutation testing 83% (elapsed: ~46m, remaining: ~9m) 567/679 tested (74 survived, 26 timed out)
Mutation testing 83% (elapsed: ~47m, remaining: ~9m) 569/679 tested (74 survived, 26 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 571/679 tested (74 survived, 26 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 573/679 tested (74 survived, 26 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 574/679 tested (74 survived, 27 timed out)
Mutation testing 84% (elapsed: ~47m, remaining: ~8m) 576/679 tested (74 survived, 27 timed out)
Mutation testing 85% (elapsed: ~47m, remaining: ~8m) 578/679 tested (74 survived, 27 timed out)
Mutation testing 85% (elapsed: ~48m, remaining: ~8m) 580/679 tested (74 survived, 27 timed out)
Mutation testing 85% (elapsed: ~48m, remaining: ~7m) 583/679 tested (74 survived, 27 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 585/679 tested (74 survived, 27 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 587/679 tested (74 survived, 27 timed out)
Mutation testing 86% (elapsed: ~48m, remaining: ~7m) 589/679 tested (75 survived, 27 timed out)
Mutation testing 87% (elapsed: ~48m, remaining: ~7m) 591/679 tested (75 survived, 27 timed out)
Mutation testing 87% (elapsed: ~49m, remaining: ~7m) 594/679 tested (75 survived, 27 timed out)
Mutation testing 87% (elapsed: ~49m, remaining: ~6m) 596/679 tested (75 survived, 27 timed out)
Mutation testing 88% (elapsed: ~49m, remaining: ~6m) 598/679 tested (76 survived, 27 timed out)
Mutation testing 88% (elapsed: ~49m, remaining: ~6m) 600/679 tested (76 survived, 27 timed out)
Mutation testing 88% (elapsed: ~49m, remaining: ~6m) 602/679 tested (76 survived, 27 timed out)
Mutation testing 89% (elapsed: ~49m, remaining: ~6m) 605/679 tested (76 survived, 27 timed out)
Mutation testing 89% (elapsed: ~50m, remaining: ~5m) 607/679 tested (76 survived, 27 timed out)
Mutation testing 89% (elapsed: ~50m, remaining: ~5m) 609/679 tested (76 survived, 27 timed out)
Mutation testing 89% (elapsed: ~50m, remaining: ~5m) 611/679 tested (76 survived, 27 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 613/679 tested (76 survived, 27 timed out)
Mutation testing 90% (elapsed: ~50m, remaining: ~5m) 615/679 tested (76 survived, 27 timed out)
Mutation testing 91% (elapsed: ~50m, remaining: ~5m) 618/679 tested (78 survived, 27 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 619/679 tested (78 survived, 27 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 620/679 tested (78 survived, 28 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 623/679 tested (80 survived, 28 timed out)
Mutation testing 91% (elapsed: ~51m, remaining: ~4m) 624/679 tested (80 survived, 28 timed out)
Mutation testing 92% (elapsed: ~51m, remaining: ~4m) 625/679 tested (80 survived, 29 timed out)
Mutation testing 92% (elapsed: ~51m, remaining: ~4m) 626/679 tested (81 survived, 29 timed out)
Mutation testing 92% (elapsed: ~52m, remaining: ~4m) 628/679 tested (81 survived, 30 timed out)
Mutation testing 92% (elapsed: ~52m, remaining: ~4m) 630/679 tested (81 survived, 30 timed out)
Mutation testing 92% (elapsed: ~52m, remaining: ~3m) 631/679 tested (81 survived, 30 timed out)
Mutation testing 93% (elapsed: ~52m, remaining: ~3m) 632/679 tested (81 survived, 31 timed out)
Mutation testing 93% (elapsed: ~52m, remaining: ~3m) 633/679 tested (81 survived, 32 timed out)
Mutation testing 93% (elapsed: ~52m, remaining: ~3m) 636/679 tested (81 survived, 32 timed out)
Mutation testing 93% (elapsed: ~53m, remaining: ~3m) 638/679 tested (81 survived, 32 timed out)
Mutation testing 94% (elapsed: ~53m, remaining: ~3m) 640/679 tested (81 survived, 32 timed out)
Mutation testing 94% (elapsed: ~53m, remaining: ~3m) 642/679 tested (81 survived, 32 timed out)
Mutation testing 94% (elapsed: ~53m, remaining: ~2m) 644/679 tested (81 survived, 32 timed out)
Mutation testing 95% (elapsed: ~53m, remaining: ~2m) 647/679 tested (81 survived, 32 timed out)
Mutation testing 95% (elapsed: ~53m, remaining: ~2m) 649/679 tested (81 survived, 32 timed out)
Mutation testing 95% (elapsed: ~54m, remaining: ~2m) 651/679 tested (81 survived, 32 timed out)
Mutation testing 96% (elapsed: ~54m, remaining: ~2m) 653/679 tested (81 survived, 32 timed out)
Mutation testing 96% (elapsed: ~54m, remaining: ~1m) 655/679 tested (81 survived, 32 timed out)
Mutation testing 96% (elapsed: ~54m, remaining: ~1m) 658/679 tested (81 survived, 32 timed out)
Mutation testing 97% (elapsed: ~54m, remaining: ~1m) 660/679 tested (81 survived, 32 timed out)
Mutation testing 97% (elapsed: ~54m, remaining: ~1m) 662/679 tested (81 survived, 32 timed out)
Mutation testing 97% (elapsed: ~55m, remaining: ~1m) 664/679 tested (81 survived, 32 timed out)
Mutation testing 98% (elapsed: ~55m, remaining: ~1m) 666/679 tested (81 survived, 32 timed out)
Mutation testing 98% (elapsed: ~55m, remaining: <1m) 669/679 tested (82 survived, 32 timed out)
Mutation testing 98% (elapsed: ~55m, remaining: <1m) 671/679 tested (82 survived, 32 timed out)
Mutation testing 99% (elapsed: ~55m, remaining: <1m) 673/679 tested (83 survived, 32 timed out)
Mutation testing 99% (elapsed: ~55m, remaining: <1m) 675/679 tested (83 survived, 32 timed out)
Mutation testing 99% (elapsed: ~56m, remaining: <1m) 677/679 tested (83 survived, 32 timed out)

All tests
  ✓ All tests (killed 564)

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (!a || typeof a !== 'object') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:14:9
-       if (typeof a !== 'object') {
+       if (a !== Object(a)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (typeof b === 'undefined') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (b === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:17:9
-       if (typeof b !== 'object') {
+       if (!Object.keys(b).length) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:23:13
-           if (attributes[key] != null) {
+           if (attributes[key] !== null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:30:11
-         if (a[key] !== undefined && b[key] === undefined) {
+         if (a[key] === undefined || b[key] === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:34:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.keys(attributes).reverse()).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:34:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(Object.keys(attributes).sort()).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (a === null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:41:9
-       if (typeof a !== 'object') {
+       if (a.constructor.name !== 'Object') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (b == null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (b === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:44:9
-       if (typeof b !== 'object') {
+       if (b && typeof b !== 'object') {

[Survived] PrecomputedMutator
src/AttributeMap.ts:47:36
-       const attributes = Object.keys(a)
+       const attributes = Object.keys(a || b)

[Survived] PrecomputedMutator
src/AttributeMap.ts:47:36
-       const attributes = Object.keys(a)
+       const attributes = Object.keys(a ? a : b)

[Survived] PrecomputedMutator
src/AttributeMap.ts:82:9
-       if (typeof a !== 'object') {
+       if (a == null) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:82:9
-       if (typeof a !== 'object') {
+       if (a === undefined) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:85:9
-       if (typeof b !== 'object') {
+       if (b !== Object(b)) {

[Survived] PrecomputedMutator
src/AttributeMap.ts:97:24
-       return Object.keys(attributes).length > 0 ? attributes : undefined;
+       return Object.keys(b).length > 0 ? attributes : undefined;

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(undefined); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(NaN); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:8:44
-   const NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()
+   const NULL_CHARACTER = String.fromCharCode(Infinity); // Placeholder char for embed in diff()

[Survived] PrecomputedMutator
src/Delta.ts:23:7
-     if (typeof b !== 'object' || b === null) {
+     if (typeof b !== 'object' && b !== null) {

[Survived] PrecomputedMutator
src/Delta.ts:74:9
-       if (typeof arg === 'string' && arg.length === 0) {
+       if (arg !== 'string' && arg.length === 0) {

[Survived] PrecomputedMutator
src/Delta.ts:74:9
-       if (typeof arg === 'string' && arg.length === 0) {
+       if (arg === 'string' || arg.length === 0) {

[Survived] PrecomputedMutator
src/Delta.ts:81:19
-         Object.keys(attributes).length > 0
+         Object.keys(Object.keys(attributes)).length > 0

[Survived] PrecomputedMutator
src/Delta.ts:89:9
-       if (length <= 0) {
+       if (length == 0) {

[Survived] PrecomputedMutator
src/Delta.ts:135:11
-         if (isEqual(newOp.attributes, lastOp.attributes)) {
+         if (JSON.stringify(newOp.attributes) === JSON.stringify(lastOp.attributes)) {

[Survived] PrecomputedMutator
src/Delta.ts:141:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== lastOp.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes !== null && typeof newOp.attributes === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes === null || typeof newOp.attributes === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:150:15
-             if (typeof newOp.attributes === 'object') {
+             if (newOp.attributes && typeof newOp.attributes === 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:157:9
-       if (index === this.ops.length) {
+       if (index > this.ops.length) {

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -1, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:160:7
-         this.ops.splice(index, 0, newOp);
+         this.ops.splice(index, -index, newOp);

[Survived] PrecomputedMutator
src/Delta.ts:167:9
-       if (lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes) {
+       if (lastOp != null && typeof lastOp.retain === 'number' && !lastOp.attributes) {

[Survived] PrecomputedMutator
src/Delta.ts:199:39
-       return this.ops.reduce(predicate, initialValue);
+       return this.ops.reduce(predicate, initialValue = 0);

[Survived] PrecomputedMutator
src/Delta.ts:204:11
-         if (elem.insert) {
+         if (elem.retain) {

[Survived] PrecomputedMutator
src/Delta.ts:225:11
-         if (index < start) {
+         if (start > index) {

[Survived] PrecomputedMutator
src/Delta.ts:242:7
-         firstOther != null &&
-         typeof firstOther.retain === 'number' &&
-         firstOther.attributes == null
+         firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null && Math.random() < 0.5

[Survived] PrecomputedMutator
src/Delta.ts:242:7
-         firstOther != null &&
-         typeof firstOther.retain === 'number' &&
-         firstOther.attributes == null
+         firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null && typeof firstOther.insert === 'object'

[Survived] PrecomputedMutator
src/Delta.ts:255:24
-           otherIter.next(firstOther.retain - firstLeft);
+           otherIter.next(Math.abs(firstOther.retain - firstLeft));

[Survived] PrecomputedMutator
src/Delta.ts:265:33
-           const length = Math.min(thisIter.peekLength(), otherIter.peekLength());
+           const length = Math.min(1, otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:268:13
-           if (otherOp.retain) {
+           if (otherOp.retain + 1) {

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0].insert, newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:13
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(delta.ops[0].retain, newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(this.ops[this.ops.length - 2], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(this.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:310:21
-               isEqual(delta.ops[delta.ops.length - 1], newOp)
+               isEqual(other.ops[0], newOp)

[Survived] PrecomputedMutator
src/Delta.ts:334:36
-         delta.ops = delta.ops.concat(other.ops.slice(1));
+         delta.ops = delta.ops.concat(other.ops.splice(1));

[Survived] PrecomputedMutator
src/Delta.ts:334:36
-         delta.ops = delta.ops.concat(other.ops.slice(1));
+         delta.ops = delta.ops.concat(other.ops.concat().slice(1));

[Survived] PrecomputedMutator
src/Delta.ts:334:36
-         delta.ops = delta.ops.concat(other.ops.slice(1));
+         delta.ops = delta.ops.concat(other.ops.slice(1).concat());

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(strings[1].length);

[Survived] PrecomputedMutator
src/Delta.ts:364:24
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(thisIter.length);

[Survived] PrecomputedMutator
src/Delta.ts:364:57
-               opLength = Math.min(otherIter.peekLength(), length);
+               opLength = Math.min(otherIter.peekLength(), 1);

[Survived] PrecomputedMutator
src/Delta.ts:365:42
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(opLength * 2));

[Survived] PrecomputedMutator
src/Delta.ts:365:42
-               retDelta.push(otherIter.next(opLength));
+               retDelta.push(otherIter.next(opLength + 1));

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.floor(length, thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:24
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.ceil(length, thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:33
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(1, thisIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, otherIter.peekLength());

[Survived] PrecomputedMutator
src/Delta.ts:368:41
-               opLength = Math.min(length, thisIter.peekLength());
+               opLength = Math.min(length, length);

[Survived] PrecomputedMutator
src/Delta.ts:370:29
-               retDelta.delete(opLength);
+               retDelta.delete(length);

[Survived] PrecomputedMutator
src/Delta.ts:407:12
-       while (iter.hasNext()) {
+       while (iter.hasNext() % 2 == 1) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (true) {

[Survived] PrecomputedMutator
src/Delta.ts:448:22
-             } else if (op.retain && op.attributes) {
+             } else if (op.attributes || true) {

[Survived] PrecomputedMutator
src/Delta.ts:457:23
-           const slice = base.slice(baseIndex, baseIndex + 1);
+           const slice = base.slice(baseIndex, baseIndex + 2);

[Survived] PrecomputedMutator
src/Delta.ts:480:42
-         return this.transformPosition(arg, priority);
+         return this.transformPosition(arg, priority && 1);

[Survived] PrecomputedMutator
src/Delta.ts:491:22
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(0)));

[Survived] PrecomputedMutator
src/Delta.ts:491:22
-           delta.retain(Op.length(thisIter.next()));
+           delta.retain(Op.length(thisIter.next(2)));

[Survived] PrecomputedMutator
src/Delta.ts:516:43
-               const embedType = Object.keys(thisData)[0];
+               const embedType = Object.keys(thisData || 0)[0];

[Survived] PrecomputedMutator
src/Delta.ts:519:19
-                 if (handler) {
+                 if (handler.property = true) {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (module.exports == 'object') {

[Survived] PrecomputedMutator
src/Delta.ts:570:5
-   if (typeof module === 'object') {
+   if (module.exports instanceof Object) {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (typeof op.retain === 'string') {

[Survived] PrecomputedMutator
src/Op.ts:18:16
-       } else if (typeof op.retain === 'object' && op.retain !== null) {
+       } else if (typeof op.insert === 'number') {

[Survived] PrecomputedMutator
src/OpIterator.ts:19:9
-       if (!length) {
+       if (!length > 0) {

[Survived] PrecomputedMutator
src/OpIterator.ts:94:16
-       } else if (this.offset === 0) {
+       } else if (this.offset == 0) {

[Survived] PrecomputedMutator
src/OpIterator.ts:95:29
-         return this.ops.slice(this.index);
+         return this.ops.slice(this.index - this.offset);

Ran 0.95 tests per mutant on average.
-----------------|---------|----------|-----------|------------|----------|----------|
File             | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------|---------|----------|-----------|------------|----------|----------|
All files        |   87.78 |      564 |        32 |         83 |        0 |        0 |
 AttributeMap.ts |   74.03 |       57 |         0 |         20 |        0 |        0 |
 Delta.ts        |   89.26 |      455 |        27 |         58 |        0 |        0 |
 Op.ts           |   60.00 |        2 |         1 |          2 |        0 |        0 |
 OpIterator.ts   |   94.74 |       50 |         4 |          3 |        0 |        0 |
-----------------|---------|----------|-----------|------------|----------|----------|
[32m13:50:31 (2852) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/delta/reports/mutation/mutation.html
[32m13:50:31 (2852) INFO MutationTestExecutor[39m Done in 56 minutes 13 seconds.

real	56m14.884s
user	81m58.522s
sys	3m23.132s
