*** using precomputed mutations ***
[32m19:21:03 (3039) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m19:21:03 (3039) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m19:21:03 (3039) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m19:21:03 (3039) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m19:21:03 (3039) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m19:21:04 (3039) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2050 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.25/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "string"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", function () {})
Mutant 5 in q.js: bootstrap replaced with "promise"
Mutant 6 in q.js: bootstrap replaced with null
Mutant 7 in q.js: bootstrap replaced with undefined
Mutant 8 in q.js: "promise" replaced with "buggy"
Mutant 9 in q.js: "promise" replaced with undefined
Mutant 10 in q.js: "promise" replaced with null
Mutant 11 in q.js: definition replaced with definition()
Mutant 12 in q.js: definition replaced with null
Mutant 13 in q.js: definition replaced with function () {}
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports !== "object" && typeof module === "object"
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module !== "object"
Mutant 16 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.foo
Mutant 17 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.bar
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.baz
Mutant 19 in q.js: definition replaced with "test"
Mutant 20 in q.js: definition replaced with 1 + 1
Mutant 21 in q.js: definition replaced with null
Mutant 22 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 23 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "object"
Mutant 24 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "function"
Mutant 25 in q.js: !ses.ok() replaced with !ses.notOk()
Mutant 26 in q.js: !ses.ok() replaced with ses.ok()
Mutant 27 in q.js: ses.ok replaced with ses.maybeOk
Mutant 28 in q.js: ses.ok replaced with ses.ok && ses.notOk
Mutant 29 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" || typeof self !== "undefined" || typeof global !== "undefined"
Mutant 30 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" || typeof self !== "undefined" || typeof this !== "undefined"
Mutant 31 in q.js: captureLine replaced with captureLine + 1
Mutant 32 in q.js: captureLine replaced with captureLine - 1
Mutant 33 in q.js: captureLine replaced with captureLine * 2
Mutant 34 in q.js: head.next replaced with head.next.next
Mutant 35 in q.js: head.next replaced with head.next.next.next
Mutant 36 in q.js: head.next replaced with head.next.next.next.next
Mutant 37 in q.js: domain replaced with domain && domain.exit()
Mutant 38 in q.js: domain replaced with domain || domain.exit()
Mutant 39 in q.js: domain replaced with domain ? domain.exit() : null
Mutant 40 in q.js: domain.enter replaced with domain.exit
Mutant 41 in q.js: domain.enter replaced with domain.run
Mutant 42 in q.js: domain.enter replaced with domain.bind
Mutant 43 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, null)
Mutant 44 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, undefined)
Mutant 45 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, 0)
Mutant 46 in q.js: task replaced with 1 + task
Mutant 47 in q.js: task replaced with task + 1
Mutant 48 in q.js: task replaced with task.foo
Mutant 49 in q.js: domain replaced with null
Mutant 50 in q.js: domain replaced with undefined
Mutant 51 in q.js: domain replaced with {}
Mutant 52 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 53 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 54 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 55 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 56 in q.js: laterQueue.pop replaced with laterQueue.length
Mutant 57 in q.js: task replaced with undefined
Mutant 58 in q.js: task replaced with null
Mutant 59 in q.js: task replaced with () => {}
Mutant 60 in q.js: task replaced with task + 1
Mutant 61 in q.js: task replaced with task * 2
Mutant 62 in q.js: task replaced with task - 1
Mutant 63 in q.js: isNodeJS replaced with !isNodeJS
Mutant 64 in q.js: isNodeJS replaced with isBrowser
Mutant 65 in q.js: domain replaced with domain.exit()
Mutant 66 in q.js: domain replaced with domain.enter()
Mutant 67 in q.js: domain.exit replaced with domain.enter
Mutant 68 in q.js: domain.exit replaced with domain.run
Mutant 69 in q.js: domain.exit replaced with domain.dispose
Mutant 70 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 71 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 72 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "hello")
Mutant 73 in q.js: flush replaced with flush()
Mutant 74 in q.js: flush replaced with flush(1)
Mutant 75 in q.js: flush replaced with flush.call(null)
Mutant 76 in q.js: 0 replaced with 1
Mutant 77 in q.js: 0 replaced with -1
Mutant 78 in q.js: 0 replaced with Infinity
Mutant 79 in q.js: domain replaced with !domain
Mutant 80 in q.js: domain replaced with domain && false
Mutant 81 in q.js: domain replaced with domain || true
Mutant 82 in q.js: domain.enter replaced with domain.exit
Mutant 83 in q.js: domain replaced with !domain
Mutant 84 in q.js: domain replaced with domain.foo
Mutant 85 in q.js: domain replaced with domain()
Mutant 86 in q.js: domain.exit replaced with domain.enter
Mutant 87 in q.js: !flushing replaced with flushing
Mutant 88 in q.js: !flushing replaced with !flushing && true
Mutant 89 in q.js: !flushing replaced with flushing || false
Mutant 90 in q.js: flush replaced with flush()
Mutant 91 in q.js: flush replaced with flush(1)
Mutant 92 in q.js: flush replaced with flush(tail)
Mutant 93 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 94 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 95 in q.js: typeof window !== "undefined" replaced with typeof window !== "string"
Mutant 96 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 97 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 98 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(this)
Mutant 99 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 100 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 101 in q.js: window replaced with undefined
Mutant 102 in q.js: window replaced with null
Mutant 103 in q.js: window replaced with {}
Mutant 104 in q.js: flush replaced with flush()
Mutant 105 in q.js: flush replaced with flush(undefined)
Mutant 106 in q.js: flush replaced with flush(null)
Mutant 107 in q.js: flush replaced with flush()
Mutant 108 in q.js: flush replaced with laterQueue.pop()
Mutant 109 in q.js: flush replaced with requestTick()
Mutant 110 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 111 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 112 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "function"
Mutant 113 in q.js: flush replaced with undefined
Mutant 114 in q.js: flush replaced with null
Mutant 115 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 116 in q.js: 0 replaced with 1
Mutant 117 in q.js: 0 replaced with "hello"
Mutant 118 in q.js: 0 replaced with null
Mutant 119 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 120 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 121 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 122 in q.js: setTimeout replaced with setInterval
Mutant 123 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 124 in q.js: flush replaced with flush()
Mutant 125 in q.js: flush replaced with requestTick()
Mutant 126 in q.js: 0 replaced with 1
Mutant 127 in q.js: 0 replaced with -1
Mutant 128 in q.js: 0 replaced with null
Mutant 129 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 130 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 131 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, Math.random())
Mutant 132 in q.js: setTimeout replaced with setInterval
Mutant 133 in q.js: flush replaced with flush()
Mutant 134 in q.js: flush replaced with requestAnimationFrame(flush)
Mutant 135 in q.js: 0 replaced with 1
Mutant 136 in q.js: 0 replaced with -1
Mutant 137 in q.js: 0 replaced with NaN
Mutant 138 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 139 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 140 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 141 in q.js: task replaced with null
Mutant 142 in q.js: task replaced with undefined
Mutant 143 in q.js: task replaced with 0
Mutant 144 in q.js: !flushing replaced with flushing
Mutant 145 in q.js: !flushing replaced with flushing || true
Mutant 146 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 147 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments.length)
Mutant 148 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 149 in q.js: call.apply replaced with call.bind
Mutant 150 in q.js: call.apply replaced with call.call
Mutant 151 in q.js: f replaced with f + 1
Mutant 152 in q.js: f replaced with f - 1
Mutant 153 in q.js: f replaced with f * 2
Mutant 154 in q.js: arguments replaced with [1, 2, 3]
Mutant 155 in q.js: arguments replaced with null
Mutant 156 in q.js: arguments replaced with undefined
Mutant 157 in q.js: Array.prototype.slice replaced with Array.prototype.reverse
Mutant 158 in q.js: Array.prototype.slice replaced with Array.prototype.splice
Mutant 159 in q.js: Array.prototype.slice replaced with Array.prototype.concat
Mutant 160 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 161 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 162 in q.js: arguments.length === 1 replaced with arguments.length === 2
Mutant 163 in q.js: 1 replaced with 0
Mutant 164 in q.js: 1 replaced with -1
Mutant 165 in q.js: 1 replaced with length - 1
Mutant 166 in q.js: index in this replaced with index > this.length
Mutant 167 in q.js: index in this replaced with index < this.length
Mutant 168 in q.js: index in this replaced with index !== this.length
Mutant 169 in q.js: ++index >= length replaced with index > length
Mutant 170 in q.js: ++index >= length replaced with index < length
Mutant 171 in q.js: ++index >= length replaced with index == length
Mutant 172 in q.js: index < length replaced with index <= length
Mutant 173 in q.js: index < length replaced with index > length
Mutant 174 in q.js: index < length replaced with index == length
Mutant 175 in q.js: index++ replaced with index--
Mutant 176 in q.js: index++ replaced with index += 2
Mutant 177 in q.js: index++ replaced with index = 0
Mutant 178 in q.js: index in this replaced with index > this
Mutant 179 in q.js: index in this replaced with index < this
Mutant 180 in q.js: index in this replaced with index == this
Mutant 181 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 182 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 183 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index * 2)
Mutant 184 in q.js: basis replaced with basis + 1
Mutant 185 in q.js: basis replaced with basis * 2
Mutant 186 in q.js: basis replaced with basis - 1
Mutant 187 in q.js: this[index] replaced with this[index] + 1
Mutant 188 in q.js: this[index] replaced with this[index] - 1
Mutant 189 in q.js: this[index] replaced with this[index] * 2
Mutant 190 in q.js: index replaced with index + 1
Mutant 191 in q.js: index replaced with index - 1
Mutant 192 in q.js: index replaced with index * 2
Mutant 193 in q.js: i < this.length replaced with i <= this.length
Mutant 194 in q.js: i < this.length replaced with i > this.length
Mutant 195 in q.js: i < this.length replaced with i != this.length
Mutant 196 in q.js: i++ replaced with i--
Mutant 197 in q.js: i++ replaced with i += 2
Mutant 198 in q.js: i++ replaced with i = 0
Mutant 199 in q.js: this[i] === value replaced with this[i] !== value
Mutant 200 in q.js: this[i] === value replaced with this[i] === undefined
Mutant 201 in q.js: this[i] === value replaced with this[i] === null
Mutant 202 in q.js: collect.push replaced with collect.pop
Mutant 203 in q.js: collect.push replaced with collect.shift
Mutant 204 in q.js: collect.push replaced with collect.unshift
Mutant 205 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) + 1
Mutant 206 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) - 1
Mutant 207 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) * 2
Mutant 208 in q.js: callback.call replaced with callback.apply
Mutant 209 in q.js: callback.call replaced with callback.bind
Mutant 210 in q.js: thisp replaced with null
Mutant 211 in q.js: thisp replaced with undefined
Mutant 212 in q.js: thisp replaced with {}
Mutant 213 in q.js: value replaced with value + 1
Mutant 214 in q.js: value replaced with value * 2
Mutant 215 in q.js: value replaced with value - 1
Mutant 216 in q.js: index replaced with index + 1
Mutant 217 in q.js: index replaced with index - 1
Mutant 218 in q.js: index replaced with index * 2
Mutant 219 in q.js: self replaced with self.length
Mutant 220 in q.js: self replaced with self[0]
Mutant 221 in q.js: self replaced with self.pop()
Mutant 222 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 223 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key in object.keys()) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 224 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key in Object.keys(object)) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 225 in q.js: object replaced with null
Mutant 226 in q.js: object replaced with undefined
Mutant 227 in q.js: object replaced with {}
Mutant 228 in q.js: object_hasOwnProperty(object, key) replaced with !object_hasOwnProperty(object, key)
Mutant 229 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== undefined
Mutant 230 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && typeof object[key] !== "undefined"
Mutant 231 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object)
Mutant 232 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(key)
Mutant 233 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key])
Mutant 234 in q.js: object_hasOwnProperty replaced with key in this
Mutant 235 in q.js: object replaced with null
Mutant 236 in q.js: object replaced with {}
Mutant 237 in q.js: key replaced with key + 1
Mutant 238 in q.js: key replaced with key - 1
Mutant 239 in q.js: key replaced with key * 2
Mutant 240 in q.js: Object replaced with null
Mutant 241 in q.js: Object replaced with undefined
Mutant 242 in q.js: Object replaced with {}
Mutant 243 in q.js: value replaced with value + 1
Mutant 244 in q.js: value replaced with value * 2
Mutant 245 in q.js: value replaced with value - 1
Mutant 246 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 247 in q.js: object_toString replaced with object_keys
Mutant 248 in q.js: object_toString replaced with object_values
Mutant 249 in q.js: exception replaced with exception.message
Mutant 250 in q.js: exception replaced with exception.stack
Mutant 251 in q.js: exception replaced with exception.name
Mutant 252 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "number"
Mutant 253 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "string"
Mutant 254 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "boolean"
Mutant 255 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && Math.random() > 0.5
Mutant 256 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && false
Mutant 257 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.value) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 258 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.promise) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 259 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.then) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 260 in q.js: !!p replaced with !p
Mutant 261 in q.js: !!p replaced with p = 1
Mutant 262 in q.js: p = p.source replaced with p = p.source.source
Mutant 263 in q.js: p = p.source replaced with p = p.source.source.source
Mutant 264 in q.js: p = p.source replaced with p = p.source.source.source.source
Mutant 265 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 266 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 267 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 268 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 269 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter * 2,
  configurable: true
})
Mutant 270 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 271 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 272 in q.js: "__minimumStackCounter__" replaced with "__stackSize__"
Mutant 273 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 274 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 275 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 276 in q.js: stacks.unshift replaced with stacks.push
Mutant 277 in q.js: stacks.unshift replaced with stacks.pop
Mutant 278 in q.js: stacks.unshift replaced with stacks.shift
Mutant 279 in q.js: p.stack replaced with p.stack + 1
Mutant 280 in q.js: p.stack replaced with p.stack.length
Mutant 281 in q.js: p.stack replaced with p.stack.toUpperCase()
Mutant 282 in q.js: stacks.unshift replaced with stacks.push
Mutant 283 in q.js: stacks.unshift replaced with stacks.pop
Mutant 284 in q.js: stacks.unshift replaced with stacks.shift
Mutant 285 in q.js: error.stack replaced with error.message
Mutant 286 in q.js: error.stack replaced with error.name
Mutant 287 in q.js: error.stack replaced with error.toString()
Mutant 288 in q.js: stacks.join replaced with stacks.concat
Mutant 289 in q.js: stacks.join replaced with stacks.push
Mutant 290 in q.js: stacks.join replaced with stacks.pop
Mutant 291 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + "\n" + "foo"
Mutant 292 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + "\n" + "bar"
Mutant 293 in q.js: concatedStacks replaced with concatedStacks.split("\n")
Mutant 294 in q.js: concatedStacks replaced with concatedStacks.replace("\n", "")
Mutant 295 in q.js: concatedStacks replaced with concatedStacks.substring(0, concatedStacks.length - 1)
Mutant 296 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 297 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: false
})
Mutant 298 in q.js: "stack" replaced with "stackTrace"
Mutant 299 in q.js: "stack" replaced with "stackTrace" + "foo"
Mutant 300 in q.js: "stack" replaced with "stackTrace" + "bar"
Mutant 301 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 302 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  enumerable: true
}
Mutant 303 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  writable: true
}
Mutant 304 in q.js: "\n" replaced with " "
Mutant 305 in q.js: "\n" replaced with "\t"
Mutant 306 in q.js: "\n" replaced with "\r\n"
Mutant 307 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 308 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 309 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = array.length; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 310 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = lines.length - 1; i >= 0; --i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 311 in q.js: i < lines.length replaced with i > lines.length
Mutant 312 in q.js: i < lines.length replaced with i <= lines.length
Mutant 313 in q.js: i < lines.length replaced with i >= lines.length
Mutant 314 in q.js: ++i replaced with i += 2
Mutant 315 in q.js: ++i replaced with i = i + 1
Mutant 316 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) && !isNodeFrame(line) && line
Mutant 317 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && isNodeFrame(line) && line
Mutant 318 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) || isNodeFrame(line) || line
Mutant 319 in q.js: isInternalFrame replaced with isExternalFrame
Mutant 320 in q.js: isInternalFrame replaced with isInternalFrame && false
Mutant 321 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 322 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 323 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 324 in q.js: line replaced with line + 1
Mutant 325 in q.js: line replaced with line - 1
Mutant 326 in q.js: line replaced with line * 2
Mutant 327 in q.js: "\n" replaced with "\t"
Mutant 328 in q.js: "\n" replaced with " "
Mutant 329 in q.js: "\n" replaced with "<br>"
Mutant 330 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 331 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 332 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 333 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 334 in q.js: stackLine.indexOf replaced with stackLine.startsWith
Mutant 335 in q.js: stackLine.indexOf replaced with stackLine.endsWith
Mutant 336 in q.js: "(node.js:" replaced with "(node.js:)"
Mutant 337 in q.js: stackLine replaced with stackLine.split("\n")[0]
Mutant 338 in q.js: stackLine replaced with stackLine.split("\n")[1]
Mutant 339 in q.js: stackLine replaced with stackLine.split("\n").slice(-1)[0]
Mutant 340 in q.js: attempt1 replaced with attempt1[1] > 0
Mutant 341 in q.js: attempt1 replaced with attempt1[1] !== ""
Mutant 342 in q.js: attempt1 replaced with attempt1[1].length > 0
Mutant 343 in q.js: Number replaced with "1"
Mutant 344 in q.js: Number replaced with null
Mutant 345 in q.js: Number replaced with undefined
Mutant 346 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 347 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 348 in q.js: attempt1[2] replaced with attempt2[2]
Mutant 349 in q.js: stackLine replaced with stackLine.split("at ")[1]
Mutant 350 in q.js: stackLine replaced with stackLine.split("at ")[0]
Mutant 351 in q.js: stackLine replaced with stackLine.split("at ")[2]
Mutant 352 in q.js: attempt2 replaced with attempt2[1] === attempt2[2]
Mutant 353 in q.js: attempt2 replaced with attempt2[1] > attempt2[2]
Mutant 354 in q.js: attempt2 replaced with attempt2[1] < attempt2[2]
Mutant 355 in q.js: Number replaced with "string"
Mutant 356 in q.js: Number replaced with null
Mutant 357 in q.js: Number replaced with undefined
Mutant 358 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 359 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 360 in q.js: attempt2[2] replaced with attempt2[0]
Mutant 361 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 362 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 363 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 364 in q.js: attempt3 replaced with attempt3 && attempt3[1]
Mutant 365 in q.js: attempt3 replaced with attempt3 || attempt3[1]
Mutant 366 in q.js: attempt3 replaced with attempt3 ? attempt3[1] : attempt3
Mutant 367 in q.js: Number replaced with "0"
Mutant 368 in q.js: Number replaced with null
Mutant 369 in q.js: Number replaced with undefined
Mutant 370 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 371 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 372 in q.js: attempt3[2] replaced with attempt3[4]
Mutant 373 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 374 in q.js: stackLine replaced with stackLine.split(":")[1]
Mutant 375 in q.js: stackLine replaced with stackLine.split(":")[2]
Mutant 376 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] !== qFileName
Mutant 377 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1] > qEndingLine
Mutant 378 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] !== qFileName && fileNameAndLineNumber[1] > qEndingLine
Mutant 379 in q.js: !hasStacks replaced with hasStacks
Mutant 380 in q.js: "\n" replaced with "\t"
Mutant 381 in q.js: "\n" replaced with ","
Mutant 382 in q.js: "\n" replaced with " "
Mutant 383 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 384 in q.js: lines[0].indexOf replaced with lines[lines.length - 1].indexOf
Mutant 385 in q.js: "@" replaced with "#"
Mutant 386 in q.js: "@" replaced with "%"
Mutant 387 in q.js: "@" replaced with "+"
Mutant 388 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 389 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber.length
Mutant 390 in q.js: firstLine replaced with lines[1]
Mutant 391 in q.js: firstLine replaced with lines[lines.length - 1]
Mutant 392 in q.js: firstLine replaced with lines[Math.floor(Math.random() * lines.length)]
Mutant 393 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === qFileName
Mutant 394 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1] === qStartingLine
Mutant 395 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 396 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn("deprecated")
Mutant 397 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn === "function"
Mutant 398 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "undefined" && typeof console.warn === "function"
Mutant 399 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, null)
Mutant 400 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, undefined)
Mutant 401 in q.js: callback.apply replaced with callback.call
Mutant 402 in q.js: callback.apply replaced with callback.bind
Mutant 403 in q.js: arguments replaced with null
Mutant 404 in q.js: arguments replaced with undefined
Mutant 405 in q.js: arguments replaced with 0
Mutant 406 in q.js: value instanceof Promise replaced with value === Promise
Mutant 407 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 408 in q.js: value instanceof Promise replaced with value.then === Promise.prototype.then
Mutant 409 in q.js: isPromiseAlike(value) replaced with value !== null
Mutant 410 in q.js: isPromiseAlike(value) replaced with value.then
Mutant 411 in q.js: isPromiseAlike(value) replaced with typeof value === "object"
Mutant 412 in q.js: isPromiseAlike replaced with value instanceof Object
Mutant 413 in q.js: value replaced with value + 1
Mutant 414 in q.js: value replaced with value - 1
Mutant 415 in q.js: value replaced with value * 2
Mutant 416 in q.js: value replaced with value + 1
Mutant 417 in q.js: value replaced with value * 2
Mutant 418 in q.js: value replaced with value - 1
Mutant 419 in q.js: fulfill replaced with reject
Mutant 420 in q.js: value replaced with null
Mutant 421 in q.js: value replaced with undefined
Mutant 422 in q.js: value replaced with 0
Mutant 423 in q.js: object_create replaced with null
Mutant 424 in q.js: object_create replaced with undefined
Mutant 425 in q.js: object_create replaced with {}
Mutant 426 in q.js: object_create replaced with null
Mutant 427 in q.js: object_create replaced with undefined
Mutant 428 in q.js: object_create replaced with Promise.prototype
Mutant 429 in q.js: Promise.prototype replaced with Promise.prototype.then(null)
Mutant 430 in q.js: Promise.prototype replaced with Promise.prototype.then(function () {
  throw new Error();
})
Mutant 431 in q.js: Promise.prototype replaced with Promise.prototype.then(function () {
  return Promise.reject();
})
Mutant 432 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 433 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 434 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 435 in q.js: messages replaced with messages.length
Mutant 436 in q.js: messages replaced with messages.length > 0
Mutant 437 in q.js: messages replaced with messages.length === 0
Mutant 438 in q.js: args replaced with args[0]
Mutant 439 in q.js: args replaced with args[1]
Mutant 440 in q.js: args replaced with args.slice(1)
Mutant 441 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 442 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 443 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] + 1
Mutant 444 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 445 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 446 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 447 in q.js: operands[1] replaced with operands[2]
Mutant 448 in q.js: operands[1] replaced with operands[0]
Mutant 449 in q.js: operands[1] replaced with operands.length
Mutant 450 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(promise)
Mutant 451 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(args)
Mutant 452 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(undefined)
Mutant 453 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 454 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.bind
Mutant 455 in q.js: resolvedPromise replaced with undefined
Mutant 456 in q.js: resolvedPromise replaced with null
Mutant 457 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 458 in q.js: args replaced with [args[0], args[1], args[2]]
Mutant 459 in q.js: args replaced with [args[1], args[0], args[2]]
Mutant 460 in q.js: args replaced with [args[0], args[1], args[3]]
Mutant 461 in q.js: messages replaced with messages.length
Mutant 462 in q.js: messages replaced with messages[0]
Mutant 463 in q.js: messages replaced with messages.length > 0
Mutant 464 in q.js: nearer replaced with nearerValue + 1
Mutant 465 in q.js: nearer replaced with nearerValue - 1
Mutant 466 in q.js: nearer replaced with nearerValue * 2
Mutant 467 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 468 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 469 in q.js: resolvedPromise replaced with resolvedPromise.inspect()
Mutant 470 in q.js: isPromise(nearerValue) replaced with nearerValue === undefined
Mutant 471 in q.js: isPromise(nearerValue) replaced with nearerValue.isFulfilled()
Mutant 472 in q.js: isPromise(nearerValue) replaced with nearerValue.isRejected()
Mutant 473 in q.js: isPromise replaced with isPromiseAlike
Mutant 474 in q.js: isPromise replaced with !isPromise
Mutant 475 in q.js: isPromise replaced with isPromise || isPromiseAlike
Mutant 476 in q.js: nearerValue replaced with nearerValue + 1
Mutant 477 in q.js: nearerValue replaced with nearerValue * 2
Mutant 478 in q.js: nearerValue replaced with nearerValue - 1
Mutant 479 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 480 in q.js: !resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 481 in q.js: !resolvedPromise replaced with resolvedPromise === null
Mutant 482 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 483 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 484 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 485 in q.js: e.stack.substring replaced with e.stack.length
Mutant 486 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 487 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") - 1
Mutant 488 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.substring(e.stack.indexOf("\n") + 1)
Mutant 489 in q.js: e.stack.indexOf replaced with e.stack.length
Mutant 490 in q.js: "\n" replaced with "\t"
Mutant 491 in q.js: "\n" replaced with " "
Mutant 492 in q.js: "\n" replaced with ""
Mutant 493 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 494 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 495 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 496 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 497 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.slice(1))
Mutant 498 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.pop())
Mutant 499 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 500 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 501 in q.js: newPromise replaced with undefined
Mutant 502 in q.js: newPromise replaced with null
Mutant 503 in q.js: newPromise replaced with 0
Mutant 504 in q.js: message replaced with message[0]
Mutant 505 in q.js: message replaced with message.length
Mutant 506 in q.js: message replaced with message.slice(1)
Mutant 507 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 508 in q.js: resolvedPromise replaced with resolvedPromise === false
Mutant 509 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 510 in q.js: Q replaced with undefined
Mutant 511 in q.js: Q replaced with null
Mutant 512 in q.js: value replaced with !value
Mutant 513 in q.js: value replaced with value + 1
Mutant 514 in q.js: value replaced with value * 2
Mutant 515 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 516 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 517 in q.js: resolvedPromise replaced with resolvedPromise.isResolved()
Mutant 518 in q.js: fulfill(value) replaced with reject(value)
Mutant 519 in q.js: fulfill(value) replaced with fulfill(otherValue)
Mutant 520 in q.js: fulfill(value) replaced with fulfill(value + 1)
Mutant 521 in q.js: value replaced with undefined
Mutant 522 in q.js: value replaced with null
Mutant 523 in q.js: value replaced with {}
Mutant 524 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 525 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 526 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 527 in q.js: reject(reason) replaced with reject(new Error(reason))
Mutant 528 in q.js: reject(reason) replaced with reject(reason + "!")
Mutant 529 in q.js: reject(reason) replaced with reject(reason.toUpperCase())
Mutant 530 in q.js: reject replaced with undefined
Mutant 531 in q.js: reason replaced with null
Mutant 532 in q.js: reason replaced with undefined
Mutant 533 in q.js: reason replaced with 0
Mutant 534 in q.js: resolvedPromise replaced with resolvedPromise.isResolved
Mutant 535 in q.js: resolvedPromise replaced with resolvedPromise.value
Mutant 536 in q.js: resolvedPromise replaced with resolvedPromise.state
Mutant 537 in q.js: progressListener replaced with progressListeners[0]
Mutant 538 in q.js: progress replaced with undefined
Mutant 539 in q.js: progress replaced with null
Mutant 540 in q.js: progress replaced with 0
Mutant 541 in q.js: error replaced with !error
Mutant 542 in q.js: error replaced with error.message
Mutant 543 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 544 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 545 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 546 in q.js: self.resolve replaced with self.reject
Mutant 547 in q.js: self.resolve replaced with self.notify
Mutant 548 in q.js: self.resolve replaced with self.fulfill
Mutant 549 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 550 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 551 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 552 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length - 1)
Mutant 553 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[1])
Mutant 554 in q.js: arguments replaced with null
Mutant 555 in q.js: arguments replaced with undefined
Mutant 556 in q.js: arguments replaced with []
Mutant 557 in q.js: 1 replaced with 0
Mutant 558 in q.js: 1 replaced with -1
Mutant 559 in q.js: self.resolve replaced with self.reject
Mutant 560 in q.js: self.resolve replaced with self.notify
Mutant 561 in q.js: self.resolve replaced with self.fulfill
Mutant 562 in q.js: value replaced with null
Mutant 563 in q.js: value replaced with undefined
Mutant 564 in q.js: value replaced with 0
Mutant 565 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 566 in q.js: typeof resolver !== "function" replaced with resolver !== "function" && typeof resolver !== "function"
Mutant 567 in q.js: defer replaced with defer.promise
Mutant 568 in q.js: defer replaced with defer.resolve
Mutant 569 in q.js: defer replaced with defer.reject
Mutant 570 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.resolve, deferred.notify)
Mutant 571 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify, deferred.resolve, deferred.reject)
Mutant 572 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.notify, deferred.resolve)
Mutant 573 in q.js: deferred.resolve replaced with deferred.reject
Mutant 574 in q.js: deferred.resolve replaced with deferred.notify
Mutant 575 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 576 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 577 in q.js: deferred.reject replaced with deferred.notify
Mutant 578 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 579 in q.js: deferred.notify replaced with deferred.notify(null)
Mutant 580 in q.js: deferred.notify replaced with deferred.notify(undefined)
Mutant 581 in q.js: deferred.notify replaced with deferred.notify(0)
Mutant 582 in q.js: deferred.reject replaced with deferred.resolve
Mutant 583 in q.js: deferred.reject replaced with deferred.notify
Mutant 584 in q.js: deferred.reject replaced with null
Mutant 585 in q.js: reason replaced with null
Mutant 586 in q.js: reason replaced with undefined
Mutant 587 in q.js: reason replaced with "error"
Mutant 588 in q.js: Q replaced with Q.reject
Mutant 589 in q.js: Q replaced with Q.resolve
Mutant 590 in q.js: Q replaced with Q.all
Mutant 591 in q.js: x replaced with y
Mutant 592 in q.js: x replaced with x + 1
Mutant 593 in q.js: x replaced with x * 2
Mutant 594 in q.js: y replaced with x
Mutant 595 in q.js: y replaced with y + 1
Mutant 596 in q.js: y replaced with x + y
Mutant 597 in q.js: Q replaced with Q.reject
Mutant 598 in q.js: Q replaced with Q.resolve
Mutant 599 in q.js: Q replaced with Q.all
Mutant 600 in q.js: [this, that] replaced with [this, that, this]
Mutant 601 in q.js: [this, that] replaced with [that, this]
Mutant 602 in q.js: [this, that] replaced with [this, null]
Mutant 603 in q.js: x === y replaced with x !== y
Mutant 604 in q.js: x === y replaced with x + y
Mutant 605 in q.js: x === y replaced with x * y
Mutant 606 in q.js: i < len replaced with i > len
Mutant 607 in q.js: i < len replaced with i <= len
Mutant 608 in q.js: i < len replaced with i >= len
Mutant 609 in q.js: i++ replaced with i--
Mutant 610 in q.js: i++ replaced with i += 2
Mutant 611 in q.js: i++ replaced with i = i + 1
Mutant 612 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve)
Mutant 613 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, resolve)
Mutant 614 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, resolve, reject)
Mutant 615 in q.js: answerPs[i] replaced with answerPs[i + 1]
Mutant 616 in q.js: answerPs[i] replaced with answerPs[i - 1]
Mutant 617 in q.js: answerPs[i] replaced with answerPs[i + 2]
Mutant 618 in q.js: resolve replaced with reject
Mutant 619 in q.js: reject replaced with resolve
Mutant 620 in q.js: Q.race replaced with Q.reject
Mutant 621 in q.js: Q.race replaced with Q.resolve
Mutant 622 in q.js: Q.race replaced with Q.all
Mutant 623 in q.js: fallback === void 0 replaced with fallback === null
Mutant 624 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 625 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 626 in q.js: inspect === void 0 replaced with inspect.state === "rejected"
Mutant 627 in q.js: inspect === void 0 replaced with inspect.state === "pending"
Mutant 628 in q.js: object_create replaced with null
Mutant 629 in q.js: object_create replaced with undefined
Mutant 630 in q.js: object_create replaced with {}
Mutant 631 in q.js: Promise.prototype replaced with Object.prototype
Mutant 632 in q.js: Promise.prototype replaced with Function.prototype
Mutant 633 in q.js: Promise.prototype replaced with Array.prototype
Mutant 634 in q.js: descriptor[op] replaced with descriptor[op] + 1
Mutant 635 in q.js: descriptor[op] replaced with descriptor[op] = 42
Mutant 636 in q.js: descriptor[op] replaced with descriptor[op]()
Mutant 637 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args[0])
Mutant 638 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args.slice(1))
Mutant 639 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args.concat(args[0]))
Mutant 640 in q.js: promise replaced with null
Mutant 641 in q.js: promise replaced with undefined
Mutant 642 in q.js: promise replaced with {}
Mutant 643 in q.js: args replaced with args.slice(1)
Mutant 644 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 645 in q.js: args replaced with args.map(function (x) {
  return x * 2;
})
Mutant 646 in q.js: promise replaced with null
Mutant 647 in q.js: promise replaced with undefined
Mutant 648 in q.js: promise replaced with {}
Mutant 649 in q.js: op replaced with op + 1
Mutant 650 in q.js: op replaced with op * 2
Mutant 651 in q.js: op replaced with op - 1
Mutant 652 in q.js: args replaced with args[0]
Mutant 653 in q.js: args replaced with args[1]
Mutant 654 in q.js: args replaced with args[2]
Mutant 655 in q.js: exception replaced with null
Mutant 656 in q.js: exception replaced with undefined
Mutant 657 in q.js: exception replaced with new Error("some other error")
Mutant 658 in q.js: resolve replaced with resolve(reject(new Error("Q can't join: not the same: " + x + " " + y)))
Mutant 659 in q.js: resolve replaced with resolve(x + y)
Mutant 660 in q.js: resolve replaced with resolve(Q.reject(new Error("Q can't join: not the same: " + x + " " + y)))
Mutant 661 in q.js: resolve replaced with reject
Mutant 662 in q.js: resolve replaced with deferred.reject
Mutant 663 in q.js: result replaced with null
Mutant 664 in q.js: result replaced with undefined
Mutant 665 in q.js: inspect replaced with inspect.state
Mutant 666 in q.js: inspect replaced with inspect()
Mutant 667 in q.js: inspect replaced with inspect.state()
Mutant 668 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 669 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 670 in q.js: inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 671 in q.js: inspect replaced with inspect.state
Mutant 672 in q.js: inspect replaced with inspect.value
Mutant 673 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 674 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "rejected"
Mutant 675 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 676 in q.js: fulfilled replaced with rejected
Mutant 677 in q.js: fulfilled replaced with undefined
Mutant 678 in q.js: fulfilled replaced with null
Mutant 679 in q.js: value replaced with null
Mutant 680 in q.js: value replaced with undefined
Mutant 681 in q.js: value replaced with 0
Mutant 682 in q.js: reject replaced with resolve
Mutant 683 in q.js: exception replaced with null
Mutant 684 in q.js: exception replaced with undefined
Mutant 685 in q.js: exception replaced with "error"
Mutant 686 in q.js: typeof rejected === "function" replaced with rejected === undefined
Mutant 687 in q.js: typeof rejected === "function" replaced with rejected === null
Mutant 688 in q.js: typeof rejected === "function" replaced with rejected === "function"
Mutant 689 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self, undefined)
Mutant 690 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self, null)
Mutant 691 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self, {})
Mutant 692 in q.js: exception replaced with null
Mutant 693 in q.js: exception replaced with undefined
Mutant 694 in q.js: exception replaced with 0
Mutant 695 in q.js: exception replaced with reject(new Error("Promise does not support operation: " + op))
Mutant 696 in q.js: newException replaced with newException.message
Mutant 697 in q.js: newException replaced with newException.stack
Mutant 698 in q.js: newException replaced with newException.name
Mutant 699 in q.js: reject replaced with undefined
Mutant 700 in q.js: exception replaced with null
Mutant 701 in q.js: exception replaced with undefined
Mutant 702 in q.js: exception replaced with new Error("Custom error message")
Mutant 703 in q.js: progressed replaced with progressed + 1
Mutant 704 in q.js: progressed replaced with progressed * 2
Mutant 705 in q.js: progressed replaced with progressed - 1
Mutant 706 in q.js: value replaced with null
Mutant 707 in q.js: value replaced with undefined
Mutant 708 in q.js: value replaced with 0
Mutant 709 in q.js: done replaced with !done
Mutant 710 in q.js: done replaced with done && false
Mutant 711 in q.js: done replaced with done || true
Mutant 712 in q.js: deferred.resolve replaced with deferred.reject
Mutant 713 in q.js: deferred.resolve replaced with deferred.notify
Mutant 714 in q.js: deferred.resolve replaced with deferred.promise
Mutant 715 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 716 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 717 in q.js: _fulfilled(value) replaced with _fulfilled(reject(value))
Mutant 718 in q.js: value replaced with null
Mutant 719 in q.js: value replaced with undefined
Mutant 720 in q.js: value replaced with "hello"
Mutant 721 in q.js: done replaced with !done
Mutant 722 in q.js: done replaced with done === true
Mutant 723 in q.js: done replaced with done && true
Mutant 724 in q.js: deferred.resolve replaced with deferred.reject
Mutant 725 in q.js: deferred.resolve replaced with deferred.notify
Mutant 726 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 727 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 728 in q.js: _rejected(exception) replaced with _rejected(new Error("Something went wrong"))
Mutant 729 in q.js: exception replaced with exception.message
Mutant 730 in q.js: exception replaced with new Error(exception.message)
Mutant 731 in q.js: exception replaced with exception.stack
Mutant 732 in q.js: _progressed replaced with _rejected
Mutant 733 in q.js: _progressed replaced with _fulfilled
Mutant 734 in q.js: value replaced with value + 1
Mutant 735 in q.js: value replaced with value * 2
Mutant 736 in q.js: value replaced with value - 1
Mutant 737 in q.js: Q.onerror replaced with Q.onerror()
Mutant 738 in q.js: Q.onerror replaced with Q.onerror(exception)
Mutant 739 in q.js: Q.onerror replaced with Q.onerror(new Error())
Mutant 740 in q.js: e replaced with e.message
Mutant 741 in q.js: e replaced with e.stack
Mutant 742 in q.js: e replaced with e.toString()
Mutant 743 in q.js: !threw replaced with threw
Mutant 744 in q.js: !threw replaced with threw || newValue === undefined
Mutant 745 in q.js: deferred.notify replaced with deferred.reject
Mutant 746 in q.js: newValue replaced with undefined
Mutant 747 in q.js: newValue replaced with null
Mutant 748 in q.js: newValue replaced with 0
Mutant 749 in q.js: promise replaced with null
Mutant 750 in q.js: promise replaced with undefined
Mutant 751 in q.js: promise replaced with Q.reject("error")
Mutant 752 in q.js: callback replaced with callback.bind(null)
Mutant 753 in q.js: callback replaced with callback.call(null)
Mutant 754 in q.js: callback replaced with callback.apply(null)
Mutant 755 in q.js: Q replaced with Q.fcall
Mutant 756 in q.js: Q replaced with Q.resolve
Mutant 757 in q.js: Q replaced with Q.reject
Mutant 758 in q.js: callback replaced with Q(callback).fcall(value).thenResolve(value)
Mutant 759 in q.js: callback replaced with Q(callback).fcall(value).thenReject(value)
Mutant 760 in q.js: callback replaced with Q(callback).fcall(value).thenResolve(value).thenReject(value)
Mutant 761 in q.js: value replaced with null
Mutant 762 in q.js: value replaced with undefined
Mutant 763 in q.js: value replaced with "foo"
Mutant 764 in q.js: value replaced with null
Mutant 765 in q.js: value replaced with undefined
Mutant 766 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 767 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed.reverse())
Mutant 768 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed.slice(1))
Mutant 769 in q.js: Q replaced with Q.reject
Mutant 770 in q.js: Q replaced with Q.resolve
Mutant 771 in q.js: Q replaced with Q.defer
Mutant 772 in q.js: value replaced with null
Mutant 773 in q.js: value replaced with undefined
Mutant 774 in q.js: value replaced with 0
Mutant 775 in q.js: fulfilled replaced with rejected
Mutant 776 in q.js: fulfilled replaced with undefined
Mutant 777 in q.js: fulfilled replaced with null
Mutant 778 in q.js: rejected replaced with resolved
Mutant 779 in q.js: rejected replaced with rejected(new Error("error"))
Mutant 780 in q.js: rejected replaced with rejected(null)
Mutant 781 in q.js: progressed replaced with function () {}
Mutant 782 in q.js: progressed replaced with function (value) {
  return value + 1;
}
Mutant 783 in q.js: progressed replaced with function (value) {
  throw new Error("test");
}
Mutant 784 in q.js: function () {
  return value;
} replaced with function () {
  return undefined;
}
Mutant 785 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 786 in q.js: function () {
  return value;
} replaced with function () {
  return !value;
}
Mutant 787 in q.js: Q replaced with Q.reject
Mutant 788 in q.js: Q replaced with Q.resolve
Mutant 789 in q.js: Q replaced with Q.defer
Mutant 790 in q.js: promise replaced with null
Mutant 791 in q.js: promise replaced with undefined
Mutant 792 in q.js: promise replaced with 0
Mutant 793 in q.js: value replaced with null
Mutant 794 in q.js: value replaced with undefined
Mutant 795 in q.js: value replaced with 0
Mutant 796 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 797 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 798 in q.js: function () {
  throw reason;
} replaced with function () {
  throw reason + 1;
}
Mutant 799 in q.js: promise replaced with null
Mutant 800 in q.js: promise replaced with undefined
Mutant 801 in q.js: promise replaced with 0
Mutant 802 in q.js: reason replaced with null
Mutant 803 in q.js: reason replaced with undefined
Mutant 804 in q.js: reason replaced with 0
Mutant 805 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 806 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 807 in q.js: isPromise(value) replaced with isPending(value)
Mutant 808 in q.js: isPromise replaced with isFulfilled
Mutant 809 in q.js: isPromise replaced with isRejected
Mutant 810 in q.js: value replaced with value + 1
Mutant 811 in q.js: value replaced with value * 2
Mutant 812 in q.js: value replaced with value - 1
Mutant 813 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 814 in q.js: inspected.state === "fulfilled" replaced with inspected.value === undefined
Mutant 815 in q.js: inspected.state === "fulfilled" replaced with inspected.value === null
Mutant 816 in q.js: isObject replaced with isFunction
Mutant 817 in q.js: isObject replaced with isArray
Mutant 818 in q.js: isObject replaced with isString
Mutant 819 in q.js: object replaced with object.then
Mutant 820 in q.js: object replaced with object.then(function () {
  return value;
})
Mutant 821 in q.js: object replaced with object.then(function () {
  throw reason;
})
Mutant 822 in q.js: isPromise replaced with isPromiseAlike
Mutant 823 in q.js: isPromise replaced with isFulfilled
Mutant 824 in q.js: isPromise replaced with isRejected
Mutant 825 in q.js: object replaced with null
Mutant 826 in q.js: object replaced with undefined
Mutant 827 in q.js: object replaced with {}
Mutant 828 in q.js: this.inspect replaced with this.inspect.then
Mutant 829 in q.js: this.inspect replaced with this.inspect.catch
Mutant 830 in q.js: this.inspect replaced with this.inspect.finally
not replacing this.inspect with this.inspect.then
not replacing this.inspect with this.inspect.catch
not replacing this.inspect with this.inspect.finally
Mutant 831 in q.js: isPromise replaced with !isPromise
Mutant 832 in q.js: isPromise replaced with isPromiseAlike
Mutant 833 in q.js: isPromise replaced with isFulfilled
Mutant 834 in q.js: object replaced with !object
Mutant 835 in q.js: object replaced with object.valueOf()
Mutant 836 in q.js: object replaced with object.toString()
Mutant 837 in q.js: this.inspect replaced with this.inspect.state
Mutant 838 in q.js: this.inspect replaced with this.inspect.value
Mutant 839 in q.js: this.inspect replaced with this.inspect.reason
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
not replacing this.inspect with this.inspect.reason
Mutant 840 in q.js: isPromise replaced with isPromiseAlike
Mutant 841 in q.js: isPromise replaced with !isPromise
Mutant 842 in q.js: isPromise replaced with isFulfilled
Mutant 843 in q.js: object replaced with object.then()
Mutant 844 in q.js: object replaced with object.inspect()
Mutant 845 in q.js: object replaced with object.valueOf()
Mutant 846 in q.js: object.inspect replaced with object.inspect.rejected
Mutant 847 in q.js: object.inspect replaced with object.inspect.rejected.value
not replacing object.inspect with object.inspect.rejected
not replacing object.inspect with object.inspect.rejected.value
Mutant 848 in q.js: this.inspect replaced with null
Mutant 849 in q.js: this.inspect replaced with undefined
Mutant 850 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with null
not replacing this.inspect with undefined
not replacing this.inspect with this.inspect.state
Mutant 851 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === true
Mutant 852 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== false
Mutant 853 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 854 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 855 in q.js: !trackUnhandledRejections replaced with typeof trackUnhandledRejections === "undefined"
Mutant 856 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 857 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 858 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) !== -1
Mutant 859 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with !unhandledRejections.includes(promise)
Mutant 860 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length, promise)
Mutant 861 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.indexOf(promise) !== -1)
Mutant 862 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(promise.isRejected())
Mutant 863 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 864 in q.js: array_indexOf replaced with array_includes
Mutant 865 in q.js: array_indexOf replaced with array_findIndex
Mutant 866 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 867 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 868 in q.js: unhandledRejections replaced with trackUnhandledRejections
Mutant 869 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 870 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, null)
Mutant 871 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, Q.reject(reason))
Mutant 872 in q.js: "unhandledRejection" replaced with "unhandledRejection" + 1
Mutant 873 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "1"
Mutant 874 in q.js: reason replaced with reason.stack
Mutant 875 in q.js: reason replaced with reason.message
Mutant 876 in q.js: reason replaced with null
Mutant 877 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 878 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.shift
Mutant 879 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.unshift
Mutant 880 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 881 in q.js: unhandledRejections.push replaced with unhandledRejections.shift
Mutant 882 in q.js: promise replaced with null
Mutant 883 in q.js: promise replaced with undefined
Mutant 884 in q.js: promise replaced with rejection
Mutant 885 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 886 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined" && reason.stack !== null
Mutant 887 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined" && reason.stack !== "null"
Mutant 888 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 889 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 890 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 891 in q.js: reason.stack replaced with reason.stack.length
Mutant 892 in q.js: reason.stack replaced with reason.stack.split("\n")
Mutant 893 in q.js: reason.stack replaced with reason.stack.indexOf("Error")
Mutant 894 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 895 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 896 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 897 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 898 in q.js: !trackUnhandledRejections replaced with typeof trackUnhandledRejections === "undefined"
Mutant 899 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length, promise)
Mutant 900 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length, promise)
Mutant 901 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons.length, promise)
Mutant 902 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 903 in q.js: array_indexOf replaced with array_includes
Mutant 904 in q.js: array_indexOf replaced with array_findIndex
Mutant 905 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 906 in q.js: unhandledRejections replaced with unhandledRejections.concat()
Mutant 907 in q.js: unhandledRejections replaced with unhandledRejections.filter(function (rejection) {
  return rejection !== promise;
})
Mutant 908 in q.js: promise replaced with promise.then()
Mutant 909 in q.js: promise replaced with promise.catch()
Mutant 910 in q.js: promise replaced with promise.finally()
Mutant 911 in q.js: at !== -1 replaced with at > -1
Mutant 912 in q.js: at !== -1 replaced with at < -1
Mutant 913 in q.js: at !== -1 replaced with at === -2
Mutant 914 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length, promise)
Mutant 915 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections[promise], promise)
Mutant 916 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.indexOf(promise), promise)
Mutant 917 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 918 in q.js: array_indexOf replaced with array_includes
Mutant 919 in q.js: array_indexOf replaced with array_findIndex
Mutant 920 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 921 in q.js: reportedUnhandledRejections replaced with []
Mutant 922 in q.js: reportedUnhandledRejections replaced with null
Mutant 923 in q.js: promise replaced with promise.then(function () {})
Mutant 924 in q.js: promise replaced with promise.catch(function () {})
Mutant 925 in q.js: promise replaced with promise.finally(function () {})
Mutant 926 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 927 in q.js: atReport !== -1 replaced with atReport === -2
Mutant 928 in q.js: atReport !== -1 replaced with atReport < -1
Mutant 929 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 930 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at])
Mutant 931 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at])
Mutant 932 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 933 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 934 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 935 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] = "different value"
Mutant 936 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 937 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, -1)
Mutant 938 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, reportedUnhandledRejections.length - 1)
Mutant 939 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections.shift
Mutant 940 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections.pop
Mutant 941 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections.length = 0
Mutant 942 in q.js: atReport replaced with atReport.length
Mutant 943 in q.js: atReport replaced with atReport[0]
Mutant 944 in q.js: atReport replaced with atReport.pop()
Mutant 945 in q.js: 1 replaced with -1
Mutant 946 in q.js: 1 replaced with 0
Mutant 947 in q.js: 1 replaced with 100
Mutant 948 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 949 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 950 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 951 in q.js: at replaced with at + 1
Mutant 952 in q.js: at replaced with at - 1
Mutant 953 in q.js: at replaced with at + 2
Mutant 954 in q.js: 1 replaced with 0
Mutant 955 in q.js: 1 replaced with -1
Mutant 956 in q.js: 1 replaced with 2
Mutant 957 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at + 1)
Mutant 958 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at - 1)
Mutant 959 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at * 2)
Mutant 960 in q.js: at replaced with at + 1
Mutant 961 in q.js: at replaced with at - 1
Mutant 962 in q.js: at replaced with at + 2
Mutant 963 in q.js: 1 replaced with 0
Mutant 964 in q.js: 1 replaced with -1
Mutant 965 in q.js: 1 replaced with unhandledReasons.length
Mutant 966 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 967 in q.js: resetUnhandledRejections replaced with unhandledReasons.length = 0
Mutant 968 in q.js: rejected replaced with !rejected
Mutant 969 in q.js: rejected replaced with rejected && false
Mutant 970 in q.js: rejected replaced with rejected || true
Mutant 971 in q.js: this replaced with null
Mutant 972 in q.js: this replaced with undefined
Mutant 973 in q.js: this replaced with Promise.reject()
Mutant 974 in q.js: reason replaced with null
Mutant 975 in q.js: reason replaced with undefined
Mutant 976 in q.js: reason replaced with "error"
Mutant 977 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, null)
Mutant 978 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, undefined)
Mutant 979 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, {})
Mutant 980 in q.js: trackRejection replaced with untrackRejection
Mutant 981 in q.js: rejection replaced with null
Mutant 982 in q.js: rejection replaced with undefined
Mutant 983 in q.js: rejection replaced with 0
Mutant 984 in q.js: reason replaced with null
Mutant 985 in q.js: reason replaced with undefined
Mutant 986 in q.js: reason replaced with "some other string"
Mutant 987 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 988 in q.js: name === null || name === void 0 replaced with name === "undefined"
Mutant 989 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 990 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 991 in q.js: value.apply(void 0, args) replaced with value.apply(this, args)
Mutant 992 in q.js: value.apply(void 0, args) replaced with value.apply(args[0], args)
Mutant 993 in q.js: value.apply replaced with value.call
Mutant 994 in q.js: value.apply replaced with value.bind
Mutant 995 in q.js: value.apply replaced with value.toString
Mutant 996 in q.js: void 0 replaced with null
Mutant 997 in q.js: void 0 replaced with undefined
Mutant 998 in q.js: void 0 replaced with 0
Mutant 999 in q.js: args replaced with args.slice()
Mutant 1000 in q.js: args replaced with args.concat()
Mutant 1001 in q.js: args replaced with args.map(function (x) {
  return x * 2;
})
Mutant 1002 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice())
Mutant 1003 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.concat())
Mutant 1004 in q.js: value[name].apply replaced with value[name] = null
Mutant 1005 in q.js: value replaced with null
Mutant 1006 in q.js: value replaced with undefined
Mutant 1007 in q.js: value replaced with 0
Mutant 1008 in q.js: args replaced with args[0]
Mutant 1009 in q.js: args replaced with args.slice(1)
Mutant 1010 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 1011 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.slice())
Mutant 1012 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.concat())
Mutant 1013 in q.js: value.apply replaced with value.call
Mutant 1014 in q.js: value.apply replaced with value.bind
Mutant 1015 in q.js: value.apply replaced with value.toString
Mutant 1016 in q.js: thisp replaced with null
Mutant 1017 in q.js: thisp replaced with undefined
Mutant 1018 in q.js: thisp replaced with this
Mutant 1019 in q.js: args replaced with args.slice()
Mutant 1020 in q.js: args replaced with args.concat()
Mutant 1021 in q.js: args replaced with args.map(function (x) {
  return x * 2;
})
Mutant 1022 in q.js: object_keys replaced with object_values
Mutant 1023 in q.js: object_keys replaced with object_entries
Mutant 1024 in q.js: value replaced with null
Mutant 1025 in q.js: value replaced with undefined
Mutant 1026 in q.js: value replaced with {}
Mutant 1027 in q.js: defer replaced with deferred
Mutant 1028 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(reason))
Mutant 1029 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject(reason))
Mutant 1030 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify(reason))
Mutant 1031 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1032 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1033 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1034 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1035 in q.js: deferred.reject replaced with deferred.notify
Mutant 1036 in q.js: deferred.reject replaced with deferred.reject(new Error(reason))
Mutant 1037 in q.js: deferred.notify replaced with deferred.reject
Mutant 1038 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1039 in q.js: deferred.notify replaced with deferred.notify(reason)
Mutant 1040 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1041 in q.js: deferred.reject replaced with Q.reject
Mutant 1042 in q.js: exception replaced with null
Mutant 1043 in q.js: exception replaced with undefined
Mutant 1044 in q.js: exception replaced with 0
Mutant 1045 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[0])
Mutant 1046 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.slice(1))
Mutant 1047 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.concat(args[0]))
Mutant 1048 in q.js: object replaced with null
Mutant 1049 in q.js: object replaced with undefined
Mutant 1050 in q.js: object replaced with {}
Mutant 1051 in q.js: op replaced with op = "foo"
Mutant 1052 in q.js: op replaced with op = null
Mutant 1053 in q.js: op replaced with op = 42
Mutant 1054 in q.js: args replaced with args[0]
Mutant 1055 in q.js: args replaced with args.slice(1)
Mutant 1056 in q.js: args replaced with args.length
Mutant 1057 in q.js: Q replaced with Q.reject
Mutant 1058 in q.js: Q replaced with Q.fulfill
Mutant 1059 in q.js: Q replaced with Q.defer
Mutant 1060 in q.js: object replaced with null
Mutant 1061 in q.js: object replaced with undefined
Mutant 1062 in q.js: object replaced with {}
Mutant 1063 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1064 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, fulfilled)
Mutant 1065 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, rejected)
Mutant 1066 in q.js: value replaced with null
Mutant 1067 in q.js: value replaced with undefined
Mutant 1068 in q.js: value replaced with []
Mutant 1069 in q.js: fulfilled replaced with rejected
Mutant 1070 in q.js: fulfilled replaced with undefined
Mutant 1071 in q.js: fulfilled replaced with null
Mutant 1072 in q.js: rejected replaced with fulfilled
Mutant 1073 in q.js: rejected replaced with undefined
Mutant 1074 in q.js: rejected replaced with null
Mutant 1075 in q.js: this.all replaced with this.any
Mutant 1076 in q.js: this.all replaced with this.none
Mutant 1077 in q.js: this.all replaced with this.race
not replacing this.all with this.any
not replacing this.all with this.any
not replacing this.all with this.none
not replacing this.all with this.none
not replacing this.all with this.race
not replacing this.all with this.race
Mutant 1078 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1079 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 1080 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply([])
Mutant 1081 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 1082 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 1083 in q.js: fulfilled.apply replaced with fulfilled.apply.bind
Mutant 1084 in q.js: void 0 replaced with null
Mutant 1085 in q.js: void 0 replaced with undefined
Mutant 1086 in q.js: void 0 replaced with {}
Mutant 1087 in q.js: array replaced with array.slice()
Mutant 1088 in q.js: array replaced with array.concat()
Mutant 1089 in q.js: array replaced with array.map(function (x) {
  return x;
})
Mutant 1090 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1091 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "object"
Mutant 1092 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "function"
Mutant 1093 in q.js: arg replaced with null
Mutant 1094 in q.js: arg replaced with undefined
Mutant 1095 in q.js: arg replaced with 0
Mutant 1096 in q.js: reject replaced with resolve
Mutant 1097 in q.js: reject replaced with Promise.reject
Mutant 1098 in q.js: exception replaced with exception.message
Mutant 1099 in q.js: exception replaced with exception.toString()
Mutant 1100 in q.js: exception replaced with exception.name
Mutant 1101 in q.js: result.done replaced with result.value
Mutant 1102 in q.js: result.done replaced with result.rejected
Mutant 1103 in q.js: result.done replaced with result.isFulfilled
Mutant 1104 in q.js: result.value replaced with result.value + 1
Mutant 1105 in q.js: result.value replaced with result.value * 2
Mutant 1106 in q.js: result.value replaced with result.value - 1
Mutant 1107 in q.js: when(result.value, callback, errback) replaced with when(result.error, callback, errback)
Mutant 1108 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, errback, null)
Mutant 1109 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, errback, undefined)
Mutant 1110 in q.js: when replaced with Q.reject
Mutant 1111 in q.js: when replaced with Q.all
Mutant 1112 in q.js: when replaced with Q.race
Mutant 1113 in q.js: result.value replaced with result.value + 1
Mutant 1114 in q.js: result.value replaced with result.value * 2
Mutant 1115 in q.js: result.value replaced with result.value - 1
Mutant 1116 in q.js: callback replaced with reject
Mutant 1117 in q.js: callback replaced with undefined
Mutant 1118 in q.js: errback replaced with reject
Mutant 1119 in q.js: errback replaced with resolve
Mutant 1120 in q.js: generator[verb] replaced with generator[verb + "x"]
Mutant 1121 in q.js: arg replaced with arg + 1
Mutant 1122 in q.js: arg replaced with arg - 1
Mutant 1123 in q.js: arg replaced with arg * 2
Mutant 1124 in q.js: isStopIteration(exception) replaced with exception instanceof StopIteration
Mutant 1125 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 1126 in q.js: isStopIteration(exception) replaced with exception.constructor === StopIteration
Mutant 1127 in q.js: isStopIteration replaced with isStopIteration === true
Mutant 1128 in q.js: isStopIteration replaced with isStopIteration !== true
Mutant 1129 in q.js: exception replaced with exception.value
Mutant 1130 in q.js: exception replaced with exception.message
Mutant 1131 in q.js: exception replaced with exception.stack
Mutant 1132 in q.js: exception.value replaced with exception.message
Mutant 1133 in q.js: exception.value replaced with exception.stack
Mutant 1134 in q.js: exception.value replaced with exception.name
Mutant 1135 in q.js: reject replaced with resolve
Mutant 1136 in q.js: exception replaced with exception.message
Mutant 1137 in q.js: exception replaced with exception.stack
Mutant 1138 in q.js: exception replaced with exception.name
Mutant 1139 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 1140 in q.js: when(result, callback, errback) replaced with when(result, callback.bind(null, errback), errback)
Mutant 1141 in q.js: when(result, callback, errback) replaced with when(result, errback, callback)
Mutant 1142 in q.js: when replaced with Q.reject
Mutant 1143 in q.js: when replaced with Q.resolve
Mutant 1144 in q.js: when replaced with Q.defer
Mutant 1145 in q.js: result replaced with undefined
Mutant 1146 in q.js: result replaced with null
Mutant 1147 in q.js: result replaced with Q(result)
Mutant 1148 in q.js: callback replaced with errback
Mutant 1149 in q.js: callback replaced with reject
Mutant 1150 in q.js: callback replaced with resolve
Mutant 1151 in q.js: errback replaced with reject
Mutant 1152 in q.js: errback replaced with function (error) {
  return reject(error);
}
Mutant 1153 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1154 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1155 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1156 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1157 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1158 in q.js: this replaced with null
Mutant 1159 in q.js: this replaced with undefined
Mutant 1160 in q.js: this replaced with {}
Mutant 1161 in q.js: arguments replaced with null
Mutant 1162 in q.js: arguments replaced with []
Mutant 1163 in q.js: arguments replaced with undefined
Mutant 1164 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1165 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 1166 in q.js: continuer.bind replaced with continuer.call
Mutant 1167 in q.js: continuer.bind replaced with continuer.apply
Mutant 1168 in q.js: continuer replaced with continuer.next
Mutant 1169 in q.js: continuer replaced with continuer.apply(this, arguments)
Mutant 1170 in q.js: continuer replaced with continuer.bind(this, arguments)
Mutant 1171 in q.js: "next" replaced with "send"
Mutant 1172 in q.js: "next" replaced with "throw"
Mutant 1173 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1174 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw", 1))
Mutant 1175 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw", "error"))
Mutant 1176 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1177 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1178 in q.js: "throw" replaced with "throw new Error()"
Mutant 1179 in q.js: "throw" replaced with "throw new TypeError()"
Mutant 1180 in q.js: callback replaced with errback
Mutant 1181 in q.js: callback replaced with reject
Mutant 1182 in q.js: Q.done replaced with Q.fail
Mutant 1183 in q.js: Q.done replaced with Q.reject
Mutant 1184 in q.js: Q.done replaced with Q.resolve
Mutant 1185 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1186 in q.js: makeGenerator replaced with makeGenerator.apply(this, arguments)
Mutant 1187 in q.js: makeGenerator replaced with makeGenerator.call(this, arguments)
Mutant 1188 in q.js: all replaced with any
Mutant 1189 in q.js: all replaced with none
Mutant 1190 in q.js: all replaced with some
Mutant 1191 in q.js: arguments replaced with null
Mutant 1192 in q.js: arguments replaced with []
Mutant 1193 in q.js: arguments replaced with {}
Mutant 1194 in q.js: callback.apply(self, args) replaced with callback.apply(self, args[0])
Mutant 1195 in q.js: callback.apply(self, args) replaced with callback.apply(args[0], self)
Mutant 1196 in q.js: callback.apply(self, args) replaced with callback.apply(args[0], args[1])
Mutant 1197 in q.js: callback.apply replaced with callback.call
Mutant 1198 in q.js: callback.apply replaced with callback.bind
Mutant 1199 in q.js: self replaced with null
Mutant 1200 in q.js: self replaced with undefined
Mutant 1201 in q.js: self replaced with {}
Mutant 1202 in q.js: args replaced with args.slice(1)
Mutant 1203 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 1204 in q.js: args replaced with args.map(function (x) {
  return x * 2;
})
Mutant 1205 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args[0])
Mutant 1206 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice(1))
Mutant 1207 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.concat(args[0]))
Mutant 1208 in q.js: Q replaced with Q.reject
Mutant 1209 in q.js: Q replaced with Q.resolve
Mutant 1210 in q.js: Q replaced with Q.defer
Mutant 1211 in q.js: object replaced with null
Mutant 1212 in q.js: object replaced with undefined
Mutant 1213 in q.js: object replaced with {}
Mutant 1214 in q.js: op replaced with op + 1
Mutant 1215 in q.js: op replaced with op - 1
Mutant 1216 in q.js: op replaced with op * 2
Mutant 1217 in q.js: args replaced with args[0]
Mutant 1218 in q.js: args replaced with args.slice(1)
Mutant 1219 in q.js: args replaced with []
Mutant 1220 in q.js: defer replaced with deferred.reject
Mutant 1221 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1222 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.slice(1))
Mutant 1223 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.concat(args))
Mutant 1224 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1225 in q.js: self.promiseDispatch replaced with deferred.resolve
Mutant 1226 in q.js: self.promiseDispatch replaced with deferred.notify
Mutant 1227 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1228 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1229 in q.js: deferred.resolve replaced with null
Mutant 1230 in q.js: op replaced with op + 1
Mutant 1231 in q.js: op replaced with op - 1
Mutant 1232 in q.js: op replaced with op * 2
Mutant 1233 in q.js: args replaced with args[0]
Mutant 1234 in q.js: args replaced with args.slice(1)
Mutant 1235 in q.js: args replaced with args.concat(["extra argument"])
Mutant 1236 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1237 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("get", [key, 0])
Mutant 1238 in q.js: Q replaced with Q.reject
Mutant 1239 in q.js: Q replaced with Q.all
Mutant 1240 in q.js: Q replaced with Q.race
Mutant 1241 in q.js: object replaced with null
Mutant 1242 in q.js: object replaced with {}
Mutant 1243 in q.js: "get" replaced with "set"
Mutant 1244 in q.js: "get" replaced with "post"
Mutant 1245 in q.js: [key] replaced with [key + 1]
Mutant 1246 in q.js: [key] replaced with ["key"]
Mutant 1247 in q.js: [key] replaced with [key.toUpperCase()]
Mutant 1248 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1249 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key, value])
Mutant 1250 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1251 in q.js: "get" replaced with "set"
Mutant 1252 in q.js: "get" replaced with "post"
Mutant 1253 in q.js: [key] replaced with [key, key]
Mutant 1254 in q.js: [key] replaced with [key + 1]
Mutant 1255 in q.js: [key] replaced with ["key"]
Mutant 1256 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1257 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value + 1])
Mutant 1258 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value * 2])
Mutant 1259 in q.js: Q replaced with Q.reject
Mutant 1260 in q.js: Q replaced with Q.defer
Mutant 1261 in q.js: Q replaced with Q.all
Mutant 1262 in q.js: object replaced with null
Mutant 1263 in q.js: object replaced with undefined
Mutant 1264 in q.js: object replaced with {}
Mutant 1265 in q.js: "set" replaced with "get"
Mutant 1266 in q.js: "set" replaced with "post"
Mutant 1267 in q.js: [key, value] replaced with [value, key]
Mutant 1268 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1269 in q.js: [key, value] replaced with [key, Q(value)]
Mutant 1270 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1271 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value - 1])
Mutant 1272 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value * 2])
Mutant 1273 in q.js: "set" replaced with "setValue"
Mutant 1274 in q.js: "set" replaced with "set" + "Value"
Mutant 1275 in q.js: "set" replaced with "set" + key
Mutant 1276 in q.js: [key, value] replaced with [key, value, 0]
Mutant 1277 in q.js: [key, value] replaced with [key, value, undefined]
Mutant 1278 in q.js: [key, value] replaced with [key, value, null]
Mutant 1279 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1280 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("get", [key])
Mutant 1281 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("hasOwnProperty", [key])
Mutant 1282 in q.js: Q replaced with Q.reject
Mutant 1283 in q.js: Q replaced with Q.defer
Mutant 1284 in q.js: Q replaced with Q.all
Mutant 1285 in q.js: object replaced with null
Mutant 1286 in q.js: object replaced with 0
Mutant 1287 in q.js: "delete" replaced with "set"
Mutant 1288 in q.js: "delete" replaced with "get"
Mutant 1289 in q.js: "delete" replaced with "post"
Mutant 1290 in q.js: [key] replaced with [key, value]
Mutant 1291 in q.js: [key] replaced with [key, "value"]
Mutant 1292 in q.js: [key] replaced with [key, undefined]
Mutant 1293 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1294 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, null])
Mutant 1295 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, ""])
Mutant 1296 in q.js: this.dispatch replaced with null
Mutant 1297 in q.js: this.dispatch replaced with undefined
Mutant 1298 in q.js: this.dispatch replaced with 0
Mutant 1299 in q.js: "delete" replaced with "del"
Mutant 1300 in q.js: "delete" replaced with "remove"
Mutant 1301 in q.js: [key] replaced with [key, value]
Mutant 1302 in q.js: [key] replaced with [key + 1]
Mutant 1303 in q.js: [key] replaced with [key - 1]
Mutant 1304 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1305 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.slice()])
Mutant 1306 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.concat()])
Mutant 1307 in q.js: Q replaced with Q.reject
Mutant 1308 in q.js: Q replaced with Q.resolve
Mutant 1309 in q.js: Q replaced with Q.defer
Mutant 1310 in q.js: object replaced with null
Mutant 1311 in q.js: object replaced with undefined
Mutant 1312 in q.js: object replaced with {}
Mutant 1313 in q.js: "post" replaced with "put"
Mutant 1314 in q.js: "post" replaced with "patch"
Mutant 1315 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1316 in q.js: [name, args] replaced with [name, args.filter(function (x) {
  return x !== 1;
})]
Mutant 1317 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1318 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.reverse()])
Mutant 1319 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.slice(1)])
Mutant 1320 in q.js: "post" replaced with "put"
Mutant 1321 in q.js: "post" replaced with "patch"
Mutant 1322 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1323 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1324 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1325 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1326 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 0)])
Mutant 1327 in q.js: Q replaced with Q.fapply
Mutant 1328 in q.js: Q replaced with Promise.prototype.fapply
Mutant 1329 in q.js: Q replaced with Q.fbind
Mutant 1330 in q.js: object replaced with null
Mutant 1331 in q.js: object replaced with undefined
Mutant 1332 in q.js: object replaced with "foo"
Mutant 1333 in q.js: "post" replaced with "put"
Mutant 1334 in q.js: "post" replaced with "get"
Mutant 1335 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1336 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1337 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 2, 1)]
Mutant 1338 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 0, 1))
Mutant 1339 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1340 in q.js: arguments replaced with null
Mutant 1341 in q.js: arguments replaced with []
Mutant 1342 in q.js: arguments replaced with [1, 2, 3]
Mutant 1343 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1344 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 0)])
Mutant 1345 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1346 in q.js: "post" replaced with "put"
Mutant 1347 in q.js: "post" replaced with "patch"
Mutant 1348 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1349 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 3)]
Mutant 1350 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 4)]
Mutant 1351 in q.js: array_slice(arguments, 1) replaced with array_slice(args.slice(1))
Mutant 1352 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1353 in q.js: arguments replaced with null
Mutant 1354 in q.js: arguments replaced with undefined
Mutant 1355 in q.js: arguments replaced with []
Mutant 1356 in q.js: 1 replaced with -1
Mutant 1357 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1358 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, args.slice(1)])
Mutant 1359 in q.js: Q replaced with Q.reject
Mutant 1360 in q.js: object replaced with null
Mutant 1361 in q.js: object replaced with undefined
Mutant 1362 in q.js: object replaced with function () {}
Mutant 1363 in q.js: "apply" replaced with "call"
Mutant 1364 in q.js: "apply" replaced with "bind"
Mutant 1365 in q.js: "apply" replaced with "apply" + "call"
Mutant 1366 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1367 in q.js: [void 0, args] replaced with [void 0, args.slice(0, -1)]
Mutant 1368 in q.js: [void 0, args] replaced with [void 0, args.slice(0, -2)]
Mutant 1369 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1370 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [undefined, args])
Mutant 1371 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args])
Mutant 1372 in q.js: "apply" replaced with "call"
Mutant 1373 in q.js: "apply" replaced with "bind"
Mutant 1374 in q.js: "apply" replaced with "concat"
Mutant 1375 in q.js: [void 0, args] replaced with [void 0, args, 1]
Mutant 1376 in q.js: [void 0, args] replaced with [void 0, args, null]
Mutant 1377 in q.js: [void 0, args] replaced with [void 0, args, undefined]
Mutant 1378 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1379 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)])
Mutant 1380 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)])
Mutant 1381 in q.js: object replaced with null
Mutant 1382 in q.js: object replaced with undefined
Mutant 1383 in q.js: object replaced with {}
Mutant 1384 in q.js: "apply" replaced with "call"
Mutant 1385 in q.js: "apply" replaced with "bind"
Mutant 1386 in q.js: "apply" replaced with "arguments"
Mutant 1387 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1388 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 3)]
Mutant 1389 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 4)]
Mutant 1390 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, arguments.length - 1)
Mutant 1391 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1392 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, array_slice(arguments)])
Mutant 1393 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1394 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1395 in q.js: "apply" replaced with "call"
Mutant 1396 in q.js: "apply" replaced with "bind"
Mutant 1397 in q.js: "apply" replaced with "post"
Mutant 1398 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1399 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 0, 1)]
Mutant 1400 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1401 in q.js: arguments replaced with array_slice(arguments, 1, 2)
Mutant 1402 in q.js: arguments replaced with array_slice(arguments, 1, 3)
Mutant 1403 in q.js: object replaced with null
Mutant 1404 in q.js: object replaced with undefined
Mutant 1405 in q.js: object replaced with 0
Mutant 1406 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1407 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 1)
Mutant 1408 in q.js: array_slice(arguments, 1) replaced with array_slice(this.arguments, 1)
Mutant 1409 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1410 in q.js: arguments replaced with array_slice(arguments, 0)
Mutant 1411 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1412 in q.js: 1 replaced with 0
Mutant 1413 in q.js: 1 replaced with -1
Mutant 1414 in q.js: 1 replaced with promises.length - 1
Mutant 1415 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1416 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1417 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1418 in q.js: arguments replaced with null
Mutant 1419 in q.js: arguments replaced with []
Mutant 1420 in q.js: arguments replaced with [1, 2, 3]
Mutant 1421 in q.js: arguments replaced with args.concat(array_slice(arguments, 1))
Mutant 1422 in q.js: arguments replaced with args.concat(array_slice(arguments, 2))
Mutant 1423 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1424 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1425 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1426 in q.js: arguments replaced with null
Mutant 1427 in q.js: arguments replaced with []
Mutant 1428 in q.js: arguments replaced with [1, 2, 3]
Mutant 1429 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1430 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1])
Mutant 1431 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["foo"])
Mutant 1432 in q.js: object replaced with null
Mutant 1433 in q.js: object replaced with undefined
Mutant 1434 in q.js: object replaced with {}
Mutant 1435 in q.js: "keys" replaced with "values"
Mutant 1436 in q.js: "keys" replaced with "length"
Mutant 1437 in q.js: "keys" replaced with "push"
Mutant 1438 in q.js: [] replaced with [1, 2, 3]
Mutant 1439 in q.js: [] replaced with null
Mutant 1440 in q.js: [] replaced with undefined
Mutant 1441 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1442 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", [])
Mutant 1443 in q.js: this.dispatch("keys", []) replaced with this.dispatch("toString", [])
Mutant 1444 in q.js: "keys" replaced with "values"
Mutant 1445 in q.js: "keys" replaced with "length"
Mutant 1446 in q.js: "keys" replaced with "toString"
Mutant 1447 in q.js: [] replaced with [1]
Mutant 1448 in q.js: [] replaced with ["foo"]
Mutant 1449 in q.js: [] replaced with [function () {
  return "bar";
}]
Mutant 1450 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1451 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().value === undefined
Mutant 1452 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1453 in q.js: isPromise replaced with promise.isFulfilled
Mutant 1454 in q.js: promise replaced with promise.then(function () {
  return undefined;
})
Mutant 1455 in q.js: promise replaced with promise.then(function () {
  throw new Error("error");
})
Mutant 1456 in q.js: promise replaced with promise.then(function () {
  return promise;
})
Mutant 1457 in q.js: promise.inspect replaced with promise.state
Mutant 1458 in q.js: promise.inspect replaced with promise.value
Mutant 1459 in q.js: promise.inspect replaced with promise.reason
Mutant 1460 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1461 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1462 in q.js: --pendingCount === 0 replaced with pendingCount === 0 && promises.length > 0
Mutant 1463 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1464 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1465 in q.js: promises replaced with promises.slice(1)
Mutant 1466 in q.js: promises replaced with promises.concat(["new promise"])
Mutant 1467 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.state === "fulfilled";
})
Mutant 1468 in q.js: deferred.notify replaced with deferred.reject
Mutant 1469 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1470 in q.js: deferred.notify replaced with deferred.progress
Mutant 1471 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + 1,
  value: progress
}
Mutant 1472 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index - 1,
  value: progress
}
Mutant 1473 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index * 2,
  value: progress
}
Mutant 1474 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1475 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1476 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1477 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1478 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1479 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1480 in q.js: promises replaced with []
Mutant 1481 in q.js: promises replaced with null
Mutant 1482 in q.js: promises replaced with undefined
Mutant 1483 in q.js: all replaced with any
Mutant 1484 in q.js: all replaced with none
Mutant 1485 in q.js: all replaced with race
Mutant 1486 in q.js: this replaced with null
Mutant 1487 in q.js: this replaced with undefined
Mutant 1488 in q.js: this replaced with []
Mutant 1489 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1490 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1491 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1492 in q.js: Q.resolve replaced with Q.reject
Mutant 1493 in q.js: Q.resolve replaced with Q.defer
Mutant 1494 in q.js: Q.resolve replaced with Q.when
Mutant 1495 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1496 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected).catch(onProgress))
Mutant 1497 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected).finally(onProgress))
Mutant 1498 in q.js: promise replaced with promise.then(onFulfilled, onRejected)
Mutant 1499 in q.js: promise replaced with promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected)
Mutant 1500 in q.js: promise replaced with promise.then(onRejected, onFulfilled)
Mutant 1501 in q.js: onFulfilled replaced with onRejected
Mutant 1502 in q.js: onFulfilled replaced with onProgress
Mutant 1503 in q.js: onFulfilled replaced with noop
Mutant 1504 in q.js: onRejected replaced with onFulfilled
Mutant 1505 in q.js: onRejected replaced with onProgress
Mutant 1506 in q.js: onRejected replaced with noop
Mutant 1507 in q.js: onProgress replaced with onFulfilled
Mutant 1508 in q.js: onProgress replaced with onRejected
Mutant 1509 in q.js: onProgress replaced with noop
Mutant 1510 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1511 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1512 in q.js: deferred.resolve replaced with deferred.promise
Mutant 1513 in q.js: result replaced with promise
Mutant 1514 in q.js: result replaced with index
Mutant 1515 in q.js: result replaced with promise.value
Mutant 1516 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1517 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1518 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1519 in q.js: deferred.reject replaced with deferred.notify
Mutant 1520 in q.js: deferred.reject replaced with deferred.inspect
Mutant 1521 in q.js: rejection replaced with null
Mutant 1522 in q.js: rejection replaced with undefined
Mutant 1523 in q.js: rejection replaced with new Error("Rejection")
Mutant 1524 in q.js: any replaced with all
Mutant 1525 in q.js: any replaced with none
Mutant 1526 in q.js: any replaced with some
Mutant 1527 in q.js: this replaced with this.dispatch("keys", [])
Mutant 1528 in q.js: this replaced with this.dispatch("keys", ["key1", "key2"])
Mutant 1529 in q.js: this replaced with this.dispatch("keys", ["key1", "key2", "key3"])
Mutant 1530 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allSettled, "allSettled", "allResolved")
Mutant 1531 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(Q.allSettled, "allSettled", "allResolved")
Mutant 1532 in q.js: allResolved replaced with allSettled
Mutant 1533 in q.js: allResolved replaced with any
Mutant 1534 in q.js: "allResolved" replaced with "allSettled"
Mutant 1535 in q.js: "allResolved" replaced with "any"
Mutant 1536 in q.js: "allResolved" replaced with "all"
Mutant 1537 in q.js: "allSettled" replaced with "allFulfilled"
Mutant 1538 in q.js: "allSettled" replaced with "anyRejected"
Mutant 1539 in q.js: "allSettled" replaced with "allRejected"
Mutant 1540 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1541 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve)
Mutant 1542 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.all)
Mutant 1543 in q.js: array_map replaced with array_filter
Mutant 1544 in q.js: array_map replaced with array_reduce
Mutant 1545 in q.js: array_map replaced with array_forEach
Mutant 1546 in q.js: promises replaced with promises.slice(1)
Mutant 1547 in q.js: promises replaced with promises.concat(Q.reject())
Mutant 1548 in q.js: promises replaced with promises.map(function (promise) {
  return Q.reject(promise);
})
Mutant 1549 in q.js: Q replaced with Q.reject
Mutant 1550 in q.js: Q replaced with Q.defer
Mutant 1551 in q.js: Q replaced with Q.when
Mutant 1552 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1553 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop))
Mutant 1554 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop).then(noop, noop))
Mutant 1555 in q.js: allResolved replaced with allSettled
Mutant 1556 in q.js: allResolved replaced with any
Mutant 1557 in q.js: this replaced with null
Mutant 1558 in q.js: this replaced with undefined
Mutant 1559 in q.js: this replaced with []
Mutant 1560 in q.js: Q replaced with Q.reject
Mutant 1561 in q.js: Q replaced with Q.defer
Mutant 1562 in q.js: Q replaced with Q.when
Mutant 1563 in q.js: promises replaced with promises.reverse()
Mutant 1564 in q.js: promises replaced with promises.slice(1)
Mutant 1565 in q.js: promises replaced with promises.concat([Q.reject("error")])
Mutant 1566 in q.js: promise replaced with promise.then(function (result) {
  return result + 1;
})
Mutant 1567 in q.js: promise replaced with promise.then(function (result) {
  return result * 2;
})
Mutant 1568 in q.js: promise replaced with promise.then(function (result) {
  return result - 1;
})
Mutant 1569 in q.js: promise.then(regardless, regardless) replaced with promise.then(regardless, noop)
Mutant 1570 in q.js: promise.then(regardless, regardless) replaced with promise.then(noop, regardless)
Mutant 1571 in q.js: promise.then replaced with promise.catch
Mutant 1572 in q.js: promise.then replaced with promise.finally
Mutant 1573 in q.js: promise.then replaced with promise.all
Mutant 1574 in q.js: regardless replaced with rejected
Mutant 1575 in q.js: regardless replaced with noop
Mutant 1576 in q.js: regardless replaced with promise.inspect()
Mutant 1577 in q.js: regardless replaced with promise.then(function (value) {
  return value;
})
Mutant 1578 in q.js: regardless replaced with promise.then(function (value) {
  return value;
}, function (reason) {
  throw reason;
})
Mutant 1579 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1580 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(undefined, rejected)
Mutant 1581 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, null)
Mutant 1582 in q.js: object replaced with false
Mutant 1583 in q.js: void 0 replaced with null
Mutant 1584 in q.js: void 0 replaced with undefined
Mutant 1585 in q.js: void 0 replaced with 0
Mutant 1586 in q.js: rejected replaced with function (err) {
  throw err;
}
Mutant 1587 in q.js: rejected replaced with function (err) {
  return err;
}
Mutant 1588 in q.js: rejected replaced with function (err) {
  return Q.reject(err);
}
Mutant 1589 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1590 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1591 in q.js: this.then(void 0, rejected) replaced with this.then(rejected, null)
Mutant 1592 in q.js: void 0 replaced with null
Mutant 1593 in q.js: void 0 replaced with undefined
Mutant 1594 in q.js: void 0 replaced with () => {}
Mutant 1595 in q.js: rejected replaced with resolved
Mutant 1596 in q.js: rejected replaced with deferred.reject(new Error("rejected"))
Mutant 1597 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null)
Mutant 1598 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(undefined)
Mutant 1599 in q.js: object replaced with {}
Mutant 1600 in q.js: void 0 replaced with null
Mutant 1601 in q.js: void 0 replaced with undefined
Mutant 1602 in q.js: void 0 replaced with () => {}
Mutant 1603 in q.js: void 0 replaced with null
Mutant 1604 in q.js: void 0 replaced with undefined
Mutant 1605 in q.js: void 0 replaced with NaN
Mutant 1606 in q.js: progressed replaced with progressed + 1
Mutant 1607 in q.js: progressed replaced with progressed - 1
Mutant 1608 in q.js: progressed replaced with progressed * 2
Mutant 1609 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1610 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1611 in q.js: void 0 replaced with null
Mutant 1612 in q.js: void 0 replaced with undefined
Mutant 1613 in q.js: void 0 replaced with function () {}
Mutant 1614 in q.js: void 0 replaced with null
Mutant 1615 in q.js: void 0 replaced with undefined
Mutant 1616 in q.js: void 0 replaced with function () {}
Mutant 1617 in q.js: progressed replaced with null
Mutant 1618 in q.js: progressed replaced with undefined
Mutant 1619 in q.js: progressed replaced with promise.progressed
Mutant 1620 in q.js: object replaced with null
Mutant 1621 in q.js: object replaced with undefined
Mutant 1622 in q.js: object replaced with 0
Mutant 1623 in q.js: callback replaced with callback()
Mutant 1624 in q.js: callback replaced with callback.apply()
Mutant 1625 in q.js: callback replaced with callback.call()
Mutant 1626 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.apply === "function"
Mutant 1627 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.call === "function"
Mutant 1628 in q.js: !callback || typeof callback.apply !== "function" replaced with callback && typeof callback.bind === "function"
Mutant 1629 in q.js: Q replaced with Q.reject
Mutant 1630 in q.js: Q replaced with Q.resolve
Mutant 1631 in q.js: Q replaced with Q.defer
Mutant 1632 in q.js: callback replaced with callback.fcall()
Mutant 1633 in q.js: callback replaced with callback.fcall(null)
Mutant 1634 in q.js: callback replaced with callback.fcall(promise)
Mutant 1635 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1636 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress, void 0)
Mutant 1637 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, void 0)
Mutant 1638 in q.js: object replaced with null
Mutant 1639 in q.js: object replaced with undefined
Mutant 1640 in q.js: fulfilled replaced with rejected
Mutant 1641 in q.js: fulfilled replaced with progress
Mutant 1642 in q.js: fulfilled replaced with void 0
Mutant 1643 in q.js: rejected replaced with undefined
Mutant 1644 in q.js: rejected replaced with null
Mutant 1645 in q.js: progress replaced with null
Mutant 1646 in q.js: progress replaced with undefined
Mutant 1647 in q.js: progress replaced with function () {}
Mutant 1648 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.then())
Mutant 1649 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.catch())
Mutant 1650 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.finally())
Mutant 1651 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, null)
Mutant 1652 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, "progress")
Mutant 1653 in q.js: fulfilled replaced with rejected
Mutant 1654 in q.js: fulfilled replaced with progressed
Mutant 1655 in q.js: fulfilled replaced with void 0
Mutant 1656 in q.js: rejected replaced with resolved
Mutant 1657 in q.js: rejected replaced with undefined
Mutant 1658 in q.js: progress replaced with null
Mutant 1659 in q.js: progress replaced with undefined
Mutant 1660 in q.js: progress replaced with 0
Mutant 1661 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1662 in q.js: onUnhandledError replaced with onUnhandledError.apply(null)
Mutant 1663 in q.js: onUnhandledError replaced with onUnhandledError.call(null)
Mutant 1664 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1665 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1666 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(0, onUnhandledError)
Mutant 1667 in q.js: void 0 replaced with null
Mutant 1668 in q.js: void 0 replaced with undefined
Mutant 1669 in q.js: void 0 replaced with 0
Mutant 1670 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1671 in q.js: onUnhandledError replaced with null
Mutant 1672 in q.js: onUnhandledError replaced with function () {}
Mutant 1673 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms * 2, error)
Mutant 1674 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms / 2, error)
Mutant 1675 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(error, ms)
Mutant 1676 in q.js: Q replaced with Q.reject
Mutant 1677 in q.js: Q replaced with Q.resolve
Mutant 1678 in q.js: Q replaced with Q.defer
Mutant 1679 in q.js: object replaced with null
Mutant 1680 in q.js: object replaced with undefined
Mutant 1681 in q.js: object replaced with "foo"
Mutant 1682 in q.js: ms replaced with 0
Mutant 1683 in q.js: ms replaced with -1
Mutant 1684 in q.js: ms replaced with NaN
Mutant 1685 in q.js: error replaced with null
Mutant 1686 in q.js: error replaced with undefined
Mutant 1687 in q.js: error replaced with "error"
Mutant 1688 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1689 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1690 in q.js: !error || "string" === typeof error replaced with error && "string" !== typeof error
Mutant 1691 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1692 in q.js: deferred.reject replaced with deferred.notify
Mutant 1693 in q.js: deferred.reject replaced with null
Mutant 1694 in q.js: error replaced with null
Mutant 1695 in q.js: error replaced with "error"
Mutant 1696 in q.js: error replaced with new Error("error")
Mutant 1697 in q.js: clearTimeout replaced with clearInterval
Mutant 1698 in q.js: clearTimeout replaced with null
Mutant 1699 in q.js: timeoutId replaced with null
Mutant 1700 in q.js: timeoutId replaced with undefined
Mutant 1701 in q.js: timeoutId replaced with 0
Mutant 1702 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1703 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1704 in q.js: deferred.resolve replaced with undefined
Mutant 1705 in q.js: value replaced with null
Mutant 1706 in q.js: value replaced with undefined
Mutant 1707 in q.js: clearTimeout replaced with clearInterval
Mutant 1708 in q.js: timeoutId replaced with 0
Mutant 1709 in q.js: timeoutId replaced with null
Mutant 1710 in q.js: timeoutId replaced with undefined
Mutant 1711 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1712 in q.js: deferred.reject replaced with deferred.notify
Mutant 1713 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1714 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1715 in q.js: timeout === void 0 replaced with timeout !== null
Mutant 1716 in q.js: Q replaced with Q.reject
Mutant 1717 in q.js: object replaced with null
Mutant 1718 in q.js: object replaced with undefined
Mutant 1719 in q.js: object replaced with {}
Mutant 1720 in q.js: timeout replaced with timeout + 1
Mutant 1721 in q.js: timeout replaced with timeout - 1
Mutant 1722 in q.js: timeout replaced with 0
Mutant 1723 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1724 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1725 in q.js: deferred.resolve replaced with null
Mutant 1726 in q.js: value replaced with null
Mutant 1727 in q.js: value replaced with undefined
Mutant 1728 in q.js: value replaced with 0
Mutant 1729 in q.js: Q replaced with Q.reject
Mutant 1730 in q.js: Q replaced with Q.resolve
Mutant 1731 in q.js: Q replaced with Q.defer
Mutant 1732 in q.js: callback replaced with null
Mutant 1733 in q.js: callback replaced with undefined
Mutant 1734 in q.js: callback replaced with () => {}
Mutant 1735 in q.js: args replaced with null
Mutant 1736 in q.js: args replaced with undefined
Mutant 1737 in q.js: args replaced with []
Mutant 1738 in q.js: args replaced with args.slice(1)
Mutant 1739 in q.js: args replaced with args.concat([null])
Mutant 1740 in q.js: args replaced with args.filter(function (arg) {
  return arg !== null;
})
Mutant 1741 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1742 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1743 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1744 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1745 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1746 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1747 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1748 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1749 in q.js: nodeArgs replaced with nodeArgs.slice(0, -1)
Mutant 1750 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1751 in q.js: deferred.reject replaced with deferred.notify
Mutant 1752 in q.js: deferred.reject replaced with deferred.reject("Different error message")
Mutant 1753 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1754 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1755 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 1756 in q.js: arguments replaced with null
Mutant 1757 in q.js: arguments replaced with undefined
Mutant 1758 in q.js: arguments replaced with []
Mutant 1759 in q.js: 1 replaced with 0
Mutant 1760 in q.js: 1 replaced with 2
Mutant 1761 in q.js: 1 replaced with null
Mutant 1762 in q.js: callback replaced with undefined
Mutant 1763 in q.js: callback replaced with null
Mutant 1764 in q.js: callback replaced with function () {}
Mutant 1765 in q.js: args replaced with null
Mutant 1766 in q.js: args replaced with []
Mutant 1767 in q.js: args replaced with undefined
Mutant 1768 in q.js: arguments replaced with null
Mutant 1769 in q.js: arguments replaced with undefined
Mutant 1770 in q.js: arguments replaced with []
Mutant 1771 in q.js: defer replaced with deferred.reject
Mutant 1772 in q.js: defer replaced with deferred.resolve
Mutant 1773 in q.js: defer replaced with deferred.notify
Mutant 1774 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1775 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1776 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1777 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1778 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1779 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1780 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1781 in q.js: nodeArgs replaced with nodeArgs.concat(["dummy"])
Mutant 1782 in q.js: nodeArgs replaced with nodeArgs.map(function (x) {
  return x + 1;
})
Mutant 1783 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1784 in q.js: deferred.reject replaced with deferred.notify
Mutant 1785 in q.js: deferred.reject replaced with deferred.reject("error")
Mutant 1786 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1787 in q.js: callback === undefined replaced with callback !== null
Mutant 1788 in q.js: callback === undefined replaced with callback !== "undefined"
Mutant 1789 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1790 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1791 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1792 in q.js: array_slice replaced with array_slice.length
Mutant 1793 in q.js: arguments replaced with null
Mutant 1794 in q.js: arguments replaced with undefined
Mutant 1795 in q.js: arguments replaced with []
Mutant 1796 in q.js: 1 replaced with 0
Mutant 1797 in q.js: 1 replaced with -1
Mutant 1798 in q.js: 1 replaced with null
Mutant 1799 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1800 in q.js: baseArgs.concat replaced with baseArgs.shift
Mutant 1801 in q.js: baseArgs.concat replaced with baseArgs.pop
Mutant 1802 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1803 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1804 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1805 in q.js: arguments replaced with null
Mutant 1806 in q.js: arguments replaced with undefined
Mutant 1807 in q.js: arguments replaced with []
Mutant 1808 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1809 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1810 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1811 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1812 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1813 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err, result) {})
Mutant 1814 in q.js: Q replaced with deferred
Mutant 1815 in q.js: Q replaced with Promise
Mutant 1816 in q.js: callback replaced with undefined
Mutant 1817 in q.js: callback replaced with null
Mutant 1818 in q.js: callback replaced with 0
Mutant 1819 in q.js: nodeArgs replaced with nodeArgs.shift()
Mutant 1820 in q.js: nodeArgs replaced with nodeArgs.pop()
Mutant 1821 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1822 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1823 in q.js: deferred.reject replaced with deferred.notify
Mutant 1824 in q.js: deferred.reject replaced with deferred.reject(new Error())
Mutant 1825 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1826 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 1827 in q.js: arguments replaced with array_slice(arguments, 0, -1)
Mutant 1828 in q.js: args.unshift replaced with args.push
Mutant 1829 in q.js: args.unshift replaced with args.shift
Mutant 1830 in q.js: args.unshift replaced with args.pop
Mutant 1831 in q.js: this replaced with null
Mutant 1832 in q.js: this replaced with undefined
Mutant 1833 in q.js: this replaced with 0
Mutant 1834 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(void 0, this)
Mutant 1835 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(void 0, null)
Mutant 1836 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1837 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1838 in q.js: void 0 replaced with null
Mutant 1839 in q.js: void 0 replaced with undefined
Mutant 1840 in q.js: void 0 replaced with void 1
Mutant 1841 in q.js: args replaced with args.slice(1)
Mutant 1842 in q.js: args replaced with args.concat(args)
Mutant 1843 in q.js: args replaced with args.reverse()
Mutant 1844 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1845 in q.js: array_slice(arguments, 2) replaced with array_slice(args, 2)
Mutant 1846 in q.js: array_slice(arguments, 2) replaced with array_slice(baseArgs, 1)
Mutant 1847 in q.js: arguments replaced with arguments.length
Mutant 1848 in q.js: arguments replaced with arguments[0]
Mutant 1849 in q.js: arguments replaced with arguments[1]
Mutant 1850 in q.js: 2 replaced with 1
Mutant 1851 in q.js: 2 replaced with 3
Mutant 1852 in q.js: 2 replaced with 0
Mutant 1853 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1854 in q.js: baseArgs.concat replaced with baseArgs.shift
Mutant 1855 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1856 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1857 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1858 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1859 in q.js: arguments replaced with null
Mutant 1860 in q.js: arguments replaced with undefined
Mutant 1861 in q.js: arguments replaced with []
Mutant 1862 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1863 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1864 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1865 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1866 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1867 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1868 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[0])
Mutant 1869 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[1])
Mutant 1870 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments.length)
Mutant 1871 in q.js: callback.apply replaced with callback.call
Mutant 1872 in q.js: callback.apply replaced with callback.bind
Mutant 1873 in q.js: thisp replaced with null
Mutant 1874 in q.js: thisp replaced with undefined
Mutant 1875 in q.js: thisp replaced with this
Mutant 1876 in q.js: arguments replaced with nodeArgs
Mutant 1877 in q.js: arguments replaced with baseArgs
Mutant 1878 in q.js: arguments replaced with args
Mutant 1879 in q.js: bound replaced with null
Mutant 1880 in q.js: bound replaced with undefined
Mutant 1881 in q.js: bound replaced with this
Mutant 1882 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1883 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1884 in q.js: nodeArgs replaced with nodeArgs.filter(function (arg) {
  return arg !== undefined;
})
Mutant 1885 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1886 in q.js: deferred.reject replaced with deferred.notify
Mutant 1887 in q.js: deferred.reject replaced with null
Mutant 1888 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1889 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 2)
Mutant 1890 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 3)
Mutant 1891 in q.js: arguments replaced with null
Mutant 1892 in q.js: arguments replaced with undefined
Mutant 1893 in q.js: arguments replaced with []
Mutant 1894 in q.js: 0 replaced with 1
Mutant 1895 in q.js: 0 replaced with -1
Mutant 1896 in q.js: 0 replaced with null
Mutant 1897 in q.js: args.unshift replaced with args.push
Mutant 1898 in q.js: args.unshift replaced with args.shift
Mutant 1899 in q.js: args.unshift replaced with args.pop
Mutant 1900 in q.js: this replaced with null
Mutant 1901 in q.js: this replaced with undefined
Mutant 1902 in q.js: this replaced with 0
Mutant 1903 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1904 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1905 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply("foo", args)
Mutant 1906 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1907 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1908 in q.js: Q.nbind.apply replaced with Q.nbind.apply.bind
Mutant 1909 in q.js: void 0 replaced with null
Mutant 1910 in q.js: void 0 replaced with undefined
Mutant 1911 in q.js: void 0 replaced with this
Mutant 1912 in q.js: args replaced with args.slice(1)
Mutant 1913 in q.js: args replaced with args.concat([])
Mutant 1914 in q.js: args replaced with args.filter(function (arg) {
  return arg !== undefined;
})
Mutant 1915 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1916 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat(deferred.makeNodeResolver()))
Mutant 1917 in q.js: object replaced with null
Mutant 1918 in q.js: object replaced with undefined
Mutant 1919 in q.js: object replaced with "foo"
Mutant 1920 in q.js: name replaced with name + "foo"
Mutant 1921 in q.js: name replaced with name.toUpperCase()
Mutant 1922 in q.js: name replaced with name.split("")
Mutant 1923 in q.js: args replaced with null
Mutant 1924 in q.js: args replaced with undefined
Mutant 1925 in q.js: args replaced with []
Mutant 1926 in q.js: args || [] replaced with null
Mutant 1927 in q.js: args || [] replaced with undefined
Mutant 1928 in q.js: args || [] replaced with []
Mutant 1929 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1930 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1931 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1932 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(true)
Mutant 1933 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(false)
Mutant 1934 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1935 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1936 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
Mutant 1937 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1938 in q.js: "post" replaced with "send"
Mutant 1939 in q.js: "post" replaced with "dispatch"
Mutant 1940 in q.js: "post" replaced with "apply"
Mutant 1941 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1942 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1943 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, 0]
Mutant 1944 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1945 in q.js: deferred.reject replaced with null
Mutant 1946 in q.js: deferred.reject replaced with deferred.reject("error")
Mutant 1947 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1948 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1949 in q.js: array_slice(arguments, 2) replaced with array_slice(args)
Mutant 1950 in q.js: arguments replaced with null
Mutant 1951 in q.js: arguments replaced with undefined
Mutant 1952 in q.js: arguments replaced with []
Mutant 1953 in q.js: 2 replaced with 1
Mutant 1954 in q.js: 2 replaced with 3
Mutant 1955 in q.js: 2 replaced with "foo"
Mutant 1956 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1957 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1958 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1959 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1960 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1961 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1962 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1963 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, 1])
Mutant 1964 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs.slice(1)])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, 1])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs.slice(1)])
Mutant 1965 in q.js: Q replaced with this
Mutant 1966 in q.js: Q replaced with null
Mutant 1967 in q.js: object replaced with null
Mutant 1968 in q.js: object replaced with undefined
Mutant 1969 in q.js: object replaced with {}
Mutant 1970 in q.js: "post" replaced with "get"
Mutant 1971 in q.js: "post" replaced with "put"
Mutant 1972 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1973 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1974 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1975 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1976 in q.js: deferred.reject replaced with deferred.notify
Mutant 1977 in q.js: deferred.reject replaced with null
Mutant 1978 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1979 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1980 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 1981 in q.js: arguments replaced with 1
Mutant 1982 in q.js: arguments replaced with null
Mutant 1983 in q.js: arguments replaced with undefined
Mutant 1984 in q.js: 1 replaced with 0
Mutant 1985 in q.js: 1 replaced with 2
Mutant 1986 in q.js: 1 replaced with nodeArgs.length
Mutant 1987 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1988 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1989 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1990 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1991 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1992 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.makeNodeResolver())
Mutant 1993 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [nodeArgs, name])
Mutant 1994 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
Mutant 1995 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, undefined])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [nodeArgs, name])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, undefined])
Mutant 1996 in q.js: "post" replaced with "send"
Mutant 1997 in q.js: "post" replaced with "dispatch"
Mutant 1998 in q.js: "post" replaced with "emit"
Mutant 1999 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "extra"]
Mutant 2000 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 2001 in q.js: deferred.reject replaced with deferred.resolve
Mutant 2002 in q.js: deferred.reject replaced with deferred.notify
Mutant 2003 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 2004 in q.js: Q replaced with null
Mutant 2005 in q.js: Q replaced with undefined
Mutant 2006 in q.js: Q replaced with 0
Mutant 2007 in q.js: object replaced with null
Mutant 2008 in q.js: object replaced with undefined
Mutant 2009 in q.js: object replaced with 0
Mutant 2010 in q.js: nodeback replaced with nodeback(error, value)
Mutant 2011 in q.js: nodeback replaced with nodeback(null, error)
Mutant 2012 in q.js: nodeback replaced with nodeback(value, error)
Mutant 2013 in q.js: nodeback replaced with !nodeback
Mutant 2014 in q.js: nodeback replaced with nodeback + 1
Mutant 2015 in q.js: nodeback replaced with nodeback * 2
Mutant 2016 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 2017 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 2018 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 2019 in q.js: null replaced with undefined
Mutant 2020 in q.js: null replaced with 0
Mutant 2021 in q.js: null replaced with {}
Mutant 2022 in q.js: value replaced with undefined
Mutant 2023 in q.js: value replaced with null
Mutant 2024 in q.js: value replaced with "value"
Mutant 2025 in q.js: error replaced with null
Mutant 2026 in q.js: error replaced with undefined
Mutant 2027 in q.js: error replaced with new Error("Different error message")
Mutant 2028 in q.js: captureLine replaced with captureLine + 1
Mutant 2029 in q.js: captureLine replaced with captureLine - 1
Mutant 2030 in q.js: captureLine replaced with captureLine * 2
Mutant 2031 in queue.js: Q.defer replaced with ends.reject
Mutant 2032 in queue.js: "head" replaced with "tail"
Mutant 2033 in queue.js: "head" replaced with "head.tail"
Mutant 2034 in queue.js: "head" replaced with "ends.promise.get('tail')"
Mutant 2035 in queue.js: "tail" replaced with "head"
Mutant 2036 in queue.js: "tail" replaced with "tail" + 1
Mutant 2037 in queue.js: "tail" replaced with "tail" - 1
Mutant 2038 in queue.js: closed.resolve replaced with closed.reject
Mutant 2039 in queue.js: error replaced with null
Mutant 2040 in queue.js: error replaced with undefined
Mutant 2041 in queue.js: error replaced with new Error("Some other error")
Mutant 2042 in queue.js: Q.reject replaced with Q.resolve
Mutant 2043 in queue.js: Q.reject replaced with Q.defer
Mutant 2044 in queue.js: error replaced with null
Mutant 2045 in queue.js: error replaced with undefined
Mutant 2046 in queue.js: error replaced with 0
Mutant 2047 in queue.js: ends.resolve replaced with ends.reject
Mutant 2048 in queue.js: ends.resolve replaced with closed.resolve
Mutant 2049 in queue.js: ends.resolve replaced with Q.resolve
[32m19:21:05 (3039) INFO Instrumenter[39m Instrumented 2 source file(s) with 2050 mutant(s)
[32m19:21:05 (3039) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m19:21:07 (3039) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m19:21:07 (3039) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m19:21:14 (3039) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6805 ms, overhead 2 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 53m) 3/2050 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 50m) 4/2050 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 50m) 6/2050 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 14m) 7/2050 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 8m) 9/2050 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 24m) 10/2050 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 18m) 12/2050 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 28m) 13/2050 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 10m) 16/2050 tested (12 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 8m) 18/2050 tested (14 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 15m) 19/2050 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 13m) 21/2050 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 19m) 22/2050 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 16m) 24/2050 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 22m) 25/2050 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 27m) 26/2050 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 24m) 28/2050 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 29m) 29/2050 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 13m) 33/2050 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 17m) 34/2050 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 21m) 35/2050 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 31m) 35/2050 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 34m) 36/2050 tested (27 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 37m) 37/2050 tested (27 survived, 3 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 40m) 38/2050 tested (28 survived, 3 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 43m) 39/2050 tested (28 survived, 4 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 46m) 40/2050 tested (29 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 43m) 42/2050 tested (31 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 45m) 43/2050 tested (32 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 42m) 45/2050 tested (34 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 30m) 49/2050 tested (35 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 33m) 50/2050 tested (36 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 35m) 51/2050 tested (37 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 33m) 53/2050 tested (37 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 35m) 54/2050 tested (38 survived, 5 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 33m) 56/2050 tested (40 survived, 5 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 39m) 56/2050 tested (40 survived, 5 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 33m) 59/2050 tested (40 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 25m) 63/2050 tested (41 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 26m) 64/2050 tested (42 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 25m) 66/2050 tested (44 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 27m) 67/2050 tested (45 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 25m) 69/2050 tested (47 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 27m) 70/2050 tested (48 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 26m) 72/2050 tested (50 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 27m) 73/2050 tested (51 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 26m) 75/2050 tested (53 survived, 6 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 27m) 76/2050 tested (54 survived, 6 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 26m) 78/2050 tested (56 survived, 6 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 27m) 79/2050 tested (57 survived, 6 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 26m) 81/2050 tested (59 survived, 6 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 28m) 82/2050 tested (60 survived, 6 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 29m) 83/2050 tested (61 survived, 6 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 30m) 84/2050 tested (61 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 34m) 84/2050 tested (61 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 35m) 85/2050 tested (61 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 36m) 86/2050 tested (61 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 38m) 87/2050 tested (62 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 41m) 87/2050 tested (62 survived, 9 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 40m) 89/2050 tested (63 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 44m) 89/2050 tested (63 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 37m) 93/2050 tested (63 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 36m) 95/2050 tested (65 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 37m) 96/2050 tested (66 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 98/2050 tested (68 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 36m) 99/2050 tested (69 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 35m) 101/2050 tested (71 survived, 11 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 36m) 102/2050 tested (72 survived, 11 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 35m) 104/2050 tested (74 survived, 11 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 36m) 105/2050 tested (75 survived, 11 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 37m) 106/2050 tested (76 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 35m) 108/2050 tested (78 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 36m) 109/2050 tested (79 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 35m) 111/2050 tested (81 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 36m) 112/2050 tested (82 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 35m) 114/2050 tested (84 survived, 11 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 35m) 115/2050 tested (85 survived, 11 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 34m) 117/2050 tested (87 survived, 11 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 35m) 118/2050 tested (88 survived, 11 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 34m) 120/2050 tested (90 survived, 11 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 35m) 121/2050 tested (91 survived, 11 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 34m) 123/2050 tested (93 survived, 11 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 34m) 124/2050 tested (94 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 33m) 126/2050 tested (96 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 34m) 127/2050 tested (97 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 33m) 129/2050 tested (99 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 34m) 130/2050 tested (100 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 33m) 132/2050 tested (102 survived, 11 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 33m) 133/2050 tested (103 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 32m) 135/2050 tested (105 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 33m) 136/2050 tested (106 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 32m) 138/2050 tested (108 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 33m) 139/2050 tested (109 survived, 11 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 33m) 140/2050 tested (110 survived, 11 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 29m) 144/2050 tested (111 survived, 11 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 25m) 148/2050 tested (113 survived, 11 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 26m) 149/2050 tested (113 survived, 11 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 21m) 154/2050 tested (113 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 17m) 158/2050 tested (113 survived, 12 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 18m) 159/2050 tested (113 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 17m) 161/2050 tested (114 survived, 13 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 18m) 162/2050 tested (115 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 17m) 164/2050 tested (117 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 18m) 165/2050 tested (118 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 17m) 167/2050 tested (120 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 17m) 168/2050 tested (121 survived, 13 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 17m) 170/2050 tested (123 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 17m) 171/2050 tested (124 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 17m) 173/2050 tested (126 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 17m) 174/2050 tested (127 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 176/2050 tested (129 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 17m) 177/2050 tested (130 survived, 13 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 179/2050 tested (132 survived, 13 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 17m) 180/2050 tested (133 survived, 13 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 17m) 181/2050 tested (134 survived, 13 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 17m) 183/2050 tested (136 survived, 13 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 17m) 184/2050 tested (137 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 17m) 186/2050 tested (139 survived, 13 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 17m) 187/2050 tested (140 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 16m) 189/2050 tested (142 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 17m) 190/2050 tested (143 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 16m) 192/2050 tested (145 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 17m) 193/2050 tested (146 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 16m) 195/2050 tested (148 survived, 13 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 17m) 196/2050 tested (149 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 16m) 198/2050 tested (151 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 16m) 199/2050 tested (152 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 16m) 201/2050 tested (154 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 16m) 202/2050 tested (155 survived, 13 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 16m) 204/2050 tested (157 survived, 13 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 16m) 205/2050 tested (158 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 15m) 207/2050 tested (160 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 16m) 208/2050 tested (161 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 15m) 210/2050 tested (163 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 16m) 211/2050 tested (164 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 15m) 213/2050 tested (166 survived, 13 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 15m) 214/2050 tested (167 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 215/2050 tested (168 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 15m) 217/2050 tested (170 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 16m) 218/2050 tested (171 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 15m) 220/2050 tested (173 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 15m) 221/2050 tested (174 survived, 13 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 15m) 223/2050 tested (176 survived, 13 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 15m) 224/2050 tested (177 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 15m) 226/2050 tested (179 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 15m) 227/2050 tested (180 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 14m) 229/2050 tested (182 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 15m) 230/2050 tested (183 survived, 13 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 14m) 232/2050 tested (185 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 233/2050 tested (186 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 235/2050 tested (188 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 236/2050 tested (189 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 238/2050 tested (191 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 239/2050 tested (192 survived, 13 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 12m) 243/2050 tested (193 survived, 13 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 12m) 244/2050 tested (193 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 11m) 246/2050 tested (193 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 12m) 247/2050 tested (194 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 11m) 249/2050 tested (196 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 12m) 250/2050 tested (197 survived, 13 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 11m) 252/2050 tested (199 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 9m) 256/2050 tested (200 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 9m) 257/2050 tested (201 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 9m) 259/2050 tested (203 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 9m) 260/2050 tested (204 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 8m) 262/2050 tested (206 survived, 13 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 9m) 263/2050 tested (207 survived, 13 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 8m) 265/2050 tested (209 survived, 13 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 8m) 266/2050 tested (210 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 9m) 267/2050 tested (211 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 8m) 269/2050 tested (213 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 8m) 270/2050 tested (214 survived, 13 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 8m) 272/2050 tested (216 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 8m) 273/2050 tested (217 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 8m) 275/2050 tested (219 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 8m) 276/2050 tested (220 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 8m) 278/2050 tested (222 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 8m) 279/2050 tested (223 survived, 13 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 7m) 281/2050 tested (225 survived, 13 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 282/2050 tested (226 survived, 13 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 7m) 284/2050 tested (228 survived, 13 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 7m) 285/2050 tested (229 survived, 13 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 7m) 287/2050 tested (231 survived, 13 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 7m) 288/2050 tested (232 survived, 13 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 7m) 290/2050 tested (234 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 291/2050 tested (235 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 6m) 293/2050 tested (237 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 294/2050 tested (238 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 6m) 296/2050 tested (240 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 6m) 297/2050 tested (241 survived, 13 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 298/2050 tested (242 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 300/2050 tested (244 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 301/2050 tested (245 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 303/2050 tested (247 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 304/2050 tested (248 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 306/2050 tested (250 survived, 13 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 307/2050 tested (251 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 5m) 309/2050 tested (253 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 310/2050 tested (254 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 5m) 312/2050 tested (256 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 5m) 313/2050 tested (257 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 5m) 315/2050 tested (259 survived, 13 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 5m) 316/2050 tested (260 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 318/2050 tested (262 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 319/2050 tested (263 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 4m) 321/2050 tested (265 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 322/2050 tested (266 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 4m) 324/2050 tested (268 survived, 13 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 4m) 325/2050 tested (269 survived, 13 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 4m) 327/2050 tested (271 survived, 13 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 328/2050 tested (272 survived, 13 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 330/2050 tested (274 survived, 13 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 331/2050 tested (275 survived, 13 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 332/2050 tested (276 survived, 13 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 334/2050 tested (278 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 335/2050 tested (279 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 3m) 337/2050 tested (281 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 338/2050 tested (282 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 2m) 342/2050 tested (284 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 1m) 344/2050 tested (285 survived, 13 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 2m) 345/2050 tested (286 survived, 13 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 1m) 347/2050 tested (288 survived, 13 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 1m) 348/2050 tested (289 survived, 13 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 1m) 350/2050 tested (291 survived, 13 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 1m) 351/2050 tested (292 survived, 13 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 1m) 353/2050 tested (294 survived, 13 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 1m) 354/2050 tested (295 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 59m) 358/2050 tested (296 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 59m) 360/2050 tested (298 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 59m) 361/2050 tested (299 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 58m) 363/2050 tested (301 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 59m) 364/2050 tested (302 survived, 13 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 58m) 366/2050 tested (304 survived, 13 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~2h 58m) 367/2050 tested (305 survived, 13 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 58m) 369/2050 tested (307 survived, 13 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 58m) 370/2050 tested (308 survived, 13 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 58m) 372/2050 tested (310 survived, 13 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 58m) 373/2050 tested (311 survived, 13 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 57m) 375/2050 tested (313 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 58m) 376/2050 tested (314 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 58m) 377/2050 tested (315 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 57m) 379/2050 tested (317 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 57m) 380/2050 tested (318 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 57m) 382/2050 tested (320 survived, 13 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 57m) 383/2050 tested (321 survived, 13 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 57m) 385/2050 tested (323 survived, 13 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 57m) 386/2050 tested (324 survived, 13 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 56m) 389/2050 tested (326 survived, 13 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 56m) 391/2050 tested (327 survived, 13 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 56m) 392/2050 tested (328 survived, 13 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 55m) 394/2050 tested (330 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 395/2050 tested (331 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 397/2050 tested (333 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 398/2050 tested (334 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 400/2050 tested (336 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 401/2050 tested (337 survived, 13 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 55m) 403/2050 tested (339 survived, 13 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 55m) 404/2050 tested (340 survived, 13 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 54m) 406/2050 tested (342 survived, 13 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 53m) 409/2050 tested (343 survived, 13 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 54m) 409/2050 tested (343 survived, 13 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 54m) 411/2050 tested (343 survived, 14 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 54m) 412/2050 tested (343 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 414/2050 tested (343 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 415/2050 tested (343 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 416/2050 tested (343 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 418/2050 tested (343 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 419/2050 tested (343 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 419/2050 tested (343 survived, 15 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 420/2050 tested (343 survived, 16 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 421/2050 tested (343 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 55m) 421/2050 tested (343 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 55m) 422/2050 tested (343 survived, 18 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 425/2050 tested (343 survived, 19 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 51m) 433/2050 tested (343 survived, 19 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 51m) 434/2050 tested (343 survived, 19 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 49m) 438/2050 tested (343 survived, 20 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 50m) 438/2050 tested (343 survived, 20 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 49m) 441/2050 tested (343 survived, 21 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 49m) 442/2050 tested (344 survived, 21 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 49m) 444/2050 tested (346 survived, 21 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 49m) 445/2050 tested (347 survived, 21 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 49m) 447/2050 tested (349 survived, 21 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 49m) 448/2050 tested (350 survived, 21 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 48m) 450/2050 tested (352 survived, 21 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 49m) 450/2050 tested (352 survived, 21 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 49m) 451/2050 tested (352 survived, 22 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 49m) 452/2050 tested (352 survived, 23 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 452/2050 tested (352 survived, 23 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 49m) 454/2050 tested (352 survived, 24 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 454/2050 tested (352 survived, 24 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 456/2050 tested (353 survived, 25 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 50m) 457/2050 tested (354 survived, 25 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 460/2050 tested (356 survived, 25 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 460/2050 tested (356 survived, 25 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 50m) 461/2050 tested (356 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 463/2050 tested (358 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 464/2050 tested (359 survived, 26 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 49m) 466/2050 tested (361 survived, 26 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 49m) 467/2050 tested (362 survived, 26 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 49m) 469/2050 tested (364 survived, 26 timed out)
Mutation testing 22% (elapsed: ~50m, remaining: ~2h 49m) 470/2050 tested (365 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 472/2050 tested (367 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 48m) 473/2050 tested (368 survived, 26 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 49m) 474/2050 tested (369 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 476/2050 tested (371 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 477/2050 tested (372 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 479/2050 tested (374 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 480/2050 tested (375 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 482/2050 tested (377 survived, 26 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 48m) 483/2050 tested (378 survived, 26 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 485/2050 tested (380 survived, 26 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 486/2050 tested (381 survived, 26 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 488/2050 tested (383 survived, 26 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 489/2050 tested (384 survived, 26 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 47m) 491/2050 tested (386 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 47m) 492/2050 tested (387 survived, 26 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 494/2050 tested (389 survived, 26 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 495/2050 tested (390 survived, 26 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 496/2050 tested (391 survived, 26 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 498/2050 tested (391 survived, 27 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 47m) 498/2050 tested (391 survived, 27 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 46m) 500/2050 tested (391 survived, 28 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 47m) 500/2050 tested (391 survived, 28 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 47m) 502/2050 tested (392 survived, 29 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 47m) 503/2050 tested (393 survived, 29 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 47m) 504/2050 tested (394 survived, 29 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 46m) 507/2050 tested (394 survived, 30 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 44m) 512/2050 tested (394 survived, 30 timed out)
Mutation testing 24% (elapsed: ~55m, remaining: ~2h 45m) 512/2050 tested (394 survived, 30 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 45m) 513/2050 tested (394 survived, 31 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 45m) 514/2050 tested (394 survived, 32 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 45m) 514/2050 tested (394 survived, 32 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 45m) 515/2050 tested (394 survived, 33 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 45m) 517/2050 tested (396 survived, 33 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 518/2050 tested (397 survived, 33 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 520/2050 tested (399 survived, 33 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 521/2050 tested (400 survived, 33 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 523/2050 tested (402 survived, 33 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 45m) 524/2050 tested (403 survived, 33 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 44m) 526/2050 tested (403 survived, 33 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 527/2050 tested (404 survived, 33 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 528/2050 tested (404 survived, 33 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 531/2050 tested (404 survived, 33 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 531/2050 tested (404 survived, 33 timed out)
Mutation testing 25% (elapsed: ~57m, remaining: ~2h 44m) 532/2050 tested (404 survived, 33 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 44m) 533/2050 tested (404 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 44m) 535/2050 tested (405 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 44m) 536/2050 tested (406 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 43m) 538/2050 tested (408 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 43m) 539/2050 tested (409 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 43m) 541/2050 tested (411 survived, 33 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 43m) 542/2050 tested (412 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 43m) 543/2050 tested (413 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 43m) 545/2050 tested (415 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 43m) 546/2050 tested (416 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 43m) 548/2050 tested (418 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 43m) 549/2050 tested (419 survived, 33 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 42m) 551/2050 tested (421 survived, 33 timed out)
Mutation testing 26% (elapsed: ~1h 0m, remaining: ~2h 42m) 552/2050 tested (422 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 42m) 554/2050 tested (424 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 42m) 555/2050 tested (425 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 42m) 557/2050 tested (427 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 42m) 558/2050 tested (428 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 41m) 560/2050 tested (430 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 561/2050 tested (431 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 563/2050 tested (433 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 564/2050 tested (434 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 566/2050 tested (436 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 567/2050 tested (437 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 41m) 568/2050 tested (438 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 40m) 570/2050 tested (440 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 41m) 571/2050 tested (441 survived, 33 timed out)
Mutation testing 27% (elapsed: ~1h 2m, remaining: ~2h 40m) 573/2050 tested (443 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 40m) 574/2050 tested (444 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 40m) 576/2050 tested (446 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 40m) 577/2050 tested (447 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 579/2050 tested (449 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 40m) 580/2050 tested (450 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 582/2050 tested (452 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 583/2050 tested (453 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 585/2050 tested (455 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 39m) 586/2050 tested (456 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 588/2050 tested (458 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 39m) 589/2050 tested (459 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 38m) 591/2050 tested (461 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 38m) 592/2050 tested (462 survived, 33 timed out)
Mutation testing 28% (elapsed: ~1h 4m, remaining: ~2h 38m) 594/2050 tested (464 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 38m) 595/2050 tested (465 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 596/2050 tested (466 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 598/2050 tested (468 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 38m) 599/2050 tested (469 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 37m) 601/2050 tested (471 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 37m) 602/2050 tested (472 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 37m) 604/2050 tested (474 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 605/2050 tested (475 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 607/2050 tested (477 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 608/2050 tested (478 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 36m) 610/2050 tested (480 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 37m) 611/2050 tested (481 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 36m) 613/2050 tested (483 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 7m, remaining: ~2h 36m) 614/2050 tested (484 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 616/2050 tested (486 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 617/2050 tested (487 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 619/2050 tested (489 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 36m) 620/2050 tested (490 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 35m) 622/2050 tested (492 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 623/2050 tested (493 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 625/2050 tested (495 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 626/2050 tested (496 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 35m) 627/2050 tested (497 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 34m) 631/2050 tested (498 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 34m) 632/2050 tested (498 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 34m) 632/2050 tested (498 survived, 34 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 34m) 633/2050 tested (498 survived, 35 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 34m) 634/2050 tested (498 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 34m) 635/2050 tested (499 survived, 36 timed out)
Mutation testing 30% (elapsed: ~1h 9m, remaining: ~2h 35m) 635/2050 tested (499 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 35m) 636/2050 tested (499 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 637/2050 tested (499 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 638/2050 tested (499 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 638/2050 tested (499 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 640/2050 tested (500 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 641/2050 tested (501 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 35m) 642/2050 tested (502 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 643/2050 tested (503 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 644/2050 tested (503 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 645/2050 tested (504 survived, 40 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 646/2050 tested (504 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 647/2050 tested (505 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 35m) 649/2050 tested (507 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 35m) 650/2050 tested (508 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 34m) 652/2050 tested (510 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 34m) 653/2050 tested (511 survived, 41 timed out)
Mutation testing 31% (elapsed: ~1h 12m, remaining: ~2h 34m) 655/2050 tested (513 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 34m) 656/2050 tested (514 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 34m) 658/2050 tested (516 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 33m) 661/2050 tested (516 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 33m) 663/2050 tested (516 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 33m) 663/2050 tested (516 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 33m) 664/2050 tested (516 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 33m) 665/2050 tested (516 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 33m) 666/2050 tested (517 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 33m) 668/2050 tested (518 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 32m) 670/2050 tested (520 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 32m) 671/2050 tested (521 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 32m) 672/2050 tested (521 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 32m) 674/2050 tested (522 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 14m, remaining: ~2h 32m) 675/2050 tested (523 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 15m, remaining: ~2h 32m) 676/2050 tested (524 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 32m) 677/2050 tested (524 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 32m) 677/2050 tested (524 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 32m) 678/2050 tested (524 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 32m) 679/2050 tested (524 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 33m) 679/2050 tested (524 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 680/2050 tested (524 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 681/2050 tested (524 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 681/2050 tested (524 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 683/2050 tested (524 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 684/2050 tested (524 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 33m) 684/2050 tested (524 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 685/2050 tested (524 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 686/2050 tested (524 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 687/2050 tested (524 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 687/2050 tested (524 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 688/2050 tested (524 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 33m) 689/2050 tested (524 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 690/2050 tested (525 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 692/2050 tested (527 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 693/2050 tested (528 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 695/2050 tested (530 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 695/2050 tested (530 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 18m, remaining: ~2h 33m) 696/2050 tested (530 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 33m) 697/2050 tested (530 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 33m) 697/2050 tested (530 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 33m) 698/2050 tested (530 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 33m) 699/2050 tested (530 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 33m) 700/2050 tested (530 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 33m) 701/2050 tested (530 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 702/2050 tested (530 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 703/2050 tested (530 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 705/2050 tested (532 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 33m) 706/2050 tested (533 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 32m) 708/2050 tested (535 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 32m) 709/2050 tested (536 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 32m) 710/2050 tested (536 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 32m) 711/2050 tested (536 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 711/2050 tested (536 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 712/2050 tested (536 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 713/2050 tested (536 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 33m) 713/2050 tested (536 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 33m) 715/2050 tested (536 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 33m) 716/2050 tested (536 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 33m) 716/2050 tested (536 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 22m, remaining: ~2h 33m) 717/2050 tested (536 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 33m) 718/2050 tested (536 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 33m) 718/2050 tested (536 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 719/2050 tested (536 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 719/2050 tested (536 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 720/2050 tested (536 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 721/2050 tested (536 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 34m) 721/2050 tested (536 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 33m) 723/2050 tested (537 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 33m) 724/2050 tested (538 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 33m) 725/2050 tested (538 survived, 66 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 725/2050 tested (538 survived, 66 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 726/2050 tested (538 survived, 67 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 726/2050 tested (538 survived, 67 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 34m) 727/2050 tested (538 survived, 68 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 728/2050 tested (538 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 728/2050 tested (538 survived, 69 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 729/2050 tested (538 survived, 70 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 730/2050 tested (538 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 730/2050 tested (538 survived, 71 timed out)
Mutation testing 35% (elapsed: ~1h 25m, remaining: ~2h 34m) 731/2050 tested (538 survived, 72 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 732/2050 tested (538 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 734/2050 tested (540 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 735/2050 tested (541 survived, 73 timed out)
Mutation testing 35% (elapsed: ~1h 26m, remaining: ~2h 34m) 736/2050 tested (542 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 34m) 738/2050 tested (544 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 34m) 739/2050 tested (545 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 33m) 741/2050 tested (547 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 33m) 742/2050 tested (548 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 33m) 744/2050 tested (550 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 33m) 745/2050 tested (551 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 747/2050 tested (553 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 32m) 748/2050 tested (554 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 32m) 750/2050 tested (556 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 32m) 751/2050 tested (557 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 32m) 753/2050 tested (559 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 32m) 754/2050 tested (560 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 756/2050 tested (562 survived, 73 timed out)
Mutation testing 36% (elapsed: ~1h 28m, remaining: ~2h 31m) 757/2050 tested (563 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 31m) 759/2050 tested (565 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 31m) 760/2050 tested (566 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 762/2050 tested (568 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 763/2050 tested (569 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 765/2050 tested (571 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 30m) 766/2050 tested (572 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 767/2050 tested (573 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 769/2050 tested (575 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 30m) 770/2050 tested (576 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 29m) 772/2050 tested (578 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 29m) 773/2050 tested (579 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 30m, remaining: ~2h 29m) 775/2050 tested (581 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 29m) 776/2050 tested (582 survived, 73 timed out)
Mutation testing 37% (elapsed: ~1h 31m, remaining: ~2h 29m) 778/2050 tested (584 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 29m) 779/2050 tested (585 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 781/2050 tested (587 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 782/2050 tested (588 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 28m) 784/2050 tested (590 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 28m) 785/2050 tested (591 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 787/2050 tested (593 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 788/2050 tested (594 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 790/2050 tested (596 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 791/2050 tested (597 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 32m, remaining: ~2h 27m) 793/2050 tested (599 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 27m) 794/2050 tested (600 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 26m) 796/2050 tested (602 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 26m) 797/2050 tested (603 survived, 73 timed out)
Mutation testing 38% (elapsed: ~1h 33m, remaining: ~2h 26m) 799/2050 tested (605 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 26m) 800/2050 tested (606 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 26m) 801/2050 tested (607 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 803/2050 tested (609 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 804/2050 tested (610 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 806/2050 tested (612 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 807/2050 tested (613 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 809/2050 tested (615 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 34m, remaining: ~2h 25m) 810/2050 tested (616 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 24m) 812/2050 tested (618 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 24m) 813/2050 tested (619 survived, 73 timed out)
Mutation testing 39% (elapsed: ~1h 35m, remaining: ~2h 24m) 815/2050 tested (621 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 23m) 820/2050 tested (622 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 22m) 823/2050 tested (623 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 22m) 824/2050 tested (624 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 22m) 826/2050 tested (626 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 22m) 827/2050 tested (627 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 21m) 829/2050 tested (629 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 21m) 830/2050 tested (630 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 21m) 832/2050 tested (632 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 36m, remaining: ~2h 21m) 833/2050 tested (633 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 21m) 835/2050 tested (635 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 21m) 836/2050 tested (636 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 20m) 838/2050 tested (638 survived, 73 timed out)
Mutation testing 40% (elapsed: ~1h 37m, remaining: ~2h 20m) 839/2050 tested (639 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 20m) 841/2050 tested (641 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 20m) 842/2050 tested (642 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 20m) 844/2050 tested (644 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 845/2050 tested (645 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 846/2050 tested (646 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 848/2050 tested (648 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 849/2050 tested (649 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 19m) 851/2050 tested (651 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 19m) 852/2050 tested (652 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 854/2050 tested (654 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 855/2050 tested (655 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 857/2050 tested (657 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 858/2050 tested (658 survived, 73 timed out)
Mutation testing 41% (elapsed: ~1h 39m, remaining: ~2h 18m) 860/2050 tested (660 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 18m) 861/2050 tested (661 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 17m) 864/2050 tested (663 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 867/2050 tested (664 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 868/2050 tested (665 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 870/2050 tested (667 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 16m) 871/2050 tested (668 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 16m) 871/2050 tested (668 survived, 73 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 16m) 873/2050 tested (669 survived, 74 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 16m) 874/2050 tested (670 survived, 74 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 16m) 876/2050 tested (672 survived, 74 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 877/2050 tested (673 survived, 74 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 15m) 879/2050 tested (675 survived, 74 timed out)
Mutation testing 42% (elapsed: ~1h 42m, remaining: ~2h 15m) 880/2050 tested (676 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 15m) 882/2050 tested (678 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 15m) 883/2050 tested (679 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 886/2050 tested (681 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 887/2050 tested (682 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 14m) 889/2050 tested (684 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 14m) 890/2050 tested (685 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 14m) 891/2050 tested (686 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 893/2050 tested (688 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 894/2050 tested (689 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 896/2050 tested (689 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 13m) 897/2050 tested (689 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 13m) 898/2050 tested (690 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 13m) 900/2050 tested (692 survived, 74 timed out)
Mutation testing 43% (elapsed: ~1h 44m, remaining: ~2h 13m) 901/2050 tested (693 survived, 74 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 13m) 902/2050 tested (694 survived, 74 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 12m) 903/2050 tested (694 survived, 75 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 13m) 903/2050 tested (694 survived, 75 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 904/2050 tested (694 survived, 76 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 905/2050 tested (694 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 13m) 906/2050 tested (695 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 12m) 908/2050 tested (697 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 12m) 908/2050 tested (697 survived, 77 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 12m) 909/2050 tested (697 survived, 78 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 12m) 910/2050 tested (697 survived, 79 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 13m) 910/2050 tested (697 survived, 79 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 12m) 912/2050 tested (698 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 12m) 913/2050 tested (699 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 12m) 914/2050 tested (700 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 46m, remaining: ~2h 11m) 918/2050 tested (702 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 47m, remaining: ~2h 11m) 921/2050 tested (703 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 10m) 923/2050 tested (704 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 10m) 925/2050 tested (706 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 10m) 926/2050 tested (707 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 10m) 928/2050 tested (709 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 10m) 929/2050 tested (710 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 10m) 930/2050 tested (711 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 9m) 932/2050 tested (713 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 9m) 933/2050 tested (714 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 9m) 935/2050 tested (716 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 9m) 936/2050 tested (717 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 48m, remaining: ~2h 9m) 938/2050 tested (719 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 8m) 939/2050 tested (720 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 8m) 941/2050 tested (722 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 49m, remaining: ~2h 8m) 942/2050 tested (723 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 8m) 944/2050 tested (725 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 8m) 945/2050 tested (726 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 7m) 947/2050 tested (728 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 7m) 948/2050 tested (729 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 7m) 950/2050 tested (731 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 7m) 951/2050 tested (732 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 7m) 953/2050 tested (734 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 7m) 954/2050 tested (735 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 6m) 956/2050 tested (737 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 6m) 957/2050 tested (738 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 6m) 959/2050 tested (740 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 6m) 960/2050 tested (741 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 6m) 962/2050 tested (743 survived, 80 timed out)
Mutation testing 46% (elapsed: ~1h 51m, remaining: ~2h 6m) 963/2050 tested (744 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 5m) 964/2050 tested (745 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 5m) 966/2050 tested (747 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 5m) 967/2050 tested (748 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 5m) 969/2050 tested (750 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 5m) 970/2050 tested (751 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 4m) 972/2050 tested (753 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 4m) 973/2050 tested (754 survived, 80 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 4m) 974/2050 tested (754 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 5m) 974/2050 tested (754 survived, 81 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 4m) 975/2050 tested (754 survived, 82 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 5m) 975/2050 tested (754 survived, 82 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 5m) 976/2050 tested (754 survived, 83 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 5m) 977/2050 tested (754 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 4m) 979/2050 tested (756 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 4m) 980/2050 tested (757 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 4m) 982/2050 tested (759 survived, 84 timed out)
Mutation testing 47% (elapsed: ~1h 54m, remaining: ~2h 4m) 983/2050 tested (760 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 3m) 985/2050 tested (762 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 3m) 986/2050 tested (763 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 3m) 988/2050 tested (765 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 3m) 989/2050 tested (766 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 3m) 991/2050 tested (768 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 3m) 992/2050 tested (769 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 3m) 993/2050 tested (770 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 2m) 995/2050 tested (772 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 2m) 996/2050 tested (773 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 2m) 998/2050 tested (775 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 2m) 999/2050 tested (776 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 2m) 1001/2050 tested (778 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 2m) 1002/2050 tested (779 survived, 84 timed out)
Mutation testing 48% (elapsed: ~1h 56m, remaining: ~2h 1m) 1004/2050 tested (781 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 1m) 1005/2050 tested (782 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 1m) 1007/2050 tested (784 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 1m) 1008/2050 tested (785 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 0m) 1010/2050 tested (787 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 0m) 1011/2050 tested (788 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~2h 0m) 1013/2050 tested (790 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 0m) 1014/2050 tested (791 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 0m) 1016/2050 tested (793 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~2h 0m) 1017/2050 tested (794 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 59m) 1019/2050 tested (796 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 59m) 1020/2050 tested (797 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 58m, remaining: ~1h 59m) 1022/2050 tested (799 survived, 84 timed out)
Mutation testing 49% (elapsed: ~1h 59m, remaining: ~1h 59m) 1023/2050 tested (800 survived, 84 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 59m) 1025/2050 tested (802 survived, 84 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 59m) 1026/2050 tested (803 survived, 84 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 59m) 1027/2050 tested (804 survived, 84 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 58m) 1029/2050 tested (804 survived, 84 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 58m) 1030/2050 tested (804 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 58m) 1031/2050 tested (804 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 58m) 1033/2050 tested (804 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 58m) 1034/2050 tested (804 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 57m) 1036/2050 tested (804 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 57m) 1037/2050 tested (804 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 57m) 1038/2050 tested (805 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 57m) 1040/2050 tested (806 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 57m) 1041/2050 tested (807 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 57m) 1043/2050 tested (809 survived, 84 timed out)
Mutation testing 50% (elapsed: ~2h 1m, remaining: ~1h 57m) 1044/2050 tested (810 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 56m) 1046/2050 tested (812 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 56m) 1047/2050 tested (813 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 56m) 1049/2050 tested (815 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 56m) 1050/2050 tested (816 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 56m) 1052/2050 tested (818 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 55m) 1053/2050 tested (819 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 55m) 1055/2050 tested (821 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 55m) 1056/2050 tested (822 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 55m) 1058/2050 tested (824 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 55m) 1059/2050 tested (825 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 54m) 1061/2050 tested (827 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 54m) 1062/2050 tested (828 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 54m) 1064/2050 tested (830 survived, 84 timed out)
Mutation testing 51% (elapsed: ~2h 3m, remaining: ~1h 54m) 1065/2050 tested (831 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 54m) 1067/2050 tested (833 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 54m) 1068/2050 tested (834 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 54m) 1069/2050 tested (835 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 53m) 1071/2050 tested (837 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 53m) 1072/2050 tested (838 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 53m) 1074/2050 tested (840 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 53m) 1075/2050 tested (841 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 53m) 1077/2050 tested (843 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 53m) 1078/2050 tested (844 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 52m) 1080/2050 tested (846 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 52m) 1081/2050 tested (847 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 5m, remaining: ~1h 52m) 1083/2050 tested (849 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 52m) 1084/2050 tested (850 survived, 84 timed out)
Mutation testing 52% (elapsed: ~2h 6m, remaining: ~1h 51m) 1086/2050 tested (852 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 51m) 1087/2050 tested (853 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 51m) 1089/2050 tested (855 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 51m) 1090/2050 tested (856 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 51m) 1092/2050 tested (858 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 51m) 1093/2050 tested (859 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 50m) 1095/2050 tested (861 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 50m) 1096/2050 tested (862 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 50m) 1098/2050 tested (864 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 50m) 1099/2050 tested (865 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 50m) 1101/2050 tested (867 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 50m) 1102/2050 tested (868 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 49m) 1104/2050 tested (870 survived, 84 timed out)
Mutation testing 53% (elapsed: ~2h 8m, remaining: ~1h 49m) 1105/2050 tested (871 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 49m) 1107/2050 tested (873 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 49m) 1108/2050 tested (874 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 49m) 1109/2050 tested (875 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 49m) 1111/2050 tested (877 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 48m) 1112/2050 tested (878 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 48m) 1114/2050 tested (880 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 48m) 1115/2050 tested (881 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 48m) 1117/2050 tested (883 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 48m) 1118/2050 tested (884 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 47m) 1120/2050 tested (886 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 47m) 1121/2050 tested (887 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 47m) 1123/2050 tested (889 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 47m) 1124/2050 tested (890 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 47m) 1126/2050 tested (892 survived, 84 timed out)
Mutation testing 54% (elapsed: ~2h 10m, remaining: ~1h 47m) 1127/2050 tested (893 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 46m) 1129/2050 tested (895 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 46m) 1130/2050 tested (896 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 46m) 1132/2050 tested (898 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 46m) 1133/2050 tested (899 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 46m) 1135/2050 tested (901 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 46m) 1136/2050 tested (902 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 45m) 1138/2050 tested (904 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 45m) 1139/2050 tested (905 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 45m) 1141/2050 tested (907 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 45m) 1142/2050 tested (908 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 45m) 1144/2050 tested (910 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 12m, remaining: ~1h 44m) 1145/2050 tested (911 survived, 84 timed out)
Mutation testing 55% (elapsed: ~2h 13m, remaining: ~1h 44m) 1147/2050 tested (913 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 44m) 1148/2050 tested (914 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 44m) 1149/2050 tested (915 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 44m) 1151/2050 tested (917 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 44m) 1152/2050 tested (918 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 43m) 1154/2050 tested (920 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 43m) 1155/2050 tested (921 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 43m) 1157/2050 tested (923 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 43m) 1158/2050 tested (924 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 43m) 1160/2050 tested (926 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 43m) 1161/2050 tested (927 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 42m) 1163/2050 tested (929 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 42m) 1164/2050 tested (930 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 42m) 1166/2050 tested (932 survived, 84 timed out)
Mutation testing 56% (elapsed: ~2h 15m, remaining: ~1h 42m) 1167/2050 tested (933 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 42m) 1169/2050 tested (935 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 42m) 1170/2050 tested (936 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 41m) 1172/2050 tested (938 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 41m) 1173/2050 tested (939 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 41m) 1175/2050 tested (941 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 41m) 1176/2050 tested (942 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 41m) 1178/2050 tested (944 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 40m) 1179/2050 tested (945 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 40m) 1181/2050 tested (947 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 40m) 1182/2050 tested (948 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 40m) 1184/2050 tested (950 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 40m) 1185/2050 tested (951 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 39m) 1187/2050 tested (953 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 39m) 1188/2050 tested (954 survived, 84 timed out)
Mutation testing 57% (elapsed: ~2h 17m, remaining: ~1h 39m) 1189/2050 tested (955 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 39m) 1191/2050 tested (957 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 39m) 1192/2050 tested (958 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 39m) 1194/2050 tested (960 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 39m) 1195/2050 tested (961 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 38m) 1197/2050 tested (963 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 38m) 1198/2050 tested (964 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 38m) 1200/2050 tested (966 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 38m) 1201/2050 tested (967 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 38m) 1203/2050 tested (969 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 38m) 1204/2050 tested (970 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 37m) 1206/2050 tested (972 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 19m, remaining: ~1h 37m) 1207/2050 tested (973 survived, 84 timed out)
Mutation testing 58% (elapsed: ~2h 20m, remaining: ~1h 37m) 1209/2050 tested (975 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 37m) 1210/2050 tested (976 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 37m) 1212/2050 tested (978 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 36m) 1213/2050 tested (979 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 36m) 1215/2050 tested (981 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 36m) 1216/2050 tested (982 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 36m) 1218/2050 tested (984 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 36m) 1219/2050 tested (985 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 35m) 1221/2050 tested (987 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 35m) 1222/2050 tested (988 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 35m) 1224/2050 tested (990 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 35m) 1225/2050 tested (991 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 35m) 1226/2050 tested (992 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 35m) 1228/2050 tested (994 survived, 84 timed out)
Mutation testing 59% (elapsed: ~2h 22m, remaining: ~1h 35m) 1229/2050 tested (995 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 34m) 1231/2050 tested (997 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 34m) 1232/2050 tested (998 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 34m) 1234/2050 tested (1000 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 34m) 1235/2050 tested (1001 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 34m) 1237/2050 tested (1003 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 34m) 1238/2050 tested (1004 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 33m) 1240/2050 tested (1006 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 33m) 1241/2050 tested (1007 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 33m) 1243/2050 tested (1009 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 33m) 1244/2050 tested (1010 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 33m) 1246/2050 tested (1012 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 32m) 1247/2050 tested (1013 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 32m) 1249/2050 tested (1015 survived, 84 timed out)
Mutation testing 60% (elapsed: ~2h 24m, remaining: ~1h 32m) 1250/2050 tested (1016 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 32m) 1252/2050 tested (1018 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 32m) 1253/2050 tested (1019 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 31m) 1255/2050 tested (1021 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 31m) 1256/2050 tested (1022 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 31m) 1258/2050 tested (1024 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 31m) 1259/2050 tested (1025 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 31m) 1261/2050 tested (1027 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 31m) 1262/2050 tested (1028 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 30m) 1264/2050 tested (1030 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 30m) 1265/2050 tested (1031 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 30m) 1266/2050 tested (1032 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 30m) 1268/2050 tested (1034 survived, 84 timed out)
Mutation testing 61% (elapsed: ~2h 26m, remaining: ~1h 30m) 1269/2050 tested (1035 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 30m) 1271/2050 tested (1037 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 30m) 1272/2050 tested (1038 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 29m) 1274/2050 tested (1040 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 29m) 1275/2050 tested (1041 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 29m) 1277/2050 tested (1043 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 29m) 1278/2050 tested (1044 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 29m) 1280/2050 tested (1046 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 28m) 1281/2050 tested (1047 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 28m) 1283/2050 tested (1049 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 28m) 1284/2050 tested (1050 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 28m) 1286/2050 tested (1052 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 28m, remaining: ~1h 28m) 1287/2050 tested (1053 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 27m) 1289/2050 tested (1055 survived, 84 timed out)
Mutation testing 62% (elapsed: ~2h 29m, remaining: ~1h 27m) 1290/2050 tested (1056 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 27m) 1292/2050 tested (1058 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 27m) 1293/2050 tested (1059 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 27m) 1295/2050 tested (1061 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 27m) 1296/2050 tested (1062 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 26m) 1298/2050 tested (1064 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 26m) 1299/2050 tested (1065 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 26m) 1301/2050 tested (1067 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 26m) 1302/2050 tested (1068 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 26m) 1303/2050 tested (1069 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 26m) 1305/2050 tested (1071 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 26m) 1306/2050 tested (1072 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 25m) 1308/2050 tested (1074 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 25m) 1309/2050 tested (1075 survived, 84 timed out)
Mutation testing 63% (elapsed: ~2h 31m, remaining: ~1h 25m) 1311/2050 tested (1077 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 25m) 1312/2050 tested (1078 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 25m) 1314/2050 tested (1080 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 24m) 1315/2050 tested (1081 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 24m) 1317/2050 tested (1083 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 24m) 1318/2050 tested (1084 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 24m) 1320/2050 tested (1086 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 24m) 1321/2050 tested (1087 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 23m) 1323/2050 tested (1089 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 23m) 1324/2050 tested (1090 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 23m) 1326/2050 tested (1092 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 23m) 1327/2050 tested (1093 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 23m) 1329/2050 tested (1095 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 23m) 1330/2050 tested (1096 survived, 84 timed out)
Mutation testing 64% (elapsed: ~2h 33m, remaining: ~1h 22m) 1332/2050 tested (1098 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 22m) 1333/2050 tested (1099 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 22m) 1335/2050 tested (1101 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 22m) 1336/2050 tested (1102 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 22m) 1338/2050 tested (1104 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 22m) 1339/2050 tested (1105 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 21m) 1341/2050 tested (1107 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 21m) 1342/2050 tested (1108 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 21m) 1343/2050 tested (1109 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 21m) 1345/2050 tested (1111 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 21m) 1346/2050 tested (1112 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 21m) 1348/2050 tested (1114 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 35m, remaining: ~1h 20m) 1349/2050 tested (1115 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 20m) 1351/2050 tested (1117 survived, 84 timed out)
Mutation testing 65% (elapsed: ~2h 36m, remaining: ~1h 20m) 1352/2050 tested (1118 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 20m) 1354/2050 tested (1120 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 20m) 1355/2050 tested (1121 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 20m) 1357/2050 tested (1123 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 19m) 1358/2050 tested (1124 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 19m) 1360/2050 tested (1126 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 19m) 1361/2050 tested (1127 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 19m) 1363/2050 tested (1129 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 19m) 1364/2050 tested (1130 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 18m) 1366/2050 tested (1132 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 18m) 1367/2050 tested (1133 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 18m) 1369/2050 tested (1135 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 18m) 1370/2050 tested (1136 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 18m) 1372/2050 tested (1138 survived, 84 timed out)
Mutation testing 66% (elapsed: ~2h 38m, remaining: ~1h 18m) 1373/2050 tested (1139 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 17m) 1375/2050 tested (1141 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 17m) 1376/2050 tested (1142 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 17m) 1378/2050 tested (1144 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 17m) 1379/2050 tested (1145 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 17m) 1381/2050 tested (1147 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 17m) 1382/2050 tested (1148 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 17m) 1383/2050 tested (1149 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 16m) 1385/2050 tested (1151 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 16m) 1386/2050 tested (1152 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 16m) 1388/2050 tested (1154 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 16m) 1389/2050 tested (1155 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 16m) 1391/2050 tested (1157 survived, 84 timed out)
Mutation testing 67% (elapsed: ~2h 40m, remaining: ~1h 15m) 1392/2050 tested (1158 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 15m) 1394/2050 tested (1160 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 15m) 1395/2050 tested (1161 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 15m) 1397/2050 tested (1163 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 15m) 1398/2050 tested (1164 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 14m) 1400/2050 tested (1166 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 14m) 1401/2050 tested (1167 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 14m) 1403/2050 tested (1169 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 14m) 1404/2050 tested (1170 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 14m) 1406/2050 tested (1172 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 14m) 1407/2050 tested (1173 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 13m) 1409/2050 tested (1175 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 13m) 1410/2050 tested (1176 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 42m, remaining: ~1h 13m) 1412/2050 tested (1178 survived, 84 timed out)
Mutation testing 68% (elapsed: ~2h 43m, remaining: ~1h 13m) 1413/2050 tested (1179 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 13m) 1415/2050 tested (1181 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 13m) 1416/2050 tested (1182 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 13m) 1417/2050 tested (1183 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 12m) 1419/2050 tested (1185 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 12m) 1420/2050 tested (1186 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 12m) 1422/2050 tested (1188 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 12m) 1423/2050 tested (1189 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 12m) 1425/2050 tested (1191 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 11m) 1426/2050 tested (1192 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 11m) 1428/2050 tested (1194 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 11m) 1429/2050 tested (1195 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 11m) 1431/2050 tested (1197 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 11m) 1432/2050 tested (1198 survived, 84 timed out)
Mutation testing 69% (elapsed: ~2h 45m, remaining: ~1h 11m) 1434/2050 tested (1200 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 10m) 1435/2050 tested (1201 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 10m) 1437/2050 tested (1203 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 10m) 1438/2050 tested (1204 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 10m) 1440/2050 tested (1206 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 10m) 1441/2050 tested (1207 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 10m) 1442/2050 tested (1208 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 9m) 1444/2050 tested (1210 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 9m) 1445/2050 tested (1211 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 9m) 1447/2050 tested (1213 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 9m) 1448/2050 tested (1214 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 9m) 1450/2050 tested (1216 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 9m) 1451/2050 tested (1217 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 8m) 1453/2050 tested (1219 survived, 84 timed out)
Mutation testing 70% (elapsed: ~2h 47m, remaining: ~1h 8m) 1454/2050 tested (1220 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 8m) 1456/2050 tested (1222 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 8m) 1457/2050 tested (1223 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 8m) 1459/2050 tested (1225 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 8m) 1460/2050 tested (1226 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 7m) 1462/2050 tested (1228 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 7m) 1463/2050 tested (1229 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 7m) 1465/2050 tested (1231 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 7m) 1466/2050 tested (1232 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 7m) 1468/2050 tested (1234 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 6m) 1469/2050 tested (1235 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 6m) 1471/2050 tested (1237 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 6m) 1472/2050 tested (1238 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 49m, remaining: ~1h 6m) 1474/2050 tested (1240 survived, 84 timed out)
Mutation testing 71% (elapsed: ~2h 50m, remaining: ~1h 6m) 1475/2050 tested (1241 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 6m) 1476/2050 tested (1242 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 5m) 1478/2050 tested (1244 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 5m) 1479/2050 tested (1245 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 5m) 1481/2050 tested (1247 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 5m) 1482/2050 tested (1248 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 5m) 1484/2050 tested (1250 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 5m) 1485/2050 tested (1251 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 4m) 1487/2050 tested (1253 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 4m) 1488/2050 tested (1254 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 4m) 1490/2050 tested (1256 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 4m) 1491/2050 tested (1257 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 4m) 1493/2050 tested (1259 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 4m) 1494/2050 tested (1260 survived, 84 timed out)
Mutation testing 72% (elapsed: ~2h 52m, remaining: ~1h 3m) 1496/2050 tested (1262 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 3m) 1497/2050 tested (1263 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 3m) 1499/2050 tested (1265 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 3m) 1500/2050 tested (1266 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 3m) 1502/2050 tested (1268 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 3m) 1503/2050 tested (1269 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 2m) 1505/2050 tested (1271 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 2m) 1506/2050 tested (1272 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 2m) 1508/2050 tested (1274 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 2m) 1509/2050 tested (1275 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 2m) 1511/2050 tested (1277 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 1m) 1512/2050 tested (1278 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 1m) 1513/2050 tested (1279 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 1m) 1515/2050 tested (1281 survived, 84 timed out)
Mutation testing 73% (elapsed: ~2h 54m, remaining: ~1h 1m) 1516/2050 tested (1282 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~1h 1m) 1518/2050 tested (1284 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~1h 1m) 1519/2050 tested (1285 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~1h 0m) 1521/2050 tested (1287 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~1h 0m) 1522/2050 tested (1288 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~1h 0m) 1524/2050 tested (1290 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~1h 0m) 1525/2050 tested (1291 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~1h 0m) 1527/2050 tested (1293 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~1h 0m) 1528/2050 tested (1294 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~59m) 1530/2050 tested (1296 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~59m) 1531/2050 tested (1297 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~59m) 1533/2050 tested (1299 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~59m) 1534/2050 tested (1300 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 56m, remaining: ~59m) 1536/2050 tested (1302 survived, 84 timed out)
Mutation testing 74% (elapsed: ~2h 57m, remaining: ~59m) 1537/2050 tested (1303 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~58m) 1539/2050 tested (1305 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~58m) 1540/2050 tested (1306 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~58m) 1542/2050 tested (1308 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~58m) 1543/2050 tested (1309 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~58m) 1544/2050 tested (1310 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~58m) 1546/2050 tested (1312 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~57m) 1547/2050 tested (1313 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~57m) 1549/2050 tested (1315 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~57m) 1550/2050 tested (1316 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~57m) 1552/2050 tested (1318 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~57m) 1553/2050 tested (1319 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~56m) 1555/2050 tested (1321 survived, 84 timed out)
Mutation testing 75% (elapsed: ~2h 59m, remaining: ~56m) 1556/2050 tested (1322 survived, 84 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~56m) 1558/2050 tested (1324 survived, 84 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~56m) 1559/2050 tested (1325 survived, 84 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~56m) 1561/2050 tested (1327 survived, 84 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~56m) 1562/2050 tested (1328 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~55m) 1564/2050 tested (1330 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~55m) 1565/2050 tested (1331 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~55m) 1567/2050 tested (1333 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~55m) 1568/2050 tested (1334 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~55m) 1570/2050 tested (1336 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~55m) 1571/2050 tested (1337 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~55m) 1572/2050 tested (1338 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~54m) 1574/2050 tested (1340 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~54m) 1575/2050 tested (1341 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~54m) 1577/2050 tested (1343 survived, 84 timed out)
Mutation testing 76% (elapsed: ~3h 1m, remaining: ~54m) 1578/2050 tested (1344 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~54m) 1580/2050 tested (1346 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~53m) 1581/2050 tested (1347 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~53m) 1583/2050 tested (1349 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~53m) 1584/2050 tested (1350 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~53m) 1586/2050 tested (1352 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~53m) 1587/2050 tested (1353 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~53m) 1589/2050 tested (1355 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~52m) 1590/2050 tested (1356 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~52m) 1592/2050 tested (1358 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~52m) 1593/2050 tested (1359 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~52m) 1595/2050 tested (1361 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~52m) 1596/2050 tested (1362 survived, 84 timed out)
Mutation testing 77% (elapsed: ~3h 3m, remaining: ~51m) 1598/2050 tested (1364 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~51m) 1599/2050 tested (1365 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~51m) 1600/2050 tested (1366 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~51m) 1602/2050 tested (1368 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~51m) 1603/2050 tested (1369 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~51m) 1605/2050 tested (1371 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~51m) 1606/2050 tested (1372 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~50m) 1608/2050 tested (1374 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~50m) 1609/2050 tested (1375 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~50m) 1611/2050 tested (1377 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~50m) 1612/2050 tested (1378 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~50m) 1614/2050 tested (1380 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~50m) 1615/2050 tested (1381 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~49m) 1617/2050 tested (1383 survived, 84 timed out)
Mutation testing 78% (elapsed: ~3h 6m, remaining: ~49m) 1618/2050 tested (1384 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~49m) 1620/2050 tested (1386 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~49m) 1621/2050 tested (1387 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~49m) 1623/2050 tested (1389 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~49m) 1624/2050 tested (1390 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~48m) 1626/2050 tested (1392 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~48m) 1627/2050 tested (1393 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~48m) 1629/2050 tested (1395 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~48m) 1630/2050 tested (1396 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~48m) 1631/2050 tested (1397 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~47m) 1633/2050 tested (1399 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~47m) 1634/2050 tested (1400 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~47m) 1636/2050 tested (1402 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~47m) 1637/2050 tested (1403 survived, 84 timed out)
Mutation testing 79% (elapsed: ~3h 8m, remaining: ~47m) 1639/2050 tested (1405 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~47m) 1640/2050 tested (1406 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~46m) 1642/2050 tested (1408 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~46m) 1643/2050 tested (1409 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~46m) 1645/2050 tested (1411 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~46m) 1646/2050 tested (1412 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~46m) 1648/2050 tested (1414 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~46m) 1649/2050 tested (1415 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~45m) 1651/2050 tested (1417 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~45m) 1652/2050 tested (1418 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~45m) 1654/2050 tested (1420 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~45m) 1655/2050 tested (1421 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~45m) 1657/2050 tested (1423 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~45m) 1658/2050 tested (1424 survived, 84 timed out)
Mutation testing 80% (elapsed: ~3h 10m, remaining: ~44m) 1659/2050 tested (1425 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~44m) 1661/2050 tested (1427 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~44m) 1662/2050 tested (1428 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~44m) 1664/2050 tested (1430 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~44m) 1665/2050 tested (1431 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~44m) 1667/2050 tested (1433 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~43m) 1668/2050 tested (1434 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~43m) 1670/2050 tested (1436 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~43m) 1671/2050 tested (1437 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~43m) 1673/2050 tested (1439 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~43m) 1674/2050 tested (1440 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~42m) 1676/2050 tested (1442 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 12m, remaining: ~42m) 1677/2050 tested (1443 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~42m) 1679/2050 tested (1445 survived, 84 timed out)
Mutation testing 81% (elapsed: ~3h 13m, remaining: ~42m) 1680/2050 tested (1446 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~42m) 1682/2050 tested (1448 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~42m) 1683/2050 tested (1449 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~41m) 1685/2050 tested (1451 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~41m) 1686/2050 tested (1452 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~41m) 1687/2050 tested (1453 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~41m) 1689/2050 tested (1455 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~41m) 1690/2050 tested (1456 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~41m) 1692/2050 tested (1458 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~41m) 1693/2050 tested (1459 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~40m) 1695/2050 tested (1461 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~40m) 1696/2050 tested (1462 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~40m) 1698/2050 tested (1464 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~40m) 1699/2050 tested (1465 survived, 84 timed out)
Mutation testing 82% (elapsed: ~3h 15m, remaining: ~40m) 1701/2050 tested (1467 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~40m) 1702/2050 tested (1468 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~39m) 1704/2050 tested (1470 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~39m) 1705/2050 tested (1471 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~39m) 1707/2050 tested (1473 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~39m) 1708/2050 tested (1474 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~39m) 1710/2050 tested (1476 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~38m) 1711/2050 tested (1477 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~38m) 1712/2050 tested (1478 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~38m) 1714/2050 tested (1480 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~38m) 1715/2050 tested (1481 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~38m) 1717/2050 tested (1483 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~38m) 1718/2050 tested (1484 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~37m) 1720/2050 tested (1486 survived, 84 timed out)
Mutation testing 83% (elapsed: ~3h 17m, remaining: ~37m) 1721/2050 tested (1487 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~37m) 1723/2050 tested (1489 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~37m) 1724/2050 tested (1490 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~37m) 1726/2050 tested (1492 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~37m) 1727/2050 tested (1493 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~36m) 1729/2050 tested (1495 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~36m) 1730/2050 tested (1496 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~36m) 1732/2050 tested (1498 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~36m) 1733/2050 tested (1499 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~36m) 1735/2050 tested (1501 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~36m) 1736/2050 tested (1502 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~35m) 1738/2050 tested (1504 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 19m, remaining: ~35m) 1739/2050 tested (1505 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~35m) 1740/2050 tested (1506 survived, 84 timed out)
Mutation testing 84% (elapsed: ~3h 20m, remaining: ~35m) 1742/2050 tested (1508 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~35m) 1743/2050 tested (1509 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~35m) 1745/2050 tested (1511 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~34m) 1746/2050 tested (1512 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~34m) 1748/2050 tested (1514 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~34m) 1749/2050 tested (1515 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~34m) 1751/2050 tested (1517 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~34m) 1752/2050 tested (1518 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~34m) 1754/2050 tested (1520 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~33m) 1755/2050 tested (1521 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~33m) 1757/2050 tested (1523 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1758/2050 tested (1524 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1760/2050 tested (1526 survived, 84 timed out)
Mutation testing 85% (elapsed: ~3h 22m, remaining: ~33m) 1761/2050 tested (1527 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~32m) 1763/2050 tested (1529 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~32m) 1764/2050 tested (1530 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~32m) 1766/2050 tested (1532 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1767/2050 tested (1533 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1769/2050 tested (1535 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~32m) 1770/2050 tested (1536 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~31m) 1772/2050 tested (1538 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~31m) 1773/2050 tested (1539 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~31m) 1774/2050 tested (1540 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1776/2050 tested (1542 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1777/2050 tested (1543 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1779/2050 tested (1545 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~31m) 1780/2050 tested (1546 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~30m) 1782/2050 tested (1548 survived, 84 timed out)
Mutation testing 86% (elapsed: ~3h 24m, remaining: ~30m) 1783/2050 tested (1549 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~30m) 1785/2050 tested (1551 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~30m) 1786/2050 tested (1552 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~30m) 1788/2050 tested (1554 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~29m) 1789/2050 tested (1555 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~29m) 1791/2050 tested (1557 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~29m) 1792/2050 tested (1558 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1794/2050 tested (1560 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1795/2050 tested (1561 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~29m) 1797/2050 tested (1563 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~28m) 1798/2050 tested (1564 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~28m) 1800/2050 tested (1566 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 26m, remaining: ~28m) 1801/2050 tested (1567 survived, 84 timed out)
Mutation testing 87% (elapsed: ~3h 27m, remaining: ~28m) 1803/2050 tested (1569 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~28m) 1804/2050 tested (1570 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~28m) 1806/2050 tested (1572 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~27m) 1807/2050 tested (1573 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~27m) 1809/2050 tested (1575 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~27m) 1810/2050 tested (1576 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1811/2050 tested (1577 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1813/2050 tested (1579 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~27m) 1814/2050 tested (1580 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~26m) 1816/2050 tested (1582 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~26m) 1817/2050 tested (1583 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~26m) 1819/2050 tested (1585 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1820/2050 tested (1586 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1822/2050 tested (1588 survived, 84 timed out)
Mutation testing 88% (elapsed: ~3h 29m, remaining: ~26m) 1823/2050 tested (1589 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~25m) 1825/2050 tested (1591 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~25m) 1826/2050 tested (1592 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~25m) 1828/2050 tested (1594 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1829/2050 tested (1595 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1831/2050 tested (1597 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~25m) 1832/2050 tested (1598 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~24m) 1834/2050 tested (1600 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~24m) 1835/2050 tested (1601 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~24m) 1837/2050 tested (1603 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1838/2050 tested (1604 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~24m) 1840/2050 tested (1606 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~23m) 1841/2050 tested (1607 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~23m) 1843/2050 tested (1609 survived, 84 timed out)
Mutation testing 89% (elapsed: ~3h 31m, remaining: ~23m) 1844/2050 tested (1610 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~23m) 1846/2050 tested (1612 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~23m) 1847/2050 tested (1613 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~23m) 1849/2050 tested (1615 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~22m) 1850/2050 tested (1616 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~22m) 1851/2050 tested (1617 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~22m) 1853/2050 tested (1619 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~22m) 1854/2050 tested (1620 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1856/2050 tested (1622 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~22m) 1857/2050 tested (1623 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~21m) 1859/2050 tested (1625 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~21m) 1860/2050 tested (1626 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~21m) 1862/2050 tested (1628 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 33m, remaining: ~21m) 1863/2050 tested (1629 survived, 84 timed out)
Mutation testing 90% (elapsed: ~3h 34m, remaining: ~21m) 1865/2050 tested (1631 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~21m) 1866/2050 tested (1632 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~20m) 1868/2050 tested (1634 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~20m) 1869/2050 tested (1635 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~20m) 1871/2050 tested (1637 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~20m) 1872/2050 tested (1638 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1874/2050 tested (1640 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~20m) 1875/2050 tested (1641 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~19m) 1877/2050 tested (1643 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~19m) 1878/2050 tested (1644 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~19m) 1880/2050 tested (1646 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~19m) 1881/2050 tested (1647 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1883/2050 tested (1649 survived, 84 timed out)
Mutation testing 91% (elapsed: ~3h 36m, remaining: ~19m) 1884/2050 tested (1650 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~18m) 1886/2050 tested (1652 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~18m) 1887/2050 tested (1653 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~18m) 1888/2050 tested (1654 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~18m) 1890/2050 tested (1656 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1891/2050 tested (1657 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~18m) 1893/2050 tested (1659 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~17m) 1894/2050 tested (1660 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~17m) 1896/2050 tested (1662 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~17m) 1897/2050 tested (1663 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~17m) 1899/2050 tested (1665 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~17m) 1900/2050 tested (1666 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~16m) 1902/2050 tested (1668 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~16m) 1903/2050 tested (1669 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~16m) 1905/2050 tested (1671 survived, 84 timed out)
Mutation testing 92% (elapsed: ~3h 38m, remaining: ~16m) 1906/2050 tested (1672 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~16m) 1908/2050 tested (1674 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~16m) 1909/2050 tested (1675 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~15m) 1911/2050 tested (1677 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~15m) 1912/2050 tested (1678 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~15m) 1914/2050 tested (1680 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~15m) 1915/2050 tested (1681 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~15m) 1917/2050 tested (1683 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~15m) 1918/2050 tested (1684 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~14m) 1920/2050 tested (1686 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~14m) 1921/2050 tested (1687 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~14m) 1923/2050 tested (1689 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~14m) 1924/2050 tested (1690 survived, 84 timed out)
Mutation testing 93% (elapsed: ~3h 40m, remaining: ~14m) 1926/2050 tested (1692 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~14m) 1927/2050 tested (1693 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~13m) 1928/2050 tested (1694 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~13m) 1930/2050 tested (1696 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~13m) 1931/2050 tested (1697 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~13m) 1933/2050 tested (1699 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~13m) 1934/2050 tested (1700 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~13m) 1936/2050 tested (1702 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~12m) 1937/2050 tested (1703 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~12m) 1939/2050 tested (1705 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~12m) 1940/2050 tested (1706 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~12m) 1942/2050 tested (1708 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~12m) 1943/2050 tested (1709 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~12m) 1945/2050 tested (1711 survived, 84 timed out)
Mutation testing 94% (elapsed: ~3h 43m, remaining: ~11m) 1946/2050 tested (1712 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~11m) 1948/2050 tested (1714 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~11m) 1949/2050 tested (1715 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~11m) 1951/2050 tested (1717 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~11m) 1952/2050 tested (1718 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~11m) 1954/2050 tested (1720 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~10m) 1955/2050 tested (1721 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~10m) 1957/2050 tested (1723 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~10m) 1958/2050 tested (1724 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~10m) 1960/2050 tested (1726 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~10m) 1961/2050 tested (1727 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~10m) 1962/2050 tested (1728 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~9m) 1964/2050 tested (1730 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~9m) 1965/2050 tested (1731 survived, 84 timed out)
Mutation testing 95% (elapsed: ~3h 45m, remaining: ~9m) 1967/2050 tested (1733 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~9m) 1968/2050 tested (1734 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~9m) 1970/2050 tested (1736 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~9m) 1971/2050 tested (1737 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~8m) 1973/2050 tested (1739 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~8m) 1974/2050 tested (1740 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~8m) 1976/2050 tested (1742 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~8m) 1977/2050 tested (1743 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~8m) 1979/2050 tested (1745 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~8m) 1980/2050 tested (1746 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~7m) 1982/2050 tested (1748 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~7m) 1983/2050 tested (1749 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~7m) 1985/2050 tested (1751 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~7m) 1986/2050 tested (1752 survived, 84 timed out)
Mutation testing 96% (elapsed: ~3h 47m, remaining: ~7m) 1988/2050 tested (1754 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~6m) 1989/2050 tested (1755 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~6m) 1991/2050 tested (1757 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~6m) 1992/2050 tested (1758 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~6m) 1994/2050 tested (1760 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~6m) 1995/2050 tested (1761 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~6m) 1996/2050 tested (1762 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~5m) 1998/2050 tested (1764 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~5m) 1999/2050 tested (1765 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~5m) 2001/2050 tested (1767 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~5m) 2002/2050 tested (1768 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~5m) 2004/2050 tested (1770 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 49m, remaining: ~5m) 2005/2050 tested (1771 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~4m) 2007/2050 tested (1773 survived, 84 timed out)
Mutation testing 97% (elapsed: ~3h 50m, remaining: ~4m) 2008/2050 tested (1774 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~4m) 2010/2050 tested (1776 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~4m) 2011/2050 tested (1777 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~4m) 2013/2050 tested (1779 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~4m) 2014/2050 tested (1780 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~3m) 2016/2050 tested (1782 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~3m) 2017/2050 tested (1783 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~3m) 2019/2050 tested (1785 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~3m) 2020/2050 tested (1786 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~3m) 2022/2050 tested (1788 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~3m) 2023/2050 tested (1789 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~2m) 2025/2050 tested (1791 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~2m) 2026/2050 tested (1792 survived, 84 timed out)
Mutation testing 98% (elapsed: ~3h 52m, remaining: ~2m) 2027/2050 tested (1793 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: ~2m) 2031/2050 tested (1794 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: ~1m) 2033/2050 tested (1796 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: ~1m) 2034/2050 tested (1797 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2036/2050 tested (1799 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2037/2050 tested (1800 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2039/2050 tested (1802 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: ~1m) 2040/2050 tested (1803 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: <1m) 2042/2050 tested (1805 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: <1m) 2043/2050 tested (1806 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2045/2050 tested (1808 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2046/2050 tested (1809 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2048/2050 tested (1811 survived, 84 timed out)
Mutation testing 99% (elapsed: ~3h 54m, remaining: <1m) 2049/2050 tested (1812 survived, 84 timed out)

All tests
  ✓ All tests (killed 153)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "string") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           undefined("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("buggy", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(undefined, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", definition());

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.foo) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.bar) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.baz) {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define("test");

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(1 + 1);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "object") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "function") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (!ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.maybeOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.ok && ses.notOk()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" || typeof self !== "undefined" || typeof global !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" || typeof self !== "undefined" || typeof this !== "undefined") {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain && domain.exit()) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain ? domain.exit() : null) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.run();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.bind();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, null);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, 0);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(() => {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isBrowser) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.run();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.dispose();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush.call(null), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain && false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain || true) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (!flushing && true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "string") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush(undefined));

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush(null));

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush());

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(laterQueue.pop());

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(requestTick());

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "function") {

[Survived] PrecomputedMutator
q.js:219:13
-               flush();
+               undefined();

[Survived] PrecomputedMutator
q.js:219:13
-               flush();
+               null();

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(requestTick(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(requestAnimationFrame(flush), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, NaN);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing || true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (-1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (length - 1);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index !== this.length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index < length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index == length) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index == length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 0) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index > this) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index == this) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] - 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] * 2, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i != this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = 0) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] === undefined) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] === null) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) + 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) - 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) * 2);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call({}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value + 1, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value * 2, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value - 1, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.length));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self[0]));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self.pop()));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key in object.keys()) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key in Object.keys(object)) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && typeof object[key] !== "undefined") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (key in this(object, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key * 2)) {

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_keys(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_values(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && Math.random() > 0.5

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && false

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.value) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.promise) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.then) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p = 1; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source.source) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackSize__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack + 1);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.length);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.toUpperCase());

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.toString());

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.push("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.pop("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n" + "foo");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n" + "bar");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n"));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.replace("\n", ""));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.substring(0, concatedStacks.length - 1));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace" + "foo", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace" + "bar", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\r\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = array.length; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = lines.length - 1; i >= 0; --i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i >= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = i + 1) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) || isNodeFrame(line) || line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isExternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame && false(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.startsWith("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.endsWith("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(node.js:)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("\n")[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("\n")[1]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("\n").slice(-1)[0]);

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "1"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[2])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[1]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[2]);

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] === attempt2[2]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] > attempt2[2]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] < attempt2[2]) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[0])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3 && attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3 || attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3 ? attempt3[1] : attempt3) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "0"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], undefined(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[4])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] !== qFileName) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[1] > qEndingLine) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] !== qFileName && fileNameAndLineNumber[1] > qEndingLine) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(",");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[lines.length - 1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("+") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[lines.length - 1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(lines[Math.floor(Math.random() * lines.length)]);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0] === qFileName) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[1] === qStartingLine) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn("deprecated")) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn === "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "undefined" && typeof console.warn === "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, 0);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] + 1) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands.length);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promise, args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, [args[0], args[1], args[2]]);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length > 0) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue + 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue - 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue * 2(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.source);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.inspect());

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === undefined) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.isRejected()) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise || isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (typeof resolvedPromise === "undefined") {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.length(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.substring(e.stack.indexOf("\n") + 1));

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(0, message);

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.isResolved()) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(otherValue));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill({}));

[Survived] PrecomputedMutator
q.js:649:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.isResolved) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.value) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.state) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[0](progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(undefined);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(null);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(0);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (!error) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.message) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.length - 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[1]));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(null, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(undefined, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([], 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, -1));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(0);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function" && typeof resolver !== "function") {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.resolve, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.notify, deferred.resolve);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.makeNodeResolver, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(null));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(undefined));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(0));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           null(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.resolve(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.all(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * 2).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.reject([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.resolve([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return Q.all([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, null]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x + y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x * y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i >= len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i + 1) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i - 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 2]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect.state === "rejected") {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect.state === "pending") {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op] + 1) {

[Survived] PrecomputedMutator
q.js:808:26
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply({}, args);

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({}, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op * 2, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op - 1, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[0]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[1]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[2]);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("some other error"));

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect()) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self, undefined);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self, null);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self, {});

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(null, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(undefined, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(0, self);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed + 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed * 2(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed - 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(0) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done === true) {

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && true) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value + 1);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value * 2);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value - 1);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror()) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(exception)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(new Error())) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw || newValue === undefined) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(0);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(null).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(undefined).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.reject("error")).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.bind(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.call(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.apply(null));

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q(callback).fcall(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q(callback).fcall(value).thenReject(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q(callback).fcall(value).thenResolve(value).thenReject(value));

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall("foo").thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.reverse());

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.slice(1));

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.reject(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.resolve(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.defer(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, resolved, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected(new Error("error")), progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected(null), progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function (value) {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function (value) {
+     throw new Error("test");
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return !value;
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.resolve(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.defer(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(0);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw reason + 1;
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(0).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(0);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPending(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value * 2)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value - 1)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === null) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isRejected(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(undefined) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise({}) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.then().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.catch().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.finally().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isFulfilled(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(!object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.valueOf()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.toString()) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.reason().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromise(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.then()) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect()) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.valueOf()) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.inspect.rejected().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object.inspect.rejected.value().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return null().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return undefined().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === true) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (typeof trackUnhandledRejections === "undefined") {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (!unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.indexOf(promise) !== -1) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(promise.isRejected()) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(trackUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + 1, reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "1", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined" && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined" && reason.stack !== "null") {

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.pop(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.shift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.unshift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.length);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.split("\n"));

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.indexOf("Error"));

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (typeof trackUnhandledRejections === "undefined") {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledReasons.length, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.filter(function (rejection) {
+     return rejection !== promise;
+   }), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -2) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.indexOf(promise), promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.catch(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.finally(function () {}));

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -2) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport < -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] = "different value", promise);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, reportedUnhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.shift(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.pop(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.length = 0(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport[0], 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.pop(), 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 100);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at * 2);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledReasons.length = 0();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || true) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, {});

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(0, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "some other string");

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === "undefined") {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args[0], args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(0, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.map(function (x) {
+     return x * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name] = null(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(0, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args[0]);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice(1));

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(this, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.map(function (x) {
+     return x * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_entries(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(0);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op = "foo", args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op = null, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op = 42, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.length);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.fulfill(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.defer(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q([]).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.any().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.none().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.race().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply([]);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply({}, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "object") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "function") {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](0);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return resolve(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Promise.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.toString());

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.rejected) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isFulfilled) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value * 2);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value - 1);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.error, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, errback, null);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, errback, undefined);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return Q.reject(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return Q.all(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return Q.race(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, undefined, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, reject);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, resolve);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator[verb + "x"](arg);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg - 1);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg * 2);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.constructor === StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration === true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration !== true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.stack)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.stack);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.name);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return resolve(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback.bind(null, errback), errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, errback, callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.defer(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(undefined, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(Q(result), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, resolve, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, function (error) {
+     return reject(error);
+   });

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.call(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.apply(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.next, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.apply(this, arguments), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(this, arguments), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw", 1));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw", "error"));

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "next"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "throw new Error()");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "throw new TypeError()");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.resolve(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this, arguments))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this, arguments))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all({})], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args[0], self);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args[0], args[1]);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply({}, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.map(function (x) {
+     return x * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.defer(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({}).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(args));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.resolve(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.notify(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args[0]);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, 0]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.reject(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.all(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.race(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q({}).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", ["key"]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key.toUpperCase()]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.promiseDispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", ["key"]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.reject(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.defer(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.all(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q({}).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, Q(value)]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value - 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setValue", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set" + "Value", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set" + key, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, 0]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, undefined]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("hasOwnProperty", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.reject(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.defer(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.all(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(0).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, "value"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return null("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return undefined("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return 0("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("del", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key + 1]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key - 1]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.defer(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("patch", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.filter(function (x) {
+     return x !== 1;
+   })]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("patch", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.fapply(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Promise.prototype.fapply(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q.fbind(object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q("foo").dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 0, 1))]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 1, 2))]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([1, 2, 3], 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("patch", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(args.slice(1))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([].slice.call(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.reject(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(function () {}).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply" + "call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(0, -1)]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(0, -2)]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("concat", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, 1]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, null]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, undefined]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q({}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("arguments", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("post", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 2))]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 3))]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(0);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(this.arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 0), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, promises.length - 1);

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([1, 2, 3]))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.concat(array_slice(arguments, 1)));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.concat(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([1, 2, 3]))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["foo"]);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(undefined).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q({}).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("push", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", ["foo"]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [function () {
+     return "bar";
+   }]);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().value === undefined

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise.isFulfilled(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return undefined;
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     throw new Error("error");
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return promise;
+   })) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.reason()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === 0 && promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat(["new promise"]));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.filter(function (promise) {
+     return promise.state === "fulfilled";
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index - 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index * 2,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return race(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(undefined);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).catch(onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).finally(onProgress));

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onRejected, onFulfilled), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, noop, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.promise(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(index);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise.value);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.inspect(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error("Rejection"));

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return some(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.dispatch("keys", []));

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.dispatch("keys", ["key1", "key2"]));

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.dispatch("keys", ["key1", "key2", "key3"]));

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Q.allSettled, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "anyRejected");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allRejected");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.all);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_forEach(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat(Q.reject()), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.map(function (promise) {
+     return Q.reject(promise);
+   }), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.when);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved([]);

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.reject(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.defer(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:12
-       return Q(promises).allSettled();
+       return Q.when(promises).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.reverse()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.concat([Q.reject("error")])).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (result) {
+     return result + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (result) {
+     return result * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function (result) {
+     return result - 1;
+   }));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, noop);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(noop, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.catch(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.finally(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.all(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(rejected, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(noop, regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, promise.inspect());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, promise.then(function (value) {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, promise.then(function (value) {
+     return value;
+   }, function (reason) {
+     throw reason;
+   }));

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, null);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(false).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(0, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     throw err;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     return err;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (err) {
+     return Q.reject(err);
+   });

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(rejected, null);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(() => {}, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, deferred.reject(new Error("rejected")));

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q({}).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(() => {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, NaN, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, progressed + 1);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, progressed - 1);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, progressed * 2);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, promise.progressed);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(0)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.apply());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.call());

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.apply === "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.call === "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback && typeof callback.bind === "function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.defer(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(null));

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(promise));

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress, void 0);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, void 0);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progress, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(void 0, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, undefined, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, null, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.catch());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.finally());

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, "progress") :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(progressed, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(void 0, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, resolved, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, undefined, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, 0) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.apply(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.call(null));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, function () {});

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms * 2, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms / 2, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(error, ms);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.reject(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.resolve(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q.defer(object).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q("foo").timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(-1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(NaN, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "error");

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.notify(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error("error"));

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           null(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           undefined(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== null) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.reject(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q({}).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout + 1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout - 1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               null(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.reject(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.resolve(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.defer(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(() => {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.concat([null]));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.filter(function (arg) {
+     return arg !== null;
+   }));

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0, -1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject("Different error message"));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = deferred.resolve();

[Survived] PrecomputedMutator
q.js:1927:20
-       var deferred = defer();
+       var deferred = deferred.notify();

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(["dummy"])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.map(function (x) {
+     return x + 1;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject("error"));

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== "undefined") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice.length(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.shift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.pop(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (err, result) {}));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Promise(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(0).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.shift()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.pop()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.reject(new Error()));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 0, -1));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, this);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 1, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat(args));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(args, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(baseArgs, 1);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments.length, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments[0], 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments[1], 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.shift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[0]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[1]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments.length);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(this, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, baseArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(this).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.filter(function (arg) {
+     return arg !== undefined;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply("foo", args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat([]));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.filter(function (arg) {
+     return arg !== undefined;
+   }));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q("foo").npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + "foo", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.split(""), args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, undefined);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(true));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(false));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 0]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject("error"));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(args);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([], 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       null(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q({}).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(1, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, nodeArgs.length);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("emit", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "extra"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return 0(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(0).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(error, value));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(null, error));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(value, error));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback + 1) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback * 2) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback({}, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, "value");

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error("Different error message"));

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = ends.reject();

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("ends.promise.get('tail')");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + 1);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" - 1);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(new Error("Some other error"));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.defer(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(0)};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               Q.resolve(end);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.56 |      153 |        84 |       1813 |        0 |        0 |
 q.js     |   11.67 |      153 |        84 |       1794 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         19 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m23:15:46 (3039) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m23:15:46 (3039) INFO MutationTestExecutor[39m Done in 234 minutes 43 seconds.

real	234m45.096s
user	41m30.365s
sys	7m8.933s
