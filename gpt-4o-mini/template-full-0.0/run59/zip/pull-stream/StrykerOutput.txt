*** using precomputed mutations ***
[32m13:44:56 (3010) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:44:56 (3010) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:44:56 (3010) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llmorpheus/llmorpheus/pull-stream/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m13:44:56 (3010) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m13:44:56 (3010) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m13:44:58 (3010) INFO ProjectReader[39m Found 31 of 1504 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 739 mutants from MUTATION_TESTING/template-full_gpt-4o-mini_0.0/mutants.json ***
Mutant 0 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in sinks) exports[k] = sources[k];
Mutant 1 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k of sources) exports[k] = sources[k];
Mutant 2 in index.js: for (var k in sources) exports[k] = sources[k]; replaced with for (var k in throughs) exports[k] = sources[k];
Mutant 3 in index.js: sources replaced with sinks
Mutant 4 in index.js: sources replaced with throughs
Mutant 5 in index.js: sources replaced with Object.keys(sources).filter(key => key.startsWith('a'))
Mutant 6 in index.js: throughs replaced with sinks
Mutant 7 in index.js: throughs replaced with sources
Mutant 8 in index.js: throughs replaced with null
Mutant 9 in index.js: for (var k in sinks) exports[k] = sinks[k]; replaced with for (var k in sources) exports[k] = sinks[k];
Mutant 10 in index.js: sinks replaced with Object.keys(sources)
Mutant 11 in index.js: sinks replaced with sinks2
Mutant 12 in index.js: sinks replaced with sinks.length
Mutant 13 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'function' && a.length !== 1
Mutant 14 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a !== 'function' || a.length === 0
Mutant 15 in pull.js: typeof a === 'function' && a.length === 1 replaced with typeof a === 'object' && a.length === 1
Mutant 16 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = 1; i < length; i++) args[i] = arguments[i];
Mutant 17 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = -1; i < length; i++) args[i] = arguments[i];
Mutant 18 in pull.js: for (var i = 0; i < length; i++) args[i] = arguments[i]; replaced with for (var i = length; i < length; i++) args[i] = arguments[i];
Mutant 19 in pull.js: i < length replaced with i <= length
Mutant 20 in pull.js: i < length replaced with i < length - 1
Mutant 21 in pull.js: i < length replaced with i < 0
Mutant 22 in pull.js: i++ replaced with i += 2
Mutant 23 in pull.js: i++ replaced with i--
Mutant 24 in pull.js: i++ replaced with i = length
Mutant 25 in pull.js: args == null replaced with args !== null
Mutant 26 in pull.js: args == null replaced with args.length > 0
Mutant 27 in pull.js: args == null replaced with typeof args === 'undefined'
Mutant 28 in pull.js: length replaced with length + 1
Mutant 29 in pull.js: length replaced with length - 1
Mutant 30 in pull.js: length replaced with 0
Mutant 31 in pull.js: pull(read, ref[0]) replaced with pull(ref[1], read)
Mutant 32 in pull.js: pull(read, ref[0]) replaced with pull(read, null)
Mutant 33 in pull.js: pull(read, ref[0]) replaced with pull(read, ref[0], ref[0])
Mutant 34 in pull.js: read replaced with null
Mutant 35 in pull.js: read replaced with undefined
Mutant 36 in pull.js: read replaced with ref[1]
Mutant 37 in pull.js: ref[0] replaced with ref[1]
Mutant 38 in pull.js: ref[0] replaced with null
Mutant 39 in pull.js: ref[0] replaced with undefined
Mutant 40 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], null)
Mutant 41 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[1], ref[2])
Mutant 42 in pull.js: pull(read, ref[0], ref[1]) replaced with pull(read, ref[0], ref[0])
Mutant 43 in pull.js: read replaced with null
Mutant 44 in pull.js: read replaced with undefined
Mutant 45 in pull.js: read replaced with ref[1]
Mutant 46 in pull.js: ref[0] replaced with ref[1]
Mutant 47 in pull.js: ref[0] replaced with undefined
Mutant 48 in pull.js: ref[0] replaced with null
Mutant 49 in pull.js: ref[1] replaced with ref[0]
Mutant 50 in pull.js: ref[1] replaced with undefined
Mutant 51 in pull.js: ref[1] replaced with null
Mutant 52 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], null)
Mutant 53 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[1], ref[1])
Mutant 54 in pull.js: pull(read, ref[0], ref[1], ref[2]) replaced with pull(read, ref[0], ref[0], ref[2])
Mutant 55 in pull.js: read replaced with null
Mutant 56 in pull.js: read replaced with undefined
Mutant 57 in pull.js: read replaced with ref[1]
Mutant 58 in pull.js: ref[0] replaced with ref[2]
Mutant 59 in pull.js: ref[0] replaced with undefined
Mutant 60 in pull.js: ref[0] replaced with null
Mutant 61 in pull.js: ref[1] replaced with ref[0]
Mutant 62 in pull.js: ref[1] replaced with undefined
Mutant 63 in pull.js: ref[1] replaced with ref[3] + 1
Mutant 64 in pull.js: ref[2] replaced with ref[1]
Mutant 65 in pull.js: ref[2] replaced with ref[3] + 1
Mutant 66 in pull.js: ref[2] replaced with null
Mutant 67 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(ref[0], ref[1], ref[2], ref[2])
Mutant 68 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(read, ref[0], ref[1], null)
Mutant 69 in pull.js: pull(read, ref[0], ref[1], ref[2], ref[3]) replaced with pull(read, ref[0], ref[1], undefined)
Mutant 70 in pull.js: read replaced with null
Mutant 71 in pull.js: read replaced with undefined
Mutant 72 in pull.js: read replaced with ref.length
Mutant 73 in pull.js: ref[0] replaced with ref[2]
Mutant 74 in pull.js: ref[0] replaced with undefined
Mutant 75 in pull.js: ref[0] replaced with null
Mutant 76 in pull.js: ref[1] replaced with ref[0]
Mutant 77 in pull.js: ref[1] replaced with ref[1] + 1
Mutant 78 in pull.js: ref[1] replaced with undefined
Mutant 79 in pull.js: ref[2] replaced with ref[0]
Mutant 80 in pull.js: ref[2] replaced with ref[1] + 1
Mutant 81 in pull.js: ref[2] replaced with null
Mutant 82 in pull.js: ref[3] replaced with ref[0]
Mutant 83 in pull.js: ref[3] replaced with undefined
Mutant 84 in pull.js: ref[3] replaced with ref[1] + 1
Mutant 85 in pull.js: ref.unshift replaced with ref.push
Mutant 86 in pull.js: ref.unshift replaced with ref.pop
Mutant 87 in pull.js: ref.unshift replaced with ref.shift
Mutant 88 in pull.js: read replaced with null
Mutant 89 in pull.js: read replaced with undefined
Mutant 90 in pull.js: read replaced with read + 1
Mutant 91 in pull.js: pull.apply(null, ref) replaced with pull.apply(undefined, ref)
Mutant 92 in pull.js: pull.apply(null, ref) replaced with pull.apply(ref.length, ref)
Mutant 93 in pull.js: pull.apply(null, ref) replaced with pull.apply(ref[0], ref)
Mutant 94 in pull.js: null replaced with undefined
Mutant 95 in pull.js: null replaced with ref.length
Mutant 96 in pull.js: null replaced with read
Mutant 97 in pull.js: ref replaced with ref.slice(0)
Mutant 98 in pull.js: ref replaced with ref.concat([read])
Mutant 99 in pull.js: ref replaced with ref.reverse()
Mutant 100 in pull.js: read && typeof read.source === 'function' replaced with read || typeof read.source === 'function'
Mutant 101 in pull.js: read && typeof read.source === 'function' replaced with read && typeof read.source === 'object'
Mutant 102 in pull.js: read && typeof read.source === 'function' replaced with read && read.source === undefined
Mutant 103 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = 0; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 104 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = length; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 105 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = 2; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 106 in pull.js: for (var i = 1; i < length; i++) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
} replaced with for (var i = 1; i < length; i += 2) {
  var s = arguments[i];
  if (typeof s === 'function') {
    read = s(read);
  } else if (s && typeof s === 'object') {
    s.sink(read);
    read = s.source;
  }
}
Mutant 107 in pull.js: i < length replaced with i <= length
Mutant 108 in pull.js: i < length replaced with i < length - 1
Mutant 109 in pull.js: i < length replaced with i < 0
Mutant 110 in pull.js: i++ replaced with i += 2
Mutant 111 in pull.js: i++ replaced with i--
Mutant 112 in pull.js: i++ replaced with i = length
Mutant 113 in pull.js: typeof s === 'function' replaced with typeof s === 'string'
Mutant 114 in pull.js: typeof s === 'function' replaced with s === null
Mutant 115 in pull.js: typeof s === 'function' replaced with typeof s !== 'function'
Mutant 116 in pull.js: s replaced with read = null
Mutant 117 in pull.js: s replaced with read = s + 1
Mutant 118 in pull.js: read replaced with null
Mutant 119 in pull.js: read replaced with undefined
Mutant 120 in pull.js: read replaced with s
Mutant 121 in pull.js: s && typeof s === 'object' replaced with s && typeof s === 'string'
Mutant 122 in pull.js: s && typeof s === 'object' replaced with s || typeof s === 'object'
Mutant 123 in pull.js: s && typeof s === 'object' replaced with s && typeof s === 'function'
Mutant 124 in pull.js: s.sink replaced with s.source
Mutant 125 in pull.js: s.sink replaced with s.sinkValue
Mutant 126 in pull.js: read replaced with read = null
Mutant 127 in pull.js: read replaced with s.sink(read)
Mutant 128 in pull.js: read replaced with s.sink(undefined)
Mutant 129 in collect.js: arr.push replaced with arr = [item]
Mutant 130 in collect.js: item replaced with null
Mutant 131 in collect.js: item replaced with item + 1
Mutant 132 in collect.js: item replaced with undefined
Mutant 133 in drain.js: !done replaced with done === undefined
Mutant 134 in drain.js: !done replaced with done != null
Mutant 135 in drain.js: !done replaced with done === true
Mutant 136 in drain.js: abort replaced with true
Mutant 137 in drain.js: abort replaced with end === true
Mutant 138 in drain.js: abort replaced with false
Mutant 139 in drain.js: loop replaced with !loop
Mutant 140 in drain.js: loop replaced with true
Mutant 141 in drain.js: loop replaced with abort
Mutant 142 in drain.js: end = end || abort replaced with end = end && abort
Mutant 143 in drain.js: end = end || abort replaced with end = null
Mutant 144 in drain.js: end = end || abort replaced with end = true
Mutant 145 in drain.js: done replaced with done(data)
Mutant 146 in drain.js: done replaced with done(true)
Mutant 147 in drain.js: done replaced with done(null)
Mutant 148 in drain.js: end === true ? null : end replaced with end === false ? null : end
Mutant 149 in drain.js: end === true ? null : end replaced with end === undefined ? null : end
Mutant 150 in drain.js: end === true ? null : end replaced with end === null ? end : true
Mutant 151 in drain.js: end && end !== true replaced with end || end === true
Mutant 152 in drain.js: end && end !== true replaced with end === false
Mutant 153 in drain.js: end && end !== true replaced with !end
Mutant 154 in drain.js: console.warn replaced with console.error
Mutant 155 in drain.js: console.warn replaced with console.log
Mutant 156 in drain.js: console.warn replaced with console.info
Mutant 157 in drain.js: doneLackingErr replaced with console.warn('An error occurred: ' + end.message)
Mutant 158 in drain.js: doneLackingErr replaced with console.warn('Error: ' + doneLackingErr)
Mutant 159 in drain.js: doneLackingErr replaced with console.warn('An unexpected error occurred')
Mutant 160 in drain.js: op && false === op(data) || abort replaced with op || true === op(data) && abort
Mutant 161 in drain.js: op && false === op(data) || abort replaced with !op || abort
Mutant 162 in drain.js: op && false === op(data) || abort replaced with op && true === op(data) && !abort
Mutant 163 in drain.js: op replaced with data.length
Mutant 164 in drain.js: op replaced with data === null
Mutant 165 in drain.js: data replaced with null
Mutant 166 in drain.js: data replaced with undefined
Mutant 167 in drain.js: read(abort || true, done || function () {}) replaced with read(abort && false, done || function () {})
Mutant 168 in drain.js: read(abort || true, done || function () {}) replaced with read(abort || false, done || null)
Mutant 169 in drain.js: read(abort || true, done || function () {}) replaced with read(true, done && function () {})
Mutant 170 in drain.js: abort || true replaced with false
Mutant 171 in drain.js: abort || true replaced with abort && true
Mutant 172 in drain.js: abort || true replaced with null
Mutant 173 in drain.js: done || function () {} replaced with done && function () {}
Mutant 174 in drain.js: done || function () {} replaced with function () {
  throw new Error('Callback not executed');
}
Mutant 175 in drain.js: done || function () {} replaced with done ? function () {} : null
Mutant 176 in drain.js: !loop replaced with loop
Mutant 177 in drain.js: !loop replaced with !cbed
Mutant 178 in drain.js: !loop replaced with abort === true
Mutant 179 in drain.js: !cbed replaced with cbed
Mutant 180 in drain.js: !cbed replaced with !abort
Mutant 181 in drain.js: !cbed replaced with data === null
Mutant 182 in drain.js: 'function' == typeof err replaced with typeof err === 'string'
Mutant 183 in drain.js: 'function' == typeof err replaced with err == null
Mutant 184 in drain.js: 'function' == typeof err replaced with err instanceof Error
Mutant 185 in drain.js: read replaced with read(null, cb)
Mutant 186 in drain.js: read replaced with read(false, cb)
Mutant 187 in drain.js: read replaced with read(abort, function () {})
Mutant 188 in drain.js: read(abort, cb || function () {}) replaced with read(false, cb || function () {})
Mutant 189 in drain.js: read(abort, cb || function () {}) replaced with read(abort || false, cb || function () {})
Mutant 190 in drain.js: read(abort, cb || function () {}) replaced with read(null, cb || function () {})
Mutant 191 in drain.js: abort replaced with false
Mutant 192 in drain.js: abort replaced with null
Mutant 193 in drain.js: abort replaced with undefined
Mutant 194 in drain.js: cb || function () {} replaced with cb && cb()
Mutant 195 in drain.js: cb || function () {} replaced with function () {
  throw new Error('Abort called');
}
Mutant 196 in drain.js: cb || function () {} replaced with function () {
  console.log('Abort executed');
}
Mutant 197 in find.js: !cb replaced with cb === null
Mutant 198 in find.js: !cb replaced with cb !== undefined
Mutant 199 in find.js: !cb replaced with cb instanceof Function
Mutant 200 in find.js: test replaced with function () {
  return false;
}
Mutant 201 in find.js: test replaced with function () {
  return true;
}
Mutant 202 in find.js: test replaced with data => data === null
Mutant 203 in find.js: test(data) replaced with !test(data)
Mutant 204 in find.js: test(data) replaced with data === null
Mutant 205 in find.js: test(data) replaced with data.length > 0
Mutant 206 in find.js: test replaced with data > 0
Mutant 207 in find.js: data replaced with data + 1
Mutant 208 in find.js: cb(null, data) replaced with cb(err, data)
Mutant 209 in find.js: cb(null, data) replaced with cb(null, undefined)
Mutant 210 in find.js: cb(null, data) replaced with cb(data, null)
Mutant 211 in find.js: null replaced with undefined
Mutant 212 in find.js: null replaced with true
Mutant 213 in find.js: null replaced with data
Mutant 214 in find.js: data replaced with undefined
Mutant 215 in find.js: data replaced with 'error'
Mutant 216 in find.js: data replaced with data + 1
Mutant 217 in find.js: ended replaced with !ended
Mutant 218 in find.js: ended replaced with err !== null
Mutant 219 in find.js: ended replaced with true
Mutant 220 in find.js: cb(err === true ? null : err, null) replaced with cb(err === false ? null : err, null)
Mutant 221 in find.js: cb(err === true ? null : err, null) replaced with cb(err ? err : 'An error occurred', null)
Mutant 222 in find.js: cb(err === true ? null : err, null) replaced with cb(null, err)
Mutant 223 in find.js: err === true ? null : err replaced with err === null ? true : err
Mutant 224 in find.js: err === true ? null : err replaced with err ? 'error' : null
Mutant 225 in find.js: err === true ? null : err replaced with err === false ? null : err
Mutant 226 in find.js: null replaced with undefined
Mutant 227 in find.js: null replaced with 'error'
Mutant 228 in find.js: null replaced with data
Mutant 229 in log.js: data replaced with data + 1
Mutant 230 in log.js: data replaced with undefined
Mutant 231 in log.js: data replaced with data.toString()
Mutant 232 in on-end.js: drain(null, done) replaced with drain(undefined, done)
Mutant 233 in on-end.js: drain(null, done) replaced with drain(done, null)
Mutant 234 in on-end.js: drain(null, done) replaced with drain(done, done)
Mutant 235 in on-end.js: null replaced with undefined
Mutant 236 in on-end.js: null replaced with true
Mutant 237 in on-end.js: null replaced with {}
Mutant 238 in on-end.js: done replaced with undefined
Mutant 239 in on-end.js: done replaced with () => {}
Mutant 240 in reduce.js: !cb replaced with cb === null
Mutant 241 in reduce.js: !cb replaced with cb !== undefined
Mutant 242 in reduce.js: !cb replaced with !acc
Mutant 243 in reduce.js: reducer(acc, data) replaced with reducer(acc + data)
Mutant 244 in reduce.js: reducer(acc, data) replaced with reducer(data)
Mutant 245 in reduce.js: reducer(acc, data) replaced with reducer(null)
Mutant 246 in reduce.js: reducer replaced with acc = acc + data
Mutant 247 in reduce.js: reducer replaced with acc = data
Mutant 248 in reduce.js: reducer replaced with acc = acc * data
Mutant 249 in reduce.js: acc replaced with null
Mutant 250 in reduce.js: acc replaced with data
Mutant 251 in reduce.js: acc replaced with acc + 1
Mutant 252 in reduce.js: data replaced with null
Mutant 253 in reduce.js: data replaced with data + 1
Mutant 254 in reduce.js: data replaced with data * 2
Mutant 255 in reduce.js: cb(err, acc) replaced with cb(null, acc)
Mutant 256 in reduce.js: cb(err, acc) replaced with cb(err, null)
Mutant 257 in reduce.js: cb(err, acc) replaced with cb(new Error('Custom error'), acc)
Mutant 258 in reduce.js: err replaced with null
Mutant 259 in reduce.js: err replaced with 'error'
Mutant 260 in reduce.js: err replaced with undefined
Mutant 261 in reduce.js: acc replaced with null
Mutant 262 in reduce.js: acc replaced with undefined
Mutant 263 in reduce.js: acc replaced with acc + 1
Mutant 264 in reduce.js: arguments.length === 2 replaced with arguments.length !== 2
Mutant 265 in reduce.js: arguments.length === 2 replaced with typeof cb === 'undefined'
Mutant 266 in reduce.js: arguments.length === 2 replaced with arguments.length > 2
Mutant 267 in reduce.js: end replaced with end === false
Mutant 268 in reduce.js: end replaced with data
Mutant 269 in reduce.js: end replaced with end !== null
Mutant 270 in reduce.js: end === true ? null : end replaced with end === false ? null : end
Mutant 271 in reduce.js: end === true ? null : end replaced with end ? acc : end
Mutant 272 in reduce.js: end === true ? null : end replaced with end === true ? undefined : end
Mutant 273 in reduce.js: source replaced with null
Mutant 274 in reduce.js: source replaced with undefined
Mutant 275 in reduce.js: source replaced with data
Mutant 276 in count.js: end replaced with end === null
Mutant 277 in count.js: end replaced with i >= max
Mutant 278 in count.js: end replaced with end < 0
Mutant 279 in count.js: end replaced with !end
Mutant 280 in count.js: end replaced with undefined
Mutant 281 in count.js: end replaced with 0
Mutant 282 in count.js: i > max replaced with i < max
Mutant 283 in count.js: i > max replaced with i === max
Mutant 284 in count.js: i > max replaced with i >= max
Mutant 285 in count.js: true replaced with false
Mutant 286 in count.js: true replaced with i <= max
Mutant 287 in count.js: true replaced with undefined
Mutant 288 in count.js: cb(null, i++) replaced with cb(i--, null)
Mutant 289 in count.js: cb(null, i++) replaced with cb(i + 1, null)
Mutant 290 in count.js: cb(null, i++) replaced with cb(null, i += 2)
Mutant 291 in count.js: null replaced with undefined
Mutant 292 in count.js: null replaced with true
Mutant 293 in count.js: i++ replaced with i += 2
Mutant 294 in count.js: i++ replaced with i--
Mutant 295 in count.js: i++ replaced with i = max
Mutant 296 in empty.js: true replaced with false
Mutant 297 in empty.js: true replaced with null
Mutant 298 in empty.js: true replaced with undefined
Mutant 299 in error.js: err replaced with null
Mutant 300 in error.js: err replaced with new Error('An unexpected error occurred')
Mutant 301 in error.js: err replaced with undefined
Mutant 302 in infinite.js: end replaced with end === null
Mutant 303 in infinite.js: end replaced with end > 0
Mutant 304 in infinite.js: end replaced with end instanceof Error
Mutant 305 in infinite.js: end replaced with !end
Mutant 306 in infinite.js: end replaced with undefined
Mutant 307 in infinite.js: end replaced with 1
Mutant 308 in infinite.js: cb(null, generate()) replaced with cb(undefined)
Mutant 309 in infinite.js: cb(null, generate()) replaced with cb('error')
Mutant 310 in infinite.js: cb(null, generate()) replaced with cb(generate() + 1)
Mutant 311 in infinite.js: null replaced with undefined
Mutant 312 in infinite.js: null replaced with 'error'
Mutant 313 in infinite.js: null replaced with true
Mutant 314 in infinite.js: generate() replaced with generate(1)
Mutant 315 in infinite.js: generate() replaced with Math.random() * 2
Mutant 316 in infinite.js: generate() replaced with generate() + 1
Mutant 317 in infinite.js: generate replaced with null
Mutant 318 in keys.js: object replaced with null
Mutant 319 in keys.js: object replaced with undefined
Mutant 320 in keys.js: object replaced with []
Mutant 321 in once.js: abort replaced with !abort
Mutant 322 in once.js: abort replaced with abort === false
Mutant 323 in once.js: abort replaced with abort !== true
Mutant 324 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, null)
Mutant 325 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, true, onAbort)
Mutant 326 in once.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, cb)
Mutant 327 in once.js: cb replaced with null
Mutant 328 in once.js: cb replaced with undefined
Mutant 329 in once.js: cb replaced with function () {}
Mutant 330 in once.js: abort replaced with !abort
Mutant 331 in once.js: abort replaced with null
Mutant 332 in once.js: abort replaced with true
Mutant 333 in once.js: onAbort replaced with null
Mutant 334 in once.js: onAbort replaced with true
Mutant 335 in once.js: onAbort replaced with undefined
Mutant 336 in once.js: value != null replaced with value === null
Mutant 337 in once.js: value != null replaced with value == null
Mutant 338 in once.js: value != null replaced with value !== null
Mutant 339 in once.js: cb(null, _value) replaced with cb(undefined, _value)
Mutant 340 in once.js: cb(null, _value) replaced with cb(false, _value)
Mutant 341 in once.js: cb(null, _value) replaced with cb(_undefined, _value)
Mutant 342 in once.js: null replaced with undefined
Mutant 343 in once.js: null replaced with false
Mutant 344 in once.js: null replaced with 'error'
Mutant 345 in once.js: _value replaced with _value + 1
Mutant 346 in once.js: _value replaced with undefined
Mutant 347 in once.js: _value replaced with 'error'
Mutant 348 in once.js: true replaced with cb(new Error('Value is null'))
Mutant 349 in once.js: true replaced with cb(null, undefined)
Mutant 350 in values.js: !array replaced with array.length === 0
Mutant 351 in values.js: !array replaced with array == null
Mutant 352 in values.js: !array replaced with typeof array === 'string'
Mutant 353 in values.js: abort replaced with true
Mutant 354 in values.js: abort replaced with abort === false
Mutant 355 in values.js: abort replaced with abort !== null
Mutant 356 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, null)
Mutant 357 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, true, onAbort)
Mutant 358 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, cb)
Mutant 359 in values.js: cb replaced with null
Mutant 360 in values.js: cb replaced with undefined
Mutant 361 in values.js: cb replaced with function () {}
Mutant 362 in values.js: abort replaced with true
Mutant 363 in values.js: abort replaced with false
Mutant 364 in values.js: abort replaced with abort + 1
Mutant 365 in values.js: onAbort replaced with null
Mutant 366 in values.js: onAbort replaced with function () {
  throw new Error('Abort!');
}
Mutant 367 in values.js: onAbort replaced with () => cb(false)
Mutant 368 in values.js: true replaced with false
Mutant 369 in values.js: true replaced with null
Mutant 370 in values.js: true replaced with array.length
Mutant 371 in values.js: !Array.isArray(array) replaced with array.length === 0
Mutant 372 in values.js: !Array.isArray(array) replaced with typeof array === 'object'
Mutant 373 in values.js: !Array.isArray(array) replaced with !array instanceof Array
Mutant 374 in values.js: Array.isArray replaced with array instanceof Object
Mutant 375 in values.js: array replaced with null
Mutant 376 in values.js: array replaced with undefined
Mutant 377 in values.js: array replaced with {}
Mutant 378 in values.js: array replaced with null
Mutant 379 in values.js: array replaced with array.length
Mutant 380 in values.js: array replaced with array[0]
Mutant 381 in values.js: abort replaced with !abort
Mutant 382 in values.js: abort replaced with abort === true
Mutant 383 in values.js: abort replaced with i < array.length
Mutant 384 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, null)
Mutant 385 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, true, onAbort)
Mutant 386 in values.js: abortCb(cb, abort, onAbort) replaced with abortCb(cb, abort, cb)
Mutant 387 in values.js: cb replaced with cb(false)
Mutant 388 in values.js: cb replaced with cb(null, 'error')
Mutant 389 in values.js: cb replaced with cb(abort)
Mutant 390 in values.js: abort replaced with true
Mutant 391 in values.js: abort replaced with null
Mutant 392 in values.js: abort replaced with i
Mutant 393 in values.js: onAbort replaced with null
Mutant 394 in values.js: onAbort replaced with function () {
  throw new Error('Abort!');
}
Mutant 395 in values.js: onAbort replaced with undefined
Mutant 396 in values.js: i >= array.length replaced with i > array.length
Mutant 397 in values.js: i >= array.length replaced with i === array.length - 1
Mutant 398 in values.js: i >= array.length replaced with i < 0
Mutant 399 in values.js: true replaced with false
Mutant 400 in values.js: true replaced with undefined
Mutant 401 in values.js: true replaced with array.length
Mutant 402 in values.js: cb(null, array[i++]) replaced with cb(null, array[i + 1])
Mutant 403 in values.js: cb(null, array[i++]) replaced with cb(null, array[i] + 1)
Mutant 404 in values.js: null replaced with false
Mutant 405 in values.js: null replaced with undefined
Mutant 406 in values.js: null replaced with array.length
Mutant 407 in values.js: array[i++] replaced with array[i]
Mutant 408 in values.js: array[i++] replaced with array[i + 1]
Mutant 409 in values.js: array[i++] replaced with array[i - 1]
Mutant 410 in async-map.js: !map replaced with map === null
Mutant 411 in async-map.js: !map replaced with map.length === 0
Mutant 412 in async-map.js: !map replaced with !map && typeof map !== 'function'
Mutant 413 in async-map.js: prop replaced with null
Mutant 414 in async-map.js: map replaced with null
Mutant 415 in async-map.js: map replaced with undefined
Mutant 416 in async-map.js: map replaced with function () {
  return 42;
}
Mutant 417 in async-map.js: aborted replaced with !aborted
Mutant 418 in async-map.js: aborted replaced with false
Mutant 419 in async-map.js: aborted replaced with true
Mutant 420 in async-map.js: aborted replaced with null
Mutant 421 in async-map.js: aborted replaced with !aborted
Mutant 422 in async-map.js: abort replaced with true
Mutant 423 in async-map.js: abort replaced with !aborted
Mutant 424 in async-map.js: abort replaced with abort === null
Mutant 425 in async-map.js: !busy replaced with busy
Mutant 426 in async-map.js: !busy replaced with !aborted
Mutant 427 in async-map.js: !busy replaced with true
Mutant 428 in async-map.js: abort replaced with null
Mutant 429 in async-map.js: abort replaced with new Error('Aborted')
Mutant 430 in async-map.js: abort replaced with undefined
Mutant 431 in async-map.js: busy replaced with !busy
Mutant 432 in async-map.js: busy replaced with true
Mutant 433 in async-map.js: busy replaced with false
Mutant 434 in async-map.js: abort replaced with null
Mutant 435 in async-map.js: abort replaced with undefined
Mutant 436 in async-map.js: abort replaced with 'error'
Mutant 437 in async-map.js: end replaced with null
Mutant 438 in async-map.js: end replaced with true
Mutant 439 in async-map.js: end replaced with data
Mutant 440 in async-map.js: end replaced with cb(new Error('Stream ended unexpectedly'))
Mutant 441 in async-map.js: end replaced with cb(null, null)
Mutant 442 in async-map.js: end replaced with cb(end)
Mutant 443 in async-map.js: aborted replaced with !aborted
Mutant 444 in async-map.js: aborted replaced with end
Mutant 445 in async-map.js: aborted replaced with data
Mutant 446 in async-map.js: aborted replaced with null
Mutant 447 in async-map.js: aborted replaced with true
Mutant 448 in async-map.js: aborted replaced with end
Mutant 449 in async-map.js: aborted replaced with !aborted
Mutant 450 in async-map.js: aborted replaced with true
Mutant 451 in async-map.js: aborted replaced with data === null
Mutant 452 in async-map.js: aborted replaced with null
Mutant 453 in async-map.js: aborted replaced with true
Mutant 454 in async-map.js: aborted replaced with new Error('Aborted')
Mutant 455 in async-map.js: aborted replaced with true
Mutant 456 in async-map.js: aborted replaced with null
Mutant 457 in async-map.js: aborted replaced with err
Mutant 458 in async-map.js: err replaced with null
Mutant 459 in async-map.js: err replaced with data
Mutant 460 in async-map.js: err replaced with !err
Mutant 461 in async-map.js: next(err, cb) replaced with next(null, cb)
Mutant 462 in async-map.js: next(err, cb) replaced with next(err, null)
Mutant 463 in async-map.js: next(err, cb) replaced with next(cb, err)
Mutant 464 in async-map.js: err replaced with null
Mutant 465 in async-map.js: err replaced with data
Mutant 466 in async-map.js: err replaced with 'error'
Mutant 467 in async-map.js: cb replaced with cb(null, data)
Mutant 468 in async-map.js: cb replaced with cb(err, null)
Mutant 469 in async-map.js: cb replaced with cb(end)
Mutant 470 in async-map.js: cb(null, data) replaced with cb(err, null)
Mutant 471 in async-map.js: cb(null, data) replaced with cb(data, null)
Mutant 472 in async-map.js: cb(null, data) replaced with cb(undefined, data)
Mutant 473 in async-map.js: null replaced with undefined
Mutant 474 in async-map.js: null replaced with data
Mutant 475 in async-map.js: null replaced with err
Mutant 476 in async-map.js: data replaced with null
Mutant 477 in async-map.js: data replaced with data + 1
Mutant 478 in async-map.js: data replaced with data.toString()
Mutant 479 in filter-not.js: test replaced with !test
Mutant 480 in filter-not.js: test replaced with test === true
Mutant 481 in filter-not.js: test replaced with data => test(data) && false
Mutant 482 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return test(data);
}
Mutant 483 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return !test(data) && data.length > 0;
}
Mutant 484 in filter-not.js: function (data) {
  return !test(data);
} replaced with function (data) {
  return test(data) || data === null;
}
Mutant 485 in filter-not.js: data replaced with !data
Mutant 486 in filter.js: test replaced with !test
Mutant 487 in filter.js: test replaced with data => data === null
Mutant 488 in filter.js: test replaced with test.bind(null, 'unexpected')
Mutant 489 in filter.js: loop replaced with !loop
Mutant 490 in filter.js: loop replaced with end === null
Mutant 491 in filter.js: loop replaced with true
Mutant 492 in filter.js: !end && !test(data) replaced with end || test(data)
Mutant 493 in filter.js: !end && !test(data) replaced with end && !test(data)
Mutant 494 in filter.js: !end && !test(data) replaced with !end || test(data) === false
Mutant 495 in filter.js: test replaced with data === null
Mutant 496 in filter.js: test replaced with data.length === 0
Mutant 497 in filter.js: data replaced with data.length
Mutant 498 in filter.js: data replaced with !data
Mutant 499 in filter.js: data replaced with data === null
Mutant 500 in filter.js: next(end, cb) replaced with next(end + 1, cb)
Mutant 501 in filter.js: end replaced with null
Mutant 502 in filter.js: end replaced with end + 1
Mutant 503 in filter.js: end replaced with undefined
Mutant 504 in filter.js: cb replaced with cb(end, null)
Mutant 505 in filter.js: cb replaced with cb(!end, data)
Mutant 506 in filter.js: cb replaced with next(end, cb)
Mutant 507 in filter.js: cb(end, data) replaced with cb(end, null)
Mutant 508 in filter.js: cb(end, data) replaced with cb(data, end)
Mutant 509 in filter.js: cb(end, data) replaced with cb(undefined, data)
Mutant 510 in filter.js: end replaced with null
Mutant 511 in filter.js: end replaced with true
Mutant 512 in filter.js: end replaced with data
Mutant 513 in filter.js: data replaced with null
Mutant 514 in filter.js: data replaced with undefined
Mutant 515 in filter.js: data replaced with data + 1
Mutant 516 in flatten.js: abort replaced with false
Mutant 517 in flatten.js: abort replaced with null
Mutant 518 in flatten.js: abort replaced with true
Mutant 519 in flatten.js: read(err || abort, cb) replaced with read(err && abort, cb)
Mutant 520 in flatten.js: read(err || abort, cb) replaced with read(false, cb)
Mutant 521 in flatten.js: read(err || abort, cb) replaced with read(abort ? true : err, cb)
Mutant 522 in flatten.js: err || abort replaced with false
Mutant 523 in flatten.js: err || abort replaced with err && abort
Mutant 524 in flatten.js: err || abort replaced with !abort
Mutant 525 in flatten.js: cb replaced with cb(true)
Mutant 526 in flatten.js: cb replaced with cb(null, 'error')
Mutant 527 in flatten.js: cb replaced with cb(end)
Mutant 528 in flatten.js: read(abort, cb) replaced with read(null, cb)
Mutant 529 in flatten.js: read(abort, cb) replaced with read(abort, function () {})
Mutant 530 in flatten.js: read(abort, cb) replaced with read(true, cb)
Mutant 531 in flatten.js: abort replaced with null
Mutant 532 in flatten.js: abort replaced with true
Mutant 533 in flatten.js: abort replaced with undefined
Mutant 534 in flatten.js: cb replaced with cb(true)
Mutant 535 in flatten.js: cb replaced with cb(null, 'error')
Mutant 536 in flatten.js: cb replaced with cb(abort)
Mutant 537 in flatten.js: _read replaced with !_read
Mutant 538 in flatten.js: _read replaced with true
Mutant 539 in flatten.js: _read replaced with typeof _read === 'string'
Mutant 540 in flatten.js: err replaced with data
Mutant 541 in flatten.js: err replaced with false
Mutant 542 in flatten.js: err replaced with null
Mutant 543 in flatten.js: err === true replaced with err === false
Mutant 544 in flatten.js: err === true replaced with err != null
Mutant 545 in flatten.js: err === true replaced with err === 'error'
Mutant 546 in flatten.js: err replaced with null
Mutant 547 in flatten.js: err replaced with true
Mutant 548 in flatten.js: err replaced with data
Mutant 549 in flatten.js: cb(null, data) replaced with cb(null, null)
Mutant 550 in flatten.js: cb(null, data) replaced with cb(data, null)
Mutant 551 in flatten.js: cb(null, data) replaced with cb(data + ' modified')
Mutant 552 in flatten.js: null replaced with undefined
Mutant 553 in flatten.js: null replaced with true
Mutant 554 in flatten.js: null replaced with data
Mutant 555 in flatten.js: data replaced with data + 1
Mutant 556 in flatten.js: data replaced with null
Mutant 557 in flatten.js: data replaced with data.length
Mutant 558 in flatten.js: end replaced with true
Mutant 559 in flatten.js: end replaced with false
Mutant 560 in flatten.js: end replaced with null
Mutant 561 in flatten.js: end replaced with cb(new Error('Stream ended unexpectedly'))
Mutant 562 in flatten.js: end replaced with cb(null, null)
Mutant 563 in flatten.js: end replaced with cb(true)
Mutant 564 in flatten.js: stream && 'object' === typeof stream replaced with stream || typeof stream === 'string'
Mutant 565 in flatten.js: stream && 'object' === typeof stream replaced with stream && 'function' === typeof stream
Mutant 566 in flatten.js: stream && 'object' === typeof stream replaced with !stream || typeof stream === 'object'
Mutant 567 in flatten.js: values replaced with stream = values[0]
Mutant 568 in flatten.js: values replaced with stream = null
Mutant 569 in flatten.js: values replaced with stream = values.length
Mutant 570 in flatten.js: stream replaced with stream = values(null)
Mutant 571 in flatten.js: stream replaced with stream = values(42)
Mutant 572 in flatten.js: stream replaced with stream = values('string')
Mutant 573 in flatten.js: 'function' !== typeof stream replaced with stream === null
Mutant 574 in flatten.js: 'function' !== typeof stream replaced with typeof stream === 'object'
Mutant 575 in flatten.js: 'function' !== typeof stream replaced with stream instanceof Array
Mutant 576 in flatten.js: stream replaced with null
Mutant 577 in flatten.js: stream replaced with undefined
Mutant 578 in flatten.js: stream replaced with 'not_a_function'
Mutant 579 in map.js: !mapper replaced with mapper === null
Mutant 580 in map.js: !mapper replaced with typeof mapper === 'undefined'
Mutant 581 in map.js: !mapper replaced with mapper === true
Mutant 582 in map.js: mapper replaced with function (data) {
  return data * 2;
}
Mutant 583 in map.js: mapper replaced with function (data) {
  return data + 1;
}
Mutant 584 in map.js: mapper replaced with function (data) {
  return null;
}
Mutant 585 in map.js: mapper replaced with data = !end ? data : null
Mutant 586 in map.js: mapper replaced with data = !end ? data + 1 : null
Mutant 587 in map.js: data replaced with data + 1
Mutant 588 in map.js: data replaced with undefined
Mutant 589 in map.js: data replaced with data * 2
Mutant 590 in map.js: err replaced with null
Mutant 591 in map.js: err replaced with data
Mutant 592 in map.js: err replaced with 'Error occurred'
Mutant 593 in map.js: cb(end, data) replaced with cb(end, null)
Mutant 594 in map.js: cb(end, data) replaced with cb(!end, data)
Mutant 595 in map.js: cb(end, data) replaced with cb(data, end)
Mutant 596 in map.js: end replaced with !end
Mutant 597 in map.js: end replaced with null
Mutant 598 in map.js: end replaced with undefined
Mutant 599 in map.js: data replaced with data + 1
Mutant 600 in map.js: data replaced with null
Mutant 601 in map.js: data replaced with data * 2
Mutant 602 in non-unique.js: unique(field, true) replaced with unique(field, false)
Mutant 603 in non-unique.js: unique(field, true) replaced with unique(field, null)
Mutant 604 in non-unique.js: unique(field, true) replaced with unique(field + 'extra')
Mutant 605 in non-unique.js: field replaced with null
Mutant 606 in non-unique.js: field replaced with undefined
Mutant 607 in non-unique.js: field replaced with field + 'extra'
Mutant 608 in non-unique.js: true replaced with false
Mutant 609 in non-unique.js: true replaced with null
Mutant 610 in non-unique.js: true replaced with 1
Mutant 611 in take.js: 'number' === typeof test replaced with 'string' === typeof test
Mutant 612 in take.js: 'number' === typeof test replaced with test === null
Mutant 613 in take.js: 'number' === typeof test replaced with typeof test === 'object'
Mutant 614 in take.js: err || true replaced with false
Mutant 615 in take.js: err || true replaced with err && false
Mutant 616 in take.js: err || true replaced with !err
Mutant 617 in take.js: ended && !end replaced with ended || end
Mutant 618 in take.js: ended && !end replaced with !ended && end
Mutant 619 in take.js: ended && !end replaced with ended === end
Mutant 620 in take.js: cb replaced with cb(false)
Mutant 621 in take.js: cb replaced with cb(ended)
Mutant 622 in take.js: cb replaced with terminate(cb)
Mutant 623 in take.js: ended replaced with !ended
Mutant 624 in take.js: ended replaced with null
Mutant 625 in take.js: ended replaced with true
Mutant 626 in take.js: ended = end replaced with ended = !end
Mutant 627 in take.js: ended = end replaced with ended = true
Mutant 628 in take.js: ended = end replaced with ended = end && false
Mutant 629 in take.js: read(ended, cb) replaced with read(!ended, cb)
Mutant 630 in take.js: read(ended, cb) replaced with read(null, cb)
Mutant 631 in take.js: read(ended, cb) replaced with read(true, cb)
Mutant 632 in take.js: ended replaced with !ended
Mutant 633 in take.js: ended replaced with false
Mutant 634 in take.js: ended replaced with null
Mutant 635 in take.js: cb replaced with cb(null, null)
Mutant 636 in take.js: cb replaced with cb(ended, data)
Mutant 637 in take.js: cb replaced with cb(true, data)
Mutant 638 in take.js: ended = ended || end replaced with ended = end
Mutant 639 in take.js: ended = ended || end replaced with ended = ended && end
Mutant 640 in take.js: ended = ended || end replaced with ended = !end
Mutant 641 in take.js: ended replaced with !ended
Mutant 642 in take.js: ended replaced with data
Mutant 643 in take.js: ended replaced with null
Mutant 644 in take.js: !test(data) replaced with test(data)
Mutant 645 in take.js: !test(data) replaced with !test(data) && false
Mutant 646 in take.js: !test(data) replaced with test(data) === true
Mutant 647 in take.js: test replaced with !data
Mutant 648 in take.js: test replaced with data === null
Mutant 649 in take.js: test replaced with data > 0
Mutant 650 in take.js: data replaced with null
Mutant 651 in take.js: data replaced with data.length
Mutant 652 in take.js: cb(null, data) replaced with cb(true)
Mutant 653 in take.js: cb(null, data) replaced with cb(undefined)
Mutant 654 in take.js: cb(null, data) replaced with cb(end)
Mutant 655 in take.js: null replaced with true
Mutant 656 in take.js: null replaced with undefined
Mutant 657 in take.js: null replaced with data
Mutant 658 in take.js: data replaced with null
Mutant 659 in take.js: data replaced with undefined
Mutant 660 in take.js: data replaced with data + 1
Mutant 661 in take.js: cb replaced with cb(ended)
Mutant 662 in take.js: cb replaced with cb(null, null)
Mutant 663 in take.js: cb replaced with cb(true)
Mutant 664 in take.js: cb(null, data) replaced with cb(true, data)
Mutant 665 in take.js: cb(null, data) replaced with cb(null, null)
Mutant 666 in take.js: cb(null, data) replaced with cb(end, data)
Mutant 667 in take.js: null replaced with undefined
Mutant 668 in take.js: null replaced with true
Mutant 669 in take.js: null replaced with data
Mutant 670 in take.js: data replaced with null
Mutant 671 in take.js: data replaced with undefined
Mutant 672 in take.js: data replaced with data + 1
Mutant 673 in through.js: a || !onEnd replaced with a && !onEnd
Mutant 674 in through.js: a || !onEnd replaced with !a && onEnd
Mutant 675 in through.js: onEnd replaced with abort
Mutant 676 in through.js: abort === true ? null : abort replaced with abort === true ? abort : null
Mutant 677 in through.js: abort === true ? null : abort replaced with abort === false ? null : abort
Mutant 678 in through.js: abort === true ? null : abort replaced with abort === null ? abort : true
Mutant 679 in through.js: end replaced with true
Mutant 680 in through.js: end replaced with false
Mutant 681 in through.js: end replaced with end === null
Mutant 682 in through.js: end replaced with true
Mutant 683 in through.js: end replaced with undefined
Mutant 684 in through.js: end replaced with 'error'
Mutant 685 in through.js: !end replaced with end === null
Mutant 686 in through.js: !end replaced with end !== false
Mutant 687 in through.js: !end replaced with end > 0
Mutant 688 in through.js: data replaced with null
Mutant 689 in through.js: data replaced with undefined
Mutant 690 in through.js: data replaced with data + 1
Mutant 691 in through.js: end replaced with true
Mutant 692 in through.js: end replaced with undefined
Mutant 693 in through.js: end replaced with 'error'
Mutant 694 in through.js: cb(end, data) replaced with cb(end, null)
Mutant 695 in through.js: cb(end, data) replaced with cb(data, end)
Mutant 696 in through.js: cb(end, data) replaced with cb(undefined, data)
Mutant 697 in through.js: end replaced with null
Mutant 698 in through.js: end replaced with data
Mutant 699 in through.js: end replaced with !end
Mutant 700 in through.js: data replaced with null
Mutant 701 in through.js: data replaced with undefined
Mutant 702 in through.js: data replaced with data + 1
Mutant 703 in unique.js: prop replaced with null
Mutant 704 in unique.js: field replaced with null
Mutant 705 in unique.js: field replaced with function () {
  return 'dummy';
}
Mutant 706 in unique.js: field replaced with undefined
Mutant 707 in unique.js: field replaced with data[field]
Mutant 708 in unique.js: field replaced with null
Mutant 709 in unique.js: data replaced with null
Mutant 710 in unique.js: data replaced with data + ''
Mutant 711 in unique.js: data replaced with data.length
Mutant 712 in unique.js: seen[key] replaced with !seen[key]
Mutant 713 in unique.js: seen[key] replaced with key in seen
Mutant 714 in unique.js: seen[key] replaced with false
Mutant 715 in abort-cb.js: cb replaced with abort && cb
Mutant 716 in abort-cb.js: cb replaced with null
Mutant 717 in abort-cb.js: abort replaced with abort === false
Mutant 718 in abort-cb.js: abort replaced with abort + 1
Mutant 719 in abort-cb.js: abort replaced with undefined
Mutant 720 in abort-cb.js: abort === true ? null : abort replaced with abort === false ? 'error' : abort
Mutant 721 in abort-cb.js: abort === true ? null : abort replaced with abort ? undefined : abort
Mutant 722 in abort-cb.js: abort === true ? null : abort replaced with abort === true ? abort : 'abort'
Mutant 723 in prop.js: key.exec replaced with data.toString
Mutant 724 in prop.js: key.exec replaced with data[key]
Mutant 725 in prop.js: key.exec replaced with key.test
Mutant 726 in prop.js: data replaced with null
Mutant 727 in prop.js: data replaced with undefined
Mutant 728 in prop.js: data replaced with data[key]
Mutant 729 in tester.js: test.test replaced with test.test === null
Mutant 730 in tester.js: test.test replaced with test.test + 1
Mutant 731 in tester.js: data replaced with null
Mutant 732 in tester.js: data replaced with undefined
Mutant 733 in tester.js: data replaced with data + 1
Mutant 734 in tester.js: prop replaced with null
Mutant 735 in tester.js: prop replaced with undefined
Mutant 736 in tester.js: test replaced with null
Mutant 737 in tester.js: test replaced with undefined
Mutant 738 in tester.js: test replaced with 'string'
[32m13:44:58 (3010) INFO Instrumenter[39m Instrumented 31 source file(s) with 739 mutant(s)
[32m13:44:58 (3010) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:44:59 (3010) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:44:59 (3010) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:45:01 (3010) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 1 second (net 1530 ms, overhead 0 ms).
Mutation testing 2% (elapsed: <1m, remaining: ~5m) 20/739 tested (2 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~10m) 23/739 tested (2 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~11m) 32/739 tested (6 survived, 1 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~12m) 38/739 tested (12 survived, 1 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~12m) 47/739 tested (14 survived, 1 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~12m) 56/739 tested (14 survived, 1 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~11m) 67/739 tested (14 survived, 1 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~12m) 73/739 tested (20 survived, 1 timed out)
Mutation testing 10% (elapsed: ~1m, remaining: ~12m) 80/739 tested (27 survived, 1 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~12m) 86/739 tested (33 survived, 1 timed out)
Mutation testing 12% (elapsed: ~1m, remaining: ~12m) 93/739 tested (40 survived, 1 timed out)
Mutation testing 13% (elapsed: ~2m, remaining: ~12m) 100/739 tested (47 survived, 1 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~12m) 107/739 tested (48 survived, 2 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~11m) 124/739 tested (52 survived, 2 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~11m) 133/739 tested (57 survived, 2 timed out)
Mutation testing 18% (elapsed: ~2m, remaining: ~11m) 140/739 tested (61 survived, 2 timed out)
Mutation testing 19% (elapsed: ~2m, remaining: ~11m) 142/739 tested (61 survived, 3 timed out)
Mutation testing 19% (elapsed: ~3m, remaining: ~12m) 147/739 tested (61 survived, 5 timed out)
Mutation testing 20% (elapsed: ~3m, remaining: ~11m) 155/739 tested (65 survived, 5 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~11m) 167/739 tested (70 survived, 5 timed out)
Mutation testing 24% (elapsed: ~3m, remaining: ~11m) 178/739 tested (75 survived, 5 timed out)
Mutation testing 25% (elapsed: ~3m, remaining: ~10m) 189/739 tested (79 survived, 5 timed out)
Mutation testing 26% (elapsed: ~3m, remaining: ~10m) 196/739 tested (84 survived, 5 timed out)
Mutation testing 27% (elapsed: ~4m, remaining: ~10m) 205/739 tested (86 survived, 5 timed out)
Mutation testing 29% (elapsed: ~4m, remaining: ~10m) 215/739 tested (87 survived, 5 timed out)
Mutation testing 30% (elapsed: ~4m, remaining: ~10m) 223/739 tested (90 survived, 5 timed out)
Mutation testing 31% (elapsed: ~4m, remaining: ~9m) 231/739 tested (94 survived, 5 timed out)
Mutation testing 32% (elapsed: ~4m, remaining: ~9m) 238/739 tested (100 survived, 5 timed out)
Mutation testing 34% (elapsed: ~4m, remaining: ~9m) 257/739 tested (100 survived, 5 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~8m) 270/739 tested (103 survived, 5 timed out)
Mutation testing 37% (elapsed: ~5m, remaining: ~8m) 278/739 tested (106 survived, 5 timed out)
Mutation testing 38% (elapsed: ~5m, remaining: ~8m) 287/739 tested (112 survived, 5 timed out)
Mutation testing 40% (elapsed: ~5m, remaining: ~8m) 296/739 tested (115 survived, 5 timed out)
Mutation testing 40% (elapsed: ~5m, remaining: ~8m) 297/739 tested (115 survived, 6 timed out)
Mutation testing 40% (elapsed: ~5m, remaining: ~8m) 300/739 tested (115 survived, 8 timed out)
Mutation testing 41% (elapsed: ~6m, remaining: ~8m) 303/739 tested (115 survived, 9 timed out)
Mutation testing 41% (elapsed: ~6m, remaining: ~8m) 306/739 tested (117 survived, 10 timed out)
Mutation testing 41% (elapsed: ~6m, remaining: ~8m) 308/739 tested (118 survived, 11 timed out)
Mutation testing 42% (elapsed: ~6m, remaining: ~8m) 313/739 tested (119 survived, 12 timed out)
Mutation testing 43% (elapsed: ~6m, remaining: ~8m) 321/739 tested (120 survived, 12 timed out)
Mutation testing 43% (elapsed: ~6m, remaining: ~8m) 323/739 tested (121 survived, 13 timed out)
Mutation testing 44% (elapsed: ~7m, remaining: ~8m) 328/739 tested (125 survived, 14 timed out)
Mutation testing 45% (elapsed: ~7m, remaining: ~8m) 334/739 tested (131 survived, 14 timed out)
Mutation testing 46% (elapsed: ~7m, remaining: ~8m) 341/739 tested (136 survived, 14 timed out)
Mutation testing 47% (elapsed: ~7m, remaining: ~8m) 348/739 tested (138 survived, 14 timed out)
Mutation testing 47% (elapsed: ~7m, remaining: ~8m) 350/739 tested (138 survived, 15 timed out)
Mutation testing 48% (elapsed: ~7m, remaining: ~8m) 357/739 tested (145 survived, 15 timed out)
Mutation testing 49% (elapsed: ~8m, remaining: ~8m) 363/739 tested (151 survived, 15 timed out)
Mutation testing 50% (elapsed: ~8m, remaining: ~8m) 370/739 tested (158 survived, 15 timed out)
Mutation testing 50% (elapsed: ~8m, remaining: ~8m) 373/739 tested (160 survived, 16 timed out)
Mutation testing 50% (elapsed: ~8m, remaining: ~8m) 376/739 tested (161 survived, 17 timed out)
Mutation testing 51% (elapsed: ~8m, remaining: ~8m) 381/739 tested (163 survived, 17 timed out)
Mutation testing 51% (elapsed: ~8m, remaining: ~8m) 383/739 tested (163 survived, 18 timed out)
Mutation testing 53% (elapsed: ~9m, remaining: ~7m) 398/739 tested (163 survived, 19 timed out)
Mutation testing 53% (elapsed: ~9m, remaining: ~7m) 399/739 tested (163 survived, 20 timed out)
Mutation testing 54% (elapsed: ~9m, remaining: ~7m) 400/739 tested (163 survived, 21 timed out)
Mutation testing 54% (elapsed: ~9m, remaining: ~7m) 403/739 tested (163 survived, 23 timed out)
Mutation testing 54% (elapsed: ~9m, remaining: ~7m) 406/739 tested (165 survived, 24 timed out)
Mutation testing 55% (elapsed: ~9m, remaining: ~7m) 408/739 tested (165 survived, 25 timed out)
Mutation testing 55% (elapsed: ~10m, remaining: ~8m) 409/739 tested (165 survived, 26 timed out)
Mutation testing 56% (elapsed: ~10m, remaining: ~7m) 417/739 tested (168 survived, 27 timed out)
Mutation testing 56% (elapsed: ~10m, remaining: ~7m) 421/739 tested (171 survived, 28 timed out)
Mutation testing 57% (elapsed: ~10m, remaining: ~7m) 423/739 tested (172 survived, 29 timed out)
Mutation testing 57% (elapsed: ~10m, remaining: ~7m) 424/739 tested (172 survived, 30 timed out)
Mutation testing 59% (elapsed: ~10m, remaining: ~7m) 437/739 tested (174 survived, 31 timed out)
Mutation testing 59% (elapsed: ~11m, remaining: ~7m) 439/739 tested (174 survived, 32 timed out)
Mutation testing 59% (elapsed: ~11m, remaining: ~7m) 441/739 tested (174 survived, 33 timed out)
Mutation testing 61% (elapsed: ~11m, remaining: ~7m) 455/739 tested (175 survived, 34 timed out)
Mutation testing 64% (elapsed: ~11m, remaining: ~6m) 474/739 tested (178 survived, 34 timed out)
Mutation testing 64% (elapsed: ~11m, remaining: ~6m) 479/739 tested (179 survived, 34 timed out)
Mutation testing 65% (elapsed: ~11m, remaining: ~6m) 481/739 tested (179 survived, 36 timed out)
Mutation testing 65% (elapsed: ~12m, remaining: ~6m) 487/739 tested (180 survived, 36 timed out)
Mutation testing 66% (elapsed: ~12m, remaining: ~6m) 488/739 tested (180 survived, 37 timed out)
Mutation testing 66% (elapsed: ~12m, remaining: ~6m) 491/739 tested (180 survived, 39 timed out)
Mutation testing 66% (elapsed: ~12m, remaining: ~6m) 492/739 tested (180 survived, 40 timed out)
Mutation testing 66% (elapsed: ~12m, remaining: ~6m) 493/739 tested (180 survived, 41 timed out)
Mutation testing 67% (elapsed: ~12m, remaining: ~6m) 496/739 tested (180 survived, 43 timed out)
Mutation testing 67% (elapsed: ~13m, remaining: ~6m) 498/739 tested (180 survived, 44 timed out)
Mutation testing 67% (elapsed: ~13m, remaining: ~6m) 499/739 tested (180 survived, 45 timed out)
Mutation testing 68% (elapsed: ~13m, remaining: ~6m) 505/739 tested (185 survived, 46 timed out)
Mutation testing 68% (elapsed: ~13m, remaining: ~6m) 509/739 tested (187 survived, 46 timed out)
Mutation testing 69% (elapsed: ~13m, remaining: ~6m) 511/739 tested (187 survived, 48 timed out)
Mutation testing 70% (elapsed: ~13m, remaining: ~5m) 520/739 tested (188 survived, 48 timed out)
Mutation testing 71% (elapsed: ~14m, remaining: ~5m) 528/739 tested (190 survived, 48 timed out)
Mutation testing 72% (elapsed: ~14m, remaining: ~5m) 536/739 tested (192 survived, 48 timed out)
Mutation testing 73% (elapsed: ~14m, remaining: ~5m) 540/739 tested (192 survived, 48 timed out)
Mutation testing 73% (elapsed: ~14m, remaining: ~5m) 542/739 tested (192 survived, 50 timed out)
Mutation testing 73% (elapsed: ~14m, remaining: ~5m) 546/739 tested (192 survived, 51 timed out)
Mutation testing 74% (elapsed: ~14m, remaining: ~5m) 548/739 tested (192 survived, 52 timed out)
Mutation testing 74% (elapsed: ~15m, remaining: ~5m) 552/739 tested (192 survived, 53 timed out)
Mutation testing 75% (elapsed: ~15m, remaining: ~4m) 561/739 tested (193 survived, 53 timed out)
Mutation testing 76% (elapsed: ~15m, remaining: ~4m) 564/739 tested (193 survived, 54 timed out)
Mutation testing 77% (elapsed: ~15m, remaining: ~4m) 574/739 tested (194 survived, 54 timed out)
Mutation testing 78% (elapsed: ~15m, remaining: ~4m) 581/739 tested (196 survived, 54 timed out)
Mutation testing 80% (elapsed: ~15m, remaining: ~3m) 597/739 tested (197 survived, 54 timed out)
Mutation testing 80% (elapsed: ~16m, remaining: ~3m) 598/739 tested (197 survived, 55 timed out)
Mutation testing 81% (elapsed: ~16m, remaining: ~3m) 604/739 tested (197 survived, 56 timed out)
Mutation testing 82% (elapsed: ~16m, remaining: ~3m) 611/739 tested (200 survived, 56 timed out)
Mutation testing 84% (elapsed: ~16m, remaining: ~3m) 623/739 tested (200 survived, 57 timed out)
Mutation testing 86% (elapsed: ~16m, remaining: ~2m) 638/739 tested (204 survived, 57 timed out)
Mutation testing 87% (elapsed: ~16m, remaining: ~2m) 645/739 tested (209 survived, 57 timed out)
Mutation testing 89% (elapsed: ~17m, remaining: ~2m) 658/739 tested (210 survived, 58 timed out)
Mutation testing 90% (elapsed: ~17m, remaining: ~1m) 669/739 tested (212 survived, 58 timed out)
Mutation testing 92% (elapsed: ~17m, remaining: ~1m) 680/739 tested (216 survived, 58 timed out)
Mutation testing 92% (elapsed: ~17m, remaining: ~1m) 687/739 tested (222 survived, 58 timed out)
Mutation testing 94% (elapsed: ~17m, remaining: ~1m) 696/739 tested (228 survived, 58 timed out)
Mutation testing 94% (elapsed: ~17m, remaining: ~1m) 697/739 tested (228 survived, 59 timed out)
Mutation testing 95% (elapsed: ~18m, remaining: <1m) 705/739 tested (229 survived, 60 timed out)
Mutation testing 96% (elapsed: ~18m, remaining: <1m) 712/739 tested (231 survived, 60 timed out)
Mutation testing 97% (elapsed: ~18m, remaining: <1m) 720/739 tested (233 survived, 60 timed out)
Mutation testing 98% (elapsed: ~18m, remaining: <1m) 727/739 tested (237 survived, 60 timed out)
Mutation testing 98% (elapsed: ~18m, remaining: <1m) 731/739 tested (239 survived, 60 timed out)
Mutation testing 99% (elapsed: ~18m, remaining: <1m) 733/739 tested (239 survived, 62 timed out)
Mutation testing 99% (elapsed: ~19m, remaining: <1m) 738/739 tested (240 survived, 62 timed out)

All tests
  ✓ All tests (killed 436)

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (done === undefined) {

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (done != null) {

[Survived] PrecomputedMutator
sinks/drain.js:8:7
-     if (!done) {
+     if (done === true) {

[Survived] PrecomputedMutator
sinks/drain.js:14:8
-       if(abort) return sink.abort()
+       if(false) return sink.abort()

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end || end === true) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(end === false) {

[Survived] PrecomputedMutator
sinks/drain.js:27:23
-                 else if(end && end !== true) {
+                 else if(!end) {

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.error(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.log(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:17
-                   console.warn(doneLackingErr)
+                   console.info(doneLackingErr)

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(console.warn('An error occurred: ' + end.message))

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(console.warn('Error: ' + doneLackingErr))

[Survived] PrecomputedMutator
sinks/drain.js:28:30
-                   console.warn(doneLackingErr)
+                   console.warn(console.warn('An unexpected error occurred'))

[Survived] PrecomputedMutator
sinks/drain.js:34:15
-                 read(abort || true, done || function () {})
+                 read(abort && false, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:15
-                 read(abort || true, done || function () {})
+                 read(abort || false, done || null)

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(false, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(abort && true, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:34:20
-                 read(abort || true, done || function () {})
+                 read(null, done || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if(typeof err === 'string')

[Survived] PrecomputedMutator
sinks/drain.js:49:8
-       if('function' == typeof err)
+       if(err == null)

[Survived] PrecomputedMutator
sinks/drain.js:52:8
-       if(read) return read(abort, cb || function () {})
+       if(read(abort, function () {})) return read(abort, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:21
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(false, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:21
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort || false, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:21
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(null, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:26
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(false, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:26
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(null, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:26
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(undefined, cb || function () {})

[Survived] PrecomputedMutator
sinks/drain.js:52:33
-       if(read) return read(abort, cb || function () {})
+       if(read) return read(abort, function () {
+     console.log('Abort executed');
+   })

[Survived] PrecomputedMutator
sinks/find.js:9:6
-     if(!cb)
+     if(cb === null)

[Survived] PrecomputedMutator
sinks/find.js:17:10
-         cb(null, data)
+         cb(undefined, data)

[Survived] PrecomputedMutator
sinks/find.js:21:8
-       if(ended) return //already called back
+       if(err !== null) return //already called back

[Survived] PrecomputedMutator
sinks/find.js:22:5
-       cb(err === true ? null : err, null)
+       cb(err === false ? null : err, null)

[Survived] PrecomputedMutator
sinks/find.js:22:5
-       cb(err === true ? null : err, null)
+       cb(null, err)

[Survived] PrecomputedMutator
sinks/find.js:22:8
-       cb(err === true ? null : err, null)
+       cb(err ? 'error' : null, null)

[Survived] PrecomputedMutator
sinks/find.js:22:8
-       cb(err === true ? null : err, null)
+       cb(err === false ? null : err, null)

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(data + 1)

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(undefined)

[Survived] PrecomputedMutator
sinks/log.js:7:17
-       console.log(data)
+       console.log(data.toString())

[Survived] PrecomputedMutator
sinks/on-end.js:6:10
-     return drain(null, done)
+     return drain(undefined, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:10
-     return drain(null, done)
+     return drain(done, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(undefined, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain(true, done)

[Survived] PrecomputedMutator
sinks/on-end.js:6:16
-     return drain(null, done)
+     return drain({}, done)

[Survived] PrecomputedMutator
sinks/reduce.js:12:7
-     if (arguments.length === 2)
+     if (typeof cb === 'undefined')

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(end === false) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:12
-           if(end) return cb(end === true ? null : end)
+           if(end !== null) return cb(end === true ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end === false ? null : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end ? acc : end)

[Survived] PrecomputedMutator
sinks/reduce.js:16:27
-           if(end) return cb(end === true ? null : end)
+           if(end) return cb(end === true ? undefined : end)

[Survived] PrecomputedMutator
sources/count.js:6:8
-       if(end) return cb && cb(end)
+       if(end < 0) return cb && cb(end)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(!end)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(undefined)

[Survived] PrecomputedMutator
sources/count.js:6:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(0)

[Survived] PrecomputedMutator
sources/count.js:7:8
-       if(i > max)
+       if(i === max)

[Survived] PrecomputedMutator
sources/count.js:7:8
-       if(i > max)
+       if(i >= max)

[Survived] PrecomputedMutator
sources/count.js:9:5
-       cb(null, i++)
+       cb(null, i += 2)

[Survived] PrecomputedMutator
sources/count.js:9:8
-       cb(null, i++)
+       cb(undefined, i++)

[Survived] PrecomputedMutator
sources/count.js:9:14
-       cb(null, i++)
+       cb(null, i += 2)

[Survived] PrecomputedMutator
sources/infinite.js:5:8
-       if(end) return cb && cb(end)
+       if(end > 0) return cb && cb(end)

[Survived] PrecomputedMutator
sources/infinite.js:5:8
-       if(end) return cb && cb(end)
+       if(end instanceof Error) return cb && cb(end)

[Survived] PrecomputedMutator
sources/infinite.js:5:29
-       if(end) return cb && cb(end)
+       if(end) return cb && cb(1)

[Survived] PrecomputedMutator
sources/infinite.js:6:15
-       return cb(null, generate())
+       return cb(undefined, generate())

[Survived] PrecomputedMutator
sources/infinite.js:6:21
-       return cb(null, generate())
+       return cb(null, generate(1))

[Survived] PrecomputedMutator
sources/once.js:6:8
-       if(abort)
+       if(abort === false)

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, true, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:14
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, cb)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(null, abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(undefined, abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:22
-         return abortCb(cb, abort, onAbort)
+         return abortCb(function () {}, abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, !abort, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, null, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:26
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, true, onAbort)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, true)

[Survived] PrecomputedMutator
sources/once.js:7:33
-         return abortCb(cb, abort, onAbort)
+         return abortCb(cb, abort, undefined)

[Survived] PrecomputedMutator
sources/once.js:8:8
-       if(value != null) {
+       if(value !== null) {

[Survived] PrecomputedMutator
sources/once.js:10:7
-         cb(null, _value)
+         cb(undefined, _value)

[Survived] PrecomputedMutator
sources/once.js:10:7
-         cb(null, _value)
+         cb(false, _value)

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(undefined, _value)

[Survived] PrecomputedMutator
sources/once.js:10:10
-         cb(null, _value)
+         cb(false, _value)

[Survived] PrecomputedMutator
sources/values.js:5:6
-     if(!array)
+     if(array.length === 0)

[Survived] PrecomputedMutator
sources/values.js:5:6
-     if(!array)
+     if(array == null)

[Survived] PrecomputedMutator
sources/values.js:5:6
-     if(!array)
+     if(typeof array === 'string')

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(true) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort === false) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:10
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort !== null) return abortCb(cb, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, true, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:24
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, cb)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(null, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(undefined, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:32
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(function () {}, abort, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, true, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, false, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:36
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort + 1, onAbort)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, null)

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, function () {
+     throw new Error('Abort!');
+   })

[Survived] PrecomputedMutator
sources/values.js:7:43
-         if(abort) return abortCb(cb, abort, onAbort)
+         if(abort) return abortCb(cb, abort, () => cb(false))

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(false)

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(null)

[Survived] PrecomputedMutator
sources/values.js:8:17
-         return cb(true)
+         return cb(array.length)

[Survived] PrecomputedMutator
sources/values.js:10:6
-     if(!Array.isArray(array))
+     if(typeof array === 'object')

[Survived] PrecomputedMutator
sources/values.js:10:21
-     if(!Array.isArray(array))
+     if(!Array.isArray(null))

[Survived] PrecomputedMutator
sources/values.js:10:21
-     if(!Array.isArray(array))
+     if(!Array.isArray(undefined))

[Survived] PrecomputedMutator
sources/values.js:10:21
-     if(!Array.isArray(array))
+     if(!Array.isArray({}))

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(false, array[i++])

[Survived] PrecomputedMutator
sources/values.js:21:10
-         cb(null, array[i++])
+         cb(undefined, array[i++])

[Survived] PrecomputedMutator
throughs/async-map.js:7:6
-     if(!map) return id
+     if(map === null) return id

[Survived] PrecomputedMutator
throughs/async-map.js:7:6
-     if(!map) return id
+     if(map.length === 0) return id

[Survived] PrecomputedMutator
throughs/async-map.js:7:6
-     if(!map) return id
+     if(!map && typeof map !== 'function') return id

[Survived] PrecomputedMutator
throughs/async-map.js:12:10
-         if(aborted) return cb(aborted)
+         if(false) return cb(aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(true)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(null)

[Survived] PrecomputedMutator
throughs/async-map.js:12:29
-         if(aborted) return cb(aborted)
+         if(aborted) return cb(!aborted)

[Survived] PrecomputedMutator
throughs/async-map.js:15:12
-           if(!busy) read(abort, function (err) {
+           if(!aborted) read(abort, function (err) {

[Survived] PrecomputedMutator
throughs/async-map.js:23:19
-             else cb(abort)
+             else cb('error')

[Survived] PrecomputedMutator
throughs/async-map.js:29:31
-             else if(aborted) cb(aborted)
+             else if(aborted) cb(true)

[Survived] PrecomputedMutator
throughs/async-map.js:36:36
-                   abortCb && abortCb(aborted)
+                   abortCb && abortCb(true)

[Survived] PrecomputedMutator
throughs/async-map.js:39:20
-                 else cb(null, data)
+                 else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/async-map.js:39:23
-                 else cb(null, data)
+                 else cb(err, data)

[Survived] PrecomputedMutator
throughs/filter-not.js:8:17
-     return filter(function (data) { return !test(data) })
+     return filter(function (data) {
+     return !test(data) && data.length > 0;
+   })

[Survived] PrecomputedMutator
throughs/filter.js:16:41
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end + 1, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(null, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end + 1, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:46
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(undefined, cb)

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, cb(end, null))

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, cb(!end, data))

[Survived] PrecomputedMutator
throughs/filter.js:16:51
-               return sync ? loop = true : next(end, cb)
+               return sync ? loop = true : next(end, next(end, cb))

[Survived] PrecomputedMutator
throughs/flatten.js:13:11
-             read(err || abort, cb)
+             read(err && abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:13:11
-             read(err || abort, cb)
+             read(abort ? true : err, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:13:16
-             read(err || abort, cb)
+             read(err && abort, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:14:14
-           }) : read(abort, cb)
+           }) : read(true, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:14:19
-           }) : read(abort, cb)
+           }) : read(true, cb)

[Survived] PrecomputedMutator
throughs/flatten.js:28:19
-             else cb(null, data)
+             else cb(undefined, data)

[Survived] PrecomputedMutator
throughs/flatten.js:36:14
-             if(stream && 'object' === typeof stream)
+             if(!stream || typeof stream === 'object')

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(mapper === null) return id

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(typeof mapper === 'undefined') return id

[Survived] PrecomputedMutator
throughs/map.js:7:6
-     if(!mapper) return id
+     if(mapper === true) return id

[Survived] PrecomputedMutator
throughs/non-unique.js:7:17
-     return unique(field, true)
+     return unique(null, true)

[Survived] PrecomputedMutator
throughs/non-unique.js:7:17
-     return unique(field, true)
+     return unique(undefined, true)

[Survived] PrecomputedMutator
throughs/non-unique.js:7:24
-     return unique(field, true)
+     return unique(field, 1)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(!ended)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(null)

[Survived] PrecomputedMutator
throughs/take.js:24:51
-         if(ended && !end) last ? terminate(cb) : cb(ended)
+         if(ended && !end) last ? terminate(cb) : cb(true)

[Survived] PrecomputedMutator
throughs/take.js:25:28
-         else if(ended = end) read(ended, cb)
+         else if(ended = end) read(true, cb)

[Survived] PrecomputedMutator
throughs/take.js:28:14
-             if(ended = ended || end) {
+             if(ended = end) {

[Survived] PrecomputedMutator
throughs/take.js:28:14
-             if(ended = ended || end) {
+             if(ended = ended && end) {

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(!ended)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(data)

[Survived] PrecomputedMutator
throughs/take.js:30:16
-               cb(ended)
+               cb(null)

[Survived] PrecomputedMutator
throughs/take.js:34:23
-               last ? cb(null, data) : terminate(cb)
+               last ? cb(undefined, data) : terminate(cb)

[Survived] PrecomputedMutator
throughs/take.js:37:13
-               cb(null, data)
+               cb(end, data)

[Survived] PrecomputedMutator
throughs/take.js:37:16
-               cb(null, data)
+               cb(undefined, data)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === true ? abort : null)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === false ? null : abort)

[Survived] PrecomputedMutator
throughs/through.js:10:11
-       onEnd(abort === true ? null : abort)
+       onEnd(abort === null ? abort : true)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(true) once(end)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(false) once(end)

[Survived] PrecomputedMutator
throughs/through.js:15:10
-         if(end) once(end)
+         if(end === null) once(end)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(true)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once(undefined)

[Survived] PrecomputedMutator
throughs/through.js:15:20
-         if(end) once(end)
+         if(end) once('error')

[Survived] PrecomputedMutator
throughs/through.js:17:12
-           if(!end) op && op(data)
+           if(end === null) op && op(data)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(null)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(undefined)

[Survived] PrecomputedMutator
throughs/through.js:17:27
-           if(!end) op && op(data)
+           if(!end) op && op(data + 1)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(true)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once(undefined)

[Survived] PrecomputedMutator
throughs/through.js:18:19
-           else once(end)
+           else once('error')

[Survived] PrecomputedMutator
throughs/unique.js:9:16
-     field = prop(field) || id
+     field = prop(null) || id

[Survived] PrecomputedMutator
throughs/unique.js:9:16
-     field = prop(field) || id
+     field = prop(undefined) || id

[Survived] PrecomputedMutator
throughs/unique.js:12:21
-       var key = field(data)
+       var key = field(data + '')

[Survived] PrecomputedMutator
throughs/unique.js:13:8
-       if(seen[key]) return !!invert //false, by default
+       if(key in seen) return !!invert //false, by default

[Survived] PrecomputedMutator
util/abort-cb.js:2:3
-     cb(abort)
+     abort && cb(abort)

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = data.toString(data); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = data[key](data); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:33
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.test(data); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(null); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(undefined); return v && v[0] }

[Survived] PrecomputedMutator
util/prop.js:6:42
-       ? function (data) { var v = key.exec(data); return v && v[0] }
+       ? function (data) { var v = key.exec(data[key]); return v && v[0] }

[Survived] PrecomputedMutator
util/tester.js:8:42
-       ? function (data) { return test.test(data) }
+       ? function (data) { return test.test(data + 1) }

[Survived] PrecomputedMutator
pull.js:7:5
-       for(var i = 0; i < length; i++)
-         args[i] = arguments[i]
+       for (var i = -1; i < length; i++) args[i] = arguments[i];

[Survived] PrecomputedMutator
pull.js:7:20
-       for(var i = 0; i < length; i++)
+       for(var i = 0; i <= length; i++)

[Survived] PrecomputedMutator
pull.js:10:11
-         if (args == null) {
+         if (typeof args === 'undefined') {

[Survived] PrecomputedMutator
pull.js:20:15
-         switch (length) {
+         switch (length + 1) {

[Survived] PrecomputedMutator
pull.js:20:15
-         switch (length) {
+         switch (0) {

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(ref[1], read)

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, null)

[Survived] PrecomputedMutator
pull.js:21:22
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[0], ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(null, ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(undefined, ref[0])

[Survived] PrecomputedMutator
pull.js:21:27
-         case 1: return pull(read, ref[0])
+         case 1: return pull(ref[1], ref[0])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, ref[1])

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, null)

[Survived] PrecomputedMutator
pull.js:21:33
-         case 1: return pull(read, ref[0])
+         case 1: return pull(read, undefined)

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(ref[0], ref[1], ref[2], ref[2])

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], null)

[Survived] PrecomputedMutator
pull.js:24:22
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], undefined)

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(null, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(undefined, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:27
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(ref.length, ref[0], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[2], ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, undefined, ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:33
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, null, ref[1], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[0], ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1] + 1, ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:41
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], undefined, ref[2], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[0], ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[1] + 1, ref[3])

[Survived] PrecomputedMutator
pull.js:24:49
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], null, ref[3])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[0])

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], undefined)

[Survived] PrecomputedMutator
pull.js:24:57
-         case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])
+         case 4: return pull(read, ref[0], ref[1], ref[2], ref[1] + 1)

[Survived] PrecomputedMutator
pull.js:26:9
-           ref.unshift(read)
+           ref.push(read)

[Survived] PrecomputedMutator
pull.js:26:9
-           ref.unshift(read)
+           ref.pop(read)

[Survived] PrecomputedMutator
pull.js:26:9
-           ref.unshift(read)
+           ref.shift(read)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(null)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(undefined)

[Survived] PrecomputedMutator
pull.js:26:21
-           ref.unshift(read)
+           ref.unshift(read + 1)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(undefined, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(ref.length, ref)

[Survived] PrecomputedMutator
pull.js:27:16
-           return pull.apply(null, ref)
+           return pull.apply(ref[0], ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(undefined, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(ref.length, ref)

[Survived] PrecomputedMutator
pull.js:27:27
-           return pull.apply(null, ref)
+           return pull.apply(read, ref)

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.slice(0))

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.concat([read]))

[Survived] PrecomputedMutator
pull.js:27:33
-           return pull.apply(null, ref)
+           return pull.apply(null, ref.reverse())

[Survived] PrecomputedMutator
pull.js:34:7
-     if (read && typeof read.source === 'function') {
+     if (read && typeof read.source === 'object') {

[Survived] PrecomputedMutator
pull.js:38:19
-     for (var i = 1; i < length; i++) {
+     for (var i = 1; i <= length; i++) {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s && typeof s === 'string') {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s || typeof s === 'object') {

[Survived] PrecomputedMutator
pull.js:42:16
-       } else if (s && typeof s === 'object') {
+       } else if (s && typeof s === 'function') {

[Survived] PrecomputedMutator
pull.js:43:7
-         s.sink(read)
+         s.source(read)

[Survived] PrecomputedMutator
pull.js:43:7
-         s.sink(read)
+         s.sinkValue(read)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(read = null)

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(s.sink(read))

[Survived] PrecomputedMutator
pull.js:43:14
-         s.sink(read)
+         s.sink(s.sink(undefined))

Ran 0.91 tests per mutant on average.
----------------|---------|----------|-----------|------------|----------|----------|
File            | % score | # killed | # timeout | # survived | # no cov | # errors |
----------------|---------|----------|-----------|------------|----------|----------|
All files       |   67.52 |      436 |        63 |        240 |        0 |        0 |
 sinks          |   66.67 |       95 |         3 |         49 |        0 |        0 |
  collect.js    |  100.00 |        4 |         0 |          0 |        0 |        0 |
  drain.js      |   56.25 |       33 |         3 |         28 |        0 |        0 |
  find.js       |   78.13 |       25 |         0 |          7 |        0 |        0 |
  log.js        |    0.00 |        0 |         0 |          3 |        0 |        0 |
  on-end.js     |   37.50 |        3 |         0 |          5 |        0 |        0 |
  reduce.js     |   83.33 |       30 |         0 |          6 |        0 |        0 |
 sources        |   55.97 |       53 |        22 |         59 |        0 |        0 |
  count.js      |   55.00 |       11 |         0 |          9 |        0 |        0 |
  empty.js      |  100.00 |        0 |         3 |          0 |        0 |        0 |
  error.js      |  100.00 |        3 |         0 |          0 |        0 |        0 |
  infinite.js   |   68.75 |        7 |         4 |          5 |        0 |        0 |
  keys.js       |  100.00 |        3 |         0 |          0 |        0 |        0 |
  once.js       |   37.93 |        8 |         3 |         18 |        0 |        0 |
  values.js     |   55.00 |       21 |        12 |         27 |        0 |        0 |
 throughs       |   78.03 |      205 |        33 |         67 |        0 |        0 |
  async-map.js  |   79.71 |       48 |         7 |         14 |        0 |        0 |
  filter-not.js |   85.71 |        4 |         2 |          1 |        0 |        0 |
  filter.js     |   76.67 |       11 |        12 |          7 |        0 |        0 |
  flatten.js    |   88.89 |       50 |         6 |          7 |        0 |        0 |
  map.js        |   86.96 |       18 |         2 |          3 |        0 |        0 |
  non-unique.js |   66.67 |        6 |         0 |          3 |        0 |        0 |
  take.js       |   80.65 |       48 |         2 |         12 |        0 |        0 |
  through.js    |   46.67 |       12 |         2 |         16 |        0 |        0 |
  unique.js     |   66.67 |        8 |         0 |          4 |        0 |        0 |
 util           |   66.67 |       13 |         3 |          8 |        0 |        0 |
  abort-cb.js   |   87.50 |        7 |         0 |          1 |        0 |        0 |
  prop.js       |    0.00 |        0 |         0 |          6 |        0 |        0 |
  tester.js     |   90.00 |        6 |         3 |          1 |        0 |        0 |
 index.js       |  100.00 |       13 |         0 |          0 |        0 |        0 |
 pull.js        |   50.86 |       57 |         2 |         57 |        0 |        0 |
----------------|---------|----------|-----------|------------|----------|----------|
[32m14:04:02 (3010) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llmorpheus/llmorpheus/pull-stream/reports/mutation/mutation.html
[32m14:04:02 (3010) INFO MutationTestExecutor[39m Done in 19 minutes 6 seconds.

real	19m7.489s
user	5m19.407s
sys	1m5.319s
