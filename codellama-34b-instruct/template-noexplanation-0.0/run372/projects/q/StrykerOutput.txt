*** using precomputed mutations ***
[32m11:17:37 (3079) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m11:17:37 (3079) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m11:17:37 (3079) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m11:17:38 (3079) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m11:17:38 (3079) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m11:17:38 (3079) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1856 mutants from MUTATION_TESTING/template-noexplanation_codellama-34b-instruct_0.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "object"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition())
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", function () {})
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 6 in q.js: bootstrap replaced with "promise"
Mutant 7 in q.js: "promise" replaced with "buggy promise"
Mutant 8 in q.js: "promise" replaced with "broken promise"
Mutant 9 in q.js: "promise" replaced with "defective promise"
Mutant 10 in q.js: definition replaced with function () {
  throw new Error("Testing mutation");
}
Mutant 11 in q.js: definition replaced with function () {
  return "Testing mutation";
}
Mutant 12 in q.js: definition replaced with function () {
  return function () {
    throw new Error("Testing mutation");
  };
}
Mutant 13 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "function"
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "undefined"
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "object" && typeof module.exports === "function"
Mutant 16 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.define
Mutant 17 in q.js: define replaced with module
Mutant 18 in q.js: definition replaced with definition()
Mutant 19 in q.js: definition replaced with function () {}
Mutant 20 in q.js: definition replaced with () => {}
Mutant 21 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "undefined" && ses.ok()
Mutant 22 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined" || ses.ok()
Mutant 23 in q.js: typeof ses !== "undefined" replaced with !ses || ses.ok()
Mutant 24 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 25 in q.js: !ses.ok() replaced with !ses.isOk()
Mutant 26 in q.js: !ses.ok() replaced with ses.isNotOk()
Mutant 27 in q.js: ses.ok replaced with !ses.ok
Mutant 28 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 29 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" || typeof self !== "undefined" || typeof global !== "undefined"
Mutant 30 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined" && typeof global !== "undefined"
Mutant 31 in q.js: captureLine replaced with captureLine + 1
Mutant 32 in q.js: captureLine replaced with captureLine - 1
Mutant 33 in q.js: captureLine replaced with captureLine * 2
Mutant 34 in q.js: head.next replaced with head.next.next
Mutant 35 in q.js: head.next replaced with head.next.task
Mutant 36 in q.js: head.next replaced with head.next.domain
Mutant 37 in q.js: domain replaced with domain && domain.exit()
Mutant 38 in q.js: domain replaced with domain || domain.exit()
Mutant 39 in q.js: domain replaced with !domain || domain.exit()
Mutant 40 in q.js: domain.enter replaced with domain.exit
Mutant 41 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, undefined)
Mutant 42 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, null)
Mutant 43 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, 0)
Mutant 44 in q.js: task replaced with task()
Mutant 45 in q.js: task replaced with task.call()
Mutant 46 in q.js: task replaced with task.apply()
Mutant 47 in q.js: domain replaced with undefined
Mutant 48 in q.js: domain replaced with null
Mutant 49 in q.js: domain replaced with false
Mutant 50 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 51 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 52 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 53 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 54 in q.js: laterQueue.pop replaced with laterQueue.length
Mutant 55 in q.js: runSingle replaced with noop
Mutant 56 in q.js: runSingle replaced with undefined
Mutant 57 in q.js: runSingle replaced with null
Mutant 58 in q.js: task replaced with null
Mutant 59 in q.js: task replaced with undefined
Mutant 60 in q.js: task replaced with 0
Mutant 61 in q.js: task replaced with task + 1
Mutant 62 in q.js: task replaced with task - 1
Mutant 63 in q.js: task replaced with task * 2
Mutant 64 in q.js: isNodeJS replaced with !isNodeJS
Mutant 65 in q.js: isNodeJS replaced with isNodeJS && false
Mutant 66 in q.js: isNodeJS replaced with isNodeJS || false
Mutant 67 in q.js: domain replaced with domain.exit()
Mutant 68 in q.js: domain replaced with domain.enter()
Mutant 69 in q.js: domain replaced with domain.run()
Mutant 70 in q.js: domain.exit replaced with domain.enter
Mutant 71 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush())
Mutant 72 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush(0))
Mutant 73 in q.js: flush replaced with flush()
Mutant 74 in q.js: flush replaced with flush.call(this)
Mutant 75 in q.js: 0 replaced with 1
Mutant 76 in q.js: 0 replaced with -1
Mutant 77 in q.js: 0 replaced with Infinity
Mutant 78 in q.js: domain replaced with domain.exit()
Mutant 79 in q.js: domain replaced with domain.enter()
Mutant 80 in q.js: domain replaced with domain.exit() && domain.enter()
Mutant 81 in q.js: domain.enter replaced with domain.exit
Mutant 82 in q.js: domain replaced with !domain
Mutant 83 in q.js: domain replaced with domain && false
Mutant 84 in q.js: domain replaced with domain || true
Mutant 85 in q.js: domain.exit replaced with domain.enter
Mutant 86 in q.js: !flushing replaced with flushing
Mutant 87 in q.js: !flushing replaced with flushing === true
Mutant 88 in q.js: flush replaced with flush()
Mutant 89 in q.js: flush replaced with flush(null)
Mutant 90 in q.js: flush replaced with flush(undefined)
Mutant 91 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" && window.location.href.indexOf("https") === 0
Mutant 92 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" && window.location.protocol === "https:"
Mutant 93 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" && window.location.hostname.endsWith(".secure.example.com")
Mutant 94 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 95 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 96 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(this)
Mutant 97 in q.js: window replaced with undefined
Mutant 98 in q.js: window replaced with null
Mutant 99 in q.js: window replaced with this
Mutant 100 in q.js: flush replaced with flush()
Mutant 101 in q.js: flush replaced with flush.call(this)
Mutant 102 in q.js: flush replaced with flush.apply(this)
Mutant 103 in q.js: flush replaced with flush()
Mutant 104 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && MessageChannel.prototype.port1.onmessage === undefined
Mutant 105 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && MessageChannel.prototype.port1.onmessage === null
Mutant 106 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 107 in q.js: 0 replaced with 1
Mutant 108 in q.js: 0 replaced with "hello"
Mutant 109 in q.js: 0 replaced with null
Mutant 110 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 111 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 112 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 113 in q.js: setTimeout replaced with setInterval
Mutant 114 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 115 in q.js: flush replaced with flush()
Mutant 116 in q.js: 0 replaced with 1
Mutant 117 in q.js: 0 replaced with -1
Mutant 118 in q.js: 0 replaced with Math.random()
Mutant 119 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 120 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 121 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 122 in q.js: setTimeout replaced with setInterval
Mutant 123 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 124 in q.js: flush replaced with flush()
Mutant 125 in q.js: flush replaced with flush.call(this)
Mutant 126 in q.js: 0 replaced with 1
Mutant 127 in q.js: 0 replaced with -1
Mutant 128 in q.js: 0 replaced with Math.random()
Mutant 129 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 130 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 131 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 132 in q.js: task replaced with null
Mutant 133 in q.js: task replaced with undefined
Mutant 134 in q.js: task replaced with 0
Mutant 135 in q.js: !flushing replaced with flushing
Mutant 136 in q.js: !flushing replaced with flushing === true
Mutant 137 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 138 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 139 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[2])
Mutant 140 in q.js: call.apply replaced with call.bind
Mutant 141 in q.js: call.apply replaced with call.apply.bind
Mutant 142 in q.js: call.apply replaced with call.bind.apply
Mutant 143 in q.js: f replaced with f.call(null, arguments)
Mutant 144 in q.js: f replaced with f.apply(null, arguments)
Mutant 145 in q.js: f replaced with f.bind(null, arguments)()
Mutant 146 in q.js: arguments replaced with array_slice.call(arguments, 1)
Mutant 147 in q.js: arguments replaced with array_slice.call(arguments, 2)
Mutant 148 in q.js: arguments replaced with array_slice.call(arguments, 3)
Mutant 149 in q.js: Array.prototype.slice replaced with Array.prototype.slice.call(this)
Mutant 150 in q.js: Array.prototype.slice replaced with Array.prototype.slice.apply(this)
Mutant 151 in q.js: Array.prototype.slice replaced with Array.prototype.slice.bind(this)()
Mutant 152 in q.js: arguments.length === 1 replaced with arguments.length < 1
Mutant 153 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 154 in q.js: arguments.length === 1 replaced with arguments.length === 2
Mutant 155 in q.js: 1 replaced with 1 + 1
Mutant 156 in q.js: 1 replaced with 2 * 2
Mutant 157 in q.js: 1 replaced with 3 - 1
Mutant 158 in q.js: index in this replaced with index in this.length
Mutant 159 in q.js: index in this replaced with index in this.length + 1
Mutant 160 in q.js: index in this replaced with index in this.length - 1
Mutant 161 in q.js: index < length replaced with index <= length
Mutant 162 in q.js: index < length replaced with index > length
Mutant 163 in q.js: index < length replaced with index >= length
Mutant 164 in q.js: index++ replaced with index--
Mutant 165 in q.js: index++ replaced with index += 2
Mutant 166 in q.js: index++ replaced with index *= 2
Mutant 167 in q.js: index in this replaced with index in this.length
Mutant 168 in q.js: index in this replaced with index in this.length - 1
Mutant 169 in q.js: index in this replaced with index in this.length + 1
Mutant 170 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 171 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 172 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index * 2)
Mutant 173 in q.js: basis replaced with basis + 1
Mutant 174 in q.js: basis replaced with basis - 1
Mutant 175 in q.js: basis replaced with basis * 2
Mutant 176 in q.js: this[index] replaced with this[index + 1]
Mutant 177 in q.js: this[index] replaced with this[index - 1]
Mutant 178 in q.js: this[index] replaced with this[index] + 1
Mutant 179 in q.js: index replaced with index + 1
Mutant 180 in q.js: index replaced with index - 1
Mutant 181 in q.js: index replaced with index * 2
Mutant 182 in q.js: i < this.length replaced with i <= this.length
Mutant 183 in q.js: i < this.length replaced with i > this.length
Mutant 184 in q.js: i < this.length replaced with i >= this.length
Mutant 185 in q.js: i++ replaced with i--
Mutant 186 in q.js: i++ replaced with i += 2
Mutant 187 in q.js: i++ replaced with i = this.length - 1
Mutant 188 in q.js: this[i] === value replaced with this[i] !== value
Mutant 189 in q.js: this[i] === value replaced with this[i] > value
Mutant 190 in q.js: this[i] === value replaced with this[i] < value
Mutant 191 in q.js: collect.push replaced with collect.pop
Mutant 192 in q.js: collect.push replaced with collect.shift
Mutant 193 in q.js: collect.push replaced with collect.unshift
Mutant 194 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) + 1
Mutant 195 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) - 1
Mutant 196 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self) * 2
Mutant 197 in q.js: callback.call replaced with callback.apply
Mutant 198 in q.js: callback.call replaced with callback.bind
Mutant 199 in q.js: callback.call replaced with callback.caller
Mutant 200 in q.js: thisp replaced with null
Mutant 201 in q.js: thisp replaced with undefined
Mutant 202 in q.js: thisp replaced with 0
Mutant 203 in q.js: value replaced with undefined
Mutant 204 in q.js: value replaced with null
Mutant 205 in q.js: value replaced with 0
Mutant 206 in q.js: index replaced with index + 1
Mutant 207 in q.js: index replaced with index - 1
Mutant 208 in q.js: index replaced with index * 2
Mutant 209 in q.js: self replaced with null
Mutant 210 in q.js: self replaced with undefined
Mutant 211 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 212 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key in object.keys()) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 213 in q.js: object replaced with null
Mutant 214 in q.js: object replaced with undefined
Mutant 215 in q.js: object replaced with {}
Mutant 216 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] !== undefined
Mutant 217 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || object[key] === undefined
Mutant 218 in q.js: object_hasOwnProperty(object, key) replaced with !object_hasOwnProperty(object, key) && object[key] === undefined
Mutant 219 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key])
Mutant 220 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object[key] = value)
Mutant 221 in q.js: object replaced with null
Mutant 222 in q.js: object replaced with {}
Mutant 223 in q.js: key replaced with this[key]
Mutant 224 in q.js: key replaced with this[key] = value
Mutant 225 in q.js: key replaced with this[key]
Mutant 226 in q.js: key replaced with key + 1
Mutant 227 in q.js: key replaced with key.toUpperCase()
Mutant 228 in q.js: Object replaced with null
Mutant 229 in q.js: Object replaced with undefined
Mutant 230 in q.js: Object replaced with NaN
Mutant 231 in q.js: value replaced with value + 1
Mutant 232 in q.js: value replaced with value - 1
Mutant 233 in q.js: value replaced with value * 2
Mutant 234 in q.js: exception replaced with exception.message
Mutant 235 in q.js: exception replaced with exception.stack
Mutant 236 in q.js: exception replaced with exception.name
Mutant 237 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== null
Mutant 238 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== undefined
Mutant 239 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== void 0
Mutant 240 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.source; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 241 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.then; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 242 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.catch; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 243 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.then) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 244 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.catch) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 245 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.finally) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 246 in q.js: !!p replaced with !p
Mutant 247 in q.js: !!p replaced with p && false
Mutant 248 in q.js: !!p replaced with p || true
Mutant 249 in q.js: p = p.source replaced with p = p.source.slice()
Mutant 250 in q.js: p = p.source replaced with p = p.source.concat()
Mutant 251 in q.js: p = p.source replaced with p = p.source.filter(function () {
  return true;
})
Mutant 252 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 253 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 254 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)
Mutant 255 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 256 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 257 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter * 2,
  configurable: true
})
Mutant 258 in q.js: "__minimumStackCounter__" replaced with "__maximumStackCounter__"
Mutant 259 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__"
Mutant 260 in q.js: "__minimumStackCounter__" replaced with "__stackCounter__" + 1
Mutant 261 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 262 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 263 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 264 in q.js: stacks.unshift replaced with stacks.push
Mutant 265 in q.js: stacks.unshift replaced with stacks.shift
Mutant 266 in q.js: p.stack replaced with p.stackCounter
Mutant 267 in q.js: p.stack replaced with p.stack.length
Mutant 268 in q.js: p.stack replaced with p.stack.toString()
Mutant 269 in q.js: stacks.unshift replaced with stacks.push
Mutant 270 in q.js: stacks.unshift replaced with stacks.pop
Mutant 271 in q.js: stacks.unshift replaced with stacks.shift
Mutant 272 in q.js: error.stack replaced with error.message
Mutant 273 in q.js: error.stack replaced with error.name
Mutant 274 in q.js: error.stack replaced with error.code
Mutant 275 in q.js: concatedStacks replaced with concatedStacks.split("\n")
Mutant 276 in q.js: concatedStacks replaced with concatedStacks.slice(0, -1)
Mutant 277 in q.js: concatedStacks replaced with concatedStacks.replace(/\n/g, " ")
Mutant 278 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: false
})
Mutant 279 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: true,
  writable: false
})
Mutant 280 in q.js: error replaced with error.stack
Mutant 281 in q.js: error replaced with error.message
Mutant 282 in q.js: error replaced with error.name
Mutant 283 in q.js: "stack" replaced with "stackTrace"
Mutant 284 in q.js: "stack" replaced with "errorStack"
Mutant 285 in q.js: "stack" replaced with "exceptionStack"
Mutant 286 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 287 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.toUpperCase(),
  configurable: true
}
Mutant 288 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.split("").reverse().join(""),
  configurable: true
}
Mutant 289 in q.js: "\n" replaced with "\t"
Mutant 290 in q.js: "\n" replaced with " "
Mutant 291 in q.js: "\n" replaced with "\\n"
Mutant 292 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 293 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 294 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = Math.floor(Math.random() * array.length); i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 295 in q.js: i < lines.length replaced with i <= lines.length
Mutant 296 in q.js: i < lines.length replaced with i > lines.length
Mutant 297 in q.js: i < lines.length replaced with i >= lines.length
Mutant 298 in q.js: ++i replaced with i += 2
Mutant 299 in q.js: ++i replaced with i *= 2
Mutant 300 in q.js: isInternalFrame replaced with isNodeFrame
Mutant 301 in q.js: isInternalFrame replaced with isPromiseAlike
Mutant 302 in q.js: isInternalFrame replaced with object_defineProperty
Mutant 303 in q.js: isNodeFrame replaced with isNodeFrame || isInternalFrame
Mutant 304 in q.js: isNodeFrame replaced with isNodeFrame && isInternalFrame
Mutant 305 in q.js: isNodeFrame replaced with !isNodeFrame && !isInternalFrame
Mutant 306 in q.js: "\n" replaced with "\t"
Mutant 307 in q.js: "\n" replaced with " "
Mutant 308 in q.js: "\n" replaced with "<br>"
Mutant 309 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 310 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 311 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 312 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 313 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 314 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 315 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 316 in q.js: stackLine replaced with stackLine.substring(stackLine.indexOf("@") + 1)
Mutant 317 in q.js: stackLine replaced with stackLine.match(/@(.+)/)[1]
Mutant 318 in q.js: attempt1 replaced with attempt1[1] === undefined
Mutant 319 in q.js: attempt1 replaced with attempt1[1] === null
Mutant 320 in q.js: attempt1 replaced with attempt1[1] === ""
Mutant 321 in q.js: Number replaced with String
Mutant 322 in q.js: Number replaced with Boolean
Mutant 323 in q.js: Number replaced with Object
Mutant 324 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 325 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 326 in q.js: attempt1[2] replaced with attempt1[0]
Mutant 327 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 328 in q.js: stackLine replaced with stackLine.split(" ")[1]
Mutant 329 in q.js: stackLine replaced with stackLine.split(" ")[2]
Mutant 330 in q.js: attempt2 replaced with attempt2[1]
Mutant 331 in q.js: attempt2 replaced with attempt2[2]
Mutant 332 in q.js: attempt2 replaced with attempt2[3]
Mutant 333 in q.js: Number replaced with "PLACEHOLDER"
Mutant 334 in q.js: Number replaced with null
Mutant 335 in q.js: Number replaced with undefined
Mutant 336 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 337 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 338 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 339 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 340 in q.js: stackLine replaced with stackLine.substring(stackLine.indexOf("@") + 1)
Mutant 341 in q.js: stackLine replaced with stackLine.match(/@(.+)/)[1]
Mutant 342 in q.js: attempt3 replaced with attempt3[1]
Mutant 343 in q.js: attempt3 replaced with attempt3[2]
Mutant 344 in q.js: attempt3 replaced with attempt3[3]
Mutant 345 in q.js: Number replaced with String
Mutant 346 in q.js: Number replaced with Boolean
Mutant 347 in q.js: Number replaced with null
Mutant 348 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 349 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 350 in q.js: attempt3[2] replaced with attempt3[4]
Mutant 351 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 352 in q.js: stackLine replaced with stackLine.split(":")[1]
Mutant 353 in q.js: stackLine replaced with stackLine.split(":")[2]
Mutant 354 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 355 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 356 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === "undefined"
Mutant 357 in q.js: !hasStacks replaced with hasStacks
Mutant 358 in q.js: "\n" replaced with "\r"
Mutant 359 in q.js: "\n" replaced with "\t"
Mutant 360 in q.js: "\n" replaced with "\b"
Mutant 361 in q.js: lines[0].indexOf replaced with lines[0].includes
Mutant 362 in q.js: lines[0].indexOf replaced with lines[0].match
Mutant 363 in q.js: lines[0].indexOf replaced with lines[0].search
Mutant 364 in q.js: "@" replaced with "#"
Mutant 365 in q.js: "@" replaced with "%"
Mutant 366 in q.js: "@" replaced with "^"
Mutant 367 in q.js: getFileNameAndLineNumber replaced with getLineNumberAndFileName
Mutant 368 in q.js: getFileNameAndLineNumber replaced with getFileAndLineNumber
Mutant 369 in q.js: firstLine replaced with firstLine.split(":")[0]
Mutant 370 in q.js: firstLine replaced with firstLine.split(":")[1]
Mutant 371 in q.js: firstLine replaced with firstLine.split(":")[2]
Mutant 372 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber[0]
Mutant 373 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber[1]
Mutant 374 in q.js: !fileNameAndLineNumber replaced with !fileNameAndLineNumber.length
Mutant 375 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== "function"
Mutant 376 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn !== "function"
Mutant 377 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "function"
Mutant 378 in q.js: callback.apply replaced with callback.call
Mutant 379 in q.js: callback.apply replaced with callback.bind
Mutant 380 in q.js: arguments replaced with null
Mutant 381 in q.js: arguments replaced with undefined
Mutant 382 in q.js: arguments replaced with []
Mutant 383 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 384 in q.js: value instanceof Promise replaced with value.constructor.name === "Promise"
Mutant 385 in q.js: value instanceof Promise replaced with Object.prototype.toString.call(value) === "[object Promise]"
Mutant 386 in q.js: isPromiseAlike(value) replaced with value.then
Mutant 387 in q.js: isPromiseAlike(value) replaced with value.catch
Mutant 388 in q.js: isPromiseAlike(value) replaced with value.finally
Mutant 389 in q.js: isPromiseAlike replaced with typeof value === "object" && value !== null && "then" in value
Mutant 390 in q.js: isPromiseAlike replaced with value !== null && typeof value === "object" && "then" in value
Mutant 391 in q.js: isPromiseAlike replaced with value !== null && typeof value === "object" && value.then !== undefined
Mutant 392 in q.js: value replaced with value + 1
Mutant 393 in q.js: value replaced with value - 1
Mutant 394 in q.js: value replaced with value * 2
Mutant 395 in q.js: fulfill replaced with reject
Mutant 396 in q.js: value replaced with null
Mutant 397 in q.js: value replaced with undefined
Mutant 398 in q.js: value replaced with 0
Mutant 399 in q.js: object_create replaced with null
Mutant 400 in q.js: object_create replaced with undefined
Mutant 401 in q.js: object_create replaced with 0
Mutant 402 in q.js: Promise.prototype replaced with Object.prototype
Mutant 403 in q.js: Promise.prototype replaced with Function.prototype
Mutant 404 in q.js: Promise.prototype replaced with Array.prototype
Mutant 405 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 406 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 407 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 408 in q.js: messages replaced with messages.length
Mutant 409 in q.js: messages replaced with messages[0]
Mutant 410 in q.js: messages replaced with messages.pop()
Mutant 411 in q.js: args replaced with args[0]
Mutant 412 in q.js: args replaced with args[1]
Mutant 413 in q.js: args replaced with args[2]
Mutant 414 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 415 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[0]
Mutant 416 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[3]
Mutant 417 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 418 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 419 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 420 in q.js: operands[1] replaced with operands[2]
Mutant 421 in q.js: operands[1] replaced with operands[0]
Mutant 422 in q.js: operands[1] replaced with operands[3]
Mutant 423 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 424 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.bind
Mutant 425 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 426 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 427 in q.js: resolvedPromise replaced with resolvedPromise.stack
Mutant 428 in q.js: args replaced with args[0]
Mutant 429 in q.js: args replaced with args[1]
Mutant 430 in q.js: args replaced with args[2]
Mutant 431 in q.js: messages replaced with messages.length
Mutant 432 in q.js: messages replaced with messages[0]
Mutant 433 in q.js: messages replaced with messages.pop()
Mutant 434 in q.js: nearer replaced with nearerValue
Mutant 435 in q.js: nearer replaced with resolvedPromise
Mutant 436 in q.js: nearer replaced with promise
Mutant 437 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 438 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 439 in q.js: resolvedPromise replaced with resolvedPromise.stack
Mutant 440 in q.js: isPromise(nearerValue) replaced with nearerValue === undefined
Mutant 441 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 442 in q.js: isPromise(nearerValue) replaced with nearerValue === 0
Mutant 443 in q.js: isPromise replaced with isPromiseAlike
Mutant 444 in q.js: isPromise replaced with isPromiseLike
Mutant 445 in q.js: isPromise replaced with isThenable
Mutant 446 in q.js: nearerValue replaced with nearerValue + 1
Mutant 447 in q.js: nearerValue replaced with nearerValue - 1
Mutant 448 in q.js: nearerValue replaced with nearerValue * 2
Mutant 449 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 450 in q.js: !resolvedPromise replaced with resolvedPromise === null
Mutant 451 in q.js: !resolvedPromise replaced with typeof resolvedPromise === "undefined"
Mutant 452 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 453 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || hasStacks
Mutant 454 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && hasStacks && false
Mutant 455 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 456 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") - 1
Mutant 457 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 458 in q.js: "\n" replaced with "\t"
Mutant 459 in q.js: "\n" replaced with "\r"
Mutant 460 in q.js: "\n" replaced with "\n\n"
Mutant 461 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 462 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || !hasStacks
Mutant 463 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && hasStacks && false
Mutant 464 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 465 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[1])
Mutant 466 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[2])
Mutant 467 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 468 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 469 in q.js: newPromise replaced with newPromise.promise
Mutant 470 in q.js: newPromise replaced with newPromise.promiseDispatch
Mutant 471 in q.js: newPromise replaced with newPromise.inspect
Mutant 472 in q.js: message replaced with message.slice(1)
Mutant 473 in q.js: message replaced with message.concat(messages)
Mutant 474 in q.js: message replaced with message.filter(function (element) {
  return element !== messages[0];
})
Mutant 475 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 476 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 477 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 478 in q.js: Q replaced with Q.reject
Mutant 479 in q.js: Q replaced with Q.resolve
Mutant 480 in q.js: Q replaced with Q.notify
Mutant 481 in q.js: value replaced with !value
Mutant 482 in q.js: value replaced with value + 1
Mutant 483 in q.js: value replaced with value * 2
Mutant 484 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 485 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 486 in q.js: resolvedPromise replaced with resolvedPromise !== resolvedPromise
Mutant 487 in q.js: fulfill(value) replaced with reject(value)
Mutant 488 in q.js: fulfill(value) replaced with fulfill(undefined)
Mutant 489 in q.js: fulfill(value) replaced with fulfill(null)
Mutant 490 in q.js: value replaced with value + 1
Mutant 491 in q.js: value replaced with value - 1
Mutant 492 in q.js: value replaced with value * 2
Mutant 493 in q.js: resolvedPromise replaced with resolvedPromise === undefined
Mutant 494 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 495 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 496 in q.js: reject(reason) replaced with reject(new Error(reason))
Mutant 497 in q.js: reject(reason) replaced with reject(reason + "!")
Mutant 498 in q.js: reject(reason) replaced with reject(null)
Mutant 499 in q.js: reason replaced with reason + 1
Mutant 500 in q.js: reason replaced with reason * 2
Mutant 501 in q.js: reason replaced with reason.toString()
Mutant 502 in q.js: resolvedPromise replaced with resolvedPromise.isResolved()
Mutant 503 in q.js: resolvedPromise replaced with resolvedPromise.isRejected()
Mutant 504 in q.js: resolvedPromise replaced with resolvedPromise.isPending()
Mutant 505 in q.js: progress replaced with progress.value
Mutant 506 in q.js: progress replaced with progress.message
Mutant 507 in q.js: progress replaced with progress.status
Mutant 508 in q.js: error replaced with error.message
Mutant 509 in q.js: error replaced with error.stack
Mutant 510 in q.js: error replaced with error.name
Mutant 511 in q.js: error replaced with error.message
Mutant 512 in q.js: error replaced with error.stack
Mutant 513 in q.js: error replaced with error.name
Mutant 514 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 515 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 516 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 517 in q.js: self.resolve replaced with self.reject
Mutant 518 in q.js: self.resolve replaced with self.fulfill
Mutant 519 in q.js: self.resolve replaced with self.notify
Mutant 520 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 521 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 3)
Mutant 522 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 4)
Mutant 523 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[1])
Mutant 524 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 525 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.splice(1))
Mutant 526 in q.js: array_slice replaced with array_splice
Mutant 527 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 528 in q.js: 1 replaced with array_slice(arguments, 1)
Mutant 529 in q.js: self.resolve replaced with self.reject
Mutant 530 in q.js: self.resolve replaced with self.fulfill
Mutant 531 in q.js: self.resolve replaced with self.notify
Mutant 532 in q.js: value replaced with null
Mutant 533 in q.js: value replaced with undefined
Mutant 534 in q.js: value replaced with 0
Mutant 535 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 536 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "string"
Mutant 537 in q.js: typeof resolver !== "function" replaced with resolver !== function () {}
Mutant 538 in q.js: defer replaced with defer.promise
Mutant 539 in q.js: defer replaced with defer.resolve
Mutant 540 in q.js: defer replaced with defer.reject
Mutant 541 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.reject, deferred.notify, deferred.fulfill)
Mutant 542 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.reject, deferred.notify, deferred.fulfill, deferred.progress)
Mutant 543 in q.js: deferred.resolve replaced with deferred.reject
Mutant 544 in q.js: deferred.resolve replaced with deferred.notify
Mutant 545 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 546 in q.js: deferred.reject replaced with deferred.resolve
Mutant 547 in q.js: deferred.reject replaced with deferred.notify
Mutant 548 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 549 in q.js: deferred.notify replaced with deferred.notify(progress)
Mutant 550 in q.js: deferred.notify replaced with deferred.notify(progress + 1)
Mutant 551 in q.js: deferred.notify replaced with deferred.notify(progress - 1)
Mutant 552 in q.js: deferred.reject replaced with deferred.resolve
Mutant 553 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 554 in q.js: deferred.reject replaced with deferred.notify
Mutant 555 in q.js: reason replaced with reason.message
Mutant 556 in q.js: reason replaced with reason.stack
Mutant 557 in q.js: reason replaced with reason.name
Mutant 558 in q.js: Q replaced with Q.reject
Mutant 559 in q.js: Q replaced with Q.resolve
Mutant 560 in q.js: Q replaced with Q.all
Mutant 561 in q.js: x replaced with y
Mutant 562 in q.js: x replaced with z
Mutant 563 in q.js: x replaced with x + y
Mutant 564 in q.js: y replaced with x
Mutant 565 in q.js: y replaced with y + 1
Mutant 566 in q.js: y replaced with z - 1
Mutant 567 in q.js: [this, that] replaced with [this, that, this]
Mutant 568 in q.js: [this, that] replaced with [this, that, null]
Mutant 569 in q.js: [this, that] replaced with [this, that, undefined]
Mutant 570 in q.js: x === y replaced with x !== y
Mutant 571 in q.js: x === y replaced with x == y
Mutant 572 in q.js: x === y replaced with x != y
Mutant 573 in q.js: i < len replaced with i <= len
Mutant 574 in q.js: i < len replaced with i > len
Mutant 575 in q.js: i < len replaced with i != len
Mutant 576 in q.js: i++ replaced with i += 2
Mutant 577 in q.js: i++ replaced with i = i + 1
Mutant 578 in q.js: i++ replaced with i = i + 2
Mutant 579 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, deferred.notify)
Mutant 580 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, deferred.notify(value))
Mutant 581 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, deferred.notify(error))
Mutant 582 in q.js: answerPs[i] replaced with answerPs[i + 1]
Mutant 583 in q.js: resolve replaced with reject
Mutant 584 in q.js: reject replaced with resolve
Mutant 585 in q.js: Q.race replaced with Q.reject
Mutant 586 in q.js: Q.race replaced with Q.resolve
Mutant 587 in q.js: Q.race replaced with Q.all
Mutant 588 in q.js: fallback === void 0 replaced with fallback === null
Mutant 589 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 590 in q.js: fallback === void 0 replaced with typeof fallback !== "function"
Mutant 591 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 592 in q.js: inspect === void 0 replaced with inspect === null
Mutant 593 in q.js: inspect === void 0 replaced with typeof inspect !== "undefined"
Mutant 594 in q.js: object_create replaced with {}
Mutant 595 in q.js: Promise.prototype replaced with Object.prototype
Mutant 596 in q.js: Promise.prototype replaced with Function.prototype
Mutant 597 in q.js: Promise.prototype replaced with Array.prototype
Mutant 598 in q.js: descriptor[op] replaced with descriptor[op] + 1
Mutant 599 in q.js: descriptor[op] replaced with descriptor[op] * 2
Mutant 600 in q.js: descriptor[op] replaced with descriptor[op] - 1
Mutant 601 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.resolve(args))
Mutant 602 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.reject(args))
Mutant 603 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.then(args))
Mutant 604 in q.js: promise replaced with null
Mutant 605 in q.js: promise replaced with undefined
Mutant 606 in q.js: promise replaced with 0
Mutant 607 in q.js: args replaced with args.slice(1)
Mutant 608 in q.js: args replaced with args.concat(1)
Mutant 609 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 610 in q.js: op replaced with op + 1
Mutant 611 in q.js: op replaced with op - 1
Mutant 612 in q.js: op replaced with op * 2
Mutant 613 in q.js: args replaced with args[0]
Mutant 614 in q.js: args replaced with args[1]
Mutant 615 in q.js: args replaced with args.length
Mutant 616 in q.js: reject replaced with resolve
Mutant 617 in q.js: exception replaced with null
Mutant 618 in q.js: exception replaced with undefined
Mutant 619 in q.js: exception replaced with new Error("PLACEHOLDER")
Mutant 620 in q.js: resolve replaced with resolve(result)
Mutant 621 in q.js: resolve replaced with reject(result)
Mutant 622 in q.js: resolve replaced with reject
Mutant 623 in q.js: result replaced with null
Mutant 624 in q.js: result replaced with undefined
Mutant 625 in q.js: result replaced with 0
Mutant 626 in q.js: inspect replaced with inspect.state
Mutant 627 in q.js: inspect replaced with inspect.value
Mutant 628 in q.js: inspect replaced with inspect.reason
Mutant 629 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 630 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 631 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 632 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 633 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "rejected"
Mutant 634 in q.js: fulfilled replaced with rejected
Mutant 635 in q.js: value replaced with value + 1
Mutant 636 in q.js: value replaced with value * 2
Mutant 637 in q.js: value replaced with value - 1
Mutant 638 in q.js: reject replaced with resolve
Mutant 639 in q.js: exception replaced with exception.message
Mutant 640 in q.js: exception replaced with new Error(exception.message)
Mutant 641 in q.js: exception replaced with reject(exception.message)
Mutant 642 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 643 in q.js: typeof rejected === "function" replaced with typeof rejected !== "undefined"
Mutant 644 in q.js: typeof rejected === "function" replaced with rejected instanceof Function
Mutant 645 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.promiseDispatch)
Mutant 646 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.inspect)
Mutant 647 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.valueOf)
Mutant 648 in q.js: exception replaced with exception.message
Mutant 649 in q.js: exception replaced with exception.stack
Mutant 650 in q.js: exception replaced with exception.name
Mutant 651 in q.js: self replaced with self.promiseDispatch
Mutant 652 in q.js: self replaced with self.inspect
Mutant 653 in q.js: self replaced with self.valueOf
Mutant 654 in q.js: exception replaced with null
Mutant 655 in q.js: exception replaced with undefined
Mutant 656 in q.js: exception replaced with "error"
Mutant 657 in q.js: newException replaced with newException.message
Mutant 658 in q.js: newException replaced with newException.stack
Mutant 659 in q.js: newException replaced with newException.name
Mutant 660 in q.js: exception replaced with reject(exception)
Mutant 661 in q.js: value replaced with null
Mutant 662 in q.js: value replaced with undefined
Mutant 663 in q.js: value replaced with 0
Mutant 664 in q.js: done replaced with !done
Mutant 665 in q.js: done replaced with done === true
Mutant 666 in q.js: done replaced with done !== false
Mutant 667 in q.js: deferred.resolve replaced with deferred.reject
Mutant 668 in q.js: deferred.resolve replaced with deferred.notify
Mutant 669 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 670 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 671 in q.js: value replaced with null
Mutant 672 in q.js: value replaced with undefined
Mutant 673 in q.js: value replaced with 0
Mutant 674 in q.js: done replaced with !done
Mutant 675 in q.js: done replaced with done === true
Mutant 676 in q.js: done replaced with done !== false
Mutant 677 in q.js: deferred.resolve replaced with deferred.reject
Mutant 678 in q.js: deferred.resolve replaced with deferred.notify
Mutant 679 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 680 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 681 in q.js: _rejected(exception) replaced with _rejected(new Error("Something went wrong"))
Mutant 682 in q.js: _rejected replaced with _progressed
Mutant 683 in q.js: exception replaced with exception.message
Mutant 684 in q.js: exception replaced with exception.stack
Mutant 685 in q.js: exception replaced with exception.name
Mutant 686 in q.js: _progressed replaced with _rejected
Mutant 687 in q.js: _progressed replaced with _fulfilled
Mutant 688 in q.js: value replaced with null
Mutant 689 in q.js: value replaced with undefined
Mutant 690 in q.js: value replaced with 0
Mutant 691 in q.js: Q.onerror replaced with Q.onerror()
Mutant 692 in q.js: Q.onerror replaced with Q.onerror(exception)
Mutant 693 in q.js: Q.onerror replaced with Q.onerror(newException)
Mutant 694 in q.js: e replaced with e.message
Mutant 695 in q.js: e replaced with e.stack
Mutant 696 in q.js: e replaced with e.toString()
Mutant 697 in q.js: !threw replaced with threw
Mutant 698 in q.js: !threw replaced with threw === false
Mutant 699 in q.js: newValue replaced with newValue + 1
Mutant 700 in q.js: newValue replaced with newValue - 1
Mutant 701 in q.js: newValue replaced with newValue * 2
Mutant 702 in q.js: Q replaced with Q.reject
Mutant 703 in q.js: Q replaced with Q.resolve
Mutant 704 in q.js: Q replaced with Q.defer
Mutant 705 in q.js: callback replaced with callback.fcall(value).thenResolve(value)
Mutant 706 in q.js: callback replaced with callback.fcall(value).thenReject(value)
Mutant 707 in q.js: callback replaced with callback.fcall(value).then(function (result) {
  return result + 1;
})
Mutant 708 in q.js: Q replaced with Q.fcall
Mutant 709 in q.js: Q replaced with Q.fapply
Mutant 710 in q.js: Q replaced with Q.fbind
Mutant 711 in q.js: callback replaced with callback.fcall(value).thenResolve(value)
Mutant 712 in q.js: callback replaced with callback.fcall(value).thenReject(value)
Mutant 713 in q.js: callback replaced with callback.fcall(value).then(function (result) {
  return result;
})
Mutant 714 in q.js: value replaced with null
Mutant 715 in q.js: value replaced with undefined
Mutant 716 in q.js: value replaced with 0
Mutant 717 in q.js: value replaced with null
Mutant 718 in q.js: value replaced with undefined
Mutant 719 in q.js: value replaced with 0
Mutant 720 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 721 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, null)
Mutant 722 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed, undefined)
Mutant 723 in q.js: Q replaced with Q.reject
Mutant 724 in q.js: Q replaced with Q.resolve
Mutant 725 in q.js: Q replaced with Q.all
Mutant 726 in q.js: value replaced with value + 1
Mutant 727 in q.js: value replaced with value - 1
Mutant 728 in q.js: value replaced with value * 2
Mutant 729 in q.js: fulfilled replaced with rejected
Mutant 730 in q.js: fulfilled replaced with progressed
Mutant 731 in q.js: fulfilled replaced with deferred
Mutant 732 in q.js: rejected replaced with resolved
Mutant 733 in q.js: rejected replaced with rejected(new Error("Something went wrong"))
Mutant 734 in q.js: rejected replaced with rejected(exception)
Mutant 735 in q.js: progressed replaced with rejected
Mutant 736 in q.js: progressed replaced with fulfilled
Mutant 737 in q.js: function () {
  return value;
} replaced with function () {
  return value + 1;
}
Mutant 738 in q.js: function () {
  return value;
} replaced with function () {
  return value - 1;
}
Mutant 739 in q.js: function () {
  return value;
} replaced with function () {
  return value * 2;
}
Mutant 740 in q.js: promise replaced with null
Mutant 741 in q.js: promise replaced with undefined
Mutant 742 in q.js: promise replaced with 0
Mutant 743 in q.js: value replaced with null
Mutant 744 in q.js: value replaced with undefined
Mutant 745 in q.js: value replaced with 0
Mutant 746 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 747 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 748 in q.js: function () {
  throw reason;
} replaced with function () {
  return Q.reject(reason);
}
Mutant 749 in q.js: promise replaced with Q.reject(reason)
Mutant 750 in q.js: promise replaced with Q.resolve(reason)
Mutant 751 in q.js: promise replaced with Q.defer()
Mutant 752 in q.js: reason replaced with reason.message
Mutant 753 in q.js: reason replaced with reason.stack
Mutant 754 in q.js: reason replaced with reason.toString()
Mutant 755 in q.js: isPromise(value) replaced with isPromise(value) || value instanceof Promise
Mutant 756 in q.js: isPromise(value) replaced with isPromise(value) && value.isPending()
Mutant 757 in q.js: isPromise(value) replaced with isPromise(value) && value.isFulfilled()
Mutant 758 in q.js: isPromise replaced with isPromiseAlike
Mutant 759 in q.js: isPromise replaced with isRejected
Mutant 760 in q.js: value replaced with value + 1
Mutant 761 in q.js: value replaced with value - 1
Mutant 762 in q.js: value replaced with value * 2
Mutant 763 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 764 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 765 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "fulfilled" && inspected.value === undefined
Mutant 766 in q.js: object replaced with object.then
Mutant 767 in q.js: object replaced with object.catch
Mutant 768 in q.js: object replaced with object.finally
Mutant 769 in q.js: isPromise replaced with isPromiseAlike
Mutant 770 in q.js: isPromise replaced with isFulfilled
Mutant 771 in q.js: isPromise replaced with isRejected
Mutant 772 in q.js: object replaced with object.inspect().state === "pending"
Mutant 773 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 774 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 775 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 776 in q.js: isPromise replaced with !isPromise
Mutant 777 in q.js: isPromise replaced with isPromiseAlike
Mutant 778 in q.js: isPromise replaced with isFulfilled
Mutant 779 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 780 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 781 in q.js: object replaced with object.inspect().state === "pending"
Mutant 782 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 783 in q.js: isPromise replaced with isPromiseAlike
Mutant 784 in q.js: isPromise replaced with isFulfilled
Mutant 785 in q.js: isPromise replaced with isRejected
Mutant 786 in q.js: object replaced with object.inspect().state === "rejected"
Mutant 787 in q.js: object replaced with object.inspect().state === "fulfilled"
Mutant 788 in q.js: object replaced with object.inspect().state === "pending"
Mutant 789 in q.js: this.inspect replaced with this.inspect.state
not replacing this.inspect with this.inspect.state
Mutant 790 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 791 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 792 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections && unhandledRejections.length > 0
Mutant 793 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections && unhandledRejections.length === 0
Mutant 794 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections || unhandledRejections.length === 0
Mutant 795 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 796 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) > -1
Mutant 797 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.indexOf(promise) !== -1)
Mutant 798 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.indexOf(promise) !== -1)
Mutant 799 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons.indexOf(reason) !== -1)
Mutant 800 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 801 in q.js: unhandledRejections replaced with unhandledReasons.length
Mutant 802 in q.js: unhandledRejections replaced with reportedUnhandledRejections.length
Mutant 803 in q.js: promise replaced with promise.then(function () {})
Mutant 804 in q.js: promise replaced with promise.catch(function () {})
Mutant 805 in q.js: promise replaced with promise.finally(function () {})
Mutant 806 in q.js: "unhandledRejection" replaced with "rejectionHandled"
Mutant 807 in q.js: "unhandledRejection" replaced with "rejectionTracked"
Mutant 808 in q.js: reason replaced with reason.stack
Mutant 809 in q.js: reason replaced with reason.message
Mutant 810 in q.js: reason replaced with reason.toString()
Mutant 811 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 812 in q.js: unhandledRejections.push replaced with unhandledRejections.shift
Mutant 813 in q.js: promise replaced with null
Mutant 814 in q.js: promise replaced with undefined
Mutant 815 in q.js: promise replaced with 0
Mutant 816 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== undefined
Mutant 817 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && typeof reason.stack !== "string"
Mutant 818 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 819 in q.js: reason.stack replaced with reason.stack.slice(0)
Mutant 820 in q.js: reason.stack replaced with reason.stack.concat()
Mutant 821 in q.js: reason.stack replaced with reason.stack.reverse()
Mutant 822 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 823 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 824 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 825 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 826 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 827 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.indexOf(promise))
Mutant 828 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.lastIndexOf(promise))
Mutant 829 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.includes(promise))
Mutant 830 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 831 in q.js: array_indexOf replaced with array_findIndex
Mutant 832 in q.js: array_indexOf replaced with array_findLastIndex
Mutant 833 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 834 in q.js: unhandledRejections replaced with unhandledRejections.concat()
Mutant 835 in q.js: unhandledRejections replaced with unhandledRejections.filter()
Mutant 836 in q.js: promise replaced with promise.then(function () {})
Mutant 837 in q.js: promise replaced with promise.catch(function () {})
Mutant 838 in q.js: promise replaced with promise.finally(function () {})
Mutant 839 in q.js: at !== -1 replaced with at < 0
Mutant 840 in q.js: at !== -1 replaced with at > 0
Mutant 841 in q.js: at !== -1 replaced with at === 0
Mutant 842 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length)
Mutant 843 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.pop())
Mutant 844 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.shift())
Mutant 845 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 846 in q.js: array_indexOf replaced with array_includes
Mutant 847 in q.js: array_indexOf replaced with array_findIndex
Mutant 848 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 849 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length
Mutant 850 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.slice()
Mutant 851 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 852 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 853 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 854 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 855 in q.js: unhandledReasons[at] replaced with unhandledReasons[at * 2]
Mutant 856 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 2)
Mutant 857 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 3)
Mutant 858 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 4)
Mutant 859 in q.js: atReport replaced with atReport.length
Mutant 860 in q.js: atReport replaced with atReport.pop()
Mutant 861 in q.js: atReport replaced with atReport.shift()
Mutant 862 in q.js: 1 replaced with -1
Mutant 863 in q.js: 1 replaced with 0
Mutant 864 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 865 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 866 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 867 in q.js: at replaced with at + 1
Mutant 868 in q.js: at replaced with at - 1
Mutant 869 in q.js: at replaced with at * 2
Mutant 870 in q.js: 1 replaced with 0
Mutant 871 in q.js: 1 replaced with -1
Mutant 872 in q.js: 1 replaced with Math.floor(Math.random() * unhandledRejections.length)
Mutant 873 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 874 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 875 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 876 in q.js: at replaced with at + 1
Mutant 877 in q.js: at replaced with at - 1
Mutant 878 in q.js: at replaced with at * 2
Mutant 879 in q.js: 1 replaced with -1
Mutant 880 in q.js: 1 replaced with 0
Mutant 881 in q.js: 1 replaced with 10
Mutant 882 in q.js: rejected replaced with rejected && untrackRejection(this)
Mutant 883 in q.js: rejected replaced with rejected || untrackRejection(this)
Mutant 884 in q.js: rejected replaced with !rejected || untrackRejection(this)
Mutant 885 in q.js: this replaced with null
Mutant 886 in q.js: this replaced with undefined
Mutant 887 in q.js: this replaced with 0
Mutant 888 in q.js: rejected replaced with rejected && false
Mutant 889 in q.js: rejected replaced with rejected || true
Mutant 890 in q.js: rejected replaced with !rejected
Mutant 891 in q.js: reason replaced with reason.stack
Mutant 892 in q.js: reason replaced with reason.message
Mutant 893 in q.js: reason replaced with reason.name
Mutant 894 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, unhandledReasons)
Mutant 895 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, unhandledReasons.slice())
Mutant 896 in q.js: trackRejection replaced with untrackRejection
Mutant 897 in q.js: trackRejection replaced with trackUnhandledRejections
Mutant 898 in q.js: trackRejection replaced with reportedUnhandledRejections
Mutant 899 in q.js: rejection replaced with null
Mutant 900 in q.js: rejection replaced with undefined
Mutant 901 in q.js: rejection replaced with 0
Mutant 902 in q.js: reason replaced with reason.stack
Mutant 903 in q.js: reason replaced with reason.message
Mutant 904 in q.js: reason replaced with reason.toString()
Mutant 905 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 906 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 907 in q.js: name === null || name === void 0 replaced with name === null
Mutant 908 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 909 in q.js: value.apply(void 0, args) replaced with value.apply(undefined, args)
Mutant 910 in q.js: value.apply(void 0, args) replaced with value.apply(void 0, args.slice())
Mutant 911 in q.js: value.apply replaced with value.call
Mutant 912 in q.js: value.apply replaced with value.bind
Mutant 913 in q.js: void 0 replaced with null
Mutant 914 in q.js: void 0 replaced with undefined
Mutant 915 in q.js: void 0 replaced with void 1
Mutant 916 in q.js: args replaced with args.slice()
Mutant 917 in q.js: args replaced with args.concat()
Mutant 918 in q.js: args replaced with args.map(function (arg) {
  return arg + 1;
})
Mutant 919 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice())
Mutant 920 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.concat())
Mutant 921 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.map())
Mutant 922 in q.js: value replaced with value + 1
Mutant 923 in q.js: value replaced with value * 2
Mutant 924 in q.js: value replaced with value - 1
Mutant 925 in q.js: args replaced with args.slice()
Mutant 926 in q.js: args replaced with args.concat()
Mutant 927 in q.js: args replaced with args.map(function (x) {
  return x + 1;
})
Mutant 928 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.slice())
Mutant 929 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.concat())
Mutant 930 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.map())
Mutant 931 in q.js: value.apply replaced with value.call
Mutant 932 in q.js: value.apply replaced with value.bind
Mutant 933 in q.js: thisp replaced with null
Mutant 934 in q.js: thisp replaced with undefined
Mutant 935 in q.js: thisp replaced with void 0
Mutant 936 in q.js: args replaced with args.slice()
Mutant 937 in q.js: args replaced with args.concat()
Mutant 938 in q.js: args replaced with args.map()
Mutant 939 in q.js: object_keys replaced with object_values
Mutant 940 in q.js: object_keys replaced with object_entries
Mutant 941 in q.js: object_keys replaced with Object.values
Mutant 942 in q.js: value replaced with value.slice()
Mutant 943 in q.js: value replaced with value.concat()
Mutant 944 in q.js: value replaced with value.filter()
Mutant 945 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(reason))
Mutant 946 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject(reason))
Mutant 947 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify(reason))
Mutant 948 in q.js: deferred.resolve replaced with deferred.reject
Mutant 949 in q.js: deferred.resolve replaced with deferred.notify
Mutant 950 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 951 in q.js: deferred.reject replaced with deferred.resolve
Mutant 952 in q.js: deferred.reject replaced with deferred.notify
Mutant 953 in q.js: deferred.reject replaced with deferred.reject(new Error("Test error"))
Mutant 954 in q.js: deferred.notify replaced with deferred.reject
Mutant 955 in q.js: deferred.notify replaced with deferred.resolve
Mutant 956 in q.js: deferred.reject replaced with deferred.resolve
Mutant 957 in q.js: deferred.reject replaced with deferred.notify
Mutant 958 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[0])
Mutant 959 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[1])
Mutant 960 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[2])
Mutant 961 in q.js: object replaced with null
Mutant 962 in q.js: object replaced with undefined
Mutant 963 in q.js: object replaced with void 0
Mutant 964 in q.js: op replaced with op + 1
Mutant 965 in q.js: op replaced with op - 1
Mutant 966 in q.js: op replaced with op * 2
Mutant 967 in q.js: args replaced with args[0]
Mutant 968 in q.js: args replaced with args.length
Mutant 969 in q.js: args replaced with args.slice(1)
Mutant 970 in q.js: Q replaced with Q.reject
Mutant 971 in q.js: Q replaced with Q.fulfill
Mutant 972 in q.js: object replaced with null
Mutant 973 in q.js: object replaced with undefined
Mutant 974 in q.js: object replaced with {}
Mutant 975 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 976 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, fulfilled)
Mutant 977 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, rejected)
Mutant 978 in q.js: Q replaced with Q.reject
Mutant 979 in q.js: Q replaced with Q.resolve
Mutant 980 in q.js: Q replaced with Q.all
Mutant 981 in q.js: value replaced with value.then(function (val) {
  return val;
})
Mutant 982 in q.js: value replaced with value.then(function (val) {
  return val + 1;
})
Mutant 983 in q.js: value replaced with value.then(function (val) {
  return val * 2;
})
Mutant 984 in q.js: fulfilled replaced with rejected
Mutant 985 in q.js: fulfilled replaced with fulfilled.apply(void 0, array)
Mutant 986 in q.js: fulfilled replaced with fulfilled.apply(void 0, args)
Mutant 987 in q.js: rejected replaced with undefined
Mutant 988 in q.js: rejected replaced with null
Mutant 989 in q.js: this.all replaced with this.then
Mutant 990 in q.js: this.all replaced with this.catch
Mutant 991 in q.js: this.all replaced with this.finally
not replacing this.all with this.then
not replacing this.all with this.then
not replacing this.all with this.catch
not replacing this.all with this.catch
not replacing this.all with this.finally
not replacing this.all with this.finally
Mutant 992 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 993 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 994 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 995 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 996 in q.js: void 0 replaced with null
Mutant 997 in q.js: void 0 replaced with undefined
Mutant 998 in q.js: array replaced with array.slice()
Mutant 999 in q.js: array replaced with array.concat()
Mutant 1000 in q.js: array replaced with array.map(function (x) {
  return x;
})
Mutant 1001 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1002 in q.js: typeof StopIteration === "undefined" replaced with StopIteration !== undefined
Mutant 1003 in q.js: typeof StopIteration === "undefined" replaced with !StopIteration
Mutant 1004 in q.js: arg replaced with arg.value
Mutant 1005 in q.js: arg replaced with arg.promise
Mutant 1006 in q.js: arg replaced with arg.resolve
Mutant 1007 in q.js: reject replaced with Q.reject
Mutant 1008 in q.js: exception replaced with exception.message
Mutant 1009 in q.js: exception replaced with exception.stack
Mutant 1010 in q.js: exception replaced with exception.name
Mutant 1011 in q.js: result.done replaced with result.value
Mutant 1012 in q.js: result.done replaced with result.error
Mutant 1013 in q.js: result.done replaced with result.isFulfilled()
Mutant 1014 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1015 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, callback)
Mutant 1016 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, errback)
Mutant 1017 in q.js: callback replaced with reject
Mutant 1018 in q.js: callback replaced with resolve
Mutant 1019 in q.js: errback replaced with reject
Mutant 1020 in q.js: errback replaced with resolve
Mutant 1021 in q.js: arg replaced with arg + 1
Mutant 1022 in q.js: arg replaced with arg - 1
Mutant 1023 in q.js: arg replaced with arg * 2
Mutant 1024 in q.js: isStopIteration(exception) replaced with exception instanceof StopIteration
Mutant 1025 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 1026 in q.js: isStopIteration(exception) replaced with exception.constructor === StopIteration
Mutant 1027 in q.js: exception replaced with exception.value
Mutant 1028 in q.js: exception replaced with exception.message
Mutant 1029 in q.js: exception replaced with exception.stack
Mutant 1030 in q.js: exception.value replaced with exception
Mutant 1031 in q.js: exception.value replaced with exception.message
Mutant 1032 in q.js: exception.value replaced with exception.stack
Mutant 1033 in q.js: reject replaced with Q.reject
Mutant 1034 in q.js: exception replaced with exception.message
Mutant 1035 in q.js: exception replaced with exception.stack
Mutant 1036 in q.js: exception replaced with exception.name
Mutant 1037 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 1038 in q.js: when replaced with Q.when
Mutant 1039 in q.js: when replaced with Q.all
Mutant 1040 in q.js: when replaced with Q.spread
Mutant 1041 in q.js: result replaced with result.value
Mutant 1042 in q.js: result replaced with result.promise
Mutant 1043 in q.js: result replaced with result.inspect()
Mutant 1044 in q.js: callback replaced with errback
Mutant 1045 in q.js: callback replaced with reject
Mutant 1046 in q.js: errback replaced with errback.bind(continuer, "throw")
Mutant 1047 in q.js: errback replaced with errback.bind(continuer, "error")
Mutant 1048 in q.js: errback replaced with errback.bind(continuer, "reject")
Mutant 1049 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(this, arguments[0])
Mutant 1050 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(this, arguments[1])
Mutant 1051 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(this, arguments[2])
Mutant 1052 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1053 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1054 in q.js: this replaced with null
Mutant 1055 in q.js: this replaced with undefined
Mutant 1056 in q.js: this replaced with 0
Mutant 1057 in q.js: arguments replaced with null
Mutant 1058 in q.js: arguments replaced with undefined
Mutant 1059 in q.js: arguments replaced with []
Mutant 1060 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1061 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 1062 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1063 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1064 in q.js: continuer replaced with continuer.bind(continuer, "return")
Mutant 1065 in q.js: "next" replaced with "throw"
Mutant 1066 in q.js: "next" replaced with "return"
Mutant 1067 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1068 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "next"))
Mutant 1069 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "error"))
Mutant 1070 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1071 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1072 in q.js: continuer replaced with continuer.bind(undefined, "throw")
Mutant 1073 in q.js: callback replaced with errback
Mutant 1074 in q.js: callback replaced with Q.reject
Mutant 1075 in q.js: Q.done replaced with Q.fail
Mutant 1076 in q.js: Q.done replaced with Q.reject
Mutant 1077 in q.js: Q.done replaced with Q.throw
Mutant 1078 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1079 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 1080 in q.js: makeGenerator replaced with makeGenerator.apply(this)
Mutant 1081 in q.js: all replaced with any
Mutant 1082 in q.js: all replaced with some
Mutant 1083 in q.js: all replaced with none
Mutant 1084 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1085 in q.js: arguments replaced with Array.prototype.slice.call(arguments)
Mutant 1086 in q.js: arguments replaced with arguments.slice()
Mutant 1087 in q.js: callback.apply(self, args) replaced with callback.apply(this, args)
Mutant 1088 in q.js: callback.apply(self, args) replaced with callback.apply(self, arguments)
Mutant 1089 in q.js: callback.apply replaced with callback.call
Mutant 1090 in q.js: callback.apply replaced with callback.bind
Mutant 1091 in q.js: self replaced with null
Mutant 1092 in q.js: self replaced with undefined
Mutant 1093 in q.js: self replaced with this
Mutant 1094 in q.js: args replaced with args.slice(1)
Mutant 1095 in q.js: args replaced with args.concat(self)
Mutant 1096 in q.js: args replaced with args.slice(0, -1)
Mutant 1097 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice(1))
Mutant 1098 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.concat(args.shift()))
Mutant 1099 in q.js: Q replaced with Q.reject
Mutant 1100 in q.js: Q replaced with Q.resolve
Mutant 1101 in q.js: Q replaced with Q.defer
Mutant 1102 in q.js: object replaced with null
Mutant 1103 in q.js: object replaced with undefined
Mutant 1104 in q.js: object replaced with 0
Mutant 1105 in q.js: op replaced with op + "d"
Mutant 1106 in q.js: op replaced with op + "e"
Mutant 1107 in q.js: op replaced with op + "f"
Mutant 1108 in q.js: args replaced with args[0]
Mutant 1109 in q.js: args replaced with args[1]
Mutant 1110 in q.js: args replaced with args.slice(1)
Mutant 1111 in q.js: defer replaced with deferred.reject
Mutant 1112 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1113 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.slice(1))
Mutant 1114 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.concat(["extra argument"]))
Mutant 1115 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1116 in q.js: self.promiseDispatch replaced with deferred.resolve
Mutant 1117 in q.js: self.promiseDispatch replaced with deferred.notify
Mutant 1118 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1119 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1120 in q.js: deferred.resolve replaced with deferred.resolve(null)
Mutant 1121 in q.js: op replaced with op + 1
Mutant 1122 in q.js: op replaced with op - 1
Mutant 1123 in q.js: op replaced with op * 2
Mutant 1124 in q.js: args replaced with args.slice(1)
Mutant 1125 in q.js: args replaced with args.concat(args[0])
Mutant 1126 in q.js: args replaced with args.filter(function (arg) {
  return arg !== args[0];
})
Mutant 1127 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1128 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("get", [key + "foo"])
Mutant 1129 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("get", [key, "foo"])
Mutant 1130 in q.js: Q replaced with Q.reject
Mutant 1131 in q.js: Q replaced with Q.resolve
Mutant 1132 in q.js: Q replaced with Q.defer
Mutant 1133 in q.js: object replaced with null
Mutant 1134 in q.js: object replaced with 0
Mutant 1135 in q.js: "get" replaced with "set"
Mutant 1136 in q.js: "get" replaced with "post"
Mutant 1137 in q.js: [key] replaced with [key + 1]
Mutant 1138 in q.js: [key] replaced with [key - 1]
Mutant 1139 in q.js: [key] replaced with [key * 2]
Mutant 1140 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1141 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key, value])
Mutant 1142 in q.js: "get" replaced with "set"
Mutant 1143 in q.js: "get" replaced with "post"
Mutant 1144 in q.js: [key] replaced with [key + 1]
Mutant 1145 in q.js: [key] replaced with [key - 1]
Mutant 1146 in q.js: [key] replaced with [key * 2]
Mutant 1147 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1148 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, key])
Mutant 1149 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1150 in q.js: Q replaced with Q.reject
Mutant 1151 in q.js: Q replaced with Q.resolve
Mutant 1152 in q.js: Q replaced with Q.defer
Mutant 1153 in q.js: object replaced with null
Mutant 1154 in q.js: object replaced with 0
Mutant 1155 in q.js: "set" replaced with "get"
Mutant 1156 in q.js: "set" replaced with "post"
Mutant 1157 in q.js: [key, value] replaced with [value, key]
Mutant 1158 in q.js: [key, value] replaced with [key, value, null]
Mutant 1159 in q.js: [key, value] replaced with [value, key, value]
Mutant 1160 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1161 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value * 2])
Mutant 1162 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value - 1])
Mutant 1163 in q.js: "set" replaced with "setValue"
Mutant 1164 in q.js: "set" replaced with "setProperty"
Mutant 1165 in q.js: "set" replaced with "setAttr"
Mutant 1166 in q.js: [key, value] replaced with [value, key]
Mutant 1167 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1168 in q.js: [key, value] replaced with [key, value * 2]
Mutant 1169 in q.js: Q replaced with Q.reject
Mutant 1170 in q.js: Q replaced with Q.resolve
Mutant 1171 in q.js: Q replaced with Q.defer
Mutant 1172 in q.js: object replaced with null
Mutant 1173 in q.js: object replaced with undefined
Mutant 1174 in q.js: object replaced with 0
Mutant 1175 in q.js: [key] replaced with [key, value]
Mutant 1176 in q.js: [key] replaced with [key, value, true]
Mutant 1177 in q.js: [key] replaced with [key, value, false]
Mutant 1178 in q.js: "delete" replaced with "remove"
Mutant 1179 in q.js: "delete" replaced with "clear"
Mutant 1180 in q.js: [key] replaced with [key, value]
Mutant 1181 in q.js: [key] replaced with [key, "value"]
Mutant 1182 in q.js: [key] replaced with [key, key]
Mutant 1183 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.slice(1)])
Mutant 1184 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.concat(args)])
Mutant 1185 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.reverse()])
Mutant 1186 in q.js: Q replaced with Q.reject
Mutant 1187 in q.js: Q replaced with Q.resolve
Mutant 1188 in q.js: Q replaced with Q.defer
Mutant 1189 in q.js: object replaced with null
Mutant 1190 in q.js: object replaced with undefined
Mutant 1191 in q.js: object replaced with this
Mutant 1192 in q.js: "post" replaced with "put"
Mutant 1193 in q.js: "post" replaced with "patch"
Mutant 1194 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1195 in q.js: [name, args] replaced with [name, args.concat(args)]
Mutant 1196 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1197 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.slice(1)])
Mutant 1198 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.reverse()])
Mutant 1199 in q.js: "post" replaced with "put"
Mutant 1200 in q.js: "post" replaced with "patch"
Mutant 1201 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1202 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1203 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1204 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1205 in q.js: object replaced with null
Mutant 1206 in q.js: object replaced with undefined
Mutant 1207 in q.js: object replaced with 0
Mutant 1208 in q.js: "post" replaced with "put"
Mutant 1209 in q.js: "post" replaced with "patch"
Mutant 1210 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1211 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1212 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 0, 1)]
Mutant 1213 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1214 in q.js: 2 replaced with -1
Mutant 1215 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1216 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1217 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1218 in q.js: "post" replaced with "put"
Mutant 1219 in q.js: "post" replaced with "patch"
Mutant 1220 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1221 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 3)]
Mutant 1222 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 4)]
Mutant 1223 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1224 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1225 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1226 in q.js: 1 replaced with 1 + 1
Mutant 1227 in q.js: 1 replaced with 2 * 2
Mutant 1228 in q.js: 1 replaced with 3 - 1
Mutant 1229 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1230 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, [args]])
Mutant 1231 in q.js: Q replaced with Q.reject
Mutant 1232 in q.js: Q replaced with Q.resolve
Mutant 1233 in q.js: Q replaced with Q.defer
Mutant 1234 in q.js: object replaced with null
Mutant 1235 in q.js: object replaced with undefined
Mutant 1236 in q.js: "apply" replaced with "call"
Mutant 1237 in q.js: "apply" replaced with "bind"
Mutant 1238 in q.js: "apply" replaced with "apply" + "bind"
Mutant 1239 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1240 in q.js: [void 0, args] replaced with [void 0, args.concat(args)]
Mutant 1241 in q.js: [void 0, args] replaced with [void 0, args.reverse()]
Mutant 1242 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1243 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [undefined, args])
Mutant 1244 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args])
Mutant 1245 in q.js: "apply" replaced with "call"
Mutant 1246 in q.js: "apply" replaced with "bind"
Mutant 1247 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1248 in q.js: [void 0, args] replaced with [void 0, args.concat(args)]
Mutant 1249 in q.js: [void 0, args] replaced with [void 0, args.reverse()]
Mutant 1250 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1251 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)])
Mutant 1252 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)])
Mutant 1253 in q.js: Q replaced with Q.reject
Mutant 1254 in q.js: Q replaced with Q.resolve
Mutant 1255 in q.js: Q replaced with Q.defer
Mutant 1256 in q.js: object replaced with null
Mutant 1257 in q.js: object replaced with undefined
Mutant 1258 in q.js: object replaced with {}
Mutant 1259 in q.js: "apply" replaced with "call"
Mutant 1260 in q.js: "apply" replaced with "bind"
Mutant 1261 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1262 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 0, 1)]
Mutant 1263 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, 2)]
Mutant 1264 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1265 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1266 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1267 in q.js: 1 replaced with 1 + 1
Mutant 1268 in q.js: 1 replaced with 2 * 2
Mutant 1269 in q.js: 1 replaced with 3 - 1
Mutant 1270 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1271 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1272 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 3)])
Mutant 1273 in q.js: "apply" replaced with "call"
Mutant 1274 in q.js: "apply" replaced with "bind"
Mutant 1275 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1276 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 0, -1)]
Mutant 1277 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1, -1)]
Mutant 1278 in q.js: object replaced with null
Mutant 1279 in q.js: object replaced with undefined
Mutant 1280 in q.js: object replaced with this
Mutant 1281 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1282 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1283 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, void 0)
Mutant 1284 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1285 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1286 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1287 in q.js: 1 replaced with 1 + 1
Mutant 1288 in q.js: 1 replaced with 2 * 2
Mutant 1289 in q.js: 1 replaced with 3 - 1
Mutant 1290 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1291 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1292 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1293 in q.js: arguments replaced with args.slice(1)
Mutant 1294 in q.js: arguments replaced with arguments.slice(1)
Mutant 1295 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1296 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1297 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1298 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1299 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1300 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1301 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("length", [])
Mutant 1302 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("toString", [])
Mutant 1303 in q.js: Q replaced with Q.reject
Mutant 1304 in q.js: Q replaced with Q.resolve
Mutant 1305 in q.js: Q replaced with Q.defer
Mutant 1306 in q.js: object replaced with object.keys()
Mutant 1307 in q.js: object replaced with object.values()
Mutant 1308 in q.js: object replaced with object.entries()
Mutant 1309 in q.js: "keys" replaced with "values"
Mutant 1310 in q.js: "keys" replaced with "length"
Mutant 1311 in q.js: "keys" replaced with "toString"
Mutant 1312 in q.js: [] replaced with [1]
Mutant 1313 in q.js: [] replaced with [2]
Mutant 1314 in q.js: [] replaced with [3]
Mutant 1315 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1316 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", [])
Mutant 1317 in q.js: this.dispatch("keys", []) replaced with this.dispatch("toString", [])
Mutant 1318 in q.js: "keys" replaced with "values"
Mutant 1319 in q.js: "keys" replaced with "entries"
Mutant 1320 in q.js: "keys" replaced with "length"
Mutant 1321 in q.js: [] replaced with [1]
Mutant 1322 in q.js: [] replaced with [2]
Mutant 1323 in q.js: [] replaced with [3]
Mutant 1324 in q.js: defer replaced with deferred
Mutant 1325 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1326 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1327 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "fulfilled" && promise.inspect().value === undefined
Mutant 1328 in q.js: promise.inspect replaced with promise.inspect.state
Mutant 1329 in q.js: promise.inspect replaced with promise.inspect.value
Mutant 1330 in q.js: promise.inspect replaced with promise.inspect.fulfilled
Mutant 1331 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1332 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1333 in q.js: --pendingCount === 0 replaced with pendingCount === 0 && promises.length === 0
Mutant 1334 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1335 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1336 in q.js: deferred.resolve replaced with undefined
Mutant 1337 in q.js: promises replaced with promises.slice(1)
Mutant 1338 in q.js: promises replaced with promises.concat([null])
Mutant 1339 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.state === "fulfilled";
})
Mutant 1340 in q.js: deferred.notify replaced with deferred.reject
Mutant 1341 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1342 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress + 1
}
Mutant 1343 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress - 1
}
Mutant 1344 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress * 2
}
Mutant 1345 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1346 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1347 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1348 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1349 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1350 in q.js: promises replaced with promises.slice(1)
Mutant 1351 in q.js: promises replaced with promises.concat(["extra value"])
Mutant 1352 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.inspect().state === "fulfilled";
})
Mutant 1353 in q.js: all replaced with any
Mutant 1354 in q.js: all replaced with allSettled
Mutant 1355 in q.js: all replaced with allResolved
Mutant 1356 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1357 in q.js: promises.length === 0 replaced with promises.length === 1
Mutant 1358 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1359 in q.js: Q.resolve replaced with Q.reject
Mutant 1360 in q.js: Q.resolve replaced with Q.defer
Mutant 1361 in q.js: Q.resolve replaced with Q.when
Mutant 1362 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1363 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled).catch(onRejected).progress(onProgress))
Mutant 1364 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected).progress(onProgress))
Mutant 1365 in q.js: promise replaced with promise.then(onFulfilled, onRejected)
Mutant 1366 in q.js: promise replaced with promise.then(onFulfilled).catch(onRejected)
Mutant 1367 in q.js: promise replaced with promise.then(onFulfilled, onRejected).catch(onRejected)
Mutant 1368 in q.js: onFulfilled replaced with onRejected
Mutant 1369 in q.js: onFulfilled replaced with onProgress
Mutant 1370 in q.js: onFulfilled replaced with undefined
Mutant 1371 in q.js: onRejected replaced with onFulfilled
Mutant 1372 in q.js: onRejected replaced with onProgress
Mutant 1373 in q.js: onProgress replaced with onRejected
Mutant 1374 in q.js: onProgress replaced with onFulfilled
Mutant 1375 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1376 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1377 in q.js: result replaced with promise
Mutant 1378 in q.js: result replaced with index
Mutant 1379 in q.js: result replaced with progress
Mutant 1380 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1381 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1382 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1383 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1384 in q.js: deferred.reject replaced with deferred.notify
Mutant 1385 in q.js: any replaced with all
Mutant 1386 in q.js: any replaced with anyResolved
Mutant 1387 in q.js: any replaced with allSettled
Mutant 1388 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allSettled", "allResolved")
Mutant 1389 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allSettled", "allSettled")
Mutant 1390 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "allSettled", "allResolved", "allSettled")
Mutant 1391 in q.js: allResolved replaced with allSettled
Mutant 1392 in q.js: allResolved replaced with any
Mutant 1393 in q.js: "allResolved" replaced with "allSettled"
Mutant 1394 in q.js: "allResolved" replaced with "any"
Mutant 1395 in q.js: "allResolved" replaced with "all"
Mutant 1396 in q.js: "allSettled" replaced with "allResolved"
Mutant 1397 in q.js: "allSettled" replaced with "allRejected"
Mutant 1398 in q.js: "allSettled" replaced with "allFulfilled"
Mutant 1399 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1400 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve)
Mutant 1401 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.all)
Mutant 1402 in q.js: array_map replaced with array_filter
Mutant 1403 in q.js: array_map replaced with array_reduce
Mutant 1404 in q.js: promises replaced with promises.slice(0)
Mutant 1405 in q.js: promises replaced with promises.concat([])
Mutant 1406 in q.js: promises replaced with promises.map(function (promise) {
  return promise;
})
Mutant 1407 in q.js: Q replaced with Q.reject
Mutant 1408 in q.js: Q replaced with Q.resolve
Mutant 1409 in q.js: Q replaced with Q.defer
Mutant 1410 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1411 in q.js: allResolved replaced with allSettled
Mutant 1412 in q.js: allResolved replaced with any
Mutant 1413 in q.js: this replaced with null
Mutant 1414 in q.js: this replaced with undefined
Mutant 1415 in q.js: this replaced with this.then(function () {})
Mutant 1416 in q.js: promises replaced with promises.reverse()
Mutant 1417 in q.js: promises replaced with promises.slice(1)
Mutant 1418 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.isFulfilled();
})
Mutant 1419 in q.js: regardless replaced with promise.inspect()
Mutant 1420 in q.js: regardless replaced with promise.then(noop, noop)
Mutant 1421 in q.js: regardless replaced with promise.then(function () {
  return promise.inspect();
})
Mutant 1422 in q.js: regardless replaced with regardless()
Mutant 1423 in q.js: regardless replaced with noop()
Mutant 1424 in q.js: regardless replaced with function () {}
Mutant 1425 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1426 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(undefined, rejected)
Mutant 1427 in q.js: Q replaced with Q.reject
Mutant 1428 in q.js: Q replaced with Q.resolve
Mutant 1429 in q.js: Q replaced with Q.defer
Mutant 1430 in q.js: object replaced with 0
Mutant 1431 in q.js: void 0 replaced with null
Mutant 1432 in q.js: void 0 replaced with undefined
Mutant 1433 in q.js: rejected replaced with resolved
Mutant 1434 in q.js: rejected replaced with deferred.reject(rejection)
Mutant 1435 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1436 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1437 in q.js: this.then(void 0, rejected) replaced with this.then(void 0, null)
Mutant 1438 in q.js: void 0 replaced with null
Mutant 1439 in q.js: void 0 replaced with undefined
Mutant 1440 in q.js: rejected replaced with rejected.then(void 0, noop)
Mutant 1441 in q.js: rejected replaced with rejected.then(noop, void 0)
Mutant 1442 in q.js: rejected replaced with rejected.then(void 0, function () {
  throw new Error("rejected");
})
Mutant 1443 in q.js: object replaced with null
Mutant 1444 in q.js: object replaced with undefined
Mutant 1445 in q.js: object replaced with 0
Mutant 1446 in q.js: void 0 replaced with null
Mutant 1447 in q.js: void 0 replaced with undefined
Mutant 1448 in q.js: void 0 replaced with null
Mutant 1449 in q.js: void 0 replaced with undefined
Mutant 1450 in q.js: void 0 replaced with void 1
Mutant 1451 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1452 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1453 in q.js: void 0 replaced with null
Mutant 1454 in q.js: void 0 replaced with undefined
Mutant 1455 in q.js: void 0 replaced with null
Mutant 1456 in q.js: void 0 replaced with undefined
Mutant 1457 in q.js: Q replaced with Q.reject
Mutant 1458 in q.js: Q replaced with Q.resolve
Mutant 1459 in q.js: Q replaced with Q.defer
Mutant 1460 in q.js: callback replaced with callback.fcall()
Mutant 1461 in q.js: callback replaced with callback.fcall(promise)
Mutant 1462 in q.js: callback replaced with callback.fcall(promise, value)
Mutant 1463 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply !== "function"
Mutant 1464 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply !== Function
Mutant 1465 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply !== function () {}
Mutant 1466 in q.js: Q replaced with Q.reject
Mutant 1467 in q.js: Q replaced with Q.resolve
Mutant 1468 in q.js: Q replaced with Q.defer
Mutant 1469 in q.js: callback replaced with callback.fcall()
Mutant 1470 in q.js: callback replaced with callback.fcall(null)
Mutant 1471 in q.js: callback replaced with callback.fcall(undefined)
Mutant 1472 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1473 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(progress, fulfilled, rejected)
Mutant 1474 in q.js: object replaced with null
Mutant 1475 in q.js: object replaced with undefined
Mutant 1476 in q.js: object replaced with 0
Mutant 1477 in q.js: fulfilled replaced with rejected
Mutant 1478 in q.js: fulfilled replaced with progressed
Mutant 1479 in q.js: fulfilled replaced with deferred
Mutant 1480 in q.js: rejected replaced with resolved
Mutant 1481 in q.js: rejected replaced with deferred
Mutant 1482 in q.js: progress replaced with null
Mutant 1483 in q.js: progress replaced with undefined
Mutant 1484 in q.js: progress replaced with void 0
Mutant 1485 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.then())
Mutant 1486 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.catch())
Mutant 1487 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, promise.finally())
Mutant 1488 in q.js: fulfilled replaced with rejected
Mutant 1489 in q.js: fulfilled replaced with fulfilled.then(function () {
  throw new Error("Intentional error");
})
Mutant 1490 in q.js: fulfilled replaced with fulfilled.then(function () {
  return Q.reject(new Error("Intentional error"));
})
Mutant 1491 in q.js: rejected replaced with Q.reject("rejected")
Mutant 1492 in q.js: progress replaced with progressed
Mutant 1493 in q.js: progress replaced with rejected
Mutant 1494 in q.js: progress replaced with fulfilled
Mutant 1495 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1496 in q.js: onUnhandledError replaced with onUnhandledError.bind(this)
Mutant 1497 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1498 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1499 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(void 0, onUnhandledError())
Mutant 1500 in q.js: void 0 replaced with null
Mutant 1501 in q.js: void 0 replaced with undefined
Mutant 1502 in q.js: void 0 replaced with void 1
Mutant 1503 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1504 in q.js: onUnhandledError replaced with onUnhandledError(null)
Mutant 1505 in q.js: onUnhandledError replaced with onUnhandledError(undefined)
Mutant 1506 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, new Error("Timed out after " + ms + " ms"))
Mutant 1507 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, "Timed out after " + ms + " ms")
Mutant 1508 in q.js: object replaced with null
Mutant 1509 in q.js: object replaced with undefined
Mutant 1510 in q.js: object replaced with void 0
Mutant 1511 in q.js: ms replaced with ms + 1
Mutant 1512 in q.js: ms replaced with ms * 2
Mutant 1513 in q.js: ms replaced with ms / 2
Mutant 1514 in q.js: error replaced with null
Mutant 1515 in q.js: error replaced with undefined
Mutant 1516 in q.js: error replaced with "Error"
Mutant 1517 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1518 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1519 in q.js: !error || "string" === typeof error replaced with error && "string" !== typeof error
Mutant 1520 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1521 in q.js: deferred.reject replaced with deferred.notify
Mutant 1522 in q.js: deferred.reject replaced with null
Mutant 1523 in q.js: error replaced with null
Mutant 1524 in q.js: error replaced with undefined
Mutant 1525 in q.js: error replaced with "error"
Mutant 1526 in q.js: clearTimeout replaced with clearInterval
Mutant 1527 in q.js: clearTimeout replaced with clearImmediate
Mutant 1528 in q.js: timeoutId replaced with null
Mutant 1529 in q.js: timeoutId replaced with undefined
Mutant 1530 in q.js: timeoutId replaced with 0
Mutant 1531 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1532 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1533 in q.js: deferred.resolve replaced with undefined
Mutant 1534 in q.js: value replaced with undefined
Mutant 1535 in q.js: value replaced with null
Mutant 1536 in q.js: value replaced with "value"
Mutant 1537 in q.js: clearTimeout replaced with clearInterval
Mutant 1538 in q.js: clearTimeout replaced with clearImmediate
Mutant 1539 in q.js: timeoutId replaced with null
Mutant 1540 in q.js: timeoutId replaced with undefined
Mutant 1541 in q.js: timeoutId replaced with 0
Mutant 1542 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1543 in q.js: deferred.reject replaced with deferred.notify
Mutant 1544 in q.js: deferred.reject replaced with null
Mutant 1545 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1546 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1547 in q.js: timeout === void 0 replaced with timeout === undefined
Mutant 1548 in q.js: object replaced with null
Mutant 1549 in q.js: object replaced with undefined
Mutant 1550 in q.js: object replaced with 0
Mutant 1551 in q.js: timeout replaced with timeout + 1
Mutant 1552 in q.js: timeout replaced with timeout - 1
Mutant 1553 in q.js: timeout replaced with timeout * 2
Mutant 1554 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1555 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1556 in q.js: deferred.resolve replaced with undefined
Mutant 1557 in q.js: value replaced with undefined
Mutant 1558 in q.js: value replaced with null
Mutant 1559 in q.js: value replaced with 0
Mutant 1560 in q.js: callback replaced with null
Mutant 1561 in q.js: callback replaced with undefined
Mutant 1562 in q.js: callback replaced with 0
Mutant 1563 in q.js: args replaced with null
Mutant 1564 in q.js: args replaced with undefined
Mutant 1565 in q.js: args replaced with []
Mutant 1566 in q.js: args replaced with args.slice(1)
Mutant 1567 in q.js: args replaced with args.concat([null])
Mutant 1568 in q.js: args replaced with args.filter(function (arg) {
  return arg !== undefined;
})
Mutant 1569 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1570 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1571 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1572 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1573 in q.js: this.fapply replaced with this.fail
Mutant 1574 in q.js: this.fapply replaced with this.reject
Mutant 1575 in q.js: this.fapply replaced with this.resolve
not replacing this.fapply with this.fail
not replacing this.fapply with this.fail
not replacing this.fapply with this.reject
not replacing this.fapply with this.reject
not replacing this.fapply with this.resolve
not replacing this.fapply with this.resolve
Mutant 1576 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1577 in q.js: nodeArgs replaced with nodeArgs.concat(deferred.makeNodeResolver())
Mutant 1578 in q.js: nodeArgs replaced with nodeArgs.map(function (arg) {
  return arg;
})
Mutant 1579 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1580 in q.js: deferred.reject replaced with deferred.notify
Mutant 1581 in q.js: deferred.reject replaced with null
Mutant 1582 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1583 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 3))
Mutant 1584 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 4))
Mutant 1585 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1586 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1587 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1588 in q.js: 1 replaced with 0
Mutant 1589 in q.js: 1 replaced with -1
Mutant 1590 in q.js: 1 replaced with NaN
Mutant 1591 in q.js: callback replaced with null
Mutant 1592 in q.js: callback replaced with undefined
Mutant 1593 in q.js: callback replaced with false
Mutant 1594 in q.js: args replaced with args.slice(1)
Mutant 1595 in q.js: args replaced with args.concat(["foo"])
Mutant 1596 in q.js: args replaced with args.filter(function (arg) {
  return arg !== "foo";
})
Mutant 1597 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1598 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1599 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1600 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1601 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1602 in q.js: nodeArgs.push replaced with nodeArgs.slice
Mutant 1603 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1604 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1605 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1606 in q.js: nodeArgs replaced with nodeArgs.slice(0, -1)
Mutant 1607 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1608 in q.js: nodeArgs replaced with nodeArgs.concat(["foo"])
Mutant 1609 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1610 in q.js: deferred.reject replaced with deferred.notify
Mutant 1611 in q.js: deferred.reject replaced with null
Mutant 1612 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1613 in q.js: callback === undefined replaced with callback !== null
Mutant 1614 in q.js: callback === undefined replaced with typeof callback === "function"
Mutant 1615 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1616 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1617 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1618 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1619 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1620 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1621 in q.js: 1 replaced with 0
Mutant 1622 in q.js: 1 replaced with 2
Mutant 1623 in q.js: 1 replaced with -1
Mutant 1624 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1625 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1626 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1627 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1628 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1629 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1630 in q.js: nodeArgs.push replaced with nodeArgs.slice
Mutant 1631 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1632 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1633 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1634 in q.js: Q replaced with Q.fapply
Mutant 1635 in q.js: Q replaced with Q.nfapply
Mutant 1636 in q.js: Q replaced with Q.denodeify
Mutant 1637 in q.js: callback replaced with undefined
Mutant 1638 in q.js: callback replaced with null
Mutant 1639 in q.js: callback replaced with function () {}
Mutant 1640 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1641 in q.js: nodeArgs replaced with nodeArgs.concat(deferred.makeNodeResolver())
Mutant 1642 in q.js: nodeArgs replaced with nodeArgs.filter(function (arg) {
  return arg !== deferred.makeNodeResolver();
})
Mutant 1643 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1644 in q.js: deferred.reject replaced with deferred.notify
Mutant 1645 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1646 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1647 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1648 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1649 in q.js: args.unshift replaced with args.push
Mutant 1650 in q.js: args.unshift replaced with args.shift
Mutant 1651 in q.js: args.unshift replaced with args.pop
Mutant 1652 in q.js: this replaced with null
Mutant 1653 in q.js: this replaced with undefined
Mutant 1654 in q.js: this replaced with this.constructor
Mutant 1655 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this)
Mutant 1656 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1657 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined)
Mutant 1658 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1659 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1660 in q.js: void 0 replaced with null
Mutant 1661 in q.js: void 0 replaced with undefined
Mutant 1662 in q.js: args replaced with args.slice(1)
Mutant 1663 in q.js: args replaced with args.concat(deferred.makeNodeResolver())
Mutant 1664 in q.js: args replaced with args.push(deferred.makeNodeResolver())
Mutant 1665 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1666 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1667 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1668 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1669 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1670 in q.js: arguments replaced with array_slice(arguments, 4)
Mutant 1671 in q.js: 2 replaced with 1
Mutant 1672 in q.js: 2 replaced with 3
Mutant 1673 in q.js: 2 replaced with 4
Mutant 1674 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1675 in q.js: baseArgs.concat replaced with baseArgs.unshift
Mutant 1676 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1677 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1678 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, arguments.length - 1)
Mutant 1679 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1, arguments.length - 1)
Mutant 1680 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1681 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1682 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1683 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1684 in q.js: nodeArgs.push replaced with nodeArgs.splice
Mutant 1685 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1686 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1687 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.promise)
Mutant 1688 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[0])
Mutant 1689 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[1])
Mutant 1690 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[2])
Mutant 1691 in q.js: callback.apply replaced with callback.call
Mutant 1692 in q.js: callback.apply replaced with callback.bind
Mutant 1693 in q.js: thisp replaced with null
Mutant 1694 in q.js: thisp replaced with undefined
Mutant 1695 in q.js: thisp replaced with this
Mutant 1696 in q.js: arguments replaced with nodeArgs
Mutant 1697 in q.js: arguments replaced with baseArgs
Mutant 1698 in q.js: arguments replaced with args
Mutant 1699 in q.js: bound replaced with undefined
Mutant 1700 in q.js: bound replaced with null
Mutant 1701 in q.js: bound replaced with function () {}
Mutant 1702 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1703 in q.js: nodeArgs replaced with nodeArgs.concat([1, 2, 3])
Mutant 1704 in q.js: nodeArgs replaced with nodeArgs.filter(function (arg) {
  return arg !== 1;
})
Mutant 1705 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1706 in q.js: deferred.reject replaced with null
Mutant 1707 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1708 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, -1)
Mutant 1709 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, "foo")
Mutant 1710 in q.js: arguments replaced with null
Mutant 1711 in q.js: arguments replaced with undefined
Mutant 1712 in q.js: arguments replaced with []
Mutant 1713 in q.js: 0 replaced with 1
Mutant 1714 in q.js: 0 replaced with -1
Mutant 1715 in q.js: 0 replaced with "hello"
Mutant 1716 in q.js: args.unshift replaced with args.push
Mutant 1717 in q.js: args.unshift replaced with args.concat
Mutant 1718 in q.js: args.unshift replaced with args.splice
Mutant 1719 in q.js: this replaced with null
Mutant 1720 in q.js: this replaced with undefined
Mutant 1721 in q.js: this replaced with this.constructor.prototype
Mutant 1722 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1723 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1724 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1725 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1726 in q.js: void 0 replaced with null
Mutant 1727 in q.js: void 0 replaced with undefined
Mutant 1728 in q.js: args replaced with args.slice(1)
Mutant 1729 in q.js: args replaced with args.concat(this)
Mutant 1730 in q.js: args replaced with args.reverse()
Mutant 1731 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1732 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat(args))
Mutant 1733 in q.js: object replaced with null
Mutant 1734 in q.js: object replaced with undefined
Mutant 1735 in q.js: object replaced with 0
Mutant 1736 in q.js: name replaced with name + "foo"
Mutant 1737 in q.js: name replaced with name.toUpperCase()
Mutant 1738 in q.js: name replaced with name.split("").reverse().join("")
Mutant 1739 in q.js: args replaced with args.slice(1)
Mutant 1740 in q.js: args replaced with args.concat(["new argument"])
Mutant 1741 in q.js: args replaced with args.filter(function (arg) {
  return arg !== "unwanted argument";
})
Mutant 1742 in q.js: args || [] replaced with args || [null]
Mutant 1743 in q.js: args || [] replaced with args || [undefined]
Mutant 1744 in q.js: args || [] replaced with args || [NaN]
Mutant 1745 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1746 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1747 in q.js: nodeArgs.push replaced with nodeArgs.slice
Mutant 1748 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1749 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1750 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1751 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()])
Mutant 1752 in q.js: "post" replaced with "get"
Mutant 1753 in q.js: "post" replaced with "put"
Mutant 1754 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1755 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1756 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "foo"]
Mutant 1757 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1758 in q.js: deferred.reject replaced with deferred.notify
Mutant 1759 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1760 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1761 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1762 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, "foo")
Mutant 1763 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1764 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1765 in q.js: arguments replaced with array_slice(arguments, 4)
Mutant 1766 in q.js: 2 replaced with 1
Mutant 1767 in q.js: 2 replaced with 3
Mutant 1768 in q.js: 2 replaced with 4
Mutant 1769 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1770 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1771 in q.js: nodeArgs.push replaced with nodeArgs.slice
Mutant 1772 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1773 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1774 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1775 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1776 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, null])
Mutant 1777 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, function () {}])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, null])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, function () {}])
Mutant 1778 in q.js: Q replaced with this
Mutant 1779 in q.js: object replaced with undefined
Mutant 1780 in q.js: object replaced with this
Mutant 1781 in q.js: "post" replaced with "pre"
Mutant 1782 in q.js: "post" replaced with "get"
Mutant 1783 in q.js: "post" replaced with "put"
Mutant 1784 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1785 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1786 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "foo"]
Mutant 1787 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1788 in q.js: deferred.reject replaced with deferred.notify
Mutant 1789 in q.js: deferred.reject replaced with null
Mutant 1790 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1791 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1792 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, "foo")
Mutant 1793 in q.js: arguments replaced with null
Mutant 1794 in q.js: arguments replaced with undefined
Mutant 1795 in q.js: arguments replaced with []
Mutant 1796 in q.js: 1 replaced with 0
Mutant 1797 in q.js: 1 replaced with -1
Mutant 1798 in q.js: 1 replaced with 2
Mutant 1799 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1800 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1801 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1802 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1803 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().call(null)
Mutant 1804 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().apply(null)
Mutant 1805 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()])
Mutant 1806 in q.js: "post" replaced with "send"
Mutant 1807 in q.js: "post" replaced with "dispatch"
Mutant 1808 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1809 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1810 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, "foo"]
Mutant 1811 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1812 in q.js: deferred.reject replaced with deferred.notify
Mutant 1813 in q.js: deferred.reject replaced with null
Mutant 1814 in q.js: Q replaced with Q.reject
Mutant 1815 in q.js: Q replaced with Q.resolve
Mutant 1816 in q.js: Q replaced with Q.defer
Mutant 1817 in q.js: object replaced with null
Mutant 1818 in q.js: object replaced with undefined
Mutant 1819 in q.js: object replaced with 0
Mutant 1820 in q.js: nodeback replaced with nodeback(error, value)
Mutant 1821 in q.js: nodeback replaced with nodeback(value, error)
Mutant 1822 in q.js: nodeback replaced with nodeback(null, value)
Mutant 1823 in q.js: nodeback replaced with !nodeback
Mutant 1824 in q.js: nodeback replaced with nodeback + 1
Mutant 1825 in q.js: nodeback replaced with nodeback * 2
Mutant 1826 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1827 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 1828 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 1829 in q.js: null replaced with undefined
Mutant 1830 in q.js: null replaced with false
Mutant 1831 in q.js: null replaced with 0
Mutant 1832 in q.js: value replaced with null
Mutant 1833 in q.js: value replaced with undefined
Mutant 1834 in q.js: value replaced with 0
Mutant 1835 in q.js: error replaced with null
Mutant 1836 in q.js: error replaced with undefined
Mutant 1837 in q.js: error replaced with "error"
Mutant 1838 in q.js: captureLine replaced with captureLine + 1
Mutant 1839 in q.js: captureLine replaced with captureLine - 1
Mutant 1840 in q.js: captureLine replaced with captureLine * 2
Mutant 1841 in queue.js: "head" replaced with "tail"
Mutant 1842 in queue.js: "head" replaced with "head" + "tail"
Mutant 1843 in queue.js: "head" replaced with "head" + "tail" + "head"
Mutant 1844 in queue.js: "tail" replaced with "head"
Mutant 1845 in queue.js: "tail" replaced with "tail" + "1"
Mutant 1846 in queue.js: "tail" replaced with "tail" - 1
Mutant 1847 in queue.js: closed.resolve replaced with closed.reject
Mutant 1848 in queue.js: error replaced with null
Mutant 1849 in queue.js: error replaced with undefined
Mutant 1850 in queue.js: error replaced with new Error("Different error message")
Mutant 1851 in queue.js: Q.reject replaced with Q.resolve
Mutant 1852 in queue.js: error replaced with null
Mutant 1853 in queue.js: error replaced with undefined
Mutant 1854 in queue.js: error replaced with "error"
Mutant 1855 in queue.js: ends.resolve replaced with ends.reject
[32m11:17:39 (3079) INFO Instrumenter[39m Instrumented 2 source file(s) with 1856 mutant(s)
[32m11:17:39 (3079) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m11:17:41 (3079) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m11:17:41 (3079) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m11:17:48 (3079) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6862 ms, overhead 0 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 42m) 3/1856 tested (0 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 3m) 5/1856 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 34m) 6/1856 tested (3 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 34m) 8/1856 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 51m) 9/1856 tested (6 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 47m) 11/1856 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 59m) 12/1856 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 33m) 16/1856 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 33m) 18/1856 tested (12 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 41m) 19/1856 tested (13 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 40m) 21/1856 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 46m) 22/1856 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 45m) 24/1856 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 50m) 25/1856 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 49m) 27/1856 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 54m) 28/1856 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 58m) 29/1856 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 45m) 33/1856 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 49m) 34/1856 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 53m) 35/1856 tested (25 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 2m) 35/1856 tested (25 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 5m) 36/1856 tested (25 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 8m) 37/1856 tested (25 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 11m) 38/1856 tested (26 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 14m) 39/1856 tested (26 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 21m) 39/1856 tested (26 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 24m) 40/1856 tested (26 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 21m) 42/1856 tested (28 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 23m) 43/1856 tested (29 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 12m) 47/1856 tested (30 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 10m) 49/1856 tested (32 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 8m) 51/1856 tested (33 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 10m) 52/1856 tested (34 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 9m) 54/1856 tested (36 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 14m) 54/1856 tested (36 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 12m) 56/1856 tested (37 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 18m) 56/1856 tested (37 survived, 6 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 19m) 57/1856 tested (37 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 21m) 58/1856 tested (37 survived, 8 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 6m) 64/1856 tested (37 survived, 8 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 8m) 65/1856 tested (38 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 6m) 67/1856 tested (40 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 8m) 68/1856 tested (41 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 7m) 70/1856 tested (43 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 8m) 71/1856 tested (44 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 7m) 73/1856 tested (46 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 8m) 74/1856 tested (47 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 7m) 76/1856 tested (49 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 8m) 77/1856 tested (50 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 7m) 79/1856 tested (52 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 8m) 80/1856 tested (53 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 9m) 81/1856 tested (54 survived, 8 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 11m) 82/1856 tested (55 survived, 8 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 12m) 83/1856 tested (55 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 13m) 84/1856 tested (56 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 14m) 85/1856 tested (56 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 15m) 86/1856 tested (57 survived, 10 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 16m) 87/1856 tested (57 survived, 11 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 19m) 87/1856 tested (57 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 13m) 91/1856 tested (57 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 14m) 92/1856 tested (58 survived, 12 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 13m) 94/1856 tested (60 survived, 12 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 14m) 95/1856 tested (61 survived, 12 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 13m) 97/1856 tested (63 survived, 12 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 14m) 98/1856 tested (64 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 15m) 99/1856 tested (65 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 14m) 101/1856 tested (67 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 14m) 102/1856 tested (68 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 13m) 104/1856 tested (70 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 14m) 105/1856 tested (71 survived, 12 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 13m) 107/1856 tested (73 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 14m) 108/1856 tested (74 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 13m) 110/1856 tested (76 survived, 12 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 13m) 111/1856 tested (77 survived, 12 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~3h 12m) 113/1856 tested (79 survived, 12 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~3h 13m) 114/1856 tested (80 survived, 12 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~3h 12m) 116/1856 tested (82 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 13m) 117/1856 tested (83 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 13m) 118/1856 tested (84 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 12m) 120/1856 tested (86 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 13m) 121/1856 tested (87 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 12m) 123/1856 tested (89 survived, 12 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 13m) 124/1856 tested (90 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 12m) 126/1856 tested (92 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 12m) 127/1856 tested (93 survived, 12 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 11m) 129/1856 tested (95 survived, 12 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 12m) 130/1856 tested (96 survived, 12 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 10m) 133/1856 tested (98 survived, 12 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 7m) 136/1856 tested (99 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 3m) 140/1856 tested (100 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 5m) 140/1856 tested (100 survived, 12 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 6m) 141/1856 tested (100 survived, 13 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 7m) 142/1856 tested (100 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 9m) 142/1856 tested (100 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 4m) 147/1856 tested (100 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 59m) 152/1856 tested (100 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 58m) 154/1856 tested (102 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 59m) 155/1856 tested (103 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 58m) 157/1856 tested (105 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 59m) 158/1856 tested (106 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 59m) 159/1856 tested (107 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 58m) 161/1856 tested (109 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 59m) 162/1856 tested (110 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 58m) 164/1856 tested (112 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 59m) 165/1856 tested (113 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 58m) 167/1856 tested (115 survived, 15 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 59m) 168/1856 tested (116 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 58m) 170/1856 tested (118 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 59m) 171/1856 tested (119 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 58m) 173/1856 tested (121 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 58m) 174/1856 tested (122 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 58m) 176/1856 tested (124 survived, 15 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 58m) 177/1856 tested (125 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 59m) 178/1856 tested (126 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 58m) 180/1856 tested (128 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 58m) 181/1856 tested (129 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 58m) 183/1856 tested (131 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 58m) 184/1856 tested (132 survived, 15 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 58m) 186/1856 tested (134 survived, 15 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 58m) 187/1856 tested (135 survived, 15 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 57m) 189/1856 tested (137 survived, 15 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 58m) 190/1856 tested (138 survived, 15 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 57m) 192/1856 tested (140 survived, 15 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 58m) 193/1856 tested (141 survived, 15 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 57m) 195/1856 tested (143 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 57m) 196/1856 tested (144 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 58m) 197/1856 tested (145 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 57m) 199/1856 tested (147 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 58m) 200/1856 tested (148 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 57m) 202/1856 tested (150 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 57m) 203/1856 tested (151 survived, 15 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 57m) 205/1856 tested (153 survived, 15 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 57m) 206/1856 tested (154 survived, 15 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 56m) 208/1856 tested (156 survived, 15 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 57m) 209/1856 tested (157 survived, 15 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 56m) 211/1856 tested (159 survived, 15 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 57m) 212/1856 tested (160 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 56m) 214/1856 tested (162 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 56m) 215/1856 tested (163 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 56m) 217/1856 tested (165 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 56m) 218/1856 tested (166 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 56m) 219/1856 tested (167 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 56m) 221/1856 tested (169 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~2h 56m) 222/1856 tested (170 survived, 15 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 56m) 224/1856 tested (172 survived, 15 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 56m) 225/1856 tested (173 survived, 15 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 55m) 227/1856 tested (175 survived, 15 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 53m) 231/1856 tested (176 survived, 15 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 53m) 232/1856 tested (176 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 54m) 233/1856 tested (176 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 53m) 235/1856 tested (177 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 53m) 236/1856 tested (178 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 53m) 238/1856 tested (180 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 53m) 239/1856 tested (181 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 53m) 241/1856 tested (183 survived, 15 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 53m) 242/1856 tested (184 survived, 15 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 52m) 244/1856 tested (186 survived, 15 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 53m) 245/1856 tested (187 survived, 15 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 52m) 247/1856 tested (189 survived, 15 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 52m) 248/1856 tested (190 survived, 15 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 52m) 250/1856 tested (192 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 251/1856 tested (193 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 253/1856 tested (195 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 254/1856 tested (196 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 255/1856 tested (197 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 257/1856 tested (199 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 258/1856 tested (200 survived, 15 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 260/1856 tested (202 survived, 15 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 52m) 261/1856 tested (203 survived, 15 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 263/1856 tested (205 survived, 15 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 264/1856 tested (206 survived, 15 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 266/1856 tested (208 survived, 15 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 267/1856 tested (209 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 51m) 269/1856 tested (211 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 51m) 270/1856 tested (212 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 50m) 272/1856 tested (214 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 51m) 273/1856 tested (215 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 50m) 275/1856 tested (217 survived, 15 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 50m) 276/1856 tested (218 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 50m) 278/1856 tested (220 survived, 15 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 50m) 279/1856 tested (221 survived, 15 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 50m) 280/1856 tested (222 survived, 15 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 50m) 282/1856 tested (224 survived, 15 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 50m) 283/1856 tested (225 survived, 15 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 49m) 285/1856 tested (227 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 50m) 286/1856 tested (228 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 288/1856 tested (230 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 289/1856 tested (231 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 291/1856 tested (233 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 292/1856 tested (234 survived, 15 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 294/1856 tested (236 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 49m) 295/1856 tested (237 survived, 15 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 48m) 297/1856 tested (239 survived, 15 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 49m) 298/1856 tested (240 survived, 15 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 48m) 300/1856 tested (242 survived, 15 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 48m) 301/1856 tested (243 survived, 15 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 48m) 303/1856 tested (245 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 48m) 304/1856 tested (246 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 48m) 305/1856 tested (247 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 48m) 307/1856 tested (249 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 48m) 308/1856 tested (250 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 47m) 310/1856 tested (252 survived, 15 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 48m) 311/1856 tested (253 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 47m) 313/1856 tested (255 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 47m) 314/1856 tested (256 survived, 15 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 47m) 316/1856 tested (258 survived, 15 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 44m) 321/1856 tested (259 survived, 15 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 45m) 322/1856 tested (260 survived, 15 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 44m) 324/1856 tested (262 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 44m) 325/1856 tested (263 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 44m) 327/1856 tested (265 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 44m) 328/1856 tested (266 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 44m) 329/1856 tested (267 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 44m) 331/1856 tested (269 survived, 15 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 44m) 332/1856 tested (270 survived, 15 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 42m) 336/1856 tested (271 survived, 15 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 42m) 338/1856 tested (273 survived, 15 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 42m) 339/1856 tested (274 survived, 15 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 42m) 341/1856 tested (276 survived, 15 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 42m) 342/1856 tested (277 survived, 15 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 41m) 344/1856 tested (279 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 42m) 345/1856 tested (280 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 41m) 347/1856 tested (282 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 41m) 348/1856 tested (283 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 41m) 350/1856 tested (285 survived, 15 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 41m) 351/1856 tested (286 survived, 15 timed out)
Mutation testing 19% (elapsed: ~37m, remaining: ~2h 41m) 353/1856 tested (288 survived, 15 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 41m) 354/1856 tested (289 survived, 15 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 40m) 356/1856 tested (291 survived, 15 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 40m) 357/1856 tested (292 survived, 15 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 40m) 359/1856 tested (294 survived, 15 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 40m) 360/1856 tested (295 survived, 15 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 40m) 361/1856 tested (296 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 40m) 363/1856 tested (298 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 40m) 364/1856 tested (299 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 40m) 366/1856 tested (301 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 39m) 369/1856 tested (302 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 38m) 371/1856 tested (304 survived, 15 timed out)
Mutation testing 20% (elapsed: ~39m, remaining: ~2h 38m) 372/1856 tested (305 survived, 15 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 39m) 373/1856 tested (306 survived, 15 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 38m) 375/1856 tested (308 survived, 15 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 38m) 376/1856 tested (309 survived, 15 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 38m) 378/1856 tested (311 survived, 15 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 38m) 379/1856 tested (312 survived, 15 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 38m) 381/1856 tested (314 survived, 15 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 382/1856 tested (315 survived, 15 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 37m) 385/1856 tested (316 survived, 15 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 34m) 392/1856 tested (317 survived, 15 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 34m) 393/1856 tested (317 survived, 15 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 34m) 394/1856 tested (317 survived, 15 timed out)
Mutation testing 21% (elapsed: ~41m, remaining: ~2h 34m) 395/1856 tested (317 survived, 15 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 34m) 396/1856 tested (317 survived, 16 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 35m) 396/1856 tested (317 survived, 16 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 35m) 397/1856 tested (317 survived, 17 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 35m) 398/1856 tested (317 survived, 18 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 36m) 398/1856 tested (317 survived, 18 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 33m) 405/1856 tested (317 survived, 19 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 33m) 407/1856 tested (317 survived, 19 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 32m) 410/1856 tested (317 survived, 20 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 32m) 411/1856 tested (317 survived, 20 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 31m) 413/1856 tested (317 survived, 21 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 32m) 413/1856 tested (317 survived, 21 timed out)
Mutation testing 22% (elapsed: ~43m, remaining: ~2h 32m) 415/1856 tested (318 survived, 22 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 32m) 416/1856 tested (319 survived, 22 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 31m) 418/1856 tested (321 survived, 22 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 32m) 419/1856 tested (322 survived, 22 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 32m) 420/1856 tested (323 survived, 22 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 31m) 422/1856 tested (325 survived, 22 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 31m) 424/1856 tested (326 survived, 22 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 31m) 424/1856 tested (326 survived, 22 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 31m) 426/1856 tested (327 survived, 23 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 31m) 427/1856 tested (328 survived, 23 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 31m) 428/1856 tested (329 survived, 23 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 31m) 430/1856 tested (329 survived, 24 timed out)
Mutation testing 23% (elapsed: ~45m, remaining: ~2h 31m) 430/1856 tested (329 survived, 24 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 32m) 431/1856 tested (329 survived, 25 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 31m) 433/1856 tested (331 survived, 25 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 31m) 434/1856 tested (332 survived, 25 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 31m) 436/1856 tested (334 survived, 25 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 31m) 437/1856 tested (335 survived, 25 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 31m) 439/1856 tested (337 survived, 25 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 31m) 440/1856 tested (338 survived, 25 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 30m) 442/1856 tested (340 survived, 25 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 30m) 443/1856 tested (341 survived, 25 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 30m) 445/1856 tested (343 survived, 25 timed out)
Mutation testing 24% (elapsed: ~47m, remaining: ~2h 30m) 446/1856 tested (344 survived, 25 timed out)
Mutation testing 24% (elapsed: ~47m, remaining: ~2h 30m) 448/1856 tested (346 survived, 25 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 30m) 449/1856 tested (347 survived, 25 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 30m) 451/1856 tested (349 survived, 25 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 30m) 452/1856 tested (350 survived, 25 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 29m) 454/1856 tested (352 survived, 25 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 29m) 455/1856 tested (353 survived, 25 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 29m) 456/1856 tested (354 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 29m) 458/1856 tested (356 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 29m) 459/1856 tested (357 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 29m) 461/1856 tested (359 survived, 25 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 29m) 462/1856 tested (360 survived, 25 timed out)
Mutation testing 25% (elapsed: ~49m, remaining: ~2h 29m) 464/1856 tested (362 survived, 25 timed out)
Mutation testing 25% (elapsed: ~49m, remaining: ~2h 29m) 464/1856 tested (362 survived, 25 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 29m) 466/1856 tested (362 survived, 26 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 29m) 467/1856 tested (362 survived, 27 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 29m) 468/1856 tested (362 survived, 27 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 29m) 469/1856 tested (362 survived, 28 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 28m) 471/1856 tested (364 survived, 28 timed out)
Mutation testing 25% (elapsed: ~50m, remaining: ~2h 28m) 473/1856 tested (365 survived, 28 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 27m) 476/1856 tested (366 survived, 28 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 28m) 476/1856 tested (366 survived, 28 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 27m) 478/1856 tested (366 survived, 29 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 28m) 478/1856 tested (366 survived, 29 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 28m) 480/1856 tested (367 survived, 30 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 28m) 481/1856 tested (367 survived, 30 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 28m) 482/1856 tested (367 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 28m) 482/1856 tested (367 survived, 31 timed out)
Mutation testing 26% (elapsed: ~52m, remaining: ~2h 28m) 483/1856 tested (367 survived, 32 timed out)
Mutation testing 26% (elapsed: ~52m, remaining: ~2h 28m) 484/1856 tested (367 survived, 33 timed out)
Mutation testing 26% (elapsed: ~52m, remaining: ~2h 28m) 486/1856 tested (369 survived, 33 timed out)
Mutation testing 26% (elapsed: ~52m, remaining: ~2h 28m) 487/1856 tested (370 survived, 33 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 28m) 488/1856 tested (371 survived, 33 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 28m) 490/1856 tested (373 survived, 33 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 28m) 491/1856 tested (374 survived, 33 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 27m) 493/1856 tested (376 survived, 33 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 27m) 495/1856 tested (377 survived, 33 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 27m) 496/1856 tested (377 survived, 33 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 27m) 497/1856 tested (377 survived, 33 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 27m) 498/1856 tested (377 survived, 33 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 27m) 499/1856 tested (377 survived, 33 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 27m) 500/1856 tested (377 survived, 33 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 27m) 501/1856 tested (377 survived, 33 timed out)
Mutation testing 27% (elapsed: ~54m, remaining: ~2h 27m) 502/1856 tested (377 survived, 33 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 27m) 503/1856 tested (378 survived, 33 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 27m) 504/1856 tested (379 survived, 33 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 27m) 506/1856 tested (381 survived, 33 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 27m) 507/1856 tested (382 survived, 33 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 27m) 509/1856 tested (384 survived, 33 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 27m) 510/1856 tested (385 survived, 33 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 27m) 512/1856 tested (387 survived, 33 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 27m) 513/1856 tested (388 survived, 33 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 26m) 515/1856 tested (390 survived, 33 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 26m) 516/1856 tested (391 survived, 33 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 26m) 518/1856 tested (393 survived, 33 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 26m) 519/1856 tested (394 survived, 33 timed out)
Mutation testing 28% (elapsed: ~57m, remaining: ~2h 26m) 521/1856 tested (396 survived, 33 timed out)
Mutation testing 28% (elapsed: ~57m, remaining: ~2h 26m) 522/1856 tested (397 survived, 33 timed out)
Mutation testing 28% (elapsed: ~57m, remaining: ~2h 25m) 524/1856 tested (399 survived, 33 timed out)
Mutation testing 28% (elapsed: ~57m, remaining: ~2h 25m) 525/1856 tested (400 survived, 33 timed out)
Mutation testing 28% (elapsed: ~57m, remaining: ~2h 25m) 527/1856 tested (402 survived, 33 timed out)
Mutation testing 28% (elapsed: ~57m, remaining: ~2h 25m) 528/1856 tested (403 survived, 33 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 25m) 529/1856 tested (404 survived, 33 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 25m) 531/1856 tested (406 survived, 33 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 25m) 532/1856 tested (407 survived, 33 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 24m) 534/1856 tested (409 survived, 33 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 24m) 535/1856 tested (410 survived, 33 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 24m) 537/1856 tested (412 survived, 33 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 24m) 538/1856 tested (413 survived, 33 timed out)
Mutation testing 29% (elapsed: ~59m, remaining: ~2h 24m) 540/1856 tested (415 survived, 33 timed out)
Mutation testing 29% (elapsed: ~59m, remaining: ~2h 24m) 541/1856 tested (416 survived, 33 timed out)
Mutation testing 29% (elapsed: ~59m, remaining: ~2h 23m) 543/1856 tested (418 survived, 33 timed out)
Mutation testing 29% (elapsed: ~59m, remaining: ~2h 23m) 544/1856 tested (419 survived, 33 timed out)
Mutation testing 29% (elapsed: ~59m, remaining: ~2h 23m) 546/1856 tested (421 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 23m) 547/1856 tested (422 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 23m) 549/1856 tested (424 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 23m) 550/1856 tested (425 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 22m) 552/1856 tested (427 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 22m) 553/1856 tested (428 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 22m) 555/1856 tested (430 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 22m) 556/1856 tested (431 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 22m) 557/1856 tested (432 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 22m) 559/1856 tested (434 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 22m) 560/1856 tested (435 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 21m) 562/1856 tested (437 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 1m, remaining: ~2h 22m) 563/1856 tested (438 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 21m) 565/1856 tested (440 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 21m) 566/1856 tested (441 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 21m) 568/1856 tested (443 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 21m) 569/1856 tested (444 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 21m) 571/1856 tested (446 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 21m) 572/1856 tested (447 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 20m) 574/1856 tested (449 survived, 33 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 20m) 575/1856 tested (450 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 20m) 577/1856 tested (452 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 20m) 578/1856 tested (453 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 20m) 580/1856 tested (455 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 3m, remaining: ~2h 20m) 581/1856 tested (456 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 4m, remaining: ~2h 20m) 582/1856 tested (457 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 4m, remaining: ~2h 19m) 584/1856 tested (459 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 4m, remaining: ~2h 19m) 585/1856 tested (460 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 4m, remaining: ~2h 19m) 587/1856 tested (462 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 4m, remaining: ~2h 19m) 588/1856 tested (463 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 4m, remaining: ~2h 19m) 590/1856 tested (465 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 19m) 591/1856 tested (466 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 18m) 593/1856 tested (468 survived, 33 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 18m) 595/1856 tested (469 survived, 33 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 18m) 595/1856 tested (469 survived, 33 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 18m) 596/1856 tested (469 survived, 34 timed out)
Mutation testing 32% (elapsed: ~1h 5m, remaining: ~2h 18m) 597/1856 tested (469 survived, 34 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 19m) 597/1856 tested (469 survived, 34 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 18m) 599/1856 tested (470 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 19m) 599/1856 tested (470 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 19m) 600/1856 tested (470 survived, 36 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 19m) 601/1856 tested (470 survived, 37 timed out)
Mutation testing 32% (elapsed: ~1h 6m, remaining: ~2h 19m) 601/1856 tested (470 survived, 37 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 19m) 602/1856 tested (470 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 19m) 602/1856 tested (470 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 19m) 603/1856 tested (470 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 19m) 604/1856 tested (470 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 19m) 606/1856 tested (472 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 7m, remaining: ~2h 19m) 607/1856 tested (473 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 19m) 607/1856 tested (473 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 19m) 609/1856 tested (474 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 19m) 609/1856 tested (474 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 19m) 610/1856 tested (474 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 19m) 612/1856 tested (476 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 8m, remaining: ~2h 19m) 613/1856 tested (477 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 19m) 615/1856 tested (479 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 19m) 616/1856 tested (480 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 618/1856 tested (482 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 619/1856 tested (483 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 622/1856 tested (484 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 9m, remaining: ~2h 18m) 623/1856 tested (484 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 623/1856 tested (484 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 624/1856 tested (484 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 625/1856 tested (484 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 625/1856 tested (484 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 626/1856 tested (484 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 10m, remaining: ~2h 18m) 628/1856 tested (486 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 11m, remaining: ~2h 18m) 629/1856 tested (487 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 11m, remaining: ~2h 18m) 631/1856 tested (489 survived, 46 timed out)
Mutation testing 34% (elapsed: ~1h 11m, remaining: ~2h 18m) 632/1856 tested (490 survived, 46 timed out)
Mutation testing 34% (elapsed: ~1h 11m, remaining: ~2h 17m) 634/1856 tested (492 survived, 46 timed out)
Mutation testing 34% (elapsed: ~1h 11m, remaining: ~2h 18m) 634/1856 tested (492 survived, 46 timed out)
Mutation testing 34% (elapsed: ~1h 11m, remaining: ~2h 18m) 635/1856 tested (492 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 18m) 635/1856 tested (492 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 18m) 636/1856 tested (492 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 18m) 637/1856 tested (492 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 18m) 637/1856 tested (492 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 18m) 639/1856 tested (492 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 12m, remaining: ~2h 18m) 640/1856 tested (492 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 18m) 641/1856 tested (492 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 18m) 642/1856 tested (492 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 18m) 643/1856 tested (492 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 18m) 644/1856 tested (492 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 18m) 645/1856 tested (493 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 13m, remaining: ~2h 17m) 647/1856 tested (495 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 14m, remaining: ~2h 17m) 648/1856 tested (496 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 14m, remaining: ~2h 17m) 649/1856 tested (496 survived, 50 timed out)
Mutation testing 35% (elapsed: ~1h 14m, remaining: ~2h 17m) 650/1856 tested (496 survived, 50 timed out)
Mutation testing 35% (elapsed: ~1h 14m, remaining: ~2h 17m) 652/1856 tested (497 survived, 50 timed out)
Mutation testing 35% (elapsed: ~1h 14m, remaining: ~2h 17m) 653/1856 tested (498 survived, 50 timed out)
Mutation testing 35% (elapsed: ~1h 14m, remaining: ~2h 17m) 654/1856 tested (499 survived, 50 timed out)
Mutation testing 35% (elapsed: ~1h 15m, remaining: ~2h 17m) 655/1856 tested (499 survived, 51 timed out)
Mutation testing 35% (elapsed: ~1h 15m, remaining: ~2h 17m) 655/1856 tested (499 survived, 51 timed out)
Mutation testing 35% (elapsed: ~1h 15m, remaining: ~2h 17m) 656/1856 tested (499 survived, 52 timed out)
Mutation testing 35% (elapsed: ~1h 15m, remaining: ~2h 17m) 657/1856 tested (499 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 15m, remaining: ~2h 18m) 657/1856 tested (499 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 15m, remaining: ~2h 18m) 658/1856 tested (499 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 18m) 659/1856 tested (499 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 18m) 660/1856 tested (499 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 18m) 661/1856 tested (499 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 17m) 662/1856 tested (500 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 17m) 664/1856 tested (502 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 16m, remaining: ~2h 17m) 664/1856 tested (502 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 17m, remaining: ~2h 17m) 665/1856 tested (502 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 17m, remaining: ~2h 17m) 667/1856 tested (504 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 17m, remaining: ~2h 17m) 667/1856 tested (504 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 17m, remaining: ~2h 17m) 668/1856 tested (504 survived, 55 timed out)
Mutation testing 36% (elapsed: ~1h 17m, remaining: ~2h 17m) 669/1856 tested (504 survived, 56 timed out)
Mutation testing 36% (elapsed: ~1h 17m, remaining: ~2h 18m) 669/1856 tested (504 survived, 56 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 18m) 670/1856 tested (504 survived, 57 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 18m) 671/1856 tested (504 survived, 58 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 18m) 671/1856 tested (504 survived, 58 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 18m) 672/1856 tested (504 survived, 59 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 18m) 673/1856 tested (504 survived, 60 timed out)
Mutation testing 36% (elapsed: ~1h 18m, remaining: ~2h 18m) 673/1856 tested (504 survived, 60 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 18m) 674/1856 tested (504 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 18m) 675/1856 tested (504 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 18m) 676/1856 tested (505 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 18m) 677/1856 tested (506 survived, 62 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 18m) 678/1856 tested (506 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 19m, remaining: ~2h 18m) 678/1856 tested (506 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 20m, remaining: ~2h 18m) 679/1856 tested (506 survived, 64 timed out)
Mutation testing 36% (elapsed: ~1h 20m, remaining: ~2h 18m) 680/1856 tested (506 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 20m, remaining: ~2h 18m) 680/1856 tested (506 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 20m, remaining: ~2h 18m) 681/1856 tested (506 survived, 66 timed out)
Mutation testing 36% (elapsed: ~1h 20m, remaining: ~2h 18m) 682/1856 tested (506 survived, 67 timed out)
Mutation testing 36% (elapsed: ~1h 20m, remaining: ~2h 19m) 682/1856 tested (506 survived, 67 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 19m) 683/1856 tested (506 survived, 68 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 19m) 683/1856 tested (506 survived, 68 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 19m) 684/1856 tested (506 survived, 69 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 19m) 685/1856 tested (506 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 19m) 685/1856 tested (506 survived, 70 timed out)
Mutation testing 37% (elapsed: ~1h 21m, remaining: ~2h 19m) 687/1856 tested (507 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 22m, remaining: ~2h 19m) 688/1856 tested (508 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 22m, remaining: ~2h 18m) 690/1856 tested (510 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 22m, remaining: ~2h 18m) 691/1856 tested (511 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 22m, remaining: ~2h 18m) 693/1856 tested (513 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 22m, remaining: ~2h 18m) 694/1856 tested (514 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 22m, remaining: ~2h 18m) 696/1856 tested (516 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 18m) 697/1856 tested (517 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 17m) 699/1856 tested (519 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 17m) 700/1856 tested (520 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 17m) 701/1856 tested (521 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 17m) 703/1856 tested (523 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 17m) 704/1856 tested (524 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 24m, remaining: ~2h 16m) 706/1856 tested (526 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 24m, remaining: ~2h 16m) 707/1856 tested (527 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 24m, remaining: ~2h 16m) 709/1856 tested (529 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 24m, remaining: ~2h 16m) 710/1856 tested (530 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 24m, remaining: ~2h 16m) 712/1856 tested (532 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 24m, remaining: ~2h 15m) 713/1856 tested (533 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 15m) 715/1856 tested (535 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 15m) 716/1856 tested (536 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 15m) 718/1856 tested (538 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 15m) 719/1856 tested (539 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 14m) 721/1856 tested (541 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 14m) 722/1856 tested (542 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 26m, remaining: ~2h 14m) 724/1856 tested (544 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 26m, remaining: ~2h 14m) 725/1856 tested (545 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 26m, remaining: ~2h 14m) 726/1856 tested (546 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 26m, remaining: ~2h 14m) 728/1856 tested (548 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 26m, remaining: ~2h 13m) 729/1856 tested (549 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 26m, remaining: ~2h 13m) 731/1856 tested (551 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 13m) 732/1856 tested (552 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 13m) 734/1856 tested (554 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 13m) 735/1856 tested (555 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 12m) 737/1856 tested (557 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 12m) 738/1856 tested (558 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 12m) 740/1856 tested (560 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 12m) 741/1856 tested (561 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 28m, remaining: ~2h 12m) 743/1856 tested (563 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 28m, remaining: ~2h 12m) 744/1856 tested (564 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 28m, remaining: ~2h 11m) 746/1856 tested (566 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 28m, remaining: ~2h 11m) 747/1856 tested (567 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 28m, remaining: ~2h 11m) 749/1856 tested (569 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 11m) 750/1856 tested (570 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 10m) 752/1856 tested (572 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 10m) 753/1856 tested (573 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 10m) 754/1856 tested (574 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 10m) 756/1856 tested (576 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 10m) 757/1856 tested (577 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 10m) 759/1856 tested (579 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 10m) 760/1856 tested (580 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 30m, remaining: ~2h 9m) 762/1856 tested (582 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 30m, remaining: ~2h 9m) 763/1856 tested (583 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 30m, remaining: ~2h 9m) 765/1856 tested (585 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 30m, remaining: ~2h 8m) 769/1856 tested (586 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 8m) 770/1856 tested (587 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 8m) 772/1856 tested (589 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 7m) 773/1856 tested (590 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 7m) 775/1856 tested (592 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 7m) 776/1856 tested (593 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 7m) 778/1856 tested (595 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 7m) 779/1856 tested (596 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 32m, remaining: ~2h 6m) 781/1856 tested (598 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 32m, remaining: ~2h 6m) 782/1856 tested (599 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 32m, remaining: ~2h 6m) 783/1856 tested (600 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 32m, remaining: ~2h 6m) 785/1856 tested (602 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 32m, remaining: ~2h 6m) 786/1856 tested (603 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 6m) 788/1856 tested (605 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 5m) 789/1856 tested (606 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 5m) 791/1856 tested (608 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 5m) 792/1856 tested (609 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 5m) 794/1856 tested (611 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 5m) 795/1856 tested (612 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 4m) 797/1856 tested (614 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 4m) 798/1856 tested (615 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 34m, remaining: ~2h 4m) 800/1856 tested (617 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 34m, remaining: ~2h 4m) 801/1856 tested (618 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 34m, remaining: ~2h 4m) 803/1856 tested (620 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 34m, remaining: ~2h 4m) 804/1856 tested (621 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 4m) 805/1856 tested (622 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 3m) 807/1856 tested (624 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 3m) 808/1856 tested (625 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 3m) 810/1856 tested (627 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 3m) 811/1856 tested (628 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 2m) 813/1856 tested (630 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 2m) 814/1856 tested (631 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 2m) 816/1856 tested (633 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 36m, remaining: ~2h 2m) 817/1856 tested (634 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 36m, remaining: ~2h 2m) 819/1856 tested (636 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 36m, remaining: ~2h 2m) 820/1856 tested (637 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 36m, remaining: ~2h 1m) 822/1856 tested (638 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 37m, remaining: ~2h 1m) 823/1856 tested (638 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 37m, remaining: ~2h 1m) 824/1856 tested (638 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 37m, remaining: ~2h 1m) 825/1856 tested (638 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 37m, remaining: ~2h 1m) 827/1856 tested (640 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 37m, remaining: ~2h 1m) 828/1856 tested (641 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 37m, remaining: ~2h 0m) 830/1856 tested (643 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 1m) 830/1856 tested (643 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 1m) 831/1856 tested (643 survived, 72 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 1m) 832/1856 tested (643 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 1m) 832/1856 tested (643 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 1m) 833/1856 tested (643 survived, 74 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 0m) 835/1856 tested (645 survived, 74 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 1m) 835/1856 tested (645 survived, 74 timed out)
Mutation testing 45% (elapsed: ~1h 39m, remaining: ~2h 0m) 836/1856 tested (645 survived, 75 timed out)
Mutation testing 45% (elapsed: ~1h 39m, remaining: ~2h 0m) 837/1856 tested (645 survived, 76 timed out)
Mutation testing 45% (elapsed: ~1h 39m, remaining: ~2h 1m) 837/1856 tested (645 survived, 76 timed out)
Mutation testing 45% (elapsed: ~1h 39m, remaining: ~2h 1m) 838/1856 tested (645 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 39m, remaining: ~2h 1m) 839/1856 tested (645 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 0m) 840/1856 tested (646 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 0m) 842/1856 tested (648 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~1h 59m) 846/1856 tested (649 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~1h 59m) 849/1856 tested (650 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~1h 59m) 850/1856 tested (651 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~1h 58m) 852/1856 tested (653 survived, 78 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~1h 58m) 853/1856 tested (654 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 41m, remaining: ~1h 58m) 855/1856 tested (656 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 41m, remaining: ~1h 58m) 856/1856 tested (657 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 41m, remaining: ~1h 58m) 858/1856 tested (659 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 41m, remaining: ~1h 57m) 859/1856 tested (660 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 41m, remaining: ~1h 57m) 861/1856 tested (662 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 57m) 862/1856 tested (663 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 57m) 863/1856 tested (664 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 57m) 865/1856 tested (666 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 57m) 866/1856 tested (667 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 56m) 868/1856 tested (669 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 56m) 869/1856 tested (670 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 56m) 871/1856 tested (672 survived, 78 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 56m) 872/1856 tested (673 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 43m, remaining: ~1h 56m) 874/1856 tested (675 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 43m, remaining: ~1h 56m) 875/1856 tested (676 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 43m, remaining: ~1h 55m) 877/1856 tested (678 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 43m, remaining: ~1h 55m) 878/1856 tested (679 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 55m) 880/1856 tested (681 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 55m) 881/1856 tested (682 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 54m) 883/1856 tested (684 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 54m) 884/1856 tested (685 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 54m) 886/1856 tested (687 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 54m) 887/1856 tested (688 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 54m) 888/1856 tested (689 survived, 78 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 54m) 889/1856 tested (689 survived, 79 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 54m) 890/1856 tested (690 survived, 79 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 54m) 890/1856 tested (690 survived, 79 timed out)
Mutation testing 48% (elapsed: ~1h 45m, remaining: ~1h 54m) 891/1856 tested (690 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 45m, remaining: ~1h 54m) 892/1856 tested (690 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 46m, remaining: ~1h 54m) 892/1856 tested (690 survived, 81 timed out)
Mutation testing 48% (elapsed: ~1h 46m, remaining: ~1h 54m) 893/1856 tested (690 survived, 82 timed out)
Mutation testing 48% (elapsed: ~1h 46m, remaining: ~1h 54m) 894/1856 tested (690 survived, 83 timed out)
Mutation testing 48% (elapsed: ~1h 46m, remaining: ~1h 54m) 895/1856 tested (691 survived, 83 timed out)
Mutation testing 48% (elapsed: ~1h 46m, remaining: ~1h 53m) 899/1856 tested (693 survived, 83 timed out)
Mutation testing 48% (elapsed: ~1h 46m, remaining: ~1h 53m) 900/1856 tested (694 survived, 83 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 53m) 902/1856 tested (696 survived, 83 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 53m) 903/1856 tested (696 survived, 83 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 53m) 904/1856 tested (696 survived, 83 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 52m) 905/1856 tested (696 survived, 83 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 52m) 907/1856 tested (698 survived, 83 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 52m) 908/1856 tested (699 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 48m, remaining: ~1h 52m) 910/1856 tested (701 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 48m, remaining: ~1h 52m) 911/1856 tested (702 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 48m, remaining: ~1h 51m) 913/1856 tested (704 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 48m, remaining: ~1h 51m) 914/1856 tested (705 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 48m, remaining: ~1h 51m) 916/1856 tested (707 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 48m, remaining: ~1h 51m) 917/1856 tested (708 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 51m) 919/1856 tested (710 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 51m) 920/1856 tested (711 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 50m) 922/1856 tested (713 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 50m) 923/1856 tested (714 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 50m) 925/1856 tested (716 survived, 83 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 50m) 926/1856 tested (717 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 50m, remaining: ~1h 49m) 928/1856 tested (719 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 50m, remaining: ~1h 49m) 929/1856 tested (720 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 50m, remaining: ~1h 49m) 931/1856 tested (722 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 50m, remaining: ~1h 49m) 932/1856 tested (723 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 50m, remaining: ~1h 49m) 933/1856 tested (724 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 50m, remaining: ~1h 49m) 935/1856 tested (726 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 49m) 936/1856 tested (727 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 48m) 938/1856 tested (729 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 48m) 939/1856 tested (730 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 48m) 941/1856 tested (732 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 48m) 942/1856 tested (733 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 48m) 944/1856 tested (735 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 47m) 945/1856 tested (736 survived, 83 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 47m) 946/1856 tested (736 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 52m, remaining: ~1h 47m) 948/1856 tested (736 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 52m, remaining: ~1h 47m) 949/1856 tested (736 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 52m, remaining: ~1h 47m) 951/1856 tested (736 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 52m, remaining: ~1h 47m) 952/1856 tested (736 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 47m) 953/1856 tested (736 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 46m) 955/1856 tested (737 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 46m) 956/1856 tested (738 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 46m) 958/1856 tested (740 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 46m) 959/1856 tested (741 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 46m) 961/1856 tested (743 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 45m) 962/1856 tested (744 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 45m) 964/1856 tested (746 survived, 83 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 45m) 965/1856 tested (747 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 54m, remaining: ~1h 45m) 967/1856 tested (749 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 54m, remaining: ~1h 45m) 968/1856 tested (750 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 54m, remaining: ~1h 45m) 969/1856 tested (751 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 44m) 971/1856 tested (753 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 44m) 972/1856 tested (754 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 44m) 974/1856 tested (756 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 44m) 975/1856 tested (757 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 44m) 977/1856 tested (759 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 43m) 978/1856 tested (760 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 43m) 980/1856 tested (762 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 43m) 981/1856 tested (763 survived, 83 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 43m) 983/1856 tested (765 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 56m, remaining: ~1h 43m) 984/1856 tested (766 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 56m, remaining: ~1h 42m) 986/1856 tested (768 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 56m, remaining: ~1h 42m) 987/1856 tested (769 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 42m) 989/1856 tested (771 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 42m) 990/1856 tested (772 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 42m) 992/1856 tested (774 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 42m) 993/1856 tested (775 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 42m) 994/1856 tested (776 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 41m) 996/1856 tested (778 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 41m) 997/1856 tested (779 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 41m) 999/1856 tested (781 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 41m) 1000/1856 tested (782 survived, 83 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 40m) 1002/1856 tested (784 survived, 83 timed out)
Mutation testing 54% (elapsed: ~1h 58m, remaining: ~1h 40m) 1003/1856 tested (785 survived, 83 timed out)
Mutation testing 54% (elapsed: ~1h 58m, remaining: ~1h 40m) 1005/1856 tested (787 survived, 83 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 40m) 1006/1856 tested (788 survived, 83 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 40m) 1008/1856 tested (790 survived, 83 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 40m) 1009/1856 tested (791 survived, 83 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 39m) 1011/1856 tested (793 survived, 83 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 39m) 1012/1856 tested (794 survived, 83 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 39m) 1014/1856 tested (796 survived, 83 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 39m) 1015/1856 tested (797 survived, 83 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 39m) 1017/1856 tested (799 survived, 83 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 39m) 1018/1856 tested (800 survived, 83 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 38m) 1019/1856 tested (801 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 0m, remaining: ~1h 38m) 1021/1856 tested (803 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 0m, remaining: ~1h 38m) 1022/1856 tested (804 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 1m, remaining: ~1h 38m) 1024/1856 tested (806 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 1m, remaining: ~1h 38m) 1025/1856 tested (807 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 1m, remaining: ~1h 37m) 1027/1856 tested (809 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 1m, remaining: ~1h 37m) 1028/1856 tested (810 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 1m, remaining: ~1h 37m) 1030/1856 tested (812 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 1m, remaining: ~1h 37m) 1031/1856 tested (813 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 37m) 1033/1856 tested (815 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 37m) 1034/1856 tested (816 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 36m) 1036/1856 tested (818 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 36m) 1037/1856 tested (819 survived, 83 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 36m) 1039/1856 tested (821 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 2m, remaining: ~1h 36m) 1040/1856 tested (822 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 3m, remaining: ~1h 36m) 1042/1856 tested (824 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 3m, remaining: ~1h 36m) 1043/1856 tested (825 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 3m, remaining: ~1h 35m) 1044/1856 tested (826 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 3m, remaining: ~1h 35m) 1046/1856 tested (828 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 3m, remaining: ~1h 35m) 1047/1856 tested (829 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 3m, remaining: ~1h 35m) 1049/1856 tested (831 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 35m) 1050/1856 tested (832 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 34m) 1052/1856 tested (834 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 34m) 1053/1856 tested (835 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 34m) 1055/1856 tested (837 survived, 83 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 34m) 1056/1856 tested (838 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 4m, remaining: ~1h 34m) 1058/1856 tested (840 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 5m, remaining: ~1h 34m) 1059/1856 tested (841 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 5m, remaining: ~1h 33m) 1061/1856 tested (843 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 5m, remaining: ~1h 33m) 1062/1856 tested (844 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 5m, remaining: ~1h 33m) 1064/1856 tested (846 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 5m, remaining: ~1h 33m) 1065/1856 tested (847 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 5m, remaining: ~1h 33m) 1067/1856 tested (849 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 32m) 1068/1856 tested (850 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 32m) 1069/1856 tested (851 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 32m) 1071/1856 tested (853 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 32m) 1072/1856 tested (854 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 32m) 1074/1856 tested (856 survived, 83 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 32m) 1075/1856 tested (857 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 7m, remaining: ~1h 31m) 1077/1856 tested (859 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 7m, remaining: ~1h 31m) 1078/1856 tested (860 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 7m, remaining: ~1h 31m) 1080/1856 tested (862 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 7m, remaining: ~1h 31m) 1081/1856 tested (863 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 7m, remaining: ~1h 31m) 1083/1856 tested (865 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 7m, remaining: ~1h 31m) 1084/1856 tested (866 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 30m) 1086/1856 tested (868 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 30m) 1087/1856 tested (869 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 30m) 1089/1856 tested (871 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 30m) 1090/1856 tested (872 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 30m) 1092/1856 tested (874 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 29m) 1093/1856 tested (875 survived, 83 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 29m) 1095/1856 tested (877 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 9m, remaining: ~1h 29m) 1096/1856 tested (878 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 9m, remaining: ~1h 29m) 1097/1856 tested (879 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 9m, remaining: ~1h 29m) 1099/1856 tested (881 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 9m, remaining: ~1h 29m) 1100/1856 tested (882 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 9m, remaining: ~1h 28m) 1102/1856 tested (884 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 28m) 1103/1856 tested (885 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 28m) 1105/1856 tested (887 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 28m) 1106/1856 tested (888 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 28m) 1108/1856 tested (890 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 28m) 1109/1856 tested (891 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 27m) 1111/1856 tested (893 survived, 83 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 27m) 1112/1856 tested (894 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 11m, remaining: ~1h 27m) 1114/1856 tested (896 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 11m, remaining: ~1h 27m) 1115/1856 tested (897 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 11m, remaining: ~1h 26m) 1117/1856 tested (899 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 11m, remaining: ~1h 26m) 1118/1856 tested (900 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 11m, remaining: ~1h 26m) 1120/1856 tested (902 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 26m) 1121/1856 tested (903 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 26m) 1122/1856 tested (904 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 26m) 1124/1856 tested (906 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 26m) 1125/1856 tested (907 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 25m) 1127/1856 tested (909 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 25m) 1128/1856 tested (910 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 25m) 1130/1856 tested (912 survived, 83 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 25m) 1131/1856 tested (913 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 13m, remaining: ~1h 25m) 1133/1856 tested (915 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 13m, remaining: ~1h 24m) 1134/1856 tested (916 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 13m, remaining: ~1h 24m) 1136/1856 tested (918 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 13m, remaining: ~1h 24m) 1137/1856 tested (919 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 24m) 1139/1856 tested (921 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 24m) 1140/1856 tested (922 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 23m) 1142/1856 tested (924 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 23m) 1143/1856 tested (925 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 23m) 1145/1856 tested (927 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 23m) 1146/1856 tested (928 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 23m) 1147/1856 tested (929 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 23m) 1149/1856 tested (931 survived, 83 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 23m) 1150/1856 tested (932 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 15m, remaining: ~1h 22m) 1152/1856 tested (934 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 15m, remaining: ~1h 22m) 1153/1856 tested (935 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 15m, remaining: ~1h 22m) 1155/1856 tested (937 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 22m) 1156/1856 tested (938 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 22m) 1158/1856 tested (940 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 21m) 1159/1856 tested (941 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 21m) 1161/1856 tested (943 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 21m) 1162/1856 tested (944 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 21m) 1164/1856 tested (946 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 21m) 1165/1856 tested (947 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 20m) 1167/1856 tested (949 survived, 83 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 20m) 1168/1856 tested (950 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 17m, remaining: ~1h 20m) 1170/1856 tested (952 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 17m, remaining: ~1h 20m) 1171/1856 tested (953 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 17m, remaining: ~1h 20m) 1172/1856 tested (954 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 18m, remaining: ~1h 20m) 1174/1856 tested (956 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 18m, remaining: ~1h 20m) 1175/1856 tested (957 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 18m, remaining: ~1h 19m) 1177/1856 tested (959 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 18m, remaining: ~1h 19m) 1178/1856 tested (960 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 18m, remaining: ~1h 19m) 1180/1856 tested (962 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 18m, remaining: ~1h 19m) 1181/1856 tested (963 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 19m) 1183/1856 tested (965 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 18m) 1184/1856 tested (966 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 18m) 1186/1856 tested (968 survived, 83 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 18m) 1187/1856 tested (969 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 19m, remaining: ~1h 18m) 1189/1856 tested (971 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 19m, remaining: ~1h 18m) 1190/1856 tested (972 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 20m, remaining: ~1h 17m) 1192/1856 tested (974 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 20m, remaining: ~1h 17m) 1193/1856 tested (975 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 20m, remaining: ~1h 17m) 1195/1856 tested (977 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 20m, remaining: ~1h 17m) 1196/1856 tested (978 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 20m, remaining: ~1h 17m) 1198/1856 tested (980 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 20m, remaining: ~1h 17m) 1199/1856 tested (981 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 17m) 1200/1856 tested (982 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 16m) 1202/1856 tested (984 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 16m) 1203/1856 tested (985 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 16m) 1205/1856 tested (987 survived, 83 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 16m) 1206/1856 tested (988 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 21m, remaining: ~1h 16m) 1208/1856 tested (990 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 22m, remaining: ~1h 15m) 1209/1856 tested (991 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 22m, remaining: ~1h 15m) 1211/1856 tested (993 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 22m, remaining: ~1h 15m) 1212/1856 tested (994 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 22m, remaining: ~1h 15m) 1214/1856 tested (996 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 22m, remaining: ~1h 15m) 1215/1856 tested (997 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 22m, remaining: ~1h 14m) 1217/1856 tested (999 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 14m) 1218/1856 tested (1000 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 14m) 1220/1856 tested (1002 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 14m) 1221/1856 tested (1003 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 14m) 1223/1856 tested (1005 survived, 83 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 14m) 1224/1856 tested (1006 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 23m, remaining: ~1h 14m) 1225/1856 tested (1007 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 24m, remaining: ~1h 13m) 1227/1856 tested (1009 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 24m, remaining: ~1h 13m) 1228/1856 tested (1010 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 24m, remaining: ~1h 13m) 1230/1856 tested (1012 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 24m, remaining: ~1h 13m) 1231/1856 tested (1013 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 24m, remaining: ~1h 13m) 1233/1856 tested (1015 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 24m, remaining: ~1h 13m) 1234/1856 tested (1016 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 12m) 1236/1856 tested (1018 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 12m) 1237/1856 tested (1019 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 12m) 1239/1856 tested (1021 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 12m) 1240/1856 tested (1022 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 12m) 1242/1856 tested (1024 survived, 83 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 11m) 1243/1856 tested (1025 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 26m, remaining: ~1h 11m) 1245/1856 tested (1027 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 26m, remaining: ~1h 11m) 1246/1856 tested (1028 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 26m, remaining: ~1h 11m) 1248/1856 tested (1030 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 26m, remaining: ~1h 11m) 1249/1856 tested (1031 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 26m, remaining: ~1h 11m) 1250/1856 tested (1032 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 26m, remaining: ~1h 10m) 1252/1856 tested (1034 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 10m) 1253/1856 tested (1035 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 10m) 1255/1856 tested (1037 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 10m) 1256/1856 tested (1038 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 10m) 1258/1856 tested (1040 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 10m) 1259/1856 tested (1041 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 9m) 1261/1856 tested (1043 survived, 83 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 9m) 1262/1856 tested (1044 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 28m, remaining: ~1h 9m) 1264/1856 tested (1046 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 28m, remaining: ~1h 9m) 1265/1856 tested (1047 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 28m, remaining: ~1h 9m) 1267/1856 tested (1049 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 28m, remaining: ~1h 8m) 1268/1856 tested (1050 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 28m, remaining: ~1h 8m) 1270/1856 tested (1052 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 8m) 1271/1856 tested (1053 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 8m) 1273/1856 tested (1055 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 8m) 1274/1856 tested (1056 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 7m) 1276/1856 tested (1058 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 7m) 1277/1856 tested (1059 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 7m) 1278/1856 tested (1060 survived, 83 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 7m) 1280/1856 tested (1062 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 30m, remaining: ~1h 7m) 1281/1856 tested (1063 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 30m, remaining: ~1h 7m) 1283/1856 tested (1065 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 30m, remaining: ~1h 7m) 1284/1856 tested (1066 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 30m, remaining: ~1h 6m) 1286/1856 tested (1068 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 30m, remaining: ~1h 6m) 1287/1856 tested (1069 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 6m) 1289/1856 tested (1071 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 6m) 1290/1856 tested (1072 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 6m) 1292/1856 tested (1074 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 5m) 1293/1856 tested (1075 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 5m) 1295/1856 tested (1077 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 5m) 1296/1856 tested (1078 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 5m) 1298/1856 tested (1080 survived, 83 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 5m) 1299/1856 tested (1081 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 32m, remaining: ~1h 4m) 1301/1856 tested (1083 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 32m, remaining: ~1h 4m) 1302/1856 tested (1084 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 32m, remaining: ~1h 4m) 1303/1856 tested (1085 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 32m, remaining: ~1h 4m) 1305/1856 tested (1087 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 4m) 1306/1856 tested (1088 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 4m) 1308/1856 tested (1090 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 4m) 1309/1856 tested (1091 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 3m) 1311/1856 tested (1093 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 3m) 1312/1856 tested (1094 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 3m) 1314/1856 tested (1096 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 3m) 1315/1856 tested (1097 survived, 83 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 3m) 1317/1856 tested (1099 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 34m, remaining: ~1h 2m) 1318/1856 tested (1100 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 34m, remaining: ~1h 2m) 1320/1856 tested (1102 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 34m, remaining: ~1h 2m) 1321/1856 tested (1103 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 34m, remaining: ~1h 2m) 1323/1856 tested (1105 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 35m, remaining: ~1h 2m) 1324/1856 tested (1106 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 35m, remaining: ~1h 2m) 1326/1856 tested (1108 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 35m, remaining: ~1h 1m) 1327/1856 tested (1109 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 35m, remaining: ~1h 1m) 1328/1856 tested (1110 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 35m, remaining: ~1h 1m) 1330/1856 tested (1112 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 35m, remaining: ~1h 1m) 1331/1856 tested (1113 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 1m) 1333/1856 tested (1115 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 1m) 1334/1856 tested (1116 survived, 83 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 0m) 1336/1856 tested (1118 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 36m, remaining: ~1h 0m) 1337/1856 tested (1119 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 36m, remaining: ~1h 0m) 1339/1856 tested (1121 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 36m, remaining: ~1h 0m) 1340/1856 tested (1122 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 37m, remaining: ~1h 0m) 1342/1856 tested (1124 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 37m, remaining: ~1h 0m) 1343/1856 tested (1125 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 37m, remaining: ~59m) 1345/1856 tested (1127 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 37m, remaining: ~59m) 1346/1856 tested (1128 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 37m, remaining: ~59m) 1348/1856 tested (1130 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 37m, remaining: ~59m) 1349/1856 tested (1131 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~59m) 1351/1856 tested (1133 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~58m) 1352/1856 tested (1134 survived, 83 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~58m) 1354/1856 tested (1136 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 38m, remaining: ~58m) 1355/1856 tested (1137 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 38m, remaining: ~58m) 1356/1856 tested (1138 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 38m, remaining: ~58m) 1358/1856 tested (1140 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 39m, remaining: ~58m) 1359/1856 tested (1141 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 39m, remaining: ~57m) 1361/1856 tested (1143 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 39m, remaining: ~57m) 1362/1856 tested (1144 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 39m, remaining: ~57m) 1364/1856 tested (1146 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 39m, remaining: ~57m) 1365/1856 tested (1147 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 39m, remaining: ~57m) 1367/1856 tested (1149 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~57m) 1368/1856 tested (1150 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~56m) 1370/1856 tested (1152 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~56m) 1371/1856 tested (1153 survived, 83 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~56m) 1373/1856 tested (1155 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 40m, remaining: ~56m) 1374/1856 tested (1156 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 40m, remaining: ~56m) 1376/1856 tested (1158 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 41m, remaining: ~56m) 1377/1856 tested (1159 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 41m, remaining: ~55m) 1379/1856 tested (1161 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 41m, remaining: ~55m) 1380/1856 tested (1162 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 41m, remaining: ~55m) 1381/1856 tested (1163 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 41m, remaining: ~55m) 1383/1856 tested (1165 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 41m, remaining: ~55m) 1384/1856 tested (1166 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~54m) 1386/1856 tested (1168 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~54m) 1387/1856 tested (1169 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~54m) 1389/1856 tested (1171 survived, 83 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~54m) 1390/1856 tested (1172 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 42m, remaining: ~54m) 1392/1856 tested (1174 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 42m, remaining: ~54m) 1393/1856 tested (1175 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 43m, remaining: ~53m) 1395/1856 tested (1177 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 43m, remaining: ~53m) 1396/1856 tested (1178 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 43m, remaining: ~53m) 1398/1856 tested (1180 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 43m, remaining: ~53m) 1399/1856 tested (1181 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 43m, remaining: ~53m) 1401/1856 tested (1183 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 43m, remaining: ~53m) 1402/1856 tested (1184 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~52m) 1404/1856 tested (1186 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~52m) 1405/1856 tested (1187 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~52m) 1406/1856 tested (1188 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~52m) 1408/1856 tested (1190 survived, 83 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~52m) 1409/1856 tested (1191 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 44m, remaining: ~51m) 1411/1856 tested (1193 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 45m, remaining: ~51m) 1412/1856 tested (1194 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 45m, remaining: ~51m) 1414/1856 tested (1196 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 45m, remaining: ~51m) 1415/1856 tested (1197 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 45m, remaining: ~51m) 1417/1856 tested (1199 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 45m, remaining: ~51m) 1418/1856 tested (1200 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 45m, remaining: ~50m) 1420/1856 tested (1202 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~50m) 1421/1856 tested (1203 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~50m) 1423/1856 tested (1205 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~50m) 1424/1856 tested (1206 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~50m) 1426/1856 tested (1208 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~50m) 1427/1856 tested (1209 survived, 83 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~49m) 1429/1856 tested (1211 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 47m, remaining: ~49m) 1430/1856 tested (1212 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 47m, remaining: ~49m) 1431/1856 tested (1213 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 47m, remaining: ~49m) 1433/1856 tested (1215 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 47m, remaining: ~49m) 1434/1856 tested (1216 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 47m, remaining: ~49m) 1436/1856 tested (1218 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 47m, remaining: ~48m) 1437/1856 tested (1219 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~48m) 1439/1856 tested (1221 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~48m) 1440/1856 tested (1222 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~48m) 1442/1856 tested (1224 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~48m) 1443/1856 tested (1225 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~47m) 1445/1856 tested (1227 survived, 83 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~47m) 1446/1856 tested (1228 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 49m, remaining: ~47m) 1448/1856 tested (1230 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 49m, remaining: ~47m) 1449/1856 tested (1231 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 49m, remaining: ~47m) 1451/1856 tested (1233 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 49m, remaining: ~47m) 1452/1856 tested (1234 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 49m, remaining: ~46m) 1454/1856 tested (1236 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 49m, remaining: ~46m) 1455/1856 tested (1237 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~46m) 1457/1856 tested (1239 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~46m) 1458/1856 tested (1240 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~46m) 1459/1856 tested (1241 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~46m) 1461/1856 tested (1243 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~45m) 1462/1856 tested (1244 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~45m) 1464/1856 tested (1246 survived, 83 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~45m) 1465/1856 tested (1247 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 51m, remaining: ~45m) 1467/1856 tested (1249 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 51m, remaining: ~45m) 1468/1856 tested (1250 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 51m, remaining: ~45m) 1470/1856 tested (1252 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 51m, remaining: ~44m) 1471/1856 tested (1253 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 51m, remaining: ~44m) 1473/1856 tested (1255 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~44m) 1474/1856 tested (1256 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~44m) 1476/1856 tested (1258 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~44m) 1477/1856 tested (1259 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~43m) 1479/1856 tested (1261 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~43m) 1480/1856 tested (1262 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~43m) 1482/1856 tested (1264 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~43m) 1483/1856 tested (1265 survived, 83 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~43m) 1484/1856 tested (1266 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 53m, remaining: ~43m) 1486/1856 tested (1268 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 53m, remaining: ~43m) 1487/1856 tested (1269 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 53m, remaining: ~42m) 1489/1856 tested (1271 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 53m, remaining: ~42m) 1490/1856 tested (1272 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 54m, remaining: ~42m) 1492/1856 tested (1274 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 54m, remaining: ~42m) 1493/1856 tested (1275 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 54m, remaining: ~42m) 1495/1856 tested (1277 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 54m, remaining: ~41m) 1496/1856 tested (1278 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 54m, remaining: ~41m) 1498/1856 tested (1280 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 54m, remaining: ~41m) 1499/1856 tested (1281 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~41m) 1501/1856 tested (1283 survived, 83 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~41m) 1502/1856 tested (1284 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 55m, remaining: ~41m) 1504/1856 tested (1286 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 55m, remaining: ~40m) 1505/1856 tested (1287 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 55m, remaining: ~40m) 1507/1856 tested (1289 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 55m, remaining: ~40m) 1508/1856 tested (1290 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 56m, remaining: ~40m) 1509/1856 tested (1291 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 56m, remaining: ~40m) 1511/1856 tested (1293 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 56m, remaining: ~40m) 1512/1856 tested (1294 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 56m, remaining: ~39m) 1514/1856 tested (1296 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 56m, remaining: ~39m) 1515/1856 tested (1297 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 56m, remaining: ~39m) 1517/1856 tested (1299 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~39m) 1518/1856 tested (1300 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~39m) 1520/1856 tested (1302 survived, 83 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~39m) 1521/1856 tested (1303 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 57m, remaining: ~38m) 1523/1856 tested (1305 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 57m, remaining: ~38m) 1524/1856 tested (1306 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 57m, remaining: ~38m) 1526/1856 tested (1308 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 58m, remaining: ~38m) 1527/1856 tested (1309 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 58m, remaining: ~38m) 1529/1856 tested (1311 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 58m, remaining: ~37m) 1530/1856 tested (1312 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 58m, remaining: ~37m) 1532/1856 tested (1314 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 58m, remaining: ~37m) 1533/1856 tested (1315 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 58m, remaining: ~37m) 1534/1856 tested (1316 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~37m) 1536/1856 tested (1318 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~37m) 1537/1856 tested (1319 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~36m) 1539/1856 tested (1321 survived, 83 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~36m) 1540/1856 tested (1322 survived, 83 timed out)
Mutation testing 83% (elapsed: ~2h 59m, remaining: ~36m) 1542/1856 tested (1324 survived, 83 timed out)
Mutation testing 83% (elapsed: ~2h 59m, remaining: ~36m) 1543/1856 tested (1325 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 0m, remaining: ~36m) 1545/1856 tested (1327 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 0m, remaining: ~36m) 1546/1856 tested (1328 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 0m, remaining: ~35m) 1548/1856 tested (1330 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 0m, remaining: ~35m) 1549/1856 tested (1331 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 0m, remaining: ~35m) 1551/1856 tested (1333 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 0m, remaining: ~35m) 1552/1856 tested (1334 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~35m) 1554/1856 tested (1336 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~35m) 1555/1856 tested (1337 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~34m) 1556/1856 tested (1338 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~34m) 1558/1856 tested (1340 survived, 83 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~34m) 1559/1856 tested (1341 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 1m, remaining: ~34m) 1561/1856 tested (1343 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 2m, remaining: ~34m) 1562/1856 tested (1344 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 2m, remaining: ~34m) 1564/1856 tested (1346 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 2m, remaining: ~33m) 1565/1856 tested (1347 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 2m, remaining: ~33m) 1567/1856 tested (1349 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 2m, remaining: ~33m) 1568/1856 tested (1350 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 2m, remaining: ~33m) 1570/1856 tested (1352 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~33m) 1571/1856 tested (1353 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~32m) 1573/1856 tested (1355 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~32m) 1574/1856 tested (1356 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~32m) 1576/1856 tested (1358 survived, 83 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~32m) 1577/1856 tested (1359 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 3m, remaining: ~32m) 1579/1856 tested (1361 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 4m, remaining: ~32m) 1580/1856 tested (1362 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 4m, remaining: ~32m) 1581/1856 tested (1363 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 4m, remaining: ~31m) 1583/1856 tested (1365 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 4m, remaining: ~31m) 1584/1856 tested (1366 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 4m, remaining: ~31m) 1586/1856 tested (1368 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 4m, remaining: ~31m) 1587/1856 tested (1369 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~31m) 1589/1856 tested (1371 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~30m) 1590/1856 tested (1372 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~30m) 1592/1856 tested (1374 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~30m) 1593/1856 tested (1375 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~30m) 1595/1856 tested (1377 survived, 83 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~30m) 1596/1856 tested (1378 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 6m, remaining: ~30m) 1598/1856 tested (1380 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 6m, remaining: ~29m) 1599/1856 tested (1381 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 6m, remaining: ~29m) 1601/1856 tested (1383 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 6m, remaining: ~29m) 1602/1856 tested (1384 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 6m, remaining: ~29m) 1604/1856 tested (1386 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 6m, remaining: ~29m) 1605/1856 tested (1387 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~29m) 1606/1856 tested (1388 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~28m) 1608/1856 tested (1390 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~28m) 1609/1856 tested (1391 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~28m) 1611/1856 tested (1393 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~28m) 1612/1856 tested (1394 survived, 83 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~28m) 1614/1856 tested (1396 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 8m, remaining: ~28m) 1615/1856 tested (1397 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 8m, remaining: ~27m) 1617/1856 tested (1399 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 8m, remaining: ~27m) 1618/1856 tested (1400 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 8m, remaining: ~27m) 1620/1856 tested (1402 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 8m, remaining: ~27m) 1621/1856 tested (1403 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 8m, remaining: ~27m) 1623/1856 tested (1405 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~27m) 1624/1856 tested (1406 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~26m) 1626/1856 tested (1408 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~26m) 1627/1856 tested (1409 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~26m) 1629/1856 tested (1411 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~26m) 1630/1856 tested (1412 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~26m) 1631/1856 tested (1413 survived, 83 timed out)
Mutation testing 87% (elapsed: ~3h 10m, remaining: ~25m) 1633/1856 tested (1415 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 10m, remaining: ~25m) 1634/1856 tested (1416 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 10m, remaining: ~25m) 1636/1856 tested (1418 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 10m, remaining: ~25m) 1637/1856 tested (1419 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 10m, remaining: ~25m) 1639/1856 tested (1421 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 10m, remaining: ~25m) 1640/1856 tested (1422 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~24m) 1642/1856 tested (1424 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~24m) 1643/1856 tested (1425 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~24m) 1645/1856 tested (1427 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~24m) 1646/1856 tested (1428 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~24m) 1648/1856 tested (1430 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~24m) 1649/1856 tested (1431 survived, 83 timed out)
Mutation testing 88% (elapsed: ~3h 12m, remaining: ~23m) 1651/1856 tested (1433 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 12m, remaining: ~23m) 1652/1856 tested (1434 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 12m, remaining: ~23m) 1654/1856 tested (1436 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 12m, remaining: ~23m) 1655/1856 tested (1437 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 12m, remaining: ~23m) 1657/1856 tested (1439 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 12m, remaining: ~23m) 1658/1856 tested (1440 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 13m, remaining: ~22m) 1659/1856 tested (1441 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 13m, remaining: ~22m) 1661/1856 tested (1443 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 13m, remaining: ~22m) 1662/1856 tested (1444 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 13m, remaining: ~22m) 1664/1856 tested (1446 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 13m, remaining: ~22m) 1665/1856 tested (1447 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 13m, remaining: ~21m) 1667/1856 tested (1449 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 14m, remaining: ~21m) 1668/1856 tested (1450 survived, 83 timed out)
Mutation testing 89% (elapsed: ~3h 14m, remaining: ~21m) 1670/1856 tested (1452 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 14m, remaining: ~21m) 1671/1856 tested (1453 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 14m, remaining: ~21m) 1673/1856 tested (1455 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 14m, remaining: ~21m) 1674/1856 tested (1456 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 14m, remaining: ~20m) 1676/1856 tested (1458 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 15m, remaining: ~20m) 1677/1856 tested (1459 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 15m, remaining: ~20m) 1679/1856 tested (1461 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 15m, remaining: ~20m) 1680/1856 tested (1462 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 15m, remaining: ~20m) 1682/1856 tested (1464 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 15m, remaining: ~20m) 1683/1856 tested (1465 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 15m, remaining: ~20m) 1684/1856 tested (1466 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 16m, remaining: ~19m) 1686/1856 tested (1468 survived, 83 timed out)
Mutation testing 90% (elapsed: ~3h 16m, remaining: ~19m) 1687/1856 tested (1469 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 16m, remaining: ~19m) 1689/1856 tested (1471 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 16m, remaining: ~19m) 1690/1856 tested (1472 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 16m, remaining: ~19m) 1692/1856 tested (1474 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 16m, remaining: ~18m) 1693/1856 tested (1475 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 17m, remaining: ~18m) 1695/1856 tested (1477 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 17m, remaining: ~18m) 1696/1856 tested (1478 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 17m, remaining: ~18m) 1698/1856 tested (1480 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 17m, remaining: ~18m) 1699/1856 tested (1481 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 17m, remaining: ~18m) 1701/1856 tested (1483 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 17m, remaining: ~17m) 1702/1856 tested (1484 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 18m, remaining: ~17m) 1704/1856 tested (1486 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 18m, remaining: ~17m) 1705/1856 tested (1487 survived, 83 timed out)
Mutation testing 91% (elapsed: ~3h 18m, remaining: ~17m) 1707/1856 tested (1489 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 18m, remaining: ~17m) 1708/1856 tested (1490 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 18m, remaining: ~17m) 1709/1856 tested (1491 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 18m, remaining: ~16m) 1711/1856 tested (1493 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 19m, remaining: ~16m) 1712/1856 tested (1494 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 19m, remaining: ~16m) 1714/1856 tested (1496 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 19m, remaining: ~16m) 1715/1856 tested (1497 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 19m, remaining: ~16m) 1717/1856 tested (1499 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 19m, remaining: ~16m) 1718/1856 tested (1500 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 19m, remaining: ~15m) 1720/1856 tested (1502 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~15m) 1721/1856 tested (1503 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~15m) 1723/1856 tested (1505 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~15m) 1724/1856 tested (1506 survived, 83 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~15m) 1726/1856 tested (1508 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 20m, remaining: ~14m) 1727/1856 tested (1509 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 20m, remaining: ~14m) 1729/1856 tested (1511 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 21m, remaining: ~14m) 1730/1856 tested (1512 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 21m, remaining: ~14m) 1732/1856 tested (1514 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 21m, remaining: ~14m) 1733/1856 tested (1515 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 21m, remaining: ~14m) 1734/1856 tested (1516 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 21m, remaining: ~13m) 1736/1856 tested (1518 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 21m, remaining: ~13m) 1737/1856 tested (1519 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~13m) 1739/1856 tested (1521 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~13m) 1740/1856 tested (1522 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~13m) 1742/1856 tested (1524 survived, 83 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~13m) 1743/1856 tested (1525 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 22m, remaining: ~12m) 1745/1856 tested (1527 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 22m, remaining: ~12m) 1746/1856 tested (1528 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 23m, remaining: ~12m) 1748/1856 tested (1530 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 23m, remaining: ~12m) 1749/1856 tested (1531 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 23m, remaining: ~12m) 1751/1856 tested (1533 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 23m, remaining: ~12m) 1752/1856 tested (1534 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 23m, remaining: ~11m) 1754/1856 tested (1536 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 23m, remaining: ~11m) 1755/1856 tested (1537 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~11m) 1757/1856 tested (1539 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~11m) 1758/1856 tested (1540 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~11m) 1760/1856 tested (1542 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~11m) 1761/1856 tested (1543 survived, 83 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~10m) 1762/1856 tested (1544 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 24m, remaining: ~10m) 1764/1856 tested (1546 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 25m, remaining: ~10m) 1765/1856 tested (1547 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 25m, remaining: ~10m) 1767/1856 tested (1549 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 25m, remaining: ~10m) 1768/1856 tested (1550 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 25m, remaining: ~9m) 1770/1856 tested (1552 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 25m, remaining: ~9m) 1771/1856 tested (1553 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 25m, remaining: ~9m) 1773/1856 tested (1555 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~9m) 1774/1856 tested (1556 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~9m) 1776/1856 tested (1558 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~9m) 1777/1856 tested (1559 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~8m) 1779/1856 tested (1561 survived, 83 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~8m) 1780/1856 tested (1562 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 26m, remaining: ~8m) 1782/1856 tested (1564 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 27m, remaining: ~8m) 1783/1856 tested (1565 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 27m, remaining: ~8m) 1785/1856 tested (1567 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 27m, remaining: ~8m) 1786/1856 tested (1568 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 27m, remaining: ~8m) 1787/1856 tested (1569 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 27m, remaining: ~7m) 1789/1856 tested (1571 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 27m, remaining: ~7m) 1790/1856 tested (1572 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~7m) 1792/1856 tested (1574 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~7m) 1793/1856 tested (1575 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~7m) 1795/1856 tested (1577 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~6m) 1796/1856 tested (1578 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~6m) 1798/1856 tested (1580 survived, 83 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~6m) 1799/1856 tested (1581 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 29m, remaining: ~6m) 1801/1856 tested (1583 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 29m, remaining: ~6m) 1802/1856 tested (1584 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 29m, remaining: ~6m) 1804/1856 tested (1586 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 29m, remaining: ~5m) 1805/1856 tested (1587 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 29m, remaining: ~5m) 1807/1856 tested (1589 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 29m, remaining: ~5m) 1808/1856 tested (1590 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~5m) 1810/1856 tested (1592 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~5m) 1811/1856 tested (1593 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~5m) 1812/1856 tested (1594 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~4m) 1814/1856 tested (1596 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~4m) 1815/1856 tested (1597 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~4m) 1817/1856 tested (1599 survived, 83 timed out)
Mutation testing 97% (elapsed: ~3h 31m, remaining: ~4m) 1818/1856 tested (1600 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 31m, remaining: ~4m) 1820/1856 tested (1602 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 31m, remaining: ~4m) 1821/1856 tested (1603 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 31m, remaining: ~3m) 1823/1856 tested (1605 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 31m, remaining: ~3m) 1824/1856 tested (1606 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 31m, remaining: ~3m) 1826/1856 tested (1608 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 32m, remaining: ~3m) 1827/1856 tested (1609 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 32m, remaining: ~3m) 1829/1856 tested (1611 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 32m, remaining: ~3m) 1830/1856 tested (1612 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 32m, remaining: ~2m) 1832/1856 tested (1614 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 32m, remaining: ~2m) 1833/1856 tested (1615 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 32m, remaining: ~2m) 1835/1856 tested (1617 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 33m, remaining: ~2m) 1836/1856 tested (1618 survived, 83 timed out)
Mutation testing 98% (elapsed: ~3h 33m, remaining: ~2m) 1837/1856 tested (1619 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 33m, remaining: ~1m) 1841/1856 tested (1620 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 33m, remaining: ~1m) 1843/1856 tested (1622 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 33m, remaining: ~1m) 1844/1856 tested (1623 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 33m, remaining: ~1m) 1846/1856 tested (1625 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 34m, remaining: ~1m) 1847/1856 tested (1626 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 34m, remaining: <1m) 1849/1856 tested (1628 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 34m, remaining: <1m) 1850/1856 tested (1629 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 34m, remaining: <1m) 1852/1856 tested (1631 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 34m, remaining: <1m) 1853/1856 tested (1632 survived, 83 timed out)
Mutation testing 99% (elapsed: ~3h 34m, remaining: <1m) 1855/1856 tested (1634 survived, 83 timed out)

All tests
  ✓ All tests (killed 138)

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition());

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("buggy promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("broken promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("defective promise", definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     throw new Error("Testing mutation");
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return "Testing mutation";
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return function () {
+       throw new Error("Testing mutation");
+     };
+   });

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.define) {

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           module(definition);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition());

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function () {});

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(() => {});

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "undefined" && ses.ok()) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined" || ses.ok()) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (!ses || ses.ok()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (!ses.isOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.isNotOk()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!!ses.ok()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" || typeof self !== "undefined" || typeof global !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined" && typeof global !== "undefined") {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain && domain.exit()) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, null);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, 0);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, false);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS && false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (isNodeJS || false) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.run()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush());

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush(0));

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush.call(this), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.exit() && domain.enter()) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (domain && false) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" && window.location.href.indexOf("https") === 0) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" && window.location.protocol === "https:") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" && window.location.hostname.endsWith(".secure.example.com")) {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush.call(this));

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush.apply(this));

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush());

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && MessageChannel.prototype.port1.onmessage === undefined) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && MessageChannel.prototype.port1.onmessage === null) {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush.call(this), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing === true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length < 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (1 + 1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (2 * 2);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (3 - 1);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index in this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index in this.length + 1) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index in this.length - 1) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index >= length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index *= 2) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in this.length - 1) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in this.length + 1) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index - 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i >= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = this.length - 1) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] > value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] < value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) + 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) - 1);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self) * 2);

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.caller(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(0, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 0, index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, undefined));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key in object.keys()) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] !== undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || object[key] === undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty(object, key) && object[key] === undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key])) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object[key] = value)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, this[key])) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, this[key] = value)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[key]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key.toUpperCase());

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== null) {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== undefined) {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== void 0) {

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.source; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.then; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.catch; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.then) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.catch) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.finally) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && false; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p || true; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.slice()) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.concat()) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.filter(function () {
+     return true;
+   })) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__" + 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stackCounter);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.length);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.toString());

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.code);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n"));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.slice(0, -1));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.replace(/\n/g, " "));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: true,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.stack, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.message, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:31
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error.name, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "errorStack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "exceptionStack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.toUpperCase(),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.split("").reverse().join(""),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = Math.floor(Math.random() * array.length); i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i >= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isNodeFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isPromiseAlike(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!object_defineProperty(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame || isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame && isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !!isNodeFrame && !isInternalFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.substring(stackLine.indexOf("@") + 1));

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], String(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Boolean(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Object(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[0])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ")[1]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ")[2]);

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[2]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[3]) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.substring(stackLine.indexOf("@") + 1));

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.match(/@(.+)/)[1]);

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[2]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[3]) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], String(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Boolean(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[4])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber === "undefined") {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\r");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\b");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].includes("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].match("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].search("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("^") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (!fileNameAndLineNumber[0]) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (!fileNameAndLineNumber[1]) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (!fileNameAndLineNumber.length) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.prototype.toString.call(value) === "[object Promise]") {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[3]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[3]);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promise, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.source, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.stack, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.pop()) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = resolvedPromise(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = promise(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.source);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.stack);

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === undefined) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === 0) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseLike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isThenable(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (typeof resolvedPromise === "undefined") {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && hasStacks && false) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\r") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n\n") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && hasStacks && false) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.promise, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.promiseDispatch, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.inspect, message);

[Survived] PrecomputedMutator
q.js:624:62
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(messages));

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(Q.resolve(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== resolvedPromise) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value - 1));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value * 2));

[Survived] PrecomputedMutator
q.js:649:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.isResolved()) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.isRejected()) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.isPending()) {

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress.value);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress.message);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress.status);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.message) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.stack) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (error.name) {

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(error.message);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(error.stack);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(error.name);

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[1]));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.slice(1)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.splice(1)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_splice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(array_slice(arguments, 1), 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, array_slice(arguments, 1)));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(0);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "string") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== function () {}) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify, deferred.fulfill);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify, deferred.fulfill, deferred.progress);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress + 1));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress - 1));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.fulfill(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(reason.message);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(reason.stack);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(reason.name);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.resolve(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.all(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(z).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + y).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(z - 1);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, that, null]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, that, undefined]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x != y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i != len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i + 1) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i + 2) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, deferred.notify(value));

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, deferred.notify(error));

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (typeof fallback !== "function") {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (typeof inspect !== "undefined") {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op] + 1) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(0, args);

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(1));

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op - 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op * 2, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[0]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[1]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args.length);

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = resolve(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("PLACEHOLDER"));

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.value) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.reason) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:861:13
-           if (typeof rejected === "function") {
+           if (rejected instanceof Function) {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.inspect);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.valueOf);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.inspect);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.valueOf);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(0) : value;

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done === true) {

[Survived] PrecomputedMutator
q.js:878:17
-               if (done) {
+               if (done !== false) {

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done === true) {

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done !== false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(0);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror()) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(exception)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(newException)) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.toString());

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === false) {

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue + 1);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue - 1);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue * 2);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.reject(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.resolve(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.defer(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.fcall(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.fcall(value).thenReject(value));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.fcall(value).then(function (result) {
+     return result + 1;
+   }));

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fapply(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fbind(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(value).thenResolve(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(value).thenReject(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(value).then(function (result) {
+     return result;
+   }));

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(0);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, null);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed, undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.reject(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.resolve(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.all(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value + 1).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value - 1).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value * 2).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(progressed, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(deferred, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, resolved, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected(new Error("Something went wrong")), progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected(exception), progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, rejected);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value + 1;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value - 1;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return value * 2;
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(0);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return Q.reject(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.reject(reason)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.resolve(reason)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.defer()).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason.message);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason.stack);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason.toString());

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) || value instanceof Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) && value.isPending()) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) && value.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isRejected(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value - 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value * 2)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "fulfilled" && inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isRejected(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "pending") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.state().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isFulfilled(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().state === "rejected") || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().state === "fulfilled") || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.inspect().state === "pending") || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isRejected(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "rejected") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "fulfilled") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.inspect().state === "pending") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return this.inspect.state().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections && unhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections && unhandledRejections.length === 0) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections || unhandledRejections.length === 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) > -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.indexOf(promise) !== -1) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections.indexOf(promise) !== -1) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons.indexOf(reason) !== -1) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {})) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.catch(function () {})) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.finally(function () {})) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionTracked", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.toString(), promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(0);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== undefined) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && typeof reason.stack !== "string") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.slice(0));

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.concat());

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.indexOf(promise));

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.lastIndexOf(promise));

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.includes(promise));

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < 0) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > 0) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === 0) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at * 2], promise);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 3);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 4);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.pop(), 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.shift(), 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at * 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, Math.floor(Math.random() * unhandledRejections.length));

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at * 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 10);

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && untrackRejection(this)) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || untrackRejection(this)) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected || untrackRejection(this)) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(0);

[Survived] PrecomputedMutator
q.js:1142:31
-               return rejected ? rejected(reason) : this;
+               return rejected ? rejected || true(reason) : this;

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, unhandledReasons);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, unhandledReasons.slice());

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(0, reason);

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(void 1, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.map(function (arg) {
+     return arg + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.map());

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value + 1, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value * 2, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value - 1, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.map(function (x) {
+     return x + 1;
+   }));

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.map());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.map());

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_entries(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.values(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(value.slice());

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(value.concat());

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(value.filter());

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[1]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[2]);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(void 0, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.length);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.fulfill(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.reject(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.resolve(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q.all(value).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value.then(function (val) {
+     return val;
+   })).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value.then(function (val) {
+     return val + 1;
+   })).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value.then(function (val) {
+     return val * 2;
+   })).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled.apply(void 0, array), rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled.apply(void 0, args), rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.catch().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.finally().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat());

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration !== undefined) {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (!StopIteration) {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg.value);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg.promise);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg.resolve);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.error) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, resolve, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, reject);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, resolve);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg - 1);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg * 2);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.constructor === StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.stack)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.name);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.when(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.all(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.spread(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.promise, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.inspect(), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, errback.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, errback.bind(continuer, "error"));

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, errback.bind(continuer, "reject"));

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, arguments[0]);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, arguments[1]);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, arguments[2]);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(0, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "return"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "next"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "error"));

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(undefined, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.throw(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([].slice.call(arguments))], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(Array.prototype.slice.call(arguments))], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(arguments.slice())], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, arguments);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(self));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat(args.shift()));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.defer(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(0).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + "d", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + "e", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + "f", args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[1]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.resolve(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.notify(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve(null), op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat(args[0]));

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.filter(function (arg) {
+     return arg !== args[0];
+   }));

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + "foo"]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, "foo"]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.reject(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.resolve(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.defer(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(0).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.reject(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.resolve(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.defer(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(0).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value - 1]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setValue", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setProperty", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setAttr", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value * 2]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.reject(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.resolve(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.defer(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(undefined).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(0).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value, true]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value, false]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("clear", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, "value"]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.defer(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(this).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("patch", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("patch", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(0).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("put", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("patch", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 2), 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("patch", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1 + 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2 * 2)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3 - 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.reject(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.resolve(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.defer(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply" + "bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.reject(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.resolve(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.defer(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q({}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1 + 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2 * 2)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3 - 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 0, -1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1, -1)]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(this);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, void 0);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 1 + 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2 * 2);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 3 - 1);

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(arguments, 3)))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.resolve(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.keys()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.values()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.entries()).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [2]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [3]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("entries", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [2]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [3]);

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "fulfilled" && promise.inspect().value === undefined

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.fulfilled()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === 0 && promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               undefined(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat([null]));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.filter(function (promise) {
+     return promise.state === "fulfilled";
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress + 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress - 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress * 2
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.concat(["extra value"]));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.filter(function (promise) {
+     return promise.inspect().state === "fulfilled";
+   }));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allResolved(this);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === 1) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled).catch(onRejected).progress(onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).progress(onProgress));

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled).catch(onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected).catch(onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, undefined, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(index);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(progress);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return anyResolved(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled", "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allRejected");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.all);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(0), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat([]), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.map(function (promise) {
+     return promise;
+   }), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(this.then(function () {}));

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.reverse()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.filter(function (promise) {
+     return promise.isFulfilled();
+   })).allSettled();

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.inspect(), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(noop, noop), regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(promise.then(function () {
+     return promise.inspect();
+   }), regardless);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, noop());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {});

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.reject(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.resolve(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.defer(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(0).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, deferred.reject(rejection));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected.then(void 0, noop));

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected.then(noop, void 0));

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected.then(void 0, function () {
+     throw new Error("rejected");
+   }));

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(null).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(undefined).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(0).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 1, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.reject(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.resolve(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.defer(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall(promise));

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall(promise, value));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply !== Function) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply !== function () {}) {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.defer(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(null));

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall(undefined));

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progress, fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(0).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(deferred, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, resolved, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, deferred, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, void 0);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.then());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.catch());

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, promise.finally());

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled.then(function () {
+     throw new Error("Intentional error");
+   }), rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled.then(function () {
+     return Q.reject(new Error("Intentional error"));
+   }), rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, Q.reject("rejected"), progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, progressed) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, rejected) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, fulfilled) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(this));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 1, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError(null));

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError(undefined));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Timed out after " + ms + " ms"));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "Timed out after " + ms + " ms");

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(void 0).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms * 2, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms / 2, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "Error");

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.notify(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearImmediate(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           undefined(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve("value");

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearImmediate(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           null(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === undefined) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(0).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout + 1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout - 1);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout * 2);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               undefined(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(0).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.concat([null]));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.filter(function (arg) {
+     return arg !== undefined;
+   }));

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fail(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.reject(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.resolve(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.map(function (arg) {
+     return arg;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, NaN);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(false).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args.slice(1));

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args.concat(["foo"]));

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args.filter(function (arg) {
+     return arg !== "foo";
+   }));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.slice(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(0, -1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(["foo"])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === "function") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(array_slice(arguments, 3)));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.slice(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.fapply(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.nfapply(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.denodeify(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.filter(function (arg) {
+     return arg !== deferred.makeNodeResolver();
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(this.constructor);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.push(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 4), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.unshift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, arguments.length - 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1, arguments.length - 1));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(array_slice(arguments, 3)));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.splice(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(deferred.promise));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[0]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[1]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[2]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(this, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, nodeArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, baseArgs);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat([1, 2, 3])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.filter(function (arg) {
+     return arg !== 1;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, "hello");

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.concat(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.splice(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(this.constructor.prototype);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat(this));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(args));

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(0).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name + "foo", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.split("").reverse().join(""), args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(["new argument"]));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.filter(function (arg) {
+     return arg !== "unwanted argument";
+   }));

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args || [null]);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args || [undefined]);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(args || [NaN]);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.slice(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "foo"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(array_slice(arguments, 4), 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.slice(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(this).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("pre", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, "foo"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, "foo");

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().call(null));

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().apply(null));

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.makeNodeResolver()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, "foo"]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.reject(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.resolve(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.defer(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(0).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(error, value));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(value, error));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(null, value));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback + 1) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback * 2) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(false, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 0);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback("error");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head" + "tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head" + "tail" + "head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + "1");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" - 1);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(new Error("Different error message"));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject("error")};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.91 |      138 |        83 |       1635 |        0 |        0 |
 q.js     |   12.00 |      138 |        83 |       1620 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         15 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m14:52:44 (3079) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m14:52:44 (3079) INFO MutationTestExecutor[39m Done in 215 minutes 7 seconds.

real	215m8.570s
user	38m23.883s
sys	6m47.242s
