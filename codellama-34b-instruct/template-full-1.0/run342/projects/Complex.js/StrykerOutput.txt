*** using precomputed mutations ***
[32m23:22:36 (2807) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m23:22:36 (2807) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m23:22:36 (2807) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/Complex.js/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m23:22:36 (2807) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m23:22:36 (2807) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m23:22:36 (2807) INFO ProjectReader[39m Found 1 of 1982 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 987 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in complex.js: Math.abs replaced with -x
Mutant 1 in complex.js: Math.abs replaced with 2 * x
Mutant 2 in complex.js: Math.abs replaced with x ^ 2
Mutant 3 in complex.js: x replaced with x--
Mutant 4 in complex.js: x replaced with --x
Mutant 5 in complex.js: x replaced with x + x
Mutant 6 in complex.js: Math.exp replaced with Math.atan
Mutant 7 in complex.js: Math.exp replaced with Math.sin
Mutant 8 in complex.js: Math.exp replaced with Math.cos
Mutant 9 in complex.js: -x replaced with x
Mutant 10 in complex.js: -x replaced with x + 1
Mutant 11 in complex.js: Math.abs replaced with Math.sin
Mutant 12 in complex.js: Math.abs replaced with x * x
Mutant 13 in complex.js: Math.abs replaced with Math.log
Mutant 14 in complex.js: x replaced with sinh(x + 1)
Mutant 15 in complex.js: x replaced with sinh(x - 1)
Mutant 16 in complex.js: x replaced with sinh(x + x)
Mutant 17 in complex.js: Math.exp replaced with Math.pow
Mutant 18 in complex.js: Math.exp replaced with Math.abs
Mutant 19 in complex.js: Math.exp replaced with Number.prototype.valueOf
Mutant 20 in complex.js: x replaced with sin(x)
Mutant 21 in complex.js: x replaced with x * Math.sign(x)
Mutant 22 in complex.js: Math.exp replaced with Math.sin
Mutant 23 in complex.js: Math.exp replaced with Math.cos
Mutant 24 in complex.js: Math.exp replaced with Math.tan
Mutant 25 in complex.js: -x replaced with x + 1
Mutant 26 in complex.js: -x replaced with x * 2
Mutant 27 in complex.js: -x replaced with x + Math.PI
Mutant 28 in complex.js: -b > x || x > b replaced with a + x > b || x > b + a
Mutant 29 in complex.js: -b > x || x > b replaced with a - x < b || x < b - a
Mutant 30 in complex.js: -b > x || x > b replaced with a + b < x || x < a + b
Mutant 31 in complex.js: Math.cos replaced with Math.sin
Mutant 32 in complex.js: Math.cos replaced with Math.tan
Mutant 33 in complex.js: Math.cos replaced with Math.exp
Mutant 34 in complex.js: x replaced with -x
Mutant 35 in complex.js: x replaced with x + 1
Mutant 36 in complex.js: x replaced with cos(x) + 1
Mutant 37 in complex.js: Math.abs replaced with Math.sin
Mutant 38 in complex.js: Math.abs replaced with Number.isInteger
Mutant 39 in complex.js: Math.abs replaced with undefined
Mutant 40 in complex.js: x replaced with a * b
Mutant 41 in complex.js: x replaced with a + b
Mutant 42 in complex.js: y replaced with x
Mutant 43 in complex.js: y replaced with a
Mutant 44 in complex.js: y replaced with b
Mutant 45 in complex.js: a < 3000 && b < 3000 replaced with a > 3000 || b > 3000
Mutant 46 in complex.js: a < 3000 && b < 3000 replaced with a * b < 3000
Mutant 47 in complex.js: a < 3000 && b < 3000 replaced with Math.sqrt(a) < 30 || Math.sqrt(b) < 30
Mutant 48 in complex.js: Math.sqrt replaced with Math.random
Mutant 49 in complex.js: Math.sqrt replaced with Math.sin
Mutant 50 in complex.js: Math.sqrt replaced with Math.exp
Mutant 51 in complex.js: a * a + b * b replaced with a * b + b * a
Mutant 52 in complex.js: a * a + b * b replaced with -a * b + b * a
Mutant 53 in complex.js: a * a + b * b replaced with a * a - b * b
Mutant 54 in complex.js: a < b replaced with a < b || isNaN(a)
Mutant 55 in complex.js: a < b replaced with a < b && !isNaN(a)
Mutant 56 in complex.js: a < b replaced with a < b || isNaN(a) && !isNaN(b)
Mutant 57 in complex.js: 1 + b * b replaced with 1 - b * b
Mutant 58 in complex.js: 1 + b * b replaced with 1 + Math.sqrt(b * b)
Mutant 59 in complex.js: 1 + b * b replaced with b * b / 10
Mutant 60 in complex.js: 'Invalid Param' replaced with 'Invalid parameter'
Mutant 61 in complex.js: Math.abs replaced with 0
Mutant 62 in complex.js: Math.abs replaced with 1
Mutant 63 in complex.js: Math.abs replaced with Infinity
Mutant 64 in complex.js: a replaced with b
Mutant 65 in complex.js: a replaced with a + 1
Mutant 66 in complex.js: a replaced with -a
Mutant 67 in complex.js: Math.abs replaced with Math.max
Mutant 68 in complex.js: Math.abs replaced with Math.min
Mutant 69 in complex.js: Math.abs replaced with Math.round
Mutant 70 in complex.js: b replaced with _b * 2
Mutant 71 in complex.js: b replaced with Math.sqrt(b)
Mutant 72 in complex.js: b replaced with Number(b)
Mutant 73 in complex.js: a === 0 replaced with a !== 0
Mutant 74 in complex.js: a === 0 replaced with b === 0
Mutant 75 in complex.js: a === 0 replaced with a + b !== 0
Mutant 76 in complex.js: _b replaced with _c
Mutant 77 in complex.js: _b replaced with _a
Mutant 78 in complex.js: _b replaced with _d
Mutant 79 in complex.js: b === 0 replaced with a === 0
Mutant 80 in complex.js: b === 0 replaced with b !== 0
Mutant 81 in complex.js: b === 0 replaced with a % b === 0
Mutant 82 in complex.js: Math.log replaced with Math.sqrt
Mutant 83 in complex.js: Math.log replaced with Math.abs
Mutant 84 in complex.js: Math.log replaced with c.mul
Mutant 85 in complex.js: _a replaced with a + 1
Mutant 86 in complex.js: _a replaced with _b
Mutant 87 in complex.js: _a replaced with _a * _b
Mutant 88 in complex.js: _a < 3000 && _b < 3000 replaced with _a < 4000 && _b < 5000
Mutant 89 in complex.js: _a < 3000 && _b < 3000 replaced with _a < _b - 1000 && _b < 2000
Mutant 90 in complex.js: _a < 3000 && _b < 3000 replaced with !Math.sqrt(_a * _a + _b * _b)
Mutant 91 in complex.js: Math.log replaced with Math.abs
Mutant 92 in complex.js: Math.log replaced with Math.sqrt
Mutant 93 in complex.js: Math.log replaced with x => x
Mutant 94 in complex.js: a * a + b * b replaced with b * b + a * a
Mutant 95 in complex.js: a * a + b * b replaced with (a + b) * (a + b)
Mutant 96 in complex.js: a * a + b * b replaced with Math.sqrt(a * a + b * b) / 2
Mutant 97 in complex.js: Math.log replaced with Math.log10
Mutant 98 in complex.js: Math.log replaced with Math.exp
Mutant 99 in complex.js: Math.log replaced with Math.log2
Mutant 100 in complex.js: a * a + b * b replaced with b * b + a * a
Mutant 101 in complex.js: a * a + b * b replaced with a * b + b * a
Mutant 102 in complex.js: a * a + b * b replaced with a + b + a * b
Mutant 103 in complex.js: b !== undefined replaced with z['im'] !== undefined
Mutant 104 in complex.js: b !== undefined replaced with z['im'] !== null
Mutant 105 in complex.js: b !== undefined replaced with !!z['im']
Mutant 106 in complex.js: typeof a replaced with isFinite(a)
Mutant 107 in complex.js: typeof a replaced with a === null
Mutant 108 in complex.js: typeof a replaced with typeof a === 'string'
Mutant 109 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in a && a !== null && 'arg' in a && a !== null
Mutant 110 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in a && 'arg' in b || 'arg' in a && 'abs' in b
Mutant 111 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in a && 'arg' in b || a === null && 'arg' in b
Mutant 112 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with Number.isFinite(a['abs']) || Number.isFinite(a['arg'])
Mutant 113 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with !Number.isFinite(a['abs'] || a['arg'])
Mutant 114 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with Number.isFinite(a['abs'] * a['arg'])
Mutant 115 in complex.js: Number.isFinite replaced with !a['abs']
Mutant 116 in complex.js: Number.isFinite replaced with a['abs'] !== 1
Mutant 117 in complex.js: a['abs'] replaced with a['abs'] + 1
Mutant 118 in complex.js: a['abs'] replaced with a['abs'] * 2
Mutant 119 in complex.js: a['abs'] replaced with a['abs'] / 2
Mutant 120 in complex.js: Number.isFinite replaced with a['arg'] > 0
Mutant 121 in complex.js: Number.isFinite replaced with a['arg'] < 0
Mutant 122 in complex.js: a['arg'] replaced with a('arg')
Mutant 123 in complex.js: Math.cos replaced with Math.sin
Mutant 124 in complex.js: Math.cos replaced with Math.tan
Mutant 125 in complex.js: Math.cos replaced with Math.acos
Mutant 126 in complex.js: a['arg'] replaced with a
Mutant 127 in complex.js: a['arg'] replaced with b
Mutant 128 in complex.js: a['arg'] replaced with a.arg
Mutant 129 in complex.js: Math.sin replaced with Math.cos
Mutant 130 in complex.js: Math.sin replaced with Math.sqrt
Mutant 131 in complex.js: Math.sin replaced with Math.abs
Mutant 132 in complex.js: a['arg'] replaced with b
Mutant 133 in complex.js: a['arg'] replaced with a * Math.sin(Math.PI / 2)
Mutant 134 in complex.js: a['arg'] replaced with Math.atan(b / a)
Mutant 135 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with !Number.isNaN(a['r']) && Number.isFinite(a['phi'])
Mutant 136 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with Number.isNaN(a['r']) || Number.isNaN(a['phi'])
Mutant 137 in complex.js: Number.isFinite replaced with !Number.isFinite
Mutant 138 in complex.js: Number.isFinite replaced with Number.isSafeInteger
Mutant 139 in complex.js: Number.isFinite replaced with Math.abs
Mutant 140 in complex.js: a['r'] replaced with a['abs']
Mutant 141 in complex.js: a['r'] replaced with 0
Mutant 142 in complex.js: a['r'] replaced with a['im']
Mutant 143 in complex.js: Number.isFinite replaced with !Number.isFinite
Mutant 144 in complex.js: a['phi'] replaced with a['psi']
Mutant 145 in complex.js: a['phi'] replaced with b['phi']
Mutant 146 in complex.js: a['phi'] replaced with a['phi'] + 1
Mutant 147 in complex.js: Math.cos replaced with Math.sin
Mutant 148 in complex.js: Math.cos replaced with Math.tan
Mutant 149 in complex.js: a['phi'] replaced with a['abs']
Mutant 150 in complex.js: a['phi'] replaced with a['arg']
Mutant 151 in complex.js: a['phi'] replaced with Math.atan(a)
Mutant 152 in complex.js: Math.sin replaced with Math.cos
Mutant 153 in complex.js: Math.sin replaced with z.im
Mutant 154 in complex.js: a['phi'] replaced with a[1]
Mutant 155 in complex.js: a['phi'] replaced with a[0]
Mutant 156 in complex.js: a['phi'] replaced with b
Mutant 157 in complex.js: a.length === 2 replaced with a.length < 2
Mutant 158 in complex.js: a.length === 2 replaced with a.length > 2
Mutant 159 in complex.js: a.length === 2 replaced with a.length === 3
Mutant 160 in complex.js: tokens === null replaced with tokens.length > 0
Mutant 161 in complex.js: tokens === null replaced with tokens[0] === ''
Mutant 162 in complex.js: tokens === null replaced with !tokens.includes('')
Mutant 163 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with !(c === ' ' || c === '\t' || c === '\n')
Mutant 164 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === '!'
Mutant 165 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === 'a'
Mutant 166 in complex.js: c === '+' replaced with c != '+'
Mutant 167 in complex.js: c === '+' replaced with c === '-'
Mutant 168 in complex.js: c === '+' replaced with !isNaN(c)
Mutant 169 in complex.js: c === '-' replaced with c === ' -'
Mutant 170 in complex.js: c === '-' replaced with c === ' - '
Mutant 171 in complex.js: c === 'i' || c === 'I' replaced with c != 'i' && c != 'I'
Mutant 172 in complex.js: c === 'i' || c === 'I' replaced with c === 'I'
Mutant 173 in complex.js: c === 'i' || c === 'I' replaced with false
Mutant 174 in complex.js: plus + minus === 0 replaced with plus + minus === 1
Mutant 175 in complex.js: plus + minus === 0 replaced with plus === minus
Mutant 176 in complex.js: plus + minus === 0 replaced with !plus === !minus
Mutant 177 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1] === ' '
Mutant 178 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with String(tokens[i + 1]) !== ' '
Mutant 179 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1].trim() !== ''
Mutant 180 in complex.js: tokens[i + 1] replaced with tokens[i - 1]
Mutant 181 in complex.js: tokens[i + 1] replaced with tokens[i + 2]
Mutant 182 in complex.js: tokens[i + 1] replaced with tokens[i]
Mutant 183 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 3 ? '-' : '') + '1'
Mutant 184 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? '' : '-') + '1'
Mutant 185 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with (minus % 2 ? 'x' : '') + '1'
Mutant 186 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus === 0 || !isNaN(c)
Mutant 187 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus === 1 || isNaN(c)
Mutant 188 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus === Infinity || isNaN(c)
Mutant 189 in complex.js: isNaN replaced with null
Mutant 190 in complex.js: c replaced with c + d
Mutant 191 in complex.js: c replaced with a + b
Mutant 192 in complex.js: c replaced with 2 * c
Mutant 193 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with c === 'i'
Mutant 194 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with c < 'i'
Mutant 195 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with c >= 'i'
Mutant 196 in complex.js: parseFloat replaced with NaN
Mutant 197 in complex.js: parseFloat replaced with 0
Mutant 198 in complex.js: (minus % 2 ? '-' : '') + c replaced with minus > 0 ? c : c
Mutant 199 in complex.js: (minus % 2 ? '-' : '') + c replaced with Math.cos(c)
Mutant 200 in complex.js: (minus % 2 ? '-' : '') + c replaced with (plus % 2 ? '-' : '') + c
Mutant 201 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 3 ? '-' : '') + c
Mutant 202 in complex.js: (minus % 2 ? '-' : '') + c replaced with (plus % 2 ? '-' : '') + d
Mutant 203 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with z['re'] === NaN || z['im'] === NaN
Mutant 204 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with isFinite(z['re']) || isFinite(z['im'])
Mutant 205 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with isNaN(z['re'] + z['im'])
Mutant 206 in complex.js: z['re'] replaced with Infinity
Mutant 207 in complex.js: z['re'] replaced with -NaN
Mutant 208 in complex.js: isNaN replaced with 1 + this['im']
Mutant 209 in complex.js: isNaN replaced with this['re'] - z['re']
Mutant 210 in complex.js: isNaN replaced with this['im'] * z['im']
Mutant 211 in complex.js: z['im'] replaced with z['im'] + z['re']
Mutant 212 in complex.js: z['im'] replaced with 0
Mutant 213 in complex.js: !(this instanceof Complex) replaced with this instanceof Function
Mutant 214 in complex.js: parse(a, b) replaced with parse(a + b)
Mutant 215 in complex.js: parse(a, b) replaced with parse(a * b)
Mutant 216 in complex.js: parse(a, b) replaced with parse(a / b)
Mutant 217 in complex.js: a replaced with a + 1
Mutant 218 in complex.js: a replaced with 2 * a
Mutant 219 in complex.js: a replaced with a - 1
Mutant 220 in complex.js: b replaced with this
Mutant 221 in complex.js: b replaced with null
Mutant 222 in complex.js: b replaced with {}
Mutant 223 in complex.js: this['abs'] replaced with -this['abs']
Mutant 224 in complex.js: this['abs'] replaced with this['abs'] * 2
Mutant 225 in complex.js: this['abs'] replaced with this['abs'] + 1
Mutant 226 in complex.js: this['isInfinite'] replaced with this['isZero']
Mutant 227 in complex.js: z['isInfinite'] replaced with z !== NaN
Mutant 228 in complex.js: z['isInfinite'] replaced with -z === z
Mutant 229 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with isNaN(z['re']) || isNaN(z['im'])
Mutant 230 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with z['re'] === 0 || z['im'] === 0
Mutant 231 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['re'] < z['re'] || this['im'] < z['im']
Mutant 232 in complex.js: this['isInfinite'] replaced with z['isInfinite']
Mutant 233 in complex.js: this['isInfinite'] replaced with !z['isInfinite']
Mutant 234 in complex.js: this['isInfinite'] replaced with c === 0
Mutant 235 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 236 in complex.js: z['isInfinite'] replaced with !z['isInfinite']
Mutant 237 in complex.js: z['isInfinite'] replaced with !z['isNaN']
Mutant 238 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 239 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() && !z['isInfinite']()
Mutant 240 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with z['isInfinite']() && !this['isInfinite']()
Mutant 241 in complex.js: this['isInfinite'] replaced with z['isZero']
Mutant 242 in complex.js: this['isInfinite'] replaced with !this['isFinite']
Mutant 243 in complex.js: z['isInfinite'] replaced with z['isFinite']
Mutant 244 in complex.js: z['isInfinite'] replaced with z['round']
Mutant 245 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with !this['isInfinite']() || !z['isInfinite']()
Mutant 246 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with !this['isInfinite']() && !z['isInfinite']()
Mutant 247 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 248 in complex.js: this['isInfinite'] replaced with this['isNegativeInfinity']
Mutant 249 in complex.js: z['isInfinite'] replaced with z['im']
Mutant 250 in complex.js: z['isInfinite'] replaced with z['re']
Mutant 251 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with this['isInfinite']() && z['isZero']()
Mutant 252 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with this['isZero']() && z['isInfinite']()
Mutant 253 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with !(this['isInfinite']() && z['isZero']()) && !(this['isZero']() && z['isInfinite']())
Mutant 254 in complex.js: this['isInfinite'] replaced with this['abs']
Mutant 255 in complex.js: this['isInfinite'] replaced with this['re'] + this['im']
Mutant 256 in complex.js: z['isZero'] replaced with z['im'] === 0
Mutant 257 in complex.js: z['isZero'] replaced with z['real'] === 0
Mutant 258 in complex.js: z['isZero'] replaced with z['abs'] > 1
Mutant 259 in complex.js: this['isZero'] replaced with this['isZero'] && this['im'] === 0
Mutant 260 in complex.js: this['isZero'] replaced with !this['isZero']
Mutant 261 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 262 in complex.js: z['isInfinite'] replaced with z['sgn']
Mutant 263 in complex.js: z['isInfinite'] replaced with z['mag']
Mutant 264 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with z['isInfinite']() && z['isInfinite']()
Mutant 265 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['re'] === Infinity && z['re'] === Infinity
Mutant 266 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['abs']().equals(Infinity) && z['abs']().equals(Infinity)
Mutant 267 in complex.js: this['isInfinite'] replaced with !z['isFinite']
Mutant 268 in complex.js: this['isInfinite'] replaced with this['isInfinite'] && z['isFinite']
Mutant 269 in complex.js: z['isInfinite'] replaced with z['isZero']
Mutant 270 in complex.js: z['isInfinite'] replaced with a > 0
Mutant 271 in complex.js: z['isInfinite'] replaced with !z['isInfinite']
Mutant 272 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] === 0 && this['im'] === 0 || z['im'] === 1 && this['im'] === 1
Mutant 273 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with !(z['im'] === 0 && this['im'] === 0)
Mutant 274 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] !== 0 && this['im'] !== 0
Mutant 275 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isNaN']() && z['isZero']() || this['isInfinite']() && z['isInfinite']()
Mutant 276 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isNaN']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() && this['isEven']
Mutant 277 in complex.js: z['isZero'] replaced with z['isNaN']
Mutant 278 in complex.js: z['isZero'] replaced with z['re']
Mutant 279 in complex.js: this['isInfinite'] replaced with this['isZero']
Mutant 280 in complex.js: this['isInfinite'] replaced with null
Mutant 281 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 282 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isInfinite']() && z['isZero']()
Mutant 283 in complex.js: this['isInfinite'] replaced with !this['isInfinite']
Mutant 284 in complex.js: this['isInfinite'] replaced with this['isFinite']
Mutant 285 in complex.js: this['isInfinite'] replaced with !this['isNaN']
Mutant 286 in complex.js: z['isZero'] replaced with z['im'] === 0
Mutant 287 in complex.js: z['isZero'] replaced with z['re'] === 0
Mutant 288 in complex.js: z['isZero'] replaced with z['re'] !== 0
Mutant 289 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['isZero']() || z['isZero']()
Mutant 290 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['isZero']() && z['isInfinite']()
Mutant 291 in complex.js: this['isZero']() || z['isInfinite']() replaced with z['isZero']() && this['isInfinite']()
Mutant 292 in complex.js: z['isInfinite'] replaced with z['isNaN']
Mutant 293 in complex.js: z['isInfinite'] replaced with !z['isInfinite']
Mutant 294 in complex.js: z['isInfinite'] replaced with a !== z['re']
Mutant 295 in complex.js: 0 === d replaced with false
Mutant 296 in complex.js: 0 === d replaced with null
Mutant 297 in complex.js: 0 === d replaced with this.d === 0
Mutant 298 in complex.js: Math.abs(c) < Math.abs(d) replaced with c < d
Mutant 299 in complex.js: Math.abs(c) < Math.abs(d) replaced with c > d
Mutant 300 in complex.js: Math.abs replaced with 2 * Math.PI
Mutant 301 in complex.js: c replaced with z['re']
Mutant 302 in complex.js: c replaced with z['im']
Mutant 303 in complex.js: c replaced with z['re'] * z['im']
Mutant 304 in complex.js: Math.abs replaced with 0
Mutant 305 in complex.js: Math.abs replaced with x
Mutant 306 in complex.js: Math.abs replaced with 5
Mutant 307 in complex.js: d replaced with b * b
Mutant 308 in complex.js: d replaced with c * c
Mutant 309 in complex.js: d replaced with a * c
Mutant 310 in complex.js: z['isZero']() replaced with z['isFinite']()
Mutant 311 in complex.js: z['isZero']() replaced with z['re'] === 0
Mutant 312 in complex.js: z['isZero']() replaced with z['im'] === 0
Mutant 313 in complex.js: z['isZero'] replaced with z['abs']
Mutant 314 in complex.js: z['im'] === 0 replaced with a === 0
Mutant 315 in complex.js: z['im'] === 0 replaced with b === 0
Mutant 316 in complex.js: z['im'] === 0 replaced with a === b
Mutant 317 in complex.js: b === 0 && a > 0 replaced with b === a && b > 0
Mutant 318 in complex.js: b === 0 && a > 0 replaced with a < 0
Mutant 319 in complex.js: b === 0 && a > 0 replaced with b === 0 && a < 0
Mutant 320 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(a, z['im'])
Mutant 321 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(z['re'], a)
Mutant 322 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(a + z['im'])
Mutant 323 in complex.js: Math.pow replaced with Math.sqrt
Mutant 324 in complex.js: Math.pow replaced with Math.abs
Mutant 325 in complex.js: a replaced with a - 1
Mutant 326 in complex.js: a replaced with b
Mutant 327 in complex.js: a replaced with a + b
Mutant 328 in complex.js: z['re'] replaced with z['im']
Mutant 329 in complex.js: z['re'] replaced with 0
Mutant 330 in complex.js: z['re'] replaced with NaN
Mutant 331 in complex.js: a === 0 replaced with a = b
Mutant 332 in complex.js: a === 0 replaced with a !== b
Mutant 333 in complex.js: a === 0 replaced with a > b
Mutant 334 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] % 3 + 3) % 3
Mutant 335 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] % 2 + 2) % 2
Mutant 336 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] % 1 + 1) % 1
Mutant 337 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, a['re'])
Mutant 338 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'])
Mutant 339 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'] + z['re'])
Mutant 340 in complex.js: Math.pow replaced with Math.log
Mutant 341 in complex.js: Math.pow replaced with Math.abs
Mutant 342 in complex.js: Math.pow replaced with Math.sqrt
Mutant 343 in complex.js: b replaced with b * b
Mutant 344 in complex.js: b replaced with c * d
Mutant 345 in complex.js: b replaced with a
Mutant 346 in complex.js: z['re'] replaced with z['im']
Mutant 347 in complex.js: z['re'] replaced with z['abs']()
Mutant 348 in complex.js: z['re'] replaced with z['arg']()
Mutant 349 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(2 * z['re'])
Mutant 350 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(z['re'] * z['re'])
Mutant 351 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(Math.sqrt(z['re']))
Mutant 352 in complex.js: b replaced with b + 1
Mutant 353 in complex.js: b replaced with b * 2
Mutant 354 in complex.js: b replaced with b / 2
Mutant 355 in complex.js: z['re'] replaced with -z['re']
Mutant 356 in complex.js: z['re'] replaced with z['im']
Mutant 357 in complex.js: z['re'] replaced with z['im'] / z['re']
Mutant 358 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(-b)
Mutant 359 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(z['im'])
Mutant 360 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(Math.abs(z['im']))
Mutant 361 in complex.js: Math.pow replaced with Math.log
Mutant 362 in complex.js: Math.pow replaced with a + b
Mutant 363 in complex.js: Math.pow replaced with b - a
Mutant 364 in complex.js: b replaced with a
Mutant 365 in complex.js: b replaced with c
Mutant 366 in complex.js: b replaced with this['re']
Mutant 367 in complex.js: z['re'] replaced with z['re'] + 1
Mutant 368 in complex.js: z['re'] replaced with z['re'] * 2
Mutant 369 in complex.js: z['re'] replaced with z['re'] - 1
Mutant 370 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['im'])
Mutant 371 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, z['re'] + 1)
Mutant 372 in complex.js: Math.pow replaced with a * b
Mutant 373 in complex.js: b replaced with a
Mutant 374 in complex.js: b replaced with a * 2
Mutant 375 in complex.js: b replaced with i * b
Mutant 376 in complex.js: z['re'] replaced with z['im']
Mutant 377 in complex.js: z['re'] replaced with z['im'] * 2
Mutant 378 in complex.js: z['re'] replaced with z['re'] - z['im']
Mutant 379 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with z['re'] === 0 && b === 0 && a > 0 && z['im'] >= 0
Mutant 380 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a === 0 || b === 0 && z['re'] > 0 && z['im'] >= 0
Mutant 381 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a + b)
Mutant 382 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a - b)
Mutant 383 in complex.js: Math.atan2(b, a) replaced with Math.atan2(b - a)
Mutant 384 in complex.js: Math.atan2 replaced with Math.acos
Mutant 385 in complex.js: Math.atan2 replaced with Math.sin
Mutant 386 in complex.js: Math.atan2 replaced with Math.tan
Mutant 387 in complex.js: b replaced with a
Mutant 388 in complex.js: b replaced with 2 * b
Mutant 389 in complex.js: b replaced with sqrt(pow(a, 2) + pow(b, 2))
Mutant 390 in complex.js: a replaced with 0
Mutant 391 in complex.js: a replaced with a + 1
Mutant 392 in complex.js: a replaced with b / a
Mutant 393 in complex.js: logHypot(a, b) replaced with logHypot(b, a)
Mutant 394 in complex.js: logHypot(a, b) replaced with logHypot(a + b, a - b)
Mutant 395 in complex.js: logHypot(a, b) replaced with logHypot(a * b, a / b)
Mutant 396 in complex.js: a replaced with a + b
Mutant 397 in complex.js: a replaced with a - b
Mutant 398 in complex.js: a replaced with a * b
Mutant 399 in complex.js: b replaced with -b
Mutant 400 in complex.js: b replaced with a
Mutant 401 in complex.js: b replaced with b + 1
Mutant 402 in complex.js: Math.exp replaced with a - 1
Mutant 403 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['re'] * loh - z['im'] * arg + Math.PI
Mutant 404 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['re'] * loh - z['im'] * arg + 2 * Math.PI
Mutant 405 in complex.js: Math.cos replaced with Math.cosh
Mutant 406 in complex.js: b replaced with -b
Mutant 407 in complex.js: b replaced with 2 * b
Mutant 408 in complex.js: b replaced with b + 1
Mutant 409 in complex.js: Math.sin replaced with Math.cos
Mutant 410 in complex.js: Math.sin replaced with Math.sqrt
Mutant 411 in complex.js: Math.sin replaced with Math.PI
Mutant 412 in complex.js: b replaced with b + 1
Mutant 413 in complex.js: b replaced with -b
Mutant 414 in complex.js: b replaced with a + b
Mutant 415 in complex.js: this['abs'] replaced with DONE
Mutant 416 in complex.js: a >= 0 replaced with a > 0
Mutant 417 in complex.js: a >= 0 replaced with b > 0
Mutant 418 in complex.js: a >= 0 replaced with Math.abs(a - b) >= 0
Mutant 419 in complex.js: b === 0 replaced with a === 0
Mutant 420 in complex.js: b === 0 replaced with b !== 0
Mutant 421 in complex.js: b === 0 replaced with a + b === 0
Mutant 422 in complex.js: a replaced with a * a + b * b
Mutant 423 in complex.js: a replaced with a * a - b * b
Mutant 424 in complex.js: a replaced with a * a / (b * b)
Mutant 425 in complex.js: 2.0 * (r + a) replaced with r - a
Mutant 426 in complex.js: 2.0 * (r + a) replaced with r + 2 * a
Mutant 427 in complex.js: 2.0 * (r + a) replaced with r / a
Mutant 428 in complex.js: b replaced with a
Mutant 429 in complex.js: b replaced with 0
Mutant 430 in complex.js: Math.sqrt replaced with 1 / Math.sqrt
Mutant 431 in complex.js: Math.sqrt replaced with a / b
Mutant 432 in complex.js: 2 * (r - a) replaced with 2 / (r - a)
Mutant 433 in complex.js: 2 * (r - a) replaced with (r + a) / 2
Mutant 434 in complex.js: 2 * (r - a) replaced with (r - a) / 2
Mutant 435 in complex.js: a <= 0 replaced with a < 0
Mutant 436 in complex.js: a <= 0 replaced with a > 0
Mutant 437 in complex.js: a <= 0 replaced with b > 0
Mutant 438 in complex.js: Math.sqrt replaced with -Math.sqrt
Mutant 439 in complex.js: Math.sqrt replaced with 1 / Math.sqrt
Mutant 440 in complex.js: Math.sqrt replaced with Math.abs
Mutant 441 in complex.js: 2.0 * (r - a) replaced with 2.0 * (r + a)
Mutant 442 in complex.js: 2.0 * (r - a) replaced with 2.0 * (r * a)
Mutant 443 in complex.js: 2.0 * (r - a) replaced with 2.0 * (a - r)
Mutant 444 in complex.js: Math.abs replaced with 0
Mutant 445 in complex.js: Math.abs replaced with 1
Mutant 446 in complex.js: Math.sqrt replaced with Math.cos
Mutant 447 in complex.js: Math.sqrt replaced with 3.14
Mutant 448 in complex.js: 2 * (r + a) replaced with 2 * (r - a)
Mutant 449 in complex.js: 2 * (r + a) replaced with 2 * (r + b)
Mutant 450 in complex.js: 2 * (r + a) replaced with 2 * (r + a * b)
Mutant 451 in complex.js: Math.exp replaced with Math.floor
Mutant 452 in complex.js: Math.exp replaced with Math.ceil
Mutant 453 in complex.js: Math.exp replaced with Math.sqrt
Mutant 454 in complex.js: this['re'] replaced with this['im']
Mutant 455 in complex.js: this['re'] replaced with this['abs']()
Mutant 456 in complex.js: this['re'] replaced with -this['re']
Mutant 457 in complex.js: this['im'] === 0 replaced with this['re'] == 0
Mutant 458 in complex.js: this['im'] === 0 replaced with this['im'] === Math.PI
Mutant 459 in complex.js: this['im'] === 0 replaced with this['re'] + this['im'] === 0
Mutant 460 in complex.js: this['im'] replaced with this['foo']
Mutant 461 in complex.js: this['im'] replaced with 10 * this['im']
Mutant 462 in complex.js: this['im'] replaced with this['im/2']
Mutant 463 in complex.js: Math.sin replaced with Math.ceil
Mutant 464 in complex.js: Math.sin replaced with Math.sqrt
Mutant 465 in complex.js: Math.sin replaced with Math.PI
Mutant 466 in complex.js: this['im'] replaced with Math.abs(this['im'])
Mutant 467 in complex.js: this['im'] replaced with Math.floor(this['im'])
Mutant 468 in complex.js: this['im'] replaced with Math.sqrt(this['im'])
Mutant 469 in complex.js: a replaced with Math.random()
Mutant 470 in complex.js: a replaced with a + 1
Mutant 471 in complex.js: a replaced with b
Mutant 472 in complex.js: Math.cos replaced with Math.sin
Mutant 473 in complex.js: b replaced with b + 1
Mutant 474 in complex.js: b replaced with b * 2
Mutant 475 in complex.js: b replaced with 2 * b
Mutant 476 in complex.js: Math.exp replaced with Math.sin
Mutant 477 in complex.js: Math.exp replaced with Math.PI
Mutant 478 in complex.js: Math.exp replaced with this.re
Mutant 479 in complex.js: a replaced with a + b
Mutant 480 in complex.js: a replaced with a - b
Mutant 481 in complex.js: a replaced with b - a
Mutant 482 in complex.js: Math.sin replaced with Math.tan
Mutant 483 in complex.js: Math.sin replaced with 1 + Math.sin
Mutant 484 in complex.js: Math.sin replaced with Math.cos
Mutant 485 in complex.js: b replaced with -b
Mutant 486 in complex.js: b === 0 && a > 0 replaced with a == 0 && b > 0
Mutant 487 in complex.js: b === 0 && a > 0 replaced with b === 0 && a >= 0
Mutant 488 in complex.js: b === 0 && a > 0 replaced with a === 0 || b > 0
Mutant 489 in complex.js: logHypot(a, b) replaced with logHypot(a * b)
Mutant 490 in complex.js: logHypot(a, b) replaced with logHypot(a / b)
Mutant 491 in complex.js: logHypot(a, b) replaced with logHypot(b / a)
Mutant 492 in complex.js: logHypot replaced with 42
Mutant 493 in complex.js: logHypot replaced with a + b
Mutant 494 in complex.js: a replaced with a + 10
Mutant 495 in complex.js: a replaced with b + 10
Mutant 496 in complex.js: a replaced with a * b
Mutant 497 in complex.js: b replaced with 0
Mutant 498 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a, b)
Mutant 499 in complex.js: Math.atan2(b, a) replaced with Math.atan2(b + a)
Mutant 500 in complex.js: Math.atan2(b, a) replaced with Math.atan2(a * b)
Mutant 501 in complex.js: Math.atan2 replaced with Math.PI
Mutant 502 in complex.js: Math.atan2 replaced with this['im'] / this['re']
Mutant 503 in complex.js: b replaced with b + 1
Mutant 504 in complex.js: b replaced with Cos(b)
Mutant 505 in complex.js: b replaced with Mag(a, b)
Mutant 506 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['re'] * this['im'])
Mutant 507 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['im'] - this['re'])
Mutant 508 in complex.js: hypot(this['re'], this['im']) replaced with hypot(Math.abs(this['re']) + Math.abs(this['im']))
Mutant 509 in complex.js: this['re'] replaced with this['im']
Mutant 510 in complex.js: this['re'] replaced with -this['re']
Mutant 511 in complex.js: this['re'] replaced with 0
Mutant 512 in complex.js: this['im'] replaced with this['re']
Mutant 513 in complex.js: this['im'] replaced with -this['im']
Mutant 514 in complex.js: this['im'] replaced with 0
Mutant 515 in complex.js: this['im'] replaced with this['re']
Mutant 516 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 517 in complex.js: this['im'] replaced with 2 * this['im']
Mutant 518 in complex.js: this['re'] replaced with -this['re']
Mutant 519 in complex.js: this['re'] replaced with this['im']
Mutant 520 in complex.js: this['re'] replaced with this['re'] + this['im']
Mutant 521 in complex.js: Math.sin replaced with Math.cos
Mutant 522 in complex.js: Math.sin replaced with a * b
Mutant 523 in complex.js: a replaced with a + 1
Mutant 524 in complex.js: a replaced with a - 1
Mutant 525 in complex.js: a replaced with 2 * a
Mutant 526 in complex.js: b replaced with b * im
Mutant 527 in complex.js: b replaced with a + b
Mutant 528 in complex.js: b replaced with Math.cos(a) * Math.sin(b)
Mutant 529 in complex.js: b replaced with -b
Mutant 530 in complex.js: b replaced with a
Mutant 531 in complex.js: b replaced with b / 2
Mutant 532 in complex.js: Math.cos replaced with -Math.cos
Mutant 533 in complex.js: Math.cos replaced with Math.sin
Mutant 534 in complex.js: Math.cos replaced with Math.PI
Mutant 535 in complex.js: a replaced with -a
Mutant 536 in complex.js: a replaced with 1 / a
Mutant 537 in complex.js: a replaced with a ^ 2
Mutant 538 in complex.js: b replaced with a
Mutant 539 in complex.js: b replaced with b + 1
Mutant 540 in complex.js: b replaced with Math.cos(b)
Mutant 541 in complex.js: Math.sin replaced with Math.cos
Mutant 542 in complex.js: Math.sin replaced with Math.tan
Mutant 543 in complex.js: Math.sin replaced with Math.csc
Mutant 544 in complex.js: a replaced with Math.sinh(b)
Mutant 545 in complex.js: a replaced with Math.cos(b)
Mutant 546 in complex.js: a replaced with Math.tan(b)
Mutant 547 in complex.js: sinh replaced with sin
Mutant 548 in complex.js: sinh replaced with cos
Mutant 549 in complex.js: sinh replaced with tan
Mutant 550 in complex.js: b replaced with -b
Mutant 551 in complex.js: b replaced with b + 1
Mutant 552 in complex.js: b replaced with Math.abs(b)
Mutant 553 in complex.js: Math.cos replaced with Math.ceil
Mutant 554 in complex.js: Math.cos replaced with Math.sin
Mutant 555 in complex.js: a replaced with a * b
Mutant 556 in complex.js: a replaced with a + 1
Mutant 557 in complex.js: a replaced with a / (b - 1)
Mutant 558 in complex.js: cosh replaced with sinh
Mutant 559 in complex.js: cosh replaced with tanh
Mutant 560 in complex.js: b replaced with 0
Mutant 561 in complex.js: b replaced with null
Mutant 562 in complex.js: b replaced with Math.PI
Mutant 563 in complex.js: a replaced with a - 1
Mutant 564 in complex.js: sinh replaced with cosh
Mutant 565 in complex.js: sinh replaced with Math.sinh
Mutant 566 in complex.js: sinh replaced with this['sinh']
Mutant 567 in complex.js: b replaced with b + 1
Mutant 568 in complex.js: b replaced with b - 1
Mutant 569 in complex.js: b replaced with 2 * b
Mutant 570 in complex.js: a replaced with b
Mutant 571 in complex.js: a replaced with a + b
Mutant 572 in complex.js: a replaced with a * b
Mutant 573 in complex.js: b replaced with squash(b)
Mutant 574 in complex.js: b replaced with b * Math.sign(b)
Mutant 575 in complex.js: b replaced with b ^ 2
Mutant 576 in complex.js: Math.sin replaced with Math.cos
Mutant 577 in complex.js: Math.sin replaced with Math.abs
Mutant 578 in complex.js: Math.sin replaced with Math.sqrt
Mutant 579 in complex.js: a replaced with Math.tan(a) - Math.tan(b)
Mutant 580 in complex.js: a replaced with Math.sin(a) - Math.sin(b)
Mutant 581 in complex.js: a replaced with Math.cos(a) - Math.cos(b)
Mutant 582 in complex.js: b replaced with b + 1
Mutant 583 in complex.js: b replaced with b * 2
Mutant 584 in complex.js: b replaced with a + b
Mutant 585 in complex.js: cosh replaced with -cos
Mutant 586 in complex.js: cosh replaced with Math.sin
Mutant 587 in complex.js: cosh replaced with Math.tan
Mutant 588 in complex.js: 2 * b replaced with 2 * a
Mutant 589 in complex.js: 2 * b replaced with b + 1
Mutant 590 in complex.js: 2 * b replaced with a - b
Mutant 591 in complex.js: Math.cos replaced with Math.sin
Mutant 592 in complex.js: Math.cos replaced with Math.tan
Mutant 593 in complex.js: Math.cos replaced with Math.sec
Mutant 594 in complex.js: 2 * a replaced with 2 * b
Mutant 595 in complex.js: 2 * a replaced with 2 * b + 1
Mutant 596 in complex.js: 2 * a replaced with -2 * b
Mutant 597 in complex.js: Math.cos replaced with Math.acos
Mutant 598 in complex.js: Math.cos replaced with Math.sin
Mutant 599 in complex.js: Math.cos replaced with Math.tan
Mutant 600 in complex.js: a replaced with b
Mutant 601 in complex.js: a replaced with 2 * a
Mutant 602 in complex.js: a replaced with a + b
Mutant 603 in complex.js: cosh replaced with sinh
Mutant 604 in complex.js: cosh replaced with -sinh
Mutant 605 in complex.js: cosh replaced with cosh + 1
Mutant 606 in complex.js: b replaced with b + 1
Mutant 607 in complex.js: b replaced with b - 1
Mutant 608 in complex.js: b replaced with -b
Mutant 609 in complex.js: a replaced with a + b * b
Mutant 610 in complex.js: a replaced with a + b + c
Mutant 611 in complex.js: a replaced with 2 * a + b
Mutant 612 in complex.js: sinh replaced with Math.tanh
Mutant 613 in complex.js: sinh replaced with 宿
Mutant 614 in complex.js: b replaced with a
Mutant 615 in complex.js: b replaced with b * 2
Mutant 616 in complex.js: b replaced with b - a
Mutant 617 in complex.js: cosh replaced with sinh
Mutant 618 in complex.js: cosh replaced with sqrt
Mutant 619 in complex.js: cosh replaced with abs
Mutant 620 in complex.js: 2 * b replaced with b - 1
Mutant 621 in complex.js: Math.cos replaced with Math.sin
Mutant 622 in complex.js: Math.cos replaced with Math.acos
Mutant 623 in complex.js: Math.cos replaced with 2 * Math.cos
Mutant 624 in complex.js: 2 * a replaced with -1.5 * a
Mutant 625 in complex.js: 2 * a replaced with a + Math.PI
Mutant 626 in complex.js: 2 * a replaced with a * b
Mutant 627 in complex.js: a replaced with a + b
Mutant 628 in complex.js: a replaced with a - b
Mutant 629 in complex.js: cosh replaced with Math.acosh
Mutant 630 in complex.js: cosh replaced with Math.coth
Mutant 631 in complex.js: cosh replaced with Math.tanh
Mutant 632 in complex.js: b replaced with b + 1
Mutant 633 in complex.js: b replaced with b * b
Mutant 634 in complex.js: b replaced with b / 2
Mutant 635 in complex.js: a replaced with a == undefined
Mutant 636 in complex.js: a replaced with a === 'undefined'
Mutant 637 in complex.js: a replaced with typeof a === 'undefined'
Mutant 638 in complex.js: sinh replaced with cos
Mutant 639 in complex.js: sinh replaced with 0
Mutant 640 in complex.js: b replaced with b + 1
Mutant 641 in complex.js: b replaced with b - 1
Mutant 642 in complex.js: b replaced with b * 2
Mutant 643 in complex.js: a === 0 replaced with true
Mutant 644 in complex.js: a === 0 replaced with a !== 0
Mutant 645 in complex.js: a === 0 replaced with a == 0
Mutant 646 in complex.js: b === 1 replaced with b > 1
Mutant 647 in complex.js: b === 1 replaced with a === b
Mutant 648 in complex.js: b === 1 replaced with a + b === 1
Mutant 649 in complex.js: b === -1 replaced with b == 1
Mutant 650 in complex.js: b === -1 replaced with b == 2
Mutant 651 in complex.js: b === -1 replaced with b > 1
Mutant 652 in complex.js: b === 0 replaced with b === 1
Mutant 653 in complex.js: b === 0 replaced with b === NaN
Mutant 654 in complex.js: Math.atan2(1, a) replaced with Math.atan2(1, 0)
Mutant 655 in complex.js: Math.atan2(1, a) replaced with Math.atan2(1 + 0)
Mutant 656 in complex.js: Math.atan2(1, a) replaced with Math.atan2(1 - 0)
Mutant 657 in complex.js: Math.atan2 replaced with Math.PI - Math.atan2
Mutant 658 in complex.js: a replaced with b * Math.sqrt(1 + a)
Mutant 659 in complex.js: a replaced with b - a
Mutant 660 in complex.js: a replaced with b * Math.sqrt(a)
Mutant 661 in complex.js: a === 0 && b === 0 replaced with a !== 0 || b !== 0
Mutant 662 in complex.js: a === 0 && b === 0 replaced with a !== 0 && b !== 0
Mutant 663 in complex.js: a === 0 && b === 0 replaced with a === 0 || b === 0
Mutant 664 in complex.js: a === 0 && b === 0 replaced with a !== 0 && b !== 0
Mutant 665 in complex.js: a === 0 && b === 0 replaced with !a && !b
Mutant 666 in complex.js: a replaced with -a
Mutant 667 in complex.js: a replaced with a * a
Mutant 668 in complex.js: a replaced with Math.sqrt(a)
Mutant 669 in complex.js: b replaced with b + 1
Mutant 670 in complex.js: b replaced with b - 1
Mutant 671 in complex.js: b replaced with 2 * b
Mutant 672 in complex.js: a replaced with b
Mutant 673 in complex.js: a replaced with a + 1
Mutant 674 in complex.js: a replaced with a * b
Mutant 675 in complex.js: b replaced with c
Mutant 676 in complex.js: b replaced with b + 1
Mutant 677 in complex.js: b replaced with a
Mutant 678 in complex.js: cosh replaced with sinh
Mutant 679 in complex.js: cosh replaced with tanh
Mutant 680 in complex.js: cosh replaced with coth
Mutant 681 in complex.js: a replaced with a + 1
Mutant 682 in complex.js: a replaced with a * 2
Mutant 683 in complex.js: a replaced with -a
Mutant 684 in complex.js: Math.cos replaced with Math.sin
Mutant 685 in complex.js: Math.cos replaced with Infinity
Mutant 686 in complex.js: Math.cos replaced with 0
Mutant 687 in complex.js: b replaced with a
Mutant 688 in complex.js: b replaced with 0
Mutant 689 in complex.js: b replaced with b / d
Mutant 690 in complex.js: sinh replaced with asinh
Mutant 691 in complex.js: sinh replaced with tanh
Mutant 692 in complex.js: sinh replaced with 1 / sinh
Mutant 693 in complex.js: a replaced with a / (1 + b * b)
Mutant 694 in complex.js: a replaced with a % (1 + b * b)
Mutant 695 in complex.js: a replaced with a * (1 + b * b)
Mutant 696 in complex.js: Math.sin replaced with Math.cos
Mutant 697 in complex.js: Math.sin replaced with Math.tan
Mutant 698 in complex.js: Math.sin replaced with Math.abs
Mutant 699 in complex.js: b replaced with a ^ 2
Mutant 700 in complex.js: cosh replaced with cos
Mutant 701 in complex.js: cosh replaced with sin
Mutant 702 in complex.js: cosh replaced with acosh
Mutant 703 in complex.js: a replaced with cosh(a) + Math.cos(b)
Mutant 704 in complex.js: a replaced with Math.sin(b)
Mutant 705 in complex.js: Math.cos replaced with Math.sin
Mutant 706 in complex.js: Math.cos replaced with this.sin
Mutant 707 in complex.js: Math.cos replaced with sinh
Mutant 708 in complex.js: b replaced with a
Mutant 709 in complex.js: b replaced with this
Mutant 710 in complex.js: b replaced with () => b
Mutant 711 in complex.js: sinh replaced with cosh
Mutant 712 in complex.js: sinh replaced with tan
Mutant 713 in complex.js: sinh replaced with log
Mutant 714 in complex.js: a replaced with Math.PI / 2 - a / d
Mutant 715 in complex.js: a replaced with Math.PI / 2 - b / d
Mutant 716 in complex.js: a replaced with Math.PI / 2 - a / 0
Mutant 717 in complex.js: Math.sin replaced with Math.tan
Mutant 718 in complex.js: Math.sin replaced with Math.sinh
Mutant 719 in complex.js: Math.sin replaced with Math.asin
Mutant 720 in complex.js: b replaced with -Math.sin(b)
Mutant 721 in complex.js: b replaced with b + Math.PI
Mutant 722 in complex.js: b replaced with b * Math.PI
Mutant 723 in complex.js: cosh replaced with sinh
Mutant 724 in complex.js: cosh replaced with tanh
Mutant 725 in complex.js: cosh replaced with cos
Mutant 726 in complex.js: a replaced with a * a
Mutant 727 in complex.js: a replaced with -a
Mutant 728 in complex.js: a replaced with a + b
Mutant 729 in complex.js: Math.cos replaced with Math.min
Mutant 730 in complex.js: Math.cos replaced with Math.sin
Mutant 731 in complex.js: Math.cos replaced with Math.tan
Mutant 732 in complex.js: b replaced with sinh(b)
Mutant 733 in complex.js: b replaced with b * 2
Mutant 734 in complex.js: b replaced with b * 0.5
Mutant 735 in complex.js: sinh replaced with cosh
Mutant 736 in complex.js: sinh replaced with sin
Mutant 737 in complex.js: a replaced with -a
Mutant 738 in complex.js: a replaced with a + 1
Mutant 739 in complex.js: a replaced with 2 * a
Mutant 740 in complex.js: Math.sin replaced with Math.cos
Mutant 741 in complex.js: Math.sin replaced with -Math.sin
Mutant 742 in complex.js: Math.sin replaced with Math.tan
Mutant 743 in complex.js: b replaced with -sin(2 * b)
Mutant 744 in complex.js: b replaced with sin(b) * Math.PI
Mutant 745 in complex.js: Math.cos replaced with 2 * b - Math.cosh
Mutant 746 in complex.js: Math.cos replaced with -Math.sinh
Mutant 747 in complex.js: 2 * b replaced with 2 * b + 1
Mutant 748 in complex.js: 2 * b replaced with 2 * b - 1
Mutant 749 in complex.js: 2 * b replaced with 2 * b * 2
Mutant 750 in complex.js: cosh replaced with sin
Mutant 751 in complex.js: cosh replaced with Math.abs
Mutant 752 in complex.js: cosh replaced with 1 / Math.cos
Mutant 753 in complex.js: 2 * a replaced with 2 * b
Mutant 754 in complex.js: 2 * a replaced with a * b
Mutant 755 in complex.js: 2 * a replaced with a + b
Mutant 756 in complex.js: sinh replaced with cosh
Mutant 757 in complex.js: sinh replaced with tanh
Mutant 758 in complex.js: sinh replaced with acosh
Mutant 759 in complex.js: a replaced with b
Mutant 760 in complex.js: a replaced with a + 1
Mutant 761 in complex.js: a replaced with d * d
Mutant 762 in complex.js: Math.cos replaced with Math.sin
Mutant 763 in complex.js: b replaced with b + b
Mutant 764 in complex.js: b replaced with a + b
Mutant 765 in complex.js: b replaced with b - a
Mutant 766 in complex.js: a replaced with a + 1
Mutant 767 in complex.js: a replaced with a - 1
Mutant 768 in complex.js: a replaced with 2 * a
Mutant 769 in complex.js: Math.sin replaced with Math.cos
Mutant 770 in complex.js: Math.sin replaced with Math.tan
Mutant 771 in complex.js: Math.sin replaced with Math.sin + Math.cos
Mutant 772 in complex.js: b replaced with a
Mutant 773 in complex.js: b replaced with -b
Mutant 774 in complex.js: b replaced with sin(b)
Mutant 775 in complex.js: Math.cos replaced with Math.tan
Mutant 776 in complex.js: Math.cos replaced with Math.sinh
Mutant 777 in complex.js: Math.cos replaced with Math.acos
Mutant 778 in complex.js: 2 * b replaced with 2 * a
Mutant 779 in complex.js: 2 * b replaced with 1 / b
Mutant 780 in complex.js: 2 * b replaced with b + 1
Mutant 781 in complex.js: cosh replaced with sinh
Mutant 782 in complex.js: cosh replaced with Math.sinh
Mutant 783 in complex.js: a replaced with -a
Mutant 784 in complex.js: a replaced with a + 1
Mutant 785 in complex.js: a replaced with a * a
Mutant 786 in complex.js: Math.cos replaced with Math.tan
Mutant 787 in complex.js: Math.cos replaced with Math.sqrt
Mutant 788 in complex.js: Math.cos replaced with Math.random
Mutant 789 in complex.js: b replaced with a
Mutant 790 in complex.js: b replaced with a + b
Mutant 791 in complex.js: sinh replaced with cosh
Mutant 792 in complex.js: sinh replaced with tanh
Mutant 793 in complex.js: sinh replaced with coth
Mutant 794 in complex.js: a replaced with a + 1
Mutant 795 in complex.js: a replaced with a * 2
Mutant 796 in complex.js: a replaced with a / 2
Mutant 797 in complex.js: b replaced with b + 1
Mutant 798 in complex.js: b replaced with b * 2
Mutant 799 in complex.js: b replaced with b = 0
Mutant 800 in complex.js: this['asin'] replaced with this['asin'] + 1
Mutant 801 in complex.js: this['acos'] replaced with -this['acos']
Mutant 802 in complex.js: this['acos'] replaced with this['acos'] + this['asin']
Mutant 803 in complex.js: this['acos'] replaced with this['atan']
Mutant 804 in complex.js: res['im'] <= 0 replaced with res['im'] >= 0
Mutant 805 in complex.js: res['im'] <= 0 replaced with res['re'] >= 0
Mutant 806 in complex.js: res['im'] <= 0 replaced with Math.abs(res['im']) >= 0
Mutant 807 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['im'], x['re'])
Mutant 808 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] + x['im'])
Mutant 809 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] * x['im'])
Mutant 810 in complex.js: logHypot replaced with logHypotAtan2
Mutant 811 in complex.js: logHypot replaced with logSqrt
Mutant 812 in complex.js: logHypot replaced with atan
Mutant 813 in complex.js: x['im'] replaced with x['re']
Mutant 814 in complex.js: x['im'] replaced with x['im'] * 2
Mutant 815 in complex.js: x['im'] replaced with x['re'] + x['im']
Mutant 816 in complex.js: Math.atan2 replaced with Math.sin
Mutant 817 in complex.js: Math.atan2 replaced with Math.cos
Mutant 818 in complex.js: Math.atan2 replaced with Math.tan
Mutant 819 in complex.js: x['im'] replaced with x['re']
Mutant 820 in complex.js: x['im'] replaced with x['im'] * x['re']
Mutant 821 in complex.js: x['im'] replaced with x['im'] - x['re']
Mutant 822 in complex.js: temp replaced with tmp
Mutant 823 in complex.js: temp replaced with this.re
Mutant 824 in complex.js: temp replaced with Math.sin(b)
Mutant 825 in complex.js: a === 0 && b === 0 replaced with a > 0 && b === 0
Mutant 826 in complex.js: a === 0 && b === 0 replaced with a === 0 || b === 0
Mutant 827 in complex.js: a === 0 && b === 0 replaced with a < 0 && b === 0
Mutant 828 in complex.js: b === 0 replaced with a === 0
Mutant 829 in complex.js: b === 0 replaced with a !== 0 && b === 0
Mutant 830 in complex.js: b === 0 replaced with b !== 0
Mutant 831 in complex.js: a + Math.sqrt(a * a + 1) replaced with a + Math.sqrt(a * a - 1)
Mutant 832 in complex.js: a + Math.sqrt(a * a + 1) replaced with a + Math.sqrt(a * a * a)
Mutant 833 in complex.js: a + Math.sqrt(a * a + 1) replaced with a + Math.sqrt(a * 2)
Mutant 834 in complex.js: a * a + 1 replaced with a + 1
Mutant 835 in complex.js: a * a + 1 replaced with a * a * a + 1
Mutant 836 in complex.js: this['isZero']() replaced with !!this['isZero']()
Mutant 837 in complex.js: this['isZero']() replaced with this['im'] === 0
Mutant 838 in complex.js: this['isZero']() replaced with this['re'] === this['im']
Mutant 839 in complex.js: this['isZero'] replaced with !this['re']
Mutant 840 in complex.js: this['isZero'] replaced with this['re'] * 0
Mutant 841 in complex.js: this['isZero']() replaced with this['isInfinite']()
Mutant 842 in complex.js: this['isZero']() replaced with this['hasImaginary']()
Mutant 843 in complex.js: this['isZero']() replaced with this['abs']() > 10
Mutant 844 in complex.js: this['isZero'] replaced with this['im'] == 0
Mutant 845 in complex.js: this['isZero'] replaced with this['re'] * this['im'] == 0
Mutant 846 in complex.js: this['isInfinite']() replaced with !this['isInfinite']()
Mutant 847 in complex.js: this['isInfinite']() replaced with this['im'] !== 0
Mutant 848 in complex.js: this['isInfinite']() replaced with this['re'] + this['im'] !== 0
Mutant 849 in complex.js: this['isInfinite'] replaced with this['isInfinite'] && this['isInfinite']
Mutant 850 in complex.js: this['isInfinite'] replaced with this['im'] = Infinity
Mutant 851 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.pow(10, places || 10))
Mutant 852 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.pow(10, places * 2))
Mutant 853 in complex.js: 10 replaced with 11
Mutant 854 in complex.js: 10 replaced with 12
Mutant 855 in complex.js: 10 replaced with 9
Mutant 856 in complex.js: places || 0 replaced with places && 0
Mutant 857 in complex.js: places || 0 replaced with places & 0
Mutant 858 in complex.js: Math.ceil replaced with Math.round
Mutant 859 in complex.js: Math.ceil replaced with Math.trunc
Mutant 860 in complex.js: Math.ceil replaced with Math.floor
Mutant 861 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 862 in complex.js: this['re'] * places replaced with this['re'] + places
Mutant 863 in complex.js: this['re'] * places replaced with this['re'] - places
Mutant 864 in complex.js: Math.ceil replaced with Math.floor
Mutant 865 in complex.js: Math.ceil replaced with Math.round
Mutant 866 in complex.js: Math.ceil replaced with Math.pow
Mutant 867 in complex.js: this['im'] * places replaced with 1 / this['im']
Mutant 868 in complex.js: this['im'] * places replaced with Infinity
Mutant 869 in complex.js: this['im'] * places replaced with NaN
Mutant 870 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(places || 10)
Mutant 871 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(100, places || 0)
Mutant 872 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(places || Math.PI)
Mutant 873 in complex.js: 10 replaced with 0
Mutant 874 in complex.js: 10 replaced with 100
Mutant 875 in complex.js: 10 replaced with Math.PI
Mutant 876 in complex.js: places || 0 replaced with places && 0
Mutant 877 in complex.js: places || 0 replaced with places ?? 0
Mutant 878 in complex.js: places || 0 replaced with places || NaN
Mutant 879 in complex.js: Math.floor replaced with Math.round
Mutant 880 in complex.js: Math.floor replaced with Math.ceil
Mutant 881 in complex.js: Math.floor replaced with a - b
Mutant 882 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 883 in complex.js: this['re'] * places replaced with a * places + b
Mutant 884 in complex.js: this['re'] * places replaced with a - b / places
Mutant 885 in complex.js: this['im'] * places replaced with -this['im'] * places
Mutant 886 in complex.js: this['im'] * places replaced with this['im'] * places ^ 2
Mutant 887 in complex.js: this['im'] * places replaced with -Math.PI * this['im'] * places
Mutant 888 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || 1)
Mutant 889 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places || {
  a: 1
})
Mutant 890 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(10, places + 1 || 0)
Mutant 891 in complex.js: Math.pow replaced with Math.abs
Mutant 892 in complex.js: Math.pow replaced with Math.sqrt
Mutant 893 in complex.js: Math.pow replaced with Math.round
Mutant 894 in complex.js: 10 replaced with 5
Mutant 895 in complex.js: 10 replaced with 0.1
Mutant 896 in complex.js: 10 replaced with null
Mutant 897 in complex.js: places || 0 replaced with 0 || places
Mutant 898 in complex.js: places || 0 replaced with places || 1
Mutant 899 in complex.js: places || 0 replaced with Math.abs(places)
Mutant 900 in complex.js: Math.round replaced with Math.floor
Mutant 901 in complex.js: Math.round replaced with Math.ceil
Mutant 902 in complex.js: Math.round replaced with Math.random
Mutant 903 in complex.js: this['re'] * places replaced with this['re'] + places
Mutant 904 in complex.js: this['re'] * places replaced with this['re'] / places
Mutant 905 in complex.js: this['re'] * places replaced with places - this['re']
Mutant 906 in complex.js: Math.round replaced with Math.ceil
Mutant 907 in complex.js: Math.round replaced with Math.floor
Mutant 908 in complex.js: this['im'] * places replaced with a * places
Mutant 909 in complex.js: this['im'] * places replaced with b * places
Mutant 910 in complex.js: this['im'] * places replaced with a + b
Mutant 911 in complex.js: Math.abs replaced with Math.sin
Mutant 912 in complex.js: Math.abs replaced with Math.cos
Mutant 913 in complex.js: Math.abs replaced with Math.tan
Mutant 914 in complex.js: z['re'] - this['re'] replaced with z['re'] * this['re']
Mutant 915 in complex.js: z['re'] - this['re'] replaced with z['re'] + this['re']
Mutant 916 in complex.js: z['re'] - this['re'] replaced with z['re'] / this['re']
Mutant 917 in complex.js: Math.abs replaced with !Math.abs
Mutant 918 in complex.js: Math.abs replaced with ~Math.abs
Mutant 919 in complex.js: z['im'] - this['im'] replaced with z['re'] - this['im']
Mutant 920 in complex.js: z['im'] - this['im'] replaced with z['im'] - this['re']
Mutant 921 in complex.js: z['im'] - this['im'] replaced with z['im'] + this['re']
Mutant 922 in complex.js: this['isNaN'] replaced with !this['isNaN']
Mutant 923 in complex.js: this['isNaN'] replaced with this['isFinite']
Mutant 924 in complex.js: this['isNaN'] replaced with this['re'] !== this['im']
Mutant 925 in complex.js: this['isInfinite']() replaced with this.isFinite()
Mutant 926 in complex.js: this['isInfinite']() replaced with !this.isNaN()
Mutant 927 in complex.js: this['isInfinite']() replaced with !this.isZero()
Mutant 928 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with a === 0
Mutant 929 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with Math.abs(a) <= Complex['EPSILON']
Mutant 930 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with !a && a !== 0
Mutant 931 in complex.js: Math.abs replaced with Math.round
Mutant 932 in complex.js: Math.abs replaced with Math.ceil
Mutant 933 in complex.js: a replaced with this
Mutant 934 in complex.js: b replaced with true
Mutant 935 in complex.js: b replaced with false
Mutant 936 in complex.js: b replaced with b + Complex['EPSILON']
Mutant 937 in complex.js: b === 0 replaced with b !== 0
Mutant 938 in complex.js: b === 0 replaced with Number.isNaN(b)
Mutant 939 in complex.js: b === 0 replaced with !isFinite(b)
Mutant 940 in complex.js: b < 0 replaced with b >= 0
Mutant 941 in complex.js: b < 0 replaced with b <= 0
Mutant 942 in complex.js: b < 0 replaced with b > 0
Mutant 943 in complex.js: b < 0 replaced with b > 0
Mutant 944 in complex.js: b < 0 replaced with !b
Mutant 945 in complex.js: b < 0 replaced with true
Mutant 946 in complex.js: 1 !== b replaced with b !== 1
Mutant 947 in complex.js: 1 !== b replaced with b < 1
Mutant 948 in complex.js: 1 !== b replaced with 1 < b
Mutant 949 in complex.js: this['im'] === 0 replaced with this['re'] === 0
Mutant 950 in complex.js: this['im'] === 0 replaced with this['im'] === 1
Mutant 951 in complex.js: this['im'] === 0 replaced with !this['im']
Mutant 952 in complex.js: isNaN replaced with !isNaN
Mutant 953 in complex.js: isNaN replaced with isFinite
Mutant 954 in complex.js: isNaN replaced with Number.isNaN
Mutant 955 in complex.js: this['re'] replaced with this['im']
Mutant 956 in complex.js: this['re'] replaced with this['re'] + this['im']
Mutant 957 in complex.js: this['re'] replaced with Math.sqrt(this['re'] * this['re'] + this['im'] * this['im'])
Mutant 958 in complex.js: this['im'] replaced with this['re']
Mutant 959 in complex.js: this['im'] replaced with this['im'] + 1
Mutant 960 in complex.js: this['im'] replaced with 0
Mutant 961 in complex.js: isFinite replaced with isNaN
Mutant 962 in complex.js: isFinite replaced with this['re']
Mutant 963 in complex.js: this['re'] replaced with this['im']
Mutant 964 in complex.js: this['re'] replaced with this['re'] + this['im']
Mutant 965 in complex.js: this['re'] replaced with Complex['PI']
Mutant 966 in complex.js: isFinite replaced with isNaN
Mutant 967 in complex.js: isFinite replaced with !isFinite
Mutant 968 in complex.js: isFinite replaced with !isNaN
Mutant 969 in complex.js: this['isNaN'] replaced with this['im']
Mutant 970 in complex.js: this['isNaN'] replaced with this['re']
Mutant 971 in complex.js: this['isNaN'] replaced with this[0]
Mutant 972 in complex.js: typeof define === 'function' && define['amd'] replaced with define && define['amd']
Mutant 973 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define === 'object'
Mutant 974 in complex.js: typeof define === 'function' && define['amd'] replaced with null
Mutant 975 in complex.js: typeof exports === 'object' replaced with typeof exports !== 'object'
Mutant 976 in complex.js: typeof exports === 'object' replaced with typeof exports === 'string'
Mutant 977 in complex.js: typeof exports === 'object' replaced with typeof exports === 'function'
Mutant 978 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': false
})
Mutant 979 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': undefined
})
Mutant 980 in complex.js: Object.defineProperty(Complex, "__esModule", {
  'value': true
}) replaced with Object.defineProperty(Complex, "__esModule", {
  'value': null
})
Mutant 981 in complex.js: "__esModule" replaced with "__ esModule"
Mutant 982 in complex.js: "__esModule" replaced with "__ module3"
Mutant 983 in complex.js: "__esModule" replaced with "__ magic"
Mutant 984 in complex.js: {
  'value': true
} replaced with {
  'value': false
}
Mutant 985 in complex.js: {
  'value': true
} replaced with {
  'value': a + b
}
Mutant 986 in complex.js: {
  'value': true
} replaced with {
  'value': a * b
}
[32m23:22:37 (2807) INFO Instrumenter[39m Instrumented 1 source file(s) with 987 mutant(s)
[32m23:22:37 (2807) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m23:22:39 (2807) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m23:22:39 (2807) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m23:22:39 (2807) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 509 ms, overhead 2 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~8m) 19/987 tested (19 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~8m) 39/987 tested (29 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~8m) 58/987 tested (35 survived, 0 timed out)
Mutation testing 7% (elapsed: <1m, remaining: ~7m) 77/987 tested (42 survived, 0 timed out)
Mutation testing 9% (elapsed: <1m, remaining: ~7m) 96/987 tested (44 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~7m) 116/987 tested (46 survived, 0 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~7m) 135/987 tested (50 survived, 0 timed out)
Mutation testing 15% (elapsed: ~1m, remaining: ~7m) 155/987 tested (52 survived, 0 timed out)
Mutation testing 17% (elapsed: ~1m, remaining: ~7m) 174/987 tested (53 survived, 0 timed out)
Mutation testing 19% (elapsed: ~1m, remaining: ~6m) 194/987 tested (59 survived, 0 timed out)
Mutation testing 21% (elapsed: ~1m, remaining: ~6m) 213/987 tested (66 survived, 0 timed out)
Mutation testing 23% (elapsed: ~2m, remaining: ~6m) 232/987 tested (67 survived, 0 timed out)
Mutation testing 25% (elapsed: ~2m, remaining: ~6m) 252/987 tested (72 survived, 0 timed out)
Mutation testing 27% (elapsed: ~2m, remaining: ~6m) 273/987 tested (77 survived, 0 timed out)
Mutation testing 29% (elapsed: ~2m, remaining: ~5m) 292/987 tested (81 survived, 0 timed out)
Mutation testing 31% (elapsed: ~2m, remaining: ~5m) 311/987 tested (86 survived, 0 timed out)
Mutation testing 33% (elapsed: ~2m, remaining: ~5m) 331/987 tested (88 survived, 0 timed out)
Mutation testing 35% (elapsed: ~3m, remaining: ~5m) 350/987 tested (97 survived, 0 timed out)
Mutation testing 37% (elapsed: ~3m, remaining: ~5m) 370/987 tested (103 survived, 0 timed out)
Mutation testing 39% (elapsed: ~3m, remaining: ~5m) 389/987 tested (108 survived, 0 timed out)
Mutation testing 41% (elapsed: ~3m, remaining: ~4m) 409/987 tested (111 survived, 0 timed out)
Mutation testing 43% (elapsed: ~3m, remaining: ~4m) 428/987 tested (111 survived, 0 timed out)
Mutation testing 45% (elapsed: ~3m, remaining: ~4m) 448/987 tested (111 survived, 0 timed out)
Mutation testing 47% (elapsed: ~4m, remaining: ~4m) 467/987 tested (114 survived, 0 timed out)
Mutation testing 49% (elapsed: ~4m, remaining: ~4m) 487/987 tested (115 survived, 0 timed out)
Mutation testing 51% (elapsed: ~4m, remaining: ~4m) 506/987 tested (117 survived, 0 timed out)
Mutation testing 53% (elapsed: ~4m, remaining: ~3m) 525/987 tested (119 survived, 0 timed out)
Mutation testing 55% (elapsed: ~4m, remaining: ~3m) 544/987 tested (120 survived, 0 timed out)
Mutation testing 57% (elapsed: ~4m, remaining: ~3m) 563/987 tested (120 survived, 0 timed out)
Mutation testing 58% (elapsed: ~5m, remaining: ~3m) 582/987 tested (122 survived, 0 timed out)
Mutation testing 60% (elapsed: ~5m, remaining: ~3m) 602/987 tested (139 survived, 0 timed out)
Mutation testing 62% (elapsed: ~5m, remaining: ~3m) 621/987 tested (158 survived, 0 timed out)
Mutation testing 64% (elapsed: ~5m, remaining: ~2m) 640/987 tested (177 survived, 0 timed out)
Mutation testing 66% (elapsed: ~5m, remaining: ~2m) 659/987 tested (194 survived, 0 timed out)
Mutation testing 68% (elapsed: ~5m, remaining: ~2m) 678/987 tested (203 survived, 0 timed out)
Mutation testing 70% (elapsed: ~6m, remaining: ~2m) 697/987 tested (205 survived, 0 timed out)
Mutation testing 72% (elapsed: ~6m, remaining: ~2m) 717/987 tested (206 survived, 0 timed out)
Mutation testing 74% (elapsed: ~6m, remaining: ~2m) 736/987 tested (207 survived, 0 timed out)
Mutation testing 76% (elapsed: ~6m, remaining: ~1m) 755/987 tested (217 survived, 0 timed out)
Mutation testing 78% (elapsed: ~6m, remaining: ~1m) 774/987 tested (236 survived, 0 timed out)
Mutation testing 80% (elapsed: ~6m, remaining: ~1m) 794/987 tested (256 survived, 0 timed out)
Mutation testing 82% (elapsed: ~7m, remaining: ~1m) 814/987 tested (276 survived, 0 timed out)
Mutation testing 84% (elapsed: ~7m, remaining: ~1m) 832/987 tested (294 survived, 0 timed out)
Mutation testing 86% (elapsed: ~7m, remaining: ~1m) 852/987 tested (304 survived, 0 timed out)
Mutation testing 88% (elapsed: ~7m, remaining: <1m) 871/987 tested (323 survived, 0 timed out)
Mutation testing 90% (elapsed: ~7m, remaining: <1m) 891/987 tested (343 survived, 0 timed out)
Mutation testing 92% (elapsed: ~7m, remaining: <1m) 910/987 tested (352 survived, 0 timed out)
Mutation testing 94% (elapsed: ~8m, remaining: <1m) 929/987 tested (354 survived, 0 timed out)
Mutation testing 96% (elapsed: ~8m, remaining: <1m) 948/987 tested (358 survived, 0 timed out)
Mutation testing 97% (elapsed: ~8m, remaining: <1m) 967/987 tested (367 survived, 0 timed out)

All tests
  ✓ All tests (killed 611)

[Survived] PrecomputedMutator
complex.js:41:12
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return -x(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:12
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return 2 * x(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:12
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return x ^ 2(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x--) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(--x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x + x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:42
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.atan(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:42
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.sin(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:42
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.cos(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(x + 1)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.sin(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return x * x(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:12
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.log(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(sinh(x + 1)) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(sinh(x - 1)) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:21
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(sinh(x + x)) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.pow(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.abs(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:38
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Number.prototype.valueOf(x) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(sin(x)) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:47
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x * Math.sign(x)) - Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.sin(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.cos(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:52
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.tan(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(x + 1)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(x * 2)) * 0.5;

[Survived] PrecomputedMutator
complex.js:45:61
-       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(x + Math.PI)) * 0.5;

[Survived] PrecomputedMutator
complex.js:58:23
-         return Math.cos(x) - 1.0;
+         return Math.cos(-x) - 1.0;

[Survived] PrecomputedMutator
complex.js:96:9
-       if (a < 3000 && b < 3000) {
+       if (a * b < 3000) {

[Survived] PrecomputedMutator
complex.js:96:9
-       if (a < 3000 && b < 3000) {
+       if (Math.sqrt(a) < 30 || Math.sqrt(b) < 30) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a < b || isNaN(a)) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a < b && !isNaN(a)) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a < b || isNaN(a) && !isNaN(b)) {

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(1 - b * b);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(1 + Math.sqrt(b * b));

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(b * b / 10);

[Survived] PrecomputedMutator
complex.js:122:23
-       var _a = Math.abs(a);
+       var _a = Math.abs(-a);

[Survived] PrecomputedMutator
complex.js:123:14
-       var _b = Math.abs(b);
+       var _b = Math.max(b);

[Survived] PrecomputedMutator
complex.js:123:14
-       var _b = Math.abs(b);
+       var _b = Math.min(b);

[Survived] PrecomputedMutator
complex.js:123:14
-       var _b = Math.abs(b);
+       var _b = Math.round(b);

[Survived] PrecomputedMutator
complex.js:123:23
-       var _b = Math.abs(b);
+       var _b = Math.abs(Number(b));

[Survived] PrecomputedMutator
complex.js:133:9
-       if (_a < 3000 && _b < 3000) {
+       if (_a < 4000 && _b < 5000) {

[Survived] PrecomputedMutator
complex.js:134:23
-         return Math.log(a * a + b * b) * 0.5;
+         return Math.log(b * b + a * a) * 0.5;

[Survived] PrecomputedMutator
complex.js:172:27
-       return 0.5 * Math.log(a * a + b * b) + Math.LN2;
+       return 0.5 * Math.log(b * b + a * a) + Math.LN2;

[Survived] PrecomputedMutator
complex.js:193:22
-             } else if ('abs' in a && 'arg' in a) {
+             } else if ('abs' in a && a !== null && 'arg' in a && a !== null) {

[Survived] PrecomputedMutator
complex.js:194:34
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (!Number.isFinite(a['abs'] + 1) && Number.isFinite(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:194:34
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (!Number.isFinite(a['abs'] * 2) && Number.isFinite(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:194:34
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (!Number.isFinite(a['abs'] / 2) && Number.isFinite(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:197:43
-               z['re'] = a['abs'] * Math.cos(a['arg']);
+               z['re'] = a['abs'] * Math.cos(a.arg);

[Survived] PrecomputedMutator
complex.js:200:18
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isSafeInteger(a['r']) && Number.isFinite(a['phi'])) {

[Survived] PrecomputedMutator
complex.js:200:61
-               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {
+               if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'] + 1)) {

[Survived] PrecomputedMutator
complex.js:222:15
-             if (tokens === null) {
+             if (tokens[0] === '') {

[Survived] PrecomputedMutator
complex.js:238:19
-                 if (plus + minus === 0) {
+                 if (plus === minus) {

[Survived] PrecomputedMutator
complex.js:238:19
-                 if (plus + minus === 0) {
+                 if (!plus === !minus) {

[Survived] PrecomputedMutator
complex.js:242:51
-                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {
+                 if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 2])) {

[Survived] PrecomputedMutator
complex.js:246:39
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');
+                   z['im'] += parseFloat((minus % 3 ? '-' : '') + '1');

[Survived] PrecomputedMutator
complex.js:252:19
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === Infinity || isNaN(c)) {

[Survived] PrecomputedMutator
complex.js:252:47
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (plus + minus === 0 || isNaN(2 * c)) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (z['re'] === NaN || z['im'] === NaN) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isFinite(z['re']) || isFinite(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re'] + z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(Infinity) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(-NaN) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(z['im'] + z['re'])) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(0)) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (isNaN(z['re']) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (z['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:358:11
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:358:35
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() && z['round']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:382:11
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:382:12
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['abs']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isNaN']())) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['sgn']())) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['mag']())) {

[Survived] PrecomputedMutator
complex.js:387:35
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:416:11
-         if (this['isInfinite']() || z['isZero']()) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isZero']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isZero']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (z['isZero']() && this['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:421:31
-         if (this['isZero']() || z['isInfinite']()) {
+         if (this['isZero']() || z['isNaN']()) {

[Survived] PrecomputedMutator
complex.js:432:11
-         if (0 === d) {
+         if (false) {

[Survived] PrecomputedMutator
complex.js:432:11
-         if (0 === d) {
+         if (null) {

[Survived] PrecomputedMutator
complex.js:432:11
-         if (0 === d) {
+         if (this.d === 0) {

[Survived] PrecomputedMutator
complex.js:437:20
-         if (Math.abs(c) < Math.abs(d)) {
+         if (Math.abs(z['re']) < Math.abs(d)) {

[Survived] PrecomputedMutator
complex.js:474:11
-         if (z['im'] === 0) {
+         if (b === 0) {

[Survived] PrecomputedMutator
complex.js:478:39
-             return new Complex(Math.pow(a, z['re']), 0);
+             return new Complex(Math.pow(a + b, z['re']), 0);

[Survived] PrecomputedMutator
complex.js:480:20
-           } else if (a === 0) { // If base is fully imaginary
+           } else if (a > b) { // If base is fully imaginary

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['im'] + z['re']), 0);

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.abs(b, z['re']), 0);

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.sqrt(b, z['re']), 0);

[Survived] PrecomputedMutator
complex.js:484:43
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b * b, z['re']), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['abs']()), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['arg']()), 0);

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, -z['re']));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['im'] / z['re']));

[Survived] PrecomputedMutator
complex.js:488:47
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(b, z['re'] + 1), 0);

[Survived] PrecomputedMutator
complex.js:488:47
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(b, z['re'] * 2), 0);

[Survived] PrecomputedMutator
complex.js:488:47
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(b, z['re'] - 1), 0);

[Survived] PrecomputedMutator
complex.js:490:38
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:490:38
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['re'] + 1));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im'] * 2));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['re'] - z['im']));

[Survived] PrecomputedMutator
complex.js:519:17
-         var loh = logHypot(a, b);
+         var loh = logHypot(b, a);

[Survived] PrecomputedMutator
complex.js:519:29
-         var loh = logHypot(a, b);
+         var loh = logHypot(a, -b);

[Survived] PrecomputedMutator
complex.js:524:22
-           a * Math.cos(b),
+           a * Math.cos(-b),

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['re'] == 0) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['im'] === Math.PI) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['re'] + this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (a == 0 && b > 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b === 0 && a >= 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (a === 0 || b > 0) {

[Survived] PrecomputedMutator
complex.js:628:20
-         return hypot(this['re'], this['im']);
+         return hypot(-this['re'], this['im']);

[Survived] PrecomputedMutator
complex.js:628:32
-         return hypot(this['re'], this['im']);
+         return hypot(this['re'], -this['im']);

[Survived] PrecomputedMutator
complex.js:673:18
-           Math.cos(a) * cosh(b),
+           Math.cos(-a) * cosh(b),

[Survived] PrecomputedMutator
complex.js:695:9
-           sinh(b) / d);
+           Math.sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:709:34
-         var d = Math.cos(a) - cosh(b);
+         var d = Math.cos(a) - cosh(b * Math.sign(b));

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * -cos(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.sin(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.tan(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * a) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(b + 1) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(a - b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.sin(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.tan(2 * a);

[Survived] PrecomputedMutator
complex.js:727:41
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.sec(2 * a);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * b);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * b + 1);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(-2 * b);

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.acos(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.tan(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(2 * a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a + b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * sinh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * -sinh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:23
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh + 1(b) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b - 1) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(-b) / d,

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a + b * b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a + b + c) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(2 * a + b) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.tanh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * 宿(b) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(a) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(b - a) / d);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * sinh(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * sqrt(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * abs(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(b - 1) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.sin(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.acos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * 2 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(-1.5 * a);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(a + Math.PI);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(a * b);

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a + b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:18
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a - b) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * Math.acosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * Math.coth(b) / d,

[Survived] PrecomputedMutator
complex.js:748:23
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * Math.tanh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b + 1) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b * b) / d,

[Survived] PrecomputedMutator
complex.js:748:28
-           Math.sin(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b / 2) / d,

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a == undefined) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a === 'undefined') * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(typeof a === 'undefined') * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * cos(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * 0(b) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b - 1) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:810:11
-         if (a === 0) {
+         if (a == 0) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b > 1) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (a === b) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (a + b === 1) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b == 1) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b == 2) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b > 1) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (b === 1) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (b === NaN) {

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, 0), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1 + 0), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1 - 0), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.PI - Math.atan2(1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, b * Math.sqrt(1 + a)), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, b - a), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, b * Math.sqrt(a)), 0);

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a !== 0 || b !== 0) {

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a !== 0 && b !== 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a === 0 || b === 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a !== 0 && b !== 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (!a && !b) {

[Survived] PrecomputedMutator
complex.js:921:14
-           sinh(a) * Math.cos(b),
+           sinh(a * a) * Math.cos(b),

[Survived] PrecomputedMutator
complex.js:921:14
-           sinh(a) * Math.cos(b),
+           sinh(Math.sqrt(a)) * Math.cos(b),

[Survived] PrecomputedMutator
complex.js:938:14
-           cosh(a) * Math.cos(b),
+           cosh(-a) * Math.cos(b),

[Survived] PrecomputedMutator
complex.js:939:14
-           sinh(a) * Math.sin(b));
+           sinh(a % (1 + b * b)) * Math.sin(b));

[Survived] PrecomputedMutator
complex.js:939:28
-           sinh(a) * Math.sin(b));
+           sinh(a) * Math.sin(a ^ 2));

[Survived] PrecomputedMutator
complex.js:971:20
-         var d = cosh(a) - Math.cos(b);
+         var d = cosh(-a) - Math.cos(b);

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = 2 * b - Math.cosh(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = -Math.sinh(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b + 1) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b - 1) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b * 2) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:33
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - sin(2 * a);

[Survived] PrecomputedMutator
complex.js:989:33
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - Math.abs(2 * a);

[Survived] PrecomputedMutator
complex.js:989:33
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - 1 / Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(2 * b);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(a * b);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(a + b);

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * cosh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * tanh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * acosh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(b) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a + 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(d * d) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.sin(b) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(b + b) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(a + b) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(b - a) / d,

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a + 1) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a - 1) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(2 * a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.tan(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin + Math.cos(b) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(a) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(-b) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(sin(b)) / d);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.tan(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.sinh(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.acos(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * a) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(1 / b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(b + 1) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + sinh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + Math.sinh(2 * a);

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(-a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a + 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a * a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.tan(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.sqrt(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.random(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(a) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(a + b) / d,

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * cosh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * tanh(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * coth(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a + 1) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a * 2) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:19
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a / 2) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(b + 1) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(b * 2) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(b = 0) / d);

[Survived] PrecomputedMutator
complex.js:1026:17
-         var res = this['asin']();
+         var res = this['asin'] + 1();

[Survived] PrecomputedMutator
complex.js:1046:17
-         var res = this['acos']();
+         var res = -this['acos']();

[Survived] PrecomputedMutator
complex.js:1046:17
-         var res = this['acos']();
+         var res = this['acos'] + this['asin']();

[Survived] PrecomputedMutator
complex.js:1046:17
-         var res = this['acos']();
+         var res = this['atan']();

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] >= 0) {

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['re'] >= 0) {

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (Math.abs(res['im']) >= 0) {

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['im'], x['re']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] + x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] * x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypotAtan2(x['re'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logSqrt(x['re'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = atan(x['re'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['re']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['im'] * 2) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['re'] + x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.sin(x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.cos(x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.tan(x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'] * x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'] - x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], tmp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], this.re) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], Math.sin(b)) / 2;

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a > 0 && b === 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a === 0 || b === 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a < 0 && b === 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (a === 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (a !== 0 && b === 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (b !== 0) {

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * a - 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * a * a))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * 2))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a + 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(a * a * a + 1))

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (!!this['isZero']()) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['re'] === this['im']) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (!this['re']()) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['re'] * 0()) {

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.pow(10, places || 10));

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.pow(10, places * 2));

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(11, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(12, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(9, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places && 0);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places & 0);

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.trunc(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['im'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['re'] + places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['re'] - places) / places,

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.floor(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.round(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.pow(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(1 / this['im']) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(Infinity) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(NaN) / places);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(places || 10);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(100, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(places || Math.PI);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(0, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(100, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.PI, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places && 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places ?? 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || NaN);

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.ceil(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           a - b(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['im'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(a * places + b) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(a - b / places) / places,

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(-this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['im'] * places ^ 2) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(-Math.PI * this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 1);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || {
+     a: 1
+   });

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places + 1 || 0);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.abs(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1254:16
-         places = Math.pow(10, places || 0);
+         places = Math.round(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, 0 || places);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 1);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, Math.abs(places));

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.ceil(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.ceil(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.floor(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1272:14
-         return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
+         return Math.sin(z['re'] - this['re']) <= Complex['EPSILON'] &&

[Survived] PrecomputedMutator
complex.js:1272:14
-         return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
+         return Math.tan(z['re'] - this['re']) <= Complex['EPSILON'] &&

[Survived] PrecomputedMutator
complex.js:1305:11
-         if (Math.abs(a) < Complex['EPSILON']) {
+         if (Math.abs(a) <= Complex['EPSILON']) {

[Survived] PrecomputedMutator
complex.js:1309:20
-         if (Math.abs(b) < Complex['EPSILON']) {
+         if (Math.abs(b + Complex['EPSILON']) < Complex['EPSILON']) {

[Survived] PrecomputedMutator
complex.js:1321:13
-           if (b < 0) {
+           if (b <= 0) {

[Survived] PrecomputedMutator
complex.js:1333:11
-         if (1 !== b) { // b is the absolute imaginary part
+         if (b !== 1) { // b is the absolute imaginary part

[Survived] PrecomputedMutator
complex.js:1356:11
-         if (this['im'] === 0) {
+         if (!this['im']) {

[Survived] PrecomputedMutator
complex.js:1368:14
-         return isNaN(this['re']) || isNaN(this['im']);
+         return Number.isNaN(this['re']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['im']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re'] + this['im']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(Math.sqrt(this['re'] * this['re'] + this['im'] * this['im'])) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['re']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['im'] + 1);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(0);

[Survived] PrecomputedMutator
complex.js:1388:23
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re'] + this['im']) && isFinite(this['im']);

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof define === 'object') {

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (null) {

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': false
+   });

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': undefined
+   });

[Survived] PrecomputedMutator
complex.js:1416:5
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': null
+   });

[Survived] PrecomputedMutator
complex.js:1416:36
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__ esModule", { 'value': true });

[Survived] PrecomputedMutator
complex.js:1416:36
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__ module3", { 'value': true });

[Survived] PrecomputedMutator
complex.js:1416:36
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__ magic", { 'value': true });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': false
+   });

Ran 1.00 tests per mutant on average.
------------|---------|----------|-----------|------------|----------|----------|
File        | % score | # killed | # timeout | # survived | # no cov | # errors |
------------|---------|----------|-----------|------------|----------|----------|
All files   |   61.90 |      611 |         0 |        376 |        0 |        0 |
 complex.js |   61.90 |      611 |         0 |        376 |        0 |        0 |
------------|---------|----------|-----------|------------|----------|----------|
[32m23:31:09 (2807) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/Complex.js/reports/mutation/mutation.html
[32m23:31:09 (2807) INFO MutationTestExecutor[39m Done in 8 minutes 33 seconds.

real	8m35.002s
user	8m45.477s
sys	1m30.346s
