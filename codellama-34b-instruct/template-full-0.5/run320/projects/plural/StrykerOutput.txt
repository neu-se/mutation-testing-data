*** using precomputed mutations ***
[32m13:43:51 (2543) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:43:51 (2543) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:43:51 (2543) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m13:43:51 (2543) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m13:43:51 (2543) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m13:43:51 (2543) INFO ProjectReader[39m Found 1 of 614 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 293 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in index.js: obj replaced with obj.toString()
Mutant 1 in index.js: obj replaced with obj.valueOf()
Mutant 2 in index.js: obj replaced with obj.toString().toLowerCase()
Mutant 3 in index.js: 8 replaced with 7
Mutant 4 in index.js: 8 replaced with 9
Mutant 5 in index.js: 8 replaced with 6
Mutant 6 in index.js: w.substr(0, w.length - 1) replaced with w.substr(0, w.length)
Mutant 7 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 2, w.length)
Mutant 8 in index.js: w.substr(0, w.length - 1) replaced with w.substr(0, w.length - 2)
Mutant 9 in index.js: w.substr replaced with w.substring
Mutant 10 in index.js: w.substr replaced with w.slice
Mutant 11 in index.js: 0 replaced with 1
Mutant 12 in index.js: 0 replaced with w.length - 2
Mutant 13 in index.js: 0 replaced with w.length - 3
Mutant 14 in index.js: w.length - 1 replaced with w.length - 2
Mutant 15 in index.js: w.length - 1 replaced with w.length + 1
Mutant 16 in index.js: w.length - 1 replaced with w.length * 2
Mutant 17 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 's';
})
Mutant 18 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 'ies';
})
Mutant 19 in index.js: addRule replaced with /x$|ch$|s$/gi
Mutant 20 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/
Mutant 21 in index.js: /x$|ch$|s$/i replaced with /x$|ch$|s$/g
Mutant 22 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 23 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w;
}
Mutant 24 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 25 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 3) + 'i';
})
Mutant 26 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'ii';
})
Mutant 27 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus/g
Mutant 28 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /nucleus|syllabus|focus|fungus|cactus/gi
Mutant 29 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'a';
}
Mutant 30 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'e';
}
Mutant 31 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'o';
}
Mutant 32 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 3)
Mutant 33 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 4)
Mutant 34 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 5)
Mutant 35 in index.js: w.substr replaced with w.substring
Mutant 36 in index.js: w.substr replaced with w.slice
Mutant 37 in index.js: 0 replaced with 1
Mutant 38 in index.js: 0 replaced with -1
Mutant 39 in index.js: 0 replaced with void 0
Mutant 40 in index.js: w.length - 2 replaced with w.length - 1
Mutant 41 in index.js: w.length - 2 replaced with w.length + 2
Mutant 42 in index.js: w.length - 2 replaced with w.length * 2
Mutant 43 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 1) + 'es';
})
Mutant 44 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'is';
})
Mutant 45 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/thesis|crisis/i, function (w) {
  return w.substr(1, w.length - 1) + 'es';
})
Mutant 46 in index.js: /thesis|crisis/i replaced with /thesis|crisis|mistake/i
Mutant 47 in index.js: /thesis|crisis/i replaced with /thesis|crisis|thesis/i
Mutant 48 in index.js: /thesis|crisis/i replaced with /thesis|crisis|thesis|crisis/i
Mutant 49 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 's';
}
Mutant 50 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ies';
}
Mutant 51 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.replace(/s$/, '') + 'es';
}
Mutant 52 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, 0)
Mutant 53 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 2, 0)
Mutant 54 in index.js: w.substr replaced with w.slice
Mutant 55 in index.js: w.substr replaced with w.substring
Mutant 56 in index.js: w.substr replaced with w.charAt
Mutant 57 in index.js: 0 replaced with -1
Mutant 58 in index.js: w.length - 2 replaced with w.length - 3
Mutant 59 in index.js: w.length - 2 replaced with w.length + 2
Mutant 60 in index.js: w.length - 2 replaced with w.length * 2
Mutant 61 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 3) + 'ices';
})
Mutant 62 in index.js: /appendix|index/i replaced with /appendix|index|ind/i
Mutant 63 in index.js: /appendix|index/i replaced with /appendix|index|[a-zA-Z]/i
Mutant 64 in index.js: /appendix|index/i replaced with /appendix|index|[^a-zA-Z]/i
Mutant 65 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'ices' + 's';
}
Mutant 66 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1)
Mutant 67 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length)
Mutant 68 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length + 1)
Mutant 69 in index.js: w.substr replaced with w.slice
Mutant 70 in index.js: w.substr replaced with w.substring
Mutant 71 in index.js: 0 replaced with 1
Mutant 72 in index.js: 0 replaced with w.length - 1
Mutant 73 in index.js: w.length - 2 replaced with w.length - 1
Mutant 74 in index.js: w.length - 2 replaced with w.length + 1
Mutant 75 in index.js: w.length - 2 replaced with w.length * 2
Mutant 76 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 's';
})
Mutant 77 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[aeiouy]o$/i, function (w) {
  return w + 'es';
})
Mutant 78 in index.js: /[aeiouy]o$/i replaced with /[^aeiouy]o$/i
Mutant 79 in index.js: /[aeiouy]o$/i replaced with /[aeiouy]o$/
Mutant 80 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'es';
}
Mutant 81 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 82 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 's';
})
Mutant 83 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'y';
})
Mutant 84 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'e';
})
Mutant 85 in index.js: /[^aeiouy]o$/i replaced with /[^aeiou]o$/i
Mutant 86 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o$/
Mutant 87 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]o$/gi
Mutant 88 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 89 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 90 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'es';
}
Mutant 91 in index.js: w === 'dwarf' || w === 'roof' replaced with w === 'dwarf' || w === 'floor'
Mutant 92 in index.js: w === 'dwarf' || w === 'roof' replaced with w === 'dwarf' || w === 'roof' && w !== 'dwarf'
Mutant 93 in index.js: w === 'dwarf' || w === 'roof' replaced with w === 'dwarf' || w === 'roof' && w !== 'floor'
Mutant 94 in index.js: regex replaced with w.replace(regex, 'ves')
Mutant 95 in index.js: 'ves' replaced with 's'
Mutant 96 in index.js: 'ves' replaced with w.substring(0, w.length - 1) + 'es'
Mutant 97 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterias')
Mutant 98 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterion')
Mutant 99 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterions')
Mutant 100 in index.js: 'criterion' replaced with 'criteria'
Mutant 101 in index.js: 'criteria' replaced with 'criterias'
Mutant 102 in index.js: 'criteria' replaced with 'criterion'
Mutant 103 in index.js: 'criteria' replaced with 'criterions'
Mutant 104 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacteriaa')
Mutant 105 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacteria' + 'a')
Mutant 106 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacteria' * 2)
Mutant 107 in index.js: 'bacterium' replaced with 'bacteria'
Mutant 108 in index.js: 'bacterium' replaced with 'bacteria' + 'a'
Mutant 109 in index.js: 'bacterium' replaced with 'bacteria' + 's'
Mutant 110 in index.js: 'bacteria' replaced with 'bacterium'
Mutant 111 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memo')
Mutant 112 in index.js: addRule('memo', 'memos') replaced with addRule('memo', 'memoes')
Mutant 113 in index.js: 'memo' replaced with 'memos'
Mutant 114 in index.js: 'memo' replaced with 'memoes'
Mutant 115 in index.js: 'memos' replaced with 'meme'
Mutant 116 in index.js: 'memos' replaced with 'memoes'
Mutant 117 in index.js: addRule('cello', 'cellos') replaced with addRule('cello', 'cell')
Mutant 118 in index.js: addRule('cello', 'cellos') replaced with addRule('cello', 'cells')
Mutant 119 in index.js: 'cello' replaced with 'cellos'
Mutant 120 in index.js: 'cello' replaced with 'celle'
Mutant 121 in index.js: 'cellos' replaced with 'cero'
Mutant 122 in index.js: 'cellos' replaced with 'celli'
Mutant 123 in index.js: 'cellos' replaced with 'cels'
Mutant 124 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dice', 'dice')
Mutant 125 in index.js: addRule('die', 'dice') replaced with addRule('die', 'dice', 'die')
Mutant 126 in index.js: 'die' replaced with 'dice'
Mutant 127 in index.js: 'die' replaced with 'die' + 's'
Mutant 128 in index.js: 'die' replaced with 'die' + 1
Mutant 129 in index.js: 'dice' replaced with 'dice' + 1
Mutant 130 in index.js: 'dice' replaced with 'dice' * 2
Mutant 131 in index.js: 'dice' replaced with 'dice'[0]
Mutant 132 in index.js: addRule('goose', 'geese') replaced with addRule('goose', 'gooses')
Mutant 133 in index.js: addRule('goose', 'geese') replaced with addRule('goose', 'goses')
Mutant 134 in index.js: addRule('goose', 'geese') replaced with addRule('goose', 'goos')
Mutant 135 in index.js: 'goose' replaced with 'goat'
Mutant 136 in index.js: 'goose' replaced with 'goose' + 's'
Mutant 137 in index.js: 'goose' replaced with 'goose' + 'es'
Mutant 138 in index.js: 'geese' replaced with 'goose'
Mutant 139 in index.js: 'geese' replaced with 'goose' + 's'
Mutant 140 in index.js: 'geese' replaced with 'goose'.plural()
Mutant 141 in index.js: addRule('mouse', 'mice') replaced with addRule('mice', 'mice')
Mutant 142 in index.js: addRule('mouse', 'mice') replaced with addRule('mice', 'mouse')
Mutant 143 in index.js: addRule('mouse', 'mice') replaced with addRule('mice', 'mouses')
Mutant 144 in index.js: 'mouse' replaced with 'mice'
Mutant 145 in index.js: 'mouse' replaced with 'monkey'
Mutant 146 in index.js: 'mouse' replaced with 'mouses'
Mutant 147 in index.js: 'mice' replaced with 'mouse'
Mutant 148 in index.js: 'mice' replaced with 'mouses'
Mutant 149 in index.js: 'mice' replaced with 'mous'
Mutant 150 in index.js: addRule('person', 'people') replaced with addRule('person', 'peoples')
Mutant 151 in index.js: addRule('person', 'people') replaced with addRule('person', 'humans')
Mutant 152 in index.js: addRule('person', 'people') replaced with addRule('person', 'individuals')
Mutant 153 in index.js: 'person' replaced with 'people'
Mutant 154 in index.js: 'person' replaced with 'persons'
Mutant 155 in index.js: 'person' replaced with 'persona'
Mutant 156 in index.js: 'people' replaced with 'person'
Mutant 157 in index.js: 'people' replaced with 'peoples'
Mutant 158 in index.js: 'people' replaced with 'persons'
Mutant 159 in index.js: addRule('chilli', 'chillies') replaced with addRule('chili', 'chillis')
Mutant 160 in index.js: addRule('chilli', 'chillies') replaced with addRule('chili', 'chillies')
Mutant 161 in index.js: addRule('chilli', 'chillies') replaced with addRule('chili', 'chilly')
Mutant 162 in index.js: 'chilli' replaced with 'chillies'
Mutant 163 in index.js: 'chilli' replaced with 'chillis'
Mutant 164 in index.js: 'chilli' replaced with 'chill'
Mutant 165 in index.js: 'chillies' replaced with 'chilli'
Mutant 166 in index.js: 'chillies' replaced with 'chillis'
Mutant 167 in index.js: 'chillies' replaced with 'chillies' + 's'
Mutant 168 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'i');
})
Mutant 169 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'o');
})
Mutant 170 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'u');
})
Mutant 171 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?man$/
Mutant 172 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?man$/g
Mutant 173 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/e/, 'a');
}
Mutant 174 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/a/, 'o');
}
Mutant 175 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/a/, 'i');
}
Mutant 176 in index.js: w.replace(/a/, 'e') replaced with w.replace(/a/, 'a')
Mutant 177 in index.js: /a/ replaced with /b/
Mutant 178 in index.js: /a/ replaced with /[ab]/
Mutant 179 in index.js: /a/ replaced with /[^ab]/
Mutant 180 in index.js: 'e' replaced with '*'
Mutant 181 in index.js: 'e' replaced with '\\w'
Mutant 182 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/bison|cod|deer|fowl|halibut|moose|sheep/i, function (w) {
  return w + 's';
})
Mutant 183 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/bison|cod|deer|fowl|halibut|moose|sheep/i, function (w) {
  return w + 'es';
})
Mutant 184 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /(?!bison|cod|deer|fowl|halibut|moose|sheep)\b/i
Mutant 185 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i
Mutant 186 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 187 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1);
}
Mutant 188 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 189 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')es\\b', 'i'), function (w) {
  return w;
})
Mutant 190 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'g'), function (w) {
  return w;
})
Mutant 191 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'gi')
Mutant 192 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')es\\b', 'i')
Mutant 193 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes, games, illnesses, misc, undefined)
Mutant 194 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes, games, illnesses, misc, null)
Mutant 195 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(clothes, games, illnesses, misc, NaN)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes, games, illnesses, misc, undefined)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes, games, illnesses, misc, null)
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(clothes, games, illnesses, misc, NaN)
Mutant 196 in index.js: clothes replaced with trousers
Mutant 197 in index.js: clothes replaced with pants
Mutant 198 in index.js: clothes replaced with panties
Mutant 199 in index.js: games replaced with games.concat(clothes)
Mutant 200 in index.js: games replaced with games.concat(illnesses)
Mutant 201 in index.js: games replaced with games.concat(misc)
Mutant 202 in index.js: misc replaced with misc.concat(clothes, games, illnesses)
Mutant 203 in index.js: misc replaced with misc.slice(0, 10)
Mutant 204 in index.js: misc replaced with misc.filter(function (word) {
  return word.length > 5;
})
Mutant 205 in index.js: '|' replaced with '^'
Mutant 206 in index.js: '|' replaced with '&'
Mutant 207 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toLowerCase();
}
Mutant 208 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(1);
}
Mutant 209 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.split('').reverse().join('');
}
Mutant 210 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w + 'es';
})
Mutant 211 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w.replace(/s$/, '');
})
Mutant 212 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/i, function (w) {
  return w.replace(/ics$/, 'ic');
})
Mutant 213 in index.js: /ics$/i replaced with /ics$/
Mutant 214 in index.js: /ics$/i replaced with /ics$/g
Mutant 215 in index.js: /ics$/i replaced with /ics$/m
Mutant 216 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 217 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}
Mutant 218 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 'es';
}
Mutant 219 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w.toUpperCase();
})
Mutant 220 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w.toLowerCase();
})
Mutant 221 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with /b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/
Mutant 222 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with /b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i
Mutant 223 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 's';
}
Mutant 224 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.substr(0, w.length - 1);
}
Mutant 225 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toUpperCase();
}
Mutant 226 in index.js: num !== 1 || num === undefined replaced with num !== 1
Mutant 227 in index.js: num !== 1 || num === undefined replaced with num === undefined
Mutant 228 in index.js: num !== 1 || num === undefined replaced with num === 1 || num === undefined
Mutant 229 in index.js: i < rules.length replaced with i <= rules.length
Mutant 230 in index.js: i < rules.length replaced with i > rules.length
Mutant 231 in index.js: i < rules.length replaced with i + 1 < rules.length
Mutant 232 in index.js: i++ replaced with i--
Mutant 233 in index.js: i++ replaced with i += 2
Mutant 234 in index.js: i++ replaced with i = 0
Mutant 235 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].test(word) === true
Mutant 236 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with word.match(rule[0]) !== null
Mutant 237 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with word.search(rule[0]) !== -1
Mutant 238 in index.js: type replaced with Object.typeof
Mutant 239 in index.js: type replaced with String.prototype.type
Mutant 240 in index.js: rule[0] replaced with rule[1]
Mutant 241 in index.js: rule[0] replaced with rules[i][0]
Mutant 242 in index.js: rule[0].test replaced with rule[1].test
Mutant 243 in index.js: rule[0].test replaced with rule[0].search
Mutant 244 in index.js: rule[0].test replaced with rule[0].exec
Mutant 245 in index.js: word replaced with word.toLowerCase()
Mutant 246 in index.js: word replaced with word + 's'
Mutant 247 in index.js: word replaced with word.substr(1)
Mutant 248 in index.js: type replaced with typeof type
Mutant 249 in index.js: rule[1] replaced with rule[2]
Mutant 250 in index.js: rule[1] replaced with "hello"
Mutant 251 in index.js: rule[1] replaced with function (w, regex) {
  return w + "es";
}
Mutant 252 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[1])
Mutant 253 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, rule[2])
Mutant 254 in index.js: rule[1](word, rule[0]) replaced with rule[1](word, "xyz")
Mutant 255 in index.js: rule[1] replaced with rule[0]
Mutant 256 in index.js: rule[1] replaced with rule[2]
Mutant 257 in index.js: rule[1] replaced with "test"
Mutant 258 in index.js: word replaced with word + "s"
Mutant 259 in index.js: word replaced with word.slice(0, -1) + "es"
Mutant 260 in index.js: word replaced with word.substr(0, word.length - 2) + "ies"
Mutant 261 in index.js: rule[0] replaced with rule[1]
Mutant 262 in index.js: rule[0] replaced with rule[2]
Mutant 263 in index.js: rule[0] replaced with rules.length
Mutant 264 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0] === word && rule[0].length > 1
Mutant 265 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0] === word && rule[0].toLowerCase() === word.toLowerCase()
Mutant 266 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with rule[0] === word && rule[0].split('').reverse().join('') === word.split('').reverse().join('')
Mutant 267 in index.js: type replaced with rule[0].constructor.name
Mutant 268 in index.js: type replaced with rule[0].prototype.constructor.name
Mutant 269 in index.js: rule[0] replaced with rule[1]
Mutant 270 in index.js: rule[0] replaced with rule[2]
Mutant 271 in index.js: rule[0] replaced with rule[3]
Mutant 272 in index.js: type replaced with undefined
Mutant 273 in index.js: rule[1] replaced with rule[0]
Mutant 274 in index.js: rule[1] replaced with rule[2]
Mutant 275 in index.js: rule[1] replaced with rule[3]
Mutant 276 in index.js: rule[1] replaced with rule[2]
Mutant 277 in index.js: rule[1] replaced with rule[0]
Mutant 278 in index.js: word replaced with null
Mutant 279 in index.js: word replaced with word + 's'
Mutant 280 in index.js: word replaced with word.toUpperCase()
Mutant 281 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = null
Mutant 282 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function (num) {
  return num + 1;
}
Mutant 283 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function (num) {
  throw new Error('Plural function not implemented');
}
Mutant 284 in index.js: plural(this, num) replaced with plural("this")
Mutant 285 in index.js: plural(this, num) replaced with plural(1 + num)
Mutant 286 in index.js: plural(this, num) replaced with plural(num * 2)
Mutant 287 in index.js: this replaced with null
Mutant 288 in index.js: this replaced with undefined
Mutant 289 in index.js: this replaced with {}
Mutant 290 in index.js: num replaced with 1
Mutant 291 in index.js: num replaced with undefined
Mutant 292 in index.js: num replaced with null
[32m13:43:51 (2543) INFO Instrumenter[39m Instrumented 1 source file(s) with 293 mutant(s)
[32m13:43:52 (2543) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:43:53 (2543) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:43:53 (2543) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:43:53 (2543) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 498 ms, overhead 1 ms).
Mutation testing 6% (elapsed: <1m, remaining: ~2m) 19/293 tested (3 survived, 0 timed out)
Mutation testing 13% (elapsed: <1m, remaining: ~2m) 39/293 tested (6 survived, 0 timed out)
Mutation testing 19% (elapsed: <1m, remaining: ~2m) 58/293 tested (12 survived, 0 timed out)
Mutation testing 26% (elapsed: <1m, remaining: ~1m) 77/293 tested (17 survived, 0 timed out)
Mutation testing 33% (elapsed: <1m, remaining: ~1m) 97/293 tested (24 survived, 0 timed out)
Mutation testing 39% (elapsed: ~1m, remaining: ~1m) 117/293 tested (31 survived, 0 timed out)
Mutation testing 46% (elapsed: ~1m, remaining: ~1m) 136/293 tested (40 survived, 0 timed out)
Mutation testing 53% (elapsed: ~1m, remaining: ~1m) 156/293 tested (40 survived, 0 timed out)
Mutation testing 60% (elapsed: ~1m, remaining: <1m) 176/293 tested (41 survived, 0 timed out)
Mutation testing 66% (elapsed: ~1m, remaining: <1m) 195/293 tested (44 survived, 0 timed out)
Mutation testing 73% (elapsed: ~1m, remaining: <1m) 215/293 tested (50 survived, 0 timed out)
Mutation testing 79% (elapsed: ~2m, remaining: <1m) 234/293 tested (55 survived, 0 timed out)
Mutation testing 83% (elapsed: ~2m, remaining: <1m) 244/293 tested (58 survived, 1 timed out)
Mutation testing 90% (elapsed: ~2m, remaining: <1m) 264/293 tested (61 survived, 1 timed out)
Mutation testing 96% (elapsed: ~2m, remaining: <1m) 283/293 tested (74 survived, 1 timed out)

All tests
  ✓ All tests (killed 208)

[Survived] PrecomputedMutator
index.js:6:41
-     return Object.prototype.toString.call(obj).slice(8, -1)
+     return Object.prototype.toString.call(obj.valueOf()).slice(8, -1)

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substring(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.slice(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:19:9
-   addRule(/x$|ch$|s$/i, function(w) { return w + 'es' })
+   addRule(/x$|ch$|s$/, function(w) { return w + 'es' })

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substring(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.slice(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:80
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(void 0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|mistake/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|thesis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.slice(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substring(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:24:9
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index|ind/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:9
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index|[^a-zA-Z]/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.slice(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:24:49
-   addRule(/appendix|index/i, function(w) { return w.substr(0, w.length - 2) + 'ices' });
+   addRule(/appendix|index/i, function(w) { return w.substring(0, w.length - 2) + 'ices' });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function (w) {
+     return w + 's';
+   });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[aeiouy]o$/, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:28:9
-   addRule(/[^aeiouy]o$/i, function(w) { return w + 'es' });
+   addRule(/[^aeiouy]o$/, function(w) { return w + 'es' });

[Survived] PrecomputedMutator
index.js:28:9
-   addRule(/[^aeiouy]o$/i, function(w) { return w + 'es' });
+   addRule(/[^aeiouy]o$/gi, function(w) { return w + 'es' });

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (w === 'dwarf' || w === 'floor') {

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (w === 'dwarf' || w === 'roof' && w !== 'dwarf') {

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (w === 'dwarf' || w === 'roof' && w !== 'floor') {

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteriaa')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteria' + 'a')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteria' * 2)

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria' + 'a', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:9
-   addRule('bacterium', 'bacteria')
+   addRule('bacteria' + 's', 'bacteria')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacterium')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cello', 'cell')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cello', 'cells')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('cellos', 'cellos')

[Survived] PrecomputedMutator
index.js:42:9
-   addRule('cello', 'cellos')
+   addRule('celle', 'cellos')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cero')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'celli')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cels')

[Survived] PrecomputedMutator
index.js:43:1
-   addRule('die', 'dice')
+   addRule('die', 'dice', 'dice')

[Survived] PrecomputedMutator
index.js:43:1
-   addRule('die', 'dice')
+   addRule('die', 'dice', 'die')

[Survived] PrecomputedMutator
index.js:49:9
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/, function(w) { return w.replace(/a/, 'e') })

[Survived] PrecomputedMutator
index.js:49:57
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/[ab]/, 'e') })

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc, undefined).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc, null).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:31
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc, NaN).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:53
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games.concat(clothes), illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:53
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games.concat(illnesses), illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:53
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games.concat(misc), illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc.concat(clothes, games, illnesses)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:67:9
-   addRule(/ics$/i, function(w) { return w })
+   addRule(/ics$/, function(w) { return w })

[Survived] PrecomputedMutator
index.js:67:9
-   addRule(/ics$/i, function(w) { return w })
+   addRule(/ics$/m, function(w) { return w })

[Survived] PrecomputedMutator
index.js:70:1
-   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function(w) { return w })
+   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
+     return w.toLowerCase();
+   })

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num !== 1) {

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num === undefined) {

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num === 1 || num === undefined) {

[Survived] PrecomputedMutator
index.js:80:11
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (word.match(rule[0]) !== null) {

[Survived] PrecomputedMutator
index.js:80:11
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (word.search(rule[0]) !== -1) {

[Survived] PrecomputedMutator
index.js:80:16
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rules[i][0]) === 'RegExp' && rule[0].test(word)) {

[Survived] PrecomputedMutator
index.js:80:41
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rule[0]) === 'RegExp' && rule[0].exec(word)) {

[Survived] PrecomputedMutator
index.js:80:54
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (type(rule[0]) === 'RegExp' && rule[0].test(word.toLowerCase())) {

[Survived] PrecomputedMutator
index.js:81:21
-           return type(rule[1]) === 'Function' ? rule[1](word, rule[0]) : rule[1]
+           return type(function (w, regex) {
+     return w + "es";
+   }) === 'Function' ? rule[1](word, rule[0]) : rule[1]

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (rule[0] === word && rule[0].length > 1) {

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (rule[0] === word && rule[0].toLowerCase() === word.toLowerCase()) {

[Survived] PrecomputedMutator
index.js:83:11
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (rule[0] === word && rule[0].split('').reverse().join('') === word.split('').reverse().join('')) {

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[1]) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[0]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[2]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[3]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[2](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[0](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](null) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word + 's') : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word.toUpperCase()) : rule[1]

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function (num) {
+     return num + 1;
+   }) {

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function (num) {
+     throw new Error('Plural function not implemented');
+   }) {

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural("this")

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(1 + num)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(num * 2)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(undefined, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural({}, num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, 1)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, undefined)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, null)

Ran 1.00 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   71.33 |      208 |         1 |         84 |        0 |        0 |
 index.js |   71.33 |      208 |         1 |         84 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m13:46:28 (2543) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/reports/mutation/mutation.html
[32m13:46:28 (2543) INFO MutationTestExecutor[39m Done in 2 minutes 37 seconds.

real	2m38.693s
user	2m39.891s
sys	0m26.993s
