*** using precomputed mutations ***
[32m19:56:52 (2521) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m19:56:52 (2521) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m19:56:52 (2521) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/spacl-core/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m19:56:53 (2521) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m19:56:53 (2521) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m19:56:53 (2521) INFO ProjectReader[39m Found 6 of 571 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 88 mutants from MUTATION_TESTING/template-onemutation_codellama-34b-instruct_0.0/mutants.json ***
failed to parse replacement spec.match(/^[a-zA-Z0-9_/:~.$+*-]*$/) !== null: SyntaxError: Invalid regular expression: //^[a-zA-Z0-9_//: Unterminated character class
Mutant 0 in matcher.ts: spec.match replaced with spec.search
failed to parse replacement /^[a-zA-Z0-9_/:~.$+*-]*$/g: SyntaxError: Invalid regular expression: //^[a-zA-Z0-9_//: Unterminated character class
Mutant 1 in matcher.ts: spec.match replaced with spec.search
Mutant 2 in matcher.ts: spec.match replaced with spec.search
failed to parse replacement spec.match(version === '1' || version === '1.0'
      ? /[*+][^/]|[^/][*+]/
      : /\*[^*/]|\+[^+/]|[^/*]\*|[^/+]\+|\*\*\*|\+\+\+/) === null: SyntaxError: Invalid regular expression: //[*+][^//: Unterminated character class
failed to parse replacement spec.match(/[^/]:|:\/|:$/) === null: SyntaxError: Invalid regular expression: //[^//: Unterminated character class
Mutant 3 in matcher.ts: spec.match replaced with spec.search
Mutant 4 in matcher.ts: spec.match(/^.+\/$/) !== null replaced with spec.match(/^.+\/$/) === null
Mutant 5 in matcher.ts: spec.match replaced with spec.search
Mutant 6 in matcher.ts: /^.+\/$/ replaced with /^.+\/(?!$)/
failed to parse replacement spec.replace(/[*+][^/]|[^/][*+]/, ''): SyntaxError: Invalid regular expression: //[*+][^//: Unterminated character class
failed to parse replacement string.length > 1 && string.endsWith('/') && string.startsWith('/'): SyntaxError: Invalid regular expression: //') && string.startsWith('//: Unmatched ')'
Mutant 7 in matcher.ts: '/' replaced with '\\'
Mutant 8 in matcher.ts: string replaced with null
Mutant 9 in matcher.ts: max > 0 || any replaced with max > 0 && any
Mutant 10 in matcher.ts: final && opt && min < 1 replaced with final && opt && min <= 0
Mutant 11 in matcher.ts: min > 0 replaced with min < 0
Mutant 12 in matcher.ts: true replaced with false
Mutant 13 in matcher.ts: (acc, seg) => seg + acc replaced with (acc, seg) => seg - acc
Mutant 14 in matcher.ts: '$' replaced with '$$'
Mutant 15 in matcher.ts: for (const part of spec.split('/').slice(1).reverse()) {
  switch (part) {
    case '+':
      min++;
      max++;
      break;
    case '++':
      max++;
      break;
    case '*':
      min++;
      any = true;
      break;
    case '**':
      any = true;
      break;
    default:
      flatten();
      opt = false;
      if (part.match(/:.+/) !== null) {
        props.push(part.slice(1));
        parts.push('/([^/]+)');
      } else {
        parts.push(`/${part.replace(/([.$])/g, '\\$1')}`);
      }
  }
} replaced with for (const part of spec.split('/').slice(1)) {
  switch (part) {
    case '+':
      min++;
      max++;
      break;
    case '++':
      max++;
      break;
    case '*':
      min++;
      any = true;
      break;
    case '**':
      any = true;
      break;
    default:
      flatten();
      opt = false;
      if (part.match(/:.+/) !== null) {
        props.push(part.slice(1));
        parts.push('/([^/]+)');
      } else {
        parts.push(`/${part.replace(/([.$])/g, '\\$1')}`);
      }
  }
}
failed to parse replacement spec.split('/').slice(1).reverse().join('/'): SyntaxError: Invalid regular expression: //').slice(1).reverse().join('//: Unmatched ')'
Mutant 16 in matcher.ts: '/' replaced with '\\'
Mutant 17 in matcher.ts: 1 replaced with 0
Mutant 18 in matcher.ts: part replaced with part.slice(0, 1)
Mutant 19 in matcher.ts: part.match(/:.+/) !== null replaced with part.match(/:.+/) === null
Mutant 20 in matcher.ts: /:.+/ replaced with /:.*/
Mutant 21 in matcher.ts: part.slice(1) replaced with part.slice(2)
Mutant 22 in matcher.ts: 1 replaced with 0
Mutant 23 in matcher.ts: parts.push replaced with parts.pop
Mutant 24 in matcher.ts: parts.push replaced with parts.pop
failed to parse replacement `/${part.replace(/([.$])/g, '\\$1')}.replace(/^/, '\\')`: SyntaxError: Invalid regular expression: //${part.replace(//: Unterminated group
Mutant 25 in matcher.ts: part.replace(/([.$])/g, '\\$1') replaced with part.replace(/([.$])/g, '$1')
Mutant 26 in matcher.ts: /([.$])/g replaced with /([^.$])/g
Mutant 27 in matcher.ts: '\\$1' replaced with '\\$2'
Mutant 28 in policy.ts: this.rules.push replaced with this.rules.unshift
Mutant 29 in policy.ts: this.rules replaced with this.rules.slice()
Mutant 30 in policy.ts: rule.query(path, verb, ctx) replaced with rule.query(path, verb, ctx.clone())
Mutant 31 in policy.ts: path replaced with path.toLowerCase()
Mutant 32 in policy.ts: verb replaced with !verb
Mutant 33 in policy.ts: ctx replaced with null
Mutant 34 in policy.ts: res === false replaced with res === true
Mutant 35 in policy.ts: res === true replaced with res === false
Mutant 36 in policy.ts: this.rules replaced with this.rules.slice()
Mutant 37 in policy.ts: rule.matches(path, ctx) replaced with rule.matches(path, ctx) && false
Mutant 38 in policy.ts: rule.matches(path, ctx) replaced with rule.matches(path, ctx.parent)
Mutant 39 in policy.ts: path replaced with path.toLowerCase()
Mutant 40 in policy.ts: ctx replaced with null
Mutant 41 in policy.ts: rule => rule.clone() replaced with rule => rule.clone(null, false)
Mutant 42 in policymap.ts: policy => [policy.name, policy] replaced with policy => [policy.name, policy.name]
Mutant 43 in policymap.ts: for (const policy of policies) {
  this.set(policy.name, policy);
} replaced with for (const policy of policies.values()) {
  this.set(policy.name, policy);
}
Mutant 44 in policymap.ts: policies replaced with policies.slice()
Mutant 45 in policymap.ts: this.set(policy.name, policy) replaced with this.set(policy.name, policy.name)
Mutant 46 in policymap.ts: policy.name replaced with policy.name.toLowerCase()
Mutant 47 in policymap.ts: policy replaced with null
Mutant 48 in policymap.ts: this.get replaced with this.has
Mutant 49 in policymap.ts: name replaced with "name"
Mutant 50 in policymap.ts: policy.query(path, verb, ctx) replaced with policy.query(path, verb, ctx, undefined)
Mutant 51 in policymap.ts: path replaced with path.split('/')[0]
Mutant 52 in policymap.ts: verb replaced with !verb
Mutant 53 in policymap.ts: ctx replaced with ctx.path
Mutant 54 in policymap.ts: this.get replaced with this.has
Mutant 55 in policymap.ts: name replaced with name.toLowerCase()
Mutant 56 in policymap.ts: policy.matches(path, ctx) replaced with policy.matches(path, ctx, undefined)
Mutant 57 in policymap.ts: policy.matches replaced with policy.match
Mutant 58 in policymap.ts: path replaced with path.toLowerCase()
Mutant 59 in policymap.ts: ctx replaced with ctx.path
Mutant 60 in rule.ts: for (const verb of verbs) {
  if (!(verb in this.verbs)) {
    this.verbs[verb] = true;
  }
} replaced with for (const verb of verbs.keys()) {
  if (!(verb in this.verbs)) {
    this.verbs[verb] = true;
  }
}
Mutant 61 in rule.ts: verbs replaced with verbs.keys()
Mutant 62 in rule.ts: !(verb in this.verbs) replaced with verb in this.verbs
Mutant 63 in rule.ts: for (const verb of verbs) {
  this.verbs[verb] = false;
} replaced with for (const verb of this.verbs) {
  this.verbs[verb] = false;
}
Mutant 64 in rule.ts: verbs replaced with verbs.keys()
Mutant 65 in rule.ts: this.matches(path, ctx) && verb in this.verbs replaced with this.matches(path, ctx) || verb in this.verbs
Mutant 66 in rule.ts: this.matches(path, ctx) replaced with this.matches(path.match(this.regex))
Mutant 67 in rule.ts: this.matches replaced with !this.matches
Mutant 68 in rule.ts: path replaced with path.toLowerCase()
Mutant 69 in rule.ts: ctx replaced with ctx.path
Mutant 70 in rule.ts: path.match replaced with path.search
Mutant 71 in rule.ts: this.regex replaced with this.regex.test(path)
Mutant 72 in rule.ts: match === null replaced with match === undefined
Mutant 73 in rule.ts: count > 0 replaced with count < 0
Mutant 74 in rule.ts: ctx === undefined replaced with ctx !== undefined
Mutant 75 in rule.ts: index < count replaced with index <= count
Mutant 76 in rule.ts: index++ replaced with index--
Mutant 77 in rule.ts: prop === undefined || match[index + 1] !== prop replaced with prop === null || match[index + 1] !== prop
Mutant 78 in rule.ts: for (const verb in this.verbs) {
  rule.verbs[verb] = this.verbs[verb];
} replaced with for (const verb of this.verbs) {
  rule.verbs[verb] = this.verbs[verb];
}
Mutant 79 in rule.ts: this.verbs replaced with this.verbs.keys()
[32m19:56:53 (2521) INFO Instrumenter[39m Instrumented 6 source file(s) with 80 mutant(s)
[32m19:56:53 (2521) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m19:56:54 (2521) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m19:56:54 (2521) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m19:56:59 (2521) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4236 ms, overhead 1 ms).
Mutation testing 2% (elapsed: <1m, remaining: ~6m) 2/80 tested (0 survived, 0 timed out)
Mutation testing 6% (elapsed: <1m, remaining: ~5m) 5/80 tested (0 survived, 0 timed out)
Mutation testing 10% (elapsed: <1m, remaining: ~4m) 8/80 tested (1 survived, 0 timed out)
Mutation testing 13% (elapsed: <1m, remaining: ~4m) 11/80 tested (2 survived, 0 timed out)
Mutation testing 17% (elapsed: <1m, remaining: ~3m) 14/80 tested (2 survived, 0 timed out)
Mutation testing 21% (elapsed: ~1m, remaining: ~3m) 17/80 tested (2 survived, 0 timed out)
Mutation testing 25% (elapsed: ~1m, remaining: ~3m) 20/80 tested (2 survived, 0 timed out)
Mutation testing 28% (elapsed: ~1m, remaining: ~3m) 23/80 tested (3 survived, 0 timed out)
Mutation testing 32% (elapsed: ~1m, remaining: ~3m) 26/80 tested (3 survived, 0 timed out)
Mutation testing 36% (elapsed: ~1m, remaining: ~2m) 29/80 tested (4 survived, 0 timed out)
Mutation testing 40% (elapsed: ~1m, remaining: ~2m) 32/80 tested (6 survived, 0 timed out)
Mutation testing 43% (elapsed: ~2m, remaining: ~2m) 35/80 tested (6 survived, 0 timed out)
Mutation testing 47% (elapsed: ~2m, remaining: ~2m) 38/80 tested (7 survived, 0 timed out)
Mutation testing 51% (elapsed: ~2m, remaining: ~2m) 41/80 tested (8 survived, 0 timed out)
Mutation testing 55% (elapsed: ~2m, remaining: ~2m) 44/80 tested (9 survived, 0 timed out)
Mutation testing 60% (elapsed: ~2m, remaining: ~1m) 48/80 tested (11 survived, 0 timed out)
Mutation testing 63% (elapsed: ~2m, remaining: ~1m) 51/80 tested (12 survived, 0 timed out)
Mutation testing 67% (elapsed: ~3m, remaining: ~1m) 54/80 tested (12 survived, 0 timed out)
Mutation testing 71% (elapsed: ~3m, remaining: ~1m) 57/80 tested (14 survived, 0 timed out)
Mutation testing 75% (elapsed: ~3m, remaining: ~1m) 60/80 tested (15 survived, 0 timed out)
Mutation testing 78% (elapsed: ~3m, remaining: <1m) 63/80 tested (15 survived, 0 timed out)
Mutation testing 82% (elapsed: ~3m, remaining: <1m) 66/80 tested (15 survived, 0 timed out)
Mutation testing 86% (elapsed: ~3m, remaining: <1m) 69/80 tested (16 survived, 0 timed out)
Mutation testing 90% (elapsed: ~4m, remaining: <1m) 72/80 tested (16 survived, 0 timed out)
Mutation testing 93% (elapsed: ~4m, remaining: <1m) 75/80 tested (16 survived, 0 timed out)
Mutation testing 97% (elapsed: ~4m, remaining: <1m) 78/80 tested (17 survived, 0 timed out)

All tests
  ✓ All tests (killed 63)

[Survived] PrecomputedMutator
src/matcher.ts:39:46
-       if (string.length > 1 && string.endsWith('/')) {
+       if (string.length > 1 && string.endsWith('\\')) {

[Survived] PrecomputedMutator
src/matcher.ts:65:11
-         if (final && opt && min < 1) {
+         if (final && opt && min <= 0) {

[Survived] PrecomputedMutator
src/matcher.ts:111:24
-           if (part.match(/:.+/) !== null) {
+           if (part.match(/:.*/) !== null) {

[Survived] PrecomputedMutator
src/policy.ts:18:5
-       this.rules.push(...rules)
+       this.rules.unshift(...rules)

[Survived] PrecomputedMutator
src/policy.ts:32:24
-       for (const rule of this.rules) {
+       for (const rule of this.rules.slice()) {

[Survived] PrecomputedMutator
src/policy.ts:33:30
-         const res = rule.query(path, verb, ctx)
+         const res = rule.query(path.toLowerCase(), verb, ctx)

[Survived] PrecomputedMutator
src/policy.ts:48:24
-       for (const rule of this.rules) {
+       for (const rule of this.rules.slice()) {

[Survived] PrecomputedMutator
src/policy.ts:49:24
-         if (rule.matches(path, ctx)) {
+         if (rule.matches(path.toLowerCase(), ctx)) {

[Survived] PrecomputedMutator
src/policymap.ts:12:5
-       for (const policy of policies) {
-         this.set(policy.name, policy)
-       }
+       for (const policy of policies.values()) {
+     this.set(policy.name, policy);
+   }

[Survived] PrecomputedMutator
src/policymap.ts:12:26
-       for (const policy of policies) {
+       for (const policy of policies.slice()) {

[Survived] PrecomputedMutator
src/policymap.ts:13:16
-         this.set(policy.name, policy)
+         this.set(policy.name.toLowerCase(), policy)

[Survived] PrecomputedMutator
src/policymap.ts:30:9
-         ? policy.query(path, verb, ctx)
+         ? policy.query(path, verb, ctx, undefined)

[Survived] PrecomputedMutator
src/policymap.ts:39:29
-       const policy = this.get(name)
+       const policy = this.get(name.toLowerCase())

[Survived] PrecomputedMutator
src/policymap.ts:41:9
-         ? policy.matches(path, ctx)
+         ? policy.matches(path, ctx, undefined)

[Survived] PrecomputedMutator
src/policymap.ts:41:24
-         ? policy.matches(path, ctx)
+         ? policy.matches(path.toLowerCase(), ctx)

[Survived] PrecomputedMutator
src/rule.ts:50:22
-       if (this.matches(path, ctx) && verb in this.verbs) {
+       if (this.matches(path.toLowerCase(), ctx) && verb in this.verbs) {

[Survived] PrecomputedMutator
src/rule.ts:71:13
-           if (prop === undefined || match[index + 1] !== prop) {
+           if (prop === null || match[index + 1] !== prop) {

Ran 1.00 tests per mutant on average.
--------------|---------|----------|-----------|------------|----------|----------|
File          | % score | # killed | # timeout | # survived | # no cov | # errors |
--------------|---------|----------|-----------|------------|----------|----------|
All files     |   78.75 |       63 |         0 |         17 |        0 |        0 |
 matcher.ts   |   89.29 |       25 |         0 |          3 |        0 |        0 |
 policy.ts    |   64.29 |        9 |         0 |          5 |        0 |        0 |
 policymap.ts |   61.11 |       11 |         0 |          7 |        0 |        0 |
 rule.ts      |   90.00 |       18 |         0 |          2 |        0 |        0 |
--------------|---------|----------|-----------|------------|----------|----------|
[32m20:01:24 (2521) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/spacl-core/reports/mutation/mutation.html
[32m20:01:24 (2521) INFO MutationTestExecutor[39m Done in 4 minutes 32 seconds.

real	4m33.585s
user	6m10.323s
sys	0m28.030s
