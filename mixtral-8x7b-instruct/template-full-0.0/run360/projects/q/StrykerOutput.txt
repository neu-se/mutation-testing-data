*** using precomputed mutations ***
[32m02:25:45 (3294) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m02:25:45 (3294) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m02:25:45 (3294) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m02:25:45 (3294) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m02:25:45 (3294) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m02:25:46 (3294) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1643 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with false
Mutant 1 in q.js: typeof bootstrap === "function" replaced with true
Mutant 2 in q.js: typeof bootstrap === "function" replaced with 1 === 0
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promisf", definition)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", function () {})
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", true)
Mutant 6 in q.js: bootstrap replaced with null
Mutant 7 in q.js: "promise" replaced with null
Mutant 8 in q.js: "promise" replaced with 42
Mutant 9 in q.js: "promise" replaced with {}
Mutant 10 in q.js: typeof exports === "object" && typeof module === "object" replaced with true
Mutant 11 in q.js: typeof exports === "object" && typeof module === "object" replaced with "string"
Mutant 12 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof window === "undefined"
Mutant 13 in q.js: typeof define === "function" && define.amd replaced with true
Mutant 14 in q.js: typeof define === "function" && define.amd replaced with 1
Mutant 15 in q.js: typeof define === "function" && define.amd replaced with null
Mutant 16 in q.js: define replaced with null
Mutant 17 in q.js: typeof ses !== "undefined" replaced with false
Mutant 18 in q.js: typeof ses !== "undefined" replaced with typeof ses === "function"
Mutant 19 in q.js: !ses.ok() replaced with true
Mutant 20 in q.js: !ses.ok() replaced with 1 === 2
Mutant 21 in q.js: ses.ok replaced with false
Mutant 22 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with false
Mutant 23 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with 'undefined' === typeof window
Mutant 24 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with Object.prototype.toString.call(window) === '[object global]'
Mutant 25 in q.js: definition replaced with noop
Mutant 26 in q.js: head.next replaced with head.next || null
Mutant 27 in q.js: domain replaced with true
Mutant 28 in q.js: domain replaced with null
Mutant 29 in q.js: domain replaced with head.domain || {}
Mutant 30 in q.js: domain.enter replaced with null
Mutant 31 in q.js: runSingle(task, domain) replaced with runSingle(noop)
Mutant 32 in q.js: task replaced with () => task()
Mutant 33 in q.js: domain replaced with null
Mutant 34 in q.js: domain replaced with 123
Mutant 35 in q.js: domain replaced with 'string'
Mutant 36 in q.js: laterQueue.length replaced with 0
Mutant 37 in q.js: laterQueue.length replaced with null
Mutant 38 in q.js: task replaced with null
Mutant 39 in q.js: task replaced with true
Mutant 40 in q.js: task replaced with head.next
Mutant 41 in q.js: isNodeJS replaced with false
Mutant 42 in q.js: isNodeJS replaced with typeof window !== "undefined"
Mutant 43 in q.js: domain replaced with true
Mutant 44 in q.js: domain replaced with null
Mutant 45 in q.js: domain.exit replaced with global.Q.exit
Mutant 46 in q.js: domain.exit replaced with null
Mutant 47 in q.js: setTimeout(flush, 0) replaced with setTimeout(requestAnimationFrame(flush))
Mutant 48 in q.js: setTimeout replaced with 0
Mutant 49 in q.js: flush replaced with Promise.resolve().then(flush)
Mutant 50 in q.js: 0 replaced with 1
Mutant 51 in q.js: 0 replaced with '1'
Mutant 52 in q.js: 0 replaced with Infinity
Mutant 53 in q.js: domain replaced with false
Mutant 54 in q.js: domain replaced with null
Mutant 55 in q.js: domain replaced with undefined
Mutant 56 in q.js: domain replaced with false
Mutant 57 in q.js: domain replaced with null
Mutant 58 in q.js: domain.exit replaced with null
Mutant 59 in q.js: !flushing replaced with false
Mutant 60 in q.js: !flushing replaced with true
Mutant 61 in q.js: !flushing replaced with 1 < 2
Mutant 62 in q.js: flush replaced with function () {
  throw new Error('BANG!');
}
Mutant 63 in q.js: typeof window !== "undefined" replaced with false
Mutant 64 in q.js: typeof window !== "undefined" replaced with 1 > 0
Mutant 65 in q.js: typeof window !== "undefined" replaced with typeof window !== "undefined" ? false : true
Mutant 66 in q.js: window replaced with function () {
  return flush();
}
Mutant 67 in q.js: window replaced with {}
Mutant 68 in q.js: window replaced with null
Mutant 69 in q.js: setImmediate replaced with 0
Mutant 70 in q.js: setImmediate replaced with requestAnimationFrame
Mutant 71 in q.js: flush replaced with function () {}
Mutant 72 in q.js: flush replaced with 1
Mutant 73 in q.js: typeof MessageChannel !== "undefined" replaced with false
Mutant 74 in q.js: typeof MessageChannel !== "undefined" replaced with 0
Mutant 75 in q.js: typeof MessageChannel !== "undefined" replaced with 'undefined'
Mutant 76 in q.js: channel.port2.postMessage replaced with null
Mutant 77 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 78 in q.js: channel.port2.postMessage replaced with channel.port2.close
Mutant 79 in q.js: 0 replaced with 1
Mutant 80 in q.js: 0 replaced with 'some string'
Mutant 81 in q.js: 0 replaced with this
Mutant 82 in q.js: setTimeout replaced with 0 === 1
Mutant 83 in q.js: 0 replaced with 1000
Mutant 84 in q.js: 0 replaced with Infinity
Mutant 85 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 86 in q.js: setTimeout(flush, 0) replaced with setTimeout(null)
Mutant 87 in q.js: setTimeout(flush, 0) replaced with setTimeout(function () {/* do nothing */})
Mutant 88 in q.js: setTimeout replaced with undefined
Mutant 89 in q.js: setTimeout replaced with alert
Mutant 90 in q.js: flush replaced with function () {}
Mutant 91 in q.js: flush replaced with 1 + 1
Mutant 92 in q.js: flush replaced with flush.bind(this)
Mutant 93 in q.js: 0 replaced with 1
Mutant 94 in q.js: 0 replaced with Infinity
Mutant 95 in q.js: 0 replaced with -1
Mutant 96 in q.js: laterQueue.push replaced with []
Mutant 97 in q.js: laterQueue.push replaced with 42
Mutant 98 in q.js: task replaced with null
Mutant 99 in q.js: task replaced with 42
Mutant 100 in q.js: task replaced with {}
Mutant 101 in q.js: !flushing replaced with false
Mutant 102 in q.js: !flushing replaced with this.flushing
Mutant 103 in q.js: !flushing replaced with 0
Mutant 104 in q.js: call.apply(f, arguments) replaced with call.apply(this)
Mutant 105 in q.js: call.apply(f, arguments) replaced with call.apply(null)
Mutant 106 in q.js: f replaced with global.f
Mutant 107 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 108 in q.js: arguments replaced with null
Mutant 109 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 110 in q.js: uncurryThis replaced with Object.prototype.toString
Mutant 111 in q.js: Array.prototype.slice replaced with function () {
  throw new Error('Buggy slice');
}
Mutant 112 in q.js: Array.prototype.slice replaced with Array.prototype.filter
Mutant 113 in q.js: Array.prototype.slice replaced with Math.floor
Mutant 114 in q.js: arguments.length === 1 replaced with true
Mutant 115 in q.js: arguments.length === 1 replaced with this.length > 0
Mutant 116 in q.js: arguments.length === 1 replaced with array_indexOf(value, this) === 0
Mutant 117 in q.js: 1 replaced with null
Mutant 118 in q.js: 1 replaced with array_slice(arguments, 1)
Mutant 119 in q.js: index in this replaced with true
Mutant 120 in q.js: index in this replaced with index < this.length
Mutant 121 in q.js: index in this replaced with 0 in this
Mutant 122 in q.js: ++index >= length replaced with index > length
Mutant 123 in q.js: ++index >= length replaced with index + 1 > length
Mutant 124 in q.js: ++index >= length replaced with index * 2 > length
Mutant 125 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index > length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 126 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index == length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 127 in q.js: index++ replaced with index + 1
Mutant 128 in q.js: index++ replaced with index = index + 1
Mutant 129 in q.js: index in this replaced with false
Mutant 130 in q.js: index in this replaced with 0 in this
Mutant 131 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 132 in q.js: callback(basis, this[index], index) replaced with callback(null)
Mutant 133 in q.js: callback(basis, this[index], index) replaced with callback(index)
Mutant 134 in q.js: callback replaced with callback + 1
Mutant 135 in q.js: this[index] replaced with 0
Mutant 136 in q.js: this[index] replaced with this.length
Mutant 137 in q.js: index replaced with null
Mutant 138 in q.js: index replaced with 42
Mutant 139 in q.js: index replaced with this
Mutant 140 in q.js: i < this.length replaced with i > this.length
Mutant 141 in q.js: i < this.length replaced with i !== this.length
Mutant 142 in q.js: i++ replaced with i--
Mutant 143 in q.js: i++ replaced with Math.random()
Mutant 144 in q.js: i++ replaced with array_indexOf(value, this)
Mutant 145 in q.js: this[i] === value replaced with i === value
Mutant 146 in q.js: collect.push replaced with collect.unshift
Mutant 147 in q.js: collect.push replaced with collect.splice
Mutant 148 in q.js: callback.call(thisp, value, index, self) replaced with callback(value, index, self)
Mutant 149 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(null, [value, index, self])
Mutant 150 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(self, index, value, self)
Mutant 151 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(null)
Mutant 152 in q.js: callback.call(thisp, value, index, self) replaced with callback.call([])
Mutant 153 in q.js: callback.call replaced with callback.bind
Mutant 154 in q.js: thisp replaced with 5
Mutant 155 in q.js: thisp replaced with function () {
  return this;
}
Mutant 156 in q.js: value replaced with 42
Mutant 157 in q.js: value replaced with this
Mutant 158 in q.js: self replaced with 5
Mutant 159 in q.js: self replaced with function () {}
Mutant 160 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 161 in q.js: object replaced with Object.prototype
Mutant 162 in q.js: object replaced with null
Mutant 163 in q.js: object replaced with function () {
  return 42;
}
Mutant 164 in q.js: object_hasOwnProperty(object, key) replaced with object.hasOwnProperty(key)
Mutant 165 in q.js: object_hasOwnProperty(object, key) replaced with Array.prototype.hasOwnProperty.call(object, key)
Mutant 166 in q.js: object_hasOwnProperty(object, key) replaced with Object.prototype.hasOwnProperty.call(object, key)
Mutant 167 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(this)
Mutant 168 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(window)
Mutant 169 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(Math)
Mutant 170 in q.js: object_hasOwnProperty replaced with Array.isArray
Mutant 171 in q.js: key replaced with "toString"
Mutant 172 in q.js: key replaced with null
Mutant 173 in q.js: key replaced with 1
Mutant 174 in q.js: key replaced with null
Mutant 175 in q.js: key replaced with 42
Mutant 176 in q.js: uncurryThis replaced with Function.prototype.bind
Mutant 177 in q.js: Object replaced with null
Mutant 178 in q.js: Object replaced with Array
Mutant 179 in q.js: value replaced with null
Mutant 180 in q.js: value replaced with ''
Mutant 181 in q.js: value replaced with true
Mutant 182 in q.js: object_toString replaced with '[object Object]'
Mutant 183 in q.js: object_toString replaced with 1
Mutant 184 in q.js: exception replaced with null
Mutant 185 in q.js: exception replaced with {}
Mutant 186 in q.js: typeof ReturnValue !== "undefined" replaced with true
Mutant 187 in q.js: typeof ReturnValue !== "undefined" replaced with typeof globalThis.ReturnValue !== "undefined"
Mutant 188 in q.js: typeof ReturnValue !== "undefined" replaced with typeof someUndefinedVariable !== "undefined"
Mutant 189 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks
Mutant 190 in q.js: !!p replaced with p ? 1 : 0
Mutant 191 in q.js: !!p replaced with !p.source
Mutant 192 in q.js: !!p replaced with p instanceof Error
Mutant 193 in q.js: p = p.source replaced with null
Mutant 194 in q.js: p = p.source replaced with 1
Mutant 195 in q.js: p = p.source replaced with p.length
Mutant 196 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ < p.stackCounter
Mutant 197 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(null)
Mutant 198 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty({})
Mutant 199 in q.js: object_defineProperty replaced with Object.defineProperty
Mutant 200 in q.js: error replaced with null
Mutant 201 in q.js: error replaced with []
Mutant 202 in q.js: error replaced with function () {}
Mutant 203 in q.js: "__minimumStackCounter__" replaced with this.__minimumStackCounter__
Mutant 204 in q.js: "__minimumStackCounter__" replaced with Math.random()
Mutant 205 in q.js: "__minimumStackCounter__" replaced with new Date().getTime()
Mutant 206 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: 42,
  configurable: true
}
Mutant 207 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.source.stackCounter,
  configurable: true
}
Mutant 208 in q.js: error.stack replaced with "error.stackTrace"
Mutant 209 in q.js: error.stack replaced with 1 / 0
Mutant 210 in q.js: error.stack replaced with Math.random()
Mutant 211 in q.js: stacks.join replaced with stacks.concat.join
Mutant 212 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with " From previous event:\n"
Mutant 213 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with STACK_JUMP_SEPARATOR + "\n"
Mutant 214 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\nAnother event separator:\n"
Mutant 215 in q.js: concatedStacks replaced with error.stack.toString()
Mutant 216 in q.js: concatedStacks replaced with promise.stack
Mutant 217 in q.js: concatedStacks replaced with new Error().stack
Mutant 218 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(null)
Mutant 219 in q.js: "stack" replaced with error.stack.toString()
Mutant 220 in q.js: "\n" replaced with ";\n"
Mutant 221 in q.js: "\n" replaced with "\n" + String.fromCharCode(0)
Mutant 222 in q.js: i < lines.length replaced with i <= lines.length
Mutant 223 in q.js: i < lines.length replaced with i > -1
Mutant 224 in q.js: i < lines.length replaced with i in lines
Mutant 225 in q.js: ++i replaced with i--
Mutant 226 in q.js: ++i replaced with i + 1
Mutant 227 in q.js: ++i replaced with Math.random()
Mutant 228 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line.indexOf('node') === -1
Mutant 229 in q.js: isInternalFrame replaced with typeof isInternalFrame !== 'function'
Mutant 230 in q.js: line replaced with isInternalFrame(line + 'x')
Mutant 231 in q.js: isNodeFrame replaced with typeof isNodeFrame !== 'function'
Mutant 232 in q.js: line replaced with "<PLACEHOLDER>"
Mutant 233 in q.js: line replaced with Math.random()
Mutant 234 in q.js: line replaced with new Error()
Mutant 235 in q.js: "\n" replaced with "<br>"
Mutant 236 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 237 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 238 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 239 in q.js: stackLine.indexOf replaced with 1 in stackLine
Mutant 240 in q.js: "(node.js:" replaced with ""
Mutant 241 in q.js: stackLine replaced with "1: " + stackLine
Mutant 242 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 243 in q.js: attempt1 replaced with attempt1 && attempt1.length > 1
Mutant 244 in q.js: attempt1 replaced with getFileNameAndLineNumber(stackLine)[0] === 'attempt1'
Mutant 245 in q.js: Number replaced with value.length
Mutant 246 in q.js: attempt1[2] replaced with value.length
Mutant 247 in q.js: attempt1[2] replaced with object_keys(value)[2]
Mutant 248 in q.js: attempt1[2] replaced with Math.random()
Mutant 249 in q.js: Number replaced with NaN
Mutant 250 in q.js: Number replaced with 'foo'
Mutant 251 in q.js: Number replaced with Infinity
Mutant 252 in q.js: attempt2[2] replaced with Infinity
Mutant 253 in q.js: attempt2[2] replaced with 1 / 0
Mutant 254 in q.js: attempt2[2] replaced with new Date()
Mutant 255 in q.js: stackLine replaced with "[object GlobalError]"
Mutant 256 in q.js: stackLine replaced with /.*@(.+):(\d+)$/g
Mutant 257 in q.js: stackLine replaced with "anonymous function"
Mutant 258 in q.js: Number replaced with "0"
Mutant 259 in q.js: Number replaced with true
Mutant 260 in q.js: Number replaced with null
Mutant 261 in q.js: attempt3[2] replaced with 1
Mutant 262 in q.js: attempt3[2] replaced with 'PLACEHOLDER'
Mutant 263 in q.js: getFileNameAndLineNumber replaced with null
Mutant 264 in q.js: getFileNameAndLineNumber replaced with []
Mutant 265 in q.js: stackLine replaced with stackLine + ''
Mutant 266 in q.js: stackLine replaced with global.stackLine
Mutant 267 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 268 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === 'undefined'
Mutant 269 in q.js: !fileNameAndLineNumber replaced with !Array.isArray(fileNameAndLineNumber)
Mutant 270 in q.js: !hasStacks replaced with false
Mutant 271 in q.js: !hasStacks replaced with typeof hasStacks === "undefined"
Mutant 272 in q.js: !hasStacks replaced with hasStacks === null
Mutant 273 in q.js: e.stack.split replaced with "<error object>'.stack"
Mutant 274 in q.js: e.stack.split replaced with [1, 2, 3]
Mutant 275 in q.js: "\n" replaced with "\nFrom previous event:\n"
Mutant 276 in q.js: "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + "\n" + STACK_JUMP_SEPARATOR + "\n"
Mutant 277 in q.js: "\n" replaced with "\nAnother event:\n"
Mutant 278 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 279 in q.js: lines[0].indexOf replaced with "PLACEHOLDER".indexOf
Mutant 280 in q.js: lines[0].indexOf replaced with getFileNameAndLineNumber.indexOf
Mutant 281 in q.js: "@" replaced with "<@"
Mutant 282 in q.js: "@" replaced with "@module.js"
Mutant 283 in q.js: "@" replaced with "@ line 1"
Mutant 284 in q.js: getFileNameAndLineNumber replaced with ['<filename>', 0]
Mutant 285 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 286 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === 'undefined'
Mutant 287 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with true
Mutant 288 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with 1 < 2
Mutant 289 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof window !== "undefined" && typeof window.console === "object" && typeof window.console.warn === "function"
Mutant 290 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, null)
Mutant 291 in q.js: callback.apply replaced with callback.call
Mutant 292 in q.js: callback.apply replaced with callback.bind
Mutant 293 in q.js: callback.apply replaced with callback.constructor.prototype.methodName
Mutant 294 in q.js: callback replaced with callback.bind(null, 1)
Mutant 295 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 296 in q.js: arguments replaced with Object.keys(arguments)
Mutant 297 in q.js: arguments replaced with arguments.callee
Mutant 298 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 299 in q.js: value instanceof Promise replaced with Object.prototype.toString.call(value) === '[object Promise]'
Mutant 300 in q.js: value instanceof Promise replaced with value && typeof value.then === 'function'
Mutant 301 in q.js: isPromiseAlike(value) replaced with value && isPromiseAlike(value)
Mutant 302 in q.js: isPromiseAlike(value) replaced with isPromiseAlike(value) || true
Mutant 303 in q.js: isPromiseAlike replaced with value && value.then
Mutant 304 in q.js: isPromiseAlike replaced with value && typeof value.then === 'function'
Mutant 305 in q.js: isPromiseAlike replaced with value && value.constructor.name === 'Promise'
Mutant 306 in q.js: value replaced with 1 * value
Mutant 307 in q.js: coerce replaced with null
Mutant 308 in q.js: coerce replaced with 42
Mutant 309 in q.js: value replaced with value || true
Mutant 310 in q.js: value replaced with value ? value : 42
Mutant 311 in q.js: value replaced with value && 'some string'
Mutant 312 in q.js: value replaced with null
Mutant 313 in q.js: object_create replaced with {}
Mutant 314 in q.js: object_create replaced with null
Mutant 315 in q.js: defer.prototype replaced with {}
Mutant 316 in q.js: defer.prototype replaced with null
Mutant 317 in q.js: defer.prototype replaced with Object.create(Array.prototype)
Mutant 318 in q.js: object_create replaced with {}
Mutant 319 in q.js: Promise.prototype replaced with null
Mutant 320 in q.js: Promise.prototype replaced with {}
Mutant 321 in q.js: Promise.prototype replaced with function () {}
Mutant 322 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 323 in q.js: arguments replaced with Array.prototype.slice.call(arguments)
Mutant 324 in q.js: arguments replaced with [...arguments]
Mutant 325 in q.js: messages replaced with messages.length > 0
Mutant 326 in q.js: messages replaced with true
Mutant 327 in q.js: messages replaced with typeof messages !== 'undefined'
Mutant 328 in q.js: messages.push replaced with messages.unshift
Mutant 329 in q.js: messages.push replaced with messages.length = 0
Mutant 330 in q.js: messages.push replaced with window.messages.push
Mutant 331 in q.js: args replaced with []
Mutant 332 in q.js: args replaced with null
Mutant 333 in q.js: op === "when" && operands[1] replaced with op === "when" && "someString"
Mutant 334 in q.js: op === "when" && operands[1] replaced with op === "then"
Mutant 335 in q.js: op === "when" && operands[1] replaced with operands[0]
Mutant 336 in q.js: operands[1] replaced with 1
Mutant 337 in q.js: operands[1] replaced with null
Mutant 338 in q.js: operands[1] replaced with Math.random()
Mutant 339 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply([resolvedPromise].concat(args))
Mutant 340 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 341 in q.js: resolvedPromise replaced with Promise.resolve()
Mutant 342 in q.js: resolvedPromise replaced with null
Mutant 343 in q.js: resolvedPromise replaced with deferred
Mutant 344 in q.js: messages replaced with null
Mutant 345 in q.js: messages replaced with []
Mutant 346 in q.js: resolvedPromise replaced with null
Mutant 347 in q.js: resolvedPromise replaced with new Promise(function () {})
Mutant 348 in q.js: resolvedPromise replaced with Promise.resolve()
Mutant 349 in q.js: isPromise(nearerValue) replaced with nearerValue instanceof Promise
Mutant 350 in q.js: isPromise replaced with false
Mutant 351 in q.js: isPromise replaced with null
Mutant 352 in q.js: isPromise replaced with messages.length
Mutant 353 in q.js: nearerValue replaced with null
Mutant 354 in q.js: nearerValue replaced with Promise.resolve()
Mutant 355 in q.js: nearerValue replaced with new Promise(function () {})
Mutant 356 in q.js: !resolvedPromise replaced with this.inspect() === undefined
Mutant 357 in q.js: !resolvedPromise replaced with typeof resolvedPromise === 'undefined'
Mutant 358 in q.js: !resolvedPromise replaced with !this.inspect().state
Mutant 359 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 360 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 361 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && (hasStacks || true)
Mutant 362 in q.js: e.stack.substring replaced with e.message
Mutant 363 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n").length
Mutant 364 in q.js: e.stack.indexOf("\n") + 1 replaced with 1
Mutant 365 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\r") + 1
Mutant 366 in q.js: e.stack.indexOf replaced with e.stack.search
Mutant 367 in q.js: "\n" replaced with e.stack.substring(e.stack.indexOf("\n") + 2)
Mutant 368 in q.js: Q.longStackSupport && hasStacks replaced with false
Mutant 369 in q.js: Q.longStackSupport && hasStacks replaced with true
Mutant 370 in q.js: Q.longStackSupport && hasStacks replaced with 1
Mutant 371 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise)
Mutant 372 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 373 in q.js: message replaced with []
Mutant 374 in q.js: message replaced with messages
Mutant 375 in q.js: message replaced with [1, 2, 3]
Mutant 376 in q.js: resolvedPromise replaced with true
Mutant 377 in q.js: resolvedPromise replaced with null
Mutant 378 in q.js: resolvedPromise replaced with deferred
Mutant 379 in q.js: Q(value) replaced with new Q(value)
Mutant 380 in q.js: Q(value) replaced with Promise.resolve(value)
Mutant 381 in q.js: Q(value) replaced with Q.resolve(value).then(function (val) {
  return val;
})
Mutant 382 in q.js: value replaced with null
Mutant 383 in q.js: value replaced with this
Mutant 384 in q.js: value replaced with new Promise(resolve => resolve(value))
Mutant 385 in q.js: resolvedPromise replaced with false
Mutant 386 in q.js: resolvedPromise replaced with null
Mutant 387 in q.js: resolvedPromise replaced with this
Mutant 388 in q.js: fulfill(value) replaced with new Promise(resolve => resolve(value))
Mutant 389 in q.js: fulfill(value) replaced with fulfill(new Value(value))
Mutant 390 in q.js: value replaced with null
Mutant 391 in q.js: value replaced with this
Mutant 392 in q.js: value replaced with new Error('Replacement error')
Mutant 393 in q.js: resolvedPromise replaced with true
Mutant 394 in q.js: resolvedPromise replaced with null
Mutant 395 in q.js: resolvedPromise replaced with new Promise(function () {})
Mutant 396 in q.js: reject(reason) replaced with Promise.reject(reason)
Mutant 397 in q.js: reject(reason) replaced with deferred.reject(reason)
Mutant 398 in q.js: reject replaced with true
Mutant 399 in q.js: reject replaced with deferred.resolve
Mutant 400 in q.js: reason replaced with new Error("New error message")
Mutant 401 in q.js: reason replaced with {}
Mutant 402 in q.js: reason replaced with null
Mutant 403 in q.js: resolvedPromise replaced with false
Mutant 404 in q.js: resolvedPromise replaced with null
Mutant 405 in q.js: resolvedPromise replaced with []
Mutant 406 in q.js: progressListener replaced with null
Mutant 407 in q.js: progress replaced with 0
Mutant 408 in q.js: progress replaced with {}
Mutant 409 in q.js: progress replaced with null
Mutant 410 in q.js: error replaced with true
Mutant 411 in q.js: error replaced with Q.resolve()
Mutant 412 in q.js: self.reject replaced with self.resolve
Mutant 413 in q.js: error replaced with null
Mutant 414 in q.js: error replaced with 42
Mutant 415 in q.js: error replaced with new Error('User-defined error')
Mutant 416 in q.js: arguments.length > 2 replaced with false
Mutant 417 in q.js: arguments.length > 2 replaced with true
Mutant 418 in q.js: arguments.length > 2 replaced with arguments[0] === undefined
Mutant 419 in q.js: array_slice(arguments, 1) replaced with null
Mutant 420 in q.js: array_slice(arguments, 1) replaced with [1]
Mutant 421 in q.js: array_slice(arguments, 1) replaced with function () {}
Mutant 422 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 423 in q.js: array_slice replaced with arguments.callee.caller
Mutant 424 in q.js: arguments replaced with [1, 2, 3]
Mutant 425 in q.js: arguments replaced with {
  value: 'foo'
}
Mutant 426 in q.js: 1 replaced with arguments.length > 1
Mutant 427 in q.js: 1 replaced with 0
Mutant 428 in q.js: 1 replaced with Q.resolve(array_slice(arguments))
Mutant 429 in q.js: value replaced with null
Mutant 430 in q.js: value replaced with new Error('Replacement error')
Mutant 431 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 432 in q.js: typeof resolver !== "function" replaced with Object.prototype.toString.call(resolver) !== "[object Function]"
Mutant 433 in q.js: typeof resolver !== "function" replaced with typeof resolver !== typeof Function
Mutant 434 in q.js: defer replaced with null
Mutant 435 in q.js: defer replaced with {}
Mutant 436 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver([deferred.resolve, deferred.reject, deferred.notify][Math.floor(Math.random() * 3)])
Mutant 437 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve.bind(null, 'hacked value'))
Mutant 438 in q.js: resolver replaced with []
Mutant 439 in q.js: resolver replaced with null
Mutant 440 in q.js: deferred.resolve replaced with deferred.resolve(null)
Mutant 441 in q.js: deferred.resolve replaced with deferred.reject
Mutant 442 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 443 in q.js: deferred.reject replaced with deferred.resolve
Mutant 444 in q.js: deferred.reject replaced with deferred.notify
Mutant 445 in q.js: deferred.reject replaced with function () {
  throw new Error('Buggy replacement');
}
Mutant 446 in q.js: deferred.notify replaced with deferred.resolve
Mutant 447 in q.js: deferred.reject replaced with deferred.resolve
Mutant 448 in q.js: deferred.reject replaced with deferred.notify
Mutant 449 in q.js: reason replaced with new Error('Buggy Reason')
Mutant 450 in q.js: reason replaced with null
Mutant 451 in q.js: reason replaced with Q.reject('Buggy Reason')
Mutant 452 in q.js: Q replaced with Promise
Mutant 453 in q.js: Q replaced with null
Mutant 454 in q.js: x replaced with 0
Mutant 455 in q.js: x replaced with null
Mutant 456 in q.js: y replaced with null
Mutant 457 in q.js: [this, that] replaced with [[this, that]]
Mutant 458 in q.js: [this, that] replaced with [null, that]
Mutant 459 in q.js: [this, that] replaced with [that, this]
Mutant 460 in q.js: x === y replaced with x == y
Mutant 461 in q.js: x === y replaced with x.valueOf() === y.valueOf()
Mutant 462 in q.js: x === y replaced with Object.is(x, y)
Mutant 463 in q.js: i < len replaced with i > -1
Mutant 464 in q.js: i++ replaced with i += 2
Mutant 465 in q.js: i++ replaced with Q.resolve(null)
Mutant 466 in q.js: answerPs[i] replaced with null
Mutant 467 in q.js: answerPs[i] replaced with answerPs[i] || {}
Mutant 468 in q.js: answerPs[i] replaced with Promise.resolve()
Mutant 469 in q.js: resolve replaced with deferred.resolve
Mutant 470 in q.js: resolve replaced with deferred.resolve(null)
Mutant 471 in q.js: reject replaced with function () {}
Mutant 472 in q.js: this.then replaced with this['then']
Mutant 473 in q.js: Q.race replaced with function () {
  return Q();
}
Mutant 474 in q.js: fallback === void 0 replaced with fallback !== void 0
Mutant 475 in q.js: inspect === void 0 replaced with inspect !== undefined
Mutant 476 in q.js: inspect === void 0 replaced with inspect !== null
Mutant 477 in q.js: inspect === void 0 replaced with inspect !== window.inspect
Mutant 478 in q.js: object_create replaced with null
Mutant 479 in q.js: Promise.prototype replaced with Object.create(null)
Mutant 480 in q.js: Promise.prototype replaced with {}
Mutant 481 in q.js: Promise.prototype replaced with function () {}
Mutant 482 in q.js: descriptor[op] replaced with false
Mutant 483 in q.js: descriptor[op] replaced with descriptor['op']
Mutant 484 in q.js: descriptor[op] replaced with Promise.resolve()
Mutant 485 in q.js: descriptor[op].apply replaced with descriptor[op].call
Mutant 486 in q.js: descriptor[op].apply replaced with descriptor.op
Mutant 487 in q.js: args replaced with []
Mutant 488 in q.js: args replaced with null
Mutant 489 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 490 in q.js: fallback.call(promise, op, args) replaced with fallback.call([])
Mutant 491 in q.js: fallback.call(promise, op, args) replaced with fallback.call(null)
Mutant 492 in q.js: fallback.call(promise, op, args) replaced with fallback.call(function () {})
Mutant 493 in q.js: fallback.call replaced with fallback.apply
Mutant 494 in q.js: op replaced with "notAnOp"
Mutant 495 in q.js: op replaced with 123
Mutant 496 in q.js: op replaced with promise
Mutant 497 in q.js: args replaced with []
Mutant 498 in q.js: args replaced with null
Mutant 499 in q.js: args replaced with {
  op: 'some_random_op'
}
Mutant 500 in q.js: exception replaced with new Error("Buggy error message")
Mutant 501 in q.js: exception replaced with null
Mutant 502 in q.js: exception replaced with {}
Mutant 503 in q.js: result replaced with null
Mutant 504 in q.js: result replaced with 42
Mutant 505 in q.js: result replaced with deferred.resolve
Mutant 506 in q.js: inspect replaced with null
Mutant 507 in q.js: inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 508 in q.js: inspected.state === "rejected" replaced with inspected.reason
Mutant 509 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 510 in q.js: inspect replaced with null
Mutant 511 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 512 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled" || inspected.state === "rejected"
Mutant 513 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "settled"
Mutant 514 in q.js: defer replaced with {}
Mutant 515 in q.js: fulfilled replaced with 1 + fulfilled
Mutant 516 in q.js: value replaced with null
Mutant 517 in q.js: value replaced with new Promise(function () {})
Mutant 518 in q.js: value replaced with Promise.resolve()
Mutant 519 in q.js: reject replaced with Promise.reject
Mutant 520 in q.js: reject replaced with null
Mutant 521 in q.js: exception replaced with new Error("Buggy replacement")
Mutant 522 in q.js: exception replaced with {}
Mutant 523 in q.js: exception replaced with null
Mutant 524 in q.js: typeof rejected === "function" replaced with true
Mutant 525 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 526 in q.js: typeof rejected === "function" replaced with typeof rejected === "object"
Mutant 527 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(new Error())
Mutant 528 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(self)
Mutant 529 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(null)
Mutant 530 in q.js: exception replaced with new Error("New error message")
Mutant 531 in q.js: exception replaced with {}
Mutant 532 in q.js: exception replaced with Q.reject("Rejection message")
Mutant 533 in q.js: exception replaced with new Error("Buggy error")
Mutant 534 in q.js: exception replaced with {}
Mutant 535 in q.js: exception replaced with null
Mutant 536 in q.js: reject replaced with Promise.reject
Mutant 537 in q.js: newException replaced with value
Mutant 538 in q.js: newException replaced with null
Mutant 539 in q.js: newException replaced with Promise.resolve()
Mutant 540 in q.js: exception replaced with new Error("New error message")
Mutant 541 in q.js: exception replaced with null
Mutant 542 in q.js: value replaced with null
Mutant 543 in q.js: value replaced with value + 1
Mutant 544 in q.js: value replaced with this.value
Mutant 545 in q.js: done replaced with true
Mutant 546 in q.js: done replaced with 1 === 1
Mutant 547 in q.js: deferred.resolve replaced with deferred.reject
Mutant 548 in q.js: deferred.resolve replaced with deferred.promise.resolve
Mutant 549 in q.js: deferred.resolve replaced with deferred.notify
Mutant 550 in q.js: _fulfilled(value) replaced with null
Mutant 551 in q.js: _fulfilled(value) replaced with 42
Mutant 552 in q.js: _fulfilled(value) replaced with this.inspect()
Mutant 553 in q.js: _fulfilled replaced with _rejected
Mutant 554 in q.js: value replaced with Promise.resolve()
Mutant 555 in q.js: done replaced with false
Mutant 556 in q.js: done replaced with true
Mutant 557 in q.js: deferred.resolve replaced with deferred.reject
Mutant 558 in q.js: deferred.resolve replaced with deferred.notify
Mutant 559 in q.js: _rejected(exception) replaced with Promise.reject(exception)
Mutant 560 in q.js: _rejected(exception) replaced with _rejected.call(null, exception)
Mutant 561 in q.js: _rejected(exception) replaced with Promise.resolve().then(function () {
  throw exception;
})
Mutant 562 in q.js: exception replaced with new Error('Intentionally introduced error')
Mutant 563 in q.js: exception replaced with exception.message
Mutant 564 in q.js: value replaced with 2 * value
Mutant 565 in q.js: value replaced with null
Mutant 566 in q.js: value replaced with promise.value
Mutant 567 in q.js: Q.onerror replaced with () => {}
Mutant 568 in q.js: Q.onerror replaced with null
Mutant 569 in q.js: Q.onerror replaced with console.log
Mutant 570 in q.js: Q.onerror replaced with console.error
Mutant 571 in q.js: Q.onerror replaced with null
Mutant 572 in q.js: e replaced with new Error()
Mutant 573 in q.js: e replaced with null
Mutant 574 in q.js: e replaced with Promise.reject('An error occurred')
Mutant 575 in q.js: !threw replaced with true
Mutant 576 in q.js: !threw replaced with false
Mutant 577 in q.js: !threw replaced with threw === false
Mutant 578 in q.js: deferred.notify replaced with deferred.resolve
Mutant 579 in q.js: newValue replaced with null
Mutant 580 in q.js: newValue replaced with newValue + 1
Mutant 581 in q.js: newValue replaced with Q(newValue)
Mutant 582 in q.js: Q(promise).tap replaced with promise.constructor.prototype.tap
Mutant 583 in q.js: promise replaced with Promise.resolve()
Mutant 584 in q.js: promise replaced with new Promise(function () {})
Mutant 585 in q.js: promise replaced with Q.reject(new Error('Buggy!'))
Mutant 586 in q.js: callback replaced with () => callback
Mutant 587 in q.js: callback replaced with callback.bind(this)
Mutant 588 in q.js: callback replaced with callback || function () {}
Mutant 589 in q.js: callback.fcall replaced with callback
not replacing callback.fcall with callback
not replacing callback.fcall with callback
Mutant 590 in q.js: value replaced with null
Mutant 591 in q.js: value replaced with value + 1
Mutant 592 in q.js: value replaced with Promise.resolve()
Mutant 593 in q.js: value replaced with Q.reject(new Error('Replacement error'))
Mutant 594 in q.js: value replaced with value + 1
Mutant 595 in q.js: value replaced with null
Mutant 596 in q.js: value replaced with value + 1
Mutant 597 in q.js: value replaced with this.value
Mutant 598 in q.js: fulfilled replaced with () => fulfilled
Mutant 599 in q.js: fulfilled replaced with Math.max
Mutant 600 in q.js: fulfilled replaced with deferred.resolve
Mutant 601 in q.js: rejected replaced with function () {
  return rejected.apply(this, arguments);
}
Mutant 602 in q.js: rejected replaced with function () {
  return rejected(exception, this, arguments);
}
Mutant 603 in q.js: progressed replaced with function () {
  return progressed.apply(this, arguments);
}
Mutant 604 in q.js: progressed replaced with progressed.bind(null)
Mutant 605 in q.js: progressed replaced with Math.max
Mutant 606 in q.js: this.then replaced with this.catch
Mutant 607 in q.js: function () {
  return value;
} replaced with function () {
  throw value;
}
Mutant 608 in q.js: function () {
  return value;
} replaced with function () {
  return;
}
Mutant 609 in q.js: function () {
  return value;
} replaced with function (value) {
  return value * 2;
}
Mutant 610 in q.js: promise replaced with Promise.resolve()
Mutant 611 in q.js: promise replaced with new Promise(() => {})
Mutant 612 in q.js: promise replaced with Q.reject(new Error('Bug'))
Mutant 613 in q.js: value replaced with null
Mutant 614 in q.js: function () {
  throw reason;
} replaced with () => {/* empty arrow function */}
Mutant 615 in q.js: function () {
  throw reason;
} replaced with () => {
  return reason;
}
Mutant 616 in q.js: function () {
  throw reason;
} replaced with () => {
  throw new Error(reason);
}
Mutant 617 in q.js: Q(promise).thenReject replaced with Promise.reject
Mutant 618 in q.js: Q replaced with Q.reject
Mutant 619 in q.js: promise replaced with Promise.resolve()
Mutant 620 in q.js: promise replaced with Q.reject('An error')
Mutant 621 in q.js: reason replaced with new Error('Replacement error')
Mutant 622 in q.js: reason replaced with null
Mutant 623 in q.js: reason replaced with reason.message
Mutant 624 in q.js: isPromise(value) replaced with value instanceof Object
Mutant 625 in q.js: isPromise(value) replaced with value.constructor.name === 'Promise'
Mutant 626 in q.js: isPromise(value) replaced with typeof value.then === 'undefined'
Mutant 627 in q.js: isPromise replaced with value && value.then
Mutant 628 in q.js: value replaced with null
Mutant 629 in q.js: value replaced with value + 1
Mutant 630 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 631 in q.js: inspected.state === "fulfilled" replaced with inspected.value === null
Mutant 632 in q.js: inspected.state === "fulfilled" replaced with inspected.hasOwnProperty("value")
Mutant 633 in q.js: isObject replaced with typeof object === 'object'
Mutant 634 in q.js: object replaced with null
Mutant 635 in q.js: object replaced with this
Mutant 636 in q.js: object replaced with Promise.resolve(object)
Mutant 637 in q.js: isPromise replaced with typeof value === 'object' && value !== null && typeof value.then === 'function'
Mutant 638 in q.js: isPromise replaced with value && value.constructor.name === 'Promise'
Mutant 639 in q.js: isPromise replaced with value instanceof Promise || value.constructor.name === 'Deferred'
Mutant 640 in q.js: object replaced with false
Mutant 641 in q.js: object replaced with null
Mutant 642 in q.js: object replaced with new Proxy({}, {
  get: function () {
    throw new Error('Unauthorized access');
  }
})
Mutant 643 in q.js: object.inspect replaced with global.inspect
Mutant 644 in q.js: object.inspect replaced with object['inspect']
Mutant 645 in q.js: object.inspect replaced with Object.prototype.inspect
not replacing object.inspect with global.inspect
not replacing object.inspect with object['inspect']
not replacing object.inspect with Object.prototype.inspect
Mutant 646 in q.js: this.inspect replaced with {}
not replacing this.inspect with {}
Mutant 647 in q.js: object replaced with true
Mutant 648 in q.js: object replaced with null
Mutant 649 in q.js: object replaced with this
Mutant 650 in q.js: object.inspect replaced with null.inspect
not replacing object.inspect with null.inspect
Mutant 651 in q.js: isPromise replaced with false
Mutant 652 in q.js: isPromise replaced with 0
Mutant 653 in q.js: isPromise replaced with null
Mutant 654 in q.js: object replaced with false
Mutant 655 in q.js: object replaced with null
Mutant 656 in q.js: object replaced with this
Mutant 657 in q.js: object.inspect replaced with false
Mutant 658 in q.js: object.inspect replaced with null
Mutant 659 in q.js: object.inspect replaced with {}['state']
not replacing object.inspect with false
not replacing object.inspect with null
not replacing object.inspect with {}['state']
Mutant 660 in q.js: !trackUnhandledRejections replaced with false
Mutant 661 in q.js: !trackUnhandledRejections replaced with false
Mutant 662 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 663 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.some(p => p === promise)
Mutant 664 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, Q.reject(reason))
Mutant 665 in q.js: array_indexOf replaced with unhandledRejections.length
Mutant 666 in q.js: unhandledRejections replaced with []
Mutant 667 in q.js: unhandledRejections replaced with null
Mutant 668 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 669 in q.js: promise replaced with null
Mutant 670 in q.js: promise replaced with Promise.resolve()
Mutant 671 in q.js: promise replaced with {
  then: function () {}
}
Mutant 672 in q.js: "unhandledRejection" replaced with "unhandledrejection"
Mutant 673 in q.js: "unhandledRejection" replaced with "unhandledException"
Mutant 674 in q.js: reason replaced with null
Mutant 675 in q.js: reason replaced with {}
Mutant 676 in q.js: promise replaced with null
Mutant 677 in q.js: promise replaced with {}
Mutant 678 in q.js: promise replaced with () => {}
Mutant 679 in q.js: reportedUnhandledRejections.push replaced with []
Mutant 680 in q.js: reportedUnhandledRejections.push replaced with null
Mutant 681 in q.js: reportedUnhandledRejections.push replaced with 42
Mutant 682 in q.js: promise replaced with null
Mutant 683 in q.js: promise replaced with {}
Mutant 684 in q.js: promise replaced with unhandledReasons
Mutant 685 in q.js: unhandledRejections.push replaced with []
Mutant 686 in q.js: promise replaced with null
Mutant 687 in q.js: promise replaced with {}
Mutant 688 in q.js: promise replaced with Promise.resolve()
Mutant 689 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack
Mutant 690 in q.js: reason && typeof reason.stack !== "undefined" replaced with typeof reason !== "undefined"
Mutant 691 in q.js: reason && typeof reason.stack !== "undefined" replaced with true
Mutant 692 in q.js: reason.stack replaced with "reason stack"
Mutant 693 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 694 in q.js: unhandledReasons.push replaced with console.error
Mutant 695 in q.js: "(no stack) " + reason replaced with "<no stack>"
Mutant 696 in q.js: "(no stack) " + reason replaced with reason.toString()
Mutant 697 in q.js: "(no stack) " + reason replaced with null
Mutant 698 in q.js: !trackUnhandledRejections replaced with false
Mutant 699 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 700 in q.js: !trackUnhandledRejections replaced with 0
Mutant 701 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.length, promise)
Mutant 702 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 703 in q.js: array_indexOf replaced with [].indexOf
Mutant 704 in q.js: array_indexOf replaced with unhandledRejections.includes
Mutant 705 in q.js: unhandledRejections replaced with []
Mutant 706 in q.js: unhandledRejections replaced with {
  promise: []
}
Mutant 707 in q.js: unhandledRejections replaced with Promise.resolve()
Mutant 708 in q.js: promise replaced with null
Mutant 709 in q.js: promise replaced with 123
Mutant 710 in q.js: promise replaced with {}
Mutant 711 in q.js: at !== -1 replaced with at > -1
Mutant 712 in q.js: at !== -1 replaced with unhandledRejections.indexOf(promise) !== -1
Mutant 713 in q.js: at !== -1 replaced with typeof at !== "number"
Mutant 714 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf([])
Mutant 715 in q.js: array_indexOf replaced with unhandledRejections.indexOf
Mutant 716 in q.js: array_indexOf replaced with ['unhandledRejections'].indexOf
Mutant 717 in q.js: reportedUnhandledRejections replaced with []
Mutant 718 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 719 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.slice()
Mutant 720 in q.js: promise replaced with false
Mutant 721 in q.js: promise replaced with null
Mutant 722 in q.js: atReport !== -1 replaced with true
Mutant 723 in q.js: atReport !== -1 replaced with atReport === unhandledRejections.length
Mutant 724 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 725 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", "some random string", promise)
Mutant 726 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[Math.floor(Math.random() * unhandledReasons.length)], promise)
Mutant 727 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], Q.reject("another reason"))
Mutant 728 in q.js: "rejectionHandled" replaced with false
Mutant 729 in q.js: "rejectionHandled" replaced with null
Mutant 730 in q.js: "rejectionHandled" replaced with unhandledReasons[at]
Mutant 731 in q.js: unhandledReasons[at] replaced with null
Mutant 732 in q.js: unhandledReasons[at] replaced with {}
Mutant 733 in q.js: promise replaced with null
Mutant 734 in q.js: promise replaced with {}
Mutant 735 in q.js: promise replaced with unhandledReasons[at]
Mutant 736 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport.length)
Mutant 737 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(0)
Mutant 738 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(unhandledReasons.length)
Mutant 739 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections.length--
Mutant 740 in q.js: atReport replaced with atReport.length
Mutant 741 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(unhandledRejections.length)
Mutant 742 in q.js: at replaced with unhandledRejections.length
Mutant 743 in q.js: at replaced with at + 1
Mutant 744 in q.js: at replaced with 0
Mutant 745 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(unhandledReasons.length)
Mutant 746 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(0)
Mutant 747 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(Math.floor(Math.random() * unhandledReasons.length))
Mutant 748 in q.js: at replaced with unhandledReasons.length
Mutant 749 in q.js: at replaced with 0
Mutant 750 in q.js: at replaced with unhandledReasons.length - 1
Mutant 751 in q.js: unhandledReasons.slice replaced with unhandledReasons.concat
Mutant 752 in q.js: rejected replaced with false
Mutant 753 in q.js: rejected replaced with 0
Mutant 754 in q.js: rejected replaced with untrackRejection.bind(this)
Mutant 755 in q.js: this replaced with null
Mutant 756 in q.js: rejected replaced with false
Mutant 757 in q.js: rejected replaced with this
Mutant 758 in q.js: reason replaced with null
Mutant 759 in q.js: reason replaced with this
Mutant 760 in q.js: reason replaced with new Error('An error occurred')
Mutant 761 in q.js: trackRejection(rejection, reason) replaced with trackRejection(null)
Mutant 762 in q.js: trackRejection(rejection, reason) replaced with trackRejection([])
Mutant 763 in q.js: trackRejection(rejection, reason) replaced with trackRejection({
  fulfill: function () {}
})
Mutant 764 in q.js: reason replaced with null
Mutant 765 in q.js: reason replaced with true
Mutant 766 in q.js: reason replaced with {}
Mutant 767 in q.js: name === null || name === void 0 replaced with name === null || name === undefined
Mutant 768 in q.js: name === null || name === void 0 replaced with name === null || typeof name === 'undefined'
Mutant 769 in q.js: name === null || name === void 0 replaced with name == null
Mutant 770 in q.js: value.apply(void 0, args) replaced with value.apply(thisp, [args])
Mutant 771 in q.js: value.apply(void 0, args) replaced with value.apply(thisp, arguments)
Mutant 772 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 773 in q.js: value.apply replaced with value.call
Mutant 774 in q.js: value.apply replaced with Reflect.apply
Mutant 775 in q.js: void 0 replaced with null
Mutant 776 in q.js: void 0 replaced with 5
Mutant 777 in q.js: void 0 replaced with {}
Mutant 778 in q.js: args replaced with []
Mutant 779 in q.js: args replaced with null
Mutant 780 in q.js: args replaced with {
  length: 0
}
Mutant 781 in q.js: value[name].apply(value, args) replaced with value[name].apply(null)
Mutant 782 in q.js: value[name].apply(value, args) replaced with value[name].apply([])
Mutant 783 in q.js: value[name].apply(value, args) replaced with value[name].apply({})
Mutant 784 in q.js: value[name].apply replaced with value.apply
Mutant 785 in q.js: value[name].apply replaced with Function.prototype.apply
Mutant 786 in q.js: value[name].apply replaced with null
Mutant 787 in q.js: value replaced with thisp
Mutant 788 in q.js: value replaced with null
Mutant 789 in q.js: value replaced with global
Mutant 790 in q.js: args replaced with []
Mutant 791 in q.js: args replaced with null
Mutant 792 in q.js: args replaced with {
  length: 0
}
Mutant 793 in q.js: value.apply(thisp, args) replaced with value.apply(null)
Mutant 794 in q.js: value.apply(thisp, args) replaced with value.apply(123)
Mutant 795 in q.js: value.apply replaced with value.call
Mutant 796 in q.js: value.apply replaced with value.bind
Mutant 797 in q.js: thisp replaced with null
Mutant 798 in q.js: thisp replaced with []
Mutant 799 in q.js: thisp replaced with {}
Mutant 800 in q.js: args replaced with []
Mutant 801 in q.js: args replaced with null
Mutant 802 in q.js: args replaced with arguments
Mutant 803 in q.js: object_keys replaced with Object.keys
Mutant 804 in q.js: value replaced with null
Mutant 805 in q.js: value replaced with 123
Mutant 806 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(42))
Mutant 807 in q.js: promise.then replaced with promise['then']
Mutant 808 in q.js: deferred.reject replaced with deferred.resolve
Mutant 809 in q.js: deferred.reject replaced with function () {
  throw new Error('Replacement error');
}
Mutant 810 in q.js: deferred.reject replaced with deferred.notify
Mutant 811 in q.js: deferred.notify replaced with deferred.resolve
Mutant 812 in q.js: deferred.reject replaced with deferred.resolve
Mutant 813 in q.js: deferred.reject replaced with deferred.notify
Mutant 814 in q.js: exception replaced with new Error('Buggy replacement')
Mutant 815 in q.js: exception replaced with null
Mutant 816 in q.js: exception replaced with this
Mutant 817 in q.js: dispatch(object, op, args) replaced with dispatch(null, op, args)
Mutant 818 in q.js: dispatch replaced with null
Mutant 819 in q.js: object replaced with null
Mutant 820 in q.js: object replaced with []
Mutant 821 in q.js: object replaced with function () {}
Mutant 822 in q.js: op replaced with op + 1
Mutant 823 in q.js: op replaced with "new_op"
Mutant 824 in q.js: args replaced with null
Mutant 825 in q.js: Q(object).inspect replaced with null
Mutant 826 in q.js: object replaced with {}
Mutant 827 in q.js: object replaced with function () {}
Mutant 828 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread([1, 2, 3])
Mutant 829 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled)
Mutant 830 in q.js: value replaced with null
Mutant 831 in q.js: value replaced with 42
Mutant 832 in q.js: value replaced with this
Mutant 833 in q.js: fulfilled replaced with function () {
  throw new Error('Buggy replacement');
}
Mutant 834 in q.js: fulfilled replaced with null
Mutant 835 in q.js: fulfilled replaced with this
Mutant 836 in q.js: rejected replaced with function () {}
Mutant 837 in q.js: rejected replaced with null
Mutant 838 in q.js: rejected replaced with this
Mutant 839 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null, array)
Mutant 840 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 841 in q.js: void 0 replaced with null
Mutant 842 in q.js: void 0 replaced with this
Mutant 843 in q.js: void 0 replaced with true
Mutant 844 in q.js: array replaced with []
Mutant 845 in q.js: array replaced with this
Mutant 846 in q.js: array replaced with global.Array.prototype.slice.call(arguments)
Mutant 847 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.name === "GeneratorFunction"
Mutant 848 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.prototype.constructor.name === "GeneratorFunction"
Mutant 849 in q.js: typeof StopIteration === "undefined" replaced with generator.constructor.prototype.constructor.name === "GeneratorFunction" && typeof generator.return === "function"
Mutant 850 in q.js: generator[verb] replaced with generator.verb
Mutant 851 in q.js: generator[verb] replaced with generator['next']
Mutant 852 in q.js: arg replaced with null
Mutant 853 in q.js: arg replaced with 1
Mutant 854 in q.js: reject replaced with Promise.reject
Mutant 855 in q.js: reject replaced with deferred.reject
Mutant 856 in q.js: exception replaced with new Error('Buggy error')
Mutant 857 in q.js: exception replaced with null
Mutant 858 in q.js: result.done replaced with Object.prototype.toString.call(result.value) === "[object Promise]"
Mutant 859 in q.js: result.done replaced with result.value && result.value.constructor === Promise
Mutant 860 in q.js: result.done replaced with typeof result.value.then === "function"
Mutant 861 in q.js: result.value replaced with null
Mutant 862 in q.js: result.value replaced with 1
Mutant 863 in q.js: result.value replaced with result.value + 1
Mutant 864 in q.js: result.value replaced with null
Mutant 865 in q.js: result.value replaced with result['value']
Mutant 866 in q.js: result.value replaced with function () {
  return result.value;
}()
Mutant 867 in q.js: callback replaced with function () {}
Mutant 868 in q.js: callback replaced with callback.bind(this)
Mutant 869 in q.js: callback replaced with callback(result.value)
Mutant 870 in q.js: errback replaced with function () {}
Mutant 871 in q.js: errback replaced with 5
Mutant 872 in q.js: errback replaced with deferred.resolve
Mutant 873 in q.js: generator[verb] replaced with generator.verb
Mutant 874 in q.js: generator[verb] replaced with generator["" + verb]
Mutant 875 in q.js: arg replaced with null
Mutant 876 in q.js: arg replaced with 123
Mutant 877 in q.js: arg replaced with function () {}
Mutant 878 in q.js: isStopIteration(exception) replaced with exception.message === "Generator completed"
Mutant 879 in q.js: isStopIteration(exception) replaced with true
Mutant 880 in q.js: isStopIteration(exception) replaced with exception instanceof Error
Mutant 881 in q.js: isStopIteration replaced with {}
Mutant 882 in q.js: exception replaced with new Error('generator error')
Mutant 883 in q.js: Q replaced with null
Mutant 884 in q.js: exception.value replaced with null
Mutant 885 in q.js: exception.value replaced with false
Mutant 886 in q.js: exception.value replaced with exception
Mutant 887 in q.js: exception replaced with new Error('Generator Error')
Mutant 888 in q.js: exception replaced with {}
Mutant 889 in q.js: exception replaced with null
Mutant 890 in q.js: when(result, callback, errback) replaced with when([])
Mutant 891 in q.js: when(result, callback, errback) replaced with when(null)
Mutant 892 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 893 in q.js: when replaced with Promise.resolve
Mutant 894 in q.js: result replaced with null
Mutant 895 in q.js: result replaced with []
Mutant 896 in q.js: result replaced with {}
Mutant 897 in q.js: callback replaced with callback.bind(this)
Mutant 898 in q.js: callback replaced with function () {
  callback();
}
Mutant 899 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null, arguments)
Mutant 900 in q.js: makeGenerator.apply replaced with Function.prototype.apply.call
Mutant 901 in q.js: this replaced with null
Mutant 902 in q.js: this replaced with window
Mutant 903 in q.js: this replaced with Math.random()
Mutant 904 in q.js: arguments replaced with Array.from(arguments)
Mutant 905 in q.js: arguments replaced with [...arguments]
Mutant 906 in q.js: arguments replaced with Object.assign([], arguments)
Mutant 907 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "then")
Mutant 908 in q.js: continuer replaced with this
Mutant 909 in q.js: continuer replaced with window
Mutant 910 in q.js: continuer replaced with function () {
  return continuer;
}
Mutant 911 in q.js: "next" replaced with "next".toUpperCase()
Mutant 912 in q.js: "next" replaced with 1
Mutant 913 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "throw", undefined)
Mutant 914 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "other_verb")
Mutant 915 in q.js: continuer replaced with function () {}
Mutant 916 in q.js: continuer replaced with callback
Mutant 917 in q.js: "throw" replaced with "return"
Mutant 918 in q.js: "throw" replaced with "continue"
Mutant 919 in q.js: "throw" replaced with "break"
Mutant 920 in q.js: Q.async replaced with Promise.resolve
Mutant 921 in q.js: Q.async replaced with Math.random
Mutant 922 in q.js: Q.async replaced with []
not replacing Q.async with Promise.resolve
not replacing Q.async with Math.random
not replacing Q.async with []
Mutant 923 in q.js: makeGenerator replaced with function* () {}
Mutant 924 in q.js: makeGenerator replaced with 42
Mutant 925 in q.js: all replaced with null
Mutant 926 in q.js: arguments replaced with []
Mutant 927 in q.js: arguments replaced with null
Mutant 928 in q.js: arguments replaced with 1
Mutant 929 in q.js: callback.apply(self, args) replaced with callback.apply(this)
Mutant 930 in q.js: callback.apply(self, args) replaced with callback.apply(globalThis)
Mutant 931 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 932 in q.js: callback.apply replaced with callback.call
Mutant 933 in q.js: callback.apply replaced with Reflect.apply
Mutant 934 in q.js: callback.apply replaced with Function.prototype.apply
Mutant 935 in q.js: self replaced with this
Mutant 936 in q.js: self replaced with global
Mutant 937 in q.js: self replaced with undefined
Mutant 938 in q.js: args replaced with []
Mutant 939 in q.js: args replaced with this
Mutant 940 in q.js: args replaced with 42
Mutant 941 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(null)
Mutant 942 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch([])
Mutant 943 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch({
  op: 1,
  args: [2, 3]
})
Mutant 944 in q.js: Q(object).dispatch replaced with Object.dispatch
Mutant 945 in q.js: Q replaced with deferred.promise
Mutant 946 in q.js: object replaced with this
Mutant 947 in q.js: object replaced with Promise.resolve()
Mutant 948 in q.js: op replaced with 1
Mutant 949 in q.js: op replaced with null
Mutant 950 in q.js: args replaced with null
Mutant 951 in q.js: args replaced with []
Mutant 952 in q.js: args replaced with {
  foo: 'bar'
}
Mutant 953 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject)
Mutant 954 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.notify)
Mutant 955 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 956 in q.js: self.promiseDispatch replaced with deferred.promise
Mutant 957 in q.js: self.promiseDispatch replaced with self.promise.dispatch
Mutant 958 in q.js: deferred.resolve replaced with deferred.reject
Mutant 959 in q.js: deferred.resolve replaced with deferred.notify
Mutant 960 in q.js: deferred.resolve replaced with deferred.promise
Mutant 961 in q.js: op replaced with null
Mutant 962 in q.js: args replaced with null
Mutant 963 in q.js: args replaced with []
Mutant 964 in q.js: args replaced with {
  length: 0
}
Mutant 965 in q.js: Q(object).dispatch replaced with Q.when
Mutant 966 in q.js: Q replaced with null
Mutant 967 in q.js: Q replaced with {}
Mutant 968 in q.js: object replaced with null
Mutant 969 in q.js: object replaced with []
Mutant 970 in q.js: object replaced with 123
Mutant 971 in q.js: "get" replaced with "GET"
Mutant 972 in q.js: "get" replaced with Symbol("get")
Mutant 973 in q.js: "get" replaced with () => "get"
Mutant 974 in q.js: [key] replaced with null
Mutant 975 in q.js: [key] replaced with {}
Mutant 976 in q.js: [key] replaced with function () {/* empty function */}
Mutant 977 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("GET", [key])
Mutant 978 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", [])
Mutant 979 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", {
  key: 'value'
})
Mutant 980 in q.js: "get" replaced with "GET"
Mutant 981 in q.js: "get" replaced with () => "get"
Mutant 982 in q.js: [key] replaced with []
Mutant 983 in q.js: [key] replaced with null
Mutant 984 in q.js: [key] replaced with {}
Mutant 985 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch([])
Mutant 986 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("nonexistentMethod")
Mutant 987 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch([key, Q(value)])
Mutant 988 in q.js: Q(object).dispatch replaced with Object.prototype.dispatch
Mutant 989 in q.js: Q(object).dispatch replaced with Q.get
Mutant 990 in q.js: object replaced with this
Mutant 991 in q.js: object replaced with null
Mutant 992 in q.js: object replaced with Q.resolve()
Mutant 993 in q.js: [key, value] replaced with {}
Mutant 994 in q.js: [key, value] replaced with null
Mutant 995 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch([])
Mutant 996 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch(this)
Mutant 997 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch(Math.random())
Mutant 998 in q.js: "set" replaced with "__set__"
Mutant 999 in q.js: "set" replaced with null
Mutant 1000 in q.js: "set" replaced with this.del
Mutant 1001 in q.js: [key, value] replaced with []
Mutant 1002 in q.js: [key, value] replaced with this
Mutant 1003 in q.js: [key, value] replaced with null
Mutant 1004 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch(["remove", key])
Mutant 1005 in q.js: Q replaced with null
Mutant 1006 in q.js: Q replaced with 5
Mutant 1007 in q.js: object replaced with null
Mutant 1008 in q.js: object replaced with []
Mutant 1009 in q.js: object replaced with Promise.resolve()
Mutant 1010 in q.js: "delete" replaced with "remove"
Mutant 1011 in q.js: "delete" replaced with Q.del
Mutant 1012 in q.js: "delete" replaced with this.del
Mutant 1013 in q.js: [key] replaced with []
Mutant 1014 in q.js: [key] replaced with {}
Mutant 1015 in q.js: [key] replaced with null
Mutant 1016 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch(["remove", key])
Mutant 1017 in q.js: this.dispatch replaced with deferred.resolve
Mutant 1018 in q.js: this.dispatch replaced with deferred.promise
Mutant 1019 in q.js: "delete" replaced with null
Mutant 1020 in q.js: "delete" replaced with {}
Mutant 1021 in q.js: "delete" replaced with function () {}
Mutant 1022 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1023 in q.js: Q(object).dispatch replaced with Q.dispatch
Mutant 1024 in q.js: Q replaced with null
Mutant 1025 in q.js: Q replaced with Q.when
Mutant 1026 in q.js: object replaced with null
Mutant 1027 in q.js: object replaced with 0
Mutant 1028 in q.js: object replaced with Promise.resolve()
Mutant 1029 in q.js: "post" replaced with "POST"
Mutant 1030 in q.js: [name, args] replaced with []
Mutant 1031 in q.js: [name, args] replaced with null
Mutant 1032 in q.js: [name, args] replaced with this
Mutant 1033 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, eval(args)])
Mutant 1034 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [window[name], args])
Mutant 1035 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("POST", [name, args])
Mutant 1036 in q.js: "post" replaced with "POST"
Mutant 1037 in q.js: "post" replaced with null
Mutant 1038 in q.js: "post" replaced with function () {}
Mutant 1039 in q.js: [name, args] replaced with []
Mutant 1040 in q.js: [name, args] replaced with null
Mutant 1041 in q.js: [name, args] replaced with this
Mutant 1042 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, 42])
Mutant 1043 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [null, args])
Mutant 1044 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("anotherMethod", [args])
Mutant 1045 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1046 in q.js: Q replaced with {}['dispatch']
Mutant 1047 in q.js: object replaced with true
Mutant 1048 in q.js: object replaced with function () {
  return "I am a buggy function";
}
Mutant 1049 in q.js: "post" replaced with "POST"
Mutant 1050 in q.js: [name, array_slice(arguments, 2)] replaced with [name, Array.prototype.slice.call(arguments, 1)]
Mutant 1051 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1052 in q.js: array_slice(arguments, 2) replaced with array_slice([name])
Mutant 1053 in q.js: array_slice(arguments, 2) replaced with array_slice([])
Mutant 1054 in q.js: array_slice replaced with arguments.callee.caller.arguments
Mutant 1055 in q.js: arguments replaced with []
Mutant 1056 in q.js: arguments replaced with function () {
  return 42;
}
Mutant 1057 in q.js: 2 replaced with function () {}
Mutant 1058 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("POST", [name, array_slice(arguments, 1)])
Mutant 1059 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, 123])
Mutant 1060 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [null, array_slice(arguments, 1)])
Mutant 1061 in q.js: "post" replaced with "POST"
Mutant 1062 in q.js: [name, array_slice(arguments, 1)] replaced with null
Mutant 1063 in q.js: [name, array_slice(arguments, 1)] replaced with []
Mutant 1064 in q.js: array_slice(arguments, 1) replaced with array_slice([])
Mutant 1065 in q.js: array_slice(arguments, 1) replaced with array_slice(this)
Mutant 1066 in q.js: array_slice(arguments, 1) replaced with array_slice(function () {})
Mutant 1067 in q.js: 1 replaced with arguments.length
Mutant 1068 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [args])
Mutant 1069 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [1, args])
Mutant 1070 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("spread", [args])
Mutant 1071 in q.js: Q(object).dispatch replaced with Q.prototype.dispatch
Mutant 1072 in q.js: Q(object).dispatch replaced with Q.dispatch
Mutant 1073 in q.js: object replaced with null
Mutant 1074 in q.js: object replaced with 42
Mutant 1075 in q.js: object replaced with this
Mutant 1076 in q.js: [void 0, args] replaced with args
Mutant 1077 in q.js: [void 0, args] replaced with [args]
Mutant 1078 in q.js: [void 0, args] replaced with null, args
Mutant 1079 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("spy", [void 0, args])
Mutant 1080 in q.js: "apply" replaced with "applay"
Mutant 1081 in q.js: "apply" replaced with 1234
Mutant 1082 in q.js: "apply" replaced with this
Mutant 1083 in q.js: [void 0, args] replaced with args
Mutant 1084 in q.js: [void 0, args] replaced with [this, args]
Mutant 1085 in q.js: [void 0, args] replaced with [[], args]
Mutant 1086 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [array_slice(arguments, 1)])
Mutant 1087 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [null, array_slice(arguments, 1)])
Mutant 1088 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [, array_slice(arguments, 1)])
Mutant 1089 in q.js: Q(object).dispatch replaced with Object.prototype.dispatch
Mutant 1090 in q.js: Q replaced with {}
Mutant 1091 in q.js: object replaced with 5
Mutant 1092 in q.js: object replaced with () => {}
Mutant 1093 in q.js: "apply" replaced with "apPLY"
Mutant 1094 in q.js: "apply" replaced with "applyFn"
Mutant 1095 in q.js: "apply" replaced with this.apply
Mutant 1096 in q.js: [void 0, array_slice(arguments, 1)] replaced with [null, array_slice(arguments, 1)]
Mutant 1097 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments))
Mutant 1098 in q.js: array_slice replaced with [].slice
Mutant 1099 in q.js: arguments replaced with Array.prototype.slice.call(arguments, 1)
Mutant 1100 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1101 in q.js: arguments replaced with arguments.slice(1)
Mutant 1102 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("spy", [void 0, array_slice(arguments)])
Mutant 1103 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch(["apply", array_slice(arguments)])
Mutant 1104 in q.js: "apply" replaced with "apPLY"
Mutant 1105 in q.js: "apply" replaced with "applyFn"
Mutant 1106 in q.js: "apply" replaced with this.someNonExistentMethod
Mutant 1107 in q.js: [void 0, array_slice(arguments)] replaced with []
Mutant 1108 in q.js: [void 0, array_slice(arguments)] replaced with arguments
Mutant 1109 in q.js: [void 0, array_slice(arguments)] replaced with this
Mutant 1110 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1111 in q.js: array_slice replaced with null
Mutant 1112 in q.js: arguments replaced with 123
Mutant 1113 in q.js: object replaced with null
Mutant 1114 in q.js: object replaced with this
Mutant 1115 in q.js: object replaced with Promise.resolve()
Mutant 1116 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 2))
Mutant 1117 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 2))
Mutant 1118 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(2))
Mutant 1119 in q.js: array_slice replaced with [].slice
Mutant 1120 in q.js: arguments replaced with []
Mutant 1121 in q.js: arguments replaced with {
  length: 0
}
Mutant 1122 in q.js: arguments replaced with function () {}
Mutant 1123 in q.js: 1 replaced with args.length > 0 ? args : [null]
Mutant 1124 in q.js: args.concat replaced with []
Mutant 1125 in q.js: args.concat replaced with null
Mutant 1126 in q.js: args.concat replaced with this
Mutant 1127 in q.js: array_slice(arguments) replaced with []
Mutant 1128 in q.js: array_slice(arguments) replaced with null
Mutant 1129 in q.js: array_slice(arguments) replaced with [1, 2, 3]
Mutant 1130 in q.js: array_slice replaced with arguments.callee
Mutant 1131 in q.js: arguments replaced with {
  0: 1,
  length: 1
}
Mutant 1132 in q.js: array_slice replaced with arguments
Mutant 1133 in q.js: array_slice replaced with [].slice
Mutant 1134 in q.js: arguments replaced with []
Mutant 1135 in q.js: arguments replaced with null
Mutant 1136 in q.js: arguments replaced with this.arguments
Mutant 1137 in q.js: args.concat replaced with []
Mutant 1138 in q.js: array_slice(arguments) replaced with []
Mutant 1139 in q.js: array_slice(arguments) replaced with this.arguments
Mutant 1140 in q.js: array_slice(arguments) replaced with arguments[0]
Mutant 1141 in q.js: array_slice replaced with arguments.callee
Mutant 1142 in q.js: array_slice replaced with null
Mutant 1143 in q.js: array_slice replaced with eval
Mutant 1144 in q.js: arguments replaced with null
Mutant 1145 in q.js: arguments replaced with 123
Mutant 1146 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1147 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["toString"])
Mutant 1148 in q.js: Q replaced with null
Mutant 1149 in q.js: object replaced with null
Mutant 1150 in q.js: object replaced with {}
Mutant 1151 in q.js: object replaced with ['key']
Mutant 1152 in q.js: [] replaced with Object.keys(this)
Mutant 1153 in q.js: [] replaced with null
Mutant 1154 in q.js: [] replaced with function () {
  return 42;
}
Mutant 1155 in q.js: this.dispatch("keys", []) replaced with this.dispatch("nonexistentMethod", [])
Mutant 1156 in q.js: "keys" replaced with "nonexistentKey"
Mutant 1157 in q.js: [] replaced with Object.keys(this)
Mutant 1158 in q.js: [] replaced with null
Mutant 1159 in q.js: [] replaced with function () {
  return 42;
}
Mutant 1160 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with snapshot.state === "pending"
Mutant 1161 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && (snapshot = promise).state === "fulfilled"
Mutant 1162 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with isPromise(promise) && snapshot.state === "completed"
Mutant 1163 in q.js: isPromise replaced with typeof promise === 'object'
Mutant 1164 in q.js: isPromise replaced with promise instanceof Object
Mutant 1165 in q.js: isPromise replaced with true
Mutant 1166 in q.js: promise replaced with Promise.resolve()
Mutant 1167 in q.js: promise replaced with null
Mutant 1168 in q.js: promise replaced with function () {}
Mutant 1169 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1170 in q.js: promises replaced with null
Mutant 1171 in q.js: promises replaced with []
Mutant 1172 in q.js: promises replaced with promises.slice()
Mutant 1173 in q.js: {
  index: index,
  value: progress
} replaced with null
Mutant 1174 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  progress: progress
}
Mutant 1175 in q.js: {
  index: index,
  value: progress
} replaced with this
Mutant 1176 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1177 in q.js: pendingCount === 0 replaced with false
Mutant 1178 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1179 in q.js: promises replaced with []
Mutant 1180 in q.js: promises replaced with null
Mutant 1181 in q.js: promises replaced with this
Mutant 1182 in q.js: this replaced with null
Mutant 1183 in q.js: this replaced with []
Mutant 1184 in q.js: this replaced with Promise.resolve()
Mutant 1185 in q.js: promises.length === 0 replaced with Object.prototype.toString.call(promises) === '[object Array]'
Mutant 1186 in q.js: promises.length === 0 replaced with promises.constructor.name === 'Array'
Mutant 1187 in q.js: promises.length === 0 replaced with Array.isArray(promises)
Mutant 1188 in q.js: Q.resolve replaced with Promise.resolve
Mutant 1189 in q.js: Q.resolve replaced with Q.reject
Mutant 1190 in q.js: when replaced with Promise.resolve
Mutant 1191 in q.js: when replaced with this
Mutant 1192 in q.js: when replaced with Q.resolve
Mutant 1193 in q.js: promise replaced with null
Mutant 1194 in q.js: promise replaced with Promise.resolve()
Mutant 1195 in q.js: promise replaced with this
Mutant 1196 in q.js: onFulfilled replaced with onRejected
Mutant 1197 in q.js: onFulfilled replaced with function () {}
Mutant 1198 in q.js: onFulfilled replaced with this
Mutant 1199 in q.js: onRejected replaced with function () {}
Mutant 1200 in q.js: onRejected replaced with onFulfilled
Mutant 1201 in q.js: onRejected replaced with this
Mutant 1202 in q.js: result replaced with null
Mutant 1203 in q.js: result replaced with promises[index]
Mutant 1204 in q.js: result replaced with this
Mutant 1205 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1206 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1207 in q.js: deferred.reject replaced with console.error
Mutant 1208 in q.js: rejection replaced with new Error("This is a buggy error")
Mutant 1209 in q.js: rejection replaced with null
Mutant 1210 in q.js: this replaced with []
Mutant 1211 in q.js: this replaced with Q.resolve()
Mutant 1212 in q.js: this replaced with Promise.resolve()
Mutant 1213 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allResolved", "all")
Mutant 1214 in q.js: allResolved replaced with function allResolvedBad(promises) {
  return Q(promises).allSettled();
}
Mutant 1215 in q.js: "allResolved" replaced with "allSettled"
Mutant 1216 in q.js: "allResolved" replaced with function allResolved(promises) {
  return Q(promises).all();
}
Mutant 1217 in q.js: "allResolved" replaced with function allResolved(promises) {
  return Q(promises).all().then(function (results) {
    return Q.resolve(results.map(function (result) {
      return {
        state: 'fulfilled',
        value: result
      };
    }));
  });
}
Mutant 1218 in q.js: "allSettled" replaced with "all"
Mutant 1219 in q.js: array_map(promises, Q) replaced with array_map(promises, Array)
Mutant 1220 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.when)
Mutant 1221 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.all)
Mutant 1222 in q.js: promises replaced with promises.slice()
Mutant 1223 in q.js: promises replaced with promises.filter(x => x)
Mutant 1224 in q.js: promises replaced with promises.concat()
Mutant 1225 in q.js: Q replaced with Promise.resolve()
Mutant 1226 in q.js: Q replaced with Q.reject(new Error('Placeholder error'))
Mutant 1227 in q.js: when(promise, noop, noop) replaced with when(new Promise(resolve => resolve(promise)))
Mutant 1228 in q.js: promise replaced with Promise.resolve()
Mutant 1229 in q.js: promise replaced with null
Mutant 1230 in q.js: promise replaced with function () {}
Mutant 1231 in q.js: noop replaced with Promise.resolve()
Mutant 1232 in q.js: noop replaced with function () {
  throw new Error('Buggy!');
}
Mutant 1233 in q.js: noop replaced with function () {
  throw new Error('Buggy replacement');
}
Mutant 1234 in q.js: noop replaced with null
Mutant 1235 in q.js: noop replaced with function () {
  return undefined;
}
Mutant 1236 in q.js: allResolved replaced with Q.all
Mutant 1237 in q.js: allResolved replaced with Promise.resolve
Mutant 1238 in q.js: this replaced with null
Mutant 1239 in q.js: this replaced with []
Mutant 1240 in q.js: promises replaced with []
Mutant 1241 in q.js: promises replaced with promises || []
Mutant 1242 in q.js: promises replaced with Q([])
Mutant 1243 in q.js: promise replaced with Promise.resolve()
Mutant 1244 in q.js: promise replaced with promises[index]
Mutant 1245 in q.js: promise replaced with Q.resolve(promise)
Mutant 1246 in q.js: promise.inspect replaced with promise.always
Mutant 1247 in q.js: promise.then(regardless, regardless) replaced with promise.then(null, null)
Mutant 1248 in q.js: promise.then replaced with Promise.resolve
Mutant 1249 in q.js: promise.then replaced with Math.random
Mutant 1250 in q.js: regardless replaced with function regardless() {
  return {};
}
Mutant 1251 in q.js: regardless replaced with function regardless() {
  return Q.resolve();
}
Mutant 1252 in q.js: regardless replaced with function regardless() {
  return Q.reject(new Error('Artificial rejection'));
}
Mutant 1253 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(Promise.resolve())
Mutant 1254 in q.js: object replaced with null
Mutant 1255 in q.js: object replaced with true
Mutant 1256 in q.js: object replaced with Q.reject("An error occurred")
Mutant 1257 in q.js: void 0 replaced with function () {
  throw new Error('Rejected!');
}
Mutant 1258 in q.js: void 0 replaced with null
Mutant 1259 in q.js: void 0 replaced with this
Mutant 1260 in q.js: rejected replaced with function () {
  throw rejected;
}
Mutant 1261 in q.js: rejected replaced with Q.reject(rejected)
Mutant 1262 in q.js: rejected replaced with function () {
  return Q.reject(rejected);
}
Mutant 1263 in q.js: this.then(void 0, rejected) replaced with this.then(function () {})
Mutant 1264 in q.js: this.then(void 0, rejected) replaced with this.then(this)
Mutant 1265 in q.js: this.then(void 0, rejected) replaced with this.then(42)
Mutant 1266 in q.js: this.then replaced with this.catch
Mutant 1267 in q.js: void 0 replaced with null
Mutant 1268 in q.js: void 0 replaced with 42
Mutant 1269 in q.js: void 0 replaced with function () {
  return 42;
}
Mutant 1270 in q.js: rejected replaced with function () {
  return Promise.resolve();
}
Mutant 1271 in q.js: rejected replaced with function () {
  throw new Error('New error');
}
Mutant 1272 in q.js: rejected replaced with null
Mutant 1273 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1274 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(true, true, progressed)
Mutant 1275 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(this, this, progressed)
Mutant 1276 in q.js: void 0 replaced with null
Mutant 1277 in q.js: void 0 replaced with function () {}
Mutant 1278 in q.js: void 0 replaced with null
Mutant 1279 in q.js: void 0 replaced with 1
Mutant 1280 in q.js: progressed replaced with function () {}
Mutant 1281 in q.js: progressed replaced with 42
Mutant 1282 in q.js: progressed replaced with deferred.resolve
Mutant 1283 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1284 in q.js: void 0 replaced with null
Mutant 1285 in q.js: void 0 replaced with 0
Mutant 1286 in q.js: void 0 replaced with function () {}
Mutant 1287 in q.js: void 0 replaced with null
Mutant 1288 in q.js: void 0 replaced with function () {}
Mutant 1289 in q.js: void 0 replaced with deferred.resolve
Mutant 1290 in q.js: progressed replaced with function () {}
Mutant 1291 in q.js: progressed replaced with null
Mutant 1292 in q.js: progressed replaced with "string"
Mutant 1293 in q.js: object replaced with null
Mutant 1294 in q.js: object replaced with this
Mutant 1295 in q.js: object replaced with Promise.resolve()
Mutant 1296 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1297 in q.js: callback replaced with callback()
Mutant 1298 in q.js: callback replaced with callback.bind(this)
Mutant 1299 in q.js: !callback || typeof callback.apply !== "function" replaced with callback === null || typeof callback.apply !== "function"
Mutant 1300 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || typeof callback.call !== "function"
Mutant 1301 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback || callback.constructor.name !== "Function"
Mutant 1302 in q.js: Q replaced with Promise
Mutant 1303 in q.js: Q replaced with null
Mutant 1304 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1305 in q.js: callback replaced with callback.bind(this)
Mutant 1306 in q.js: callback replaced with callback()
Mutant 1307 in q.js: callback.fcall replaced with callback
not replacing callback.fcall with callback
not replacing callback.fcall with callback
Mutant 1308 in q.js: callback.fcall replaced with callback.apply
not replacing callback.fcall with callback.apply
not replacing callback.fcall with callback.apply
Mutant 1309 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(null)
Mutant 1310 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(true)
Mutant 1311 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(function () {})
Mutant 1312 in q.js: Q replaced with Q.resolve
Mutant 1313 in q.js: object replaced with Promise.resolve()
Mutant 1314 in q.js: object replaced with function () {
  return "I'm not a promise";
}
Mutant 1315 in q.js: fulfilled replaced with Promise.resolve(fulfilled)
Mutant 1316 in q.js: fulfilled replaced with null
Mutant 1317 in q.js: rejected replaced with Q.reject(new Error('Rejected explicitly'))
Mutant 1318 in q.js: rejected replaced with null
Mutant 1319 in q.js: rejected replaced with function () {
  return true;
}
Mutant 1320 in q.js: progress replaced with function () {}
Mutant 1321 in q.js: progress replaced with null
Mutant 1322 in q.js: progress replaced with function (value) {
  return value;
}
Mutant 1323 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(null, promise)
Mutant 1324 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, null)
Mutant 1325 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong({}, promise)
Mutant 1326 in q.js: error replaced with new Error()
Mutant 1327 in q.js: error replaced with null
Mutant 1328 in q.js: promise replaced with null
Mutant 1329 in q.js: promise replaced with this
Mutant 1330 in q.js: Q.onerror replaced with function () {
  throw new Error('Handled error');
}
Mutant 1331 in q.js: Q.onerror replaced with null
Mutant 1332 in q.js: Q.onerror replaced with null
Mutant 1333 in q.js: error replaced with new Error("Timed out after " + (ms || 0) + " ms")
Mutant 1334 in q.js: error replaced with {}
Mutant 1335 in q.js: error replaced with null
Mutant 1336 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(null, rejected, progress)
Mutant 1337 in q.js: this.then replaced with this.fcall
Mutant 1338 in q.js: fulfilled replaced with null
Mutant 1339 in q.js: fulfilled replaced with function () {}
Mutant 1340 in q.js: fulfilled replaced with 42
Mutant 1341 in q.js: rejected replaced with true
Mutant 1342 in q.js: rejected replaced with {}
Mutant 1343 in q.js: onUnhandledError replaced with function () {
  throw new Error("Unhandled error");
}
Mutant 1344 in q.js: onUnhandledError replaced with Q.onerror
Mutant 1345 in q.js: onUnhandledError replaced with function () {
  throw new Error("Unhandled error");
}.bind(this)
Mutant 1346 in q.js: void 0 replaced with null
Mutant 1347 in q.js: void 0 replaced with 42
Mutant 1348 in q.js: void 0 replaced with function () {
  return true;
}
Mutant 1349 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(0, error)
Mutant 1350 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, "error")
Mutant 1351 in q.js: object replaced with null
Mutant 1352 in q.js: ms replaced with 0
Mutant 1353 in q.js: ms replaced with this.ms
Mutant 1354 in q.js: ms replaced with Math.random() * 1000
Mutant 1355 in q.js: error replaced with new Error("Timed out after " + (ms - 10) + " ms")
Mutant 1356 in q.js: error replaced with {}
Mutant 1357 in q.js: error replaced with function () {
  throw new Error("An error occurred");
}
Mutant 1358 in q.js: !error || "string" === typeof error replaced with true
Mutant 1359 in q.js: error replaced with new Error("Timed out after " + (ms - 10) + " ms")
Mutant 1360 in q.js: error replaced with {}
Mutant 1361 in q.js: error replaced with function () {
  throw new Error("An error occurred");
}
Mutant 1362 in q.js: clearTimeout replaced with clearInterval
Mutant 1363 in q.js: clearTimeout replaced with deferred.reject
Mutant 1364 in q.js: timeoutId replaced with 0
Mutant 1365 in q.js: timeoutId replaced with deferred
Mutant 1366 in q.js: timeoutId replaced with null
Mutant 1367 in q.js: value replaced with null
Mutant 1368 in q.js: value replaced with new Error('Replaced value')
Mutant 1369 in q.js: value replaced with this
Mutant 1370 in q.js: clearTimeout replaced with clearInterval
Mutant 1371 in q.js: clearTimeout replaced with deferred.resolve
Mutant 1372 in q.js: timeoutId replaced with deferred
Mutant 1373 in q.js: timeoutId replaced with null
Mutant 1374 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1375 in q.js: deferred.reject replaced with deferred.promise
Mutant 1376 in q.js: exception replaced with new Error("An error occurred")
Mutant 1377 in q.js: exception replaced with null
Mutant 1378 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1379 in q.js: timeout === void 0 replaced with typeof timeout === "undefined"
Mutant 1380 in q.js: timeout === void 0 replaced with timeout === Q.timeout.NONE
Mutant 1381 in q.js: object replaced with null
Mutant 1382 in q.js: object replaced with true
Mutant 1383 in q.js: object replaced with []
Mutant 1384 in q.js: timeout replaced with 2 * timeout
Mutant 1385 in q.js: timeout replaced with 0
Mutant 1386 in q.js: timeout replaced with null
Mutant 1387 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1388 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1389 in q.js: value replaced with null
Mutant 1390 in q.js: Q(callback).nfapply replaced with callback.nfapply
Mutant 1391 in q.js: Q(callback).nfapply replaced with Q.nfapply
Mutant 1392 in q.js: callback replaced with function () {
  return callback.bind(this);
}
Mutant 1393 in q.js: callback replaced with function () {
  return callback.call(null);
}
Mutant 1394 in q.js: args replaced with []
Mutant 1395 in q.js: args replaced with null
Mutant 1396 in q.js: defer replaced with {}
Mutant 1397 in q.js: array_slice replaced with [].slice
Mutant 1398 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1399 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error("Buggy node resolver");
}
Mutant 1400 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1401 in q.js: nodeArgs replaced with []
Mutant 1402 in q.js: nodeArgs replaced with null
Mutant 1403 in q.js: nodeArgs replaced with this
Mutant 1404 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1405 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 1))
Mutant 1406 in q.js: array_slice replaced with [].slice
Mutant 1407 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1408 in q.js: 1 replaced with Infinity
Mutant 1409 in q.js: 1 replaced with null
Mutant 1410 in q.js: 1 replaced with setInterval
Mutant 1411 in q.js: Q(callback).nfapply replaced with callback.apply
Mutant 1412 in q.js: callback replaced with function () {
  return callback;
}
Mutant 1413 in q.js: callback replaced with callback.bind(null)
Mutant 1414 in q.js: callback replaced with callback || function () {}
Mutant 1415 in q.js: args replaced with []
Mutant 1416 in q.js: args replaced with null
Mutant 1417 in q.js: args replaced with 123
Mutant 1418 in q.js: array_slice replaced with [].slice
Mutant 1419 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1420 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1421 in q.js: arguments replaced with null
Mutant 1422 in q.js: arguments replaced with this.arguments
Mutant 1423 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1424 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1425 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1426 in q.js: nodeArgs replaced with this
Mutant 1427 in q.js: nodeArgs replaced with []
Mutant 1428 in q.js: nodeArgs replaced with nodeArgs.concat(deferred.makeNodeResolver())
Mutant 1429 in q.js: callback === undefined replaced with callback !== null
Mutant 1430 in q.js: callback === undefined replaced with typeof callback === 'function'
Mutant 1431 in q.js: callback === undefined replaced with callback && typeof callback === 'function'
Mutant 1432 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 1433 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1434 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1435 in q.js: array_slice replaced with [].slice
Mutant 1436 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1437 in q.js: arguments replaced with Object.keys(arguments)
Mutant 1438 in q.js: arguments replaced with Function.prototype.bind.apply(arguments.slice, [null, 1, 2])
Mutant 1439 in q.js: 1 replaced with Q.denodeify.length - 1
Mutant 1440 in q.js: 1 replaced with null
Mutant 1441 in q.js: 1 replaced with function () {
  return callback.apply(thisp, arguments);
}
Mutant 1442 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1443 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1444 in q.js: baseArgs.concat replaced with baseArgs.unshift
Mutant 1445 in q.js: array_slice(arguments) replaced with [].slice.call(arguments)
Mutant 1446 in q.js: array_slice(arguments) replaced with Array.prototype.slice.call(arguments)
Mutant 1447 in q.js: array_slice(arguments) replaced with Function.prototype.apply.call([], arguments)
Mutant 1448 in q.js: array_slice replaced with [1, 2, 3]
Mutant 1449 in q.js: array_slice replaced with null
Mutant 1450 in q.js: nodeArgs.push replaced with deferred.promise
Mutant 1451 in q.js: nodeArgs.push replaced with deferred.reject
Mutant 1452 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1453 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1454 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1455 in q.js: Q(callback).fapply replaced with callback.apply
Mutant 1456 in q.js: Q(callback).fapply replaced with this.fapply
Mutant 1457 in q.js: Q(callback).fapply replaced with Q.fapply
not replacing Q(callback).fapply with callback.apply
not replacing Q(callback).fapply with callback.apply
not replacing Q(callback).fapply with this.fapply
not replacing Q(callback).fapply with this.fapply
not replacing Q(callback).fapply with Q.fapply
not replacing Q(callback).fapply with Q.fapply
Mutant 1458 in q.js: Q replaced with this.thenThrow
Mutant 1459 in q.js: Q replaced with this.all
Mutant 1460 in q.js: callback replaced with function () {}
Mutant 1461 in q.js: callback replaced with callback || function () {}
Mutant 1462 in q.js: deferred.reject replaced with function () {}
Mutant 1463 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1464 in q.js: deferred.reject replaced with deferred.notify
Mutant 1465 in q.js: array_slice replaced with [].slice
Mutant 1466 in q.js: array_slice replaced with Math.floor
Mutant 1467 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1468 in q.js: arguments replaced with Object.keys(arguments).map(function (key) {
  return arguments[key];
})
Mutant 1469 in q.js: arguments replaced with Function.prototype.apply.call(Array.prototype.slice, arguments, 0)
Mutant 1470 in q.js: args.unshift replaced with this.constructor
Mutant 1471 in q.js: args.unshift replaced with null
Mutant 1472 in q.js: this replaced with null
Mutant 1473 in q.js: this replaced with window
Mutant 1474 in q.js: this replaced with function () {
  return this;
}()
Mutant 1475 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null, args)
Mutant 1476 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1477 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1478 in q.js: void 0 replaced with null
Mutant 1479 in q.js: void 0 replaced with true
Mutant 1480 in q.js: void 0 replaced with defer()
Mutant 1481 in q.js: args replaced with args.slice()
Mutant 1482 in q.js: args replaced with [...args]
Mutant 1483 in q.js: array_slice(arguments, 2) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1484 in q.js: array_slice(arguments, 2) replaced with array_slice(Function.prototype.apply.call(arguments, [1]))
Mutant 1485 in q.js: array_slice(arguments, 2) replaced with array_slice([].concat.apply([], arguments))
Mutant 1486 in q.js: array_slice replaced with [].slice
Mutant 1487 in q.js: arguments replaced with [].slice.call(arguments)
Mutant 1488 in q.js: arguments replaced with Object.keys(arguments)[0]
Mutant 1489 in q.js: arguments replaced with Reflect.apply(Function.prototype.call, arguments, [].slice.call(arguments, 1))
Mutant 1490 in q.js: 2 replaced with 3
Mutant 1491 in q.js: 2 replaced with null
Mutant 1492 in q.js: 2 replaced with function () {}
Mutant 1493 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1494 in q.js: baseArgs.concat replaced with baseArgs.splice
Mutant 1495 in q.js: array_slice(arguments) replaced with [].slice.call(arguments)
Mutant 1496 in q.js: array_slice(arguments) replaced with [].concat.apply([], arguments)
Mutant 1497 in q.js: array_slice replaced with null
Mutant 1498 in q.js: arguments replaced with null
Mutant 1499 in q.js: arguments replaced with deferred.resolve
Mutant 1500 in q.js: defer replaced with {}
Mutant 1501 in q.js: deferred.makeNodeResolver() replaced with function () {
  throw new Error('Buggy node resolver');
}
Mutant 1502 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1503 in q.js: deferred.makeNodeResolver() replaced with deferred.promise
Mutant 1504 in q.js: callback.apply replaced with callback.call
Mutant 1505 in q.js: callback.apply replaced with callback.bind
Mutant 1506 in q.js: thisp replaced with global
Mutant 1507 in q.js: thisp replaced with null
Mutant 1508 in q.js: thisp replaced with 0
Mutant 1509 in q.js: arguments replaced with thisp
Mutant 1510 in q.js: arguments replaced with null
Mutant 1511 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1512 in q.js: Q(bound).fapply replaced with bound.fapply
Mutant 1513 in q.js: Q(bound).fapply replaced with Function.prototype.fapply
not replacing Q(bound).fapply with bound.fapply
not replacing Q(bound).fapply with bound.fapply
not replacing Q(bound).fapply with Function.prototype.fapply
not replacing Q(bound).fapply with Function.prototype.fapply
Mutant 1514 in q.js: bound replaced with callback.apply(thisp)
Mutant 1515 in q.js: deferred.reject replaced with () => deferred.reject
Mutant 1516 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1517 in q.js: deferred.reject replaced with deferred.reject(null)
Mutant 1518 in q.js: array_slice replaced with [].slice
Mutant 1519 in q.js: array_slice replaced with null
Mutant 1520 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1521 in q.js: arguments replaced with [].slice.call(arguments, 0)
Mutant 1522 in q.js: arguments replaced with Object.keys(arguments)[0]
Mutant 1523 in q.js: arguments replaced with Function.prototype.apply.call(null, this, arguments)
Mutant 1524 in q.js: 0 replaced with Infinity
Mutant 1525 in q.js: 0 replaced with null
Mutant 1526 in q.js: this replaced with global
Mutant 1527 in q.js: this replaced with 0
Mutant 1528 in q.js: this replaced with null
Mutant 1529 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1530 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args)
Mutant 1531 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(Q, args)
Mutant 1532 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1533 in q.js: void 0 replaced with null
Mutant 1534 in q.js: void 0 replaced with 0
Mutant 1535 in q.js: void 0 replaced with function () {}
Mutant 1536 in q.js: args replaced with []
Mutant 1537 in q.js: args replaced with null
Mutant 1538 in q.js: args replaced with this
Mutant 1539 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(false)
Mutant 1540 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(null)
Mutant 1541 in q.js: Q(object).npost(name, args) replaced with Q(object).npost({
  length: 10
})
Mutant 1542 in q.js: Q replaced with this
Mutant 1543 in q.js: Q replaced with Q.npost
Mutant 1544 in q.js: args replaced with []
Mutant 1545 in q.js: args replaced with null
Mutant 1546 in q.js: args replaced with 1 === 2
Mutant 1547 in q.js: array_slice replaced with [].slice
Mutant 1548 in q.js: array_slice replaced with null
Mutant 1549 in q.js: array_slice replaced with Object.keys
Mutant 1550 in q.js: args || [] replaced with [null]
Mutant 1551 in q.js: defer replaced with Promise.resolve
Mutant 1552 in q.js: defer replaced with Q.resolve
Mutant 1553 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1554 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1555 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve
Mutant 1556 in q.js: deferred.makeNodeResolver replaced with this.makeNodeResolver
Mutant 1557 in q.js: "post" replaced with "Post"
Mutant 1558 in q.js: [name, nodeArgs] replaced with name
Mutant 1559 in q.js: [name, nodeArgs] replaced with null
Mutant 1560 in q.js: [name, nodeArgs] replaced with [name]
Mutant 1561 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1562 in q.js: deferred.reject replaced with function () {}
Mutant 1563 in q.js: array_slice(arguments, 2) replaced with array_slice([].slice.call(arguments, 1))
Mutant 1564 in q.js: array_slice(arguments, 2) replaced with array_slice(Array.prototype.slice.call(arguments, 1))
Mutant 1565 in q.js: array_slice(arguments, 2) replaced with array_slice(Function.prototype.apply.call(arguments.slice, arguments, [1]))
Mutant 1566 in q.js: array_slice replaced with [].slice
Mutant 1567 in q.js: array_slice replaced with null
Mutant 1568 in q.js: array_slice replaced with Q.slice
Mutant 1569 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1570 in q.js: arguments replaced with this.arguments
Mutant 1571 in q.js: arguments replaced with null
Mutant 1572 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1573 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1574 in q.js: deferred.makeNodeResolver() replaced with function () {
  return true;
}
Mutant 1575 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1576 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("called", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("called", [name, nodeArgs])
Mutant 1577 in q.js: Q(object).dispatch replaced with this.dispatch
Mutant 1578 in q.js: Q(object).dispatch replaced with Q.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with this.dispatch
not replacing Q(object).dispatch with Q.dispatch
not replacing Q(object).dispatch with Q.dispatch
Mutant 1579 in q.js: object replaced with null
Mutant 1580 in q.js: object replaced with {}
Mutant 1581 in q.js: "post" replaced with "Post"
Mutant 1582 in q.js: "post" replaced with this.dispatch.bind(this, "post")
Mutant 1583 in q.js: "post" replaced with function () {
  return this.dispatch("post");
}
Mutant 1584 in q.js: [name, nodeArgs] replaced with name
Mutant 1585 in q.js: [name, nodeArgs] replaced with null
Mutant 1586 in q.js: array_slice(arguments, 1) replaced with array_slice([].slice.call(arguments, 0))
Mutant 1587 in q.js: array_slice(arguments, 1) replaced with array_slice(Array.prototype.slice.call(arguments, 0))
Mutant 1588 in q.js: array_slice(arguments, 1) replaced with array_slice([].concat.apply([], arguments))
Mutant 1589 in q.js: array_slice replaced with [].slice
Mutant 1590 in q.js: array_slice replaced with null
Mutant 1591 in q.js: array_slice replaced with Array.prototype.slice
Mutant 1592 in q.js: arguments replaced with [].slice.call(arguments, 1)
Mutant 1593 in q.js: arguments replaced with Object.keys(arguments)[1]
Mutant 1594 in q.js: nodeArgs.push replaced with null
Mutant 1595 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1596 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1597 in q.js: deferred.makeNodeResolver replaced with deferred
Mutant 1598 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("call", [name, nodeArgs])
Mutant 1599 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, deferred.resolve])
Mutant 1600 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("apply", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("call", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, deferred.resolve])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("apply", [name, nodeArgs])
Mutant 1601 in q.js: [name, nodeArgs] replaced with this.constructor.prototype.dispatch.call(this, "post", [name, nodeArgs])
Mutant 1602 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1603 in q.js: deferred.reject replaced with function () {}
Mutant 1604 in q.js: deferred.reject replaced with deferred.promise
Mutant 1605 in q.js: Q replaced with Promise
Mutant 1606 in q.js: Q replaced with []
Mutant 1607 in q.js: object replaced with this
Mutant 1608 in q.js: object replaced with null
Mutant 1609 in q.js: object replaced with function () {}
Mutant 1610 in q.js: nodeback replaced with function () {
  nodeback && nodeback(null, value);
}
Mutant 1611 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1612 in q.js: nodeback replaced with true
Mutant 1613 in q.js: nodeback replaced with null
Mutant 1614 in q.js: null replaced with value
Mutant 1615 in q.js: null replaced with 1
Mutant 1616 in q.js: value replaced with undefined
Mutant 1617 in q.js: value replaced with null
Mutant 1618 in q.js: value replaced with arguments[0]
Mutant 1619 in q.js: nodeback replaced with void nodeback
Mutant 1620 in q.js: nodeback replaced with null
Mutant 1621 in queue.js: Q.defer replaced with Q.reject
Mutant 1622 in queue.js: ends.promise.get replaced with ends.promise.then.get
Mutant 1623 in queue.js: "head" replaced with null
Mutant 1624 in queue.js: "head" replaced with ends.promise
Mutant 1625 in queue.js: "head" replaced with ends.promise.head
Mutant 1626 in queue.js: "tail" replaced with null
Mutant 1627 in queue.js: "tail" replaced with ends.promise
Mutant 1628 in queue.js: "tail" replaced with Q.defer().promise
Mutant 1629 in queue.js: error replaced with null
Mutant 1630 in queue.js: error replaced with {}
Mutant 1631 in queue.js: error replaced with Q.resolve()
Mutant 1632 in queue.js: Q.reject replaced with null
Mutant 1633 in queue.js: Q.reject replaced with {}
Mutant 1634 in queue.js: Q.reject replaced with Q.resolve
Mutant 1635 in queue.js: error replaced with new Error("Different error message")
Mutant 1636 in queue.js: error replaced with null
Mutant 1637 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 1638 in queue.js: ends.resolve replaced with ends.reject
Mutant 1639 in queue.js: ends.resolve replaced with ends.notify
Mutant 1640 in queue.js: ends.resolve replaced with ends.promise.resolve
Mutant 1641 in queue.js: end replaced with null
Mutant 1642 in queue.js: end replaced with Q.reject("Error message")
[32m02:25:46 (3294) INFO Instrumenter[39m Instrumented 2 source file(s) with 1643 mutant(s)
[32m02:25:47 (3294) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m02:25:48 (3294) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m02:25:48 (3294) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m02:25:55 (3294) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6777 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~2h 16m) 2/1643 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 2m) 3/1643 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 43m) 5/1643 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 1m) 6/1643 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 50m) 8/1643 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 1m) 9/1643 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 53m) 11/1643 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 1m) 12/1643 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 54m) 14/1643 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 0m) 15/1643 tested (14 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 55m) 17/1643 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 0m) 18/1643 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 55m) 20/1643 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 0m) 21/1643 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 56m) 23/1643 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 59m) 24/1643 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 56m) 26/1643 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~2h 59m) 27/1643 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 9m) 27/1643 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 5m) 29/1643 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 14m) 29/1643 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 17m) 30/1643 tested (27 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 19m) 31/1643 tested (28 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 21m) 32/1643 tested (28 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 17m) 34/1643 tested (30 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 25m) 34/1643 tested (30 survived, 3 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 26m) 35/1643 tested (30 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 28m) 36/1643 tested (30 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 29m) 37/1643 tested (31 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 15m) 41/1643 tested (32 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 16m) 42/1643 tested (33 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 13m) 44/1643 tested (35 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 15m) 45/1643 tested (36 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 12m) 47/1643 tested (38 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 13m) 48/1643 tested (39 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 11m) 50/1643 tested (41 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 12m) 51/1643 tested (42 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 10m) 53/1643 tested (44 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 11m) 54/1643 tested (45 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 8m) 56/1643 tested (47 survived, 5 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 10m) 57/1643 tested (48 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 7m) 59/1643 tested (50 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 12m) 59/1643 tested (50 survived, 5 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 13m) 60/1643 tested (50 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 11m) 62/1643 tested (52 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 15m) 62/1643 tested (52 survived, 6 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 13m) 64/1643 tested (53 survived, 7 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 14m) 65/1643 tested (54 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 12m) 67/1643 tested (56 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 13m) 68/1643 tested (57 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 11m) 70/1643 tested (59 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 11m) 71/1643 tested (60 survived, 7 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 9m) 73/1643 tested (62 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 10m) 74/1643 tested (63 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 9m) 76/1643 tested (65 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 9m) 77/1643 tested (66 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 8m) 79/1643 tested (68 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 8m) 80/1643 tested (69 survived, 7 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 9m) 81/1643 tested (70 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 7m) 83/1643 tested (72 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 8m) 84/1643 tested (73 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 7m) 86/1643 tested (75 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 7m) 87/1643 tested (76 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 6m) 89/1643 tested (78 survived, 7 timed out)
Mutation testing 5% (elapsed: ~10m, remaining: ~3h 6m) 90/1643 tested (79 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 5m) 92/1643 tested (81 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 6m) 93/1643 tested (82 survived, 7 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 4m) 95/1643 tested (84 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 55m) 101/1643 tested (85 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 56m) 102/1643 tested (86 survived, 7 timed out)
Mutation testing 6% (elapsed: ~11m, remaining: ~2h 56m) 103/1643 tested (87 survived, 7 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 42m) 113/1643 tested (88 survived, 7 timed out)
Mutation testing 6% (elapsed: ~12m, remaining: ~2h 41m) 115/1643 tested (89 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 42m) 116/1643 tested (90 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 41m) 118/1643 tested (92 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 42m) 119/1643 tested (93 survived, 7 timed out)
Mutation testing 7% (elapsed: ~12m, remaining: ~2h 41m) 121/1643 tested (95 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 42m) 122/1643 tested (96 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 41m) 124/1643 tested (98 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 41m) 125/1643 tested (99 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 41m) 127/1643 tested (101 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 41m) 128/1643 tested (102 survived, 7 timed out)
Mutation testing 7% (elapsed: ~13m, remaining: ~2h 40m) 130/1643 tested (104 survived, 7 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 41m) 131/1643 tested (105 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 40m) 133/1643 tested (107 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 41m) 134/1643 tested (108 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 40m) 136/1643 tested (110 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 41m) 137/1643 tested (111 survived, 7 timed out)
Mutation testing 8% (elapsed: ~14m, remaining: ~2h 40m) 139/1643 tested (113 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 41m) 140/1643 tested (114 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 40m) 142/1643 tested (116 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 40m) 143/1643 tested (117 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 41m) 144/1643 tested (118 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 40m) 146/1643 tested (120 survived, 7 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~2h 41m) 147/1643 tested (121 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 40m) 149/1643 tested (123 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 40m) 150/1643 tested (124 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 40m) 152/1643 tested (126 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 40m) 153/1643 tested (127 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 40m) 155/1643 tested (129 survived, 7 timed out)
Mutation testing 9% (elapsed: ~16m, remaining: ~2h 40m) 156/1643 tested (130 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 39m) 158/1643 tested (132 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 40m) 159/1643 tested (133 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 38m) 162/1643 tested (135 survived, 7 timed out)
Mutation testing 9% (elapsed: ~17m, remaining: ~2h 38m) 163/1643 tested (136 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 38m) 165/1643 tested (138 survived, 7 timed out)
Mutation testing 10% (elapsed: ~17m, remaining: ~2h 38m) 166/1643 tested (139 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 38m) 168/1643 tested (141 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 38m) 169/1643 tested (142 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 37m) 171/1643 tested (144 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 38m) 172/1643 tested (145 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 38m) 173/1643 tested (146 survived, 7 timed out)
Mutation testing 10% (elapsed: ~18m, remaining: ~2h 37m) 175/1643 tested (148 survived, 7 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 36m) 178/1643 tested (149 survived, 7 timed out)
Mutation testing 10% (elapsed: ~19m, remaining: ~2h 36m) 179/1643 tested (149 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 36m) 181/1643 tested (149 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 36m) 182/1643 tested (149 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 35m) 184/1643 tested (151 survived, 7 timed out)
Mutation testing 11% (elapsed: ~19m, remaining: ~2h 36m) 185/1643 tested (152 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 35m) 187/1643 tested (153 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 35m) 189/1643 tested (155 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 35m) 190/1643 tested (156 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 34m) 192/1643 tested (158 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 35m) 193/1643 tested (159 survived, 7 timed out)
Mutation testing 11% (elapsed: ~20m, remaining: ~2h 34m) 195/1643 tested (161 survived, 7 timed out)
Mutation testing 11% (elapsed: ~21m, remaining: ~2h 35m) 196/1643 tested (162 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 34m) 198/1643 tested (164 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 34m) 199/1643 tested (165 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 34m) 201/1643 tested (167 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 34m) 202/1643 tested (168 survived, 7 timed out)
Mutation testing 12% (elapsed: ~21m, remaining: ~2h 34m) 204/1643 tested (170 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 34m) 205/1643 tested (171 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 33m) 207/1643 tested (173 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 34m) 208/1643 tested (174 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 34m) 209/1643 tested (175 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 33m) 211/1643 tested (177 survived, 7 timed out)
Mutation testing 12% (elapsed: ~22m, remaining: ~2h 34m) 212/1643 tested (178 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 33m) 214/1643 tested (180 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 33m) 215/1643 tested (181 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 33m) 217/1643 tested (183 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 33m) 218/1643 tested (184 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 33m) 220/1643 tested (186 survived, 7 timed out)
Mutation testing 13% (elapsed: ~23m, remaining: ~2h 33m) 221/1643 tested (187 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 32m) 223/1643 tested (189 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 33m) 224/1643 tested (190 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 32m) 226/1643 tested (192 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 32m) 227/1643 tested (193 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 32m) 229/1643 tested (195 survived, 7 timed out)
Mutation testing 13% (elapsed: ~24m, remaining: ~2h 32m) 230/1643 tested (196 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 32m) 232/1643 tested (198 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 32m) 233/1643 tested (199 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 31m) 235/1643 tested (201 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 32m) 236/1643 tested (202 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 31m) 238/1643 tested (204 survived, 7 timed out)
Mutation testing 14% (elapsed: ~25m, remaining: ~2h 31m) 239/1643 tested (205 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 31m) 241/1643 tested (207 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 31m) 242/1643 tested (208 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 30m) 244/1643 tested (210 survived, 7 timed out)
Mutation testing 14% (elapsed: ~26m, remaining: ~2h 30m) 246/1643 tested (211 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 30m) 247/1643 tested (212 survived, 7 timed out)
Mutation testing 15% (elapsed: ~26m, remaining: ~2h 28m) 251/1643 tested (214 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 28m) 253/1643 tested (215 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 28m) 254/1643 tested (216 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 28m) 256/1643 tested (218 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 28m) 257/1643 tested (219 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 27m) 259/1643 tested (221 survived, 7 timed out)
Mutation testing 15% (elapsed: ~27m, remaining: ~2h 28m) 260/1643 tested (222 survived, 7 timed out)
Mutation testing 15% (elapsed: ~28m, remaining: ~2h 27m) 262/1643 tested (224 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 27m) 263/1643 tested (225 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 27m) 265/1643 tested (227 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 27m) 266/1643 tested (228 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 27m) 268/1643 tested (230 survived, 7 timed out)
Mutation testing 16% (elapsed: ~28m, remaining: ~2h 27m) 269/1643 tested (231 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 26m) 271/1643 tested (233 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 27m) 272/1643 tested (234 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 25m) 275/1643 tested (235 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 25m) 277/1643 tested (237 survived, 7 timed out)
Mutation testing 16% (elapsed: ~29m, remaining: ~2h 25m) 278/1643 tested (238 survived, 7 timed out)
Mutation testing 17% (elapsed: ~29m, remaining: ~2h 24m) 281/1643 tested (240 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 24m) 282/1643 tested (241 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 24m) 283/1643 tested (242 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 23m) 286/1643 tested (244 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 24m) 287/1643 tested (245 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 23m) 289/1643 tested (247 survived, 7 timed out)
Mutation testing 17% (elapsed: ~30m, remaining: ~2h 23m) 290/1643 tested (248 survived, 7 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 23m) 292/1643 tested (250 survived, 7 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 23m) 293/1643 tested (251 survived, 7 timed out)
Mutation testing 17% (elapsed: ~31m, remaining: ~2h 23m) 295/1643 tested (253 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 23m) 296/1643 tested (254 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 22m) 299/1643 tested (256 survived, 7 timed out)
Mutation testing 18% (elapsed: ~31m, remaining: ~2h 22m) 300/1643 tested (257 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 22m) 301/1643 tested (257 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 22m) 302/1643 tested (258 survived, 7 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 21m) 306/1643 tested (258 survived, 8 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 21m) 307/1643 tested (258 survived, 8 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 21m) 308/1643 tested (258 survived, 8 timed out)
Mutation testing 18% (elapsed: ~32m, remaining: ~2h 21m) 310/1643 tested (259 survived, 8 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 21m) 311/1643 tested (260 survived, 8 timed out)
Mutation testing 18% (elapsed: ~33m, remaining: ~2h 21m) 312/1643 tested (260 survived, 8 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 20m) 315/1643 tested (260 survived, 9 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 20m) 316/1643 tested (261 survived, 9 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 20m) 318/1643 tested (263 survived, 9 timed out)
Mutation testing 19% (elapsed: ~33m, remaining: ~2h 18m) 322/1643 tested (263 survived, 9 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 18m) 324/1643 tested (265 survived, 9 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 17m) 327/1643 tested (266 survived, 9 timed out)
Mutation testing 19% (elapsed: ~34m, remaining: ~2h 17m) 328/1643 tested (267 survived, 9 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 16m) 331/1643 tested (267 survived, 9 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 16m) 332/1643 tested (267 survived, 10 timed out)
Mutation testing 20% (elapsed: ~34m, remaining: ~2h 17m) 332/1643 tested (267 survived, 10 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 17m) 333/1643 tested (267 survived, 11 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 17m) 335/1643 tested (269 survived, 11 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 17m) 336/1643 tested (270 survived, 11 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 17m) 338/1643 tested (272 survived, 11 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 17m) 339/1643 tested (273 survived, 11 timed out)
Mutation testing 20% (elapsed: ~35m, remaining: ~2h 17m) 339/1643 tested (273 survived, 11 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 16m) 343/1643 tested (274 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 16m) 344/1643 tested (275 survived, 12 timed out)
Mutation testing 20% (elapsed: ~36m, remaining: ~2h 16m) 345/1643 tested (276 survived, 12 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 16m) 347/1643 tested (278 survived, 12 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 16m) 348/1643 tested (279 survived, 12 timed out)
Mutation testing 21% (elapsed: ~36m, remaining: ~2h 16m) 350/1643 tested (281 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 16m) 351/1643 tested (282 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 15m) 353/1643 tested (284 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 15m) 354/1643 tested (285 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 15m) 356/1643 tested (287 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 15m) 357/1643 tested (288 survived, 12 timed out)
Mutation testing 21% (elapsed: ~37m, remaining: ~2h 15m) 359/1643 tested (290 survived, 12 timed out)
Mutation testing 21% (elapsed: ~38m, remaining: ~2h 15m) 360/1643 tested (291 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 15m) 362/1643 tested (293 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 15m) 363/1643 tested (294 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 14m) 365/1643 tested (296 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 14m) 366/1643 tested (297 survived, 12 timed out)
Mutation testing 22% (elapsed: ~38m, remaining: ~2h 14m) 368/1643 tested (299 survived, 12 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 369/1643 tested (300 survived, 12 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 371/1643 tested (302 survived, 12 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 371/1643 tested (302 survived, 12 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 14m) 373/1643 tested (302 survived, 13 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 15m) 373/1643 tested (302 survived, 13 timed out)
Mutation testing 22% (elapsed: ~39m, remaining: ~2h 15m) 374/1643 tested (302 survived, 14 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 14m) 376/1643 tested (302 survived, 15 timed out)
Mutation testing 22% (elapsed: ~40m, remaining: ~2h 15m) 376/1643 tested (302 survived, 15 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 14m) 378/1643 tested (302 survived, 16 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 15m) 379/1643 tested (302 survived, 17 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 14m) 381/1643 tested (303 survived, 17 timed out)
Mutation testing 23% (elapsed: ~40m, remaining: ~2h 15m) 381/1643 tested (303 survived, 17 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 15m) 382/1643 tested (303 survived, 18 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 15m) 383/1643 tested (303 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 15m) 383/1643 tested (303 survived, 19 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 16m) 384/1643 tested (303 survived, 20 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 16m) 385/1643 tested (303 survived, 21 timed out)
Mutation testing 23% (elapsed: ~41m, remaining: ~2h 16m) 386/1643 tested (304 survived, 21 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 15m) 388/1643 tested (306 survived, 21 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 15m) 389/1643 tested (307 survived, 21 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 15m) 391/1643 tested (309 survived, 21 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 15m) 392/1643 tested (310 survived, 21 timed out)
Mutation testing 23% (elapsed: ~42m, remaining: ~2h 15m) 393/1643 tested (311 survived, 21 timed out)
Mutation testing 24% (elapsed: ~42m, remaining: ~2h 15m) 395/1643 tested (311 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 15m) 395/1643 tested (311 survived, 22 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 15m) 398/1643 tested (311 survived, 23 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 400/1643 tested (311 survived, 23 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 401/1643 tested (311 survived, 23 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 402/1643 tested (311 survived, 23 timed out)
Mutation testing 24% (elapsed: ~43m, remaining: ~2h 14m) 403/1643 tested (311 survived, 23 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 14m) 405/1643 tested (313 survived, 23 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 14m) 406/1643 tested (314 survived, 23 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 14m) 408/1643 tested (316 survived, 23 timed out)
Mutation testing 24% (elapsed: ~44m, remaining: ~2h 14m) 409/1643 tested (317 survived, 23 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 13m) 411/1643 tested (319 survived, 23 timed out)
Mutation testing 25% (elapsed: ~44m, remaining: ~2h 13m) 412/1643 tested (320 survived, 23 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 13m) 414/1643 tested (322 survived, 23 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 13m) 415/1643 tested (323 survived, 23 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 13m) 417/1643 tested (325 survived, 23 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 13m) 418/1643 tested (326 survived, 23 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 13m) 419/1643 tested (327 survived, 23 timed out)
Mutation testing 25% (elapsed: ~45m, remaining: ~2h 13m) 421/1643 tested (329 survived, 23 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 13m) 422/1643 tested (330 survived, 23 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 12m) 424/1643 tested (332 survived, 23 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 12m) 425/1643 tested (333 survived, 23 timed out)
Mutation testing 25% (elapsed: ~46m, remaining: ~2h 12m) 427/1643 tested (335 survived, 23 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 12m) 428/1643 tested (336 survived, 23 timed out)
Mutation testing 26% (elapsed: ~46m, remaining: ~2h 12m) 430/1643 tested (338 survived, 23 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 12m) 431/1643 tested (339 survived, 23 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 433/1643 tested (341 survived, 23 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 434/1643 tested (342 survived, 23 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 436/1643 tested (344 survived, 23 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 437/1643 tested (345 survived, 23 timed out)
Mutation testing 26% (elapsed: ~47m, remaining: ~2h 11m) 439/1643 tested (347 survived, 23 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 11m) 440/1643 tested (348 survived, 23 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 10m) 442/1643 tested (350 survived, 23 timed out)
Mutation testing 26% (elapsed: ~48m, remaining: ~2h 10m) 443/1643 tested (351 survived, 23 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 10m) 445/1643 tested (353 survived, 23 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 10m) 446/1643 tested (354 survived, 23 timed out)
Mutation testing 27% (elapsed: ~48m, remaining: ~2h 10m) 448/1643 tested (356 survived, 23 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 10m) 449/1643 tested (357 survived, 23 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 451/1643 tested (359 survived, 23 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 452/1643 tested (360 survived, 23 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 454/1643 tested (362 survived, 23 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 455/1643 tested (363 survived, 23 timed out)
Mutation testing 27% (elapsed: ~49m, remaining: ~2h 9m) 456/1643 tested (364 survived, 23 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 9m) 458/1643 tested (366 survived, 23 timed out)
Mutation testing 27% (elapsed: ~50m, remaining: ~2h 9m) 459/1643 tested (367 survived, 23 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 9m) 461/1643 tested (369 survived, 23 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 9m) 462/1643 tested (370 survived, 23 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 8m) 464/1643 tested (372 survived, 23 timed out)
Mutation testing 28% (elapsed: ~50m, remaining: ~2h 8m) 465/1643 tested (373 survived, 23 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 8m) 467/1643 tested (375 survived, 23 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 8m) 468/1643 tested (376 survived, 23 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 8m) 470/1643 tested (378 survived, 23 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 8m) 471/1643 tested (379 survived, 23 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 7m) 473/1643 tested (381 survived, 23 timed out)
Mutation testing 28% (elapsed: ~51m, remaining: ~2h 7m) 474/1643 tested (382 survived, 23 timed out)
Mutation testing 28% (elapsed: ~52m, remaining: ~2h 7m) 476/1643 tested (384 survived, 23 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 6m) 479/1643 tested (385 survived, 23 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 479/1643 tested (385 survived, 23 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 480/1643 tested (385 survived, 24 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 481/1643 tested (385 survived, 25 timed out)
Mutation testing 29% (elapsed: ~52m, remaining: ~2h 7m) 481/1643 tested (385 survived, 25 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 7m) 482/1643 tested (385 survived, 26 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 7m) 483/1643 tested (385 survived, 27 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 8m) 483/1643 tested (385 survived, 27 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 8m) 484/1643 tested (385 survived, 28 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 8m) 485/1643 tested (385 survived, 29 timed out)
Mutation testing 29% (elapsed: ~53m, remaining: ~2h 8m) 485/1643 tested (385 survived, 29 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 8m) 486/1643 tested (385 survived, 30 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 8m) 487/1643 tested (385 survived, 31 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 8m) 487/1643 tested (385 survived, 31 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 8m) 488/1643 tested (385 survived, 32 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 9m) 489/1643 tested (385 survived, 33 timed out)
Mutation testing 29% (elapsed: ~54m, remaining: ~2h 9m) 489/1643 tested (385 survived, 33 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 9m) 490/1643 tested (385 survived, 34 timed out)
Mutation testing 29% (elapsed: ~55m, remaining: ~2h 9m) 492/1643 tested (387 survived, 34 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 9m) 493/1643 tested (388 survived, 34 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 8m) 495/1643 tested (390 survived, 34 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 8m) 496/1643 tested (391 survived, 34 timed out)
Mutation testing 30% (elapsed: ~55m, remaining: ~2h 8m) 498/1643 tested (393 survived, 34 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 8m) 499/1643 tested (394 survived, 34 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 8m) 501/1643 tested (396 survived, 34 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 8m) 502/1643 tested (397 survived, 34 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 8m) 503/1643 tested (398 survived, 34 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 8m) 504/1643 tested (398 survived, 35 timed out)
Mutation testing 30% (elapsed: ~56m, remaining: ~2h 8m) 504/1643 tested (398 survived, 35 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 7m) 507/1643 tested (398 survived, 36 timed out)
Mutation testing 30% (elapsed: ~57m, remaining: ~2h 7m) 509/1643 tested (400 survived, 36 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 7m) 510/1643 tested (401 survived, 36 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 7m) 512/1643 tested (402 survived, 36 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 7m) 513/1643 tested (403 survived, 36 timed out)
Mutation testing 31% (elapsed: ~57m, remaining: ~2h 6m) 515/1643 tested (404 survived, 36 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 6m) 516/1643 tested (404 survived, 37 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 7m) 516/1643 tested (404 survived, 37 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 7m) 517/1643 tested (404 survived, 38 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 7m) 518/1643 tested (404 survived, 39 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 7m) 518/1643 tested (404 survived, 39 timed out)
Mutation testing 31% (elapsed: ~58m, remaining: ~2h 7m) 520/1643 tested (404 survived, 40 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 7m) 521/1643 tested (404 survived, 40 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 7m) 522/1643 tested (404 survived, 40 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 7m) 523/1643 tested (404 survived, 40 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 7m) 524/1643 tested (404 survived, 40 timed out)
Mutation testing 31% (elapsed: ~59m, remaining: ~2h 7m) 525/1643 tested (404 survived, 40 timed out)
Mutation testing 32% (elapsed: ~59m, remaining: ~2h 7m) 526/1643 tested (404 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 7m) 526/1643 tested (404 survived, 40 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 7m) 527/1643 tested (404 survived, 41 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 7m) 528/1643 tested (404 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 7m) 528/1643 tested (404 survived, 42 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 7m) 529/1643 tested (404 survived, 43 timed out)
Mutation testing 32% (elapsed: ~1h 0m, remaining: ~2h 7m) 530/1643 tested (404 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 7m) 531/1643 tested (405 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 7m) 533/1643 tested (407 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 7m) 533/1643 tested (407 survived, 44 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 7m) 534/1643 tested (407 survived, 45 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 7m) 535/1643 tested (407 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 1m, remaining: ~2h 8m) 535/1643 tested (407 survived, 46 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 8m) 536/1643 tested (407 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 8m) 537/1643 tested (407 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 8m) 537/1643 tested (407 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 8m) 538/1643 tested (407 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 8m) 539/1643 tested (407 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 2m, remaining: ~2h 8m) 540/1643 tested (407 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 3m, remaining: ~2h 8m) 541/1643 tested (407 survived, 47 timed out)
Mutation testing 32% (elapsed: ~1h 3m, remaining: ~2h 8m) 542/1643 tested (407 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 7m) 544/1643 tested (409 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 7m) 545/1643 tested (410 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 8m) 545/1643 tested (410 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 3m, remaining: ~2h 8m) 546/1643 tested (410 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 8m) 547/1643 tested (410 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 8m) 547/1643 tested (410 survived, 49 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 8m) 549/1643 tested (410 survived, 50 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 8m) 550/1643 tested (410 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 8m) 550/1643 tested (410 survived, 51 timed out)
Mutation testing 33% (elapsed: ~1h 4m, remaining: ~2h 8m) 551/1643 tested (410 survived, 52 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 8m) 552/1643 tested (410 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 8m) 553/1643 tested (410 survived, 53 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 8m) 555/1643 tested (410 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 8m) 556/1643 tested (411 survived, 54 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 8m) 557/1643 tested (411 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 5m, remaining: ~2h 8m) 557/1643 tested (411 survived, 55 timed out)
Mutation testing 33% (elapsed: ~1h 6m, remaining: ~2h 8m) 558/1643 tested (411 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 8m) 559/1643 tested (411 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 8m) 559/1643 tested (411 survived, 57 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 8m) 560/1643 tested (411 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 8m) 561/1643 tested (412 survived, 58 timed out)
Mutation testing 34% (elapsed: ~1h 6m, remaining: ~2h 8m) 562/1643 tested (412 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 8m) 562/1643 tested (412 survived, 59 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 8m) 563/1643 tested (412 survived, 60 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 8m) 564/1643 tested (412 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 8m) 565/1643 tested (413 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 8m) 567/1643 tested (415 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 7m, remaining: ~2h 8m) 568/1643 tested (416 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 8m) 570/1643 tested (418 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 7m) 571/1643 tested (419 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 7m) 573/1643 tested (421 survived, 61 timed out)
Mutation testing 34% (elapsed: ~1h 8m, remaining: ~2h 7m) 574/1643 tested (422 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 7m) 576/1643 tested (424 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 8m, remaining: ~2h 7m) 577/1643 tested (425 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 6m) 579/1643 tested (427 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 6m) 580/1643 tested (428 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 6m) 582/1643 tested (430 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 6m) 583/1643 tested (431 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 5m) 585/1643 tested (433 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 9m, remaining: ~2h 5m) 586/1643 tested (434 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 5m) 588/1643 tested (436 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 5m) 589/1643 tested (437 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 10m, remaining: ~2h 5m) 591/1643 tested (439 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 5m) 592/1643 tested (440 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 4m) 594/1643 tested (442 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 10m, remaining: ~2h 4m) 595/1643 tested (443 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 4m) 596/1643 tested (444 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 4m) 598/1643 tested (446 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 4m) 599/1643 tested (447 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 3m) 601/1643 tested (449 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 3m) 602/1643 tested (450 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 11m, remaining: ~2h 3m) 604/1643 tested (452 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 3m) 605/1643 tested (453 survived, 61 timed out)
Mutation testing 36% (elapsed: ~1h 12m, remaining: ~2h 3m) 607/1643 tested (455 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 3m) 608/1643 tested (456 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 2m) 610/1643 tested (458 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 2m) 611/1643 tested (459 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 12m, remaining: ~2h 2m) 613/1643 tested (461 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 2m) 614/1643 tested (462 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 1m) 616/1643 tested (464 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 1m) 617/1643 tested (465 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 1m) 619/1643 tested (467 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 1m) 620/1643 tested (468 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 13m, remaining: ~2h 1m) 622/1643 tested (470 survived, 61 timed out)
Mutation testing 37% (elapsed: ~1h 14m, remaining: ~2h 1m) 623/1643 tested (471 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~2h 0m) 625/1643 tested (473 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~2h 0m) 626/1643 tested (474 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~2h 0m) 627/1643 tested (475 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~2h 0m) 629/1643 tested (477 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 14m, remaining: ~2h 0m) 630/1643 tested (478 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 59m) 632/1643 tested (480 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 59m) 634/1643 tested (481 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 59m) 635/1643 tested (481 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 58m) 638/1643 tested (482 survived, 61 timed out)
Mutation testing 38% (elapsed: ~1h 15m, remaining: ~1h 58m) 639/1643 tested (483 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 15m, remaining: ~1h 58m) 641/1643 tested (485 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 58m) 642/1643 tested (486 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 58m) 644/1643 tested (488 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 58m) 645/1643 tested (489 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 57m) 647/1643 tested (491 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 57m) 648/1643 tested (492 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 16m, remaining: ~1h 57m) 650/1643 tested (494 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 57m) 651/1643 tested (495 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 56m) 653/1643 tested (497 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 56m) 654/1643 tested (498 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 56m) 655/1643 tested (499 survived, 61 timed out)
Mutation testing 39% (elapsed: ~1h 17m, remaining: ~1h 56m) 657/1643 tested (501 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 17m, remaining: ~1h 56m) 658/1643 tested (502 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 56m) 660/1643 tested (504 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 56m) 661/1643 tested (505 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 55m) 663/1643 tested (507 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 55m) 664/1643 tested (508 survived, 61 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 55m) 665/1643 tested (508 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 18m, remaining: ~1h 55m) 668/1643 tested (509 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 55m) 669/1643 tested (510 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 54m) 671/1643 tested (511 survived, 62 timed out)
Mutation testing 40% (elapsed: ~1h 19m, remaining: ~1h 54m) 673/1643 tested (513 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 54m) 674/1643 tested (514 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 53m) 676/1643 tested (516 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 19m, remaining: ~1h 53m) 677/1643 tested (517 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 53m) 679/1643 tested (519 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 52m) 682/1643 tested (519 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 52m) 683/1643 tested (520 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 52m) 686/1643 tested (522 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 52m) 687/1643 tested (523 survived, 62 timed out)
Mutation testing 41% (elapsed: ~1h 20m, remaining: ~1h 51m) 690/1643 tested (525 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 51m) 691/1643 tested (525 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 51m) 692/1643 tested (525 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 51m) 694/1643 tested (527 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 51m) 695/1643 tested (528 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 51m) 696/1643 tested (529 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 21m, remaining: ~1h 50m) 698/1643 tested (530 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 50m) 699/1643 tested (531 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 50m) 701/1643 tested (533 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 50m) 702/1643 tested (534 survived, 62 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 50m) 703/1643 tested (534 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 50m) 703/1643 tested (534 survived, 63 timed out)
Mutation testing 42% (elapsed: ~1h 22m, remaining: ~1h 50m) 704/1643 tested (534 survived, 64 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 50m) 705/1643 tested (534 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 23m, remaining: ~1h 50m) 706/1643 tested (535 survived, 65 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 50m) 707/1643 tested (536 survived, 65 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 50m) 708/1643 tested (536 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 50m) 709/1643 tested (537 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 23m, remaining: ~1h 49m) 711/1643 tested (539 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 49m) 712/1643 tested (540 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 49m) 714/1643 tested (542 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 48m) 717/1643 tested (543 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 48m) 718/1643 tested (544 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 48m) 720/1643 tested (546 survived, 66 timed out)
Mutation testing 43% (elapsed: ~1h 24m, remaining: ~1h 48m) 721/1643 tested (547 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 48m) 723/1643 tested (549 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 48m) 724/1643 tested (550 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 726/1643 tested (552 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 727/1643 tested (553 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 729/1643 tested (555 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 25m, remaining: ~1h 47m) 730/1643 tested (556 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 47m) 731/1643 tested (557 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 46m) 733/1643 tested (559 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 46m) 734/1643 tested (560 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 46m) 736/1643 tested (562 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 46m) 737/1643 tested (563 survived, 66 timed out)
Mutation testing 44% (elapsed: ~1h 26m, remaining: ~1h 46m) 739/1643 tested (565 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 46m) 740/1643 tested (566 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 45m) 742/1643 tested (568 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 45m) 743/1643 tested (569 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 45m) 745/1643 tested (571 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 45m) 746/1643 tested (572 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 27m, remaining: ~1h 45m) 748/1643 tested (574 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 45m) 749/1643 tested (575 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 44m) 751/1643 tested (577 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 44m) 752/1643 tested (578 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 44m) 753/1643 tested (579 survived, 66 timed out)
Mutation testing 45% (elapsed: ~1h 28m, remaining: ~1h 44m) 755/1643 tested (581 survived, 66 timed out)
Mutation testing 46% (elapsed: ~1h 28m, remaining: ~1h 44m) 756/1643 tested (582 survived, 66 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 44m) 757/1643 tested (582 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 44m) 757/1643 tested (582 survived, 67 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 44m) 758/1643 tested (582 survived, 68 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 44m) 759/1643 tested (582 survived, 69 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 44m) 759/1643 tested (582 survived, 69 timed out)
Mutation testing 46% (elapsed: ~1h 29m, remaining: ~1h 44m) 760/1643 tested (582 survived, 70 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 44m) 761/1643 tested (582 survived, 71 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 44m) 762/1643 tested (583 survived, 71 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 44m) 763/1643 tested (584 survived, 71 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 43m) 765/1643 tested (586 survived, 71 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 43m) 766/1643 tested (587 survived, 71 timed out)
Mutation testing 46% (elapsed: ~1h 30m, remaining: ~1h 43m) 768/1643 tested (589 survived, 71 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 43m) 769/1643 tested (590 survived, 71 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 43m) 771/1643 tested (592 survived, 71 timed out)
Mutation testing 46% (elapsed: ~1h 31m, remaining: ~1h 43m) 772/1643 tested (593 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 42m) 774/1643 tested (595 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 42m) 775/1643 tested (596 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 31m, remaining: ~1h 42m) 777/1643 tested (598 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 42m) 778/1643 tested (599 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 41m) 780/1643 tested (601 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 41m) 781/1643 tested (602 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 41m) 783/1643 tested (604 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 41m) 784/1643 tested (605 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 32m, remaining: ~1h 41m) 786/1643 tested (607 survived, 71 timed out)
Mutation testing 47% (elapsed: ~1h 33m, remaining: ~1h 41m) 787/1643 tested (608 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 40m) 789/1643 tested (610 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 40m) 790/1643 tested (611 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 40m) 792/1643 tested (613 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 40m) 793/1643 tested (614 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 33m, remaining: ~1h 40m) 794/1643 tested (615 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 40m) 796/1643 tested (617 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 39m) 797/1643 tested (618 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 39m) 799/1643 tested (620 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 39m) 800/1643 tested (621 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 39m) 802/1643 tested (623 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 34m, remaining: ~1h 39m) 803/1643 tested (624 survived, 71 timed out)
Mutation testing 48% (elapsed: ~1h 35m, remaining: ~1h 38m) 805/1643 tested (626 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 38m) 806/1643 tested (627 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 38m) 808/1643 tested (628 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 38m) 809/1643 tested (628 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 38m) 810/1643 tested (628 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 35m, remaining: ~1h 38m) 812/1643 tested (629 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 38m) 813/1643 tested (630 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 37m) 815/1643 tested (632 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 37m) 816/1643 tested (633 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 37m) 818/1643 tested (635 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 37m) 819/1643 tested (636 survived, 71 timed out)
Mutation testing 49% (elapsed: ~1h 36m, remaining: ~1h 36m) 821/1643 tested (638 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 36m) 822/1643 tested (639 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 36m) 824/1643 tested (641 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 36m) 825/1643 tested (642 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 36m) 827/1643 tested (644 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 36m) 828/1643 tested (645 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 37m, remaining: ~1h 35m) 830/1643 tested (647 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 35m) 831/1643 tested (648 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 35m) 833/1643 tested (650 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 35m) 834/1643 tested (651 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 35m) 836/1643 tested (653 survived, 71 timed out)
Mutation testing 50% (elapsed: ~1h 38m, remaining: ~1h 35m) 837/1643 tested (654 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 38m, remaining: ~1h 34m) 839/1643 tested (656 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 34m) 840/1643 tested (657 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 34m) 842/1643 tested (659 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 34m) 843/1643 tested (660 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 34m) 844/1643 tested (661 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 33m) 846/1643 tested (663 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 39m, remaining: ~1h 33m) 847/1643 tested (664 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 33m) 849/1643 tested (666 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 33m) 850/1643 tested (667 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 33m) 852/1643 tested (669 survived, 71 timed out)
Mutation testing 51% (elapsed: ~1h 40m, remaining: ~1h 33m) 853/1643 tested (670 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 32m) 855/1643 tested (672 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 40m, remaining: ~1h 32m) 856/1643 tested (673 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 32m) 858/1643 tested (675 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 32m) 859/1643 tested (676 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 32m) 861/1643 tested (678 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 31m) 862/1643 tested (679 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 31m) 864/1643 tested (681 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 41m, remaining: ~1h 31m) 865/1643 tested (682 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 31m) 867/1643 tested (684 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 31m) 868/1643 tested (685 survived, 71 timed out)
Mutation testing 52% (elapsed: ~1h 42m, remaining: ~1h 30m) 870/1643 tested (687 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 30m) 871/1643 tested (688 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 30m) 873/1643 tested (690 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 42m, remaining: ~1h 30m) 874/1643 tested (691 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 30m) 876/1643 tested (693 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 30m) 877/1643 tested (694 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 29m) 879/1643 tested (696 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 29m) 880/1643 tested (697 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 29m) 881/1643 tested (698 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 43m, remaining: ~1h 29m) 883/1643 tested (700 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 29m) 884/1643 tested (701 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 29m) 886/1643 tested (703 survived, 71 timed out)
Mutation testing 53% (elapsed: ~1h 44m, remaining: ~1h 28m) 887/1643 tested (704 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 28m) 889/1643 tested (706 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 28m) 890/1643 tested (707 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 44m, remaining: ~1h 28m) 892/1643 tested (709 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 28m) 893/1643 tested (710 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 27m) 895/1643 tested (712 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 27m) 896/1643 tested (713 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 27m) 898/1643 tested (715 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 27m) 899/1643 tested (716 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 45m, remaining: ~1h 27m) 901/1643 tested (718 survived, 71 timed out)
Mutation testing 54% (elapsed: ~1h 46m, remaining: ~1h 27m) 902/1643 tested (719 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 26m) 904/1643 tested (721 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 26m) 905/1643 tested (722 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 26m) 907/1643 tested (724 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 26m) 908/1643 tested (725 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 46m, remaining: ~1h 26m) 910/1643 tested (727 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 25m) 911/1643 tested (728 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 25m) 913/1643 tested (730 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 25m) 914/1643 tested (731 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 25m) 916/1643 tested (733 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 25m) 917/1643 tested (734 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 47m, remaining: ~1h 25m) 918/1643 tested (735 survived, 71 timed out)
Mutation testing 55% (elapsed: ~1h 48m, remaining: ~1h 24m) 920/1643 tested (737 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 24m) 921/1643 tested (738 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 24m) 923/1643 tested (740 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 24m) 924/1643 tested (741 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 24m) 926/1643 tested (743 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 48m, remaining: ~1h 24m) 927/1643 tested (744 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 23m) 929/1643 tested (746 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 23m) 930/1643 tested (747 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 23m) 932/1643 tested (749 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 23m) 933/1643 tested (750 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 23m) 935/1643 tested (752 survived, 71 timed out)
Mutation testing 56% (elapsed: ~1h 49m, remaining: ~1h 22m) 936/1643 tested (753 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 22m) 938/1643 tested (755 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 22m) 939/1643 tested (756 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 22m) 941/1643 tested (758 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 22m) 942/1643 tested (759 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 21m) 944/1643 tested (761 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 50m, remaining: ~1h 21m) 945/1643 tested (762 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 21m) 947/1643 tested (764 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 21m) 948/1643 tested (765 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 21m) 950/1643 tested (767 survived, 71 timed out)
Mutation testing 57% (elapsed: ~1h 51m, remaining: ~1h 21m) 951/1643 tested (768 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 20m) 953/1643 tested (770 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 51m, remaining: ~1h 20m) 954/1643 tested (771 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 20m) 956/1643 tested (773 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 20m) 957/1643 tested (774 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 20m) 958/1643 tested (775 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 20m) 960/1643 tested (777 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 19m) 961/1643 tested (778 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 52m, remaining: ~1h 19m) 963/1643 tested (780 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 19m) 964/1643 tested (781 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 19m) 966/1643 tested (783 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 19m) 967/1643 tested (784 survived, 71 timed out)
Mutation testing 58% (elapsed: ~1h 53m, remaining: ~1h 18m) 969/1643 tested (786 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 18m) 970/1643 tested (787 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 53m, remaining: ~1h 18m) 972/1643 tested (789 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 18m) 973/1643 tested (790 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 18m) 975/1643 tested (792 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 18m) 976/1643 tested (793 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 17m) 978/1643 tested (795 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 17m) 979/1643 tested (796 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 54m, remaining: ~1h 17m) 981/1643 tested (798 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 17m) 982/1643 tested (799 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 17m) 984/1643 tested (801 survived, 71 timed out)
Mutation testing 59% (elapsed: ~1h 55m, remaining: ~1h 17m) 985/1643 tested (802 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 16m) 987/1643 tested (804 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 16m) 988/1643 tested (805 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 55m, remaining: ~1h 16m) 990/1643 tested (807 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 16m) 991/1643 tested (808 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 16m) 993/1643 tested (810 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 15m) 994/1643 tested (811 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 15m) 995/1643 tested (812 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 15m) 997/1643 tested (814 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 56m, remaining: ~1h 15m) 998/1643 tested (815 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 15m) 1000/1643 tested (817 survived, 71 timed out)
Mutation testing 60% (elapsed: ~1h 57m, remaining: ~1h 15m) 1001/1643 tested (818 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 14m) 1003/1643 tested (820 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 14m) 1004/1643 tested (821 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 14m) 1006/1643 tested (823 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 57m, remaining: ~1h 14m) 1007/1643 tested (824 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 14m) 1009/1643 tested (826 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 14m) 1010/1643 tested (827 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 13m) 1012/1643 tested (829 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 13m) 1013/1643 tested (830 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 13m) 1015/1643 tested (832 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 58m, remaining: ~1h 13m) 1016/1643 tested (833 survived, 71 timed out)
Mutation testing 61% (elapsed: ~1h 59m, remaining: ~1h 13m) 1018/1643 tested (835 survived, 71 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 12m) 1019/1643 tested (836 survived, 71 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 12m) 1021/1643 tested (838 survived, 71 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 12m) 1022/1643 tested (839 survived, 71 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 12m) 1024/1643 tested (841 survived, 71 timed out)
Mutation testing 62% (elapsed: ~1h 59m, remaining: ~1h 12m) 1025/1643 tested (842 survived, 71 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 11m) 1027/1643 tested (844 survived, 71 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 11m) 1028/1643 tested (845 survived, 71 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 11m) 1030/1643 tested (847 survived, 71 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 11m) 1031/1643 tested (848 survived, 71 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 11m) 1032/1643 tested (849 survived, 71 timed out)
Mutation testing 62% (elapsed: ~2h 0m, remaining: ~1h 11m) 1034/1643 tested (851 survived, 71 timed out)
Mutation testing 62% (elapsed: ~2h 1m, remaining: ~1h 11m) 1035/1643 tested (852 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 10m) 1037/1643 tested (854 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 10m) 1038/1643 tested (855 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 10m) 1040/1643 tested (857 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 10m) 1041/1643 tested (858 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 1m, remaining: ~1h 10m) 1043/1643 tested (860 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 9m) 1044/1643 tested (861 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 9m) 1046/1643 tested (863 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 9m) 1047/1643 tested (864 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 9m) 1049/1643 tested (866 survived, 71 timed out)
Mutation testing 63% (elapsed: ~2h 2m, remaining: ~1h 9m) 1050/1643 tested (867 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 2m, remaining: ~1h 9m) 1052/1643 tested (869 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 8m) 1053/1643 tested (870 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 8m) 1055/1643 tested (872 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 8m) 1056/1643 tested (873 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 8m) 1058/1643 tested (875 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 8m) 1059/1643 tested (876 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 3m, remaining: ~1h 7m) 1061/1643 tested (878 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 7m) 1062/1643 tested (879 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 7m) 1064/1643 tested (881 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 7m) 1065/1643 tested (882 survived, 71 timed out)
Mutation testing 64% (elapsed: ~2h 4m, remaining: ~1h 7m) 1067/1643 tested (884 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 4m, remaining: ~1h 7m) 1068/1643 tested (885 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 4m, remaining: ~1h 7m) 1069/1643 tested (886 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 6m) 1071/1643 tested (888 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 6m) 1072/1643 tested (889 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 6m) 1074/1643 tested (891 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 6m) 1075/1643 tested (892 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 6m) 1077/1643 tested (894 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 5m, remaining: ~1h 5m) 1078/1643 tested (895 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 5m) 1080/1643 tested (897 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 5m) 1081/1643 tested (898 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 5m) 1083/1643 tested (900 survived, 71 timed out)
Mutation testing 65% (elapsed: ~2h 6m, remaining: ~1h 5m) 1084/1643 tested (901 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 6m, remaining: ~1h 4m) 1086/1643 tested (903 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 6m, remaining: ~1h 4m) 1087/1643 tested (904 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 4m) 1089/1643 tested (906 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 4m) 1090/1643 tested (907 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 4m) 1092/1643 tested (909 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 4m) 1093/1643 tested (910 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 3m) 1095/1643 tested (912 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 7m, remaining: ~1h 3m) 1096/1643 tested (913 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 3m) 1098/1643 tested (915 survived, 71 timed out)
Mutation testing 66% (elapsed: ~2h 8m, remaining: ~1h 3m) 1099/1643 tested (916 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 3m) 1101/1643 tested (918 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 3m) 1102/1643 tested (919 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 2m) 1104/1643 tested (921 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 8m, remaining: ~1h 2m) 1105/1643 tested (922 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 2m) 1106/1643 tested (923 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 2m) 1108/1643 tested (925 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 2m) 1109/1643 tested (926 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 2m) 1111/1643 tested (928 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 1m) 1112/1643 tested (929 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 9m, remaining: ~1h 1m) 1114/1643 tested (931 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 1m) 1115/1643 tested (932 survived, 71 timed out)
Mutation testing 67% (elapsed: ~2h 10m, remaining: ~1h 1m) 1117/1643 tested (934 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~1h 1m) 1118/1643 tested (935 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~1h 0m) 1120/1643 tested (937 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~1h 0m) 1121/1643 tested (938 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 10m, remaining: ~1h 0m) 1123/1643 tested (940 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~1h 0m) 1124/1643 tested (941 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~1h 0m) 1126/1643 tested (943 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~1h 0m) 1127/1643 tested (944 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~59m) 1129/1643 tested (946 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~59m) 1130/1643 tested (947 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 11m, remaining: ~59m) 1132/1643 tested (949 survived, 71 timed out)
Mutation testing 68% (elapsed: ~2h 12m, remaining: ~59m) 1133/1643 tested (950 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~59m) 1135/1643 tested (952 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~59m) 1136/1643 tested (953 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~58m) 1138/1643 tested (955 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~58m) 1139/1643 tested (956 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 12m, remaining: ~58m) 1141/1643 tested (958 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~58m) 1142/1643 tested (959 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~58m) 1144/1643 tested (961 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~57m) 1145/1643 tested (962 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~57m) 1146/1643 tested (963 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~57m) 1148/1643 tested (965 survived, 71 timed out)
Mutation testing 69% (elapsed: ~2h 13m, remaining: ~57m) 1149/1643 tested (966 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~57m) 1151/1643 tested (968 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~57m) 1152/1643 tested (969 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~56m) 1154/1643 tested (971 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~56m) 1155/1643 tested (972 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~56m) 1157/1643 tested (974 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 14m, remaining: ~56m) 1158/1643 tested (975 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~56m) 1160/1643 tested (977 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~56m) 1161/1643 tested (978 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~55m) 1163/1643 tested (980 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~55m) 1164/1643 tested (981 survived, 71 timed out)
Mutation testing 70% (elapsed: ~2h 15m, remaining: ~55m) 1166/1643 tested (983 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 15m, remaining: ~55m) 1167/1643 tested (984 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~55m) 1169/1643 tested (986 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~55m) 1170/1643 tested (987 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~54m) 1172/1643 tested (989 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~54m) 1173/1643 tested (990 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~54m) 1175/1643 tested (992 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 16m, remaining: ~54m) 1176/1643 tested (993 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 17m, remaining: ~54m) 1178/1643 tested (995 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 17m, remaining: ~53m) 1179/1643 tested (996 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 17m, remaining: ~53m) 1181/1643 tested (998 survived, 71 timed out)
Mutation testing 71% (elapsed: ~2h 17m, remaining: ~53m) 1182/1643 tested (999 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 17m, remaining: ~53m) 1184/1643 tested (1001 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 17m, remaining: ~53m) 1185/1643 tested (1002 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~53m) 1186/1643 tested (1003 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~52m) 1188/1643 tested (1005 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~52m) 1189/1643 tested (1006 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~52m) 1191/1643 tested (1008 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~52m) 1192/1643 tested (1009 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 18m, remaining: ~52m) 1194/1643 tested (1011 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 19m, remaining: ~52m) 1195/1643 tested (1012 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 19m, remaining: ~51m) 1197/1643 tested (1014 survived, 71 timed out)
Mutation testing 72% (elapsed: ~2h 19m, remaining: ~51m) 1198/1643 tested (1015 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 19m, remaining: ~51m) 1200/1643 tested (1017 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 19m, remaining: ~51m) 1201/1643 tested (1018 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 19m, remaining: ~51m) 1203/1643 tested (1020 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~51m) 1204/1643 tested (1021 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~50m) 1206/1643 tested (1023 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~50m) 1207/1643 tested (1024 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~50m) 1209/1643 tested (1026 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~50m) 1210/1643 tested (1027 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 20m, remaining: ~50m) 1212/1643 tested (1029 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 21m, remaining: ~49m) 1213/1643 tested (1030 survived, 71 timed out)
Mutation testing 73% (elapsed: ~2h 21m, remaining: ~49m) 1215/1643 tested (1032 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~49m) 1216/1643 tested (1033 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~49m) 1218/1643 tested (1035 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~49m) 1219/1643 tested (1036 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 21m, remaining: ~49m) 1221/1643 tested (1038 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~48m) 1222/1643 tested (1039 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~48m) 1224/1643 tested (1041 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~48m) 1225/1643 tested (1042 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~48m) 1226/1643 tested (1043 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~48m) 1228/1643 tested (1045 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 22m, remaining: ~48m) 1229/1643 tested (1046 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~47m) 1231/1643 tested (1048 survived, 71 timed out)
Mutation testing 74% (elapsed: ~2h 23m, remaining: ~47m) 1232/1643 tested (1049 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~47m) 1234/1643 tested (1051 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~47m) 1235/1643 tested (1052 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~47m) 1237/1643 tested (1054 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 23m, remaining: ~47m) 1238/1643 tested (1055 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~46m) 1240/1643 tested (1057 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~46m) 1241/1643 tested (1058 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~46m) 1243/1643 tested (1060 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~46m) 1244/1643 tested (1061 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~46m) 1246/1643 tested (1063 survived, 71 timed out)
Mutation testing 75% (elapsed: ~2h 24m, remaining: ~45m) 1247/1643 tested (1064 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~45m) 1249/1643 tested (1066 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~45m) 1250/1643 tested (1067 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~45m) 1252/1643 tested (1069 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~45m) 1253/1643 tested (1070 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~45m) 1255/1643 tested (1072 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 25m, remaining: ~44m) 1256/1643 tested (1073 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 26m, remaining: ~44m) 1258/1643 tested (1075 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 26m, remaining: ~44m) 1259/1643 tested (1076 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 26m, remaining: ~44m) 1261/1643 tested (1078 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 26m, remaining: ~44m) 1262/1643 tested (1079 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 26m, remaining: ~43m) 1264/1643 tested (1081 survived, 71 timed out)
Mutation testing 76% (elapsed: ~2h 26m, remaining: ~43m) 1265/1643 tested (1082 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~43m) 1266/1643 tested (1083 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~43m) 1268/1643 tested (1085 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~43m) 1269/1643 tested (1086 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~43m) 1271/1643 tested (1088 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~43m) 1272/1643 tested (1089 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 27m, remaining: ~42m) 1274/1643 tested (1091 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 28m, remaining: ~42m) 1275/1643 tested (1092 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 28m, remaining: ~42m) 1277/1643 tested (1094 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 28m, remaining: ~42m) 1278/1643 tested (1095 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 28m, remaining: ~42m) 1280/1643 tested (1097 survived, 71 timed out)
Mutation testing 77% (elapsed: ~2h 28m, remaining: ~42m) 1281/1643 tested (1098 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 28m, remaining: ~41m) 1283/1643 tested (1100 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~41m) 1284/1643 tested (1101 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~41m) 1286/1643 tested (1103 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~41m) 1287/1643 tested (1104 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~41m) 1289/1643 tested (1106 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~40m) 1290/1643 tested (1107 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 29m, remaining: ~40m) 1292/1643 tested (1109 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 30m, remaining: ~40m) 1293/1643 tested (1110 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 30m, remaining: ~40m) 1295/1643 tested (1112 survived, 71 timed out)
Mutation testing 78% (elapsed: ~2h 30m, remaining: ~40m) 1296/1643 tested (1113 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 30m, remaining: ~40m) 1298/1643 tested (1115 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 30m, remaining: ~39m) 1299/1643 tested (1116 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 30m, remaining: ~39m) 1301/1643 tested (1118 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~39m) 1302/1643 tested (1119 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~39m) 1304/1643 tested (1121 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~39m) 1305/1643 tested (1122 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~39m) 1306/1643 tested (1123 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~38m) 1308/1643 tested (1125 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 31m, remaining: ~38m) 1309/1643 tested (1126 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 32m, remaining: ~38m) 1311/1643 tested (1128 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 32m, remaining: ~38m) 1312/1643 tested (1129 survived, 71 timed out)
Mutation testing 79% (elapsed: ~2h 32m, remaining: ~38m) 1314/1643 tested (1131 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 32m, remaining: ~38m) 1315/1643 tested (1132 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 32m, remaining: ~37m) 1317/1643 tested (1134 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 32m, remaining: ~37m) 1318/1643 tested (1135 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~37m) 1320/1643 tested (1137 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~37m) 1321/1643 tested (1138 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~37m) 1323/1643 tested (1140 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~36m) 1324/1643 tested (1141 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~36m) 1326/1643 tested (1143 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 33m, remaining: ~36m) 1327/1643 tested (1144 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 34m, remaining: ~36m) 1329/1643 tested (1146 survived, 71 timed out)
Mutation testing 80% (elapsed: ~2h 34m, remaining: ~36m) 1330/1643 tested (1147 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~36m) 1332/1643 tested (1149 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~35m) 1333/1643 tested (1150 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~35m) 1335/1643 tested (1152 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 34m, remaining: ~35m) 1336/1643 tested (1153 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~35m) 1338/1643 tested (1155 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~35m) 1339/1643 tested (1156 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~34m) 1341/1643 tested (1158 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~34m) 1342/1643 tested (1159 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~34m) 1344/1643 tested (1161 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 35m, remaining: ~34m) 1345/1643 tested (1162 survived, 71 timed out)
Mutation testing 81% (elapsed: ~2h 36m, remaining: ~34m) 1346/1643 tested (1163 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~34m) 1348/1643 tested (1165 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~34m) 1349/1643 tested (1166 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~33m) 1351/1643 tested (1168 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~33m) 1352/1643 tested (1169 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 36m, remaining: ~33m) 1354/1643 tested (1171 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 37m, remaining: ~33m) 1355/1643 tested (1172 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 37m, remaining: ~33m) 1357/1643 tested (1174 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 37m, remaining: ~33m) 1358/1643 tested (1175 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 37m, remaining: ~32m) 1360/1643 tested (1177 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 37m, remaining: ~32m) 1361/1643 tested (1178 survived, 71 timed out)
Mutation testing 82% (elapsed: ~2h 37m, remaining: ~32m) 1363/1643 tested (1180 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~32m) 1364/1643 tested (1181 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~32m) 1366/1643 tested (1183 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~31m) 1367/1643 tested (1184 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~31m) 1369/1643 tested (1186 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~31m) 1370/1643 tested (1187 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 38m, remaining: ~31m) 1372/1643 tested (1189 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 39m, remaining: ~31m) 1373/1643 tested (1190 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 39m, remaining: ~31m) 1375/1643 tested (1192 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 39m, remaining: ~30m) 1376/1643 tested (1193 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 39m, remaining: ~30m) 1378/1643 tested (1195 survived, 71 timed out)
Mutation testing 83% (elapsed: ~2h 39m, remaining: ~30m) 1379/1643 tested (1196 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 39m, remaining: ~30m) 1381/1643 tested (1198 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~30m) 1382/1643 tested (1199 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~30m) 1383/1643 tested (1200 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~29m) 1385/1643 tested (1202 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~29m) 1386/1643 tested (1203 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~29m) 1388/1643 tested (1205 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 40m, remaining: ~29m) 1389/1643 tested (1206 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 41m, remaining: ~29m) 1391/1643 tested (1208 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 41m, remaining: ~29m) 1392/1643 tested (1209 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 41m, remaining: ~28m) 1394/1643 tested (1211 survived, 71 timed out)
Mutation testing 84% (elapsed: ~2h 41m, remaining: ~28m) 1395/1643 tested (1212 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 41m, remaining: ~28m) 1397/1643 tested (1214 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 41m, remaining: ~28m) 1398/1643 tested (1215 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~28m) 1400/1643 tested (1217 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~28m) 1401/1643 tested (1218 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~27m) 1403/1643 tested (1220 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~27m) 1404/1643 tested (1221 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~27m) 1406/1643 tested (1223 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 42m, remaining: ~27m) 1407/1643 tested (1224 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 43m, remaining: ~27m) 1409/1643 tested (1226 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 43m, remaining: ~26m) 1410/1643 tested (1227 survived, 71 timed out)
Mutation testing 85% (elapsed: ~2h 43m, remaining: ~26m) 1412/1643 tested (1229 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 43m, remaining: ~26m) 1413/1643 tested (1230 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 43m, remaining: ~26m) 1415/1643 tested (1232 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 43m, remaining: ~26m) 1416/1643 tested (1233 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~26m) 1418/1643 tested (1235 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~25m) 1419/1643 tested (1236 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~25m) 1421/1643 tested (1238 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~25m) 1422/1643 tested (1239 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~25m) 1423/1643 tested (1240 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 44m, remaining: ~25m) 1425/1643 tested (1242 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 45m, remaining: ~25m) 1426/1643 tested (1243 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 45m, remaining: ~24m) 1428/1643 tested (1245 survived, 71 timed out)
Mutation testing 86% (elapsed: ~2h 45m, remaining: ~24m) 1429/1643 tested (1246 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 45m, remaining: ~24m) 1431/1643 tested (1248 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 45m, remaining: ~24m) 1432/1643 tested (1249 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 45m, remaining: ~24m) 1434/1643 tested (1251 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~24m) 1435/1643 tested (1252 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~23m) 1437/1643 tested (1254 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~23m) 1438/1643 tested (1255 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~23m) 1440/1643 tested (1257 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~23m) 1441/1643 tested (1258 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 46m, remaining: ~23m) 1443/1643 tested (1260 survived, 71 timed out)
Mutation testing 87% (elapsed: ~2h 47m, remaining: ~23m) 1444/1643 tested (1261 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~22m) 1446/1643 tested (1263 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~22m) 1447/1643 tested (1264 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~22m) 1449/1643 tested (1266 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~22m) 1450/1643 tested (1267 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 47m, remaining: ~22m) 1452/1643 tested (1269 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~21m) 1453/1643 tested (1270 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~21m) 1455/1643 tested (1272 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~21m) 1456/1643 tested (1273 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~21m) 1458/1643 tested (1275 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~21m) 1459/1643 tested (1276 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 48m, remaining: ~21m) 1461/1643 tested (1278 survived, 71 timed out)
Mutation testing 88% (elapsed: ~2h 49m, remaining: ~20m) 1462/1643 tested (1279 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~20m) 1464/1643 tested (1281 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~20m) 1465/1643 tested (1282 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~20m) 1466/1643 tested (1283 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~20m) 1468/1643 tested (1285 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 49m, remaining: ~20m) 1469/1643 tested (1286 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 50m, remaining: ~19m) 1471/1643 tested (1288 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 50m, remaining: ~19m) 1472/1643 tested (1289 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 50m, remaining: ~19m) 1474/1643 tested (1291 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 50m, remaining: ~19m) 1475/1643 tested (1292 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 50m, remaining: ~19m) 1477/1643 tested (1294 survived, 71 timed out)
Mutation testing 89% (elapsed: ~2h 50m, remaining: ~19m) 1478/1643 tested (1295 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~18m) 1480/1643 tested (1297 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~18m) 1481/1643 tested (1298 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~18m) 1483/1643 tested (1300 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~18m) 1484/1643 tested (1301 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~18m) 1486/1643 tested (1303 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 51m, remaining: ~18m) 1487/1643 tested (1304 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 52m, remaining: ~17m) 1489/1643 tested (1306 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 52m, remaining: ~17m) 1490/1643 tested (1307 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 52m, remaining: ~17m) 1492/1643 tested (1309 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 52m, remaining: ~17m) 1493/1643 tested (1310 survived, 71 timed out)
Mutation testing 90% (elapsed: ~2h 52m, remaining: ~17m) 1495/1643 tested (1312 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 52m, remaining: ~16m) 1496/1643 tested (1313 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~16m) 1498/1643 tested (1315 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~16m) 1499/1643 tested (1316 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~16m) 1501/1643 tested (1318 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~16m) 1502/1643 tested (1319 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~16m) 1503/1643 tested (1320 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 53m, remaining: ~15m) 1505/1643 tested (1322 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 54m, remaining: ~15m) 1506/1643 tested (1323 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 54m, remaining: ~15m) 1508/1643 tested (1325 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 54m, remaining: ~15m) 1509/1643 tested (1326 survived, 71 timed out)
Mutation testing 91% (elapsed: ~2h 54m, remaining: ~15m) 1511/1643 tested (1328 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 54m, remaining: ~15m) 1512/1643 tested (1329 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 54m, remaining: ~14m) 1514/1643 tested (1331 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~14m) 1515/1643 tested (1332 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~14m) 1517/1643 tested (1334 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~14m) 1518/1643 tested (1335 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~14m) 1520/1643 tested (1337 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~14m) 1521/1643 tested (1338 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 55m, remaining: ~13m) 1523/1643 tested (1340 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 56m, remaining: ~13m) 1524/1643 tested (1341 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 56m, remaining: ~13m) 1526/1643 tested (1343 survived, 71 timed out)
Mutation testing 92% (elapsed: ~2h 56m, remaining: ~13m) 1527/1643 tested (1344 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 56m, remaining: ~13m) 1529/1643 tested (1346 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 56m, remaining: ~13m) 1530/1643 tested (1347 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 56m, remaining: ~12m) 1532/1643 tested (1349 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~12m) 1533/1643 tested (1350 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~12m) 1535/1643 tested (1352 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~12m) 1536/1643 tested (1353 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~12m) 1538/1643 tested (1355 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~12m) 1539/1643 tested (1356 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 57m, remaining: ~11m) 1541/1643 tested (1358 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 58m, remaining: ~11m) 1542/1643 tested (1359 survived, 71 timed out)
Mutation testing 93% (elapsed: ~2h 58m, remaining: ~11m) 1543/1643 tested (1360 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~11m) 1545/1643 tested (1362 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~11m) 1546/1643 tested (1363 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~10m) 1548/1643 tested (1365 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 58m, remaining: ~10m) 1549/1643 tested (1366 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~10m) 1551/1643 tested (1368 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~10m) 1552/1643 tested (1369 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~10m) 1554/1643 tested (1371 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~10m) 1555/1643 tested (1372 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~9m) 1557/1643 tested (1374 survived, 71 timed out)
Mutation testing 94% (elapsed: ~2h 59m, remaining: ~9m) 1558/1643 tested (1375 survived, 71 timed out)
Mutation testing 94% (elapsed: ~3h 0m, remaining: ~9m) 1560/1643 tested (1377 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~9m) 1561/1643 tested (1378 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~9m) 1563/1643 tested (1380 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~9m) 1564/1643 tested (1381 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~8m) 1566/1643 tested (1383 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 0m, remaining: ~8m) 1567/1643 tested (1384 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 1m, remaining: ~8m) 1569/1643 tested (1386 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 1m, remaining: ~8m) 1570/1643 tested (1387 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 1m, remaining: ~8m) 1572/1643 tested (1389 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 1m, remaining: ~8m) 1573/1643 tested (1390 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 1m, remaining: ~7m) 1575/1643 tested (1392 survived, 71 timed out)
Mutation testing 95% (elapsed: ~3h 1m, remaining: ~7m) 1576/1643 tested (1393 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~7m) 1578/1643 tested (1395 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~7m) 1579/1643 tested (1396 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~7m) 1581/1643 tested (1398 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~7m) 1582/1643 tested (1399 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~6m) 1583/1643 tested (1400 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 2m, remaining: ~6m) 1585/1643 tested (1402 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 3m, remaining: ~6m) 1586/1643 tested (1403 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 3m, remaining: ~6m) 1588/1643 tested (1405 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 3m, remaining: ~6m) 1589/1643 tested (1406 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 3m, remaining: ~5m) 1591/1643 tested (1408 survived, 71 timed out)
Mutation testing 96% (elapsed: ~3h 3m, remaining: ~5m) 1592/1643 tested (1409 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 3m, remaining: ~5m) 1594/1643 tested (1411 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~5m) 1595/1643 tested (1412 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~5m) 1597/1643 tested (1414 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~5m) 1598/1643 tested (1415 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~4m) 1600/1643 tested (1417 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~4m) 1601/1643 tested (1418 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 4m, remaining: ~4m) 1603/1643 tested (1420 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 5m, remaining: ~4m) 1604/1643 tested (1421 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 5m, remaining: ~4m) 1606/1643 tested (1423 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 5m, remaining: ~4m) 1607/1643 tested (1424 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 5m, remaining: ~3m) 1609/1643 tested (1426 survived, 71 timed out)
Mutation testing 97% (elapsed: ~3h 5m, remaining: ~3m) 1610/1643 tested (1427 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 5m, remaining: ~3m) 1612/1643 tested (1429 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~3m) 1613/1643 tested (1430 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~3m) 1615/1643 tested (1432 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~3m) 1616/1643 tested (1433 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~2m) 1618/1643 tested (1435 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~2m) 1619/1643 tested (1436 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 6m, remaining: ~2m) 1620/1643 tested (1437 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 7m, remaining: ~2m) 1622/1643 tested (1439 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 7m, remaining: ~2m) 1623/1643 tested (1440 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 7m, remaining: ~2m) 1625/1643 tested (1442 survived, 71 timed out)
Mutation testing 98% (elapsed: ~3h 7m, remaining: ~1m) 1626/1643 tested (1443 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 7m, remaining: ~1m) 1628/1643 tested (1445 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 7m, remaining: ~1m) 1629/1643 tested (1446 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: ~1m) 1631/1643 tested (1448 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: ~1m) 1632/1643 tested (1449 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: ~1m) 1634/1643 tested (1451 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: <1m) 1635/1643 tested (1452 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: <1m) 1637/1643 tested (1454 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 8m, remaining: <1m) 1638/1643 tested (1455 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 9m, remaining: <1m) 1640/1643 tested (1457 survived, 71 timed out)
Mutation testing 99% (elapsed: ~3h 9m, remaining: <1m) 1641/1643 tested (1458 survived, 71 timed out)

All tests
  ✓ All tests (killed 112)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (false) {

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (1 === 0) {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promisf", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", true);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(42, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap({}, definition);

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if ("string") {

[Survived] PrecomputedMutator
q.js:42:16
-       } else if (typeof exports === "object" && typeof module === "object") {
+       } else if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (true) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (1) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (null) {

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           null(definition);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "function") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (1 === 2) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!false()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if ('undefined' === typeof window) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (Object.prototype.toString.call(window) === '[object global]') {

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = noop();

[Survived] PrecomputedMutator
q.js:115:16
-           while (head.next) {
+           while (head.next || null) {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   null();

[Survived] PrecomputedMutator
q.js:125:23
-               runSingle(task, domain);
+               runSingle(() => task(), domain);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (0) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (null) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (typeof window !== "undefined") {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       global.Q.exit();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       null();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(requestAnimationFrame(flush));

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   0(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(Promise.resolve().then(flush), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, '1');

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (undefined) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:166:13
-           if (domain) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               null();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (1 < 2) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (false) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (1 > 0) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "undefined" ? false : true) {

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(function () {
+     return flush();
+   }, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind({}, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   0(flush);

[Survived] PrecomputedMutator
q.js:206:17
-                   setImmediate(flush);
+                   requestAnimationFrame(flush);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(function () {});

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(1);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (false) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (0) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if ('undefined') {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               null(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port2.close(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage('some string');

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(this);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               0 === 1(flush, 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(null);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(function () {/* do nothing */});

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               undefined(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               alert(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(function () {}, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(1 + 1, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush.bind(this), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (this.flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (this.length > 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (array_indexOf(value, this) === 0) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (null);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (0 in this) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 1 > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index * 2 > length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index > length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index == length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index + 1) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = index + 1) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (0 in this) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(null);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback + 1(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, 0, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this.length, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], null);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], 42);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], this);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i !== this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; Math.random()) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; array_indexOf(value, this)) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (i === value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.splice(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback(value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(null, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(self, index, value, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call([]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(5, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(function () {
+     return this;
+   }, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 42, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, this, index, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, 5));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, function () {}));

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in Object.prototype) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in function () {
+     return 42;
+   }) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object.hasOwnProperty(key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Array.prototype.hasOwnProperty.call(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Object.prototype.hasOwnProperty.call(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(this)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(window)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(Math)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Array.isArray(object, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "toString")) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, null)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, 1)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(null);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(42);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           '[object Object]'(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           1(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(null) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString({}) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof globalThis.ReturnValue !== "undefined") {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof someUndefinedVariable !== "undefined") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (promise.stack && typeof error === "object" && error !== null && error.stack && hasStacks

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p ? 1 : 0; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p.source; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p instanceof Error; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; null) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; 1) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p.length) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ < p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null);

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty({});

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   Object.defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty([], "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(function () {}, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, this.__minimumStackCounter__, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, Math.random(), {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, new Date().getTime(), {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: 42,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.source.stackCounter,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift("error.stackTrace");

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(1 / 0);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(Math.random());

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat.join("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(" From previous event:\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join(STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\nAnother event separator:\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(error.stack.toString());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(promise.stack);

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(new Error().stack);

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(null);

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, error.stack.toString(), {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(";\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\n" + String.fromCharCode(0));

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > -1; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i in lines; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i + 1) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; Math.random()) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line.indexOf('node') === -1) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!typeof isInternalFrame !== 'function'(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(isInternalFrame(line + 'x')) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !typeof isNodeFrame !== 'function'(line) && line) {

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push("<PLACEHOLDER>");

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(Math.random());

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(new Error());

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.lastIndexOf("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              1 in stackLine("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec("1: " + stackLine);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt1 && attempt1.length > 1) {

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], value.length(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(value.length)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(object_keys(value)[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(Math.random())];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(Infinity)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(1 / 0)];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(new Date())];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec("[object GlobalError]");

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(/.*@(.+):(\d+)$/g);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec("anonymous function");

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], "0"(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], true(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(1)];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number('PLACEHOLDER')];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = null(stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = [](stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine + '');

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(global.stackLine);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber === 'undefined') {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (!Array.isArray(fileNameAndLineNumber)) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (typeof hasStacks === "undefined") {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks === null) {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\nFrom previous event:\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\n" + STACK_JUMP_SEPARATOR + "\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\nAnother event:\n");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = "PLACEHOLDER".indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("<@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@module.js") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@ line 1") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (typeof fileNameAndLineNumber === 'undefined') {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (true) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (1 < 2) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof window !== "undefined" && typeof window.console === "object" && typeof window.console.warn === "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.constructor.prototype.methodName(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.bind(null, 1), arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, [].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, Object.keys(arguments));

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments.callee);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.prototype.toString.call(value) === '[object Promise]') {

[Survived] PrecomputedMutator
q.js:506:9
-       if (isPromiseAlike(value)) {
+       if (value && isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:507:23
-           return coerce(value);
+           return coerce(value || true);

[Survived] PrecomputedMutator
q.js:507:23
-           return coerce(value);
+           return coerce(value ? value : 42);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create({});

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(null);

[Survived] PrecomputedMutator
q.js:558:34
-       var deferred = object_create(defer.prototype);
+       var deferred = object_create(Object.create(Array.prototype));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:562:32
-           var args = array_slice(arguments);
+           var args = array_slice([...arguments]);

[Survived] PrecomputedMutator
q.js:563:13
-           if (messages) {
+           if (typeof messages !== 'undefined') {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && "someString") { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "then") { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(1);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(null);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(Math.random());

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(deferred, args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if ([]) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(null);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(new Promise(function () {}));

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(Promise.resolve());

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue instanceof Promise) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (false(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (null(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (messages.length(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(Promise.resolve())) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(new Promise(function () {}))) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (this.inspect() === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (typeof resolvedPromise === 'undefined') {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (!this.inspect().state) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && (hasStacks || true)) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.message(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n").length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\r") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.search("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(e.stack.substring(e.stack.indexOf("\n") + 2)) + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (1) {

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(new Q(value));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (this) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(new Promise(resolve => resolve(value)));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(new Value(value)));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(this));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(new Error('Replacement error')));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (null) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if ([]) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   null(progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(0);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener({});

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(null);

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:678:13
-           if (error) {
+           if (Q.resolve()) {

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               self.resolve(error);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(null);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(42);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(new Error('User-defined error'));

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (false) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (true) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments[0] === undefined) {

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve([1]);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(function () {});

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(Array.prototype.slice.call(arguments, 0)));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments.callee.caller(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([1, 2, 3], 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice({
+     value: 'foo'
+   }, 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, arguments.length > 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, Q.resolve(array_slice(arguments))));

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(new Error('Replacement error'));

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (Object.prototype.toString.call(resolver) !== "[object Function]") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== typeof Function) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = {}();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver([deferred.resolve, deferred.reject, deferred.notify][Math.floor(Math.random() * 3)]);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve.bind(null, 'hacked value'));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           [](deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           null(deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve(null), deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, function () {
+     throw new Error('Buggy replacement');
+   }, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(new Error('Buggy Reason'));

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(Q.reject('Buggy Reason'));

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Promise(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return null(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(0).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(null);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([[this, that]]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([null, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x == y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x.valueOf() === y.valueOf()) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (Object.is(x, y)) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > -1; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; Q.resolve(null)) {

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(null).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] || {}).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(Promise.resolve()).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.resolve(null), reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, function () {});

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this['then'](Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(function () {
+     return Q();
+   });

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== undefined) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== null) {

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call([]);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(function () {});

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.apply(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "notAnOp", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, 123, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, promise, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, []);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, {
+     op: 'some_random_op'
+   });

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("Buggy error message"));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject({});

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.reason) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled" || inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "settled") {

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(new Error("New error message"), self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong({}, self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(Q.reject("Rejection message"), self);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(value + 1) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(this.value) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:890:30
-               deferred.resolve(_rejected(exception));
+               deferred.resolve(_rejected.call(null, exception));

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(2 * value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(promise.value);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (() => {}) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (console.log) {

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   console.error(e);

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   null(e);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(new Error());

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(Promise.reject('An error occurred'));

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === false) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.resolve(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(newValue + 1);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(Q(newValue));

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return promise.constructor.prototype.tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Promise.resolve()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(new Promise(function () {})).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.reject(new Error('Buggy!'))).tap(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(() => callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback.bind(this));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(callback || function () {});

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value + 1).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Promise.resolve());

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(Q.reject(new Error('Replacement error')));

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(value + 1);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value + 1).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(this.value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(() => fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(Math.max, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(deferred.resolve, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function () {
+     return rejected.apply(this, arguments);
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, function () {
+     return rejected(exception, this, arguments);
+   }, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {
+     return progressed.apply(this, arguments);
+   });

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed.bind(null));

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, Math.max);

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.catch(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     throw value;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function (value) {
+     return value * 2;
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Promise.resolve()).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(new Promise(() => {})).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.reject(new Error('Bug'))).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {/* empty arrow function */});

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(() => {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Promise.reject(reason);

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.reject(promise).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Promise.resolve()).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.reject('An error')).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(new Error('Replacement error'));

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason.message);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value instanceof Object) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value.constructor.name === 'Promise') {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (typeof value.then === 'undefined') {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (value && value.then(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value === null) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.hasOwnProperty("value")) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return typeof value === 'object' && value !== null && typeof value.then === 'function'(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return value && value.constructor.name === 'Promise'(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return value instanceof Promise || value.constructor.name === 'Deferred'(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(false) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(new Proxy({}, {
+     get: function () {
+       throw new Error('Unauthorized access');
+     }
+   })) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && global.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && object['inspect']().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && Object.prototype.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return {}().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(true) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(null) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(this) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || null.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return false(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return 0(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return null(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(false) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(null) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(this) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && false().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && null().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && {}['state']().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.some(p => p === promise)) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf([], promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.slice(), promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, null) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, {
+     then: function () {}
+   }) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledrejection", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledException", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", {}, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, {});

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, () => {});

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push({});

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(unhandledReasons);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push({});

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack) {

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push("reason stack");

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.unshift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           console.error("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push("<no stack>");

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(null);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (0) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.length, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf({
+     promise: []
+   }, promise);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, 123);

[Survived] PrecomputedMutator
q.js:1098:49
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections, {});

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (unhandledRejections.indexOf(promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (typeof at !== "number") {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([]);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, false);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, null);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (true) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === unhandledRejections.length) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", "some random string", promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[Math.floor(Math.random() * unhandledReasons.length)], promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], Q.reject("another reason"));

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(false, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(null, unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit(unhandledReasons[at], unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", null, promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", {}, promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], {});

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.length--(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledRejections.length, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(0, 1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(Math.floor(Math.random() * unhandledReasons.length));

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(0, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(unhandledReasons.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1118:12
-       return unhandledReasons.slice();
+       return unhandledReasons.concat();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (0) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (untrackRejection.bind(this)) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(null);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection([]);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection({
+     fulfill: function () {}
+   });

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, true);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, {});

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null || name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === null || typeof name === 'undefined') {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(thisp, [args]);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return Reflect.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(5, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(null);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply([]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply({});

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value.apply(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return Function.prototype.apply(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return null(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(global, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(null);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(123);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply([], args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return Object.keys(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(123);

[Survived] PrecomputedMutator
q.js:1204:13
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise['then'](deferred.resolve, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error('Buggy replacement'));

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(this);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return null(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch([], op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(function () {}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, "new_op", args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return null();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(function () {}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(42).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(this).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(function () {
+     throw new Error('Buggy replacement');
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(this, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, function () {});

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(true, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, this);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, global.Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.name === "GeneratorFunction") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.prototype.constructor.name === "GeneratorFunction") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (generator.constructor.prototype.constructor.name === "GeneratorFunction" && typeof generator.return === "function") {

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator.verb(arg);

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator['next'](arg);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](1);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return Promise.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return deferred.reject(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(new Error('Buggy error'));

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (Object.prototype.toString.call(result.value) === "[object Promise]") {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value && result.value.constructor === Promise) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (typeof result.value.then === "function") {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(null);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(1);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value + 1);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result['value'], callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(function () {
+     return result.value;
+   }(), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, function () {}, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback.bind(this), errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback(result.value), errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, function () {});

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, 5);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator.verb(arg);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator["" + verb](arg);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](123);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](function () {});

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.message === "Generator completed") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (true) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof Error) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if ({}(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(new Error('generator error'))) {

[Survived] PrecomputedMutator
q.js:1314:32
-                           return Q(exception.value);
+                           return null(exception.value);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(false);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(new Error('Generator Error'));

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject({});

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when([]);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Promise.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(null, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when([], callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when({}, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, callback.bind(this), errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, function () {
+     callback();
+   }, errback);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = Function.prototype.apply.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(window, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(Math.random(), arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, Array.from(arguments));

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, [...arguments]);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, Object.assign([], arguments));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "then");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(this, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(window, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(function () {
+     return continuer;
+   }, "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "next".toUpperCase());

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, 1);

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "throw", undefined);

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "other_verb");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(function () {}, "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(callback, "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "continue");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "break");

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Promise.resolve(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Math.random(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done([](makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(function* () {})());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(42)());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, null(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(1)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(this);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(globalThis);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return Reflect.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return Function.prototype.apply(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(global, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, []);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, this);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, 42);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch([]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch({
+     op: 1,
+     args: [2, 3]
+   });

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Object.dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return deferred.promise(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(this).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(Promise.resolve()).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(null, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, []);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, {
+     foo: 'bar'
+   });

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.promise(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promise.dispatch(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.promise, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, null, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, {
+     length: 0
+   });

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.when("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return null(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return {}(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q([]).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(123).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch(Symbol("get"), [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch(() => "get", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", null);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", {});

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", function () {/* empty function */});

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", []);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", {
+     key: 'value'
+   });

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("GET", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch(() => "get", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", []);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", null);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", {});

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch([]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("nonexistentMethod");

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch([key, Q(value)]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Object.prototype.dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.get("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(this).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(Q.resolve()).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", {});

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", null);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch([]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(this);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(Math.random());

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("__set__", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(null, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch(this.del, [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", []);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", this);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", null);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch(["remove", key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return null(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return 5(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q([]).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(Promise.resolve()).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch(Q.del, [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch(this.del, [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", []);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", {});

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", null);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch(["remove", key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return deferred.resolve("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return deferred.promise("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(null, [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch({}, [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch(function () {}, [key]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return null(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.when(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(0).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(Promise.resolve()).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", this);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, eval(args)]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [window[name], args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("POST", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch(null, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch(function () {}, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", this);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, 42]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [null, args]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("anotherMethod", [args]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return {}['dispatch'](object).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(true).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(function () {
+     return "I am a buggy function";
+   }).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("POST", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, Array.prototype.slice.call(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([name])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, arguments.callee.caller.arguments(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice([], 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(function () {
+     return 42;
+   }, 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, function () {})]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("POST", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, 123]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("POST", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", []);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([])]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(this)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(function () {})]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, arguments.length)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [1, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("spread", [args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.prototype.dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(42).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(this).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", args);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", null, args);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("spy", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("applay", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch(1234, [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch(this, [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", args);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [this, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [[], args]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Object.prototype.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return {}(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(5).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(() => {}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apPLY", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("applyFn", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch(this.apply, [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Array.prototype.slice.call(arguments))]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, [].slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(Array.prototype.slice.call(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([].slice.call(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.slice(1), 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("spy", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch(["apply", array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apPLY", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("applyFn", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch(this.someNonExistentMethod, [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", []);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", arguments);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", this);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, Array.prototype.slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:44
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, null(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(123)]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(this);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.slice(2));

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice({
+     length: 0
+   }, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(function () {}, 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, args.length > 0 ? args : [null]);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               [](array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               null(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               this(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(null)

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat([1, 2, 3])

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.callee(arguments))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice({
+     0: 1,
+     length: 1
+   }))

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = arguments(arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(this.arguments);

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               [](array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat([])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(this.arguments)

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments[0])

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(arguments.callee(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(null(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(eval(arguments))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(123))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["toString"]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return null(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q({}).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(['key']).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", Object.keys(this));

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", function () {
+     return 42;
+   });

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("nonexistentMethod", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("nonexistentKey", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", Object.keys(this));

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", function () {
+     return 42;
+   });

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   snapshot.state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && (snapshot = promise).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   isPromise(promise) && snapshot.state === "completed"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   typeof promise === 'object'(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise instanceof Object(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   true(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(Promise.resolve()) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(null) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(function () {}) &&

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice());

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify(null);

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     progress: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify(this);

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (false) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (Object.prototype.toString.call(promises) === '[object Array]') {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.constructor.name === 'Array') {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (Array.isArray(promises)) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Promise.resolve();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           Promise.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           this(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           Q.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(null, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(Promise.resolve(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(this, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, function () {}, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, this, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, function () {}, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, this, onProgress);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promises[index]);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   console.error(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(new Error("This is a buggy error"));

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any([]);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Q.resolve());

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(function allResolvedBad(promises) {
+     return Q(promises).allSettled();
+   }, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, function allResolved(promises) {
+     return Q(promises).all();
+   }, "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, function allResolved(promises) {
+     return Q(promises).all().then(function (results) {
+       return Q.resolve(results.map(function (result) {
+         return {
+           state: 'fulfilled',
+           value: result
+         };
+       }));
+     });
+   }, "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Array);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.when);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.all);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.filter(x => x), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat(), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Promise.resolve());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject(new Error('Placeholder error')));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(new Promise(resolve => resolve(promise)));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(Promise.resolve(), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(function () {}, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Promise.resolve(), noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, function () {
+     throw new Error('Buggy!');
+   }, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     throw new Error('Buggy replacement');
+   });

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, null);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return Q.all(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return Promise.resolve(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved([]);

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q([]).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises || []).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(Q([])).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promises[index]);

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(Q.resolve(promise));

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.always();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(null, null);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return Promise.resolve(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return Math.random(regardless, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return {};
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return Q.resolve();
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(function regardless() {
+     return Q.reject(new Error('Artificial rejection'));
+   }, regardless);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(Promise.resolve());

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(true).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(Q.reject("An error occurred")).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(function () {
+     throw new Error('Rejected!');
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(this, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function () {
+     throw rejected;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, Q.reject(rejected));

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function () {
+     return Q.reject(rejected);
+   });

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(function () {});

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(this);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(42);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.catch(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(42, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(function () {
+     return 42;
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, function () {
+     return Promise.resolve();
+   });

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, function () {
+     throw new Error('New error');
+   });

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(true, true, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(this, this, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 1, progressed);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, 42);

[Survived] PrecomputedMutator
q.js:1752:43
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, void 0, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, deferred.resolve, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function () {});

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, "string");

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(this)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Promise.resolve())["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](function () {
+     return callback;
+   });

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.bind(this));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback === null || typeof callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || typeof callback.call !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback || callback.constructor.name !== "Function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Promise(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(function () {
+     return callback;
+   });

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.bind(this));

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback());

[Survived] PrecomputedMutator
q.js:1782:16
-           return callback.fcall().then(function () {
+           return callback().then(function () {

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return callback.apply().then(function () {

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(true);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(function () {});

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.resolve(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(Promise.resolve()).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(function () {
+     return "I'm not a promise";
+   }).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(Promise.resolve(fulfilled), rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(null, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, Q.reject(new Error('Rejected explicitly')), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, null, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, function () {
+     return true;
+   }, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function (value) {
+     return value;
+   });

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong({}, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(new Error(), promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, this);

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (function () {
+     throw new Error('Handled error');
+   }) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (null) {

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(new Error("Timed out after " + (ms || 0) + " ms"));

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror({});

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.fcall(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(function () {}, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(42, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, true, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, {}, progress) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(function () {
+     throw new Error("Unhandled error");
+   });

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(Q.onerror);

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(function () {
+     throw new Error("Unhandled error");
+   }.bind(this));

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(42, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(function () {
+     return true;
+   }, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "error");

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(this.ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(Math.random() * 1000, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Timed out after " + (ms - 10) + " ms"));

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, {});

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, function () {
+     throw new Error("An error occurred");
+   });

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (true) {

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error("Timed out after " + (ms - 10) + " ms"));

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject({});

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(function () {
+     throw new Error("An error occurred");
+   });

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           deferred.reject(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(deferred);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(new Error('Replaced value'));

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(this);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           deferred.resolve(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(deferred);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.promise(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(new Error("An error occurred"));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (typeof timeout === "undefined") {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === Q.timeout.NONE) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(true).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q([]).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(2 * timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return callback.nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback.bind(this);
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback.call(null);
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1904:20
-       var deferred = defer();
+       var deferred = {}();

[Survived] PrecomputedMutator
q.js:1905:20
-       var nodeArgs = array_slice(args);
+       var nodeArgs = [].slice(args);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     throw new Error("Buggy node resolver");
+   });

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(this).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(Array.prototype.slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, Infinity);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, setInterval);

[Survived] PrecomputedMutator
q.js:1922:12
-       return Q(callback).nfapply(args);
+       return callback.apply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {
+     return callback;
+   }).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback.bind(null)).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(callback || function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(123);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = Array.prototype.slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(this.arguments);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(this).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === 'function') {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback && typeof callback === 'function') {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Array.prototype.slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([].slice.call(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Object.keys(arguments), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(Function.prototype.bind.apply(arguments.slice, [null, 1, 2]), 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, Q.denodeify.length - 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, function () {
+     return callback.apply(thisp, arguments);
+   });

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.unshift(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Array.prototype.slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Function.prototype.apply.call([], arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([1, 2, 3](arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null(arguments));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           deferred.promise(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           deferred.reject(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           callback.apply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.thenThrow(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           this.all(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback || function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(function () {});

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = [].slice(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = Math.floor(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice([].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(Object.keys(arguments).map(function (key) {
+     return arguments[key];
+   }));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(Function.prototype.apply.call(Array.prototype.slice, arguments, 0));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       this.constructor(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       null(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(window);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(function () {
+     return this;
+   }());

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(true, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(defer(), args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, [...args]);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Function.prototype.apply.call(arguments, [1]));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].concat.apply([], arguments));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = [].slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice([].slice.call(arguments), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Object.keys(arguments)[0], 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(Reflect.apply(Function.prototype.call, arguments, [].slice.call(arguments, 1)), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, function () {});

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.splice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat([].concat.apply([], arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(null(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(deferred.resolve));

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = {}();

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(function () {
+     throw new Error('Buggy node resolver');
+   });

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.promise);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(global, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(0, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, thisp);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, [].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           bound.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Function.prototype.fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback.apply(thisp)).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(() => deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.reject(null));

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = [].slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = null(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = Array.prototype.slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([].slice.call(arguments, 0), 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(Object.keys(arguments)[0], 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(Function.prototype.apply.call(null, this, arguments), 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, Infinity);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(global);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(Q, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(function () {}, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, this);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(false);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(null);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost({
+     length: 10
+   });

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return this(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.npost(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, []);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, 1 === 2);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = [].slice(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = null(args || []);

[Survived] PrecomputedMutator
q.js:1999:20
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = Object.keys(args || []);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([null]);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = Promise.resolve();

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = Q.resolve();

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(this.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("Post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function () {});

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments, 1));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(Function.prototype.apply.call(arguments.slice, arguments, [1]));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = [].slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = null(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = Q.slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([].slice.call(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(this.arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {
+     return true;
+   });

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("called", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q({}).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("Post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(this.dispatch.bind(this, "post"), [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(function () {
+     return this.dispatch("post");
+   }, [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([].slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Array.prototype.slice.call(arguments, 0));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([].concat.apply([], arguments));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = [].slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = null(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = Array.prototype.slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([].slice.call(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(Object.keys(arguments)[1], 1);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       null(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("call", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, deferred.resolve]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", this.constructor.prototype.dispatch.call(this, "post", [name, nodeArgs])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(function () {});

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.promise);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Promise(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return [](object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(this).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(function () {}).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(function () {
+     nodeback && nodeback(null, value);
+   });

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   true(null, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   null(null, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(value, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(1, value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, arguments[0]);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   void nodeback(error);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   null(error);

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.then.get("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(null);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise);

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise.head);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(null);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(ends.promise);

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get(Q.defer().promise);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve({});

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.resolve());

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: null(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: {}(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(new Error("Different error message"))};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(new Error("Can't get value from closed queue")))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.notify(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.promise.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(null);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(Q.reject("Error message"));

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.14 |      112 |        71 |       1460 |        0 |        0 |
 q.js     |   11.29 |      112 |        71 |       1438 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         22 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m05:35:14 (3294) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m05:35:14 (3294) INFO MutationTestExecutor[39m Done in 189 minutes 29 seconds.

real	189m31.390s
user	32m46.554s
sys	5m41.861s
