*** using precomputed mutations ***
[32m13:31:18 (3098) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m13:31:18 (3098) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m13:31:19 (3098) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m13:31:19 (3098) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m13:31:19 (3098) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m13:31:19 (3098) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1868 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "string"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("fakePromise", definition)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("error", new Error("oops"))
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", Q.delay(definition, 1000))
Mutant 6 in q.js: bootstrap replaced with "promise", null
Mutant 7 in q.js: bootstrap replaced with "promise", undefined
Mutant 8 in q.js: bootstrap replaced with "promise", "null"
Mutant 9 in q.js: "promise" replaced with "deferred"
Mutant 10 in q.js: "promise" replaced with "pending"
Mutant 11 in q.js: "promise" replaced with "resolved"
Mutant 12 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports !== "object" && typeof module !== "object"
Mutant 13 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module !== "object"
Mutant 14 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports !== "object" && typeof module === "object"
Mutant 15 in q.js: definition replaced with null
Mutant 16 in q.js: typeof define === "function" && define.amd replaced with undefined
Mutant 17 in q.js: typeof define === "function" && define.amd replaced with void 0
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with NaN
Mutant 19 in q.js: definition replaced with function () {}
Mutant 20 in q.js: definition replaced with "string"
Mutant 21 in q.js: typeof ses !== "undefined" replaced with !(typeof ses === "undefined")
Mutant 22 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "object"
Mutant 23 in q.js: ses.ok replaced with "hello, world!"
Mutant 24 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" && typeof self === "undefined"
Mutant 25 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 26 in q.js: captureLine replaced with captureLine = 0
Mutant 27 in q.js: head.next replaced with head.task
Mutant 28 in q.js: head.next replaced with head.task = "task"
Mutant 29 in q.js: domain replaced with domain == "test"
Mutant 30 in q.js: domain replaced with domain === "test"
Mutant 31 in q.js: domain replaced with domain !== "test"
Mutant 32 in q.js: runSingle(task, domain) replaced with runSingle(task, null)
Mutant 33 in q.js: runSingle(task, domain) replaced with runSingle(undefined, domain)
Mutant 34 in q.js: runSingle(task, domain) replaced with runSingle(task, {
  domain: "myDomain"
})
Mutant 35 in q.js: runSingle replaced with runSingleTask
Mutant 36 in q.js: task replaced with "foo"
Mutant 37 in q.js: task replaced with void task
Mutant 38 in q.js: task replaced with task + 1
Mutant 39 in q.js: domain replaced with undefined
Mutant 40 in q.js: domain replaced with null
Mutant 41 in q.js: domain replaced with {}
Mutant 42 in q.js: laterQueue.length replaced with laterQueue.pop()
Mutant 43 in q.js: laterQueue.length replaced with laterQueue.shift()
Mutant 44 in q.js: laterQueue.length replaced with laterQueue.reverse()
Mutant 45 in q.js: laterQueue.pop replaced with laterQueue.length - 1
Mutant 46 in q.js: task replaced with laterQueue.pop()
Mutant 47 in q.js: task replaced with function () {}
Mutant 48 in q.js: isNodeJS replaced with !isNodeJS
Mutant 49 in q.js: isNodeJS replaced with typeof window === "undefined"
Mutant 50 in q.js: isNodeJS replaced with false
Mutant 51 in q.js: domain replaced with domain && domain.exit()
Mutant 52 in q.js: domain replaced with domain || domain.exit()
Mutant 53 in q.js: domain replaced with domain ? domain.exit() : null
Mutant 54 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 55 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush.bind(window, 0))
Mutant 56 in q.js: flush replaced with undefined
Mutant 57 in q.js: flush replaced with null
Mutant 58 in q.js: flush replaced with console.log
Mutant 59 in q.js: 0 replaced with 1
Mutant 60 in q.js: 0 replaced with "hello"
Mutant 61 in q.js: 0 replaced with function () {}
Mutant 62 in q.js: domain replaced with false
Mutant 63 in q.js: domain replaced with undefined
Mutant 64 in q.js: domain replaced with null
Mutant 65 in q.js: domain.enter replaced with domain.exit
Mutant 66 in q.js: domain replaced with !domain
Mutant 67 in q.js: domain replaced with domain.nonexistentProperty
Mutant 68 in q.js: domain replaced with domain + 1
Mutant 69 in q.js: !flushing replaced with flushing
Mutant 70 in q.js: !flushing replaced with !head.next
Mutant 71 in q.js: !flushing replaced with head.next && flushing
Mutant 72 in q.js: flush replaced with x
Mutant 73 in q.js: flush replaced with console.log(flush)
Mutant 74 in q.js: flush replaced with flush.bind(null)
Mutant 75 in q.js: typeof window !== "undefined" replaced with true
Mutant 76 in q.js: typeof window !== "undefined" replaced with false
Mutant 77 in q.js: typeof window !== "undefined" replaced with console.log("This is a placeholder")
Mutant 78 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(this, flush)
Mutant 79 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null, flush)
Mutant 80 in q.js: setImmediate.bind replaced with requestAnimationFrame
Mutant 81 in q.js: window replaced with document
Mutant 82 in q.js: window replaced with parseInt
Mutant 83 in q.js: window replaced with JSON.parse
Mutant 84 in q.js: flush replaced with undefined
Mutant 85 in q.js: flush replaced with null
Mutant 86 in q.js: flush replaced with console.log("Hello, world!")
Mutant 87 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && !(window.MessageChannel && typeof window.MessageChannel === "function")
Mutant 88 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && !window.MessageChannel
Mutant 89 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "undefined" && !window.MessageChannel()
Mutant 90 in q.js: channel.port2.postMessage replaced with 0
Mutant 91 in q.js: channel.port2.postMessage replaced with null
Mutant 92 in q.js: 0 replaced with 1
Mutant 93 in q.js: 0 replaced with "foo"
Mutant 94 in q.js: 0 replaced with null
Mutant 95 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 10)
Mutant 96 in q.js: setTimeout(flush, 0) replaced with setTimeout(timeout, 0)
Mutant 97 in q.js: setTimeout(flush, 0) replaced with setTimeout(requestTick, 0)
Mutant 98 in q.js: setTimeout replaced with setInterval
Mutant 99 in q.js: flush replaced with function buggyFlush() {
  throw new Error(" ocasional " + "error");
}
Mutant 100 in q.js: flush replaced with function buggyFlush() {
  return 1;
}
Mutant 101 in q.js: flush replaced with function buggyFlush() {
  return "buggy-flush";
}
Mutant 102 in q.js: 0 replaced with -0
Mutant 103 in q.js: 0 replaced with 42
Mutant 104 in q.js: 0 replaced with {}
Mutant 105 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush())
Mutant 106 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush + 1)
Mutant 107 in q.js: setTimeout replaced with setInterval
Mutant 108 in q.js: setTimeout replaced with promise.then
Mutant 109 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 110 in q.js: flush replaced with flush + 1
Mutant 111 in q.js: flush replaced with flush()
Mutant 112 in q.js: 0 replaced with 1
Mutant 113 in q.js: 0 replaced with -1
Mutant 114 in q.js: 0 replaced with 1000
Mutant 115 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 116 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 117 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 118 in q.js: task replaced with 0
Mutant 119 in q.js: task replaced with true
Mutant 120 in q.js: task replaced with "task"
Mutant 121 in q.js: !flushing replaced with flushing
Mutant 122 in q.js: !flushing replaced with !laterQueue.length
Mutant 123 in q.js: !flushing replaced with flushing || laterQueue.length > 0
Mutant 124 in q.js: requestTick replaced with undefined
Mutant 125 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 126 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 127 in q.js: call.apply(f, arguments) replaced with call.apply(f, [arguments])
Mutant 128 in q.js: call.apply replaced with call.call
Mutant 129 in q.js: call.apply replaced with apply.call
Mutant 130 in q.js: f replaced with f(null, true)
Mutant 131 in q.js: f replaced with g(f)
Mutant 132 in q.js: f replaced with f.bind(null, true)
Mutant 133 in q.js: arguments replaced with []
Mutant 134 in q.js: arguments replaced with void 0
Mutant 135 in q.js: arguments replaced with null
Mutant 136 in q.js: Array.prototype.slice replaced with Array.prototype.forEach
Mutant 137 in q.js: Array.prototype.slice replaced with Object.prototype.keys
Mutant 138 in q.js: Array.prototype.slice replaced with JSON.stringify
Mutant 139 in q.js: arguments.length === 1 replaced with arguments.length = 0
Mutant 140 in q.js: arguments.length === 1 replaced with arguments.length != 1
Mutant 141 in q.js: arguments.length === 1 replaced with arguments.length <= 0
Mutant 142 in q.js: index in this replaced with index > this.length
Mutant 143 in q.js: index in this replaced with index < 0
Mutant 144 in q.js: index in this replaced with index === this.length
Mutant 145 in q.js: ++index >= length replaced with index >= length
Mutant 146 in q.js: ++index >= length replaced with index > length
Mutant 147 in q.js: ++index >= length replaced with index <= length
Mutant 148 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index <= length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 149 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (index < length - 1; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 150 in q.js: index < length replaced with index <= length
Mutant 151 in q.js: index < length replaced with index > length
Mutant 152 in q.js: index < length replaced with index == length + 1
Mutant 153 in q.js: index++ replaced with index--
Mutant 154 in q.js: index++ replaced with index = 0
Mutant 155 in q.js: index in this replaced with a && index in this
Mutant 156 in q.js: index in this replaced with index in f
Mutant 157 in q.js: callback(basis, this[index], index) replaced with callback(basis)
Mutant 158 in q.js: callback(basis, this[index], index) replaced with callback(index)
Mutant 159 in q.js: callback(basis, this[index], index) replaced with callback(this[index])
Mutant 160 in q.js: callback replaced with this.basis
Mutant 161 in q.js: basis replaced with 'PLACEHOLDER'
Mutant 162 in q.js: basis replaced with false
Mutant 163 in q.js: basis replaced with null
Mutant 164 in q.js: this[index] replaced with this[index] === value
Mutant 165 in q.js: this[index] replaced with this[index] != value
Mutant 166 in q.js: this[index] replaced with this[index] % value === 0
Mutant 167 in q.js: index replaced with array_slice(this, index)
Mutant 168 in q.js: index replaced with array_map(this, function (x) {
  return x[index];
})
Mutant 169 in q.js: index replaced with array_reduce(this, function (acc, x) {
  return acc.concat(x[index]);
}, [])
Mutant 170 in q.js: i < this.length replaced with i <= this.length
Mutant 171 in q.js: i < this.length replaced with i > this.length
Mutant 172 in q.js: i < this.length replaced with this[i]
Mutant 173 in q.js: i++ replaced with i--
Mutant 174 in q.js: i++ replaced with i += 2
Mutant 175 in q.js: i++ replaced with i -= 2
Mutant 176 in q.js: this[i] === value replaced with this[i] < value
Mutant 177 in q.js: this[i] === value replaced with this[i] > value
Mutant 178 in q.js: this[i] === value replaced with i < value
Mutant 179 in q.js: collect.push replaced with collect.unshift
Mutant 180 in q.js: collect.push replaced with collect[0] = value
Mutant 181 in q.js: callback.call(thisp, value, index, self) replaced with thisp.call(callback, value, index, self)
Mutant 182 in q.js: callback.call(thisp, value, index, self) replaced with self.call(callback, value, index)
Mutant 183 in q.js: callback.call(thisp, value, index, self) replaced with callback(value, index, self)
Mutant 184 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(this)
Mutant 185 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(undefined)
Mutant 186 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(0)
Mutant 187 in q.js: callback.call replaced with callback.apply
Mutant 188 in q.js: callback.call replaced with callback.bind
Mutant 189 in q.js: thisp replaced with null
Mutant 190 in q.js: thisp replaced with undefined
Mutant 191 in q.js: thisp replaced with {}
Mutant 192 in q.js: value replaced with undefined
Mutant 193 in q.js: value replaced with 0
Mutant 194 in q.js: value replaced with "hello"
Mutant 195 in q.js: index replaced with index + 1
Mutant 196 in q.js: index replaced with index * 2
Mutant 197 in q.js: index replaced with Math.random()
Mutant 198 in q.js: self replaced with 1
Mutant 199 in q.js: self replaced with "abc"
Mutant 200 in q.js: self replaced with () => {}
Mutant 201 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key in (object_keys(object) in object)) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 202 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key in Array.prototype) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 203 in q.js: object replaced with {
  key1: value2,
  key2: value1
}
Mutant 204 in q.js: object replaced with {
  key1: value1,
  key2: value2,
  key3: value1
}
Mutant 205 in q.js: object replaced with {
  key1: {
    nestedKey: value1
  },
  key2: value2
}
Mutant 206 in q.js: object_hasOwnProperty(object, key) replaced with key in object
Mutant 207 in q.js: object_hasOwnProperty(object, key) replaced with object.hasOwnProperty(key) === true
Mutant 208 in q.js: object_hasOwnProperty(object, key) replaced with Object.getOwnPropertyNames(object).indexOf(key) !== -1
Mutant 209 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object.property)
Mutant 210 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(key + 1)
Mutant 211 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(TypeError())
Mutant 212 in q.js: object replaced with null
Mutant 213 in q.js: object replaced with undefined
Mutant 214 in q.js: object replaced with Array.prototype.slice.call(arguments)
Mutant 215 in q.js: key replaced with this
Mutant 216 in q.js: key replaced with key + 1
Mutant 217 in q.js: key replaced with key.length
Mutant 218 in q.js: key replaced with this.field
Mutant 219 in q.js: key replaced with typeof key
Mutant 220 in q.js: key replaced with key + 1
Mutant 221 in q.js: uncurryThis replaced with uncurryThat
Mutant 222 in q.js: Object replaced with String
Mutant 223 in q.js: Object replaced with {
  hello: "world"
}
Mutant 224 in q.js: Object replaced with console.log
Mutant 225 in q.js: exception replaced with exception.reverse()
Mutant 226 in q.js: exception replaced with exception.length
Mutant 227 in q.js: exception replaced with exception instanceof Error
Mutant 228 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "undefined"
Mutant 229 in q.js: typeof ReturnValue !== "undefined" replaced with typeof otherVariable !== "undefined"
Mutant 230 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== typeof otherVariable
Mutant 231 in q.js: !!p replaced with !p
Mutant 232 in q.js: !!p replaced with p != true
Mutant 233 in q.js: !!p replaced with p == null
Mutant 234 in q.js: p = p.source replaced with p = p.source.source
Mutant 235 in q.js: p = p.source replaced with p = p.source.source.source
Mutant 236 in q.js: p = p.source replaced with p = p.source.slice
Mutant 237 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 238 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)
Mutant 239 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter + 1)
Mutant 240 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__maximumStackCounter__", {
  value: p.stackCounter,
  configurable: true
})
Mutant 241 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__stackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 242 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__downCounter__", {
  value: p.stackCounter,
  configurable: true
})
Mutant 243 in q.js: error replaced with undefined
Mutant 244 in q.js: error replaced with null
Mutant 245 in q.js: error replaced with {
  stack: "foo"
}
Mutant 246 in q.js: "__minimumStackCounter__" replaced with ""
Mutant 247 in q.js: "__minimumStackCounter__" replaced with "null"
Mutant 248 in q.js: "__minimumStackCounter__" replaced with "aRandomValue"
Mutant 249 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: true
}
Mutant 250 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: null
}
Mutant 251 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1
}
Mutant 252 in q.js: stacks.unshift replaced with stacks.concat
Mutant 253 in q.js: stacks.unshift replaced with stacks.pop
Mutant 254 in q.js: p.stack replaced with p.source.stack
Mutant 255 in q.js: p.stack replaced with p.stack + " " + promise.stack
Mutant 256 in q.js: stacks.unshift replaced with stacks.push
Mutant 257 in q.js: stacks.unshift replaced with stacks.pop
Mutant 258 in q.js: stacks.unshift replaced with stacks.shift
Mutant 259 in q.js: error.stack replaced with error.stack.length()
Mutant 260 in q.js: error.stack replaced with error.stack.concat("foo")
Mutant 261 in q.js: error.stack replaced with null
Mutant 262 in q.js: stacks.join replaced with stacks
Mutant 263 in q.js: stacks.join replaced with undefined
Mutant 264 in q.js: stacks.join replaced with null
Mutant 265 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + " "
Mutant 266 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + "\t"
Mutant 267 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + STACK_JUMP_SEPARATOR + "a"
Mutant 268 in q.js: concatedStacks replaced with "concatedStacks".trim()
Mutant 269 in q.js: concatedStacks replaced with "concatedStacks".substring(0, 10)
Mutant 270 in q.js: concatedStacks replaced with "concatedStacks".replace(/[^\w\s]/gi, '')
Mutant 271 in q.js: object_defineProperty replaced with object_defineProperties
Mutant 272 in q.js: "stack" replaced with "stackTrace"
Mutant 273 in q.js: "stack" replaced with "stack".concat("Trace")
Mutant 274 in q.js: "stack" replaced with "stack".toUpperCase()
Mutant 275 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: null,
  configurable: true
}
Mutant 276 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: undefined,
  configurable: true
}
Mutant 277 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: promise.stack,
  configurable: true
}
Mutant 278 in q.js: "\n" replaced with " "
Mutant 279 in q.js: "\n" replaced with "\r\n"
Mutant 280 in q.js: "\n" replaced with ""
Mutant 281 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 282 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var j = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 283 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 0, j = i; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 284 in q.js: i < lines.length replaced with i <= lines.length
Mutant 285 in q.js: i < lines.length replaced with i >= lines.length
Mutant 286 in q.js: i < lines.length replaced with i == lines.length
Mutant 287 in q.js: ++i replaced with i--
Mutant 288 in q.js: ++i replaced with i *= 2
Mutant 289 in q.js: ++i replaced with i = i * i
Mutant 290 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line !== "foo"
Mutant 291 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !line.startsWith("foo")
Mutant 292 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with line.indexOf("foo") !== 0
Mutant 293 in q.js: isNodeFrame replaced with isNaN
Mutant 294 in q.js: isNodeFrame replaced with parseFloat
Mutant 295 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 296 in q.js: "\n" replaced with '\n vs /* */\n'
Mutant 297 in q.js: "\n" replaced with '"' + String.fromCharCode(92, 110) + '"'
Mutant 298 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 299 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 300 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 301 in q.js: "(module.js:" replaced with " effetivere frock;"
Mutant 302 in q.js: stackLine.indexOf replaced with stackLine.lastIndexOf
Mutant 303 in q.js: stackLine.indexOf replaced with stackLine.charAt
Mutant 304 in q.js: stackLine.indexOf replaced with stackLine.substr
Mutant 305 in q.js: "(node.js:" replaced with "(module.js:12345)"
Mutant 306 in q.js: stackLine replaced with stackLine + "foo"
Mutant 307 in q.js: stackLine replaced with stackLine + ">"
Mutant 308 in q.js: Number replaced with "undefined"
Mutant 309 in q.js: Number replaced with -Infinity
Mutant 310 in q.js: Number replaced with 5
Mutant 311 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 312 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 313 in q.js: attempt1[2] replaced with attempt2[2]
Mutant 314 in q.js: attempt2 replaced with attempt2[2]
Mutant 315 in q.js: attempt2 replaced with !attempt2
Mutant 316 in q.js: attempt2 replaced with attempt2 && attempt2[1]
Mutant 317 in q.js: Number replaced with String
Mutant 318 in q.js: Number replaced with null
Mutant 319 in q.js: Number replaced with NaN
Mutant 320 in q.js: attempt2[2] replaced with attempt3[1]
Mutant 321 in q.js: attempt2[2] replaced with attempt1[2]
Mutant 322 in q.js: attempt2[2] replaced with attempt3[3]
Mutant 323 in q.js: stackLine replaced with stackLine + 1
Mutant 324 in q.js: stackLine replaced with stackLine - 1
Mutant 325 in q.js: stackLine replaced with "string"
Mutant 326 in q.js: Number replaced with null
Mutant 327 in q.js: Number replaced with NaN
Mutant 328 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 329 in q.js: attempt3[2] replaced with attempt3[attempt3.length - 1]
Mutant 330 in q.js: attempt3[2] replaced with getFileNameAndLineNumber(attempt3[2])[1]
Mutant 331 in q.js: getFileNameAndLineNumber replaced with undefined
Mutant 332 in q.js: getFileNameAndLineNumber replaced with null
Mutant 333 in q.js: getFileNameAndLineNumber replaced with {}
Mutant 334 in q.js: stackLine replaced with stackLine[0]
Mutant 335 in q.js: stackLine replaced with stackLine.substr(1)
Mutant 336 in q.js: stackLine replaced with stackLine.split(':')
Mutant 337 in q.js: "\n" replaced with "\t"
Mutant 338 in q.js: "\n" replaced with "\r"
Mutant 339 in q.js: "\n" replaced with ""
Mutant 340 in q.js: lines[0].indexOf replaced with lines[0].lastIndexOf
Mutant 341 in q.js: "@" replaced with "%"
Mutant 342 in q.js: "@" replaced with "#"
Mutant 343 in q.js: "@" replaced with "?"
Mutant 344 in q.js: !fileNameAndLineNumber replaced with [] + fileNameAndLineNumber
Mutant 345 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length
Mutant 346 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "undefined" && typeof console.warn === "function" && typeof buggy === "function"
Mutant 347 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "undefined" && console.log === "function"
Mutant 348 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, arguments, Math.random())
Mutant 349 in q.js: callback.apply(callback, arguments) replaced with callback.apply(null, arguments)
Mutant 350 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, arguments, new Error("Injected error"))
Mutant 351 in q.js: callback.apply replaced with callback.call
Mutant 352 in q.js: callback replaced with () => {}
Mutant 353 in q.js: callback replaced with 0
Mutant 354 in q.js: arguments replaced with []
Mutant 355 in q.js: arguments replaced with null
Mutant 356 in q.js: arguments replaced with undefined
Mutant 357 in q.js: value instanceof Promise replaced with typeof value === "object" && value !== null
Mutant 358 in q.js: value instanceof Promise replaced with Object.prototype.toString.call(value) === "[object Promise]"
Mutant 359 in q.js: value instanceof Promise replaced with value.constructor.name === "Promise"
Mutant 360 in q.js: isPromiseAlike(value) replaced with !isPromiseAlike(value)
Mutant 361 in q.js: isPromiseAlike(value) replaced with isPromise(value)
Mutant 362 in q.js: isPromiseAlike(value) replaced with value instanceof Promise
Mutant 363 in q.js: isPromiseAlike replaced with typeof value === "function"
Mutant 364 in q.js: value replaced with 0
Mutant 365 in q.js: value replaced with null
Mutant 366 in q.js: value replaced with ""
Mutant 367 in q.js: fulfill replaced with reject
Mutant 368 in q.js: fulfill replaced with undefined
Mutant 369 in q.js: value replaced with null
Mutant 370 in q.js: value replaced with undefined
Mutant 371 in q.js: value replaced with {}
Mutant 372 in q.js: object_create replaced with array_slice
Mutant 373 in q.js: object_create replaced with reject
Mutant 374 in q.js: object_create replaced with resolve
Mutant 375 in q.js: object_create replaced with []
Mutant 376 in q.js: object_create replaced with null
Mutant 377 in q.js: object_create replaced with undefined
Mutant 378 in q.js: Promise.prototype replaced with Object.prototype
Mutant 379 in q.js: Promise.prototype replaced with null
Mutant 380 in q.js: Promise.prototype replaced with NaN
Mutant 381 in q.js: messages replaced with false
Mutant 382 in q.js: messages replaced with true
Mutant 383 in q.js: messages replaced with messages.length > 0
Mutant 384 in q.js: messages.push replaced with messages[0]
Mutant 385 in q.js: args replaced with operands[0]
Mutant 386 in q.js: args replaced with operands[1]
Mutant 387 in q.js: args replaced with []
Mutant 388 in q.js: op === "when" && operands[1] replaced with op === "progress" && operands[1]
Mutant 389 in q.js: op === "when" && operands[1] replaced with op === "progress" || operands[1]
Mutant 390 in q.js: op === "when" && operands[1] replaced with op === "progress" && operands[2]
Mutant 391 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 392 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 393 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 394 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promiseDispatch)
Mutant 395 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(args[0])
Mutant 396 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(Q.defer())
Mutant 397 in q.js: resolvedPromise replaced with promise
Mutant 398 in q.js: resolvedPromise replaced with deferred
Mutant 399 in q.js: resolvedPromise replaced with Promise.resolve()
Mutant 400 in q.js: args replaced with args.concat([promise])
Mutant 401 in q.js: args replaced with [args, promise]
Mutant 402 in q.js: resolvedPromise replaced with resolvedPromise == null
Mutant 403 in q.js: resolvedPromise replaced with typeof resolvedPromise === 'undefined'
Mutant 404 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 405 in q.js: isPromise(nearerValue) replaced with nearerValue == promise
Mutant 406 in q.js: isPromise(nearerValue) replaced with !isPromise(nearerValue)
Mutant 407 in q.js: isPromise(nearerValue) replaced with nearerValue.isPending
Mutant 408 in q.js: isPromise replaced with isDefined
Mutant 409 in q.js: nearerValue replaced with nearerValue + 1
Mutant 410 in q.js: nearerValue replaced with null
Mutant 411 in q.js: nearerValue replaced with new Error()
Mutant 412 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 413 in q.js: !resolvedPromise replaced with resolvedPromise !== null
Mutant 414 in q.js: !resolvedPromise replaced with resolvedPromise.isFulfilled()
Mutant 415 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport || !hasStacks
Mutant 416 in q.js: Q.longStackSupport && hasStacks replaced with resolvedPromise === false
Mutant 417 in q.js: Q.longStackSupport && hasStacks replaced with !(Q.longStackSupport === hasStacks)
Mutant 418 in q.js: e.stack.substring replaced with "foo"
Mutant 419 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 420 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split('\n')[0]
Mutant 421 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.substr(0, e.stack.indexOf('\n'))
Mutant 422 in q.js: e.stack.indexOf replaced with e.stack.search
Mutant 423 in q.js: e.stack.indexOf replaced with e.stack.slice
Mutant 424 in q.js: e.stack.indexOf replaced with e.stack.lastIndexOf
Mutant 425 in q.js: "\n" replaced with "\n\n"
Mutant 426 in q.js: "\n" replaced with "\r\n"
Mutant 427 in q.js: "\n" replaced with "\t"
Mutant 428 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && !hasStacks
Mutant 429 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport ? false : hasStacks
Mutant 430 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || !hasStacks
Mutant 431 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, progressListeners[0])
Mutant 432 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(messages[0], message)
Mutant 433 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise + message)
Mutant 434 in q.js: newPromise replaced with undefined
Mutant 435 in q.js: newPromise replaced with null
Mutant 436 in q.js: newPromise replaced with reject
Mutant 437 in q.js: message replaced with message.length
Mutant 438 in q.js: message replaced with message[0]
Mutant 439 in q.js: message replaced with undefined
Mutant 440 in q.js: resolvedPromise replaced with resolvedPromise === promise
Mutant 441 in q.js: resolvedPromise replaced with progressListeners.length > 0
Mutant 442 in q.js: resolvedPromise replaced with promise.isPending()
Mutant 443 in q.js: Q(value) replaced with Q.reject(value)
Mutant 444 in q.js: Q(value) replaced with Q.when(value)
Mutant 445 in q.js: Q(value) replaced with Q(Q.resolve(value))
Mutant 446 in q.js: Q replaced with 1 + value
Mutant 447 in q.js: resolvedPromise replaced with resolvedPromise !== true
Mutant 448 in q.js: resolvedPromise replaced with resolvedPromise.then(function () {
  return true;
})
Mutant 449 in q.js: become replaced with deferred.reject
Mutant 450 in q.js: become replaced with Q.resolve
Mutant 451 in q.js: become replaced with Promise.all
Mutant 452 in q.js: fulfill replaced with reject
Mutant 453 in q.js: value replaced with value + 1
Mutant 454 in q.js: value replaced with value * 2
Mutant 455 in q.js: value replaced with 0
Mutant 456 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 457 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 458 in q.js: resolvedPromise replaced with resolvedPromise !== true
Mutant 459 in q.js: reject replaced with log
Mutant 460 in q.js: reason replaced with reason = null
Mutant 461 in q.js: reason replaced with reason = "something else"
Mutant 462 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 463 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 464 in q.js: resolvedPromise replaced with resolvedPromise.length === 0
Mutant 465 in q.js: progressListener replaced with undefined
Mutant 466 in q.js: progressListener replaced with null
Mutant 467 in q.js: progress replaced with true
Mutant 468 in q.js: progress replaced with false
Mutant 469 in q.js: progress replaced with undefined
Mutant 470 in q.js: self.reject replaced with self.resolve
Mutant 471 in q.js: self.reject replaced with self.fulfill
Mutant 472 in q.js: self.reject replaced with self.notReject
Mutant 473 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 474 in q.js: arguments.length > 2 replaced with arguments.length % 2 === 0
Mutant 475 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 476 in q.js: array_slice(arguments, 1) replaced with arguments.length - 1
Mutant 477 in q.js: array_slice(arguments, 1) replaced with arguments[0]
Mutant 478 in q.js: array_slice(arguments, 1) replaced with null
Mutant 479 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length - 1)
Mutant 480 in q.js: arguments replaced with []
Mutant 481 in q.js: 1 replaced with 2
Mutant 482 in q.js: 1 replaced with NaN
Mutant 483 in q.js: value replaced with NaN
Mutant 484 in q.js: value replaced with Infinity
Mutant 485 in q.js: value replaced with null
Mutant 486 in q.js: typeof resolver !== "function" replaced with resolver == "function"
Mutant 487 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 488 in q.js: typeof resolver !== "function" replaced with typeof resolver === "object"
Mutant 489 in q.js: defer replaced with null
Mutant 490 in q.js: defer replaced with undefined
Mutant 491 in q.js: defer replaced with "defer"
Mutant 492 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.reject, deferred.notify, 0)
Mutant 493 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.reject, deferred.notify, null)
Mutant 494 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.reject, deferred.notify, undefined)
Mutant 495 in q.js: deferred.resolve replaced with deferred.reject
Mutant 496 in q.js: deferred.resolve replaced with deferred.notify
Mutant 497 in q.js: deferred.resolve replaced with promise.reject
Mutant 498 in q.js: deferred.reject replaced with deferred.resolve
Mutant 499 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 500 in q.js: deferred.reject replaced with undefined
Mutant 501 in q.js: deferred.notify replaced with null
Mutant 502 in q.js: deferred.notify replaced with undefined
Mutant 503 in q.js: deferred.notify replaced with () => {}
Mutant 504 in q.js: deferred.reject replaced with deferred.rejected
Mutant 505 in q.js: reason replaced with 1
Mutant 506 in q.js: reason replaced with "error"
Mutant 507 in q.js: reason replaced with undefined
Mutant 508 in q.js: Q replaced with Q.reject
Mutant 509 in q.js: Q replaced with Promise.reject
Mutant 510 in q.js: x replaced with y
Mutant 511 in q.js: x replaced with x + 1
Mutant 512 in q.js: x replaced with null
Mutant 513 in q.js: y replaced with !y
Mutant 514 in q.js: y replaced with typeof y == "number" ? y : null
Mutant 515 in q.js: Q replaced with `defer`
Mutant 516 in q.js: Q replaced with `object`
Mutant 517 in q.js: [this, that] replaced with [that, this]
Mutant 518 in q.js: [this, that] replaced with [Q.resolve(this), Q.resolve(that)]
Mutant 519 in q.js: [this, that] replaced with [this.value, that.value]
Mutant 520 in q.js: x === y replaced with x != y
Mutant 521 in q.js: x === y replaced with x > y
Mutant 522 in q.js: x === y replaced with x + y
Mutant 523 in q.js: i < len replaced with i > len
Mutant 524 in q.js: i < len replaced with i <= len
Mutant 525 in q.js: i < len replaced with i != len
Mutant 526 in q.js: i++ replaced with i += 2
Mutant 527 in q.js: i++ replaced with i = i + 1
Mutant 528 in q.js: Q replaced with deferred
Mutant 529 in q.js: answerPs[i] replaced with answerPs[i + 1]
Mutant 530 in q.js: answerPs[i] replaced with answerPs[0]
Mutant 531 in q.js: resolve replaced with deferred.reject
Mutant 532 in q.js: resolve replaced with null
Mutant 533 in q.js: resolve replaced with 42
Mutant 534 in q.js: reject replaced with deferred.reject(Error('rejected'))
Mutant 535 in q.js: this.then replaced with this.catch
Mutant 536 in q.js: this.then replaced with this.finally
Mutant 537 in q.js: Q.race replaced with Q.race(Ladder)
Mutant 538 in q.js: Q.race replaced with Q.crater(Ladder)
Mutant 539 in q.js: Q.race replaced with Ladder.race(Q)
Mutant 540 in q.js: fallback === void 0 replaced with fallback === null
Mutant 541 in q.js: fallback === void 0 replaced with fallback != null
Mutant 542 in q.js: fallback === void 0 replaced with fallback === 'foo'
Mutant 543 in q.js: inspect === void 0 replaced with inspect == void 0
Mutant 544 in q.js: inspect === void 0 replaced with inspect === null
Mutant 545 in q.js: inspect === void 0 replaced with inspect != void 0
Mutant 546 in q.js: object_create replaced with null
Mutant 547 in q.js: object_create replaced with {}
Mutant 548 in q.js: descriptor[op] replaced with descriptor.get(op)
Mutant 549 in q.js: descriptor[op] replaced with descriptor.set(op, value)
Mutant 550 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(null)
Mutant 551 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(undefined)
Mutant 552 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(Q.delay(promise, 1000))
Mutant 553 in q.js: args replaced with null
Mutant 554 in q.js: args replaced with []
Mutant 555 in q.js: args replaced with "foo"
Mutant 556 in q.js: fallback.call(promise, op, args) replaced with fallback.call(resolve, null, [])
Mutant 557 in q.js: fallback.call(promise, op, args) replaced with fallback.call(null, op, args)
Mutant 558 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise, "when", [deferred.reject])
Mutant 559 in q.js: promise replaced with promise.reject
Mutant 560 in q.js: promise replaced with promise.__proto__
Mutant 561 in q.js: promise replaced with function () {
  return promise;
}
Mutant 562 in q.js: op replaced with 1
Mutant 563 in q.js: op replaced with "foo"
Mutant 564 in q.js: op replaced with undefined
Mutant 565 in q.js: args replaced with args[0] = 0
Mutant 566 in q.js: args replaced with args.push(42)
Mutant 567 in q.js: exception replaced with undefined
Mutant 568 in q.js: exception replaced with null
Mutant 569 in q.js: resolve replaced with 1 + 1
Mutant 570 in q.js: resolve replaced with "resolve"
Mutant 571 in q.js: resolve replaced with function () {
  return 42;
}
Mutant 572 in q.js: result replaced with null
Mutant 573 in q.js: result replaced with false
Mutant 574 in q.js: result replaced with 0
Mutant 575 in q.js: inspect replaced with !inspect
Mutant 576 in q.js: inspect replaced with inspect.state
Mutant 577 in q.js: inspect replaced with inspect.prototype
Mutant 578 in q.js: inspect replaced with inspect.state
Mutant 579 in q.js: inspect replaced with inspect.value
Mutant 580 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 581 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 582 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 583 in q.js: fulfilled replaced with rejected
Mutant 584 in q.js: fulfilled replaced with null
Mutant 585 in q.js: value replaced with null
Mutant 586 in q.js: value replaced with Promise.reject(new Error("FAKE ERROR"))
Mutant 587 in q.js: value replaced with Q(value).then(function () {
  return null;
})
Mutant 588 in q.js: reject replaced with resolve
Mutant 589 in q.js: reject replaced with Promise.reject
Mutant 590 in q.js: exception replaced with new Error("DIFFERENT ERROR MESSAGE")
Mutant 591 in q.js: exception replaced with new Error("NEW ERROR MESSAGE")
Mutant 592 in q.js: typeof rejected === "function" replaced with rejected === null
Mutant 593 in q.js: typeof rejected === "function" replaced with rejected !== 0
Mutant 594 in q.js: typeof rejected === "function" replaced with typeof rejected !== "function"
Mutant 595 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self = 1)
Mutant 596 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.then)
Mutant 597 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self.promises)
Mutant 598 in q.js: exception replaced with exception.message
Mutant 599 in q.js: exception replaced with new Error("message")
Mutant 600 in q.js: exception replaced with void 0
Mutant 601 in q.js: self replaced with self.promiseDispatch
Mutant 602 in q.js: self replaced with self.promiseDispatch(resolve)
Mutant 603 in q.js: self replaced with self.promiseDispatch("when", [resolve])
Mutant 604 in q.js: rejected replaced with undefined
Mutant 605 in q.js: exception replaced with "<Rejected>"
Mutant 606 in q.js: exception replaced with "<Fulfilled>"
Mutant 607 in q.js: exception replaced with Q.reject(exception)
Mutant 608 in q.js: reject replaced with fulfill
Mutant 609 in q.js: reject replaced with resolve
Mutant 610 in q.js: reject replaced with defer
Mutant 611 in q.js: newException replaced with newException()
Mutant 612 in q.js: newException replaced with null
Mutant 613 in q.js: newException replaced with undefined
Mutant 614 in q.js: reject replaced with this.exception
Mutant 615 in q.js: exception replaced with reject("ERROR")
Mutant 616 in q.js: exception replaced with false
Mutant 617 in q.js: progressed replaced with value
Mutant 618 in q.js: progressed replaced with null
Mutant 619 in q.js: value replaced with undefined
Mutant 620 in q.js: value replaced with null
Mutant 621 in q.js: value replaced with true
Mutant 622 in q.js: done replaced with !done
Mutant 623 in q.js: done replaced with done === false
Mutant 624 in q.js: done replaced with done !== true
Mutant 625 in q.js: deferred.resolve replaced with deferred.reject
Mutant 626 in q.js: deferred.resolve replaced with deferred.notify
Mutant 627 in q.js: deferred.resolve replaced with null
Mutant 628 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 629 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 630 in q.js: _fulfilled(value) replaced with null
Mutant 631 in q.js: value replaced with undefined
Mutant 632 in q.js: value replaced with true
Mutant 633 in q.js: done replaced with !done
Mutant 634 in q.js: done replaced with done && false
Mutant 635 in q.js: done replaced with promise.isPending()
Mutant 636 in q.js: deferred.resolve replaced with undefined
Mutant 637 in q.js: deferred.resolve replaced with deferred.reject
Mutant 638 in q.js: deferred.resolve replaced with deferred.notify
Mutant 639 in q.js: _rejected replaced with null
Mutant 640 in q.js: exception replaced with undefined
Mutant 641 in q.js: exception replaced with exception.message
Mutant 642 in q.js: exception replaced with {
  message: exception.message
}
Mutant 643 in q.js: _progressed replaced with _rejected
Mutant 644 in q.js: _progressed replaced with void 0
Mutant 645 in q.js: _progressed replaced with any
Mutant 646 in q.js: value replaced with null
Mutant 647 in q.js: value replaced with undefined
Mutant 648 in q.js: value replaced with value + 1
Mutant 649 in q.js: Q.onerror replaced with Q.onwarning
Mutant 650 in q.js: e replaced with e.message
Mutant 651 in q.js: e replaced with e.stack
Mutant 652 in q.js: e replaced with e.name
Mutant 653 in q.js: !threw replaced with threw
Mutant 654 in q.js: !threw replaced with typeof threw === "function"
Mutant 655 in q.js: !threw replaced with threw !== true
Mutant 656 in q.js: deferred.notify replaced with deferred.reject
Mutant 657 in q.js: newValue replaced with Promise.reject(newValue)
Mutant 658 in q.js: newValue replaced with Q.reject(newValue)
Mutant 659 in q.js: newValue replaced with Q.reject(value)
Mutant 660 in q.js: promise replaced with promise.then()
Mutant 661 in q.js: promise replaced with Q(promise)
Mutant 662 in q.js: promise replaced with defer()
Mutant 663 in q.js: callback replaced with null
Mutant 664 in q.js: callback replaced with undefined
Mutant 665 in q.js: callback replaced with 42
Mutant 666 in q.js: Q replaced with undefined
Mutant 667 in q.js: Q replaced with null
Mutant 668 in q.js: callback replaced with 0
Mutant 669 in q.js: callback replaced with null
Mutant 670 in q.js: callback.fcall replaced with callback.call
Mutant 671 in q.js: callback.fcall replaced with callback.apply
Mutant 672 in q.js: callback.fcall replaced with callback.bind
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.call
not replacing callback.fcall with callback.apply
not replacing callback.fcall with callback.apply
not replacing callback.fcall with callback.bind
not replacing callback.fcall with callback.bind
Mutant 673 in q.js: value replaced with undefined
Mutant 674 in q.js: value replaced with null
Mutant 675 in q.js: value replaced with value.prop
Mutant 676 in q.js: value replaced with null
Mutant 677 in q.js: value replaced with undefined
Mutant 678 in q.js: value replaced with 1
Mutant 679 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed + 1)
Mutant 680 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed * 2)
Mutant 681 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed / 2)
Mutant 682 in q.js: Q replaced with Q.resolve
Mutant 683 in q.js: Q replaced with Q.reject
Mutant 684 in q.js: value replaced with null
Mutant 685 in q.js: value replaced with void 0
Mutant 686 in q.js: value replaced with Promise.resolve(value)
Mutant 687 in q.js: fulfilled replaced with resolved < 0
Mutant 688 in q.js: fulfilled replaced with resolved > 0
Mutant 689 in q.js: fulfilled replaced with resolved !== 0
Mutant 690 in q.js: rejected replaced with _rejected
Mutant 691 in q.js: rejected replaced with _fulfilled
Mutant 692 in q.js: rejected replaced with void 0
Mutant 693 in q.js: progressed replaced with "placeholder"
Mutant 694 in q.js: progressed replaced with null
Mutant 695 in q.js: progressed replaced with progressed()
Mutant 696 in q.js: function () {
  return value;
} replaced with Math.sin(value)
Mutant 697 in q.js: function () {
  return value;
} replaced with -value
Mutant 698 in q.js: Q replaced with Q.otherwise
Mutant 699 in q.js: Q replaced with Q.inspect
Mutant 700 in q.js: Q replaced with Q.reject
Mutant 701 in q.js: promise replaced with "a string"
Mutant 702 in q.js: promise replaced with 0
Mutant 703 in q.js: promise replaced with () => null
Mutant 704 in q.js: value replaced with 0
Mutant 705 in q.js: value replaced with null
Mutant 706 in q.js: value replaced with undefined
Mutant 707 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 708 in q.js: function () {
  throw reason;
} replaced with function () {
  return Q.reject(reason);
}
Mutant 709 in q.js: Q(promise).thenReject replaced with Q.reject
Mutant 710 in q.js: Q(promise).thenReject replaced with Q.thenResolve
Mutant 711 in q.js: Q(promise).thenReject replaced with Q.finally
Mutant 712 in q.js: promise replaced with undefined
Mutant 713 in q.js: promise replaced with error
Mutant 714 in q.js: reason replaced with reason + 1
Mutant 715 in q.js: reason replaced with reason.toString()
Mutant 716 in q.js: reason replaced with reason[0]
Mutant 717 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 718 in q.js: isPromise(value) replaced with isPromise(value) === false
Mutant 719 in q.js: isPromise(value) replaced with typeof value !== "object" || value.constructor !== Promise
Mutant 720 in q.js: isPromise replaced with 1
Mutant 721 in q.js: isPromise replaced with "hello"
Mutant 722 in q.js: value replaced with {
  then: function (onFulfilled, onRejected) {
    onFulfilled(42);
  }
}
Mutant 723 in q.js: value replaced with Promise.reject(new Error("test"))
Mutant 724 in q.js: value.inspect replaced with value.value
Mutant 725 in q.js: value.inspect replaced with value.isFulfilled
Mutant 726 in q.js: inspected.state === "fulfilled" replaced with inspected.state !== "fulfilled"
Mutant 727 in q.js: inspected.state === "fulfilled" replaced with inspected.state !== "rejected"
Mutant 728 in q.js: inspected.state === "fulfilled" replaced with !inspected.state
Mutant 729 in q.js: object replaced with null
Mutant 730 in q.js: object replaced with undefined
Mutant 731 in q.js: object replaced with 999999999999999999999999999999999999999999
Mutant 732 in q.js: object.inspect replaced with !Q
Mutant 733 in q.js: object.inspect replaced with null
Mutant 734 in q.js: object.inspect replaced with undefined
not replacing object.inspect with !Q
not replacing object.inspect with null
not replacing object.inspect with undefined
Mutant 735 in q.js: this.inspect replaced with null
Mutant 736 in q.js: this.inspect replaced with undefined
Mutant 737 in q.js: this.inspect replaced with {}
not replacing this.inspect with null
not replacing this.inspect with undefined
not replacing this.inspect with {}
Mutant 738 in q.js: object replaced with !object
Mutant 739 in q.js: object replaced with false
Mutant 740 in q.js: object replaced with object.foo
Mutant 741 in q.js: this.inspect replaced with this.inspect.state
Mutant 742 in q.js: this.inspect replaced with this.inspect.value
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
Mutant 743 in q.js: isPromise replaced with isPromiseAlike
Mutant 744 in q.js: isPromise replaced with !isPromiseAlike
Mutant 745 in q.js: isPromise replaced with isFulfilled
Mutant 746 in q.js: object replaced with object instanceof Array
Mutant 747 in q.js: object replaced with typeof object === "boolean"
Mutant 748 in q.js: object replaced with object.length > 0
Mutant 749 in q.js: object.inspect replaced with object["inspect"]
not replacing object.inspect with object["inspect"]
Mutant 750 in q.js: this.inspect replaced with inspected.status === "rejected"
Mutant 751 in q.js: this.inspect replaced with inspected.fulfilledStatus === "rejected"
Mutant 752 in q.js: this.inspect replaced with inspected.rejectedStatus === "rejected"
not replacing this.inspect with inspected.status === "rejected"
not replacing this.inspect with inspected.fulfilledStatus === "rejected"
not replacing this.inspect with inspected.rejectedStatus === "rejected"
Mutant 753 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections && Q.delay(1)
Mutant 754 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections && Q.nextTick.delay(1)
Mutant 755 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 756 in q.js: !trackUnhandledRejections replaced with !isPromiseAlike(reason)
Mutant 757 in q.js: !trackUnhandledRejections replaced with !isPending(reason)
Mutant 758 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 759 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.contains(promise)
Mutant 760 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.findIndex(promise) > -1
Mutant 761 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.indexOf(promise))
Mutant 762 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.indexOf(promise))
Mutant 763 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons.indexOf(reason))
Mutant 764 in q.js: array_indexOf replaced with unhandledReasons.length > 0
Mutant 765 in q.js: array_indexOf replaced with reportedUnhandledRejections.length > 0
Mutant 766 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 767 in q.js: unhandledRejections replaced with typeof unhandledRejections === 'object'
Mutant 768 in q.js: unhandledRejections replaced with unhandledRejections !== undefined
Mutant 769 in q.js: promise replaced with promise.reason
Mutant 770 in q.js: promise replaced with Q.fulfill(promise.reason)
Mutant 771 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, undefined)
Mutant 772 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", undefined, promise)
Mutant 773 in q.js: reason replaced with reason + 1
Mutant 774 in q.js: reason replaced with null
Mutant 775 in q.js: reason replaced with undefined
Mutant 776 in q.js: promise replaced with NaN
Mutant 777 in q.js: promise replaced with Infinity
Mutant 778 in q.js: promise replaced with null
Mutant 779 in q.js: promise replaced with rejection
Mutant 780 in q.js: promise replaced with reportedUnhandledRejections
Mutant 781 in q.js: promise replaced with promise.then()
Mutant 782 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason === undefined
Mutant 783 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason === null
Mutant 784 in q.js: reason && typeof reason.stack !== "undefined" replaced with typeof reason.stack !== "undefined" && reason.stack !== null
Mutant 785 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 786 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 787 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 788 in q.js: reason.stack replaced with reason.toString()
Mutant 789 in q.js: reason.stack replaced with reason.message
Mutant 790 in q.js: reason.stack replaced with reason.stack.toString()
Mutant 791 in q.js: "(no stack) " + reason replaced with reason + "(no stack) "
Mutant 792 in q.js: "(no stack) " + reason replaced with reason + ["(no stack) "]
Mutant 793 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 794 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 795 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections == true
Mutant 796 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== false
Mutant 797 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.push(promise))
Mutant 798 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.concat(promise))
Mutant 799 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.splice(promise))
Mutant 800 in q.js: array_indexOf replaced with array_slice
Mutant 801 in q.js: array_indexOf replaced with array_reverse
Mutant 802 in q.js: array_indexOf replaced with array_filter
Mutant 803 in q.js: unhandledRejections replaced with unhandledReasons
Mutant 804 in q.js: unhandledRejections replaced with reportedUnhandledRejections
Mutant 805 in q.js: unhandledRejections replaced with []
Mutant 806 in q.js: promise replaced with Promise.resolve(reason)
Mutant 807 in q.js: promise replaced with Promise.reject(reason)
Mutant 808 in q.js: promise replaced with Promise.race([reason])
Mutant 809 in q.js: at !== -1 replaced with at < 0
Mutant 810 in q.js: at !== -1 replaced with at === true
Mutant 811 in q.js: at !== -1 replaced with typeof at === "number"
Mutant 812 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(this)
Mutant 813 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(null)
Mutant 814 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf([])
Mutant 815 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 816 in q.js: array_indexOf replaced with array_findIndex
Mutant 817 in q.js: reportedUnhandledRejections replaced with [reportedUnhandledRejections][0]
Mutant 818 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.slice(1)
Mutant 819 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.length - 1
Mutant 820 in q.js: atReport !== -1 replaced with reportedUnhandledRejections.length
Mutant 821 in q.js: atReport !== -1 replaced with unhandledRejections.length
Mutant 822 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at])
Mutant 823 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("unhandledRejection", null, unhandledRejections[at])
Mutant 824 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 825 in q.js: "rejectionHandled" replaced with "rejected"
Mutant 826 in q.js: "rejectionHandled" replaced with "handledRejection"
Mutant 827 in q.js: unhandledReasons[at] replaced with false
Mutant 828 in q.js: unhandledReasons[at] replaced with "error"
Mutant 829 in q.js: unhandledReasons[at] replaced with Q.fulfill("error")
Mutant 830 in q.js: promise replaced with promise.catch(function () {})
Mutant 831 in q.js: promise replaced with promise.then(function () {})
Mutant 832 in q.js: promise replaced with promise.finally(function () {})
Mutant 833 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport)
Mutant 834 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(unhandledRejections.length)
Mutant 835 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(unhandledRejections.pop())
Mutant 836 in q.js: atReport replaced with reportedUnhandledRejections.length
Mutant 837 in q.js: atReport replaced with reportedUnhandledRejections.length - 1
Mutant 838 in q.js: 1 replaced with 2
Mutant 839 in q.js: 1 replaced with 0
Mutant 840 in q.js: unhandledRejections.splice replaced with unhandledRejections.push
Mutant 841 in q.js: at replaced with unhandledRejections.indexOf(promise)
Mutant 842 in q.js: at replaced with unhandledRejections.filter(function (p) {
  return p !== promise;
}).length
Mutant 843 in q.js: 1 replaced with unhandledReasons.splice(at, at)
Mutant 844 in q.js: 1 replaced with unhandledReasons.splice(at, 2)
Mutant 845 in q.js: 1 replaced with unhandledReasons.splice(at, Infinity)
Mutant 846 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 847 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, Infinity)
Mutant 848 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, Math.random())
Mutant 849 in q.js: 1 replaced with 0
Mutant 850 in q.js: 1 replaced with -1
Mutant 851 in q.js: 1 replaced with array.length - 1
Mutant 852 in q.js: unhandledReasons.slice replaced with unhandledReasons.splice
Mutant 853 in q.js: unhandledReasons.slice replaced with unhandledReasons.concat
Mutant 854 in q.js: unhandledReasons.slice replaced with unhandledReasons.reverse
Mutant 855 in q.js: rejected replaced with resolved
Mutant 856 in q.js: rejected replaced with !rejected
Mutant 857 in q.js: rejected replaced with typeof rejected === "undefined"
Mutant 858 in q.js: this replaced with this.inspect
Mutant 859 in q.js: this replaced with rejection
Mutant 860 in q.js: this replaced with rejection.promise
Mutant 861 in q.js: rejected replaced with undefined
Mutant 862 in q.js: rejected replaced with 1 + 1
Mutant 863 in q.js: reason replaced with null
Mutant 864 in q.js: reason replaced with "unhandled"
Mutant 865 in q.js: rejection replaced with void 0
Mutant 866 in q.js: rejection replaced with null
Mutant 867 in q.js: rejection replaced with true
Mutant 868 in q.js: reason replaced with null
Mutant 869 in q.js: reason replaced with undefined
Mutant 870 in q.js: reason replaced with false
Mutant 871 in q.js: name === null || name === void 0 replaced with name == null
Mutant 872 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 873 in q.js: name === null || name === void 0 replaced with name != null
Mutant 874 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 875 in q.js: value.apply(void 0, args) replaced with value.apply(args[0], args)
Mutant 876 in q.js: value.apply(void 0, args) replaced with value.apply({}, args)
Mutant 877 in q.js: value.apply replaced with value["apply"]
Mutant 878 in q.js: value.apply replaced with value.post
Mutant 879 in q.js: void 0 replaced with "undefined"
Mutant 880 in q.js: void 0 replaced with null
Mutant 881 in q.js: void 0 replaced with 0
Mutant 882 in q.js: args replaced with []
Mutant 883 in q.js: args replaced with null
Mutant 884 in q.js: args replaced with undefined
Mutant 885 in q.js: value[name].apply(value, args) replaced with value[name].apply(value2, args)
Mutant 886 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args2)
Mutant 887 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args[0])
Mutant 888 in q.js: value replaced with undefined
Mutant 889 in q.js: value replaced with null
Mutant 890 in q.js: value replaced with value.apply
Mutant 891 in q.js: args replaced with args + 1
Mutant 892 in q.js: args replaced with Q.resolve(args)
Mutant 893 in q.js: args replaced with args.map(Q.resolve)
Mutant 894 in q.js: value.apply(thisp, args) replaced with value.apply(this.p)
Mutant 895 in q.js: value.apply(thisp, args) replaced with value.apply(void 0)
Mutant 896 in q.js: value.apply(thisp, args) replaced with value.apply(args[0])
Mutant 897 in q.js: value.apply replaced with ui.apply
Mutant 898 in q.js: value.apply replaced with value["apply"]
Mutant 899 in q.js: value.apply replaced with this.apply
Mutant 900 in q.js: thisp replaced with void 0
Mutant 901 in q.js: thisp replaced with 42
Mutant 902 in q.js: thisp replaced with Math.PI
Mutant 903 in q.js: args replaced with args[0]
Mutant 904 in q.js: args replaced with args.slice(1)
Mutant 905 in q.js: args replaced with Promise.resolve(args)
Mutant 906 in q.js: object_keys replaced with object.keys.length
Mutant 907 in q.js: value replaced with "none"
Mutant 908 in q.js: value replaced with null
Mutant 909 in q.js: value replaced with Promise.reject("some error")
Mutant 910 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolveUnsafe())
Mutant 911 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(rejection))
Mutant 912 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify(rejection))
Mutant 913 in q.js: promise.then replaced with promise.catch
Mutant 914 in q.js: promise.then replaced with promise["catch"]
Mutant 915 in q.js: deferred.resolve replaced with deferred.reject
Mutant 916 in q.js: deferred.resolve replaced with deferred.notify
Mutant 917 in q.js: deferred.resolve replaced with arbitraryValue
Mutant 918 in q.js: deferred.reject replaced with deferred.notify
Mutant 919 in q.js: deferred.reject replaced with Q.reject(reason)
Mutant 920 in q.js: deferred.notify replaced with 1 + 1
Mutant 921 in q.js: deferred.notify replaced with "hello"
Mutant 922 in q.js: deferred.notify replaced with null
Mutant 923 in q.js: deferred.reject replaced with deferred.notify
Mutant 924 in q.js: deferred.reject replaced with deferred.observe
Mutant 925 in q.js: exception replaced with null
Mutant 926 in q.js: exception replaced with void 0
Mutant 927 in q.js: exception replaced with new Error("unknown error")
Mutant 928 in q.js: dispatch(object, op, args) replaced with dispatch(value)
Mutant 929 in q.js: dispatch(object, op, args) replaced with dispatch(op.apply(void 0, args))
Mutant 930 in q.js: object replaced with object + 1
Mutant 931 in q.js: object replaced with object.length
Mutant 932 in q.js: object replaced with object[0]
Mutant 933 in q.js: args replaced with null
Mutant 934 in q.js: args replaced with undefined
Mutant 935 in q.js: args replaced with []
Mutant 936 in q.js: Q replaced with Q - 1
Mutant 937 in q.js: Q replaced with Q + 1
Mutant 938 in q.js: Q replaced with Q * 2
Mutant 939 in q.js: object replaced with object.missingKey
Mutant 940 in q.js: object replaced with object.valueOf()
Mutant 941 in q.js: object replaced with null
Mutant 942 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 943 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(partial(fulfilled, rejected))
Mutant 944 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(void 0, fulfilled)
Mutant 945 in q.js: value replaced with null
Mutant 946 in q.js: value replaced with undefined
Mutant 947 in q.js: value replaced with []
Mutant 948 in q.js: fulfilled replaced with fulfilled.bind({})
Mutant 949 in q.js: fulfilled replaced with Promise.reject()
Mutant 950 in q.js: rejected replaced with rejected | function () {
  throw "new Error()";
}
Mutant 951 in q.js: rejected replaced with rejected | function (x) {
  return x + 1;
}
Mutant 952 in q.js: rejected replaced with rejected | function (x) {
  return x + "1";
}
Mutant 953 in q.js: this.all replaced with this.some
Mutant 954 in q.js: this.all replaced with this[null]
Mutant 955 in q.js: this.all replaced with this.none
not replacing this.all with this.some
not replacing this.all with this.some
not replacing this.all with this[null]
not replacing this.all with this[null]
not replacing this.all with this.none
not replacing this.all with this.none
Mutant 956 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(void array)
Mutant 957 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 958 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(this)
Mutant 959 in q.js: fulfilled.apply replaced with fulfilled.resolve
Mutant 960 in q.js: fulfilled.apply replaced with fulfilled.then
Mutant 961 in q.js: fulfilled.apply replaced with rejected.apply
Mutant 962 in q.js: array replaced with undefined
Mutant 963 in q.js: array replaced with null
Mutant 964 in q.js: array replaced with []
Mutant 965 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === null
Mutant 966 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === undefined
Mutant 967 in q.js: arg replaced with undefined
Mutant 968 in q.js: arg replaced with null
Mutant 969 in q.js: arg replaced with ""
Mutant 970 in q.js: exception replaced with exception.message
Mutant 971 in q.js: exception replaced with "unhandled exception"
Mutant 972 in q.js: exception replaced with new Error(exception)
Mutant 973 in q.js: result.done replaced with result.value
Mutant 974 in q.js: result.done replaced with result.value === undefined
Mutant 975 in q.js: result.done replaced with result.value !== undefined && result.value !== false
Mutant 976 in q.js: result.value replaced with result.reject
Mutant 977 in q.js: result.value replaced with null
Mutant 978 in q.js: when(result.value, callback, errback) replaced with when(result.err, callback, errback)
Mutant 979 in q.js: when(result.value, callback, errback) replaced with when(result.value.send(undefined), callback, errback)
Mutant 980 in q.js: when(result.value, callback, errback) replaced with when(result, callback(), errback)
Mutant 981 in q.js: when replaced with all
Mutant 982 in q.js: when replaced with any
Mutant 983 in q.js: result.value replaced with result.value + 1
Mutant 984 in q.js: result.value replaced with result.value - 1
Mutant 985 in q.js: result.value replaced with result.value * 2
Mutant 986 in q.js: callback replaced with errback
Mutant 987 in q.js: callback replaced with function (error) {
  throw error;
}
Mutant 988 in q.js: callback replaced with Q
Mutant 989 in q.js: errback replaced with console.error
Mutant 990 in q.js: generator[verb] replaced with generator[verb] + 1
Mutant 991 in q.js: generator[verb] replaced with generator[verb] * 2
Mutant 992 in q.js: generator[verb] replaced with generator[verb] - 1
Mutant 993 in q.js: arg replaced with arg.toString()
Mutant 994 in q.js: arg replaced with arg.toLowerCase()
Mutant 995 in q.js: arg replaced with arg + 1
Mutant 996 in q.js: isStopIteration(exception) replaced with typeof exception === "number"
Mutant 997 in q.js: isStopIteration(exception) replaced with exception instanceof Error
Mutant 998 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 999 in q.js: isStopIteration replaced with isLoopBreak
Mutant 1000 in q.js: isStopIteration replaced with isContinue
Mutant 1001 in q.js: isStopIteration replaced with isRejected
Mutant 1002 in q.js: exception replaced with exception.t
Mutant 1003 in q.js: Q replaced with null
Mutant 1004 in q.js: Q replaced with undefined
Mutant 1005 in q.js: exception.value replaced with exception
Mutant 1006 in q.js: exception.value replaced with Promise.reject(exception)
Mutant 1007 in q.js: exception.value replaced with undefined
Mutant 1008 in q.js: reject replaced with resolve
Mutant 1009 in q.js: exception replaced with null
Mutant 1010 in q.js: exception replaced with "error"
Mutant 1011 in q.js: exception replaced with new Error()
Mutant 1012 in q.js: when(result, callback, errback) replaced with when(result.value, callback, errback)
Mutant 1013 in q.js: when(result, callback, errback) replaced with when(result, callback(result.value), errback)
Mutant 1014 in q.js: when(result, callback, errback) replaced with when(result, callback(result.value), errback(result.value))
Mutant 1015 in q.js: when replaced with Q.reject
Mutant 1016 in q.js: when replaced with Q.resolve
Mutant 1017 in q.js: when replaced with Q.never
Mutant 1018 in q.js: result replaced with result = 42
Mutant 1019 in q.js: result replaced with result = Q(42)
Mutant 1020 in q.js: result replaced with result = Q.promised(getBarPromise)
Mutant 1021 in q.js: callback replaced with errback
Mutant 1022 in q.js: callback replaced with undefined
Mutant 1023 in q.js: callback replaced with () => {
  return callback(null, result.value);
}
Mutant 1024 in q.js: errback replaced with null
Mutant 1025 in q.js: errback replaced with undefined
Mutant 1026 in q.js: errback replaced with console.error
Mutant 1027 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(1, 2)
Mutant 1028 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(function () {})
Mutant 1029 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null, null)
Mutant 1030 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1031 in q.js: makeGenerator.apply replaced with makeGenerator[Symbol.iterator]
Mutant 1032 in q.js: this replaced with undefined
Mutant 1033 in q.js: this replaced with null
Mutant 1034 in q.js: this replaced with function () {}
Mutant 1035 in q.js: arguments replaced with null
Mutant 1036 in q.js: arguments replaced with {}
Mutant 1037 in q.js: arguments replaced with undefined
Mutant 1038 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(this))
Mutant 1039 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(generator))
Mutant 1040 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer.bind(generator, "next"))
Mutant 1041 in q.js: continuer.bind replaced with resolved.bind
Mutant 1042 in q.js: continuer.bind replaced with deferred.bind
Mutant 1043 in q.js: continuer.bind replaced with Promise.bind
Mutant 1044 in q.js: continuer replaced with function () {}()
Mutant 1045 in q.js: continuer replaced with function () {}().bind(continuer)
Mutant 1046 in q.js: continuer replaced with continuer()
Mutant 1047 in q.js: "next" replaced with "done"
Mutant 1048 in q.js: "next" replaced with "throw"
Mutant 1049 in q.js: "next" replaced with "value"
Mutant 1050 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind("next")
Mutant 1051 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(Math.random() > 0.5 ? "next" : "throw")
Mutant 1052 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind("next" + Math.random())
Mutant 1053 in q.js: "throw" replaced with "bad"
Mutant 1054 in q.js: "throw" replaced with "undefined"
Mutant 1055 in q.js: "throw" replaced with 1 + 2
Mutant 1056 in q.js: callback replaced with null
Mutant 1057 in q.js: callback replaced with undefined
Mutant 1058 in q.js: callback replaced with false
Mutant 1059 in q.js: Q.async replaced with Q.reject
Mutant 1060 in q.js: Q.async replaced with Q.resolve
not replacing Q.async with Q.reject
not replacing Q.async with Q.resolve
Mutant 1061 in q.js: all replaced with some
Mutant 1062 in q.js: all replaced with !all
Mutant 1063 in q.js: arguments replaced with 1
Mutant 1064 in q.js: arguments replaced with -1
Mutant 1065 in q.js: arguments replaced with [1, 2]
Mutant 1066 in q.js: callback.apply(self, args) replaced with callback.apply(args)
Mutant 1067 in q.js: callback.apply(self, args) replaced with callback.apply(null)
Mutant 1068 in q.js: callback.apply(self, args) replaced with callback.apply(undefined)
Mutant 1069 in q.js: callback.apply replaced with callback.call
Mutant 1070 in q.js: callback.apply replaced with callback.bind
Mutant 1071 in q.js: callback.apply replaced with callback.method
Mutant 1072 in q.js: self replaced with self + 1
Mutant 1073 in q.js: self replaced with self = null
Mutant 1074 in q.js: self replaced with this
Mutant 1075 in q.js: args replaced with args.slice(1)
Mutant 1076 in q.js: args replaced with args.concat(Q(2))
Mutant 1077 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(args, op)
Mutant 1078 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op + args[0])
Mutant 1079 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(undefined)
Mutant 1080 in q.js: Q replaced with Q.direct
Mutant 1081 in q.js: Q replaced with Q.root
Mutant 1082 in q.js: Q replaced with Q.meta
Mutant 1083 in q.js: object replaced with 1
Mutant 1084 in q.js: object replaced with null
Mutant 1085 in q.js: op replaced with "get"
Mutant 1086 in q.js: op replaced with "set"
Mutant 1087 in q.js: args replaced with undefined
Mutant 1088 in q.js: args replaced with null
Mutant 1089 in q.js: args replaced with 1
Mutant 1090 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1091 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.notify, op, args)
Mutant 1092 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.cancel, op, args)
Mutant 1093 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1094 in q.js: deferred.resolve replaced with deferred.promise.then(() => {
  throw new Error("Some custom error");
})
Mutant 1095 in q.js: deferred.resolve replaced with deferred.promise.then(() => {
  return;
})
Mutant 1096 in q.js: op replaced with op + 1
Mutant 1097 in q.js: op replaced with op * 2
Mutant 1098 in q.js: op replaced with op.toUpperCase()
Mutant 1099 in q.js: args replaced with null
Mutant 1100 in q.js: args replaced with void 0
Mutant 1101 in q.js: args replaced with []
Mutant 1102 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("get", [X])
Mutant 1103 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("get", [key, key + 1])
Mutant 1104 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, value])
Mutant 1105 in q.js: Q replaced with void 0
Mutant 1106 in q.js: Q replaced with this
Mutant 1107 in q.js: object replaced with object + 1
Mutant 1108 in q.js: object replaced with undefined
Mutant 1109 in q.js: object replaced with null
Mutant 1110 in q.js: "get" replaced with "set"
Mutant 1111 in q.js: "get" replaced with "del"
Mutant 1112 in q.js: "get" replaced with "when"
Mutant 1113 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key, Q(null)])
Mutant 1114 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key, Q.reject(new Error("Test error"))])
Mutant 1115 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("mapply", [key])
Mutant 1116 in q.js: this.dispatch replaced with Q.delay
Mutant 1117 in q.js: this.dispatch replaced with Q.timeout
Mutant 1118 in q.js: this.dispatch replaced with Q.sendTo
Mutant 1119 in q.js: "get" replaced with "set"
Mutant 1120 in q.js: "get" replaced with "invoke"
Mutant 1121 in q.js: [key] replaced with [key, value]
Mutant 1122 in q.js: [key] replaced with "property"
Mutant 1123 in q.js: [key] replaced with null
Mutant 1124 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1125 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("get", [key])
Mutant 1126 in q.js: object replaced with null
Mutant 1127 in q.js: object replaced with object.length
Mutant 1128 in q.js: object replaced with {
  a: 1
}
Mutant 1129 in q.js: "set" replaced with "size"
Mutant 1130 in q.js: "set" replaced with "length"
Mutant 1131 in q.js: "set" replaced with "push"
Mutant 1132 in q.js: [key, value] replaced with [value]
Mutant 1133 in q.js: [key, value] replaced with [key, value, undefined]
Mutant 1134 in q.js: [key, value] replaced with [value, key]
Mutant 1135 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1136 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1137 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [random.next(), key])
Mutant 1138 in q.js: this.dispatch replaced with this.reject
Mutant 1139 in q.js: "set" replaced with "set!"
Mutant 1140 in q.js: "set" replaced with "foo"
Mutant 1141 in q.js: "set" replaced with "set" + "!"
Mutant 1142 in q.js: [key, value] replaced with [key]
Mutant 1143 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1144 in q.js: [key, value] replaced with [key, null]
Mutant 1145 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1146 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("foo", [key])
Mutant 1147 in q.js: object replaced with null
Mutant 1148 in q.js: object replaced with true
Mutant 1149 in q.js: "delete" replaced with "remove"
Mutant 1150 in q.js: "delete" replaced with "set"
Mutant 1151 in q.js: "delete" replaced with "get"
Mutant 1152 in q.js: [key] replaced with [value]
Mutant 1153 in q.js: [key] replaced with [key + "xyz"]
Mutant 1154 in q.js: [key] replaced with [undefined]
Mutant 1155 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("plus", [key])
Mutant 1156 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("increment", [key])
Mutant 1157 in q.js: this.dispatch replaced with null
Mutant 1158 in q.js: this.dispatch replaced with 42
Mutant 1159 in q.js: this.dispatch replaced with false
Mutant 1160 in q.js: "delete" replaced with "post"
Mutant 1161 in q.js: "delete" replaced with "put"
Mutant 1162 in q.js: "delete" replaced with "remove"
Mutant 1163 in q.js: [key] replaced with [undefined]
Mutant 1164 in q.js: [key] replaced with [""]
Mutant 1165 in q.js: [key] replaced with [Math.random()]
Mutant 1166 in q.js: Q replaced with null
Mutant 1167 in q.js: object replaced with null
Mutant 1168 in q.js: object replaced with void 0
Mutant 1169 in q.js: object replaced with false
Mutant 1170 in q.js: "post" replaced with "get"
Mutant 1171 in q.js: "post" replaced with "length"
Mutant 1172 in q.js: "post" replaced with 1
Mutant 1173 in q.js: [name, args] replaced with null
Mutant 1174 in q.js: [name, args] replaced with [name, args[0]]
Mutant 1175 in q.js: [name, args] replaced with [name, args[1]]
Mutant 1176 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args[0]])
Mutant 1177 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args[0], name])
Mutant 1178 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", args)
Mutant 1179 in q.js: this.dispatch replaced with null
Mutant 1180 in q.js: this.dispatch replaced with undefined
Mutant 1181 in q.js: this.dispatch replaced with !this.dispatch
Mutant 1182 in q.js: "post" replaced with "put"
Mutant 1183 in q.js: "post" replaced with "SET"
Mutant 1184 in q.js: "post" replaced with undefined
Mutant 1185 in q.js: [name, args] replaced with [null, args]
Mutant 1186 in q.js: [name, args] replaced with [args, name]
Mutant 1187 in q.js: [name, args] replaced with [args[0], args]
Mutant 1188 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("send"[(name, args)])
Mutant 1189 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("fapply"[array_slice(arguments, 2)])
Mutant 1190 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("__noSuchMethod__"[(name, array_slice(arguments, 2))])
Mutant 1191 in q.js: object replaced with doStuff
Mutant 1192 in q.js: object replaced with object.something
Mutant 1193 in q.js: object replaced with Promise.resolve(object)
Mutant 1194 in q.js: "post" replaced with "get"
Mutant 1195 in q.js: "post" replaced with "set"
Mutant 1196 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1197 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 3)]
Mutant 1198 in q.js: [name, array_slice(arguments, 2)] replaced with ["foo", array_slice(arguments, 2)]
Mutant 1199 in q.js: arguments replaced with 'String'
Mutant 1200 in q.js: arguments replaced with 0
Mutant 1201 in q.js: arguments replaced with null
Mutant 1202 in q.js: 2 replaced with -1
Mutant 1203 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("send", [name, array_slice(arguments, 1)])
Mutant 1204 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1205 in q.js: this.dispatch replaced with fapply
Mutant 1206 in q.js: this.dispatch replaced with get
Mutant 1207 in q.js: this.dispatch replaced with post
Mutant 1208 in q.js: [name, array_slice(arguments, 1)] replaced with [arguments]
Mutant 1209 in q.js: [name, array_slice(arguments, 1)] replaced with [this, args, 1]
Mutant 1210 in q.js: [name, array_slice(arguments, 1)] replaced with [this, args.slice(1)]
Mutant 1211 in q.js: array_slice(arguments, 1) replaced with array_slice([0])
Mutant 1212 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 0, 1))
Mutant 1213 in q.js: array_slice(arguments, 1) replaced with array_slice(promises[0])
Mutant 1214 in q.js: arguments replaced with null
Mutant 1215 in q.js: arguments replaced with []
Mutant 1216 in q.js: arguments replaced with function () {}
Mutant 1217 in q.js: 1 replaced with 0
Mutant 1218 in q.js: 1 replaced with arguments.length - 1
Mutant 1219 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1220 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [args, void 0])
Mutant 1221 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [args, void 0])
Mutant 1222 in q.js: object replaced with null
Mutant 1223 in q.js: object replaced with `hello`
Mutant 1224 in q.js: [void 0, args] replaced with [args, void 0]
Mutant 1225 in q.js: [void 0, args] replaced with [args, null]
Mutant 1226 in q.js: [void 0, args] replaced with [undefined, args]
Mutant 1227 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args])
Mutant 1228 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [promise, args])
Mutant 1229 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [this, args])
Mutant 1230 in q.js: "apply" replaced with "applyAsync"
Mutant 1231 in q.js: "apply" replaced with "call"
Mutant 1232 in q.js: "apply" replaced with "mixins"
Mutant 1233 in q.js: [void 0, args] replaced with [null, args]
Mutant 1234 in q.js: [void 0, args] replaced with [void 0, args, 0]
Mutant 1235 in q.js: [void 0, args] replaced with [args[0], args.slice(1)]
Mutant 1236 in q.js: object replaced with "dummy"
Mutant 1237 in q.js: "apply" replaced with 'call'
Mutant 1238 in q.js: "apply" replaced with 'bind'
Mutant 1239 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments)]
Mutant 1240 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, []]
Mutant 1241 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1242 in q.js: array_slice(arguments, 1) replaced with array_slice([...arguments, 1])
Mutant 1243 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1244 in q.js: arguments replaced with array_slice(arguments[1])
Mutant 1245 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 1246 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1247 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, arguments])
Mutant 1248 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("call", [this, arguments])
Mutant 1249 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("bind", [this, arguments])
Mutant 1250 in q.js: this.dispatch replaced with null
Mutant 1251 in q.js: this.dispatch replaced with undefined
Mutant 1252 in q.js: this.dispatch replaced with "hello world"
Mutant 1253 in q.js: "apply" replaced with "call"
Mutant 1254 in q.js: "apply" replaced with "bind"
Mutant 1255 in q.js: "apply" replaced with "length"
Mutant 1256 in q.js: [void 0, array_slice(arguments)] replaced with [this, array_slice(arguments)]
Mutant 1257 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1258 in q.js: [void 0, array_slice(arguments)] replaced with [promise, array_slice(arguments, 1)]
Mutant 1259 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1260 in q.js: arguments replaced with array_slice(promises, 1)
Mutant 1261 in q.js: Q replaced with Q.promise
Mutant 1262 in q.js: Q replaced with Q.defer
Mutant 1263 in q.js: Q replaced with Q.resolve
Mutant 1264 in q.js: object replaced with undefined
Mutant 1265 in q.js: object replaced with null
Mutant 1266 in q.js: object replaced with `true`
Mutant 1267 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1268 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1269 in q.js: arguments replaced with args
Mutant 1270 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1271 in q.js: arguments replaced with arguments.slice(1)
Mutant 1272 in q.js: 1 replaced with 2
Mutant 1273 in q.js: 1 replaced with 3
Mutant 1274 in q.js: 1 replaced with 4
Mutant 1275 in q.js: args.concat replaced with void 0
Mutant 1276 in q.js: args.concat replaced with 42
Mutant 1277 in q.js: args.concat replaced with NaN
Mutant 1278 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1279 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1280 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1281 in q.js: arguments replaced with array_slice(arguments, 0, 0)
Mutant 1282 in q.js: arguments replaced with this.arguments
Mutant 1283 in q.js: arguments replaced with Number(arguments[0])
Mutant 1284 in q.js: array_slice replaced with [1, 2]
Mutant 1285 in q.js: array_slice replaced with "foo"
Mutant 1286 in q.js: arguments replaced with 0
Mutant 1287 in q.js: arguments replaced with promises
Mutant 1288 in q.js: arguments replaced with null
Mutant 1289 in q.js: args.concat replaced with void 0
Mutant 1290 in q.js: args.concat replaced with null
Mutant 1291 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1292 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1293 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1294 in q.js: arguments replaced with array_slice(arguments, 0)
Mutant 1295 in q.js: arguments replaced with arguments[0]
Mutant 1296 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1297 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("length", [])
Mutant 1298 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("indexOf", [])
Mutant 1299 in q.js: object replaced with object[Math.random()]
Mutant 1300 in q.js: object replaced with object[object.length]
Mutant 1301 in q.js: object replaced with object["" + Math.random()]
Mutant 1302 in q.js: "keys" replaced with "valueOf"
Mutant 1303 in q.js: "keys" replaced with "toString"
Mutant 1304 in q.js: "keys" replaced with "length"
Mutant 1305 in q.js: [] replaced with [function foo() {
  return "bar";
}]
Mutant 1306 in q.js: [] replaced with ["key1", "key2", "key3"]
Mutant 1307 in q.js: [] replaced with ["key1", "key2", "key3", "key4"]
Mutant 1308 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1309 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length")
Mutant 1310 in q.js: this.dispatch("keys", []) replaced with this.dispatch("unknownProperty")
Mutant 1311 in q.js: "keys" replaced with "values"
Mutant 1312 in q.js: "keys" replaced with "getOwnPropertyNames"
Mutant 1313 in q.js: "keys" replaced with "getOwnPropertySymbols"
Mutant 1314 in q.js: [] replaced with [1, 2, 3]
Mutant 1315 in q.js: [] replaced with [[]]
Mutant 1316 in q.js: [] replaced with ["foo"]
Mutant 1317 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state == "rejected"
Mutant 1318 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state == "pending"
Mutant 1319 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().value != promise.inspect().value
Mutant 1320 in q.js: isPromise replaced with promise != null
Mutant 1321 in q.js: promise replaced with Q.inspect().state === "rejected"
Mutant 1322 in q.js: promise replaced with Q.inspect().state === "pending"
Mutant 1323 in q.js: promise replaced with Q.inspect().state === "undefined"
Mutant 1324 in q.js: promise.inspect replaced with promise.inspect.test
Mutant 1325 in q.js: promise.inspect replaced with promise.resolve
Mutant 1326 in q.js: promise.inspect replaced with promise.reject
Mutant 1327 in q.js: --pendingCount === 0 replaced with promises.length === 0
Mutant 1328 in q.js: --pendingCount === 0 replaced with index === promises.length - 1
Mutant 1329 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1330 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1331 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1332 in q.js: deferred.resolve replaced with deferred.promise.then
Mutant 1333 in q.js: deferred.notify replaced with deferred.notResolved
Mutant 1334 in q.js: deferred.notify replaced with Q.notResolved
Mutant 1335 in q.js: deferred.notify replaced with promise.notResolved
Mutant 1336 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + 1,
  value: progress - 1
}
Mutant 1337 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index * 2,
  value: progress / 2
}
Mutant 1338 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + Math.floor(Math.random() * 10),
  value: progress + Math.floor(Math.random() * 10)
}
Mutant 1339 in q.js: pendingCount === 0 replaced with pendingCount === 0 || promises.length === 0
Mutant 1340 in q.js: pendingCount === 0 replaced with pendingCount === 0 && promises.length > 0
Mutant 1341 in q.js: pendingCount === 0 replaced with pendingCount === 0 && promises.length === 0
Mutant 1342 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1343 in q.js: promises replaced with []
Mutant 1344 in q.js: promises replaced with null
Mutant 1345 in q.js: promises replaced with promises.concat()
Mutant 1346 in q.js: all replaced with none
Mutant 1347 in q.js: all replaced with reject
Mutant 1348 in q.js: all replaced with allSettled
Mutant 1349 in q.js: this replaced with [this, this]
Mutant 1350 in q.js: this replaced with [this, void 0]
Mutant 1351 in q.js: this replaced with [void 0, this]
Mutant 1352 in q.js: promises.length === 0 replaced with promises.size === 0
Mutant 1353 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1354 in q.js: promises.length === 0 replaced with !promises.length
Mutant 1355 in q.js: Q.resolve replaced with Q.reject
Mutant 1356 in q.js: Q.resolve replaced with Q.defer
Mutant 1357 in q.js: Q.resolve replaced with Q.notify
Mutant 1358 in q.js: Q.defer replaced with Q.defer["deferred"]
Mutant 1359 in q.js: Q.defer replaced with Q.defer.resolve
Mutant 1360 in q.js: Q.defer replaced with Q.defer.reject
Mutant 1361 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, rejector, onResolve, onProgress)
Mutant 1362 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected))
Mutant 1363 in q.js: promise replaced with null
Mutant 1364 in q.js: promise replaced with undefined
Mutant 1365 in q.js: promise replaced with promise.then(null, onRejected)
Mutant 1366 in q.js: onFulfilled replaced with onRejected
Mutant 1367 in q.js: onFulfilled replaced with any
Mutant 1368 in q.js: onFulfilled replaced with allSettled
Mutant 1369 in q.js: onRejected replaced with onFulfilled
Mutant 1370 in q.js: onRejected replaced with undefined
Mutant 1371 in q.js: onProgress replaced with null
Mutant 1372 in q.js: onProgress replaced with onRejected
Mutant 1373 in q.js: onProgress replaced with onFulfilled
Mutant 1374 in q.js: result replaced with snapshot.err
Mutant 1375 in q.js: result replaced with promise.inspect().err
Mutant 1376 in q.js: result replaced with deferred.resolve(undefined)
Mutant 1377 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1378 in q.js: pendingCount === 0 replaced with pendingCount < promises.length
Mutant 1379 in q.js: pendingCount === 0 replaced with pendingCount % promises.length === 0
Mutant 1380 in q.js: deferred.reject replaced with deferred.notify
Mutant 1381 in q.js: deferred.reject replaced with deferred.jure
Mutant 1382 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1383 in q.js: rejection replaced with undefined
Mutant 1384 in q.js: rejection replaced with Promise.reject("Test")
Mutant 1385 in q.js: any replaced with none
Mutant 1386 in q.js: this replaced with any([])
Mutant 1387 in q.js: this replaced with void 0
Mutant 1388 in q.js: this replaced with 1
Mutant 1389 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(Q.allSettled)
Mutant 1390 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate("allSettled")
Mutant 1391 in q.js: allResolved replaced with all
Mutant 1392 in q.js: allResolved replaced with Q.all
Mutant 1393 in q.js: allResolved replaced with Promise.all
Mutant 1394 in q.js: "allResolved" replaced with "allSettled"
Mutant 1395 in q.js: "allResolved" replaced with "any"
Mutant 1396 in q.js: "allResolved" replaced with "all"
Mutant 1397 in q.js: "allSettled" replaced with "allFulfilled"
Mutant 1398 in q.js: "allSettled" replaced with "allResolved"
Mutant 1399 in q.js: "allSettled" replaced with "any"
Mutant 1400 in q.js: array_map(promises, Q) replaced with array_map(promises[0], Q)
Mutant 1401 in q.js: array_map(promises, Q) replaced with array_map(promises[2], Q)
Mutant 1402 in q.js: array_map(promises, Q) replaced with array_map(promises, promise)
Mutant 1403 in q.js: array_map replaced with array_reduce
Mutant 1404 in q.js: array_map replaced with array_filter
Mutant 1405 in q.js: array_map replaced with array_sort
Mutant 1406 in q.js: promises replaced with promises.slice(index, 1)
Mutant 1407 in q.js: promises replaced with promises.replace(promise, undefined)
Mutant 1408 in q.js: promises replaced with promises.filter(function (item) {
  return item !== promise;
})
Mutant 1409 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop))
Mutant 1410 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).catch(noop))
Mutant 1411 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop).then(noop, noop).catch(noop))
Mutant 1412 in q.js: promise replaced with promises[1]
Mutant 1413 in q.js: promise replaced with promises[0]
Mutant 1414 in q.js: promise replaced with null
Mutant 1415 in q.js: noop replaced with deferred.reject
Mutant 1416 in q.js: noop replaced with my_function('arg')
Mutant 1417 in q.js: noop replaced with Q.reject
Mutant 1418 in q.js: noop replaced with Q.reject
Mutant 1419 in q.js: allResolved replaced with allSettled
Mutant 1420 in q.js: allResolved replaced with any
Mutant 1421 in q.js: this replaced with Q.resolve(promises)
Mutant 1422 in q.js: this replaced with Q.reject(promises)
Mutant 1423 in q.js: Q replaced with Q.then
Mutant 1424 in q.js: promise.inspect replaced with promise.inspect.value
Mutant 1425 in q.js: promise.inspect replaced with promise.value
Mutant 1426 in q.js: promise.then(regardless, regardless) replaced with promise.then(x => x)
Mutant 1427 in q.js: promise.then(regardless, regardless) replaced with promise.then(undefined)
Mutant 1428 in q.js: promise.then(regardless, regardless) replaced with promise.then(null)
Mutant 1429 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 1, rejected)
Mutant 1430 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void rejected, undefined)
Mutant 1431 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void myFunction(), undefined)
Mutant 1432 in q.js: object replaced with null
Mutant 1433 in q.js: object replaced with new Promise()
Mutant 1434 in q.js: void 0 replaced with function (error) {
  throw new Error("Testing 123");
}
Mutant 1435 in q.js: void 0 replaced with function (error) {
  error.message = "Testing 123";
  throw error;
}
Mutant 1436 in q.js: void 0 replaced with function (error) {
  throw new Error("Testing 123", {
    cause: error
  });
}
Mutant 1437 in q.js: rejected replaced with promise.throw
Mutant 1438 in q.js: rejected replaced with promise["throw"]
Mutant 1439 in q.js: rejected replaced with Q.reject(promise)
Mutant 1440 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1441 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1442 in q.js: this.then replaced with this.reject
Mutant 1443 in q.js: this.then replaced with this.notify
Mutant 1444 in q.js: this.then replaced with this.all
Mutant 1445 in q.js: void 0 replaced with null
Mutant 1446 in q.js: void 0 replaced with undefined
Mutant 1447 in q.js: void 0 replaced with true
Mutant 1448 in q.js: rejected replaced with rejected || "promise was rejected"
Mutant 1449 in q.js: rejected replaced with rejected && "promise was rejected"
Mutant 1450 in q.js: rejected replaced with rejected + "promise was rejected"
Mutant 1451 in q.js: object replaced with undefined
Mutant 1452 in q.js: object replaced with null
Mutant 1453 in q.js: void 0 replaced with 0
Mutant 1454 in q.js: void 0 replaced with null
Mutant 1455 in q.js: void 0 replaced with NaN
Mutant 1456 in q.js: void 0 replaced with null
Mutant 1457 in q.js: void 0 replaced with undefined
Mutant 1458 in q.js: void 0 replaced with 0
Mutant 1459 in q.js: this.then(void 0, void 0, progressed) replaced with this.then("null", "null", progressed)
Mutant 1460 in q.js: this.then(void 0, void 0, progressed) replaced with this.then("undefined", "undefined", progressed)
Mutant 1461 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1462 in q.js: this.then replaced with this.catch
Mutant 1463 in q.js: void 0 replaced with 12345
Mutant 1464 in q.js: void 0 replaced with null
Mutant 1465 in q.js: void 0 replaced with undefined
Mutant 1466 in q.js: void 0 replaced with null
Mutant 1467 in q.js: void 0 replaced with undefined
Mutant 1468 in q.js: progressed replaced with void 0
Mutant 1469 in q.js: progressed replaced with !this
Mutant 1470 in q.js: object replaced with Q.reject(object)
Mutant 1471 in q.js: object replaced with Q.defer().promise
Mutant 1472 in q.js: object replaced with object + 1
Mutant 1473 in q.js: callback replaced with undefined
Mutant 1474 in q.js: callback replaced with null
Mutant 1475 in q.js: callback replaced with {}
Mutant 1476 in q.js: !callback || typeof callback.apply !== "function" replaced with callback === null
Mutant 1477 in q.js: !callback || typeof callback.apply !== "function" replaced with typeof callback !== "function"
Mutant 1478 in q.js: !callback || typeof callback.apply !== "function" replaced with !callback.apply
Mutant 1479 in q.js: Q replaced with 0
Mutant 1480 in q.js: callback replaced with "callback"
Mutant 1481 in q.js: callback replaced with callback()
Mutant 1482 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1483 in q.js: object replaced with null
Mutant 1484 in q.js: object replaced with undefined
Mutant 1485 in q.js: object replaced with new Error()
Mutant 1486 in q.js: fulfilled replaced with rejected
Mutant 1487 in q.js: fulfilled replaced with progressed
Mutant 1488 in q.js: fulfilled replaced with new Error('Oops!')
Mutant 1489 in q.js: rejected replaced with rejected(new Error("Some error"))
Mutant 1490 in q.js: rejected replaced with resolved
Mutant 1491 in q.js: progress replaced with void 0
Mutant 1492 in q.js: progress replaced with () => {
  throw new Error("test");
}
Mutant 1493 in q.js: progress replaced with () => {
  return 2;
}
Mutant 1494 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, null)
Mutant 1495 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong("error")
Mutant 1496 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(null)
Mutant 1497 in q.js: error replaced with error + 1
Mutant 1498 in q.js: error replaced with null
Mutant 1499 in q.js: error replaced with true
Mutant 1500 in q.js: promise replaced with undefined
Mutant 1501 in q.js: promise replaced with false
Mutant 1502 in q.js: promise replaced with 0
Mutant 1503 in q.js: Q.onerror replaced with Q.finally
Mutant 1504 in q.js: Q.onerror replaced with Q.catch
Mutant 1505 in q.js: Q.onerror replaced with Q.reject
Mutant 1506 in q.js: Q.onerror replaced with Q.fcall
Mutant 1507 in q.js: Q.onerror replaced with Q.makePromise
Mutant 1508 in q.js: error replaced with error.message
Mutant 1509 in q.js: error replaced with new Error(error)
Mutant 1510 in q.js: error replaced with error.stack
Mutant 1511 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected)
Mutant 1512 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, ProgressTracker)
Mutant 1513 in q.js: this.then replaced with "resolved"
Mutant 1514 in q.js: this.then replaced with 1234
Mutant 1515 in q.js: this.then replaced with null
Mutant 1516 in q.js: fulfilled replaced with rejected
Mutant 1517 in q.js: rejected replaced with rejected.promise
Mutant 1518 in q.js: rejected replaced with error
Mutant 1519 in q.js: rejected replaced with undefined
Mutant 1520 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError(), null)
Mutant 1521 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(onUnhandledError.call(null, error))
Mutant 1522 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(Q.reject(error))
Mutant 1523 in q.js: void 0 replaced with true
Mutant 1524 in q.js: void 0 replaced with null
Mutant 1525 in q.js: void 0 replaced with !false
Mutant 1526 in q.js: onUnhandledError replaced with Q.reject(error)
Mutant 1527 in q.js: onUnhandledError replaced with Q.lua.error(error)
Mutant 1528 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(-ms, error)
Mutant 1529 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(error, ms)
Mutant 1530 in q.js: object replaced with void 0
Mutant 1531 in q.js: object replaced with null
Mutant 1532 in q.js: object replaced with "object"
Mutant 1533 in q.js: ms replaced with 0
Mutant 1534 in q.js: ms replaced with null
Mutant 1535 in q.js: ms replaced with undefined
Mutant 1536 in q.js: error replaced with NaN
Mutant 1537 in q.js: error replaced with "ERROR"
Mutant 1538 in q.js: error replaced with new Error("Error")
Mutant 1539 in q.js: !error || "string" === typeof error replaced with !error || error.message === "string"
Mutant 1540 in q.js: !error || "string" === typeof error replaced with error.code === "ETIMEDOUT"
Mutant 1541 in q.js: deferred.reject replaced with promise.reject
Mutant 1542 in q.js: deferred.reject replaced with Q.reject
Mutant 1543 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1544 in q.js: error replaced with 1
Mutant 1545 in q.js: error replaced with undefined
Mutant 1546 in q.js: error replaced with {}
Mutant 1547 in q.js: clearTimeout replaced with undefined
Mutant 1548 in q.js: clearTimeout replaced with null
Mutant 1549 in q.js: clearTimeout replaced with true
Mutant 1550 in q.js: timeoutId replaced with null
Mutant 1551 in q.js: timeoutId replaced with "timeoutId"
Mutant 1552 in q.js: timeoutId replaced with timeoutId + 1
Mutant 1553 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1554 in q.js: value replaced with null
Mutant 1555 in q.js: value replaced with undefined
Mutant 1556 in q.js: value replaced with function () {
  throw new Error("Buggy code fragment");
}()
Mutant 1557 in q.js: clearTimeout replaced with clearInterval
Mutant 1558 in q.js: timeoutId replaced with "foo"
Mutant 1559 in q.js: timeoutId replaced with 3.14
Mutant 1560 in q.js: timeoutId replaced with null
Mutant 1561 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1562 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1563 in q.js: timeout === void 0 replaced with timeout > 0
Mutant 1564 in q.js: timeout === void 0 replaced with Date.now() - timeout
Mutant 1565 in q.js: object replaced with undefined
Mutant 1566 in q.js: object replaced with null
Mutant 1567 in q.js: object replaced with 0
Mutant 1568 in q.js: timeout replaced with 0
Mutant 1569 in q.js: timeout replaced with null
Mutant 1570 in q.js: timeout replaced with Infinity
Mutant 1571 in q.js: defer replaced with new Deferred()
Mutant 1572 in q.js: defer replaced with undefined
Mutant 1573 in q.js: defer replaced with null
Mutant 1574 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1575 in q.js: deferred.resolve replaced with undefined
Mutant 1576 in q.js: deferred.resolve replaced with console.log
Mutant 1577 in q.js: value replaced with null
Mutant 1578 in q.js: value replaced with undefined
Mutant 1579 in q.js: value replaced with NaN
Mutant 1580 in q.js: callback replaced with undefined
Mutant 1581 in q.js: callback replaced with null
Mutant 1582 in q.js: callback replaced with function () {}
Mutant 1583 in q.js: args replaced with "foo"
Mutant 1584 in q.js: args replaced with null
Mutant 1585 in q.js: args replaced with 0
Mutant 1586 in q.js: args replaced with array_slice(args, 0, -1)
Mutant 1587 in q.js: args replaced with [args.length, 0]
Mutant 1588 in q.js: args replaced with args.slice(0, -2)
Mutant 1589 in q.js: nodeArgs.push replaced with deferred.resolve
Mutant 1590 in q.js: nodeArgs.push replaced with null
Mutant 1591 in q.js: deferred.makeNodeResolver() replaced with deferred.reject.apply(deferred, arguments)
Mutant 1592 in q.js: deferred.makeNodeResolver() replaced with deferred.notify.apply(deferred, arguments)
Mutant 1593 in q.js: deferred.makeNodeResolver() replaced with void 0
Mutant 1594 in q.js: deferred.makeNodeResolver replaced with undefined
Mutant 1595 in q.js: deferred.makeNodeResolver replaced with 1
Mutant 1596 in q.js: nodeArgs replaced with Q(null)
Mutant 1597 in q.js: nodeArgs replaced with function () {}
Mutant 1598 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1599 in q.js: deferred.reject replaced with deferred.notify("Custom notification message")
Mutant 1600 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1601 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.splice(1))
Mutant 1602 in q.js: array_slice replaced with []
Mutant 1603 in q.js: array_slice replaced with "PLACEHOLDER"
Mutant 1604 in q.js: array_slice replaced with null
Mutant 1605 in q.js: arguments replaced with null
Mutant 1606 in q.js: arguments replaced with undefined
Mutant 1607 in q.js: arguments replaced with []
Mutant 1608 in q.js: 1 replaced with 0
Mutant 1609 in q.js: 1 replaced with 2
Mutant 1610 in q.js: 1 replaced with null
Mutant 1611 in q.js: callback replaced with null
Mutant 1612 in q.js: callback replaced with undefined
Mutant 1613 in q.js: callback replaced with []
Mutant 1614 in q.js: array_slice replaced with !array_slice
Mutant 1615 in q.js: arguments replaced with null
Mutant 1616 in q.js: arguments replaced with [1]
Mutant 1617 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1618 in q.js: deferred.makeNodeResolver() replaced with () => undefined
Mutant 1619 in q.js: deferred.makeNodeResolver() replaced with () => {
  throw new Error("Testing");
}
Mutant 1620 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1621 in q.js: deferred.reject replaced with deferred.notify
Mutant 1622 in q.js: deferred.reject replaced with deferred.fuusing
Mutant 1623 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1624 in q.js: callback === undefined replaced with typeof callback !== "function"
Mutant 1625 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments)
Mutant 1626 in q.js: array_slice(arguments, 1) replaced with array_slice(unescape(arguments))
Mutant 1627 in q.js: array_slice(arguments, 1) replaced with array_slice(clip(arguments))
Mutant 1628 in q.js: array_slice replaced with array_slice.call
Mutant 1629 in q.js: array_slice replaced with Array.prototype.slice.call
Mutant 1630 in q.js: array_slice replaced with [].slice.call
Mutant 1631 in q.js: arguments replaced with args + []
Mutant 1632 in q.js: arguments replaced with args[0]
Mutant 1633 in q.js: arguments replaced with args.reverse()
Mutant 1634 in q.js: 1 replaced with 2
Mutant 1635 in q.js: 1 replaced with 0
Mutant 1636 in q.js: 1 replaced with -1
Mutant 1637 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1638 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, arguments.length - 1)
Mutant 1639 in q.js: array_slice(arguments) replaced with array_slice(arguments, +Infinity)
Mutant 1640 in q.js: array_slice replaced with Q
Mutant 1641 in q.js: array_slice replaced with defer
Mutant 1642 in q.js: arguments replaced with null
Mutant 1643 in q.js: arguments replaced with "arguments"
Mutant 1644 in q.js: arguments replaced with () => arguments
Mutant 1645 in q.js: defer replaced with deffer
Mutant 1646 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeRejector
Mutant 1647 in q.js: deferred.makeNodeResolver replaced with this.createNodeResolver
Mutant 1648 in q.js: deferred.makeNodeResolver replaced with DELAY.makeNodeResolver
Mutant 1649 in q.js: callback replaced with 42
Mutant 1650 in q.js: callback replaced with null
Mutant 1651 in q.js: callback replaced with true
Mutant 1652 in q.js: nodeArgs replaced with null
Mutant 1653 in q.js: nodeArgs replaced with undefined
Mutant 1654 in q.js: nodeArgs replaced with [42]
Mutant 1655 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1656 in q.js: deferred.reject replaced with deferred.notify
Mutant 1657 in q.js: deferred.reject replaced with deferred.cancel
Mutant 1658 in q.js: array_slice replaced with Q.npost
Mutant 1659 in q.js: array_slice replaced with Q.post
Mutant 1660 in q.js: arguments replaced with args.slice(1)
Mutant 1661 in q.js: arguments replaced with args.concat(array_slice(arguments, 2))
Mutant 1662 in q.js: arguments replaced with args.assign(array_slice(arguments, 2))
Mutant 1663 in q.js: args.unshift replaced with args.push
Mutant 1664 in q.js: this replaced with Q
Mutant 1665 in q.js: this replaced with Promise.prototype
Mutant 1666 in q.js: this replaced with defer()
Mutant 1667 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(defer())
Mutant 1668 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(void 0, args.length)
Mutant 1669 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null, [])
Mutant 1670 in q.js: void 0 replaced with null
Mutant 1671 in q.js: void 0 replaced with undefined
Mutant 1672 in q.js: void 0 replaced with void null
Mutant 1673 in q.js: args replaced with array_slice(arguments, 2).concat(args)
Mutant 1674 in q.js: args replaced with Promise.resolve(args)
Mutant 1675 in q.js: args replaced with Q.reject(args)
Mutant 1676 in q.js: array_slice(arguments, 2) replaced with array_slice("Hello, world!")
Mutant 1677 in q.js: array_slice(arguments, 2) replaced with array_slice(null)
Mutant 1678 in q.js: array_slice(arguments, 2) replaced with array_slice(true)
Mutant 1679 in q.js: array_slice replaced with [1, 2, 3]
Mutant 1680 in q.js: array_slice replaced with null
Mutant 1681 in q.js: arguments replaced with null
Mutant 1682 in q.js: arguments replaced with undefined
Mutant 1683 in q.js: arguments replaced with arguments.length
Mutant 1684 in q.js: 2 replaced with 0
Mutant 1685 in q.js: 2 replaced with baseArgs.length - 1
Mutant 1686 in q.js: array_slice(arguments) replaced with array_slice(arguments).slice(-1)
Mutant 1687 in q.js: array_slice(arguments) replaced with array_slice(arguments).concat([null])
Mutant 1688 in q.js: array_slice(arguments) replaced with array_slice(arguments).reverse()
Mutant 1689 in q.js: array_slice replaced with undefined
Mutant 1690 in q.js: array_slice replaced with array_reverse
Mutant 1691 in q.js: arguments replaced with undefined
Mutant 1692 in q.js: arguments replaced with ' '
Mutant 1693 in q.js: arguments replaced with 42
Mutant 1694 in q.js: deferred.makeNodeResolver() replaced with deferred.reject()
Mutant 1695 in q.js: deferred.makeNodeResolver() replaced with deferred.resolve()
Mutant 1696 in q.js: deferred.makeNodeResolver() replaced with deferred.notify()
Mutant 1697 in q.js: deferred.makeNodeResolver replaced with deferred.makeNodeResolver2
Mutant 1698 in q.js: deferred.makeNodeResolver replaced with resolver.makeNodeResolver
Mutant 1699 in q.js: callback.apply replaced with callback.call
Mutant 1700 in q.js: thisp replaced with null
Mutant 1701 in q.js: thisp replaced with undefined
Mutant 1702 in q.js: thisp replaced with {}
Mutant 1703 in q.js: arguments replaced with array_slice(arguments)[(name, nodeArgs)]
Mutant 1704 in q.js: Q replaced with this
Mutant 1705 in q.js: Q replaced with null
Mutant 1706 in q.js: Q replaced with {}
Mutant 1707 in q.js: bound replaced with null
Mutant 1708 in q.js: bound replaced with undefined
Mutant 1709 in q.js: bound replaced with true
Mutant 1710 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1711 in q.js: deferred.reject replaced with doNothing()
Mutant 1712 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 2)
Mutant 1713 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments[1])
Mutant 1714 in q.js: array_slice(arguments, 0) replaced with array_slice(args.length)
Mutant 1715 in q.js: array_slice replaced with object
Mutant 1716 in q.js: 0 replaced with 1
Mutant 1717 in q.js: 0 replaced with -1
Mutant 1718 in q.js: 0 replaced with null
Mutant 1719 in q.js: args.unshift replaced with args.push
Mutant 1720 in q.js: args.unshift replaced with nodeArgs.unshift
Mutant 1721 in q.js: args.unshift replaced with this.nbind
Mutant 1722 in q.js: this replaced with undefined
Mutant 1723 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this)
Mutant 1724 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null)
Mutant 1725 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined)
Mutant 1726 in q.js: void 0 replaced with this
Mutant 1727 in q.js: void 0 replaced with !Q.isPromise(callback) ? this : callback
Mutant 1728 in q.js: void 0 replaced with null
Mutant 1729 in q.js: args replaced with [].concat(Array.prototype.slice.call(arguments, 2))
Mutant 1730 in q.js: Q replaced with Q.ninvoke
Mutant 1731 in q.js: name replaced with ""
Mutant 1732 in q.js: name replaced with "a"
Mutant 1733 in q.js: args replaced with 1 + args
Mutant 1734 in q.js: args replaced with array_slice(args, 1)
Mutant 1735 in q.js: args replaced with null
Mutant 1736 in q.js: args || [] replaced with undefined
Mutant 1737 in q.js: args || [] replaced with null
Mutant 1738 in q.js: args || [] replaced with []
Mutant 1739 in q.js: defer replaced with deferred
Mutant 1740 in q.js: deferred.makeNodeResolver() replaced with deferred.reject
Mutant 1741 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1742 in q.js: deferred.makeNodeResolver() replaced with () => deferred.reject(new Error('test'))
Mutant 1743 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("npost", [name, nodeArgs])
Mutant 1744 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("wrongPost", [name, nodeArgs])
Mutant 1745 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post__", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("npost", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("wrongPost", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post__", [name, nodeArgs])
Mutant 1746 in q.js: this.dispatch replaced with this.undefinedMethod
not replacing this.dispatch with this.undefinedMethod
not replacing this.dispatch with this.undefinedMethod
Mutant 1747 in q.js: "post" replaced with "get"
Mutant 1748 in q.js: "post" replaced with "HEAD"
Mutant 1749 in q.js: "post" replaced with "put"
Mutant 1750 in q.js: [name, nodeArgs] replaced with nodeArgs.push(name)
Mutant 1751 in q.js: [name, nodeArgs] replaced with nodeArgs.concat([name])
Mutant 1752 in q.js: [name, nodeArgs] replaced with [].concat(name, nodeArgs)
Mutant 1753 in q.js: deferred.reject replaced with deferred.resolve()
Mutant 1754 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1755 in q.js: deferred.reject replaced with deferred.reject('error')
Mutant 1756 in q.js: array_slice(arguments, 2) replaced with array_slice(nodeArgs.length)
Mutant 1757 in q.js: array_slice(arguments, 2) replaced with array_slice(nodeArgs[0])
Mutant 1758 in q.js: array_slice replaced with null
Mutant 1759 in q.js: array_slice replaced with undefined
Mutant 1760 in q.js: array_slice replaced with []
Mutant 1761 in q.js: arguments replaced with arguments.length
Mutant 1762 in q.js: arguments replaced with typeof arguments
Mutant 1763 in q.js: 2 replaced with 1
Mutant 1764 in q.js: 2 replaced with arguments.length + 1
Mutant 1765 in q.js: 2 replaced with Math.random() * 100
Mutant 1766 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1767 in q.js: nodeArgs.push replaced with nodeArgs.concat
Mutant 1768 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1769 in q.js: deferred.makeNodeResolver() replaced with () => deferred.makeNodeResolver()
Mutant 1770 in q.js: deferred.makeNodeResolver() replaced with "string"
Mutant 1771 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch(name)
Mutant 1772 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch(nodeArgs.length)
Mutant 1773 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch(!nodeArgs.length)
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch(name)
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch(nodeArgs.length)
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch(!nodeArgs.length)
Mutant 1774 in q.js: Q(object).dispatch replaced with this.dis
Mutant 1775 in q.js: Q(object).dispatch replaced with this.posts
Mutant 1776 in q.js: Q(object).dispatch replaced with Q.dis
not replacing Q(object).dispatch with this.dis
not replacing Q(object).dispatch with this.dis
not replacing Q(object).dispatch with this.posts
not replacing Q(object).dispatch with this.posts
not replacing Q(object).dispatch with Q.dis
not replacing Q(object).dispatch with Q.dis
Mutant 1777 in q.js: Q replaced with Q.when
Mutant 1778 in q.js: Q replaced with Q.delay
Mutant 1779 in q.js: Q replaced with Q.resolve
Mutant 1780 in q.js: object replaced with {}
Mutant 1781 in q.js: object replaced with Q.resolve({})
Mutant 1782 in q.js: object replaced with new Object()
Mutant 1783 in q.js: "post" replaced with "get"
Mutant 1784 in q.js: "post" replaced with "put"
Mutant 1785 in q.js: [name, nodeArgs] replaced with [name, arguments]
Mutant 1786 in q.js: [name, nodeArgs] replaced with [name, [nodeArgs, 1]]
Mutant 1787 in q.js: [name, nodeArgs] replaced with [name, {
  nodeArgs
}]
Mutant 1788 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1789 in q.js: deferred.reject replaced with null
Mutant 1790 in q.js: deferred.reject replaced with deferred.notify
Mutant 1791 in q.js: array_slice(arguments, 1) replaced with array_slice(2)
Mutant 1792 in q.js: array_slice(arguments, 1) replaced with array_slice(0)
Mutant 1793 in q.js: array_slice(arguments, 1) replaced with array_slice(this.name)
Mutant 1794 in q.js: arguments replaced with `captureLine()`
Mutant 1795 in q.js: arguments replaced with `Q.all()`
Mutant 1796 in q.js: arguments replaced with `nodeback`
Mutant 1797 in q.js: 1 replaced with 1 + Math.random() * 10
Mutant 1798 in q.js: 1 replaced with 1 - Math.random() * 10
Mutant 1799 in q.js: defer replaced with undefined
Mutant 1800 in q.js: defer replaced with null
Mutant 1801 in q.js: defer replaced with deferred.resolve
Mutant 1802 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1803 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1804 in q.js: deferred.makeNodeResolver() replaced with {
  "makeNodeResolver": function () {}
}
Mutant 1805 in q.js: deferred.makeNodeResolver replaced with a + b
Mutant 1806 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("dispatch", [name, nodeArgs])
Mutant 1807 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("push", [name, nodeArgs])
Mutant 1808 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("pop", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("dispatch", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("push", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("pop", [name, nodeArgs])
Mutant 1809 in q.js: this.dispatch replaced with Q.dispatch
Mutant 1810 in q.js: this.dispatch replaced with null.dispatch
not replacing this.dispatch with Q.dispatch
not replacing this.dispatch with Q.dispatch
not replacing this.dispatch with null.dispatch
not replacing this.dispatch with null.dispatch
Mutant 1811 in q.js: "post" replaced with "get"
Mutant 1812 in q.js: "post" replaced with "put"
Mutant 1813 in q.js: "post" replaced with "del"
Mutant 1814 in q.js: [name, nodeArgs] replaced with [name.substring(0, 1), nodeArgs]
Mutant 1815 in q.js: [name, nodeArgs] replaced with [name.length, nodeArgs]
Mutant 1816 in q.js: [name, nodeArgs] replaced with [name.toLowerCase(), nodeArgs]
Mutant 1817 in q.js: deferred.reject replaced with undefined
Mutant 1818 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1819 in q.js: deferred.reject replaced with Q.reject
Mutant 1820 in q.js: Q replaced with undefined
Mutant 1821 in q.js: object replaced with object.value()
Mutant 1822 in q.js: object replaced with object + 1
Mutant 1823 in q.js: object replaced with null
Mutant 1824 in q.js: nodeback replaced with nodeback.bind(null)
Mutant 1825 in q.js: nodeback replaced with () => nodeback()
Mutant 1826 in q.js: nodeback replaced with !nodeback
Mutant 1827 in q.js: nodeback replaced with nodeback()
Mutant 1828 in q.js: nodeback replaced with nodeback * 2
Mutant 1829 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1830 in q.js: nodeback(null, value) replaced with nodeback("", value)
Mutant 1831 in q.js: nodeback(null, value) replaced with nodeback(0, value)
Mutant 1832 in q.js: nodeback replaced with null
Mutant 1833 in q.js: null replaced with undefined
Mutant 1834 in q.js: null replaced with 0
Mutant 1835 in q.js: null replaced with "undefined"
Mutant 1836 in q.js: value replaced with 1 + value
Mutant 1837 in q.js: value replaced with value + 'Hello World'
Mutant 1838 in q.js: value replaced with value * 2
Mutant 1839 in q.js: error replaced with undefined
Mutant 1840 in q.js: error replaced with new Error("This is a different error")
Mutant 1841 in q.js: error replaced with null
Mutant 1842 in queue.js: Q.defer replaced with Q.resolve
Mutant 1843 in queue.js: Q.defer replaced with Q.reject
Mutant 1844 in queue.js: Q.defer replaced with {
  head: null,
  tail: null
}
Mutant 1845 in queue.js: Q.defer replaced with {
  head: 0,
  tail: 0
}
Mutant 1846 in queue.js: "head" replaced with "tail"
Mutant 1847 in queue.js: "head" replaced with ends.promise.get("tail")
Mutant 1848 in queue.js: "head" replaced with "close"
Mutant 1849 in queue.js: ends.promise.get replaced with ends.resolve
Mutant 1850 in queue.js: ends.promise.get replaced with ends.promise.then
Mutant 1851 in queue.js: ends.promise.get replaced with ends.reject
Mutant 1852 in queue.js: "tail" replaced with "tear"
Mutant 1853 in queue.js: "tail" replaced with "head"
Mutant 1854 in queue.js: "tail" replaced with "next"
Mutant 1855 in queue.js: closed.resolve replaced with closed.reject
Mutant 1856 in queue.js: closed.resolve replaced with Q.reject
Mutant 1857 in queue.js: error replaced with ends.reject(error)
Mutant 1858 in queue.js: error replaced with next.reject(error)
Mutant 1859 in queue.js: error replaced with closed.resolve(error)
Mutant 1860 in queue.js: Q.reject replaced with Q.resolve
Mutant 1861 in queue.js: error replaced with null
Mutant 1862 in queue.js: error replaced with 0
Mutant 1863 in queue.js: error replaced with NaN
Mutant 1864 in queue.js: ends.resolve replaced with ends.reject
Mutant 1865 in queue.js: ends.resolve replaced with closed.resolve
Mutant 1866 in queue.js: ends.resolve replaced with null
Mutant 1867 in queue.js: end replaced with end
[32m13:31:20 (3098) INFO Instrumenter[39m Instrumented 2 source file(s) with 1868 mutant(s)
[32m13:31:21 (3098) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m13:31:23 (3098) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m13:31:23 (3098) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m13:31:29 (3098) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6813 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 17m) 4/1868 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 4m) 5/1868 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 35m) 6/1868 tested (3 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 35m) 8/1868 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 52m) 9/1868 tested (6 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 48m) 11/1868 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 15m) 16/1868 tested (9 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 25m) 17/1868 tested (10 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 25m) 19/1868 tested (12 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 34m) 20/1868 tested (13 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 33m) 22/1868 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 40m) 23/1868 tested (16 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 39m) 25/1868 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 39m) 27/1868 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 50m) 27/1868 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 55m) 28/1868 tested (19 survived, 1 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 59m) 29/1868 tested (19 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 3m) 30/1868 tested (20 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 7m) 31/1868 tested (21 survived, 2 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 11m) 32/1868 tested (21 survived, 3 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 8m) 34/1868 tested (22 survived, 3 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 12m) 35/1868 tested (22 survived, 4 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 20m) 35/1868 tested (22 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 7m) 39/1868 tested (22 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 10m) 40/1868 tested (23 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 13m) 41/1868 tested (24 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 15m) 42/1868 tested (24 survived, 6 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 9m) 45/1868 tested (24 survived, 6 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 11m) 46/1868 tested (24 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 9m) 48/1868 tested (25 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 11m) 49/1868 tested (26 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 10m) 51/1868 tested (28 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 12m) 52/1868 tested (29 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 14m) 53/1868 tested (30 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 12m) 55/1868 tested (32 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 14m) 56/1868 tested (33 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 12m) 58/1868 tested (35 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 14m) 59/1868 tested (36 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 12m) 61/1868 tested (38 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 14m) 62/1868 tested (39 survived, 7 timed out)
Mutation testing 3% (elapsed: ~6m, remaining: ~3h 12m) 64/1868 tested (41 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 14m) 65/1868 tested (42 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 15m) 66/1868 tested (43 survived, 7 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 17m) 67/1868 tested (43 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 21m) 67/1868 tested (43 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 22m) 68/1868 tested (43 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 24m) 69/1868 tested (43 survived, 10 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 28m) 69/1868 tested (43 survived, 10 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 29m) 70/1868 tested (43 survived, 11 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 30m) 71/1868 tested (43 survived, 12 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 35m) 71/1868 tested (43 survived, 12 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 30m) 74/1868 tested (43 survived, 13 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 28m) 76/1868 tested (45 survived, 13 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 29m) 77/1868 tested (46 survived, 13 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 27m) 79/1868 tested (48 survived, 13 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 28m) 80/1868 tested (49 survived, 13 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 26m) 82/1868 tested (51 survived, 13 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 27m) 83/1868 tested (52 survived, 13 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 26m) 85/1868 tested (54 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 27m) 86/1868 tested (55 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 25m) 88/1868 tested (57 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 26m) 89/1868 tested (58 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 27m) 90/1868 tested (59 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 25m) 92/1868 tested (61 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 26m) 93/1868 tested (62 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 25m) 95/1868 tested (64 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 26m) 96/1868 tested (65 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 24m) 98/1868 tested (67 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 25m) 99/1868 tested (68 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 24m) 101/1868 tested (70 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 24m) 102/1868 tested (71 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 23m) 104/1868 tested (73 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 24m) 105/1868 tested (74 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 22m) 107/1868 tested (76 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 23m) 108/1868 tested (77 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 22m) 110/1868 tested (79 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 23m) 111/1868 tested (80 survived, 13 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 21m) 113/1868 tested (82 survived, 13 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 22m) 114/1868 tested (83 survived, 13 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 21m) 116/1868 tested (85 survived, 13 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 22m) 117/1868 tested (86 survived, 13 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 17m) 121/1868 tested (87 survived, 13 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 16m) 123/1868 tested (89 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 11m) 127/1868 tested (90 survived, 13 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 0m) 136/1868 tested (90 survived, 13 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~2h 59m) 138/1868 tested (90 survived, 13 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 0m) 139/1868 tested (90 survived, 14 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 1m) 140/1868 tested (91 survived, 14 timed out)
Mutation testing 7% (elapsed: ~14m, remaining: ~3h 0m) 142/1868 tested (93 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 0m) 143/1868 tested (94 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 0m) 145/1868 tested (96 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 0m) 146/1868 tested (97 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 0m) 148/1868 tested (99 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 0m) 149/1868 tested (100 survived, 14 timed out)
Mutation testing 8% (elapsed: ~15m, remaining: ~3h 0m) 151/1868 tested (102 survived, 14 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 0m) 152/1868 tested (103 survived, 14 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 59m) 154/1868 tested (105 survived, 14 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 0m) 155/1868 tested (106 survived, 14 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 59m) 157/1868 tested (108 survived, 14 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 0m) 158/1868 tested (109 survived, 14 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~2h 59m) 160/1868 tested (111 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 0m) 161/1868 tested (112 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 59m) 163/1868 tested (114 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 0m) 164/1868 tested (115 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 59m) 166/1868 tested (117 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~2h 59m) 167/1868 tested (118 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 0m) 168/1868 tested (119 survived, 14 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 59m) 170/1868 tested (121 survived, 14 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 0m) 171/1868 tested (122 survived, 14 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 59m) 173/1868 tested (124 survived, 14 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~3h 0m) 174/1868 tested (125 survived, 14 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 59m) 176/1868 tested (127 survived, 14 timed out)
Mutation testing 9% (elapsed: ~18m, remaining: ~2h 59m) 177/1868 tested (128 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 59m) 179/1868 tested (130 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 59m) 180/1868 tested (131 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 59m) 182/1868 tested (133 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 59m) 183/1868 tested (134 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 58m) 185/1868 tested (136 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~2h 59m) 186/1868 tested (137 survived, 14 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 58m) 188/1868 tested (139 survived, 14 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 59m) 189/1868 tested (140 survived, 14 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 58m) 191/1868 tested (142 survived, 14 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 58m) 192/1868 tested (143 survived, 14 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 58m) 194/1868 tested (145 survived, 14 timed out)
Mutation testing 10% (elapsed: ~20m, remaining: ~2h 58m) 195/1868 tested (146 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 58m) 197/1868 tested (148 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 58m) 198/1868 tested (149 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 57m) 200/1868 tested (151 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 58m) 201/1868 tested (152 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 58m) 202/1868 tested (153 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~2h 58m) 204/1868 tested (155 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~2h 58m) 205/1868 tested (156 survived, 14 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 57m) 207/1868 tested (158 survived, 14 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 58m) 208/1868 tested (159 survived, 14 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 57m) 210/1868 tested (161 survived, 14 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 58m) 211/1868 tested (162 survived, 14 timed out)
Mutation testing 11% (elapsed: ~22m, remaining: ~2h 57m) 213/1868 tested (164 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 57m) 214/1868 tested (165 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 57m) 216/1868 tested (167 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 57m) 217/1868 tested (168 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 56m) 219/1868 tested (170 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 57m) 220/1868 tested (171 survived, 14 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~2h 56m) 222/1868 tested (172 survived, 14 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 54m) 226/1868 tested (173 survived, 14 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 54m) 227/1868 tested (174 survived, 14 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 54m) 229/1868 tested (175 survived, 14 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 53m) 231/1868 tested (177 survived, 14 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 53m) 232/1868 tested (178 survived, 14 timed out)
Mutation testing 12% (elapsed: ~24m, remaining: ~2h 53m) 234/1868 tested (180 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 53m) 235/1868 tested (181 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 53m) 237/1868 tested (183 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 53m) 238/1868 tested (184 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 52m) 240/1868 tested (186 survived, 14 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~2h 53m) 241/1868 tested (187 survived, 14 timed out)
Mutation testing 13% (elapsed: ~25m, remaining: ~2h 52m) 243/1868 tested (189 survived, 14 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 53m) 244/1868 tested (190 survived, 14 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 52m) 246/1868 tested (192 survived, 14 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 52m) 247/1868 tested (193 survived, 14 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 52m) 249/1868 tested (195 survived, 14 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 52m) 250/1868 tested (196 survived, 14 timed out)
Mutation testing 13% (elapsed: ~26m, remaining: ~2h 52m) 252/1868 tested (198 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 253/1868 tested (199 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 254/1868 tested (200 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 256/1868 tested (202 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 257/1868 tested (203 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 51m) 259/1868 tested (205 survived, 14 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~2h 52m) 260/1868 tested (206 survived, 14 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 262/1868 tested (208 survived, 14 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 263/1868 tested (209 survived, 14 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 265/1868 tested (211 survived, 14 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 266/1868 tested (212 survived, 14 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 268/1868 tested (214 survived, 14 timed out)
Mutation testing 14% (elapsed: ~28m, remaining: ~2h 51m) 269/1868 tested (215 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 50m) 271/1868 tested (217 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 51m) 272/1868 tested (218 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 50m) 274/1868 tested (220 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 50m) 275/1868 tested (221 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 50m) 277/1868 tested (223 survived, 14 timed out)
Mutation testing 14% (elapsed: ~29m, remaining: ~2h 50m) 278/1868 tested (224 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~2h 50m) 280/1868 tested (226 survived, 14 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 50m) 281/1868 tested (227 survived, 14 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 49m) 283/1868 tested (229 survived, 14 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 50m) 284/1868 tested (230 survived, 14 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 50m) 285/1868 tested (231 survived, 14 timed out)
Mutation testing 15% (elapsed: ~30m, remaining: ~2h 49m) 287/1868 tested (233 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 50m) 288/1868 tested (234 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 290/1868 tested (236 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 291/1868 tested (237 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 293/1868 tested (239 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 294/1868 tested (240 survived, 14 timed out)
Mutation testing 15% (elapsed: ~31m, remaining: ~2h 49m) 296/1868 tested (242 survived, 14 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~2h 49m) 297/1868 tested (243 survived, 14 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 48m) 299/1868 tested (245 survived, 14 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 48m) 300/1868 tested (246 survived, 14 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 48m) 302/1868 tested (248 survived, 14 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 48m) 303/1868 tested (249 survived, 14 timed out)
Mutation testing 16% (elapsed: ~32m, remaining: ~2h 48m) 305/1868 tested (251 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 48m) 306/1868 tested (252 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 47m) 308/1868 tested (254 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 48m) 309/1868 tested (255 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 47m) 311/1868 tested (257 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 47m) 312/1868 tested (258 survived, 14 timed out)
Mutation testing 16% (elapsed: ~33m, remaining: ~2h 47m) 314/1868 tested (260 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 47m) 315/1868 tested (261 survived, 14 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 47m) 317/1868 tested (263 survived, 14 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 45m) 321/1868 tested (264 survived, 14 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 44m) 324/1868 tested (265 survived, 14 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 44m) 325/1868 tested (266 survived, 14 timed out)
Mutation testing 17% (elapsed: ~34m, remaining: ~2h 44m) 327/1868 tested (268 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 44m) 328/1868 tested (269 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 43m) 330/1868 tested (271 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 44m) 331/1868 tested (272 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 43m) 333/1868 tested (274 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 43m) 334/1868 tested (275 survived, 14 timed out)
Mutation testing 17% (elapsed: ~35m, remaining: ~2h 43m) 336/1868 tested (277 survived, 14 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 43m) 337/1868 tested (278 survived, 14 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 43m) 338/1868 tested (279 survived, 14 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 43m) 340/1868 tested (281 survived, 14 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 43m) 341/1868 tested (282 survived, 14 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 43m) 343/1868 tested (284 survived, 14 timed out)
Mutation testing 18% (elapsed: ~36m, remaining: ~2h 43m) 344/1868 tested (285 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 42m) 346/1868 tested (287 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 42m) 347/1868 tested (288 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 42m) 349/1868 tested (290 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 42m) 350/1868 tested (291 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 42m) 352/1868 tested (293 survived, 14 timed out)
Mutation testing 18% (elapsed: ~37m, remaining: ~2h 42m) 353/1868 tested (294 survived, 14 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 41m) 355/1868 tested (296 survived, 14 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 42m) 356/1868 tested (297 survived, 14 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 41m) 358/1868 tested (298 survived, 14 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 41m) 360/1868 tested (299 survived, 14 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 41m) 361/1868 tested (299 survived, 15 timed out)
Mutation testing 19% (elapsed: ~38m, remaining: ~2h 41m) 362/1868 tested (299 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 41m) 364/1868 tested (299 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 40m) 366/1868 tested (299 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 40m) 367/1868 tested (299 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 41m) 367/1868 tested (299 survived, 15 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 41m) 369/1868 tested (299 survived, 16 timed out)
Mutation testing 19% (elapsed: ~39m, remaining: ~2h 41m) 370/1868 tested (299 survived, 17 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 41m) 370/1868 tested (299 survived, 17 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 42m) 371/1868 tested (299 survived, 18 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 42m) 372/1868 tested (299 survived, 19 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 42m) 373/1868 tested (300 survived, 19 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 38m) 381/1868 tested (301 survived, 19 timed out)
Mutation testing 20% (elapsed: ~40m, remaining: ~2h 37m) 385/1868 tested (301 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 37m) 385/1868 tested (301 survived, 19 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 386/1868 tested (301 survived, 20 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 387/1868 tested (301 survived, 21 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 387/1868 tested (301 survived, 21 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 389/1868 tested (302 survived, 22 timed out)
Mutation testing 20% (elapsed: ~41m, remaining: ~2h 38m) 390/1868 tested (303 survived, 22 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 38m) 392/1868 tested (305 survived, 22 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 38m) 393/1868 tested (306 survived, 22 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 38m) 394/1868 tested (307 survived, 22 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 38m) 395/1868 tested (307 survived, 23 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 39m) 395/1868 tested (307 survived, 23 timed out)
Mutation testing 21% (elapsed: ~42m, remaining: ~2h 39m) 396/1868 tested (307 survived, 24 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 39m) 397/1868 tested (307 survived, 25 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 39m) 398/1868 tested (308 survived, 25 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 38m) 401/1868 tested (310 survived, 25 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 38m) 403/1868 tested (311 survived, 25 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 38m) 404/1868 tested (312 survived, 25 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 37m) 406/1868 tested (314 survived, 25 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 37m) 407/1868 tested (315 survived, 25 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 37m) 409/1868 tested (317 survived, 25 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 37m) 410/1868 tested (318 survived, 25 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 37m) 412/1868 tested (320 survived, 25 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 37m) 413/1868 tested (321 survived, 25 timed out)
Mutation testing 22% (elapsed: ~44m, remaining: ~2h 36m) 415/1868 tested (323 survived, 25 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 37m) 416/1868 tested (324 survived, 25 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 418/1868 tested (326 survived, 25 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 419/1868 tested (327 survived, 25 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 421/1868 tested (329 survived, 25 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 422/1868 tested (330 survived, 25 timed out)
Mutation testing 22% (elapsed: ~45m, remaining: ~2h 36m) 424/1868 tested (332 survived, 25 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 36m) 425/1868 tested (333 survived, 25 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 35m) 427/1868 tested (335 survived, 25 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 35m) 428/1868 tested (336 survived, 25 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 35m) 430/1868 tested (338 survived, 25 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 34m) 433/1868 tested (339 survived, 25 timed out)
Mutation testing 23% (elapsed: ~46m, remaining: ~2h 35m) 433/1868 tested (339 survived, 25 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 35m) 434/1868 tested (339 survived, 26 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 34m) 436/1868 tested (341 survived, 26 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 34m) 438/1868 tested (342 survived, 26 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 35m) 438/1868 tested (342 survived, 26 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 35m) 439/1868 tested (342 survived, 27 timed out)
Mutation testing 23% (elapsed: ~47m, remaining: ~2h 34m) 441/1868 tested (342 survived, 28 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 34m) 443/1868 tested (342 survived, 28 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 34m) 443/1868 tested (342 survived, 28 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 35m) 444/1868 tested (342 survived, 29 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 35m) 445/1868 tested (342 survived, 30 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 34m) 447/1868 tested (343 survived, 30 timed out)
Mutation testing 24% (elapsed: ~48m, remaining: ~2h 34m) 449/1868 tested (345 survived, 30 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 450/1868 tested (346 survived, 30 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 452/1868 tested (348 survived, 30 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 34m) 453/1868 tested (349 survived, 30 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 33m) 455/1868 tested (351 survived, 30 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 33m) 456/1868 tested (352 survived, 30 timed out)
Mutation testing 24% (elapsed: ~49m, remaining: ~2h 33m) 458/1868 tested (352 survived, 30 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 33m) 459/1868 tested (352 survived, 31 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 33m) 460/1868 tested (352 survived, 31 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 33m) 461/1868 tested (352 survived, 31 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 33m) 463/1868 tested (353 survived, 31 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 33m) 464/1868 tested (354 survived, 31 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 32m) 466/1868 tested (356 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 33m) 467/1868 tested (357 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 32m) 469/1868 tested (359 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 32m) 470/1868 tested (360 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 32m) 471/1868 tested (361 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 32m) 473/1868 tested (363 survived, 31 timed out)
Mutation testing 25% (elapsed: ~51m, remaining: ~2h 32m) 474/1868 tested (364 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 32m) 476/1868 tested (366 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 32m) 477/1868 tested (367 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 31m) 479/1868 tested (369 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 31m) 480/1868 tested (370 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 31m) 482/1868 tested (372 survived, 31 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 31m) 483/1868 tested (373 survived, 31 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 31m) 485/1868 tested (375 survived, 31 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 31m) 486/1868 tested (376 survived, 31 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 30m) 488/1868 tested (378 survived, 31 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 30m) 489/1868 tested (379 survived, 31 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 30m) 491/1868 tested (381 survived, 31 timed out)
Mutation testing 26% (elapsed: ~53m, remaining: ~2h 30m) 492/1868 tested (382 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 30m) 494/1868 tested (384 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 30m) 495/1868 tested (385 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 29m) 497/1868 tested (387 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 29m) 498/1868 tested (388 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 29m) 500/1868 tested (390 survived, 31 timed out)
Mutation testing 26% (elapsed: ~54m, remaining: ~2h 29m) 501/1868 tested (391 survived, 31 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 29m) 503/1868 tested (393 survived, 31 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 29m) 504/1868 tested (394 survived, 31 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 29m) 505/1868 tested (395 survived, 31 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 28m) 507/1868 tested (397 survived, 31 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 29m) 508/1868 tested (398 survived, 31 timed out)
Mutation testing 27% (elapsed: ~55m, remaining: ~2h 28m) 510/1868 tested (400 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 28m) 511/1868 tested (401 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 28m) 513/1868 tested (403 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 28m) 514/1868 tested (404 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 28m) 516/1868 tested (406 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 28m) 517/1868 tested (407 survived, 31 timed out)
Mutation testing 27% (elapsed: ~56m, remaining: ~2h 27m) 519/1868 tested (409 survived, 31 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 27m) 520/1868 tested (410 survived, 31 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 27m) 522/1868 tested (412 survived, 31 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 27m) 523/1868 tested (413 survived, 31 timed out)
Mutation testing 28% (elapsed: ~57m, remaining: ~2h 27m) 525/1868 tested (415 survived, 31 timed out)
Mutation testing 28% (elapsed: ~57m, remaining: ~2h 27m) 526/1868 tested (416 survived, 31 timed out)
Mutation testing 28% (elapsed: ~57m, remaining: ~2h 26m) 528/1868 tested (418 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 26m) 529/1868 tested (419 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 26m) 531/1868 tested (421 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 26m) 532/1868 tested (422 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 26m) 533/1868 tested (423 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 26m) 535/1868 tested (425 survived, 31 timed out)
Mutation testing 28% (elapsed: ~58m, remaining: ~2h 26m) 536/1868 tested (426 survived, 31 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 25m) 538/1868 tested (428 survived, 31 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 25m) 539/1868 tested (429 survived, 31 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 25m) 541/1868 tested (431 survived, 31 timed out)
Mutation testing 29% (elapsed: ~59m, remaining: ~2h 25m) 542/1868 tested (432 survived, 31 timed out)
Mutation testing 29% (elapsed: ~59m, remaining: ~2h 25m) 544/1868 tested (434 survived, 31 timed out)
Mutation testing 29% (elapsed: ~59m, remaining: ~2h 25m) 545/1868 tested (435 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 24m) 548/1868 tested (436 survived, 31 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 24m) 549/1868 tested (436 survived, 32 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 24m) 549/1868 tested (436 survived, 32 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 24m) 550/1868 tested (436 survived, 33 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 25m) 551/1868 tested (436 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 0m, remaining: ~2h 25m) 551/1868 tested (436 survived, 34 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 25m) 552/1868 tested (436 survived, 35 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 25m) 553/1868 tested (436 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 25m) 553/1868 tested (436 survived, 36 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 25m) 554/1868 tested (436 survived, 37 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 26m) 554/1868 tested (436 survived, 37 timed out)
Mutation testing 29% (elapsed: ~1h 1m, remaining: ~2h 26m) 555/1868 tested (436 survived, 38 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 26m) 556/1868 tested (436 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 25m) 558/1868 tested (438 survived, 39 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 25m) 559/1868 tested (439 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 25m) 561/1868 tested (441 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 25m) 562/1868 tested (442 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 2m, remaining: ~2h 25m) 564/1868 tested (444 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 25m) 565/1868 tested (445 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 25m) 566/1868 tested (446 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 24m) 568/1868 tested (448 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 23m) 572/1868 tested (449 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 24m) 572/1868 tested (449 survived, 39 timed out)
Mutation testing 30% (elapsed: ~1h 3m, remaining: ~2h 24m) 573/1868 tested (449 survived, 40 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 24m) 574/1868 tested (449 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 24m) 574/1868 tested (449 survived, 41 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 24m) 576/1868 tested (450 survived, 42 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 24m) 577/1868 tested (451 survived, 42 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 24m) 578/1868 tested (452 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 4m, remaining: ~2h 23m) 580/1868 tested (452 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 23m) 581/1868 tested (453 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 23m) 583/1868 tested (455 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 24m) 583/1868 tested (455 survived, 42 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 24m) 584/1868 tested (455 survived, 43 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 24m) 585/1868 tested (455 survived, 44 timed out)
Mutation testing 31% (elapsed: ~1h 5m, remaining: ~2h 24m) 585/1868 tested (455 survived, 44 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 24m) 586/1868 tested (455 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 24m) 586/1868 tested (455 survived, 45 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 24m) 587/1868 tested (455 survived, 46 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 24m) 589/1868 tested (455 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 24m) 590/1868 tested (455 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 24m) 591/1868 tested (455 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 24m) 592/1868 tested (455 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 24m) 592/1868 tested (455 survived, 47 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 24m) 593/1868 tested (455 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 24m) 594/1868 tested (455 survived, 48 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 24m) 595/1868 tested (455 survived, 49 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 24m) 596/1868 tested (456 survived, 49 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 24m) 597/1868 tested (457 survived, 49 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 24m) 598/1868 tested (457 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 24m) 599/1868 tested (457 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 24m) 601/1868 tested (459 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 24m) 602/1868 tested (460 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 8m, remaining: ~2h 24m) 602/1868 tested (460 survived, 50 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 24m) 603/1868 tested (460 survived, 51 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 24m) 604/1868 tested (460 survived, 52 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 604/1868 tested (460 survived, 52 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 605/1868 tested (460 survived, 53 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 606/1868 tested (460 survived, 54 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 25m) 606/1868 tested (460 survived, 54 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 607/1868 tested (460 survived, 55 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 608/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 608/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 609/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 610/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 25m) 611/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 612/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 612/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 613/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 614/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 615/1868 tested (460 survived, 56 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 616/1868 tested (460 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 617/1868 tested (460 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 619/1868 tested (462 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 620/1868 tested (463 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 622/1868 tested (465 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 622/1868 tested (465 survived, 56 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 623/1868 tested (465 survived, 57 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 624/1868 tested (465 survived, 58 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 624/1868 tested (465 survived, 58 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 625/1868 tested (465 survived, 59 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 626/1868 tested (465 survived, 60 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 26m) 626/1868 tested (465 survived, 60 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 628/1868 tested (465 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 628/1868 tested (465 survived, 61 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 629/1868 tested (465 survived, 62 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 630/1868 tested (465 survived, 63 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 630/1868 tested (465 survived, 63 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 631/1868 tested (465 survived, 64 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 632/1868 tested (465 survived, 65 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 632/1868 tested (465 survived, 65 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 633/1868 tested (465 survived, 66 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 634/1868 tested (465 survived, 67 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 635/1868 tested (466 survived, 67 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 636/1868 tested (466 survived, 68 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 636/1868 tested (466 survived, 68 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 637/1868 tested (466 survived, 69 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 638/1868 tested (466 survived, 70 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 638/1868 tested (466 survived, 70 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 639/1868 tested (466 survived, 71 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 640/1868 tested (466 survived, 72 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 27m) 640/1868 tested (466 survived, 72 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 641/1868 tested (466 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 641/1868 tested (466 survived, 73 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 642/1868 tested (466 survived, 74 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 643/1868 tested (466 survived, 75 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 645/1868 tested (468 survived, 75 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 27m) 646/1868 tested (469 survived, 75 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 648/1868 tested (471 survived, 75 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 649/1868 tested (472 survived, 75 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 651/1868 tested (474 survived, 75 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 652/1868 tested (475 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 18m, remaining: ~2h 26m) 654/1868 tested (477 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 18m, remaining: ~2h 25m) 655/1868 tested (478 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 25m) 656/1868 tested (479 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 25m) 658/1868 tested (481 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 25m) 659/1868 tested (482 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 25m) 661/1868 tested (484 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 25m) 662/1868 tested (485 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 24m) 664/1868 tested (487 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 24m) 665/1868 tested (488 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 24m) 667/1868 tested (490 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 24m) 668/1868 tested (491 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 23m) 670/1868 tested (493 survived, 75 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 23m) 671/1868 tested (494 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 20m, remaining: ~2h 23m) 673/1868 tested (496 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 23m) 674/1868 tested (497 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 23m) 676/1868 tested (499 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 23m) 677/1868 tested (500 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 22m) 679/1868 tested (502 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 22m) 680/1868 tested (503 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 21m, remaining: ~2h 22m) 682/1868 tested (505 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 22m) 683/1868 tested (506 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 685/1868 tested (508 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 686/1868 tested (509 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 687/1868 tested (510 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 689/1868 tested (512 survived, 75 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 21m) 690/1868 tested (513 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 21m) 692/1868 tested (515 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 21m) 693/1868 tested (516 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 20m) 695/1868 tested (518 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 20m) 696/1868 tested (519 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 20m) 698/1868 tested (521 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 23m, remaining: ~2h 20m) 699/1868 tested (522 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 701/1868 tested (524 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 702/1868 tested (525 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 704/1868 tested (527 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 705/1868 tested (528 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 19m) 707/1868 tested (530 survived, 75 timed out)
Mutation testing 37% (elapsed: ~1h 24m, remaining: ~2h 18m) 708/1868 tested (531 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 18m) 710/1868 tested (533 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 18m) 711/1868 tested (534 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 18m) 713/1868 tested (536 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 18m) 714/1868 tested (537 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 17m) 716/1868 tested (539 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 25m, remaining: ~2h 17m) 717/1868 tested (540 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 17m) 719/1868 tested (542 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 17m) 720/1868 tested (543 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 17m) 721/1868 tested (544 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 16m) 723/1868 tested (546 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 16m) 724/1868 tested (547 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 26m, remaining: ~2h 16m) 726/1868 tested (549 survived, 75 timed out)
Mutation testing 38% (elapsed: ~1h 27m, remaining: ~2h 16m) 727/1868 tested (550 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 16m) 729/1868 tested (552 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 16m) 730/1868 tested (552 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 16m) 731/1868 tested (552 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 15m) 733/1868 tested (553 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 27m, remaining: ~2h 15m) 734/1868 tested (554 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 15m) 736/1868 tested (556 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 15m) 737/1868 tested (557 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 14m) 739/1868 tested (559 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 14m) 740/1868 tested (560 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 14m) 742/1868 tested (562 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 28m, remaining: ~2h 14m) 743/1868 tested (563 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 14m) 745/1868 tested (565 survived, 75 timed out)
Mutation testing 39% (elapsed: ~1h 29m, remaining: ~2h 14m) 746/1868 tested (566 survived, 75 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 13m) 748/1868 tested (568 survived, 75 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 13m) 749/1868 tested (569 survived, 75 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 13m) 751/1868 tested (571 survived, 75 timed out)
Mutation testing 40% (elapsed: ~1h 29m, remaining: ~2h 13m) 752/1868 tested (572 survived, 75 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 12m) 755/1868 tested (573 survived, 75 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 12m) 757/1868 tested (575 survived, 75 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 12m) 758/1868 tested (576 survived, 75 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 11m) 761/1868 tested (577 survived, 75 timed out)
Mutation testing 40% (elapsed: ~1h 30m, remaining: ~2h 11m) 763/1868 tested (579 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 30m, remaining: ~2h 10m) 766/1868 tested (580 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 10m) 767/1868 tested (581 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 10m) 769/1868 tested (583 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 10m) 770/1868 tested (584 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 9m) 772/1868 tested (586 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 9m) 773/1868 tested (587 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 31m, remaining: ~2h 9m) 775/1868 tested (589 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 9m) 776/1868 tested (590 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 9m) 778/1868 tested (592 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 8m) 780/1868 tested (593 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 8m) 781/1868 tested (594 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 8m) 783/1868 tested (595 survived, 75 timed out)
Mutation testing 41% (elapsed: ~1h 32m, remaining: ~2h 8m) 784/1868 tested (595 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 8m) 785/1868 tested (595 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 7m) 787/1868 tested (597 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 7m) 788/1868 tested (598 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 7m) 790/1868 tested (600 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 7m) 791/1868 tested (601 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 33m, remaining: ~2h 7m) 793/1868 tested (603 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 7m) 794/1868 tested (603 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 6m) 796/1868 tested (605 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 6m) 797/1868 tested (606 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 6m) 799/1868 tested (608 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 6m) 800/1868 tested (609 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 34m, remaining: ~2h 6m) 801/1868 tested (610 survived, 75 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 6m) 802/1868 tested (610 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 6m) 802/1868 tested (610 survived, 76 timed out)
Mutation testing 42% (elapsed: ~1h 35m, remaining: ~2h 6m) 803/1868 tested (610 survived, 77 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 6m) 805/1868 tested (612 survived, 77 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 6m) 806/1868 tested (613 survived, 77 timed out)
Mutation testing 43% (elapsed: ~1h 35m, remaining: ~2h 5m) 807/1868 tested (613 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 807/1868 tested (613 survived, 78 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 808/1868 tested (613 survived, 79 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 809/1868 tested (613 survived, 80 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 6m) 810/1868 tested (614 survived, 80 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 5m) 811/1868 tested (615 survived, 80 timed out)
Mutation testing 43% (elapsed: ~1h 36m, remaining: ~2h 5m) 815/1868 tested (617 survived, 80 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 4m) 818/1868 tested (618 survived, 80 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 4m) 819/1868 tested (619 survived, 80 timed out)
Mutation testing 43% (elapsed: ~1h 37m, remaining: ~2h 4m) 821/1868 tested (621 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 37m, remaining: ~2h 4m) 822/1868 tested (622 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 37m, remaining: ~2h 3m) 824/1868 tested (624 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 37m, remaining: ~2h 3m) 825/1868 tested (625 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 3m) 827/1868 tested (627 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 3m) 828/1868 tested (628 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 2m) 830/1868 tested (630 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 2m) 831/1868 tested (631 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 2m) 832/1868 tested (632 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 38m, remaining: ~2h 2m) 834/1868 tested (634 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 2m) 835/1868 tested (635 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 2m) 837/1868 tested (637 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 2m) 838/1868 tested (638 survived, 80 timed out)
Mutation testing 44% (elapsed: ~1h 39m, remaining: ~2h 1m) 840/1868 tested (640 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 39m, remaining: ~2h 1m) 841/1868 tested (641 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 39m, remaining: ~2h 1m) 843/1868 tested (643 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 1m) 844/1868 tested (644 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 1m) 846/1868 tested (646 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 0m) 847/1868 tested (647 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 0m) 849/1868 tested (649 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 0m) 850/1868 tested (650 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 40m, remaining: ~2h 0m) 851/1868 tested (651 survived, 80 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 852/1868 tested (651 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 853/1868 tested (652 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 855/1868 tested (654 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 855/1868 tested (654 survived, 81 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~2h 0m) 856/1868 tested (654 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 41m, remaining: ~1h 59m) 858/1868 tested (656 survived, 82 timed out)
Mutation testing 45% (elapsed: ~1h 42m, remaining: ~1h 59m) 859/1868 tested (657 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 59m) 861/1868 tested (659 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 59m) 861/1868 tested (659 survived, 82 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 59m) 862/1868 tested (659 survived, 83 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 59m) 863/1868 tested (659 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 42m, remaining: ~1h 59m) 863/1868 tested (659 survived, 84 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 59m) 864/1868 tested (659 survived, 85 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 59m) 865/1868 tested (659 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 59m) 866/1868 tested (660 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 59m) 868/1868 tested (662 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 59m) 869/1868 tested (663 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 43m, remaining: ~1h 58m) 871/1868 tested (665 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~1h 58m) 872/1868 tested (666 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~1h 58m) 874/1868 tested (668 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~1h 58m) 875/1868 tested (669 survived, 86 timed out)
Mutation testing 46% (elapsed: ~1h 44m, remaining: ~1h 58m) 877/1868 tested (671 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 58m) 878/1868 tested (672 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 44m, remaining: ~1h 57m) 880/1868 tested (674 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 57m) 881/1868 tested (675 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 57m) 882/1868 tested (676 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 57m) 884/1868 tested (678 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 57m) 885/1868 tested (679 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 56m) 887/1868 tested (681 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 45m, remaining: ~1h 56m) 888/1868 tested (682 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 56m) 890/1868 tested (684 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 56m) 891/1868 tested (685 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 56m) 893/1868 tested (687 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 56m) 894/1868 tested (688 survived, 86 timed out)
Mutation testing 47% (elapsed: ~1h 46m, remaining: ~1h 55m) 896/1868 tested (690 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 46m, remaining: ~1h 55m) 897/1868 tested (691 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 55m) 899/1868 tested (693 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 55m) 900/1868 tested (694 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 54m) 902/1868 tested (696 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 54m) 903/1868 tested (697 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 54m) 905/1868 tested (699 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 47m, remaining: ~1h 54m) 906/1868 tested (700 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 54m) 908/1868 tested (702 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 54m) 909/1868 tested (703 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 54m) 910/1868 tested (704 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 53m) 912/1868 tested (704 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 53m) 913/1868 tested (704 survived, 86 timed out)
Mutation testing 48% (elapsed: ~1h 48m, remaining: ~1h 53m) 914/1868 tested (704 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 53m) 916/1868 tested (704 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 53m) 917/1868 tested (704 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 52m) 919/1868 tested (704 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 52m) 920/1868 tested (704 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 52m) 921/1868 tested (705 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 49m, remaining: ~1h 52m) 923/1868 tested (707 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 52m) 924/1868 tested (708 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 52m) 926/1868 tested (710 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 51m) 927/1868 tested (711 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 51m) 929/1868 tested (713 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 51m) 930/1868 tested (714 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 50m, remaining: ~1h 51m) 932/1868 tested (716 survived, 86 timed out)
Mutation testing 49% (elapsed: ~1h 51m, remaining: ~1h 51m) 933/1868 tested (717 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 935/1868 tested (719 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 936/1868 tested (720 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 938/1868 tested (722 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 939/1868 tested (723 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 51m, remaining: ~1h 50m) 941/1868 tested (725 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 50m) 942/1868 tested (726 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 50m) 943/1868 tested (727 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 49m) 945/1868 tested (729 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 49m) 946/1868 tested (730 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 49m) 948/1868 tested (732 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 52m, remaining: ~1h 49m) 949/1868 tested (733 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 48m) 951/1868 tested (735 survived, 86 timed out)
Mutation testing 50% (elapsed: ~1h 53m, remaining: ~1h 48m) 952/1868 tested (736 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 48m) 954/1868 tested (738 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 48m) 955/1868 tested (739 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 48m) 957/1868 tested (741 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 53m, remaining: ~1h 48m) 958/1868 tested (742 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 960/1868 tested (744 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 961/1868 tested (745 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 963/1868 tested (747 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 964/1868 tested (748 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 47m) 966/1868 tested (750 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 54m, remaining: ~1h 46m) 967/1868 tested (751 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 46m) 969/1868 tested (753 survived, 86 timed out)
Mutation testing 51% (elapsed: ~1h 55m, remaining: ~1h 46m) 970/1868 tested (754 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 46m) 972/1868 tested (756 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 46m) 973/1868 tested (757 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 46m) 974/1868 tested (758 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 55m, remaining: ~1h 45m) 976/1868 tested (760 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 45m) 977/1868 tested (761 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 45m) 979/1868 tested (763 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 45m) 980/1868 tested (764 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 45m) 982/1868 tested (766 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 45m) 983/1868 tested (767 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 56m, remaining: ~1h 44m) 985/1868 tested (769 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 44m) 986/1868 tested (770 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 44m) 988/1868 tested (772 survived, 86 timed out)
Mutation testing 52% (elapsed: ~1h 57m, remaining: ~1h 44m) 989/1868 tested (773 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 43m) 991/1868 tested (775 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 43m) 992/1868 tested (776 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 57m, remaining: ~1h 43m) 994/1868 tested (778 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 43m) 995/1868 tested (779 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 43m) 997/1868 tested (781 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 43m) 998/1868 tested (782 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 42m) 1000/1868 tested (784 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 42m) 1001/1868 tested (785 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 58m, remaining: ~1h 42m) 1003/1868 tested (787 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 42m) 1004/1868 tested (788 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 42m) 1005/1868 tested (789 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 42m) 1007/1868 tested (791 survived, 86 timed out)
Mutation testing 53% (elapsed: ~1h 59m, remaining: ~1h 41m) 1008/1868 tested (792 survived, 86 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 41m) 1010/1868 tested (794 survived, 86 timed out)
Mutation testing 54% (elapsed: ~1h 59m, remaining: ~1h 41m) 1011/1868 tested (795 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 41m) 1013/1868 tested (797 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 41m) 1014/1868 tested (798 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 40m) 1016/1868 tested (800 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 40m) 1017/1868 tested (801 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 40m) 1019/1868 tested (803 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 0m, remaining: ~1h 40m) 1020/1868 tested (804 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 40m) 1022/1868 tested (806 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 40m) 1023/1868 tested (807 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 39m) 1025/1868 tested (809 survived, 86 timed out)
Mutation testing 54% (elapsed: ~2h 1m, remaining: ~1h 39m) 1026/1868 tested (810 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 1m, remaining: ~1h 39m) 1028/1868 tested (812 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 1m, remaining: ~1h 39m) 1029/1868 tested (813 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 39m) 1031/1868 tested (815 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1032/1868 tested (816 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1034/1868 tested (818 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1035/1868 tested (819 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1036/1868 tested (820 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 2m, remaining: ~1h 38m) 1038/1868 tested (822 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 38m) 1039/1868 tested (823 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 37m) 1041/1868 tested (825 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 37m) 1042/1868 tested (826 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 37m) 1044/1868 tested (828 survived, 86 timed out)
Mutation testing 55% (elapsed: ~2h 3m, remaining: ~1h 37m) 1045/1868 tested (829 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 3m, remaining: ~1h 37m) 1047/1868 tested (831 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 37m) 1048/1868 tested (832 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 36m) 1050/1868 tested (834 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 36m) 1051/1868 tested (835 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 36m) 1053/1868 tested (837 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 36m) 1054/1868 tested (838 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 4m, remaining: ~1h 35m) 1056/1868 tested (840 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1057/1868 tested (841 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1059/1868 tested (843 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1060/1868 tested (844 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1062/1868 tested (846 survived, 86 timed out)
Mutation testing 56% (elapsed: ~2h 5m, remaining: ~1h 35m) 1063/1868 tested (847 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 5m, remaining: ~1h 34m) 1065/1868 tested (849 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1066/1868 tested (850 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1067/1868 tested (851 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1069/1868 tested (853 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1070/1868 tested (854 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 34m) 1072/1868 tested (856 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 6m, remaining: ~1h 33m) 1073/1868 tested (857 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 33m) 1075/1868 tested (859 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 33m) 1076/1868 tested (860 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 33m) 1078/1868 tested (862 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 33m) 1079/1868 tested (863 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 32m) 1081/1868 tested (865 survived, 86 timed out)
Mutation testing 57% (elapsed: ~2h 7m, remaining: ~1h 32m) 1082/1868 tested (866 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 32m) 1084/1868 tested (868 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 32m) 1085/1868 tested (869 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 32m) 1087/1868 tested (871 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 32m) 1088/1868 tested (872 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 31m) 1090/1868 tested (874 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 8m, remaining: ~1h 31m) 1091/1868 tested (875 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1093/1868 tested (877 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1094/1868 tested (878 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1096/1868 tested (880 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 31m) 1097/1868 tested (881 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 30m) 1098/1868 tested (882 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 9m, remaining: ~1h 30m) 1100/1868 tested (884 survived, 86 timed out)
Mutation testing 58% (elapsed: ~2h 10m, remaining: ~1h 30m) 1101/1868 tested (885 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 30m) 1103/1868 tested (887 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 30m) 1104/1868 tested (888 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 29m) 1106/1868 tested (890 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 29m) 1107/1868 tested (891 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 10m, remaining: ~1h 29m) 1109/1868 tested (893 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 29m) 1110/1868 tested (894 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 29m) 1112/1868 tested (896 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 29m) 1113/1868 tested (897 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 28m) 1115/1868 tested (899 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 28m) 1116/1868 tested (900 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 11m, remaining: ~1h 28m) 1118/1868 tested (902 survived, 86 timed out)
Mutation testing 59% (elapsed: ~2h 12m, remaining: ~1h 28m) 1119/1868 tested (903 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 28m) 1121/1868 tested (905 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 27m) 1122/1868 tested (906 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 27m) 1124/1868 tested (908 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 27m) 1125/1868 tested (909 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 12m, remaining: ~1h 27m) 1127/1868 tested (911 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 27m) 1128/1868 tested (912 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 26m) 1130/1868 tested (914 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 26m) 1131/1868 tested (915 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 26m) 1132/1868 tested (916 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 26m) 1134/1868 tested (918 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 13m, remaining: ~1h 26m) 1135/1868 tested (919 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 26m) 1137/1868 tested (921 survived, 86 timed out)
Mutation testing 60% (elapsed: ~2h 14m, remaining: ~1h 26m) 1138/1868 tested (922 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 25m) 1140/1868 tested (924 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 25m) 1141/1868 tested (925 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 25m) 1143/1868 tested (927 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 14m, remaining: ~1h 25m) 1144/1868 tested (928 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 25m) 1146/1868 tested (930 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 24m) 1147/1868 tested (931 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 24m) 1149/1868 tested (933 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 24m) 1150/1868 tested (934 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 24m) 1152/1868 tested (936 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 15m, remaining: ~1h 24m) 1153/1868 tested (937 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 23m) 1155/1868 tested (939 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 23m) 1156/1868 tested (940 survived, 86 timed out)
Mutation testing 61% (elapsed: ~2h 16m, remaining: ~1h 23m) 1157/1868 tested (941 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 23m) 1159/1868 tested (943 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 23m) 1160/1868 tested (944 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 16m, remaining: ~1h 23m) 1162/1868 tested (946 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 23m) 1163/1868 tested (947 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 22m) 1165/1868 tested (949 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 22m) 1166/1868 tested (950 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 22m) 1168/1868 tested (952 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 22m) 1169/1868 tested (953 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 17m, remaining: ~1h 22m) 1171/1868 tested (955 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 21m) 1172/1868 tested (956 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 21m) 1174/1868 tested (958 survived, 86 timed out)
Mutation testing 62% (elapsed: ~2h 18m, remaining: ~1h 21m) 1175/1868 tested (959 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 18m, remaining: ~1h 21m) 1177/1868 tested (961 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 18m, remaining: ~1h 21m) 1178/1868 tested (962 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 18m, remaining: ~1h 20m) 1180/1868 tested (964 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 20m) 1181/1868 tested (965 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 20m) 1183/1868 tested (967 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 20m) 1184/1868 tested (968 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 20m) 1185/1868 tested (969 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 20m) 1187/1868 tested (971 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 19m, remaining: ~1h 20m) 1188/1868 tested (972 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 19m) 1190/1868 tested (974 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 19m) 1191/1868 tested (975 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 19m) 1193/1868 tested (977 survived, 86 timed out)
Mutation testing 63% (elapsed: ~2h 20m, remaining: ~1h 19m) 1194/1868 tested (978 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 20m, remaining: ~1h 19m) 1196/1868 tested (980 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 20m, remaining: ~1h 18m) 1197/1868 tested (981 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 18m) 1199/1868 tested (983 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 18m) 1200/1868 tested (984 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 18m) 1202/1868 tested (986 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 18m) 1203/1868 tested (987 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 17m) 1205/1868 tested (989 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 21m, remaining: ~1h 17m) 1206/1868 tested (990 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 17m) 1208/1868 tested (992 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 17m) 1209/1868 tested (993 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 17m) 1211/1868 tested (995 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 17m) 1212/1868 tested (996 survived, 86 timed out)
Mutation testing 64% (elapsed: ~2h 22m, remaining: ~1h 17m) 1213/1868 tested (997 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 22m, remaining: ~1h 16m) 1215/1868 tested (999 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 16m) 1216/1868 tested (1000 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 16m) 1218/1868 tested (1002 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 16m) 1219/1868 tested (1003 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 16m) 1221/1868 tested (1005 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 15m) 1222/1868 tested (1006 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 23m, remaining: ~1h 15m) 1224/1868 tested (1008 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 15m) 1225/1868 tested (1009 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 15m) 1227/1868 tested (1011 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 15m) 1228/1868 tested (1012 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 14m) 1230/1868 tested (1014 survived, 86 timed out)
Mutation testing 65% (elapsed: ~2h 24m, remaining: ~1h 14m) 1231/1868 tested (1015 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 24m, remaining: ~1h 14m) 1233/1868 tested (1017 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 14m) 1234/1868 tested (1018 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 14m) 1236/1868 tested (1020 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 14m) 1237/1868 tested (1021 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 13m) 1239/1868 tested (1023 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 13m) 1240/1868 tested (1024 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 25m, remaining: ~1h 13m) 1242/1868 tested (1026 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 13m) 1243/1868 tested (1027 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 13m) 1244/1868 tested (1028 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 13m) 1246/1868 tested (1030 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 12m) 1247/1868 tested (1031 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 12m) 1249/1868 tested (1033 survived, 86 timed out)
Mutation testing 66% (elapsed: ~2h 26m, remaining: ~1h 12m) 1250/1868 tested (1034 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 12m) 1252/1868 tested (1036 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 12m) 1253/1868 tested (1037 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 11m) 1255/1868 tested (1039 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 11m) 1256/1868 tested (1040 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 11m) 1258/1868 tested (1042 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 27m, remaining: ~1h 11m) 1259/1868 tested (1043 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 11m) 1261/1868 tested (1045 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 11m) 1262/1868 tested (1046 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 10m) 1264/1868 tested (1048 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 10m) 1265/1868 tested (1049 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 10m) 1267/1868 tested (1051 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 28m, remaining: ~1h 10m) 1268/1868 tested (1052 survived, 86 timed out)
Mutation testing 67% (elapsed: ~2h 29m, remaining: ~1h 10m) 1270/1868 tested (1054 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 10m) 1271/1868 tested (1055 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 9m) 1273/1868 tested (1057 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 9m) 1274/1868 tested (1058 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 9m) 1276/1868 tested (1060 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 29m, remaining: ~1h 9m) 1277/1868 tested (1061 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 9m) 1278/1868 tested (1062 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 8m) 1280/1868 tested (1064 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 8m) 1281/1868 tested (1065 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 8m) 1283/1868 tested (1067 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 8m) 1284/1868 tested (1068 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 30m, remaining: ~1h 8m) 1286/1868 tested (1070 survived, 86 timed out)
Mutation testing 68% (elapsed: ~2h 31m, remaining: ~1h 8m) 1287/1868 tested (1071 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 7m) 1289/1868 tested (1073 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 7m) 1290/1868 tested (1074 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 7m) 1292/1868 tested (1076 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 7m) 1293/1868 tested (1077 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 31m, remaining: ~1h 7m) 1295/1868 tested (1079 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 7m) 1296/1868 tested (1080 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 6m) 1298/1868 tested (1082 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 6m) 1299/1868 tested (1083 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 6m) 1301/1868 tested (1085 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 6m) 1302/1868 tested (1086 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 32m, remaining: ~1h 6m) 1304/1868 tested (1088 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 6m) 1305/1868 tested (1089 survived, 86 timed out)
Mutation testing 69% (elapsed: ~2h 33m, remaining: ~1h 5m) 1306/1868 tested (1090 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 5m) 1308/1868 tested (1092 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 5m) 1309/1868 tested (1093 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 5m) 1311/1868 tested (1095 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 33m, remaining: ~1h 5m) 1312/1868 tested (1096 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 4m) 1314/1868 tested (1098 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 4m) 1315/1868 tested (1099 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 4m) 1317/1868 tested (1101 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 4m) 1318/1868 tested (1102 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 4m) 1320/1868 tested (1104 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 34m, remaining: ~1h 4m) 1321/1868 tested (1105 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 3m) 1323/1868 tested (1107 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 3m) 1324/1868 tested (1108 survived, 86 timed out)
Mutation testing 70% (elapsed: ~2h 35m, remaining: ~1h 3m) 1326/1868 tested (1110 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 35m, remaining: ~1h 3m) 1327/1868 tested (1111 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 35m, remaining: ~1h 3m) 1329/1868 tested (1113 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 35m, remaining: ~1h 3m) 1330/1868 tested (1114 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 2m) 1332/1868 tested (1116 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 2m) 1333/1868 tested (1117 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 2m) 1334/1868 tested (1118 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 2m) 1336/1868 tested (1120 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 2m) 1337/1868 tested (1121 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 36m, remaining: ~1h 1m) 1339/1868 tested (1123 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 1m) 1340/1868 tested (1124 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 1m) 1342/1868 tested (1126 survived, 86 timed out)
Mutation testing 71% (elapsed: ~2h 37m, remaining: ~1h 1m) 1343/1868 tested (1127 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 37m, remaining: ~1h 1m) 1345/1868 tested (1129 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 37m, remaining: ~1h 1m) 1346/1868 tested (1130 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 37m, remaining: ~1h 0m) 1348/1868 tested (1132 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~1h 0m) 1349/1868 tested (1133 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~1h 0m) 1351/1868 tested (1135 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~1h 0m) 1352/1868 tested (1136 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~1h 0m) 1354/1868 tested (1138 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~1h 0m) 1355/1868 tested (1139 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 38m, remaining: ~59m) 1357/1868 tested (1141 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~59m) 1358/1868 tested (1142 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~59m) 1360/1868 tested (1144 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~59m) 1361/1868 tested (1145 survived, 86 timed out)
Mutation testing 72% (elapsed: ~2h 39m, remaining: ~59m) 1363/1868 tested (1147 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 39m, remaining: ~58m) 1364/1868 tested (1148 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 39m, remaining: ~58m) 1366/1868 tested (1150 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~58m) 1367/1868 tested (1151 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~58m) 1368/1868 tested (1152 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~58m) 1370/1868 tested (1154 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~58m) 1371/1868 tested (1155 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~57m) 1373/1868 tested (1157 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 40m, remaining: ~57m) 1374/1868 tested (1158 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~57m) 1376/1868 tested (1160 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~57m) 1377/1868 tested (1161 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~57m) 1379/1868 tested (1163 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~57m) 1380/1868 tested (1164 survived, 86 timed out)
Mutation testing 73% (elapsed: ~2h 41m, remaining: ~56m) 1382/1868 tested (1166 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 41m, remaining: ~56m) 1383/1868 tested (1167 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~56m) 1385/1868 tested (1169 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~56m) 1386/1868 tested (1170 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~56m) 1388/1868 tested (1172 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~56m) 1389/1868 tested (1173 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~55m) 1391/1868 tested (1175 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 42m, remaining: ~55m) 1392/1868 tested (1176 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~55m) 1394/1868 tested (1178 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~55m) 1395/1868 tested (1179 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~55m) 1397/1868 tested (1181 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~54m) 1398/1868 tested (1182 survived, 86 timed out)
Mutation testing 74% (elapsed: ~2h 43m, remaining: ~54m) 1399/1868 tested (1183 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 43m, remaining: ~54m) 1401/1868 tested (1185 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~54m) 1402/1868 tested (1186 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~54m) 1404/1868 tested (1188 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~54m) 1405/1868 tested (1189 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~53m) 1407/1868 tested (1191 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~53m) 1408/1868 tested (1192 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 44m, remaining: ~53m) 1410/1868 tested (1194 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~53m) 1411/1868 tested (1195 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~53m) 1413/1868 tested (1197 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~53m) 1414/1868 tested (1198 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~52m) 1416/1868 tested (1200 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~52m) 1417/1868 tested (1201 survived, 86 timed out)
Mutation testing 75% (elapsed: ~2h 45m, remaining: ~52m) 1419/1868 tested (1203 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~52m) 1420/1868 tested (1204 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~52m) 1422/1868 tested (1206 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~52m) 1423/1868 tested (1207 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~51m) 1425/1868 tested (1209 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~51m) 1426/1868 tested (1210 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 46m, remaining: ~51m) 1428/1868 tested (1212 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~51m) 1429/1868 tested (1213 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~51m) 1430/1868 tested (1214 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~50m) 1432/1868 tested (1216 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~50m) 1433/1868 tested (1217 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~50m) 1435/1868 tested (1219 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 47m, remaining: ~50m) 1436/1868 tested (1220 survived, 86 timed out)
Mutation testing 76% (elapsed: ~2h 48m, remaining: ~50m) 1438/1868 tested (1222 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~50m) 1439/1868 tested (1223 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~49m) 1441/1868 tested (1225 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~49m) 1442/1868 tested (1226 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~49m) 1444/1868 tested (1228 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 48m, remaining: ~49m) 1445/1868 tested (1229 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~49m) 1447/1868 tested (1231 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~49m) 1448/1868 tested (1232 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~48m) 1450/1868 tested (1234 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~48m) 1451/1868 tested (1235 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~48m) 1453/1868 tested (1237 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 49m, remaining: ~48m) 1454/1868 tested (1238 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~48m) 1456/1868 tested (1240 survived, 86 timed out)
Mutation testing 77% (elapsed: ~2h 50m, remaining: ~48m) 1457/1868 tested (1241 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~47m) 1459/1868 tested (1243 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~47m) 1460/1868 tested (1244 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~47m) 1461/1868 tested (1245 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 50m, remaining: ~47m) 1463/1868 tested (1247 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~47m) 1464/1868 tested (1248 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~46m) 1466/1868 tested (1250 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~46m) 1467/1868 tested (1251 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~46m) 1469/1868 tested (1253 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~46m) 1470/1868 tested (1254 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 51m, remaining: ~46m) 1472/1868 tested (1256 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~46m) 1473/1868 tested (1257 survived, 86 timed out)
Mutation testing 78% (elapsed: ~2h 52m, remaining: ~45m) 1475/1868 tested (1259 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~45m) 1476/1868 tested (1260 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~45m) 1478/1868 tested (1262 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~45m) 1479/1868 tested (1263 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 52m, remaining: ~45m) 1481/1868 tested (1265 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~45m) 1482/1868 tested (1266 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~44m) 1484/1868 tested (1268 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~44m) 1485/1868 tested (1269 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~44m) 1487/1868 tested (1271 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~44m) 1488/1868 tested (1272 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 53m, remaining: ~44m) 1489/1868 tested (1273 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~43m) 1491/1868 tested (1275 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~43m) 1492/1868 tested (1276 survived, 86 timed out)
Mutation testing 79% (elapsed: ~2h 54m, remaining: ~43m) 1494/1868 tested (1278 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 54m, remaining: ~43m) 1495/1868 tested (1279 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 54m, remaining: ~43m) 1497/1868 tested (1281 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 54m, remaining: ~43m) 1498/1868 tested (1282 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~42m) 1500/1868 tested (1284 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~42m) 1501/1868 tested (1285 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~42m) 1503/1868 tested (1287 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~42m) 1504/1868 tested (1288 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~42m) 1506/1868 tested (1290 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 55m, remaining: ~42m) 1507/1868 tested (1291 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~41m) 1509/1868 tested (1293 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~41m) 1510/1868 tested (1294 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~41m) 1512/1868 tested (1296 survived, 86 timed out)
Mutation testing 80% (elapsed: ~2h 56m, remaining: ~41m) 1513/1868 tested (1297 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 56m, remaining: ~41m) 1515/1868 tested (1299 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 56m, remaining: ~41m) 1516/1868 tested (1300 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~40m) 1518/1868 tested (1302 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~40m) 1519/1868 tested (1303 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~40m) 1520/1868 tested (1304 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~40m) 1522/1868 tested (1306 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~40m) 1523/1868 tested (1307 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 57m, remaining: ~39m) 1525/1868 tested (1309 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~39m) 1526/1868 tested (1310 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~39m) 1528/1868 tested (1312 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~39m) 1529/1868 tested (1313 survived, 86 timed out)
Mutation testing 81% (elapsed: ~2h 58m, remaining: ~39m) 1531/1868 tested (1315 survived, 86 timed out)
Mutation testing 82% (elapsed: ~2h 58m, remaining: ~39m) 1532/1868 tested (1316 survived, 86 timed out)
Mutation testing 82% (elapsed: ~2h 58m, remaining: ~38m) 1534/1868 tested (1318 survived, 86 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~38m) 1535/1868 tested (1319 survived, 86 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~38m) 1537/1868 tested (1321 survived, 86 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~38m) 1538/1868 tested (1322 survived, 86 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~38m) 1540/1868 tested (1324 survived, 86 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~38m) 1541/1868 tested (1325 survived, 86 timed out)
Mutation testing 82% (elapsed: ~2h 59m, remaining: ~37m) 1543/1868 tested (1327 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~37m) 1544/1868 tested (1328 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~37m) 1546/1868 tested (1330 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~37m) 1547/1868 tested (1331 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~37m) 1548/1868 tested (1332 survived, 86 timed out)
Mutation testing 82% (elapsed: ~3h 0m, remaining: ~37m) 1550/1868 tested (1334 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 0m, remaining: ~36m) 1551/1868 tested (1335 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~36m) 1553/1868 tested (1337 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~36m) 1554/1868 tested (1338 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~36m) 1556/1868 tested (1340 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~36m) 1557/1868 tested (1341 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~36m) 1559/1868 tested (1343 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 1m, remaining: ~35m) 1560/1868 tested (1344 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~35m) 1562/1868 tested (1346 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~35m) 1563/1868 tested (1347 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~35m) 1565/1868 tested (1349 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~35m) 1566/1868 tested (1350 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~35m) 1567/1868 tested (1351 survived, 86 timed out)
Mutation testing 83% (elapsed: ~3h 2m, remaining: ~34m) 1569/1868 tested (1353 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~34m) 1570/1868 tested (1354 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~34m) 1572/1868 tested (1356 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~34m) 1573/1868 tested (1357 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~34m) 1575/1868 tested (1359 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~34m) 1576/1868 tested (1360 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 3m, remaining: ~33m) 1578/1868 tested (1362 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~33m) 1579/1868 tested (1363 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~33m) 1581/1868 tested (1365 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~33m) 1582/1868 tested (1366 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~33m) 1584/1868 tested (1368 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~32m) 1585/1868 tested (1369 survived, 86 timed out)
Mutation testing 84% (elapsed: ~3h 4m, remaining: ~32m) 1587/1868 tested (1371 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~32m) 1588/1868 tested (1372 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~32m) 1590/1868 tested (1374 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~32m) 1591/1868 tested (1375 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~32m) 1593/1868 tested (1377 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~31m) 1594/1868 tested (1378 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 5m, remaining: ~31m) 1595/1868 tested (1379 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~31m) 1597/1868 tested (1381 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~31m) 1598/1868 tested (1382 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~31m) 1600/1868 tested (1384 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~31m) 1601/1868 tested (1385 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~30m) 1603/1868 tested (1387 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 6m, remaining: ~30m) 1604/1868 tested (1388 survived, 86 timed out)
Mutation testing 85% (elapsed: ~3h 7m, remaining: ~30m) 1606/1868 tested (1390 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~30m) 1607/1868 tested (1391 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~30m) 1609/1868 tested (1393 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~30m) 1610/1868 tested (1394 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~29m) 1612/1868 tested (1396 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 7m, remaining: ~29m) 1613/1868 tested (1397 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~29m) 1615/1868 tested (1399 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~29m) 1616/1868 tested (1400 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~29m) 1618/1868 tested (1402 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~28m) 1619/1868 tested (1403 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~28m) 1621/1868 tested (1405 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 8m, remaining: ~28m) 1622/1868 tested (1406 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~28m) 1623/1868 tested (1407 survived, 86 timed out)
Mutation testing 86% (elapsed: ~3h 9m, remaining: ~28m) 1625/1868 tested (1409 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~28m) 1626/1868 tested (1410 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~27m) 1628/1868 tested (1412 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~27m) 1629/1868 tested (1413 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 9m, remaining: ~27m) 1631/1868 tested (1415 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 10m, remaining: ~27m) 1632/1868 tested (1416 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 10m, remaining: ~27m) 1634/1868 tested (1418 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 10m, remaining: ~27m) 1635/1868 tested (1419 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 10m, remaining: ~26m) 1637/1868 tested (1421 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 10m, remaining: ~26m) 1638/1868 tested (1422 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 10m, remaining: ~26m) 1640/1868 tested (1424 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~26m) 1641/1868 tested (1425 survived, 86 timed out)
Mutation testing 87% (elapsed: ~3h 11m, remaining: ~26m) 1643/1868 tested (1427 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~26m) 1644/1868 tested (1428 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~25m) 1646/1868 tested (1430 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~25m) 1647/1868 tested (1431 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 11m, remaining: ~25m) 1648/1868 tested (1432 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 12m, remaining: ~25m) 1650/1868 tested (1434 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 12m, remaining: ~25m) 1651/1868 tested (1435 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 12m, remaining: ~25m) 1653/1868 tested (1437 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 12m, remaining: ~24m) 1654/1868 tested (1438 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 12m, remaining: ~24m) 1656/1868 tested (1440 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 12m, remaining: ~24m) 1657/1868 tested (1441 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~24m) 1659/1868 tested (1443 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~24m) 1660/1868 tested (1444 survived, 86 timed out)
Mutation testing 88% (elapsed: ~3h 13m, remaining: ~23m) 1662/1868 tested (1446 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 13m, remaining: ~23m) 1663/1868 tested (1447 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 13m, remaining: ~23m) 1665/1868 tested (1449 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 13m, remaining: ~23m) 1666/1868 tested (1450 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 14m, remaining: ~23m) 1668/1868 tested (1452 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 14m, remaining: ~23m) 1669/1868 tested (1453 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 14m, remaining: ~22m) 1671/1868 tested (1455 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 14m, remaining: ~22m) 1672/1868 tested (1456 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 14m, remaining: ~22m) 1674/1868 tested (1458 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 14m, remaining: ~22m) 1675/1868 tested (1459 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~22m) 1676/1868 tested (1460 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~22m) 1678/1868 tested (1462 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~21m) 1679/1868 tested (1463 survived, 86 timed out)
Mutation testing 89% (elapsed: ~3h 15m, remaining: ~21m) 1681/1868 tested (1465 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 15m, remaining: ~21m) 1682/1868 tested (1466 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 15m, remaining: ~21m) 1684/1868 tested (1468 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 16m, remaining: ~21m) 1685/1868 tested (1469 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 16m, remaining: ~21m) 1687/1868 tested (1471 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 16m, remaining: ~20m) 1688/1868 tested (1472 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 16m, remaining: ~20m) 1690/1868 tested (1474 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 16m, remaining: ~20m) 1691/1868 tested (1475 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 16m, remaining: ~20m) 1693/1868 tested (1477 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~20m) 1694/1868 tested (1478 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~19m) 1696/1868 tested (1480 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~19m) 1697/1868 tested (1481 survived, 86 timed out)
Mutation testing 90% (elapsed: ~3h 17m, remaining: ~19m) 1699/1868 tested (1483 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 17m, remaining: ~19m) 1700/1868 tested (1484 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 17m, remaining: ~19m) 1702/1868 tested (1486 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 18m, remaining: ~19m) 1703/1868 tested (1487 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 18m, remaining: ~19m) 1704/1868 tested (1488 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 18m, remaining: ~18m) 1706/1868 tested (1490 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 18m, remaining: ~18m) 1707/1868 tested (1491 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 18m, remaining: ~18m) 1709/1868 tested (1493 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 18m, remaining: ~18m) 1710/1868 tested (1494 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~18m) 1712/1868 tested (1496 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~18m) 1713/1868 tested (1497 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~17m) 1715/1868 tested (1499 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~17m) 1716/1868 tested (1500 survived, 86 timed out)
Mutation testing 91% (elapsed: ~3h 19m, remaining: ~17m) 1718/1868 tested (1502 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 19m, remaining: ~17m) 1719/1868 tested (1503 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~17m) 1721/1868 tested (1505 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~16m) 1722/1868 tested (1506 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~16m) 1724/1868 tested (1508 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~16m) 1725/1868 tested (1509 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~16m) 1727/1868 tested (1511 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 20m, remaining: ~16m) 1728/1868 tested (1512 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~16m) 1730/1868 tested (1514 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~15m) 1731/1868 tested (1515 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~15m) 1732/1868 tested (1516 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~15m) 1734/1868 tested (1518 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~15m) 1735/1868 tested (1519 survived, 86 timed out)
Mutation testing 92% (elapsed: ~3h 21m, remaining: ~15m) 1737/1868 tested (1521 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~15m) 1738/1868 tested (1522 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~14m) 1740/1868 tested (1524 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~14m) 1741/1868 tested (1525 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~14m) 1743/1868 tested (1527 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~14m) 1744/1868 tested (1528 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 22m, remaining: ~14m) 1746/1868 tested (1530 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~14m) 1747/1868 tested (1531 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~13m) 1749/1868 tested (1533 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~13m) 1750/1868 tested (1534 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~13m) 1752/1868 tested (1536 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~13m) 1753/1868 tested (1537 survived, 86 timed out)
Mutation testing 93% (elapsed: ~3h 23m, remaining: ~13m) 1755/1868 tested (1539 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~13m) 1756/1868 tested (1540 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~12m) 1757/1868 tested (1541 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~12m) 1759/1868 tested (1543 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~12m) 1760/1868 tested (1544 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~12m) 1762/1868 tested (1546 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 24m, remaining: ~12m) 1763/1868 tested (1547 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 25m, remaining: ~11m) 1765/1868 tested (1549 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 25m, remaining: ~11m) 1766/1868 tested (1550 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 25m, remaining: ~11m) 1768/1868 tested (1552 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 25m, remaining: ~11m) 1769/1868 tested (1553 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 25m, remaining: ~11m) 1771/1868 tested (1555 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 25m, remaining: ~11m) 1772/1868 tested (1556 survived, 86 timed out)
Mutation testing 94% (elapsed: ~3h 26m, remaining: ~10m) 1774/1868 tested (1558 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~10m) 1775/1868 tested (1559 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~10m) 1777/1868 tested (1561 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~10m) 1778/1868 tested (1562 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~10m) 1779/1868 tested (1563 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 26m, remaining: ~10m) 1781/1868 tested (1565 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 27m, remaining: ~9m) 1782/1868 tested (1566 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 27m, remaining: ~9m) 1784/1868 tested (1568 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 27m, remaining: ~9m) 1785/1868 tested (1569 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 27m, remaining: ~9m) 1787/1868 tested (1571 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 27m, remaining: ~9m) 1788/1868 tested (1572 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 27m, remaining: ~9m) 1790/1868 tested (1574 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~8m) 1791/1868 tested (1575 survived, 86 timed out)
Mutation testing 95% (elapsed: ~3h 28m, remaining: ~8m) 1793/1868 tested (1577 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~8m) 1794/1868 tested (1578 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~8m) 1796/1868 tested (1580 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~8m) 1797/1868 tested (1581 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 28m, remaining: ~8m) 1799/1868 tested (1583 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 29m, remaining: ~7m) 1800/1868 tested (1584 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 29m, remaining: ~7m) 1802/1868 tested (1586 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 29m, remaining: ~7m) 1803/1868 tested (1587 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 29m, remaining: ~7m) 1804/1868 tested (1588 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 29m, remaining: ~7m) 1806/1868 tested (1590 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 29m, remaining: ~7m) 1807/1868 tested (1591 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~6m) 1809/1868 tested (1593 survived, 86 timed out)
Mutation testing 96% (elapsed: ~3h 30m, remaining: ~6m) 1810/1868 tested (1594 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~6m) 1812/1868 tested (1596 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~6m) 1813/1868 tested (1597 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~6m) 1815/1868 tested (1599 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 30m, remaining: ~6m) 1816/1868 tested (1600 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 31m, remaining: ~5m) 1818/1868 tested (1602 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 31m, remaining: ~5m) 1819/1868 tested (1603 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 31m, remaining: ~5m) 1821/1868 tested (1605 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 31m, remaining: ~5m) 1822/1868 tested (1606 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 31m, remaining: ~5m) 1824/1868 tested (1608 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 31m, remaining: ~4m) 1825/1868 tested (1609 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~4m) 1826/1868 tested (1610 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~4m) 1828/1868 tested (1612 survived, 86 timed out)
Mutation testing 97% (elapsed: ~3h 32m, remaining: ~4m) 1829/1868 tested (1613 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 32m, remaining: ~4m) 1831/1868 tested (1615 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 32m, remaining: ~4m) 1832/1868 tested (1616 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 32m, remaining: ~3m) 1834/1868 tested (1618 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 33m, remaining: ~3m) 1835/1868 tested (1619 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 33m, remaining: ~3m) 1837/1868 tested (1621 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 33m, remaining: ~3m) 1838/1868 tested (1622 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 33m, remaining: ~3m) 1840/1868 tested (1624 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 33m, remaining: ~3m) 1841/1868 tested (1625 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 33m, remaining: ~2m) 1843/1868 tested (1627 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~2m) 1844/1868 tested (1628 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~2m) 1845/1868 tested (1629 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~2m) 1847/1868 tested (1631 survived, 86 timed out)
Mutation testing 98% (elapsed: ~3h 34m, remaining: ~2m) 1848/1868 tested (1632 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 34m, remaining: ~2m) 1850/1868 tested (1634 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 34m, remaining: ~1m) 1851/1868 tested (1635 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 35m, remaining: ~1m) 1853/1868 tested (1637 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 35m, remaining: ~1m) 1854/1868 tested (1638 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 35m, remaining: ~1m) 1856/1868 tested (1640 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 35m, remaining: ~1m) 1857/1868 tested (1641 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 35m, remaining: ~1m) 1859/1868 tested (1643 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 35m, remaining: <1m) 1860/1868 tested (1644 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: <1m) 1862/1868 tested (1646 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: <1m) 1863/1868 tested (1647 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: <1m) 1865/1868 tested (1649 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: <1m) 1866/1868 tested (1650 survived, 86 timed out)
Mutation testing 99% (elapsed: ~3h 36m, remaining: <1m) 1867/1868 tested (1651 survived, 86 timed out)

All tests
  ✓ All tests (killed 130)

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("fakePromise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("error", new Error("oops"));

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", Q.delay(definition, 1000));

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise", null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise", undefined("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise", "null"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("deferred", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("pending", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("resolved", definition);

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (undefined) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (void 0) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (NaN) {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function () {});

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define("string");

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (!(typeof ses === "undefined")) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "object") {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!"hello, world!"()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" && typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain == "test") {

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain === "test") {

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(function () {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (false) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain && domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain || domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain ? domain.exit() : null) {

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush.bind(window, 0));

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(undefined, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(null, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(console.log, 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, "hello");

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, function () {});

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (undefined) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (null) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:197:30
-               process.nextTick(flush);
+               process.nextTick(flush.bind(null));

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (true) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (false) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (console.log("This is a placeholder")) {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(document, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(parseInt, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(JSON.parse, flush);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(undefined);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(null);

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(console.log("Hello, world!"));

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && !(window.MessageChannel && typeof window.MessageChannel === "function")) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && !window.MessageChannel) {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "undefined" && !window.MessageChannel()) {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               0(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               null(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("foo");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 10);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(timeout, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(requestTick, 0);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(function buggyFlush() {
+     throw new Error(" ocasional " + "error");
+   }, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(function buggyFlush() {
+     return 1;
+   }, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(function buggyFlush() {
+     return "buggy-flush";
+   }, 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 42);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, {});

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush());

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush + 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               promise.then(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush + 1, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!laterQueue.length) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing || laterQueue.length > 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length = 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length != 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length <= 0) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < 0) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index === this.length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index >= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index <= length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index <= length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (index < length - 1; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index == length + 1; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 0) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (a && index in this) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in f) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(this[index]);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = this.basis(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback('PLACEHOLDER', this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(false, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(null, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] === value, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] != value, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] % value === 0, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], array_slice(this, index));

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], array_map(this, function (x) {
+     return x[index];
+   }));

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], array_reduce(this, function (acc, x) {
+     return acc.concat(x[index]);
+   }, []));

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; this[i]; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i -= 2) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] < value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] > value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (i < value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect[0] = value(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(thisp.call(callback, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(self.call(callback, value, index));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback(value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(this));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(0));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call({}, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, 0, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, "hello", index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, Math.random(), self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, 1));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, "abc"));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, () => {}));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key in (object_keys(object) in object)) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key in Array.prototype) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {
+     key1: value2,
+     key2: value1
+   }) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {
+     key1: value1,
+     key2: value2,
+     key3: value1
+   }) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {
+     key1: {
+       nestedKey: value1
+     },
+     key2: value2
+   }) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (key in object) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object.hasOwnProperty(key) === true) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (Object.getOwnPropertyNames(object).indexOf(key) !== -1) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object.property)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(key + 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(TypeError())) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(Array.prototype.slice.call(arguments), key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, this)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key.length)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this.field);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(typeof key);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.reverse()) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.length) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception instanceof Error) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof otherVariable !== "undefined") {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== typeof otherVariable) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p != true; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p == null; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.source.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.slice) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ === p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter + 1)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__maximumStackCounter__", {
+     value: p.stackCounter,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__stackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__downCounter__", {
+     value: p.stackCounter,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(undefined, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(null, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:39
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty({
+     stack: "foo"
+   }, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "null", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "aRandomValue", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: null
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.concat(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.source.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack + " " + promise.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.length());

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.stack.concat("foo"));

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(null);

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = undefined("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = null("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + " ");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\t");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "a");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString("concatedStacks".trim());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString("concatedStacks".substring(0, 10));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString("concatedStacks".replace(/[^\w\s]/gi, ''));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperties(error, "stack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack".concat("Trace"), {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack".toUpperCase(), {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: null,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: undefined,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: promise.stack,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\r\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var j = 0; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 0, j = i; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i >= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i == lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = i * i) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line !== "foo") {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!line.startsWith("foo")) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (line.indexOf("foo") !== 0) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNaN(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !parseFloat(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join('\n vs /* */\n');

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join('"' + String.fromCharCode(92, 110) + '"');

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.lastIndexOf("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf(" effetivere frock;") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.lastIndexOf("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.charAt("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.substr("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:30
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.indexOf("(module.js:12345)") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine + "foo");

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine + ">");

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "undefined"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], -Infinity(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], 5(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[2])];

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[2]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (!attempt2) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2 && attempt2[1]) {

[Survived] PrecomputedMutator
q.js:431:30
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], String(attempt2[2])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine + 1);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine - 1);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec("string");

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], NaN(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[attempt3.length - 1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(getFileNameAndLineNumber(attempt3[2])[1])];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = undefined(stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = null(stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = {}(stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.substr(1));

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(':'));

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\r");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].lastIndexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("?") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if ([] + fileNameAndLineNumber) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "undefined" && typeof console.warn === "function" && typeof buggy === "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "undefined" && console.log === "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments, Math.random());

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, arguments, new Error("Injected error"));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(() => {}, arguments);

[Survived] PrecomputedMutator
q.js:485:31
-           return callback.apply(callback, arguments);
+           return callback.apply(0, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (Object.prototype.toString.call(value) === "[object Promise]") {

[Survived] PrecomputedMutator
q.js:558:20
-       var deferred = object_create(defer.prototype);
+       var deferred = array_slice(defer.prototype);

[Survived] PrecomputedMutator
q.js:558:20
-       var deferred = object_create(defer.prototype);
+       var deferred = reject(defer.prototype);

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "progress" && operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "progress" || operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "progress" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(promise, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(deferred, args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat([promise]));

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise == null);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(typeof resolvedPromise === 'undefined');

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(!resolvedPromise);

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue == promise) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.isPending) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isDefined(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(null)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(new Error())) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise !== null) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (resolvedPromise === false) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!(Q.longStackSupport === hasStacks)) {

[Survived] PrecomputedMutator
q.js:604:29
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = "foo"(e.stack.indexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split('\n')[0]);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.substr(0, e.stack.indexOf('\n')));

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.search("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.slice("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\r\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (!Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport ? false : hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || !hasStacks) {

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(reject, message);

[Survived] PrecomputedMutator
q.js:638:16
-           become(Q(value));
+           become(Q(Q.resolve(value)));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== true) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.then(function () {
+     return true;
+   })) {

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           deferred.reject(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           Q.resolve(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           Promise.all(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(value * 2));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(0));

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.length === 0) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   undefined(progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   null(progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(true);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(false);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(undefined);

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               self.resolve(error);

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               self.fulfill(error);

[Survived] PrecomputedMutator
q.js:679:13
-               self.reject(error);
+               self.notReject(error);

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length % 2 === 0) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments.length - 1);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(arguments[0]);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.length - 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([], 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, NaN));

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(NaN);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(Infinity);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver == "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver === "object") {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = undefined();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = "defer"();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify, 0);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify, null);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify, undefined);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(promise.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, undefined, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, null);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, undefined);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, () => {});

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.rejected(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(1);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Promise.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(!y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(typeof y == "number" ? y : null);

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return `defer`([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:12
-       return Q([this, that]).spread(function (x, y) {
+       return `object`([this, that]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([Q.resolve(this), Q.resolve(that)]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this.value, that.value]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x != y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x > y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x + y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i != len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i + 1) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               deferred(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i + 1]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[0]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(deferred.reject, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(null, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(42, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, deferred.reject(Error('rejected')));

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this.catch(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return this.finally(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.race(Ladder));

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.crater(Ladder));

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Ladder.race(Q));

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback != null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === 'foo') {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect == void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect != void 0) {

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(resolve, null, []);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "when", [deferred.reject]);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.reject, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.__proto__, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(function () {
+     return promise;
+   }, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, "foo", args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, undefined, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[0] = 0);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args.push(42));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(undefined);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (!inspect) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.prototype) {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self = 1);

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.then);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(new Error("message"), self);

[Survived] PrecomputedMutator
q.js:862:32
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(void 0, self);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? value(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? null(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(true) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = void 0(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = any(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(value + 1);

[Survived] PrecomputedMutator
q.js:903:17
-                   Q.onerror(e);
+                   Q.onwarning(e);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.name);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (typeof threw === "function") {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw !== true) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(Promise.reject(newValue));

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(Q.reject(newValue));

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(Q.reject(value));

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(promise.then()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q(promise)).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(defer()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(null);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(undefined);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(42);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = undefined(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(0);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(null);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.call(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.apply(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:16
-           return callback.fcall(value).thenResolve(value);
+           return callback.bind(value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value.prop).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(1);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed + 1);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed * 2);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed / 2);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.resolve(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q.reject(value).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(void 0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(Promise.resolve(value)).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(resolved < 0, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(resolved > 0, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(resolved !== 0, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, _rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, _fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, void 0, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, "placeholder");

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed());

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(Math.sin(value));

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(-value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.otherwise(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.inspect(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return Q.reject(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q("a string").thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(() => null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(0);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return Q.reject(reason);
+   });

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.reject(reason);

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.thenResolve(reason);

[Survived] PrecomputedMutator
q.js:975:12
-       return Q(promise).thenReject(reason);
+       return Q.finally(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(error).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason + 1);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason.toString());

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(reason[0]);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) === false) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (typeof value !== "object" || value.constructor !== Promise) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (1(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if ("hello"(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise({
+     then: function (onFulfilled, onRejected) {
+       onFulfilled(42);
+     }
+   })) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(Promise.reject(new Error("test")))) {

[Survived] PrecomputedMutator
q.js:992:25
-           var inspected = value.inspect();
+           var inspected = value.value();

[Survived] PrecomputedMutator
q.js:992:25
-           var inspected = value.inspect();
+           var inspected = value.isFulfilled();

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (!inspected.state) {

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && !Q().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && null().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:33
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(object) && undefined().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return null().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return undefined().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return {}().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(!object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(false) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.foo) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object instanceof Array) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(typeof object === "boolean") && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.length > 0) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:33
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object) && object["inspect"]().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return inspected.status === "rejected"().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return inspected.fulfilledStatus === "rejected"().state === "rejected";

[Survived] PrecomputedMutator
q.js:1049:12
-       return this.inspect().state === "rejected";
+       return inspected.rejectedStatus === "rejected"().state === "rejected";

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!isPromiseAlike(reason)) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!isPending(reason)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.indexOf(promise)) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections.indexOf(promise)) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons.indexOf(reason)) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(typeof unhandledRejections === 'object', promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections !== undefined, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, Q.fulfill(promise.reason)) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, undefined);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", undefined, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason + 1, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", undefined, promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, NaN);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, Infinity);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(reportedUnhandledRejections);

[Survived] PrecomputedMutator
q.js:1080:50
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.push(promise.then());

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.pop(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.shift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.unshift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.toString());

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.message);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.toString());

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(reason + "(no stack) ");

[Survived] PrecomputedMutator
q.js:1089:31
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.push(reason + ["(no stack) "]);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections == true) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== false) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.push(promise));

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(promise));

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.splice(promise));

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_slice(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledReasons, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(reportedUnhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < 0) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === true) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (typeof at === "number") {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([]);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([reportedUnhandledRejections][0], promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.slice(1), promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length - 1, promise);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (reportedUnhandledRejections.length) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (unhandledRejections.length) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", null, unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejected", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("handledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", false, promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", "error", promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", Q.fulfill("error"), promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.catch(function () {}));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.finally(function () {}));

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(unhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(unhandledRejections.pop());

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections.length, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(reportedUnhandledRejections.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.push(at, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledRejections.indexOf(promise), 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(unhandledRejections.filter(function (p) {
+     return p !== promise;
+   }).length, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, unhandledReasons.splice(at, at));

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, unhandledReasons.splice(at, 2));

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, unhandledReasons.splice(at, Infinity));

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, Infinity);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, Math.random());

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1118:12
-       return unhandledReasons.slice();
+       return unhandledReasons.splice();

[Survived] PrecomputedMutator
q.js:1118:12
-       return unhandledReasons.slice();
+       return unhandledReasons.concat();

[Survived] PrecomputedMutator
q.js:1118:12
-       return unhandledReasons.slice();
+       return unhandledReasons.reverse();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (typeof rejected === "undefined") {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(this.inspect);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(rejection);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(rejection.promise);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(void 0, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(true, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, false);

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name != null) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args[0], args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value["apply"](void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.post(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply("undefined", args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(0, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value2, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args2);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args[0]);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(value.apply, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args + 1);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, Q.resolve(args));

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.map(Q.resolve));

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(this.p);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(void 0);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(args[0]);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return ui.apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value["apply"](thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return this.apply(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(void 0, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(42, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(Math.PI, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args[0]);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice(1));

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, Promise.resolve(args));

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object.keys.length(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys("none");

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(Promise.reject("some error"));

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, 1 + 1);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, "hello");

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, null);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.observe(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(void 0);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error("unknown error"));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(value);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(op.apply(void 0, args));

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(object + 1, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(object.length, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(object[0], op, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, []);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q - 1(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q + 1(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q * 2(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(object.missingKey).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(object.valueOf()).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(partial(fulfilled, rejected));

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(void 0, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(null).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q([]).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled.bind({}), rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(Promise.reject(), rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected | function () {
+     throw "new Error()";
+   });

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected | function (x) {
+     return x + 1;
+   });

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected | function (x) {
+     return x + "1";
+   });

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.some().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this[null]().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.none().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.resolve(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.then(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return rejected.apply(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === null) {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === undefined) {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("");

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject("unhandled exception");

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(new Error(exception));

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value === undefined) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value !== undefined && result.value !== false) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.reject);

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(null);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.err, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value.send(undefined), callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result, callback(), errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return all(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return any(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, function (error) {
+     throw error;
+   }, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, Q, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, console.error);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator[verb] + 1(arg);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator[verb] * 2(arg);

[Survived] PrecomputedMutator
q.js:1311:30
-                       result = generator[verb](arg);
+                       result = generator[verb] - 1(arg);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg.toString());

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg.toLowerCase());

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](arg + 1);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (typeof exception === "number") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof Error) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isLoopBreak(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isContinue(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isRejected(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.t)) {

[Survived] PrecomputedMutator
q.js:1314:32
-                           return Q(exception.value);
+                           return null(exception.value);

[Survived] PrecomputedMutator
q.js:1314:32
-                           return Q(exception.value);
+                           return undefined(exception.value);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(Promise.reject(exception));

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(undefined);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return resolve(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject("error");

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(new Error());

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback(result.value), errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback(result.value), errback(result.value));

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.never(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result = 42, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result = Q(42), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result = Q.promised(getBarPromise), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, undefined, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, () => {
+     return callback(null, result.value);
+   }, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, null);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, undefined);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, console.error);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(1, 2);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(function () {});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator[Symbol.iterator](this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(function () {}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, {});

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(this));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(generator));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(generator, "next"));

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = resolved.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = deferred.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = Promise.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(function () {}(), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(function () {}().bind(continuer), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer(), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "done");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "value");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind("next");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(Math.random() > 0.5 ? "next" : "throw");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind("next" + Math.random());

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "bad");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "undefined");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, 1 + 2);

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return null();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return undefined();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return false();

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.reject(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.resolve(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, !all(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(1)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(-1)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([1, 2])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(null);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(undefined);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.method(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(self + 1, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(self = null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(Q(2)));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(args, op);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + args[0]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(undefined);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.direct(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.root(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.meta(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(1).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("get", args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch("set", args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, undefined);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, null);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, 1);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.cancel, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.promise.then(() => {
+     throw new Error("Some custom error");
+   }), op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.promise.then(() => {
+     return;
+   }), op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op.toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, void 0);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [X]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key, key + 1]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return void 0(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return this(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(object + 1).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(undefined).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("del", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("when", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key, Q(null)]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key, Q.reject(new Error("Test error"))]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("mapply", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return Q.delay("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return Q.timeout("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return Q.sendTo("get", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("invoke", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", "property");

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", null);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object.length).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q({
+     a: 1
+   }).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("size", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("length", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("push", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, undefined]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [random.next(), key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.reject("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set!", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("foo", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set" + "!", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("foo", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(true).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1453:31
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key + "xyz"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("plus", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("increment", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return null("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return 42("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return false("delete", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("put", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("remove", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [undefined]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [""]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [Math.random()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return null(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(void 0).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(false).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("length", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch(1, [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", null);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args[1]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args[0]]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args[0], name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", args);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return null("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return undefined("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return !this.dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("SET", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch(undefined, [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [null, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args[0], args]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("send"[(name, args)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("fapply"[array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("__noSuchMethod__"[(name, array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(doStuff).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object.something).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(Promise.resolve(object)).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", ["foo", array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice('String', 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(0, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("send", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return fapply("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return get("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return post("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [arguments]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [this, args, 1]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [this, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([0])]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 0, 1))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(promises[0])]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(null, 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(function () {}, 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, arguments.length - 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(`hello`).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [args, null]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [undefined, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [promise, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [this, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("applyAsync", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("mixins", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, 0]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args[0], args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q("dummy").dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch('call', [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch('bind', [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, []]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([...arguments, 1])]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.slice(1))]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments[1]), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 0, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, arguments]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [this, arguments]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [this, arguments]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return null("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return undefined("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return "hello world"("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("length", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [promise, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(promises, 1))]);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = Q.promise(object);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = Q.defer(object);

[Survived] PrecomputedMutator
q.js:1537:19
-       var promise = Q(object);
+       var promise = Q.resolve(object);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(`true`);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.slice(1), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               void 0(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               42(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               NaN(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(arguments, 0, 0)))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(this.arguments))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(Number(arguments[0])))

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = [1, 2](arguments);

[Survived] PrecomputedMutator
q.js:1548:16
-       var args = array_slice(arguments);
+       var args = "foo"(arguments);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(0);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(promises);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               void 0(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               null(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(arguments, 0)))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments[0]))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("indexOf", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object[Math.random()]).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object[object.length]).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object["" + Math.random()]).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("valueOf", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [function foo() {
+     return "bar";
+   }]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["key1", "key2", "key3"]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["key1", "key2", "key3", "key4"]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length");

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("unknownProperty");

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("getOwnPropertyNames", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("getOwnPropertySymbols", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [[]]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", ["foo"]);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state == "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state == "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().value != promise.inspect().value

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   promise != null(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(Q.inspect().state === "rejected") &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(Q.inspect().state === "pending") &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(Q.inspect().state === "undefined") &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.test()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.resolve()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.reject()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (index === promises.length - 1) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.promise.then(promises);

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notResolved({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           Q.notResolved({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           promise.notResolved({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + 1,
+     value: progress - 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index * 2,
+     value: progress / 2
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + Math.floor(Math.random() * 10),
+     value: progress + Math.floor(Math.random() * 10)
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === 0 || promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === 0 && promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === 0 && promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.concat());

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return reject(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([this, this]);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([this, void 0]);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([void 0, this]);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.size === 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (!promises.length) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.notify();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.defer["deferred"]();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.defer.resolve();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.defer.reject();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, rejector, onResolve, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected));

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(null, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(undefined, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(null, onRejected), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, any, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, allSettled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, undefined, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, null);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(snapshot.err);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise.inspect().err);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(deferred.resolve(undefined));

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < promises.length) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount % promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.jure(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(Promise.reject("Test"));

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(any([]));

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(void 0);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(1);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Q.allSettled);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate("allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(all, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Q.all, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Promise.all, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "any", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "all", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allFulfilled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "any");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises[0], Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises[2], Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, promise);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_sort(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(index, 1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.replace(promise, undefined), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.filter(function (item) {
+     return item !== promise;
+   }), Q);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).catch(noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop).then(noop, noop).catch(noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promises[1], noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promises[0], noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(null, noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, deferred.reject, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, my_function('arg'), noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Q.reject, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, Q.reject);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(Q.resolve(promises));

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(Q.reject(promises));

[Survived] PrecomputedMutator
q.js:1714:23
-               promise = Q(promise);
+               promise = Q.then(promise);

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.inspect.value();

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.value();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(x => x);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(undefined);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(null);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 1, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void rejected, undefined);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void myFunction(), undefined);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(new Promise()).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(function (error) {
+     throw new Error("Testing 123");
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(function (error) {
+     error.message = "Testing 123";
+     throw error;
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(function (error) {
+     throw new Error("Testing 123", {
+       cause: error
+     });
+   }, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, promise.throw);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, promise["throw"]);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, Q.reject(promise));

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.reject(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.notify(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.all(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(true, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected || "promise was rejected");

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected && "promise was rejected");

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, rejected + "promise was rejected");

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(undefined).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(null).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(NaN, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then("null", "null", progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then("undefined", "undefined", progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.catch(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(12345, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, void 0);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, !this);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q.reject(object))["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(Q.defer().promise)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(object + 1)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](undefined);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](null);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"]({});

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback === null) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (!callback.apply) {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = 0(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q("callback");

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(new Error()).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(new Error('Oops!'), rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected(new Error("Some error")), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, resolved, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, void 0);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, () => {
+     throw new Error("test");
+   });

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, () => {
+     return 2;
+   });

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong("error");

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error + 1, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, promise);

[Survived] PrecomputedMutator
q.js:1808:32
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(true, promise);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, undefined);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, false);

[Survived] PrecomputedMutator
q.js:1808:39
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, 0);

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.finally) {

[Survived] PrecomputedMutator
q.js:1809:17
-               if (Q.onerror) {
+               if (Q.catch) {

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   Q.reject(error);

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   Q.fcall(error);

[Survived] PrecomputedMutator
q.js:1810:17
-                   Q.onerror(error);
+                   Q.makePromise(error);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(error.message);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(new Error(error));

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(error.stack);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, ProgressTracker) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           "resolved"(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           1234(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           null(fulfilled, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected.promise, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, error, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, undefined, progress) :

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError(), null);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(onUnhandledError.call(null, error));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(Q.reject(error));

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(true, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(!false, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, Q.reject(error));

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, Q.lua.error(error));

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(-ms, error);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(error, ms);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(void 0).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(null).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q("object").timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(null, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(undefined, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, NaN);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "ERROR");

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Error"));

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (!error || error.message === "string") {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error.code === "ETIMEDOUT") {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           promise.reject(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           Q.reject(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(1);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject({});

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           undefined(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           null(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           true(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout("timeoutId");

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(timeoutId + 1);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(function () {
+     throw new Error("Buggy code fragment");
+   }());

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout("foo");

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(3.14);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout > 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (Date.now() - timeout) {

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(0).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(Infinity);

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = new Deferred()();

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1882:24
-           var deferred = defer();
+           var deferred = null();

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               undefined(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               console.log(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(NaN);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply("foo");

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(0);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(array_slice(args, 0, -1));

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([args.length, 0]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(args.slice(0, -2));

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       deferred.resolve(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       null(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject.apply(deferred, arguments));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.notify.apply(deferred, arguments));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(void 0);

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(1());

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(Q(null)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(function () {}).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify("Custom notification message"));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.slice(1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments.splice(1));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = [](arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = "PLACEHOLDER"(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = null(arguments, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q([]).nfapply(args);

[Survived] PrecomputedMutator
q.js:1926:20
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = !array_slice(arguments);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([1]);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => undefined);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => {
+     throw new Error("Testing");
+   });

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.fuusing);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback !== "function") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(unescape(arguments));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(clip(arguments));

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice.call(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = Array.prototype.slice.call(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = [].slice.call(arguments, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(args + [], 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(args[0], 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(args.reverse(), 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, arguments.length - 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, +Infinity));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(Q(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(defer(arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice("arguments"));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(() => arguments));

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = deffer();

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeRejector());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(this.createNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(DELAY.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(42).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(true).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply([42]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.cancel);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = Q.npost(arguments);

[Survived] PrecomputedMutator
q.js:1958:16
-       var args = array_slice(arguments);
+       var args = Q.post(arguments);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.concat(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.assign(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(Q);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(Promise.prototype);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(defer());

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(defer());

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.length);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, []);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void null, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, array_slice(arguments, 2).concat(args));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, Promise.resolve(args));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, Q.reject(args));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice("Hello, world!");

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(true);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = [1, 2, 3](arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = null(arguments, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments.length, 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, baseArgs.length - 1);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).slice(-1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).concat([null]));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments).reverse());

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(undefined(arguments));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_reverse(arguments));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(' '));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(42));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.notify());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver2());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(resolver.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, array_slice(arguments)[(name, nodeArgs)]);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           this(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           null(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           {}(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(true).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(doNothing());

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments[1]);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(args.length);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = object(arguments, 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       nodeArgs.unshift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       this.nbind(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(!Q.isPromise(callback) ? this : callback, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, [].concat(Array.prototype.slice.call(arguments, 2)));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q.ninvoke(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("a", args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, 1 + args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, array_slice(args, 1));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2000:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => deferred.reject(new Error('test')));

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("npost", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("wrongPost", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post__", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.undefinedMethod("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("HEAD", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", nodeArgs.push(name)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", nodeArgs.concat([name])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [].concat(name, nodeArgs)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject('error'));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(nodeArgs.length);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(nodeArgs[0]);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = null(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = undefined(arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = [](arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments.length, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(typeof arguments, 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, arguments.length + 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, Math.random() * 100);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.concat(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push("string");

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(name).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(nodeArgs.length).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch(!nodeArgs.length).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dis("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.posts("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.dis("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.when(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.delay(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.resolve(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q({}).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(Q.resolve({})).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(new Object()).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, arguments]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, [nodeArgs, 1]]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, {
+     nodeArgs
+   }]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(0);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(this.name);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(`captureLine()`, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(`Q.all()`, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(`nodeback`, 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 1 + Math.random() * 10);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 1 - Math.random() * 10);

[Survived] PrecomputedMutator
q.js:2030:20
-       var deferred = defer();
+       var deferred = undefined();

[Survived] PrecomputedMutator
q.js:2030:20
-       var deferred = defer();
+       var deferred = null();

[Survived] PrecomputedMutator
q.js:2030:20
-       var deferred = defer();
+       var deferred = deferred.resolve();

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({
+     "makeNodeResolver": function () {}
+   });

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(a + b());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("push", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("pop", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       null.dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("del", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name.substring(0, 1), nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name.length, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name.toLowerCase(), nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(Q.reject);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object.value()).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(object + 1).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback.bind(null));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(() => nodeback());

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback()) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback * 2) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback("", value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   null(null, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback("undefined", value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 1 + value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, value + 'Hello World');

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, value * 2);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error("This is a different error"));

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.resolve();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = {
+     head: null,
+     tail: null
+   }();

[Survived] PrecomputedMutator
queue.js:10:24
-               var next = Q.defer();
+               var next = {
+     head: 0,
+     tail: 0
+   }();

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get(ends.promise.get("tail"));

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("close");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.resolve("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.then("tail");

[Survived] PrecomputedMutator
queue.js:19:28
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.reject("tail");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tear");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("next");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   Q.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(ends.reject(error));

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(next.reject(error));

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(closed.resolve(error));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(0)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(NaN)};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               null(end);

[Survived] PrecomputedMutator
queue.js:30:26
-               ends.resolve(end);
+               ends.resolve(end);

Ran 0.95 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.56 |      130 |        86 |       1652 |        0 |        0 |
 q.js     |   11.73 |      130 |        86 |       1626 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         26 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m17:08:10 (3098) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m17:08:10 (3098) INFO MutationTestExecutor[39m Done in 216 minutes 52 seconds.

real	216m53.513s
user	37m59.056s
sys	6m35.829s
