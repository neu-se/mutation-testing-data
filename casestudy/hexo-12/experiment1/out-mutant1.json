{
  "stats": {
    "suites": 120,
    "tests": 753,
    "passes": 709,
    "pending": 13,
    "failures": 31,
    "start": "2024-12-29T22:17:22.609Z",
    "end": "2024-12-29T22:17:26.544Z",
    "duration": 3935
  },
  "tests": [
    {
      "title": "constructor - add trailing \"/\" to the base path",
      "fullTitle": "Hexo Box Box constructor - add trailing \"/\" to the base path",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "addProcessor() - no pattern",
      "fullTitle": "Hexo Box Box addProcessor() - no pattern",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "addProcessor() - with regex",
      "fullTitle": "Hexo Box Box addProcessor() - with regex",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "addProcessor() - with pattern",
      "fullTitle": "Hexo Box Box addProcessor() - with pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "addProcessor() - no fn",
      "fullTitle": "Hexo Box Box addProcessor() - no fn",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_loadFiles() - create",
      "fullTitle": "Hexo Box Box _loadFiles() - create",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_loadFiles() - update",
      "fullTitle": "Hexo Box Box _loadFiles() - update",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_loadFiles() - skip",
      "fullTitle": "Hexo Box Box _loadFiles() - skip",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_loadFiles() - delete",
      "fullTitle": "Hexo Box Box _loadFiles() - delete",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_dispatch()",
      "fullTitle": "Hexo Box Box _dispatch()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_dispatch() - params",
      "fullTitle": "Hexo Box Box _dispatch() - params",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "process()",
      "fullTitle": "Hexo Box Box process()",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "process() - do nothing if target does not exist",
      "fullTitle": "Hexo Box Box process() - do nothing if target does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - create",
      "fullTitle": "Hexo Box Box watch() - create",
      "duration": 218,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - update",
      "fullTitle": "Hexo Box Box watch() - update",
      "duration": 508,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - delete",
      "fullTitle": "Hexo Box Box watch() - delete",
      "duration": 508,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - rename file",
      "fullTitle": "Hexo Box Box watch() - rename file",
      "duration": 208,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - rename folder",
      "fullTitle": "Hexo Box Box watch() - rename folder",
      "duration": 206,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - watcher has started",
      "fullTitle": "Hexo Box Box watch() - watcher has started",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - run process() before start watching",
      "fullTitle": "Hexo Box Box watch() - run process() before start watching",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unwatch()",
      "fullTitle": "Hexo Box Box unwatch()",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unwatch() - watcher not started",
      "fullTitle": "Hexo Box Box unwatch() - watcher not started",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isWatching()",
      "fullTitle": "Hexo Box Box isWatching()",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "processBefore & processAfter events",
      "fullTitle": "Hexo Box Box processBefore & processAfter events",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read()",
      "fullTitle": "Hexo Box File read()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - callback",
      "fullTitle": "Hexo Box File read() - callback",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - raw buffer",
      "fullTitle": "Hexo Box File read() - raw buffer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - string encoding",
      "fullTitle": "Hexo Box File read() - string encoding",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - cache off",
      "fullTitle": "Hexo Box File read() - cache off",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - no content",
      "fullTitle": "Hexo Box File read() - no content",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - escape BOM",
      "fullTitle": "Hexo Box File read() - escape BOM",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - escape Windows line ending",
      "fullTitle": "Hexo Box File read() - escape Windows line ending",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync()",
      "fullTitle": "Hexo Box File readSync()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - raw buffer",
      "fullTitle": "Hexo Box File readSync() - raw buffer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - string encoding",
      "fullTitle": "Hexo Box File readSync() - string encoding",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - cache off",
      "fullTitle": "Hexo Box File readSync() - cache off",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - no content",
      "fullTitle": "Hexo Box File readSync() - no content",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - escape BOM",
      "fullTitle": "Hexo Box File readSync() - escape BOM",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - escape Windows line ending",
      "fullTitle": "Hexo Box File readSync() - escape Windows line ending",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "stat()",
      "fullTitle": "Hexo Box File stat()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "stat() - callback",
      "fullTitle": "Hexo Box File stat() - callback",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "stat() - cache off",
      "fullTitle": "Hexo Box File stat() - cache off",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "statSync()",
      "fullTitle": "Hexo Box File statSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "statSync() - cache off",
      "fullTitle": "Hexo Box File statSync() - cache off",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render()",
      "fullTitle": "Hexo Box File render()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - callback",
      "fullTitle": "Hexo Box File render() - callback",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync()",
      "fullTitle": "Hexo Box File renderSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "delete database",
      "fullTitle": "Hexo Console clean delete database",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "delete public folder",
      "fullTitle": "Hexo Console clean delete public folder",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read all config",
      "fullTitle": "Hexo Console config read all config",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read config",
      "fullTitle": "Hexo Console config read config",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config",
      "fullTitle": "Hexo Console config write config",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: number",
      "fullTitle": "Hexo Console config write config: number",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: false",
      "fullTitle": "Hexo Console config write config: false",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: true",
      "fullTitle": "Hexo Console config write config: true",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: null",
      "fullTitle": "Hexo Console config write config: null",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: json",
      "fullTitle": "Hexo Console config write config: json",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create config if not exist",
      "fullTitle": "Hexo Console config create config if not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "single deploy setting",
      "fullTitle": "Hexo Console deploy single deploy setting",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple deploy setting",
      "fullTitle": "Hexo Console deploy multiple deploy setting",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "deployer not found",
      "fullTitle": "Hexo Console deploy deployer not found",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "generate",
      "fullTitle": "Hexo Console deploy generate",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "run generate if public directory not exist",
      "fullTitle": "Hexo Console deploy run generate if public directory not exist",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Console generate default",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write file if not exist",
      "fullTitle": "Hexo Console generate write file if not exist",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't write if file unchanged",
      "fullTitle": "Hexo Console generate don't write if file unchanged",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch - update",
      "fullTitle": "Hexo Console generate watch - update",
      "duration": 309,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch - delete",
      "fullTitle": "Hexo Console generate watch - delete",
      "duration": 316,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "deploy",
      "fullTitle": "Hexo Console generate deploy",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Console migrate default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Console new title",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "layout",
      "fullTitle": "Hexo Console new layout",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug",
      "fullTitle": "Hexo Console new slug",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "name": "Error",
        "message": "ENOENT: no such file or directory, open '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/console/new_test/source/_posts/foo.md'",
        "cause": {
          "errno": -2,
          "code": "ENOENT",
          "syscall": "open",
          "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/console/new_test/source/_posts/foo.md"
        },
        "isOperational": true,
        "stack": "Error: ENOENT: no such file or directory, open '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/console/new_test/source/_posts/foo.md'",
        "errno": -2,
        "code": "ENOENT",
        "syscall": "open",
        "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/console/new_test/source/_posts/foo.md"
      }
    },
    {
      "title": "path",
      "fullTitle": "Hexo Console new path",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rename if target existed",
      "fullTitle": "Hexo Console new rename if target existed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "replace existing files",
      "fullTitle": "Hexo Console new replace existing files",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "extra data",
      "fullTitle": "Hexo Console new extra data",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug",
      "fullTitle": "Hexo Console publish slug",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "layout",
      "fullTitle": "Hexo Console publish layout",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rename if target existed",
      "fullTitle": "Hexo Console publish rename if target existed",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "replace existing target",
      "fullTitle": "Hexo Console publish replace existing target",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "relative path",
      "fullTitle": "Hexo Console render relative path",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "absolute path",
      "fullTitle": "Hexo Console render absolute path",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "absolute output",
      "fullTitle": "Hexo Console render absolute output",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "output",
      "fullTitle": "Hexo Console render output",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "engine",
      "fullTitle": "Hexo Console render engine",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pretty",
      "fullTitle": "Hexo Console render pretty",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Console register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - alias",
      "fullTitle": "Hexo Extend Console register() - alias",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Console register() - promisify",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Console list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Console get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Deployer register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Deployer register() - promisify",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - Promise.method",
      "fullTitle": "Hexo Extend Deployer register() - Promise.method",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Deployer list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Deployer get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Filter register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - type alias",
      "fullTitle": "Hexo Extend Filter register() - type alias",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - priority",
      "fullTitle": "Hexo Extend Filter register() - priority",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unregister()",
      "fullTitle": "Hexo Extend Filter unregister()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unregister() - type is required",
      "fullTitle": "Hexo Extend Filter unregister() - type is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unregister() - fn must be a function",
      "fullTitle": "Hexo Extend Filter unregister() - fn must be a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Filter list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exec()",
      "fullTitle": "Hexo Extend Filter exec()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exec() - pointer",
      "fullTitle": "Hexo Extend Filter exec() - pointer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exec() - args",
      "fullTitle": "Hexo Extend Filter exec() - args",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exec() - context",
      "fullTitle": "Hexo Extend Filter exec() - context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execSync()",
      "fullTitle": "Hexo Extend Filter execSync()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execSync() - pointer",
      "fullTitle": "Hexo Extend Filter execSync() - pointer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execSync() - args",
      "fullTitle": "Hexo Extend Filter execSync() - args",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execSync() - context",
      "fullTitle": "Hexo Extend Filter execSync() - context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Generator register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Generator register() - promisify",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Generator get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Generator list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Helper register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Helper list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Helper get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Migrator register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Migrator register() - promisify",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - Promise.method",
      "fullTitle": "Hexo Extend Migrator register() - Promise.method",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Migrator list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Migrator get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Processor register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Processor list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Renderer register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Renderer register() - promisify",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "getOutput()",
      "fullTitle": "Hexo Extend Renderer getOutput()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isRenderable()",
      "fullTitle": "Hexo Extend Renderer isRenderable()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isRenderableSync()",
      "fullTitle": "Hexo Extend Renderer isRenderableSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Renderer get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Renderer list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Tag register()",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - async",
      "fullTitle": "Hexo Extend Tag register() - async",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - block",
      "fullTitle": "Hexo Extend Tag register() - block",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - async block",
      "fullTitle": "Hexo Extend Tag register() - async block",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - nested test",
      "fullTitle": "Hexo Extend Tag register() - nested test",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - strip indention",
      "fullTitle": "Hexo Extend Tag register() - strip indention",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - async callback",
      "fullTitle": "Hexo Extend Tag register() - async callback",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - name is required",
      "fullTitle": "Hexo Extend Tag register() - name is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - fn must be a function",
      "fullTitle": "Hexo Extend Tag register() - fn must be a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - context",
      "fullTitle": "Hexo Extend Tag render() - context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Filters Backtick code block disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Filters Backtick code block default",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Filters Backtick code block title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "url",
      "fullTitle": "Hexo Filters Backtick code block url",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link text",
      "fullTitle": "Hexo Filters Backtick code block link text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "indent",
      "fullTitle": "Hexo Filters Backtick code block indent",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "line number",
      "fullTitle": "Hexo Filters Backtick code block line number",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tab replace",
      "fullTitle": "Hexo Filters Backtick code block tab replace",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "without <!-- more -->",
      "fullTitle": "Hexo Filters Excerpt without <!-- more -->",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "with <!-- more -->",
      "fullTitle": "Hexo Filters Excerpt with <!-- more -->",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple <!-- more -->",
      "fullTitle": "Hexo Filters Excerpt multiple <!-- more -->",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Filters External link disabled",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "enabled",
      "fullTitle": "Hexo Filters External link enabled",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.lang set",
      "fullTitle": "Hexo Filters i18n locals page.lang set",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.language set",
      "fullTitle": "Hexo Filters i18n locals page.language set",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "detect by path (lang found)",
      "fullTitle": "Hexo Filters i18n locals detect by path (lang found)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "detect by path (lang not found)",
      "fullTitle": "Hexo Filters i18n locals detect by path (lang not found)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "use config by default",
      "fullTitle": "Hexo Filters i18n locals use config by default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page layout + path",
      "fullTitle": "Hexo Filters new_post_path page layout + path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "draft layout + path",
      "fullTitle": "Hexo Filters new_post_path draft layout + path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default layout + path",
      "fullTitle": "Hexo Filters new_post_path default layout + path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page layout + slug",
      "fullTitle": "Hexo Filters new_post_path page layout + slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "draft layout + slug",
      "fullTitle": "Hexo Filters new_post_path draft layout + slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default layout + slug",
      "fullTitle": "Hexo Filters new_post_path default layout + slug",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "date",
      "fullTitle": "Hexo Filters new_post_path date",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "extra data",
      "fullTitle": "Hexo Filters new_post_path extra data",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "append extension name if not existed",
      "fullTitle": "Hexo Filters new_post_path append extension name if not existed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't append extension name if existed",
      "fullTitle": "Hexo Filters new_post_path don't append extension name if existed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "replace existing files",
      "fullTitle": "Hexo Filters new_post_path replace existing files",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rename if target existed",
      "fullTitle": "Hexo Filters new_post_path rename if target existed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "data is required",
      "fullTitle": "Hexo Filters new_post_path data is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Filters post_permalink default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "categories",
      "fullTitle": "Hexo Filters post_permalink categories",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "uncategorized",
      "fullTitle": "Hexo Filters post_permalink uncategorized",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "extra data",
      "fullTitle": "Hexo Filters post_permalink extra data",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Filters post_permalink id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post",
      "fullTitle": "Hexo Filters Render post post",
      "duration": 8,
      "currentRetry": 0,
      "err": {
        "message": "expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'",
        "showDiff": true,
        "actual": "<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "expected": "<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "stack": "AssertionError: expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'\n    at test/scripts/filters/render_post.js:31:34\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "page",
      "fullTitle": "Hexo Filters Render post page",
      "duration": 5,
      "currentRetry": 0,
      "err": {
        "message": "expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'",
        "showDiff": true,
        "actual": "<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "expected": "<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "stack": "AssertionError: expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'\n    at test/scripts/filters/render_post.js:49:34\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "default",
      "fullTitle": "Hexo Filters Save database default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "do nothing if hexo is not initialized",
      "fullTitle": "Hexo Filters Save database do nothing if hexo is not initialized",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Filters Titlecase disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "enabled",
      "fullTitle": "Hexo Filters Titlecase enabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderable",
      "fullTitle": "Hexo Generators asset renderable",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "not renderable",
      "fullTitle": "Hexo Generators asset not renderable",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove assets which does not exist",
      "fullTitle": "Hexo Generators asset remove assets which does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't remove extension name",
      "fullTitle": "Hexo Generators asset don't remove extension name",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default layout",
      "fullTitle": "Hexo Generators page default layout",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom layout",
      "fullTitle": "Hexo Generators page custom layout",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "layout disabled",
      "fullTitle": "Hexo Generators page layout disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skip render",
      "fullTitle": "Hexo Generators page skip render",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skip render - multiple rules",
      "fullTitle": "Hexo Generators page skip render - multiple rules",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skip render - don't replace extension name",
      "fullTitle": "Hexo Generators page skip render - don't replace extension name",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default layout",
      "fullTitle": "Hexo Generators post default layout",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom layout",
      "fullTitle": "Hexo Generators post custom layout",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "layout disabled",
      "fullTitle": "Hexo Generators post layout disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "prev/next post",
      "fullTitle": "Hexo Generators post prev/next post",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "a string",
      "fullTitle": "Hexo Helpers css a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "an array",
      "fullTitle": "Hexo Helpers css an array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple strings",
      "fullTitle": "Hexo Helpers css multiple strings",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple arrays",
      "fullTitle": "Hexo Helpers css multiple arrays",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "mixed",
      "fullTitle": "Hexo Helpers css mixed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "date",
      "fullTitle": "Hexo Helpers date date",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "date_xml",
      "fullTitle": "Hexo Helpers date date_xml",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "time",
      "fullTitle": "Hexo Helpers date time",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "full_date",
      "fullTitle": "Hexo Helpers date full_date",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "time_tag",
      "fullTitle": "Hexo Helpers date time_tag",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers favicon_tag path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers feed_tag path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Helpers feed_tag title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type",
      "fullTitle": "Hexo Helpers feed_tag type",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cache enabled",
      "fullTitle": "Hexo Helpers fragment_cache cache enabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cache disabled",
      "fullTitle": "Hexo Helpers fragment_cache cache disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers gravatar default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "size",
      "fullTitle": "Hexo Helpers gravatar size",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "options",
      "fullTitle": "Hexo Helpers gravatar options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers image_tag path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (string)",
      "fullTitle": "Hexo Helpers image_tag class (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (array)",
      "fullTitle": "Hexo Helpers image_tag class (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "alt",
      "fullTitle": "Hexo Helpers image_tag alt",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_current",
      "fullTitle": "Hexo Helpers is is_current",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_home",
      "fullTitle": "Hexo Helpers is is_home",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_post",
      "fullTitle": "Hexo Helpers is is_post",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_archive",
      "fullTitle": "Hexo Helpers is is_archive",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_year",
      "fullTitle": "Hexo Helpers is is_year",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_month",
      "fullTitle": "Hexo Helpers is is_month",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_category",
      "fullTitle": "Hexo Helpers is is_category",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_tag",
      "fullTitle": "Hexo Helpers is is_tag",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "a string",
      "fullTitle": "Hexo Helpers js a string",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "an array",
      "fullTitle": "Hexo Helpers js an array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple strings",
      "fullTitle": "Hexo Helpers js multiple strings",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple arrays",
      "fullTitle": "Hexo Helpers js multiple arrays",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "mixed",
      "fullTitle": "Hexo Helpers js mixed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers link_to path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Helpers link_to title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "external (boolean)",
      "fullTitle": "Hexo Helpers link_to external (boolean)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "external (object)",
      "fullTitle": "Hexo Helpers link_to external (object)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (string)",
      "fullTitle": "Hexo Helpers link_to class (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (array)",
      "fullTitle": "Hexo Helpers link_to class (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Helpers link_to id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers list_archives default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: yearly",
      "fullTitle": "Hexo Helpers list_archives type: yearly",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "format",
      "fullTitle": "Hexo Helpers list_archives format",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "style: false",
      "fullTitle": "Hexo Helpers list_archives style: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "show_count",
      "fullTitle": "Hexo Helpers list_archives show_count",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers list_archives order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers list_archives transform",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers list_archives separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers list_archives class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.lang",
      "fullTitle": "Hexo Helpers list_archives page.lang",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "config.language",
      "fullTitle": "Hexo Helpers list_archives config.language",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "timezone",
      "fullTitle": "Hexo Helpers list_archives timezone",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers list_categories default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "specified collection",
      "fullTitle": "Hexo Helpers list_categories specified collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "style: false",
      "fullTitle": "Hexo Helpers list_categories style: false",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "show_count: false",
      "fullTitle": "Hexo Helpers list_categories show_count: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers list_categories class",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "depth",
      "fullTitle": "Hexo Helpers list_categories depth",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "orderby",
      "fullTitle": "Hexo Helpers list_categories orderby",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers list_categories order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers list_categories transform",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers list_categories separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers list_posts default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "specified collection",
      "fullTitle": "Hexo Helpers list_posts specified collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "style: false",
      "fullTitle": "Hexo Helpers list_posts style: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "orderby",
      "fullTitle": "Hexo Helpers list_posts orderby",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers list_posts order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers list_posts class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers list_posts transform",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers list_posts separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "amount",
      "fullTitle": "Hexo Helpers list_posts amount",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers list_tags default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "specified collection",
      "fullTitle": "Hexo Helpers list_tags specified collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "style: false",
      "fullTitle": "Hexo Helpers list_tags style: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "show_count: false",
      "fullTitle": "Hexo Helpers list_tags show_count: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers list_tags class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "orderby",
      "fullTitle": "Hexo Helpers list_tags orderby",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers list_tags order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers list_tags transform",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers list_tags separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "amount",
      "fullTitle": "Hexo Helpers list_tags amount",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers mail_to path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text",
      "fullTitle": "Hexo Helpers mail_to text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "subject",
      "fullTitle": "Hexo Helpers mail_to subject",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cc (string)",
      "fullTitle": "Hexo Helpers mail_to cc (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cc (array)",
      "fullTitle": "Hexo Helpers mail_to cc (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "bcc (string)",
      "fullTitle": "Hexo Helpers mail_to bcc (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "bcc (array)",
      "fullTitle": "Hexo Helpers mail_to bcc (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "body",
      "fullTitle": "Hexo Helpers mail_to body",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (string)",
      "fullTitle": "Hexo Helpers mail_to class (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (array)",
      "fullTitle": "Hexo Helpers mail_to class (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Helpers mail_to id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers markdown default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers number_format default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "precision",
      "fullTitle": "Hexo Helpers number_format precision",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "delimiter",
      "fullTitle": "Hexo Helpers number_format delimiter",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers number_format separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers open_graph default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title - page",
      "fullTitle": "Hexo Helpers open_graph title - page",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title - options",
      "fullTitle": "Hexo Helpers open_graph title - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type - options",
      "fullTitle": "Hexo Helpers open_graph type - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type - is_post",
      "fullTitle": "Hexo Helpers open_graph type - is_post",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "url - context",
      "fullTitle": "Hexo Helpers open_graph url - context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "url - options",
      "fullTitle": "Hexo Helpers open_graph url - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - content",
      "fullTitle": "Hexo Helpers open_graph images - content",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - string",
      "fullTitle": "Hexo Helpers open_graph images - string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - array",
      "fullTitle": "Hexo Helpers open_graph images - array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - don't pollute context",
      "fullTitle": "Hexo Helpers open_graph images - don't pollute context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - options.image",
      "fullTitle": "Hexo Helpers open_graph images - options.image",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - options.images",
      "fullTitle": "Hexo Helpers open_graph images - options.images",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "site_name - options",
      "fullTitle": "Hexo Helpers open_graph site_name - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - page",
      "fullTitle": "Hexo Helpers open_graph description - page",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - options",
      "fullTitle": "Hexo Helpers open_graph description - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - excerpt",
      "fullTitle": "Hexo Helpers open_graph description - excerpt",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - content",
      "fullTitle": "Hexo Helpers open_graph description - content",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - config",
      "fullTitle": "Hexo Helpers open_graph description - config",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - escape",
      "fullTitle": "Hexo Helpers open_graph description - escape",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "twitter_card - options",
      "fullTitle": "Hexo Helpers open_graph twitter_card - options",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "twitter_id - options (without prefixing @)",
      "fullTitle": "Hexo Helpers open_graph twitter_id - options (without prefixing @)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "twitter_id - options (with prefixing @)",
      "fullTitle": "Hexo Helpers open_graph twitter_id - options (with prefixing @)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "twitter_site - options",
      "fullTitle": "Hexo Helpers open_graph twitter_site - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "google_plus - options",
      "fullTitle": "Hexo Helpers open_graph google_plus - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "fb_admins - options",
      "fullTitle": "Hexo Helpers open_graph fb_admins - options",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "fb_app_id - options",
      "fullTitle": "Hexo Helpers open_graph fb_app_id - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 1",
      "fullTitle": "Hexo Helpers paginator current = 1",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 2",
      "fullTitle": "Hexo Helpers paginator current = 2",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 3",
      "fullTitle": "Hexo Helpers paginator current = 3",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 4",
      "fullTitle": "Hexo Helpers paginator current = 4",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 5",
      "fullTitle": "Hexo Helpers paginator current = 5",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 6",
      "fullTitle": "Hexo Helpers paginator current = 6",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 7",
      "fullTitle": "Hexo Helpers paginator current = 7",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 8",
      "fullTitle": "Hexo Helpers paginator current = 8",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 9",
      "fullTitle": "Hexo Helpers paginator current = 9",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 10",
      "fullTitle": "Hexo Helpers paginator current = 10",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "show_all",
      "fullTitle": "Hexo Helpers paginator show_all",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "end_size",
      "fullTitle": "Hexo Helpers paginator end_size",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "end_size = 0",
      "fullTitle": "Hexo Helpers paginator end_size = 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "mid_size",
      "fullTitle": "Hexo Helpers paginator mid_size",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "mid_size = 0",
      "fullTitle": "Hexo Helpers paginator mid_size = 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "space",
      "fullTitle": "Hexo Helpers paginator space",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no space",
      "fullTitle": "Hexo Helpers paginator no space",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "base",
      "fullTitle": "Hexo Helpers paginator base",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "format",
      "fullTitle": "Hexo Helpers paginator format",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "prev_text / next_text",
      "fullTitle": "Hexo Helpers paginator prev_text / next_text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "prev_next",
      "fullTitle": "Hexo Helpers paginator prev_next",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers paginator transform",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "context",
      "fullTitle": "Hexo Helpers paginator context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 0",
      "fullTitle": "Hexo Helpers paginator current = 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers partial default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "locals",
      "fullTitle": "Hexo Helpers partial locals",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cache",
      "fullTitle": "Hexo Helpers partial cache",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "only",
      "fullTitle": "Hexo Helpers partial only",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "a partial in another partial",
      "fullTitle": "Hexo Helpers partial a partial in another partial",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "name must be a string",
      "fullTitle": "Hexo Helpers partial name must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "from root",
      "fullTitle": "Hexo Helpers relative_url from root",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "from same root",
      "fullTitle": "Hexo Helpers relative_url from same root",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "from different root",
      "fullTitle": "Hexo Helpers relative_url from different root",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers render default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers search_form default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers search_form class",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text",
      "fullTitle": "Hexo Helpers search_form text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "button enabled",
      "fullTitle": "Hexo Helpers search_form button enabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "button text",
      "fullTitle": "Hexo Helpers search_form button text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers tagcloud default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "specified collection",
      "fullTitle": "Hexo Helpers tagcloud specified collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "font size",
      "fullTitle": "Hexo Helpers tagcloud font size",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "font unit",
      "fullTitle": "Hexo Helpers tagcloud font unit",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "orderby",
      "fullTitle": "Hexo Helpers tagcloud orderby",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers tagcloud order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "amount",
      "fullTitle": "Hexo Helpers tagcloud amount",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers tagcloud transform",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "color: name",
      "fullTitle": "Hexo Helpers tagcloud color: name",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "color: hex",
      "fullTitle": "Hexo Helpers tagcloud color: hex",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "color: RGBA",
      "fullTitle": "Hexo Helpers tagcloud color: RGBA",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "color: HSLA",
      "fullTitle": "Hexo Helpers tagcloud color: HSLA",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers toc default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers toc class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list_number",
      "fullTitle": "Hexo Helpers toc list_number",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "internal url (relative off)",
      "fullTitle": "Hexo Helpers url_for internal url (relative off)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "internal url (relative on)",
      "fullTitle": "Hexo Helpers url_for internal url (relative on)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "internal url (options.relative)",
      "fullTitle": "Hexo Helpers url_for internal url (options.relative)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "external url",
      "fullTitle": "Hexo Helpers url_for external url",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "constructor",
      "fullTitle": "Hexo Core Hexo constructor",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "call()",
      "fullTitle": "Hexo Core Hexo call()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "call() - callback",
      "fullTitle": "Hexo Core Hexo call() - callback",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "call() - console not registered",
      "fullTitle": "Hexo Core Hexo call() - console not registered",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "init()",
      "fullTitle": "Hexo Core Hexo init()",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "model()",
      "fullTitle": "Hexo Core Hexo model()",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_showDrafts()",
      "fullTitle": "Hexo Core Hexo _showDrafts()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load() - source",
      "fullTitle": "Hexo Core Hexo load() - source",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load() - theme",
      "fullTitle": "Hexo Core Hexo load() - theme",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - source",
      "fullTitle": "Hexo Core Hexo watch() - source",
      "duration": 307,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - theme",
      "fullTitle": "Hexo Core Hexo watch() - theme",
      "duration": 311,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unwatch()",
      "fullTitle": "Hexo Core Hexo unwatch()",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exit()",
      "fullTitle": "Hexo Core Hexo exit()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exit() - error handling",
      "fullTitle": "Hexo Core Hexo exit() - error handling",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "draft visibility",
      "fullTitle": "Hexo Core Hexo draft visibility",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "future posts",
      "fullTitle": "Hexo Core Hexo future posts",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "future pages",
      "fullTitle": "Hexo Core Hexo future pages",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "locals.data",
      "fullTitle": "Hexo Core Hexo locals.data",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_generate()",
      "fullTitle": "Hexo Core Hexo _generate()",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - layout",
      "fullTitle": "Hexo Core Hexo _generate() - layout",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - layout array",
      "fullTitle": "Hexo Core Hexo _generate() - layout array",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - layout not exist",
      "fullTitle": "Hexo Core Hexo _generate() - layout not exist",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_generate() - remove old routes",
      "fullTitle": "Hexo Core Hexo _generate() - remove old routes",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - return nothing in generator",
      "fullTitle": "Hexo Core Hexo _generate() - return nothing in generator",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - validate locals",
      "fullTitle": "Hexo Core Hexo _generate() - validate locals",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - do nothing if it's generating",
      "fullTitle": "Hexo Core Hexo _generate() - do nothing if it's generating",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_generate() - reset cache for new route",
      "fullTitle": "Hexo Core Hexo _generate() - reset cache for new route",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - cache disabled & update template",
      "fullTitle": "Hexo Core Hexo _generate() - cache disabled & update template",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "execFilter()",
      "fullTitle": "Hexo Core Hexo execFilter()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execFilterSync()",
      "fullTitle": "Hexo Core Hexo execFilterSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "config file does not exist",
      "fullTitle": "Hexo Core Load config config file does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_config.yml exists",
      "fullTitle": "Hexo Core Load config _config.yml exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_config.json exists",
      "fullTitle": "Hexo Core Load config _config.json exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_config.txt exists",
      "fullTitle": "Hexo Core Load config _config.txt exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom config path",
      "fullTitle": "Hexo Core Load config custom config path",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom config path with different extension name",
      "fullTitle": "Hexo Core Load config custom config path with different extension name",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "handle trailing \"/\" of url",
      "fullTitle": "Hexo Core Load config handle trailing \"/\" of url",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom public_dir",
      "fullTitle": "Hexo Core Load config custom public_dir",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom source_dir",
      "fullTitle": "Hexo Core Load config custom source_dir",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom theme",
      "fullTitle": "Hexo Core Load config custom theme",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "database does not exist",
      "fullTitle": "Hexo Core Load database database does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "database load success",
      "fullTitle": "Hexo Core Load database database load success",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't load database if loaded",
      "fullTitle": "Hexo Core Load database don't load database if loaded",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "database load failed",
      "fullTitle": "Hexo Core Load database database load failed",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load plugins",
      "fullTitle": "Hexo Core Load plugins load plugins",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "ignore plugins whose name is not started with \"hexo-\"",
      "fullTitle": "Hexo Core Load plugins ignore plugins whose name is not started with \"hexo-\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "ignore plugins which are in package.json but not exist actually",
      "fullTitle": "Hexo Core Load plugins ignore plugins which are in package.json but not exist actually",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load scripts",
      "fullTitle": "Hexo Core Load plugins load scripts",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load theme scripts",
      "fullTitle": "Hexo Core Load plugins load theme scripts",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't load plugins in safe mode",
      "fullTitle": "Hexo Core Load plugins don't load plugins in safe mode",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - name must be a string",
      "fullTitle": "Hexo Core Locals get() - name must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - function",
      "fullTitle": "Hexo Core Locals set() - function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - not function",
      "fullTitle": "Hexo Core Locals set() - not function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - name must be a string",
      "fullTitle": "Hexo Core Locals set() - name must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - value is required",
      "fullTitle": "Hexo Core Locals set() - value is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove()",
      "fullTitle": "Hexo Core Locals remove()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove() - name must be a string",
      "fullTitle": "Hexo Core Locals remove() - name must be a string",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "toObject()",
      "fullTitle": "Hexo Core Locals toObject()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "invalidate()",
      "fullTitle": "Hexo Core Locals invalidate()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create()",
      "fullTitle": "Hexo Core Post create()",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create() - slug",
      "fullTitle": "Hexo Core Post create() - slug",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/foo.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/foo.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/foo.md'\n    at test/scripts/hexo/post.js:91:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - filename_case",
      "fullTitle": "Hexo Core Post create() - filename_case",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-0.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-0.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-0.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md'\n    at test/scripts/hexo/post.js:117:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - layout",
      "fullTitle": "Hexo Core Post create() - layout",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-1.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-1.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-1.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:144:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - extra data",
      "fullTitle": "Hexo Core Post create() - extra data",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-2.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-2.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-2.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:170:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - rename if target existed",
      "fullTitle": "Hexo Core Post create() - rename if target existed",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-4.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-4.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-4.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md'\n    at test/scripts/hexo/post.js:190:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - replace existing files",
      "fullTitle": "Hexo Core Post create() - replace existing files",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:212:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - asset folder",
      "fullTitle": "Hexo Core Post create() - asset folder",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "name": "Error",
        "message": "ENOENT: no such file or directory, stat '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World'",
        "cause": {
          "errno": -2,
          "code": "ENOENT",
          "syscall": "stat",
          "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World"
        },
        "isOperational": true,
        "stack": "Error: ENOENT: no such file or directory, stat '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World'",
        "errno": -2,
        "code": "ENOENT",
        "syscall": "stat",
        "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World"
      }
    },
    {
      "title": "create() - follow the separator style in the scaffold",
      "fullTitle": "Hexo Core Post create() - follow the separator style in the scaffold",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create() - JSON front-matter",
      "fullTitle": "Hexo Core Post create() - JSON front-matter",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create() - non-string title",
      "fullTitle": "Hexo Core Post create() - non-string title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "publish()",
      "fullTitle": "Hexo Core Post publish()",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-7.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-7.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-7.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:319:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "publish() - layout",
      "fullTitle": "Hexo Core Post publish() - layout",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-8.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-8.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-8.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:355:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "publish() - rename if target existed",
      "fullTitle": "Hexo Core Post publish() - rename if target existed",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-10.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-10.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-10.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md'\n    at test/scripts/hexo/post.js:379:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "publish() - replace existing files",
      "fullTitle": "Hexo Core Post publish() - replace existing files",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:397:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "publish() - asset folder",
      "fullTitle": "Hexo Core Post publish() - asset folder",
      "duration": 6,
      "currentRetry": 0,
      "err": {
        "name": "Error",
        "message": "ENOENT: no such file or directory, scandir '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World'",
        "cause": {
          "errno": -2,
          "code": "ENOENT",
          "syscall": "scandir",
          "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World"
        },
        "isOperational": true,
        "stack": "Error: ENOENT: no such file or directory, scandir '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World'",
        "errno": -2,
        "code": "ENOENT",
        "syscall": "scandir",
        "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World"
      }
    },
    {
      "title": "publish() - non-string title",
      "fullTitle": "Hexo Core Post publish() - non-string title",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render()",
      "fullTitle": "Hexo Core Post render()",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'",
        "showDiff": true,
        "actual": "<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "expected": "<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "stack": "AssertionError: expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'\n    at test/scripts/hexo/post.js:463:34\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "render() - file",
      "fullTitle": "Hexo Core Post render() - file",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - toString",
      "fullTitle": "Hexo Core Post render() - toString",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - skip render phase if it's swig file",
      "fullTitle": "Hexo Core Post render() - skip render phase if it's swig file",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - escaping swig blocks with similar names",
      "fullTitle": "Hexo Core Post render() - escaping swig blocks with similar names",
      "duration": 137,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string\n    at assertPath (path.js:39:11)\n    at Object.extname (path.js:1376:5)\n    at getExtname (lib/hexo/render.js:8:24)\n    at lib/hexo/render.js:47:26\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Promise._settlePromiseAtPostResolution (node_modules/bluebird/js/main/promise.js:248:10)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)",
        "message": "The \"path\" argument must be of type string"
      }
    },
    {
      "title": "render() - recover escaped swig blocks which is html escaped",
      "fullTitle": "Hexo Core Post render() - recover escaped swig blocks which is html escaped",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isRenderable()",
      "fullTitle": "Hexo Core Render isRenderable()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isRenderableSync()",
      "fullTitle": "Hexo Core Render isRenderableSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "getOutput()",
      "fullTitle": "Hexo Core Render getOutput()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - path",
      "fullTitle": "Hexo Core Render render() - path",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - text (without engine)",
      "fullTitle": "Hexo Core Render render() - text (without engine)",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string\n    at assertPath (path.js:39:11)\n    at Object.extname (path.js:1376:5)\n    at getExtname (lib/hexo/render.js:8:24)\n    at lib/hexo/render.js:47:26\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Promise._settlePromiseAtPostResolution (node_modules/bluebird/js/main/promise.js:248:10)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)",
        "message": "The \"path\" argument must be of type string"
      }
    },
    {
      "title": "render() - text (with engine)",
      "fullTitle": "Hexo Core Render render() - text (with engine)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - no path and text",
      "fullTitle": "Hexo Core Render render() - no path and text",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - options",
      "fullTitle": "Hexo Core Render render() - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - toString",
      "fullTitle": "Hexo Core Render render() - toString",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - custom toString method",
      "fullTitle": "Hexo Core Render render() - custom toString method",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - after_render filter",
      "fullTitle": "Hexo Core Render render() - after_render filter",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - after_render filter: use the given output extension if not found",
      "fullTitle": "Hexo Core Render render() - after_render filter: use the given output extension if not found",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - path",
      "fullTitle": "Hexo Core Render renderSync() - path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - text (without engine)",
      "fullTitle": "Hexo Core Render renderSync() - text (without engine)",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string\n    at assertPath (path.js:39:11)\n    at Object.extname (path.js:1376:5)\n    at getExtname (lib/hexo/render.js:8:24)\n    at Render.renderSync (lib/hexo/render.js:77:28)\n    at Context.<anonymous> (test/scripts/hexo/render.js:190:30)",
        "message": "The \"path\" argument must be of type string"
      }
    },
    {
      "title": "renderSync() - text (with engine)",
      "fullTitle": "Hexo Core Render renderSync() - text (with engine)",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - no path and text",
      "fullTitle": "Hexo Core Render renderSync() - no path and text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - options",
      "fullTitle": "Hexo Core Render renderSync() - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - toString",
      "fullTitle": "Hexo Core Render renderSync() - toString",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - custom toString method",
      "fullTitle": "Hexo Core Render renderSync() - custom toString method",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - after_render filter",
      "fullTitle": "Hexo Core Render renderSync() - after_render filter",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - after_render filter: use the given output extension if not found",
      "fullTitle": "Hexo Core Render renderSync() - after_render filter: use the given output extension if not found",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "format()",
      "fullTitle": "Hexo Core Router format()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "format() - path must be a string",
      "fullTitle": "Hexo Core Router format() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - string",
      "fullTitle": "Hexo Core Router set() - string",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "set() - function",
      "fullTitle": "Hexo Core Router set() - function",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "set() - function (callback style)",
      "fullTitle": "Hexo Core Router set() - function (callback style)",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "set() - readable stream",
      "fullTitle": "Hexo Core Router set() - readable stream",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - modified",
      "fullTitle": "Hexo Core Router set() - modified",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - path must be a string",
      "fullTitle": "Hexo Core Router set() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - data is required",
      "fullTitle": "Hexo Core Router set() - data is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - error handling",
      "fullTitle": "Hexo Core Router get() - error handling",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - no data",
      "fullTitle": "Hexo Core Router get() - no data",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - empty readable stream",
      "fullTitle": "Hexo Core Router get() - empty readable stream",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - large readable stream (more than 65535 bits)",
      "fullTitle": "Hexo Core Router get() - large readable stream (more than 65535 bits)",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - path must be a string",
      "fullTitle": "Hexo Core Router get() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - export stringified JSON object",
      "fullTitle": "Hexo Core Router get() - export stringified JSON object",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Core Router list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isModified()",
      "fullTitle": "Hexo Core Router isModified()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isModified() - path must be a string",
      "fullTitle": "Hexo Core Router isModified() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove()",
      "fullTitle": "Hexo Core Router remove()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove() - path must be a string",
      "fullTitle": "Hexo Core Router remove() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - file exists",
      "fullTitle": "Hexo Core Scaffold get() - file exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - normal scaffold",
      "fullTitle": "Hexo Core Scaffold get() - normal scaffold",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - file exists",
      "fullTitle": "Hexo Core Scaffold set() - file exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - file does not exist",
      "fullTitle": "Hexo Core Scaffold set() - file does not exist",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove() - file exist",
      "fullTitle": "Hexo Core Scaffold remove() - file exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove() - file does not exist",
      "fullTitle": "Hexo Core Scaffold remove() - file does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "package.json does not exist",
      "fullTitle": "Hexo Core Update package.json package.json does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "package.json exists, but the version doesn't match",
      "fullTitle": "Hexo Core Update package.json package.json exists, but the version doesn't match",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "package.json exists, but don't have hexo data",
      "fullTitle": "Hexo Core Update package.json package.json exists, but don't have hexo data",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "package.json exists and everything is ok",
      "fullTitle": "Hexo Core Update package.json package.json exists and everything is ok",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default values",
      "fullTitle": "Hexo Models Asset default values",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_id - required",
      "fullTitle": "Hexo Models Asset _id - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - required",
      "fullTitle": "Hexo Models Asset path - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source - virtual",
      "fullTitle": "Hexo Models Asset source - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_id - required",
      "fullTitle": "Hexo Models Cache _id - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "value()",
      "fullTitle": "Hexo Models SchemaTypeCacheString value()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "name - required",
      "fullTitle": "Hexo Models Category name - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "parent - reference",
      "fullTitle": "Hexo Models Category parent - reference",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - virtual",
      "fullTitle": "Hexo Models Category slug - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - category_map",
      "fullTitle": "Hexo Models Category slug - category_map",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 0",
      "fullTitle": "Hexo Models Category slug - filename_case: 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 1",
      "fullTitle": "Hexo Models Category slug - filename_case: 1",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 2",
      "fullTitle": "Hexo Models Category slug - filename_case: 2",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - parent",
      "fullTitle": "Hexo Models Category slug - parent",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - virtual",
      "fullTitle": "Hexo Models Category path - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "permalink - virtual",
      "fullTitle": "Hexo Models Category permalink - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - virtual",
      "fullTitle": "Hexo Models Category posts - virtual",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - draft",
      "fullTitle": "Hexo Models Category posts - draft",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - future",
      "fullTitle": "Hexo Models Category posts - future",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "check whether a category exists",
      "fullTitle": "Hexo Models Category check whether a category exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "check whether a category exists (with parent)",
      "fullTitle": "Hexo Models Category check whether a category exists (with parent)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove PostCategory references when a category is removed",
      "fullTitle": "Hexo Models Category remove PostCategory references when a category is removed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cast()",
      "fullTitle": "Hexo Models SchemaTypeMoment cast()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cast() - default",
      "fullTitle": "Hexo Models SchemaTypeMoment cast() - default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cast() - language",
      "fullTitle": "Hexo Models SchemaTypeMoment cast() - language",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cast() - timezone",
      "fullTitle": "Hexo Models SchemaTypeMoment cast() - timezone",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "validate()",
      "fullTitle": "Hexo Models SchemaTypeMoment validate()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "validate() - required",
      "fullTitle": "Hexo Models SchemaTypeMoment validate() - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "match()",
      "fullTitle": "Hexo Models SchemaTypeMoment match()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "compare()",
      "fullTitle": "Hexo Models SchemaTypeMoment compare()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "parse()",
      "fullTitle": "Hexo Models SchemaTypeMoment parse()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "value()",
      "fullTitle": "Hexo Models SchemaTypeMoment value()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "q$day()",
      "fullTitle": "Hexo Models SchemaTypeMoment q$day()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "q$month()",
      "fullTitle": "Hexo Models SchemaTypeMoment q$month()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "q$year()",
      "fullTitle": "Hexo Models SchemaTypeMoment q$year()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "u$inc()",
      "fullTitle": "Hexo Models SchemaTypeMoment u$inc()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "u$dec()",
      "fullTitle": "Hexo Models SchemaTypeMoment u$dec()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default values",
      "fullTitle": "Hexo Models Page default values",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source - required",
      "fullTitle": "Hexo Models Page source - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - required",
      "fullTitle": "Hexo Models Page path - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "permalink - virtual",
      "fullTitle": "Hexo Models Page permalink - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "full_source - virtual",
      "fullTitle": "Hexo Models Page full_source - virtual",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default values",
      "fullTitle": "Hexo Models Post default values",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source - required",
      "fullTitle": "Hexo Models Post source - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - required",
      "fullTitle": "Hexo Models Post slug - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - virtual",
      "fullTitle": "Hexo Models Post path - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "permalink - virtual",
      "fullTitle": "Hexo Models Post permalink - virtual",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "full_source - virtual",
      "fullTitle": "Hexo Models Post full_source - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset_dir - virtual",
      "fullTitle": "Hexo Models Post asset_dir - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tags - virtual",
      "fullTitle": "Hexo Models Post tags - virtual",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "categories - virtual",
      "fullTitle": "Hexo Models Post categories - virtual",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "setTags() - old tags should be removed",
      "fullTitle": "Hexo Models Post setTags() - old tags should be removed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "setTags() - sync problem",
      "fullTitle": "Hexo Models Post setTags() - sync problem",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "setCategories() - old categories should be removed",
      "fullTitle": "Hexo Models Post setCategories() - old categories should be removed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove PostTag references when a post is removed",
      "fullTitle": "Hexo Models Post remove PostTag references when a post is removed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove PostCategory references when a post is removed",
      "fullTitle": "Hexo Models Post remove PostCategory references when a post is removed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove related assets when a post is removed",
      "fullTitle": "Hexo Models Post remove related assets when a post is removed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default values",
      "fullTitle": "Hexo Models PostAsset default values",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_id - required",
      "fullTitle": "Hexo Models PostAsset _id - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - required",
      "fullTitle": "Hexo Models PostAsset slug - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - virtual",
      "fullTitle": "Hexo Models PostAsset path - virtual",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source - virtual",
      "fullTitle": "Hexo Models PostAsset source - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "name - required",
      "fullTitle": "Hexo Models Tag name - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - virtual",
      "fullTitle": "Hexo Models Tag slug - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - tag_map",
      "fullTitle": "Hexo Models Tag slug - tag_map",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 0",
      "fullTitle": "Hexo Models Tag slug - filename_case: 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 1",
      "fullTitle": "Hexo Models Tag slug - filename_case: 1",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 2",
      "fullTitle": "Hexo Models Tag slug - filename_case: 2",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - virtual",
      "fullTitle": "Hexo Models Tag path - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "permalink - virtual",
      "fullTitle": "Hexo Models Tag permalink - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - virtual",
      "fullTitle": "Hexo Models Tag posts - virtual",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - draft",
      "fullTitle": "Hexo Models Tag posts - draft",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - future",
      "fullTitle": "Hexo Models Tag posts - future",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "check whether a tag exists",
      "fullTitle": "Hexo Models Tag check whether a tag exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove PostTag references when a tag is removed",
      "fullTitle": "Hexo Models Tag remove PostTag references when a tag is removed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: create",
      "fullTitle": "Hexo Processors asset asset - type: create",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: update",
      "fullTitle": "Hexo Processors asset asset - type: update",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: skip",
      "fullTitle": "Hexo Processors asset asset - type: skip",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: delete",
      "fullTitle": "Hexo Processors asset asset - type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - type: create",
      "fullTitle": "Hexo Processors asset page - type: create",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - type: update",
      "fullTitle": "Hexo Processors asset page - type: update",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - type: delete",
      "fullTitle": "Hexo Processors asset page - type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - use the status of the source file if date not set",
      "fullTitle": "Hexo Processors asset page - use the status of the source file if date not set",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - permalink",
      "fullTitle": "Hexo Processors asset page - permalink",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - permalink (without extension name)",
      "fullTitle": "Hexo Processors asset page - permalink (without extension name)",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - permalink (with trailing slash)",
      "fullTitle": "Hexo Processors asset page - permalink (with trailing slash)",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - set layout to false if output is not html",
      "fullTitle": "Hexo Processors asset page - set layout to false if output is not html",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - don't set layout to false if layout is set but output is not html",
      "fullTitle": "Hexo Processors asset page - don't set layout to false if layout is set but output is not html",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - parse date",
      "fullTitle": "Hexo Processors asset page - parse date",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - use file stats instead if date is invalid",
      "fullTitle": "Hexo Processors asset page - use file stats instead if date is invalid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - don't remove extension name",
      "fullTitle": "Hexo Processors asset page - don't remove extension name",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - timezone",
      "fullTitle": "Hexo Processors asset page - timezone",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isTmpFile()",
      "fullTitle": "Hexo Processors common isTmpFile()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isHiddenFile()",
      "fullTitle": "Hexo Processors common isHiddenFile()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "ignoreTmpAndHiddenFile()",
      "fullTitle": "Hexo Processors common ignoreTmpAndHiddenFile()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "toDate()",
      "fullTitle": "Hexo Processors common toDate()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Processors data pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create - yaml",
      "fullTitle": "Hexo Processors data type: create - yaml",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create - json",
      "fullTitle": "Hexo Processors data type: create - json",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create - others",
      "fullTitle": "Hexo Processors data type: create - others",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: update",
      "fullTitle": "Hexo Processors data type: update",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Processors data type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Processors post pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - post_asset_folder disabled",
      "fullTitle": "Hexo Processors post asset - post_asset_folder disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: create",
      "fullTitle": "Hexo Processors post asset - type: create",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: update",
      "fullTitle": "Hexo Processors post asset - type: update",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: skip",
      "fullTitle": "Hexo Processors post asset - type: skip",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: delete",
      "fullTitle": "Hexo Processors post asset - type: delete",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - skip if can't find a matching post",
      "fullTitle": "Hexo Processors post asset - skip if can't find a matching post",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - the related post has been deleted",
      "fullTitle": "Hexo Processors post asset - the related post has been deleted",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - type: create",
      "fullTitle": "Hexo Processors post post - type: create",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - type: update",
      "fullTitle": "Hexo Processors post post - type: update",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - type: delete",
      "fullTitle": "Hexo Processors post post - type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - parse file name",
      "fullTitle": "Hexo Processors post post - parse file name",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - extra data in file name",
      "fullTitle": "Hexo Processors post post - extra data in file name",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - file name does not match to the config",
      "fullTitle": "Hexo Processors post post - file name does not match to the config",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - published",
      "fullTitle": "Hexo Processors post post - published",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - always set published: false for drafts",
      "fullTitle": "Hexo Processors post post - always set published: false for drafts",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - use the status of the source file if date not set",
      "fullTitle": "Hexo Processors post post - use the status of the source file if date not set",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - photo is an alias for photos",
      "fullTitle": "Hexo Processors post post - photo is an alias for photos",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - photos (not array)",
      "fullTitle": "Hexo Processors post post - photos (not array)",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - link without title",
      "fullTitle": "Hexo Processors post post - link without title",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - category is an alias for categories",
      "fullTitle": "Hexo Processors post post - category is an alias for categories",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - categories (not array)",
      "fullTitle": "Hexo Processors post post - categories (not array)",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - tag is an alias for tags",
      "fullTitle": "Hexo Processors post post - tag is an alias for tags",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - tags (not array)",
      "fullTitle": "Hexo Processors post post - tags (not array)",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - post_asset_folder enabled",
      "fullTitle": "Hexo Processors post post - post_asset_folder enabled",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - post_asset_folder disabled",
      "fullTitle": "Hexo Processors post post - post_asset_folder disabled",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - parse date",
      "fullTitle": "Hexo Processors post post - parse date",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - use file stats instead if date is invalid",
      "fullTitle": "Hexo Processors post post - use file stats instead if date is invalid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - timezone",
      "fullTitle": "Hexo Processors post post - timezone",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - new_post_name timezone",
      "fullTitle": "Hexo Processors post post - new_post_name timezone",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "normal",
      "fullTitle": "Hexo Renderers json normal",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "normal",
      "fullTitle": "Hexo Renderers plain normal",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "normal",
      "fullTitle": "Hexo Renderers swig normal",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "override \"for\" tag",
      "fullTitle": "Hexo Renderers swig override \"for\" tag",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "normal",
      "fullTitle": "Hexo Renderers yaml normal",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "escape",
      "fullTitle": "Hexo Renderers yaml escape",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags asset_img default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags asset_img no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset not found",
      "fullTitle": "Hexo Tags asset_img asset not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags asset_link default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Tags asset_link title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags asset_link no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset not found",
      "fullTitle": "Hexo Tags asset_link asset not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags asset_path default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags asset_path no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset not found",
      "fullTitle": "Hexo Tags asset_path asset not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags blockquote default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "author",
      "fullTitle": "Hexo Tags blockquote author",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source",
      "fullTitle": "Hexo Tags blockquote source",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link",
      "fullTitle": "Hexo Tags blockquote link",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link title",
      "fullTitle": "Hexo Tags blockquote link title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "titlecase",
      "fullTitle": "Hexo Tags blockquote titlecase",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags code default",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "lang",
      "fullTitle": "Hexo Tags code lang",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Tags code title",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link",
      "fullTitle": "Hexo Tags code link",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link text",
      "fullTitle": "Hexo Tags code link text",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Tags code disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Tags gist id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "file",
      "fullTitle": "Hexo Tags gist file",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "url",
      "fullTitle": "Hexo Tags iframe url",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "width",
      "fullTitle": "Hexo Tags iframe width",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "height",
      "fullTitle": "Hexo Tags iframe height",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "src",
      "fullTitle": "Hexo Tags img src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "internal src",
      "fullTitle": "Hexo Tags img internal src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src",
      "fullTitle": "Hexo Tags img class + src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + internal src",
      "fullTitle": "Hexo Tags img class + internal src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple classes + src",
      "fullTitle": "Hexo Tags img multiple classes + src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple classes + internal src",
      "fullTitle": "Hexo Tags img multiple classes + internal src",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width",
      "fullTitle": "Hexo Tags img class + src + width",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width + height",
      "fullTitle": "Hexo Tags img class + src + width + height",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + title",
      "fullTitle": "Hexo Tags img class + src + title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width + title",
      "fullTitle": "Hexo Tags img class + src + width + title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width + height + title",
      "fullTitle": "Hexo Tags img class + src + width + height + title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width + height + title + alt",
      "fullTitle": "Hexo Tags img class + src + width + height + title + alt",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags include_code default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Tags include_code title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "lang",
      "fullTitle": "Hexo Tags include_code lang",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "file not found",
      "fullTitle": "Hexo Tags include_code file not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Tags include_code disabled",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Tags jsfiddle id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tabs",
      "fullTitle": "Hexo Tags jsfiddle tabs",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skin",
      "fullTitle": "Hexo Tags jsfiddle skin",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "width",
      "fullTitle": "Hexo Tags jsfiddle width",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "height",
      "fullTitle": "Hexo Tags jsfiddle height",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text + url",
      "fullTitle": "Hexo Tags link text + url",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text + url + external",
      "fullTitle": "Hexo Tags link text + url + external",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text + url + title",
      "fullTitle": "Hexo Tags link text + url + title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text + url + external + title",
      "fullTitle": "Hexo Tags link text + url + external + title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags post_link default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Tags post_link title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags post_link no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post not found",
      "fullTitle": "Hexo Tags post_link post not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags post_path default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags post_path no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post not found",
      "fullTitle": "Hexo Tags post_path post not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags pullquote default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Tags pullquote class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Tags vimeo id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Tags youtube id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "getView()",
      "fullTitle": "Hexo Theme Theme getView()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "getView() - escape backslashes",
      "fullTitle": "Hexo Theme Theme getView() - escape backslashes",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "setView()",
      "fullTitle": "Hexo Theme Theme setView()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "removeView()",
      "fullTitle": "Hexo Theme Theme removeView()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "constructor",
      "fullTitle": "Hexo Theme View constructor",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "parse front-matter",
      "fullTitle": "Hexo Theme View parse front-matter",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render()",
      "fullTitle": "Hexo Theme View render()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - front-matter",
      "fullTitle": "Hexo Theme View render() - front-matter",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - helper",
      "fullTitle": "Hexo Theme View render() - helper",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - layout",
      "fullTitle": "Hexo Theme View render() - layout",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - layout not found",
      "fullTitle": "Hexo Theme View render() - layout not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - callback",
      "fullTitle": "Hexo Theme View render() - callback",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - callback (without options)",
      "fullTitle": "Hexo Theme View render() - callback (without options)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync()",
      "fullTitle": "Hexo Theme View renderSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - front-matter",
      "fullTitle": "Hexo Theme View renderSync() - front-matter",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - helper",
      "fullTitle": "Hexo Theme View renderSync() - helper",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - layout",
      "fullTitle": "Hexo Theme View renderSync() - layout",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - layout not found",
      "fullTitle": "Hexo Theme View renderSync() - layout not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_resolveLayout()",
      "fullTitle": "Hexo Theme View _resolveLayout()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Theme processors config pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create",
      "fullTitle": "Hexo Theme processors config type: create",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Theme processors config type: delete",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load failed",
      "fullTitle": "Hexo Theme processors config load failed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Theme processors i18n pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create",
      "fullTitle": "Hexo Theme processors i18n type: create",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Theme processors i18n type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Theme processors source pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create",
      "fullTitle": "Hexo Theme processors source type: create",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: update",
      "fullTitle": "Hexo Theme processors source type: update",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: skip",
      "fullTitle": "Hexo Theme processors source type: skip",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Theme processors source type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Theme processors view pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create",
      "fullTitle": "Hexo Theme processors view type: create",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Theme processors view type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [
    {
      "title": "watch() - watcher has started",
      "fullTitle": "Hexo Box Box watch() - watcher has started",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unwatch()",
      "fullTitle": "Hexo Box Box unwatch()",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isWatching()",
      "fullTitle": "Hexo Box Box isWatching()",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "processBefore & processAfter events",
      "fullTitle": "Hexo Box Box processBefore & processAfter events",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read all config",
      "fullTitle": "Hexo Console config read all config",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read config",
      "fullTitle": "Hexo Console config read config",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "deployer not found",
      "fullTitle": "Hexo Console deploy deployer not found",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "output",
      "fullTitle": "Hexo Console render output",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "timezone",
      "fullTitle": "Hexo Helpers list_archives timezone",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "model()",
      "fullTitle": "Hexo Core Hexo model()",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unwatch()",
      "fullTitle": "Hexo Core Hexo unwatch()",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "database load failed",
      "fullTitle": "Hexo Core Load database database load failed",
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "parent - reference",
      "fullTitle": "Hexo Models Category parent - reference",
      "currentRetry": 0,
      "err": {}
    }
  ],
  "failures": [
    {
      "title": "slug",
      "fullTitle": "Hexo Console new slug",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "name": "Error",
        "message": "ENOENT: no such file or directory, open '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/console/new_test/source/_posts/foo.md'",
        "cause": {
          "errno": -2,
          "code": "ENOENT",
          "syscall": "open",
          "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/console/new_test/source/_posts/foo.md"
        },
        "isOperational": true,
        "stack": "Error: ENOENT: no such file or directory, open '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/console/new_test/source/_posts/foo.md'",
        "errno": -2,
        "code": "ENOENT",
        "syscall": "open",
        "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/console/new_test/source/_posts/foo.md"
      }
    },
    {
      "title": "post",
      "fullTitle": "Hexo Filters Render post post",
      "duration": 8,
      "currentRetry": 0,
      "err": {
        "message": "expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'",
        "showDiff": true,
        "actual": "<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "expected": "<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "stack": "AssertionError: expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'\n    at test/scripts/filters/render_post.js:31:34\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "page",
      "fullTitle": "Hexo Filters Render post page",
      "duration": 5,
      "currentRetry": 0,
      "err": {
        "message": "expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'",
        "showDiff": true,
        "actual": "<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "expected": "<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "stack": "AssertionError: expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'\n    at test/scripts/filters/render_post.js:49:34\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "_generate()",
      "fullTitle": "Hexo Core Hexo _generate()",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - layout",
      "fullTitle": "Hexo Core Hexo _generate() - layout",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - layout array",
      "fullTitle": "Hexo Core Hexo _generate() - layout array",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - remove old routes",
      "fullTitle": "Hexo Core Hexo _generate() - remove old routes",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - return nothing in generator",
      "fullTitle": "Hexo Core Hexo _generate() - return nothing in generator",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - validate locals",
      "fullTitle": "Hexo Core Hexo _generate() - validate locals",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - reset cache for new route",
      "fullTitle": "Hexo Core Hexo _generate() - reset cache for new route",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "_generate() - cache disabled & update template",
      "fullTitle": "Hexo Core Hexo _generate() - cache disabled & update template",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "create() - slug",
      "fullTitle": "Hexo Core Post create() - slug",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/foo.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/foo.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/foo.md'\n    at test/scripts/hexo/post.js:91:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - filename_case",
      "fullTitle": "Hexo Core Post create() - filename_case",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-0.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-0.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-0.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md'\n    at test/scripts/hexo/post.js:117:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - layout",
      "fullTitle": "Hexo Core Post create() - layout",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-1.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-1.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-1.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:144:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - extra data",
      "fullTitle": "Hexo Core Post create() - extra data",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-2.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-2.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-2.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:170:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - rename if target existed",
      "fullTitle": "Hexo Core Post create() - rename if target existed",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-4.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-4.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-4.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md'\n    at test/scripts/hexo/post.js:190:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - replace existing files",
      "fullTitle": "Hexo Core Post create() - replace existing files",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:212:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "create() - asset folder",
      "fullTitle": "Hexo Core Post create() - asset folder",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "name": "Error",
        "message": "ENOENT: no such file or directory, stat '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World'",
        "cause": {
          "errno": -2,
          "code": "ENOENT",
          "syscall": "stat",
          "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World"
        },
        "isOperational": true,
        "stack": "Error: ENOENT: no such file or directory, stat '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World'",
        "errno": -2,
        "code": "ENOENT",
        "syscall": "stat",
        "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World"
      }
    },
    {
      "title": "publish()",
      "fullTitle": "Hexo Core Post publish()",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-7.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-7.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-7.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:319:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "publish() - layout",
      "fullTitle": "Hexo Core Post publish() - layout",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-8.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-8.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-8.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:355:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "publish() - rename if target existed",
      "fullTitle": "Hexo Core Post publish() - rename if target existed",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-10.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-10.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world-10.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World-1.md'\n    at test/scripts/hexo/post.js:379:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "publish() - replace existing files",
      "fullTitle": "Hexo Core Post publish() - replace existing files",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'",
        "showDiff": true,
        "actual": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md",
        "expected": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md",
        "stack": "AssertionError: expected '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/hello-world.md' to deeply equal '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World.md'\n    at test/scripts/hexo/post.js:397:24\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "publish() - asset folder",
      "fullTitle": "Hexo Core Post publish() - asset folder",
      "duration": 6,
      "currentRetry": 0,
      "err": {
        "name": "Error",
        "message": "ENOENT: no such file or directory, scandir '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World'",
        "cause": {
          "errno": -2,
          "code": "ENOENT",
          "syscall": "scandir",
          "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World"
        },
        "isOperational": true,
        "stack": "Error: ENOENT: no such file or directory, scandir '/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World'",
        "errno": -2,
        "code": "ENOENT",
        "syscall": "scandir",
        "path": "/Users/franktip/BugsJS/bug-dataset/Hexo.output/hexo/test/scripts/hexo/post_test/source/_posts/Hello-World"
      }
    },
    {
      "title": "render()",
      "fullTitle": "Hexo Core Post render()",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'",
        "showDiff": true,
        "actual": "<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "expected": "<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\n<p>some content</p>\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\n</blockquote>\n<blockquote><p>quote content</p>\n<footer><strong>Hello World</strong></footer></blockquote>",
        "stack": "AssertionError: expected '<h1 id=\"Title\"><a href=\"#Title\" class=\"headerlink\" title=\"Title\"></a>Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another-title\"><a href=\"#Another-title\" class=\"headerlink\" title=\"Another title\"></a>Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>' to deeply equal '<h1 id=\"Title\">Title</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> tired &amp;&amp; night:</span><br><span class=\"line\">  sleep()</span><br></pre></td></tr></table></figure>\\n<p>some content</p>\\n<h2 id=\"Another_title\">Another title</h2><blockquote><p>quote content</p>\\n</blockquote>\\n<blockquote><p>quote content</p>\\n<footer><strong>Hello World</strong></footer></blockquote>'\n    at test/scripts/hexo/post.js:463:34\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)"
      }
    },
    {
      "title": "render() - escaping swig blocks with similar names",
      "fullTitle": "Hexo Core Post render() - escaping swig blocks with similar names",
      "duration": 137,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string\n    at assertPath (path.js:39:11)\n    at Object.extname (path.js:1376:5)\n    at getExtname (lib/hexo/render.js:8:24)\n    at lib/hexo/render.js:47:26\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Promise._settlePromiseAtPostResolution (node_modules/bluebird/js/main/promise.js:248:10)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)",
        "message": "The \"path\" argument must be of type string"
      }
    },
    {
      "title": "render() - text (without engine)",
      "fullTitle": "Hexo Core Render render() - text (without engine)",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string\n    at assertPath (path.js:39:11)\n    at Object.extname (path.js:1376:5)\n    at getExtname (lib/hexo/render.js:8:24)\n    at lib/hexo/render.js:47:26\n    at tryCatcher (node_modules/bluebird/js/main/util.js:26:23)\n    at Promise._settlePromiseFromHandler (node_modules/bluebird/js/main/promise.js:510:31)\n    at Promise._settlePromiseAt (node_modules/bluebird/js/main/promise.js:584:18)\n    at Promise._settlePromiseAtPostResolution (node_modules/bluebird/js/main/promise.js:248:10)\n    at Async._drainQueue (node_modules/bluebird/js/main/async.js:128:12)\n    at Async._drainQueues (node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Async.drainQueues [as _onImmediate] (node_modules/bluebird/js/main/async.js:15:14)",
        "message": "The \"path\" argument must be of type string"
      }
    },
    {
      "title": "renderSync() - text (without engine)",
      "fullTitle": "Hexo Core Render renderSync() - text (without engine)",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string\n    at assertPath (path.js:39:11)\n    at Object.extname (path.js:1376:5)\n    at getExtname (lib/hexo/render.js:8:24)\n    at Render.renderSync (lib/hexo/render.js:77:28)\n    at Context.<anonymous> (test/scripts/hexo/render.js:190:30)",
        "message": "The \"path\" argument must be of type string"
      }
    },
    {
      "title": "set() - string",
      "fullTitle": "Hexo Core Router set() - string",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "set() - function",
      "fullTitle": "Hexo Core Router set() - function",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "set() - function (callback style)",
      "fullTitle": "Hexo Core Router set() - function (callback style)",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    },
    {
      "title": "get() - export stringified JSON object",
      "fullTitle": "Hexo Core Router get() - export stringified JSON object",
      "currentRetry": 0,
      "err": {
        "stack": "TypeError [ERR_INVALID_ARG_TYPE]: The \"list\" argument must be one of type Array, Buffer, or Uint8Array\n    at Function.concat (buffer.js:465:13)\n    at RouteStream.<anonymous> (test/util/stream.js:10:22)\n    at endReadableNT (_stream_readable.js:1106:12)\n    at process._tickCallback (internal/process/next_tick.js:178:19)",
        "message": "The \"list\" argument must be one of type Array, Buffer, or Uint8Array",
        "uncaught": true
      }
    }
  ],
  "passes": [
    {
      "title": "constructor - add trailing \"/\" to the base path",
      "fullTitle": "Hexo Box Box constructor - add trailing \"/\" to the base path",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "addProcessor() - no pattern",
      "fullTitle": "Hexo Box Box addProcessor() - no pattern",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "addProcessor() - with regex",
      "fullTitle": "Hexo Box Box addProcessor() - with regex",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "addProcessor() - with pattern",
      "fullTitle": "Hexo Box Box addProcessor() - with pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "addProcessor() - no fn",
      "fullTitle": "Hexo Box Box addProcessor() - no fn",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_loadFiles() - create",
      "fullTitle": "Hexo Box Box _loadFiles() - create",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_loadFiles() - update",
      "fullTitle": "Hexo Box Box _loadFiles() - update",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_loadFiles() - skip",
      "fullTitle": "Hexo Box Box _loadFiles() - skip",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_loadFiles() - delete",
      "fullTitle": "Hexo Box Box _loadFiles() - delete",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_dispatch()",
      "fullTitle": "Hexo Box Box _dispatch()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_dispatch() - params",
      "fullTitle": "Hexo Box Box _dispatch() - params",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "process()",
      "fullTitle": "Hexo Box Box process()",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "process() - do nothing if target does not exist",
      "fullTitle": "Hexo Box Box process() - do nothing if target does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - create",
      "fullTitle": "Hexo Box Box watch() - create",
      "duration": 218,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - update",
      "fullTitle": "Hexo Box Box watch() - update",
      "duration": 508,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - delete",
      "fullTitle": "Hexo Box Box watch() - delete",
      "duration": 508,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - rename file",
      "fullTitle": "Hexo Box Box watch() - rename file",
      "duration": 208,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - rename folder",
      "fullTitle": "Hexo Box Box watch() - rename folder",
      "duration": 206,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - run process() before start watching",
      "fullTitle": "Hexo Box Box watch() - run process() before start watching",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unwatch() - watcher not started",
      "fullTitle": "Hexo Box Box unwatch() - watcher not started",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read()",
      "fullTitle": "Hexo Box File read()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - callback",
      "fullTitle": "Hexo Box File read() - callback",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - raw buffer",
      "fullTitle": "Hexo Box File read() - raw buffer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - string encoding",
      "fullTitle": "Hexo Box File read() - string encoding",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - cache off",
      "fullTitle": "Hexo Box File read() - cache off",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - no content",
      "fullTitle": "Hexo Box File read() - no content",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - escape BOM",
      "fullTitle": "Hexo Box File read() - escape BOM",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "read() - escape Windows line ending",
      "fullTitle": "Hexo Box File read() - escape Windows line ending",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync()",
      "fullTitle": "Hexo Box File readSync()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - raw buffer",
      "fullTitle": "Hexo Box File readSync() - raw buffer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - string encoding",
      "fullTitle": "Hexo Box File readSync() - string encoding",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - cache off",
      "fullTitle": "Hexo Box File readSync() - cache off",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - no content",
      "fullTitle": "Hexo Box File readSync() - no content",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - escape BOM",
      "fullTitle": "Hexo Box File readSync() - escape BOM",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "readSync() - escape Windows line ending",
      "fullTitle": "Hexo Box File readSync() - escape Windows line ending",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "stat()",
      "fullTitle": "Hexo Box File stat()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "stat() - callback",
      "fullTitle": "Hexo Box File stat() - callback",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "stat() - cache off",
      "fullTitle": "Hexo Box File stat() - cache off",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "statSync()",
      "fullTitle": "Hexo Box File statSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "statSync() - cache off",
      "fullTitle": "Hexo Box File statSync() - cache off",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render()",
      "fullTitle": "Hexo Box File render()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - callback",
      "fullTitle": "Hexo Box File render() - callback",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync()",
      "fullTitle": "Hexo Box File renderSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "delete database",
      "fullTitle": "Hexo Console clean delete database",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "delete public folder",
      "fullTitle": "Hexo Console clean delete public folder",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config",
      "fullTitle": "Hexo Console config write config",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: number",
      "fullTitle": "Hexo Console config write config: number",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: false",
      "fullTitle": "Hexo Console config write config: false",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: true",
      "fullTitle": "Hexo Console config write config: true",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: null",
      "fullTitle": "Hexo Console config write config: null",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write config: json",
      "fullTitle": "Hexo Console config write config: json",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create config if not exist",
      "fullTitle": "Hexo Console config create config if not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "single deploy setting",
      "fullTitle": "Hexo Console deploy single deploy setting",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple deploy setting",
      "fullTitle": "Hexo Console deploy multiple deploy setting",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "generate",
      "fullTitle": "Hexo Console deploy generate",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "run generate if public directory not exist",
      "fullTitle": "Hexo Console deploy run generate if public directory not exist",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Console generate default",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "write file if not exist",
      "fullTitle": "Hexo Console generate write file if not exist",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't write if file unchanged",
      "fullTitle": "Hexo Console generate don't write if file unchanged",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch - update",
      "fullTitle": "Hexo Console generate watch - update",
      "duration": 309,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch - delete",
      "fullTitle": "Hexo Console generate watch - delete",
      "duration": 316,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "deploy",
      "fullTitle": "Hexo Console generate deploy",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Console migrate default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Console new title",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "layout",
      "fullTitle": "Hexo Console new layout",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Console new path",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rename if target existed",
      "fullTitle": "Hexo Console new rename if target existed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "replace existing files",
      "fullTitle": "Hexo Console new replace existing files",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "extra data",
      "fullTitle": "Hexo Console new extra data",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug",
      "fullTitle": "Hexo Console publish slug",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "layout",
      "fullTitle": "Hexo Console publish layout",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rename if target existed",
      "fullTitle": "Hexo Console publish rename if target existed",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "replace existing target",
      "fullTitle": "Hexo Console publish replace existing target",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "relative path",
      "fullTitle": "Hexo Console render relative path",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "absolute path",
      "fullTitle": "Hexo Console render absolute path",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "absolute output",
      "fullTitle": "Hexo Console render absolute output",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "engine",
      "fullTitle": "Hexo Console render engine",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pretty",
      "fullTitle": "Hexo Console render pretty",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Console register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - alias",
      "fullTitle": "Hexo Extend Console register() - alias",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Console register() - promisify",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Console list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Console get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Deployer register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Deployer register() - promisify",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - Promise.method",
      "fullTitle": "Hexo Extend Deployer register() - Promise.method",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Deployer list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Deployer get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Filter register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - type alias",
      "fullTitle": "Hexo Extend Filter register() - type alias",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - priority",
      "fullTitle": "Hexo Extend Filter register() - priority",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unregister()",
      "fullTitle": "Hexo Extend Filter unregister()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unregister() - type is required",
      "fullTitle": "Hexo Extend Filter unregister() - type is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unregister() - fn must be a function",
      "fullTitle": "Hexo Extend Filter unregister() - fn must be a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Filter list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exec()",
      "fullTitle": "Hexo Extend Filter exec()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exec() - pointer",
      "fullTitle": "Hexo Extend Filter exec() - pointer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exec() - args",
      "fullTitle": "Hexo Extend Filter exec() - args",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exec() - context",
      "fullTitle": "Hexo Extend Filter exec() - context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execSync()",
      "fullTitle": "Hexo Extend Filter execSync()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execSync() - pointer",
      "fullTitle": "Hexo Extend Filter execSync() - pointer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execSync() - args",
      "fullTitle": "Hexo Extend Filter execSync() - args",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execSync() - context",
      "fullTitle": "Hexo Extend Filter execSync() - context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Generator register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Generator register() - promisify",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Generator get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Generator list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Helper register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Helper list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Helper get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Migrator register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Migrator register() - promisify",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - Promise.method",
      "fullTitle": "Hexo Extend Migrator register() - Promise.method",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Migrator list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Migrator get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Processor register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Processor list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Renderer register()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - promisify",
      "fullTitle": "Hexo Extend Renderer register() - promisify",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "getOutput()",
      "fullTitle": "Hexo Extend Renderer getOutput()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isRenderable()",
      "fullTitle": "Hexo Extend Renderer isRenderable()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isRenderableSync()",
      "fullTitle": "Hexo Extend Renderer isRenderableSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get()",
      "fullTitle": "Hexo Extend Renderer get()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Extend Renderer list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register()",
      "fullTitle": "Hexo Extend Tag register()",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - async",
      "fullTitle": "Hexo Extend Tag register() - async",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - block",
      "fullTitle": "Hexo Extend Tag register() - block",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - async block",
      "fullTitle": "Hexo Extend Tag register() - async block",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - nested test",
      "fullTitle": "Hexo Extend Tag register() - nested test",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - strip indention",
      "fullTitle": "Hexo Extend Tag register() - strip indention",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - async callback",
      "fullTitle": "Hexo Extend Tag register() - async callback",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - name is required",
      "fullTitle": "Hexo Extend Tag register() - name is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "register() - fn must be a function",
      "fullTitle": "Hexo Extend Tag register() - fn must be a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - context",
      "fullTitle": "Hexo Extend Tag render() - context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Filters Backtick code block disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Filters Backtick code block default",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Filters Backtick code block title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "url",
      "fullTitle": "Hexo Filters Backtick code block url",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link text",
      "fullTitle": "Hexo Filters Backtick code block link text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "indent",
      "fullTitle": "Hexo Filters Backtick code block indent",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "line number",
      "fullTitle": "Hexo Filters Backtick code block line number",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tab replace",
      "fullTitle": "Hexo Filters Backtick code block tab replace",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "without <!-- more -->",
      "fullTitle": "Hexo Filters Excerpt without <!-- more -->",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "with <!-- more -->",
      "fullTitle": "Hexo Filters Excerpt with <!-- more -->",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple <!-- more -->",
      "fullTitle": "Hexo Filters Excerpt multiple <!-- more -->",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Filters External link disabled",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "enabled",
      "fullTitle": "Hexo Filters External link enabled",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.lang set",
      "fullTitle": "Hexo Filters i18n locals page.lang set",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.language set",
      "fullTitle": "Hexo Filters i18n locals page.language set",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "detect by path (lang found)",
      "fullTitle": "Hexo Filters i18n locals detect by path (lang found)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "detect by path (lang not found)",
      "fullTitle": "Hexo Filters i18n locals detect by path (lang not found)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "use config by default",
      "fullTitle": "Hexo Filters i18n locals use config by default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page layout + path",
      "fullTitle": "Hexo Filters new_post_path page layout + path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "draft layout + path",
      "fullTitle": "Hexo Filters new_post_path draft layout + path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default layout + path",
      "fullTitle": "Hexo Filters new_post_path default layout + path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page layout + slug",
      "fullTitle": "Hexo Filters new_post_path page layout + slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "draft layout + slug",
      "fullTitle": "Hexo Filters new_post_path draft layout + slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default layout + slug",
      "fullTitle": "Hexo Filters new_post_path default layout + slug",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "date",
      "fullTitle": "Hexo Filters new_post_path date",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "extra data",
      "fullTitle": "Hexo Filters new_post_path extra data",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "append extension name if not existed",
      "fullTitle": "Hexo Filters new_post_path append extension name if not existed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't append extension name if existed",
      "fullTitle": "Hexo Filters new_post_path don't append extension name if existed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "replace existing files",
      "fullTitle": "Hexo Filters new_post_path replace existing files",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rename if target existed",
      "fullTitle": "Hexo Filters new_post_path rename if target existed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "data is required",
      "fullTitle": "Hexo Filters new_post_path data is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Filters post_permalink default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "categories",
      "fullTitle": "Hexo Filters post_permalink categories",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "uncategorized",
      "fullTitle": "Hexo Filters post_permalink uncategorized",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "extra data",
      "fullTitle": "Hexo Filters post_permalink extra data",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Filters post_permalink id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Filters Save database default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "do nothing if hexo is not initialized",
      "fullTitle": "Hexo Filters Save database do nothing if hexo is not initialized",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Filters Titlecase disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "enabled",
      "fullTitle": "Hexo Filters Titlecase enabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderable",
      "fullTitle": "Hexo Generators asset renderable",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "not renderable",
      "fullTitle": "Hexo Generators asset not renderable",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove assets which does not exist",
      "fullTitle": "Hexo Generators asset remove assets which does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't remove extension name",
      "fullTitle": "Hexo Generators asset don't remove extension name",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default layout",
      "fullTitle": "Hexo Generators page default layout",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom layout",
      "fullTitle": "Hexo Generators page custom layout",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "layout disabled",
      "fullTitle": "Hexo Generators page layout disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skip render",
      "fullTitle": "Hexo Generators page skip render",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skip render - multiple rules",
      "fullTitle": "Hexo Generators page skip render - multiple rules",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skip render - don't replace extension name",
      "fullTitle": "Hexo Generators page skip render - don't replace extension name",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default layout",
      "fullTitle": "Hexo Generators post default layout",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom layout",
      "fullTitle": "Hexo Generators post custom layout",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "layout disabled",
      "fullTitle": "Hexo Generators post layout disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "prev/next post",
      "fullTitle": "Hexo Generators post prev/next post",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "a string",
      "fullTitle": "Hexo Helpers css a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "an array",
      "fullTitle": "Hexo Helpers css an array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple strings",
      "fullTitle": "Hexo Helpers css multiple strings",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple arrays",
      "fullTitle": "Hexo Helpers css multiple arrays",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "mixed",
      "fullTitle": "Hexo Helpers css mixed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "date",
      "fullTitle": "Hexo Helpers date date",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "date_xml",
      "fullTitle": "Hexo Helpers date date_xml",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "time",
      "fullTitle": "Hexo Helpers date time",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "full_date",
      "fullTitle": "Hexo Helpers date full_date",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "time_tag",
      "fullTitle": "Hexo Helpers date time_tag",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers favicon_tag path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers feed_tag path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Helpers feed_tag title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type",
      "fullTitle": "Hexo Helpers feed_tag type",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cache enabled",
      "fullTitle": "Hexo Helpers fragment_cache cache enabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cache disabled",
      "fullTitle": "Hexo Helpers fragment_cache cache disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers gravatar default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "size",
      "fullTitle": "Hexo Helpers gravatar size",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "options",
      "fullTitle": "Hexo Helpers gravatar options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers image_tag path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (string)",
      "fullTitle": "Hexo Helpers image_tag class (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (array)",
      "fullTitle": "Hexo Helpers image_tag class (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "alt",
      "fullTitle": "Hexo Helpers image_tag alt",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_current",
      "fullTitle": "Hexo Helpers is is_current",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_home",
      "fullTitle": "Hexo Helpers is is_home",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_post",
      "fullTitle": "Hexo Helpers is is_post",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_archive",
      "fullTitle": "Hexo Helpers is is_archive",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_year",
      "fullTitle": "Hexo Helpers is is_year",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_month",
      "fullTitle": "Hexo Helpers is is_month",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_category",
      "fullTitle": "Hexo Helpers is is_category",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is_tag",
      "fullTitle": "Hexo Helpers is is_tag",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "a string",
      "fullTitle": "Hexo Helpers js a string",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "an array",
      "fullTitle": "Hexo Helpers js an array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple strings",
      "fullTitle": "Hexo Helpers js multiple strings",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple arrays",
      "fullTitle": "Hexo Helpers js multiple arrays",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "mixed",
      "fullTitle": "Hexo Helpers js mixed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers link_to path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Helpers link_to title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "external (boolean)",
      "fullTitle": "Hexo Helpers link_to external (boolean)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "external (object)",
      "fullTitle": "Hexo Helpers link_to external (object)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (string)",
      "fullTitle": "Hexo Helpers link_to class (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (array)",
      "fullTitle": "Hexo Helpers link_to class (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Helpers link_to id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers list_archives default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: yearly",
      "fullTitle": "Hexo Helpers list_archives type: yearly",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "format",
      "fullTitle": "Hexo Helpers list_archives format",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "style: false",
      "fullTitle": "Hexo Helpers list_archives style: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "show_count",
      "fullTitle": "Hexo Helpers list_archives show_count",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers list_archives order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers list_archives transform",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers list_archives separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers list_archives class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.lang",
      "fullTitle": "Hexo Helpers list_archives page.lang",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "config.language",
      "fullTitle": "Hexo Helpers list_archives config.language",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers list_categories default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "specified collection",
      "fullTitle": "Hexo Helpers list_categories specified collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "style: false",
      "fullTitle": "Hexo Helpers list_categories style: false",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "show_count: false",
      "fullTitle": "Hexo Helpers list_categories show_count: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers list_categories class",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "depth",
      "fullTitle": "Hexo Helpers list_categories depth",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "orderby",
      "fullTitle": "Hexo Helpers list_categories orderby",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers list_categories order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers list_categories transform",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers list_categories separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers list_posts default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "specified collection",
      "fullTitle": "Hexo Helpers list_posts specified collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "style: false",
      "fullTitle": "Hexo Helpers list_posts style: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "orderby",
      "fullTitle": "Hexo Helpers list_posts orderby",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers list_posts order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers list_posts class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers list_posts transform",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers list_posts separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "amount",
      "fullTitle": "Hexo Helpers list_posts amount",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers list_tags default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "specified collection",
      "fullTitle": "Hexo Helpers list_tags specified collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "style: false",
      "fullTitle": "Hexo Helpers list_tags style: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "show_count: false",
      "fullTitle": "Hexo Helpers list_tags show_count: false",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers list_tags class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "orderby",
      "fullTitle": "Hexo Helpers list_tags orderby",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers list_tags order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers list_tags transform",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers list_tags separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "amount",
      "fullTitle": "Hexo Helpers list_tags amount",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path",
      "fullTitle": "Hexo Helpers mail_to path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text",
      "fullTitle": "Hexo Helpers mail_to text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "subject",
      "fullTitle": "Hexo Helpers mail_to subject",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cc (string)",
      "fullTitle": "Hexo Helpers mail_to cc (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cc (array)",
      "fullTitle": "Hexo Helpers mail_to cc (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "bcc (string)",
      "fullTitle": "Hexo Helpers mail_to bcc (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "bcc (array)",
      "fullTitle": "Hexo Helpers mail_to bcc (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "body",
      "fullTitle": "Hexo Helpers mail_to body",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (string)",
      "fullTitle": "Hexo Helpers mail_to class (string)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class (array)",
      "fullTitle": "Hexo Helpers mail_to class (array)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Helpers mail_to id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers markdown default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers number_format default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "precision",
      "fullTitle": "Hexo Helpers number_format precision",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "delimiter",
      "fullTitle": "Hexo Helpers number_format delimiter",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "separator",
      "fullTitle": "Hexo Helpers number_format separator",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers open_graph default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title - page",
      "fullTitle": "Hexo Helpers open_graph title - page",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title - options",
      "fullTitle": "Hexo Helpers open_graph title - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type - options",
      "fullTitle": "Hexo Helpers open_graph type - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type - is_post",
      "fullTitle": "Hexo Helpers open_graph type - is_post",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "url - context",
      "fullTitle": "Hexo Helpers open_graph url - context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "url - options",
      "fullTitle": "Hexo Helpers open_graph url - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - content",
      "fullTitle": "Hexo Helpers open_graph images - content",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - string",
      "fullTitle": "Hexo Helpers open_graph images - string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - array",
      "fullTitle": "Hexo Helpers open_graph images - array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - don't pollute context",
      "fullTitle": "Hexo Helpers open_graph images - don't pollute context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - options.image",
      "fullTitle": "Hexo Helpers open_graph images - options.image",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "images - options.images",
      "fullTitle": "Hexo Helpers open_graph images - options.images",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "site_name - options",
      "fullTitle": "Hexo Helpers open_graph site_name - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - page",
      "fullTitle": "Hexo Helpers open_graph description - page",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - options",
      "fullTitle": "Hexo Helpers open_graph description - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - excerpt",
      "fullTitle": "Hexo Helpers open_graph description - excerpt",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - content",
      "fullTitle": "Hexo Helpers open_graph description - content",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - config",
      "fullTitle": "Hexo Helpers open_graph description - config",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "description - escape",
      "fullTitle": "Hexo Helpers open_graph description - escape",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "twitter_card - options",
      "fullTitle": "Hexo Helpers open_graph twitter_card - options",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "twitter_id - options (without prefixing @)",
      "fullTitle": "Hexo Helpers open_graph twitter_id - options (without prefixing @)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "twitter_id - options (with prefixing @)",
      "fullTitle": "Hexo Helpers open_graph twitter_id - options (with prefixing @)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "twitter_site - options",
      "fullTitle": "Hexo Helpers open_graph twitter_site - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "google_plus - options",
      "fullTitle": "Hexo Helpers open_graph google_plus - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "fb_admins - options",
      "fullTitle": "Hexo Helpers open_graph fb_admins - options",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "fb_app_id - options",
      "fullTitle": "Hexo Helpers open_graph fb_app_id - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 1",
      "fullTitle": "Hexo Helpers paginator current = 1",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 2",
      "fullTitle": "Hexo Helpers paginator current = 2",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 3",
      "fullTitle": "Hexo Helpers paginator current = 3",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 4",
      "fullTitle": "Hexo Helpers paginator current = 4",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 5",
      "fullTitle": "Hexo Helpers paginator current = 5",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 6",
      "fullTitle": "Hexo Helpers paginator current = 6",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 7",
      "fullTitle": "Hexo Helpers paginator current = 7",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 8",
      "fullTitle": "Hexo Helpers paginator current = 8",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 9",
      "fullTitle": "Hexo Helpers paginator current = 9",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 10",
      "fullTitle": "Hexo Helpers paginator current = 10",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "show_all",
      "fullTitle": "Hexo Helpers paginator show_all",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "end_size",
      "fullTitle": "Hexo Helpers paginator end_size",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "end_size = 0",
      "fullTitle": "Hexo Helpers paginator end_size = 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "mid_size",
      "fullTitle": "Hexo Helpers paginator mid_size",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "mid_size = 0",
      "fullTitle": "Hexo Helpers paginator mid_size = 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "space",
      "fullTitle": "Hexo Helpers paginator space",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no space",
      "fullTitle": "Hexo Helpers paginator no space",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "base",
      "fullTitle": "Hexo Helpers paginator base",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "format",
      "fullTitle": "Hexo Helpers paginator format",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "prev_text / next_text",
      "fullTitle": "Hexo Helpers paginator prev_text / next_text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "prev_next",
      "fullTitle": "Hexo Helpers paginator prev_next",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers paginator transform",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "context",
      "fullTitle": "Hexo Helpers paginator context",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "current = 0",
      "fullTitle": "Hexo Helpers paginator current = 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers partial default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "locals",
      "fullTitle": "Hexo Helpers partial locals",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cache",
      "fullTitle": "Hexo Helpers partial cache",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "only",
      "fullTitle": "Hexo Helpers partial only",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "a partial in another partial",
      "fullTitle": "Hexo Helpers partial a partial in another partial",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "name must be a string",
      "fullTitle": "Hexo Helpers partial name must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "from root",
      "fullTitle": "Hexo Helpers relative_url from root",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "from same root",
      "fullTitle": "Hexo Helpers relative_url from same root",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "from different root",
      "fullTitle": "Hexo Helpers relative_url from different root",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers render default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers search_form default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers search_form class",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text",
      "fullTitle": "Hexo Helpers search_form text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "button enabled",
      "fullTitle": "Hexo Helpers search_form button enabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "button text",
      "fullTitle": "Hexo Helpers search_form button text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers tagcloud default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "specified collection",
      "fullTitle": "Hexo Helpers tagcloud specified collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "font size",
      "fullTitle": "Hexo Helpers tagcloud font size",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "font unit",
      "fullTitle": "Hexo Helpers tagcloud font unit",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "orderby",
      "fullTitle": "Hexo Helpers tagcloud orderby",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "order",
      "fullTitle": "Hexo Helpers tagcloud order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "amount",
      "fullTitle": "Hexo Helpers tagcloud amount",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "transform",
      "fullTitle": "Hexo Helpers tagcloud transform",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "color: name",
      "fullTitle": "Hexo Helpers tagcloud color: name",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "color: hex",
      "fullTitle": "Hexo Helpers tagcloud color: hex",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "color: RGBA",
      "fullTitle": "Hexo Helpers tagcloud color: RGBA",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "color: HSLA",
      "fullTitle": "Hexo Helpers tagcloud color: HSLA",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Helpers toc default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Helpers toc class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list_number",
      "fullTitle": "Hexo Helpers toc list_number",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "internal url (relative off)",
      "fullTitle": "Hexo Helpers url_for internal url (relative off)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "internal url (relative on)",
      "fullTitle": "Hexo Helpers url_for internal url (relative on)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "internal url (options.relative)",
      "fullTitle": "Hexo Helpers url_for internal url (options.relative)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "external url",
      "fullTitle": "Hexo Helpers url_for external url",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "constructor",
      "fullTitle": "Hexo Core Hexo constructor",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "call()",
      "fullTitle": "Hexo Core Hexo call()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "call() - callback",
      "fullTitle": "Hexo Core Hexo call() - callback",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "call() - console not registered",
      "fullTitle": "Hexo Core Hexo call() - console not registered",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "init()",
      "fullTitle": "Hexo Core Hexo init()",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_showDrafts()",
      "fullTitle": "Hexo Core Hexo _showDrafts()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load() - source",
      "fullTitle": "Hexo Core Hexo load() - source",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load() - theme",
      "fullTitle": "Hexo Core Hexo load() - theme",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - source",
      "fullTitle": "Hexo Core Hexo watch() - source",
      "duration": 307,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "watch() - theme",
      "fullTitle": "Hexo Core Hexo watch() - theme",
      "duration": 311,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exit()",
      "fullTitle": "Hexo Core Hexo exit()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "exit() - error handling",
      "fullTitle": "Hexo Core Hexo exit() - error handling",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "draft visibility",
      "fullTitle": "Hexo Core Hexo draft visibility",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "future posts",
      "fullTitle": "Hexo Core Hexo future posts",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "future pages",
      "fullTitle": "Hexo Core Hexo future pages",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "locals.data",
      "fullTitle": "Hexo Core Hexo locals.data",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_generate() - layout not exist",
      "fullTitle": "Hexo Core Hexo _generate() - layout not exist",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_generate() - do nothing if it's generating",
      "fullTitle": "Hexo Core Hexo _generate() - do nothing if it's generating",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execFilter()",
      "fullTitle": "Hexo Core Hexo execFilter()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "execFilterSync()",
      "fullTitle": "Hexo Core Hexo execFilterSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "config file does not exist",
      "fullTitle": "Hexo Core Load config config file does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_config.yml exists",
      "fullTitle": "Hexo Core Load config _config.yml exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_config.json exists",
      "fullTitle": "Hexo Core Load config _config.json exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_config.txt exists",
      "fullTitle": "Hexo Core Load config _config.txt exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom config path",
      "fullTitle": "Hexo Core Load config custom config path",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom config path with different extension name",
      "fullTitle": "Hexo Core Load config custom config path with different extension name",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "handle trailing \"/\" of url",
      "fullTitle": "Hexo Core Load config handle trailing \"/\" of url",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom public_dir",
      "fullTitle": "Hexo Core Load config custom public_dir",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom source_dir",
      "fullTitle": "Hexo Core Load config custom source_dir",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "custom theme",
      "fullTitle": "Hexo Core Load config custom theme",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "database does not exist",
      "fullTitle": "Hexo Core Load database database does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "database load success",
      "fullTitle": "Hexo Core Load database database load success",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't load database if loaded",
      "fullTitle": "Hexo Core Load database don't load database if loaded",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load plugins",
      "fullTitle": "Hexo Core Load plugins load plugins",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "ignore plugins whose name is not started with \"hexo-\"",
      "fullTitle": "Hexo Core Load plugins ignore plugins whose name is not started with \"hexo-\"",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "ignore plugins which are in package.json but not exist actually",
      "fullTitle": "Hexo Core Load plugins ignore plugins which are in package.json but not exist actually",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load scripts",
      "fullTitle": "Hexo Core Load plugins load scripts",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load theme scripts",
      "fullTitle": "Hexo Core Load plugins load theme scripts",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "don't load plugins in safe mode",
      "fullTitle": "Hexo Core Load plugins don't load plugins in safe mode",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - name must be a string",
      "fullTitle": "Hexo Core Locals get() - name must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - function",
      "fullTitle": "Hexo Core Locals set() - function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - not function",
      "fullTitle": "Hexo Core Locals set() - not function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - name must be a string",
      "fullTitle": "Hexo Core Locals set() - name must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - value is required",
      "fullTitle": "Hexo Core Locals set() - value is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove()",
      "fullTitle": "Hexo Core Locals remove()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove() - name must be a string",
      "fullTitle": "Hexo Core Locals remove() - name must be a string",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "toObject()",
      "fullTitle": "Hexo Core Locals toObject()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "invalidate()",
      "fullTitle": "Hexo Core Locals invalidate()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create()",
      "fullTitle": "Hexo Core Post create()",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create() - follow the separator style in the scaffold",
      "fullTitle": "Hexo Core Post create() - follow the separator style in the scaffold",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create() - JSON front-matter",
      "fullTitle": "Hexo Core Post create() - JSON front-matter",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "create() - non-string title",
      "fullTitle": "Hexo Core Post create() - non-string title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "publish() - non-string title",
      "fullTitle": "Hexo Core Post publish() - non-string title",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - file",
      "fullTitle": "Hexo Core Post render() - file",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - toString",
      "fullTitle": "Hexo Core Post render() - toString",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - skip render phase if it's swig file",
      "fullTitle": "Hexo Core Post render() - skip render phase if it's swig file",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - recover escaped swig blocks which is html escaped",
      "fullTitle": "Hexo Core Post render() - recover escaped swig blocks which is html escaped",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isRenderable()",
      "fullTitle": "Hexo Core Render isRenderable()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isRenderableSync()",
      "fullTitle": "Hexo Core Render isRenderableSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "getOutput()",
      "fullTitle": "Hexo Core Render getOutput()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - path",
      "fullTitle": "Hexo Core Render render() - path",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - text (with engine)",
      "fullTitle": "Hexo Core Render render() - text (with engine)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - no path and text",
      "fullTitle": "Hexo Core Render render() - no path and text",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - options",
      "fullTitle": "Hexo Core Render render() - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - toString",
      "fullTitle": "Hexo Core Render render() - toString",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - custom toString method",
      "fullTitle": "Hexo Core Render render() - custom toString method",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - after_render filter",
      "fullTitle": "Hexo Core Render render() - after_render filter",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - after_render filter: use the given output extension if not found",
      "fullTitle": "Hexo Core Render render() - after_render filter: use the given output extension if not found",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - path",
      "fullTitle": "Hexo Core Render renderSync() - path",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - text (with engine)",
      "fullTitle": "Hexo Core Render renderSync() - text (with engine)",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - no path and text",
      "fullTitle": "Hexo Core Render renderSync() - no path and text",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - options",
      "fullTitle": "Hexo Core Render renderSync() - options",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - toString",
      "fullTitle": "Hexo Core Render renderSync() - toString",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - custom toString method",
      "fullTitle": "Hexo Core Render renderSync() - custom toString method",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - after_render filter",
      "fullTitle": "Hexo Core Render renderSync() - after_render filter",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - after_render filter: use the given output extension if not found",
      "fullTitle": "Hexo Core Render renderSync() - after_render filter: use the given output extension if not found",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "format()",
      "fullTitle": "Hexo Core Router format()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "format() - path must be a string",
      "fullTitle": "Hexo Core Router format() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - readable stream",
      "fullTitle": "Hexo Core Router set() - readable stream",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - modified",
      "fullTitle": "Hexo Core Router set() - modified",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - path must be a string",
      "fullTitle": "Hexo Core Router set() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - data is required",
      "fullTitle": "Hexo Core Router set() - data is required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - error handling",
      "fullTitle": "Hexo Core Router get() - error handling",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - no data",
      "fullTitle": "Hexo Core Router get() - no data",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - empty readable stream",
      "fullTitle": "Hexo Core Router get() - empty readable stream",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - large readable stream (more than 65535 bits)",
      "fullTitle": "Hexo Core Router get() - large readable stream (more than 65535 bits)",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - path must be a string",
      "fullTitle": "Hexo Core Router get() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "list()",
      "fullTitle": "Hexo Core Router list()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isModified()",
      "fullTitle": "Hexo Core Router isModified()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isModified() - path must be a string",
      "fullTitle": "Hexo Core Router isModified() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove()",
      "fullTitle": "Hexo Core Router remove()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove() - path must be a string",
      "fullTitle": "Hexo Core Router remove() - path must be a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - file exists",
      "fullTitle": "Hexo Core Scaffold get() - file exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "get() - normal scaffold",
      "fullTitle": "Hexo Core Scaffold get() - normal scaffold",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - file exists",
      "fullTitle": "Hexo Core Scaffold set() - file exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "set() - file does not exist",
      "fullTitle": "Hexo Core Scaffold set() - file does not exist",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove() - file exist",
      "fullTitle": "Hexo Core Scaffold remove() - file exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove() - file does not exist",
      "fullTitle": "Hexo Core Scaffold remove() - file does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "package.json does not exist",
      "fullTitle": "Hexo Core Update package.json package.json does not exist",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "package.json exists, but the version doesn't match",
      "fullTitle": "Hexo Core Update package.json package.json exists, but the version doesn't match",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "package.json exists, but don't have hexo data",
      "fullTitle": "Hexo Core Update package.json package.json exists, but don't have hexo data",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "package.json exists and everything is ok",
      "fullTitle": "Hexo Core Update package.json package.json exists and everything is ok",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default values",
      "fullTitle": "Hexo Models Asset default values",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_id - required",
      "fullTitle": "Hexo Models Asset _id - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - required",
      "fullTitle": "Hexo Models Asset path - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source - virtual",
      "fullTitle": "Hexo Models Asset source - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_id - required",
      "fullTitle": "Hexo Models Cache _id - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "value()",
      "fullTitle": "Hexo Models SchemaTypeCacheString value()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "name - required",
      "fullTitle": "Hexo Models Category name - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - virtual",
      "fullTitle": "Hexo Models Category slug - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - category_map",
      "fullTitle": "Hexo Models Category slug - category_map",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 0",
      "fullTitle": "Hexo Models Category slug - filename_case: 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 1",
      "fullTitle": "Hexo Models Category slug - filename_case: 1",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 2",
      "fullTitle": "Hexo Models Category slug - filename_case: 2",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - parent",
      "fullTitle": "Hexo Models Category slug - parent",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - virtual",
      "fullTitle": "Hexo Models Category path - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "permalink - virtual",
      "fullTitle": "Hexo Models Category permalink - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - virtual",
      "fullTitle": "Hexo Models Category posts - virtual",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - draft",
      "fullTitle": "Hexo Models Category posts - draft",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - future",
      "fullTitle": "Hexo Models Category posts - future",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "check whether a category exists",
      "fullTitle": "Hexo Models Category check whether a category exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "check whether a category exists (with parent)",
      "fullTitle": "Hexo Models Category check whether a category exists (with parent)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove PostCategory references when a category is removed",
      "fullTitle": "Hexo Models Category remove PostCategory references when a category is removed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cast()",
      "fullTitle": "Hexo Models SchemaTypeMoment cast()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cast() - default",
      "fullTitle": "Hexo Models SchemaTypeMoment cast() - default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cast() - language",
      "fullTitle": "Hexo Models SchemaTypeMoment cast() - language",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cast() - timezone",
      "fullTitle": "Hexo Models SchemaTypeMoment cast() - timezone",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "validate()",
      "fullTitle": "Hexo Models SchemaTypeMoment validate()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "validate() - required",
      "fullTitle": "Hexo Models SchemaTypeMoment validate() - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "match()",
      "fullTitle": "Hexo Models SchemaTypeMoment match()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "compare()",
      "fullTitle": "Hexo Models SchemaTypeMoment compare()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "parse()",
      "fullTitle": "Hexo Models SchemaTypeMoment parse()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "value()",
      "fullTitle": "Hexo Models SchemaTypeMoment value()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "q$day()",
      "fullTitle": "Hexo Models SchemaTypeMoment q$day()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "q$month()",
      "fullTitle": "Hexo Models SchemaTypeMoment q$month()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "q$year()",
      "fullTitle": "Hexo Models SchemaTypeMoment q$year()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "u$inc()",
      "fullTitle": "Hexo Models SchemaTypeMoment u$inc()",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "u$dec()",
      "fullTitle": "Hexo Models SchemaTypeMoment u$dec()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default values",
      "fullTitle": "Hexo Models Page default values",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source - required",
      "fullTitle": "Hexo Models Page source - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - required",
      "fullTitle": "Hexo Models Page path - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "permalink - virtual",
      "fullTitle": "Hexo Models Page permalink - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "full_source - virtual",
      "fullTitle": "Hexo Models Page full_source - virtual",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default values",
      "fullTitle": "Hexo Models Post default values",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source - required",
      "fullTitle": "Hexo Models Post source - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - required",
      "fullTitle": "Hexo Models Post slug - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - virtual",
      "fullTitle": "Hexo Models Post path - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "permalink - virtual",
      "fullTitle": "Hexo Models Post permalink - virtual",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "full_source - virtual",
      "fullTitle": "Hexo Models Post full_source - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset_dir - virtual",
      "fullTitle": "Hexo Models Post asset_dir - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tags - virtual",
      "fullTitle": "Hexo Models Post tags - virtual",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "categories - virtual",
      "fullTitle": "Hexo Models Post categories - virtual",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "setTags() - old tags should be removed",
      "fullTitle": "Hexo Models Post setTags() - old tags should be removed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "setTags() - sync problem",
      "fullTitle": "Hexo Models Post setTags() - sync problem",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "setCategories() - old categories should be removed",
      "fullTitle": "Hexo Models Post setCategories() - old categories should be removed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove PostTag references when a post is removed",
      "fullTitle": "Hexo Models Post remove PostTag references when a post is removed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove PostCategory references when a post is removed",
      "fullTitle": "Hexo Models Post remove PostCategory references when a post is removed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove related assets when a post is removed",
      "fullTitle": "Hexo Models Post remove related assets when a post is removed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default values",
      "fullTitle": "Hexo Models PostAsset default values",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_id - required",
      "fullTitle": "Hexo Models PostAsset _id - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - required",
      "fullTitle": "Hexo Models PostAsset slug - required",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - virtual",
      "fullTitle": "Hexo Models PostAsset path - virtual",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source - virtual",
      "fullTitle": "Hexo Models PostAsset source - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "name - required",
      "fullTitle": "Hexo Models Tag name - required",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - virtual",
      "fullTitle": "Hexo Models Tag slug - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - tag_map",
      "fullTitle": "Hexo Models Tag slug - tag_map",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 0",
      "fullTitle": "Hexo Models Tag slug - filename_case: 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 1",
      "fullTitle": "Hexo Models Tag slug - filename_case: 1",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "slug - filename_case: 2",
      "fullTitle": "Hexo Models Tag slug - filename_case: 2",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "path - virtual",
      "fullTitle": "Hexo Models Tag path - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "permalink - virtual",
      "fullTitle": "Hexo Models Tag permalink - virtual",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - virtual",
      "fullTitle": "Hexo Models Tag posts - virtual",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - draft",
      "fullTitle": "Hexo Models Tag posts - draft",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "posts - future",
      "fullTitle": "Hexo Models Tag posts - future",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "check whether a tag exists",
      "fullTitle": "Hexo Models Tag check whether a tag exists",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "remove PostTag references when a tag is removed",
      "fullTitle": "Hexo Models Tag remove PostTag references when a tag is removed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: create",
      "fullTitle": "Hexo Processors asset asset - type: create",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: update",
      "fullTitle": "Hexo Processors asset asset - type: update",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: skip",
      "fullTitle": "Hexo Processors asset asset - type: skip",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: delete",
      "fullTitle": "Hexo Processors asset asset - type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - type: create",
      "fullTitle": "Hexo Processors asset page - type: create",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - type: update",
      "fullTitle": "Hexo Processors asset page - type: update",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - type: delete",
      "fullTitle": "Hexo Processors asset page - type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - use the status of the source file if date not set",
      "fullTitle": "Hexo Processors asset page - use the status of the source file if date not set",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - permalink",
      "fullTitle": "Hexo Processors asset page - permalink",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - permalink (without extension name)",
      "fullTitle": "Hexo Processors asset page - permalink (without extension name)",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - permalink (with trailing slash)",
      "fullTitle": "Hexo Processors asset page - permalink (with trailing slash)",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - set layout to false if output is not html",
      "fullTitle": "Hexo Processors asset page - set layout to false if output is not html",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - don't set layout to false if layout is set but output is not html",
      "fullTitle": "Hexo Processors asset page - don't set layout to false if layout is set but output is not html",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - parse date",
      "fullTitle": "Hexo Processors asset page - parse date",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - use file stats instead if date is invalid",
      "fullTitle": "Hexo Processors asset page - use file stats instead if date is invalid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - don't remove extension name",
      "fullTitle": "Hexo Processors asset page - don't remove extension name",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page - timezone",
      "fullTitle": "Hexo Processors asset page - timezone",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isTmpFile()",
      "fullTitle": "Hexo Processors common isTmpFile()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "isHiddenFile()",
      "fullTitle": "Hexo Processors common isHiddenFile()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "ignoreTmpAndHiddenFile()",
      "fullTitle": "Hexo Processors common ignoreTmpAndHiddenFile()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "toDate()",
      "fullTitle": "Hexo Processors common toDate()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Processors data pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create - yaml",
      "fullTitle": "Hexo Processors data type: create - yaml",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create - json",
      "fullTitle": "Hexo Processors data type: create - json",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create - others",
      "fullTitle": "Hexo Processors data type: create - others",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: update",
      "fullTitle": "Hexo Processors data type: update",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Processors data type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Processors post pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - post_asset_folder disabled",
      "fullTitle": "Hexo Processors post asset - post_asset_folder disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: create",
      "fullTitle": "Hexo Processors post asset - type: create",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: update",
      "fullTitle": "Hexo Processors post asset - type: update",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: skip",
      "fullTitle": "Hexo Processors post asset - type: skip",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - type: delete",
      "fullTitle": "Hexo Processors post asset - type: delete",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - skip if can't find a matching post",
      "fullTitle": "Hexo Processors post asset - skip if can't find a matching post",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset - the related post has been deleted",
      "fullTitle": "Hexo Processors post asset - the related post has been deleted",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - type: create",
      "fullTitle": "Hexo Processors post post - type: create",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - type: update",
      "fullTitle": "Hexo Processors post post - type: update",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - type: delete",
      "fullTitle": "Hexo Processors post post - type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - parse file name",
      "fullTitle": "Hexo Processors post post - parse file name",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - extra data in file name",
      "fullTitle": "Hexo Processors post post - extra data in file name",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - file name does not match to the config",
      "fullTitle": "Hexo Processors post post - file name does not match to the config",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - published",
      "fullTitle": "Hexo Processors post post - published",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - always set published: false for drafts",
      "fullTitle": "Hexo Processors post post - always set published: false for drafts",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - use the status of the source file if date not set",
      "fullTitle": "Hexo Processors post post - use the status of the source file if date not set",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - photo is an alias for photos",
      "fullTitle": "Hexo Processors post post - photo is an alias for photos",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - photos (not array)",
      "fullTitle": "Hexo Processors post post - photos (not array)",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - link without title",
      "fullTitle": "Hexo Processors post post - link without title",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - category is an alias for categories",
      "fullTitle": "Hexo Processors post post - category is an alias for categories",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - categories (not array)",
      "fullTitle": "Hexo Processors post post - categories (not array)",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - tag is an alias for tags",
      "fullTitle": "Hexo Processors post post - tag is an alias for tags",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - tags (not array)",
      "fullTitle": "Hexo Processors post post - tags (not array)",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - post_asset_folder enabled",
      "fullTitle": "Hexo Processors post post - post_asset_folder enabled",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - post_asset_folder disabled",
      "fullTitle": "Hexo Processors post post - post_asset_folder disabled",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - parse date",
      "fullTitle": "Hexo Processors post post - parse date",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - use file stats instead if date is invalid",
      "fullTitle": "Hexo Processors post post - use file stats instead if date is invalid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - timezone",
      "fullTitle": "Hexo Processors post post - timezone",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post - new_post_name timezone",
      "fullTitle": "Hexo Processors post post - new_post_name timezone",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "normal",
      "fullTitle": "Hexo Renderers json normal",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "normal",
      "fullTitle": "Hexo Renderers plain normal",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "normal",
      "fullTitle": "Hexo Renderers swig normal",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "override \"for\" tag",
      "fullTitle": "Hexo Renderers swig override \"for\" tag",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "normal",
      "fullTitle": "Hexo Renderers yaml normal",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "escape",
      "fullTitle": "Hexo Renderers yaml escape",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags asset_img default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags asset_img no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset not found",
      "fullTitle": "Hexo Tags asset_img asset not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags asset_link default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Tags asset_link title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags asset_link no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset not found",
      "fullTitle": "Hexo Tags asset_link asset not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags asset_path default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags asset_path no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "asset not found",
      "fullTitle": "Hexo Tags asset_path asset not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags blockquote default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "author",
      "fullTitle": "Hexo Tags blockquote author",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "source",
      "fullTitle": "Hexo Tags blockquote source",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link",
      "fullTitle": "Hexo Tags blockquote link",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link title",
      "fullTitle": "Hexo Tags blockquote link title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "titlecase",
      "fullTitle": "Hexo Tags blockquote titlecase",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags code default",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "lang",
      "fullTitle": "Hexo Tags code lang",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Tags code title",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link",
      "fullTitle": "Hexo Tags code link",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "link text",
      "fullTitle": "Hexo Tags code link text",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Tags code disabled",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Tags gist id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "file",
      "fullTitle": "Hexo Tags gist file",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "url",
      "fullTitle": "Hexo Tags iframe url",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "width",
      "fullTitle": "Hexo Tags iframe width",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "height",
      "fullTitle": "Hexo Tags iframe height",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "src",
      "fullTitle": "Hexo Tags img src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "internal src",
      "fullTitle": "Hexo Tags img internal src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src",
      "fullTitle": "Hexo Tags img class + src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + internal src",
      "fullTitle": "Hexo Tags img class + internal src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple classes + src",
      "fullTitle": "Hexo Tags img multiple classes + src",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "multiple classes + internal src",
      "fullTitle": "Hexo Tags img multiple classes + internal src",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width",
      "fullTitle": "Hexo Tags img class + src + width",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width + height",
      "fullTitle": "Hexo Tags img class + src + width + height",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + title",
      "fullTitle": "Hexo Tags img class + src + title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width + title",
      "fullTitle": "Hexo Tags img class + src + width + title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width + height + title",
      "fullTitle": "Hexo Tags img class + src + width + height + title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class + src + width + height + title + alt",
      "fullTitle": "Hexo Tags img class + src + width + height + title + alt",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags include_code default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Tags include_code title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "lang",
      "fullTitle": "Hexo Tags include_code lang",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "file not found",
      "fullTitle": "Hexo Tags include_code file not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "disabled",
      "fullTitle": "Hexo Tags include_code disabled",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Tags jsfiddle id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tabs",
      "fullTitle": "Hexo Tags jsfiddle tabs",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skin",
      "fullTitle": "Hexo Tags jsfiddle skin",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "width",
      "fullTitle": "Hexo Tags jsfiddle width",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "height",
      "fullTitle": "Hexo Tags jsfiddle height",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text + url",
      "fullTitle": "Hexo Tags link text + url",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text + url + external",
      "fullTitle": "Hexo Tags link text + url + external",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text + url + title",
      "fullTitle": "Hexo Tags link text + url + title",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "text + url + external + title",
      "fullTitle": "Hexo Tags link text + url + external + title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags post_link default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "title",
      "fullTitle": "Hexo Tags post_link title",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags post_link no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post not found",
      "fullTitle": "Hexo Tags post_link post not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags post_path default",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "no slug",
      "fullTitle": "Hexo Tags post_path no slug",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post not found",
      "fullTitle": "Hexo Tags post_path post not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "default",
      "fullTitle": "Hexo Tags pullquote default",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "class",
      "fullTitle": "Hexo Tags pullquote class",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Tags vimeo id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "id",
      "fullTitle": "Hexo Tags youtube id",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "getView()",
      "fullTitle": "Hexo Theme Theme getView()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "getView() - escape backslashes",
      "fullTitle": "Hexo Theme Theme getView() - escape backslashes",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "setView()",
      "fullTitle": "Hexo Theme Theme setView()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "removeView()",
      "fullTitle": "Hexo Theme Theme removeView()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "constructor",
      "fullTitle": "Hexo Theme View constructor",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "parse front-matter",
      "fullTitle": "Hexo Theme View parse front-matter",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render()",
      "fullTitle": "Hexo Theme View render()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - front-matter",
      "fullTitle": "Hexo Theme View render() - front-matter",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - helper",
      "fullTitle": "Hexo Theme View render() - helper",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - layout",
      "fullTitle": "Hexo Theme View render() - layout",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - layout not found",
      "fullTitle": "Hexo Theme View render() - layout not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - callback",
      "fullTitle": "Hexo Theme View render() - callback",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "render() - callback (without options)",
      "fullTitle": "Hexo Theme View render() - callback (without options)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync()",
      "fullTitle": "Hexo Theme View renderSync()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - front-matter",
      "fullTitle": "Hexo Theme View renderSync() - front-matter",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - helper",
      "fullTitle": "Hexo Theme View renderSync() - helper",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - layout",
      "fullTitle": "Hexo Theme View renderSync() - layout",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renderSync() - layout not found",
      "fullTitle": "Hexo Theme View renderSync() - layout not found",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "_resolveLayout()",
      "fullTitle": "Hexo Theme View _resolveLayout()",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Theme processors config pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create",
      "fullTitle": "Hexo Theme processors config type: create",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Theme processors config type: delete",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "load failed",
      "fullTitle": "Hexo Theme processors config load failed",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Theme processors i18n pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create",
      "fullTitle": "Hexo Theme processors i18n type: create",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Theme processors i18n type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Theme processors source pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create",
      "fullTitle": "Hexo Theme processors source type: create",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: update",
      "fullTitle": "Hexo Theme processors source type: update",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: skip",
      "fullTitle": "Hexo Theme processors source type: skip",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Theme processors source type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "pattern",
      "fullTitle": "Hexo Theme processors view pattern",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: create",
      "fullTitle": "Hexo Theme processors view type: create",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "type: delete",
      "fullTitle": "Hexo Theme processors view type: delete",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}