*** using precomputed mutations ***
[32m14:52:19 (3125) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m14:52:19 (3125) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m14:52:20 (3125) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m14:52:20 (3125) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m14:52:20 (3125) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m14:52:21 (3125) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 2057 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", function () {})
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", null)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", 0)
Mutant 6 in q.js: bootstrap replaced with "hello"
Mutant 7 in q.js: bootstrap replaced with 1 + 1
Mutant 8 in q.js: bootstrap replaced with null
Mutant 9 in q.js: "promise" replaced with "buggy"
Mutant 10 in q.js: "promise" replaced with null
Mutant 11 in q.js: "promise" replaced with undefined
Mutant 12 in q.js: definition replaced with definition + 1
Mutant 13 in q.js: definition replaced with definition * 2
Mutant 14 in q.js: definition replaced with definition - 1
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "undefined"
Mutant 16 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined" && typeof module === "object"
Mutant 17 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "function"
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with typeof define !== "function" && define.amd
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with typeof define === "undefined" && define.amd
Mutant 20 in q.js: typeof define === "function" && define.amd replaced with define.amd && typeof define !== "function"
Mutant 21 in q.js: define replaced with void 0
Mutant 22 in q.js: define replaced with null
Mutant 23 in q.js: definition replaced with function (error) {
  throw error;
}
Mutant 24 in q.js: definition replaced with function (error) {
  console.log(error);
}
Mutant 25 in q.js: definition replaced with function (error) {
  return error;
}
Mutant 26 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "undefined" && ses.ok()
Mutant 27 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "undefined" || ses.ok()
Mutant 28 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "undefined" && ses.ok() && Math.random() > 0.5
Mutant 29 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 30 in q.js: !ses.ok() replaced with ses.isNotOk()
Mutant 31 in q.js: !ses.ok() replaced with ses.notOkay()
Mutant 32 in q.js: ses.ok replaced with ses.makeQ
Mutant 33 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 34 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window === "undefined" || typeof self === "undefined"
Mutant 35 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" || typeof self === "undefined"
Mutant 36 in q.js: definition replaced with 1 + 1
Mutant 37 in q.js: definition replaced with "string"
Mutant 38 in q.js: definition replaced with null
Mutant 39 in q.js: captureLine replaced with captureLine + 1
Mutant 40 in q.js: captureLine replaced with captureLine - 1
Mutant 41 in q.js: captureLine replaced with captureLine * 2
Mutant 42 in q.js: head.next replaced with head.task
Mutant 43 in q.js: head.next replaced with head.domain
Mutant 44 in q.js: head.next replaced with head.next.task
Mutant 45 in q.js: domain replaced with domain || true
Mutant 46 in q.js: domain replaced with domain && false
Mutant 47 in q.js: domain replaced with !domain
Mutant 48 in q.js: domain.enter replaced with domain.exit
Mutant 49 in q.js: domain.enter replaced with domain.run
Mutant 50 in q.js: domain.enter replaced with domain.bind
Mutant 51 in q.js: runSingle(task, domain) replaced with runSingle(task, window)
Mutant 52 in q.js: runSingle(task, domain) replaced with runSingle(task, undefined)
Mutant 53 in q.js: runSingle(task, domain) replaced with runSingle(task, null)
Mutant 54 in q.js: task replaced with undefined
Mutant 55 in q.js: task replaced with null
Mutant 56 in q.js: task replaced with () => {}
Mutant 57 in q.js: domain replaced with null
Mutant 58 in q.js: domain replaced with undefined
Mutant 59 in q.js: domain replaced with {}
Mutant 60 in q.js: laterQueue.length replaced with laterQueue.length > 0
Mutant 61 in q.js: laterQueue.length replaced with laterQueue.length === 0
Mutant 62 in q.js: laterQueue.length replaced with laterQueue.length < 10
Mutant 63 in q.js: laterQueue.pop replaced with laterQueue.length - 1
Mutant 64 in q.js: task replaced with null
Mutant 65 in q.js: task replaced with undefined
Mutant 66 in q.js: task replaced with 0
Mutant 67 in q.js: task replaced with task + 1
Mutant 68 in q.js: task replaced with task = 1
Mutant 69 in q.js: isNodeJS replaced with !isNodeJS
Mutant 70 in q.js: domain replaced with domain.exit()
Mutant 71 in q.js: domain replaced with domain.enter()
Mutant 72 in q.js: domain.exit replaced with domain.enter
Mutant 73 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 74 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, "0")
Mutant 75 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 76 in q.js: setTimeout replaced with setInterval
Mutant 77 in q.js: setTimeout replaced with clearTimeout
Mutant 78 in q.js: flush replaced with flush()
Mutant 79 in q.js: flush replaced with function () {
  flush();
}
Mutant 80 in q.js: 0 replaced with 1
Mutant 81 in q.js: 0 replaced with -1
Mutant 82 in q.js: 0 replaced with Infinity
Mutant 83 in q.js: domain replaced with !domain
Mutant 84 in q.js: domain replaced with domain + 1
Mutant 85 in q.js: domain replaced with domain.foo
Mutant 86 in q.js: domain.enter replaced with domain.exit
Mutant 87 in q.js: domain.enter replaced with domain.run
Mutant 88 in q.js: domain replaced with !domain
Mutant 89 in q.js: domain replaced with domain === undefined
Mutant 90 in q.js: domain replaced with domain !== null
Mutant 91 in q.js: domain.exit replaced with domain.enter
Mutant 92 in q.js: !flushing replaced with flushing
Mutant 93 in q.js: !flushing replaced with flushing + 1
Mutant 94 in q.js: flush replaced with flush()
Mutant 95 in q.js: flush replaced with flush(null)
Mutant 96 in q.js: flush replaced with flush(undefined)
Mutant 97 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 98 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 99 in q.js: typeof window !== "undefined" replaced with typeof window !== "string"
Mutant 100 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(self)
Mutant 101 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 102 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 103 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 104 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 105 in q.js: window replaced with null
Mutant 106 in q.js: window replaced with undefined
Mutant 107 in q.js: window replaced with this
Mutant 108 in q.js: flush replaced with flush()
Mutant 109 in q.js: flush replaced with flush()
Mutant 110 in q.js: flush replaced with runSingle(flush)
Mutant 111 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 112 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 113 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "function"
Mutant 114 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 115 in q.js: channel.port2.postMessage replaced with channel.port2.onmessage
Mutant 116 in q.js: channel.port2.postMessage replaced with channel.port1.onmessage
Mutant 117 in q.js: 0 replaced with 1
Mutant 118 in q.js: 0 replaced with null
Mutant 119 in q.js: 0 replaced with undefined
Mutant 120 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 121 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 122 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, Math.random())
Mutant 123 in q.js: flush replaced with flush.bind(null)
Mutant 124 in q.js: flush replaced with requestTick.bind(null)
Mutant 125 in q.js: 0 replaced with 1
Mutant 126 in q.js: 0 replaced with -1
Mutant 127 in q.js: 0 replaced with Infinity
Mutant 128 in q.js: requestPortTick replaced with requestTick
Mutant 129 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 130 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1000)
Mutant 131 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 132 in q.js: setTimeout replaced with setInterval
Mutant 133 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 134 in q.js: flush replaced with flush()
Mutant 135 in q.js: flush replaced with requestTick
Mutant 136 in q.js: 0 replaced with 1
Mutant 137 in q.js: 0 replaced with -1
Mutant 138 in q.js: 0 replaced with Math.random()
Mutant 139 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 140 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 141 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 142 in q.js: task replaced with undefined
Mutant 143 in q.js: task replaced with null
Mutant 144 in q.js: task replaced with {
  task: null
}
Mutant 145 in q.js: !flushing replaced with !flushing || true
Mutant 146 in q.js: !flushing replaced with flushing && false
Mutant 147 in q.js: !flushing replaced with flushing ? false : true
Mutant 148 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[0])
Mutant 149 in q.js: call.apply(f, arguments) replaced with call.apply(f, arguments[1])
Mutant 150 in q.js: call.apply(f, arguments) replaced with call.apply(f, [arguments[0], arguments[1]])
Mutant 151 in q.js: call.apply replaced with call.bind
Mutant 152 in q.js: call.apply replaced with call.call
Mutant 153 in q.js: call.apply replaced with apply.bind
Mutant 154 in q.js: f replaced with f + 1
Mutant 155 in q.js: f replaced with f - 1
Mutant 156 in q.js: f replaced with f * 2
Mutant 157 in q.js: arguments replaced with array_slice.call(arguments, 1)
Mutant 158 in q.js: arguments replaced with array_reduce.call(arguments, function (a, b) {
  return a + b;
}, 0)
Mutant 159 in q.js: arguments replaced with array_map.call(arguments, function (x) {
  return x * 2;
})
Mutant 160 in q.js: uncurryThis replaced with undefined
Mutant 161 in q.js: uncurryThis replaced with null
Mutant 162 in q.js: Array.prototype.slice replaced with Array.prototype.concat
Mutant 163 in q.js: Array.prototype.slice replaced with Array.prototype.filter
Mutant 164 in q.js: Array.prototype.slice replaced with Array.prototype.map
Mutant 165 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 166 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 167 in q.js: arguments.length === 1 replaced with arguments.length === 2
Mutant 168 in q.js: 1 replaced with 0
Mutant 169 in q.js: 1 replaced with length - 1
Mutant 170 in q.js: 1 replaced with length + 1
Mutant 171 in q.js: index in this replaced with this.hasOwnProperty(index)
Mutant 172 in q.js: index in this replaced with this[index] !== undefined
Mutant 173 in q.js: index in this replaced with Object.prototype.hasOwnProperty.call(this, index)
Mutant 174 in q.js: ++index >= length replaced with ++index > length
Mutant 175 in q.js: ++index >= length replaced with index++ >= length
Mutant 176 in q.js: ++index >= length replaced with index + 1 >= length
Mutant 177 in q.js: index < length replaced with index > length
Mutant 178 in q.js: index < length replaced with index <= length
Mutant 179 in q.js: index < length replaced with index == length
Mutant 180 in q.js: index++ replaced with index--
Mutant 181 in q.js: index++ replaced with index += 2
Mutant 182 in q.js: index++ replaced with index *= 2
Mutant 183 in q.js: index in this replaced with index in this.length
Mutant 184 in q.js: index in this replaced with index > this.length
Mutant 185 in q.js: index in this replaced with index < this.length
Mutant 186 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index++], index)
Mutant 187 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index + 1], index)
Mutant 188 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index * 2], index)
Mutant 189 in q.js: callback replaced with undefined
Mutant 190 in q.js: basis replaced with basis + 1
Mutant 191 in q.js: basis replaced with basis - 1
Mutant 192 in q.js: basis replaced with basis * 2
Mutant 193 in q.js: this[index] replaced with this[index++]
Mutant 194 in q.js: this[index] replaced with this[index + 1]
Mutant 195 in q.js: this[index] replaced with this[index - 1]
Mutant 196 in q.js: index replaced with index + 1
Mutant 197 in q.js: index replaced with index - 1
Mutant 198 in q.js: index replaced with index * 2
Mutant 199 in q.js: i < this.length replaced with i <= this.length
Mutant 200 in q.js: i < this.length replaced with i > this.length
Mutant 201 in q.js: i < this.length replaced with i === this.length
Mutant 202 in q.js: i++ replaced with i--
Mutant 203 in q.js: i++ replaced with i += 2
Mutant 204 in q.js: i++ replaced with i = 0
Mutant 205 in q.js: this[i] === value replaced with this[i] !== value
Mutant 206 in q.js: this[i] === value replaced with this[i + 1] === value
Mutant 207 in q.js: this[i] === value replaced with this[i] == value
Mutant 208 in q.js: callback.call(thisp, value, index, self) replaced with callback.apply(thisp, [value, index, self])
Mutant 209 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self, undefined)
Mutant 210 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(thisp, value, index, self, null)
Mutant 211 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(null, value, index, self)
Mutant 212 in q.js: callback.call(thisp, value, index, self) replaced with callback.call(this, value, index, self)
Mutant 213 in q.js: callback.call replaced with callback.bind
Mutant 214 in q.js: thisp replaced with Object.create(null)
Mutant 215 in q.js: value replaced with "foo"
Mutant 216 in q.js: index replaced with index + 1
Mutant 217 in q.js: index replaced with index - 1
Mutant 218 in q.js: index replaced with index * 2
Mutant 219 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 220 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key in object.prototype) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 221 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of Object.keys(object)) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 222 in q.js: object replaced with null
Mutant 223 in q.js: object replaced with undefined
Mutant 224 in q.js: object replaced with {}
Mutant 225 in q.js: object_hasOwnProperty(object, key) replaced with !object_hasOwnProperty(object, key)
Mutant 226 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object_hasOwnProperty(object, key)
Mutant 227 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) || object_hasOwnProperty(object, key)
Mutant 228 in q.js: object replaced with undefined
Mutant 229 in q.js: object replaced with null
Mutant 230 in q.js: object replaced with {}
Mutant 231 in q.js: key replaced with key + 1
Mutant 232 in q.js: key replaced with key - 1
Mutant 233 in q.js: key replaced with key * 2
Mutant 234 in q.js: key replaced with key++
Mutant 235 in q.js: key replaced with key + 1
Mutant 236 in q.js: key replaced with key - 1
Mutant 237 in q.js: Object replaced with null
Mutant 238 in q.js: Object replaced with undefined
Mutant 239 in q.js: Object replaced with "string"
Mutant 240 in q.js: value replaced with value + 1
Mutant 241 in q.js: value replaced with value * 2
Mutant 242 in q.js: value replaced with value - 1
Mutant 243 in q.js: object_toString replaced with object_keys
Mutant 244 in q.js: object_toString replaced with object_hasOwnProperty
Mutant 245 in q.js: object_toString replaced with array_map
Mutant 246 in q.js: exception replaced with exception.message
Mutant 247 in q.js: exception replaced with exception.stack
Mutant 248 in q.js: exception replaced with exception.prototype
Mutant 249 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== undefined
Mutant 250 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue === "undefined"
Mutant 251 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "string" && error !== null && error.stack
Mutant 252 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with hasStacks && promise.stack && typeof error === "undefined" && error !== null && error.stack
Mutant 253 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.source; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 254 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise + 1; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 255 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise.then(); !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 256 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 257 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p !== promise; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 258 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; p.source !== promise; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 259 in q.js: !!p replaced with p && p.source
Mutant 260 in q.js: !!p replaced with p || p.source
Mutant 261 in q.js: !!p replaced with p ? p.source : null
Mutant 262 in q.js: p = p.source replaced with p = p.source.reverse()
Mutant 263 in q.js: p = p.source replaced with p = p.source.slice(1)
Mutant 264 in q.js: p = p.source replaced with p = p.source.concat([1, 2, 3])
Mutant 265 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)
Mutant 266 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)
Mutant 267 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 268 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 269 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: 0,
  configurable: true
})
Mutant 270 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCounter__" + 1
Mutant 271 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCounter__" + "1"
Mutant 272 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCounter__" + null
Mutant 273 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 274 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 275 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 276 in q.js: stacks.unshift replaced with stacks.push
Mutant 277 in q.js: stacks.unshift replaced with stacks.shift
Mutant 278 in q.js: stacks.unshift replaced with stacks.pop
Mutant 279 in q.js: p.stack replaced with p.stack.length
Mutant 280 in q.js: p.stack replaced with p.stack.toUpperCase()
Mutant 281 in q.js: p.stack replaced with p.stack.split("")
Mutant 282 in q.js: stacks.unshift replaced with stacks.push
Mutant 283 in q.js: stacks.unshift replaced with stacks.pop
Mutant 284 in q.js: stacks.unshift replaced with stacks.shift
Mutant 285 in q.js: error.stack replaced with error.message
Mutant 286 in q.js: error.stack replaced with error.name
Mutant 287 in q.js: error.stack replaced with error.code
Mutant 288 in q.js: stacks.join replaced with stacks.concat
Mutant 289 in q.js: stacks.join replaced with stacks.pop
Mutant 290 in q.js: stacks.join replaced with stacks.slice
Mutant 291 in q.js: "\n" + STACK_JUMP_SEPARATOR + "\n" replaced with "\n" + "From previous event:" + "\n"
Mutant 292 in q.js: concatedStacks replaced with concatedStacks.split("")
Mutant 293 in q.js: concatedStacks replaced with concatedStacks.toUpperCase()
Mutant 294 in q.js: concatedStacks replaced with concatedStacks.slice(1)
Mutant 295 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 296 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: false
})
Mutant 297 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: false
})
Mutant 298 in q.js: "stack" replaced with "stackTrace"
Mutant 299 in q.js: "stack" replaced with "error"
Mutant 300 in q.js: "stack" replaced with "trace"
Mutant 301 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 302 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  enumerable: true
}
Mutant 303 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack.toUpperCase(),
  configurable: true
}
Mutant 304 in q.js: "\n" replaced with "\\n"
Mutant 305 in q.js: "\n" replaced with "\r\n"
Mutant 306 in q.js: "\n" replaced with "\u2028"
Mutant 307 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 308 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 309 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = Math.floor(Math.random() * array.length); i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 310 in q.js: i < lines.length replaced with i <= lines.length
Mutant 311 in q.js: i < lines.length replaced with i > lines.length
Mutant 312 in q.js: i < lines.length replaced with i > 0
Mutant 313 in q.js: ++i replaced with i--
Mutant 314 in q.js: ++i replaced with i += 2
Mutant 315 in q.js: ++i replaced with i *= 2
Mutant 316 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) || isNodeFrame(line) || line
Mutant 317 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with isInternalFrame(line) && isNodeFrame(line) && line
Mutant 318 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) || !isNodeFrame(line) || line
Mutant 319 in q.js: isInternalFrame replaced with isPromiseAlike
Mutant 320 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 321 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 322 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 323 in q.js: line replaced with line + 1
Mutant 324 in q.js: line replaced with line - 1
Mutant 325 in q.js: line replaced with line * 2
Mutant 326 in q.js: "\n" replaced with " "
Mutant 327 in q.js: "\n" replaced with "\t"
Mutant 328 in q.js: "\n" replaced with "<br>"
Mutant 329 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 330 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 331 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 332 in q.js: "(module.js:" replaced with "module.js:"
Mutant 333 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 334 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 335 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 336 in q.js: stackLine replaced with stackLine.toLowerCase()
Mutant 337 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 338 in q.js: stackLine replaced with stackLine.replace("module.js", "node.js")
Mutant 339 in q.js: attempt1 replaced with attempt2
Mutant 340 in q.js: attempt1 replaced with attempt3
Mutant 341 in q.js: attempt1 replaced with attempt4
Mutant 342 in q.js: Number replaced with "string"
Mutant 343 in q.js: Number replaced with null
Mutant 344 in q.js: Number replaced with undefined
Mutant 345 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 346 in q.js: attempt1[2] replaced with attempt1[1] + 1
Mutant 347 in q.js: attempt1[2] replaced with attempt1[2] + 1
Mutant 348 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 349 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 350 in q.js: stackLine replaced with stackLine.split(".")[0]
Mutant 351 in q.js: attempt2 replaced with attempt2[0]
Mutant 352 in q.js: attempt2 replaced with attempt2.length
Mutant 353 in q.js: attempt2 replaced with attempt2.pop()
Mutant 354 in q.js: Number replaced with "string"
Mutant 355 in q.js: Number replaced with undefined
Mutant 356 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 357 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 358 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 359 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 360 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 361 in q.js: stackLine replaced with stackLine.replace(":", "")
Mutant 362 in q.js: attempt3 replaced with attempt3[0]
Mutant 363 in q.js: attempt3 replaced with attempt3[1]
Mutant 364 in q.js: attempt3 replaced with attempt3.join(":")
Mutant 365 in q.js: Number replaced with undefined
Mutant 366 in q.js: Number replaced with NaN
Mutant 367 in q.js: Number replaced with -1
Mutant 368 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 369 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 370 in q.js: attempt3[2] replaced with attempt3.length
Mutant 371 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 372 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[1]
Mutant 373 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber.length
Mutant 374 in q.js: stackLine replaced with stackLine[0]
Mutant 375 in q.js: stackLine replaced with stackLine.substring(1)
Mutant 376 in q.js: stackLine replaced with stackLine.toUpperCase()
Mutant 377 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === null
Mutant 378 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === undefined
Mutant 379 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber[0] === "undefined"
Mutant 380 in q.js: e.stack.split replaced with e.stack.slice
Mutant 381 in q.js: e.stack.split replaced with e.stack.substr
Mutant 382 in q.js: "\n" replaced with "\r"
Mutant 383 in q.js: "\n" replaced with "\f"
Mutant 384 in q.js: "\n" replaced with "\v"
Mutant 385 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 386 in q.js: lines[0].indexOf replaced with lines[lines.length - 1].indexOf
Mutant 387 in q.js: "@" replaced with "@@"
Mutant 388 in q.js: "@" replaced with "%"
Mutant 389 in q.js: "@" replaced with "#"
Mutant 390 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber[0]
Mutant 391 in q.js: getFileNameAndLineNumber replaced with getFileNameAndLineNumber.length
Mutant 392 in q.js: firstLine replaced with firstLine.split(":")[0]
Mutant 393 in q.js: firstLine replaced with firstLine.split(":")[1]
Mutant 394 in q.js: firstLine replaced with firstLine.split(":")[2]
Mutant 395 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[0] === qFileName
Mutant 396 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1] >= qStartingLine
Mutant 397 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber[1] <= qEndingLine
Mutant 398 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== "function"
Mutant 399 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console === "undefined"
Mutant 400 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "object"
Mutant 401 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.apply(this, arguments))
Mutant 402 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.apply(null, arguments))
Mutant 403 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback.apply(window, arguments))
Mutant 404 in q.js: callback.apply replaced with callback.call
Mutant 405 in q.js: callback.apply replaced with callback.bind
Mutant 406 in q.js: callback.apply replaced with callback.toString
Mutant 407 in q.js: arguments replaced with null
Mutant 408 in q.js: arguments replaced with undefined
Mutant 409 in q.js: arguments replaced with function () {
  return arguments;
}
Mutant 410 in q.js: value instanceof Promise replaced with value === Promise
Mutant 411 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 412 in q.js: value instanceof Promise replaced with value.constructor.name === "Promise"
Mutant 413 in q.js: isPromiseAlike(value) replaced with value.then
Mutant 414 in q.js: isPromiseAlike(value) replaced with value.then === undefined
Mutant 415 in q.js: isPromiseAlike(value) replaced with value.then !== undefined
Mutant 416 in q.js: value replaced with value.catch
Mutant 417 in q.js: value replaced with value.finally
Mutant 418 in q.js: value replaced with value + 1
Mutant 419 in q.js: value replaced with value * 2
Mutant 420 in q.js: value replaced with value - 1
Mutant 421 in q.js: fulfill replaced with reject
Mutant 422 in q.js: value replaced with null
Mutant 423 in q.js: value replaced with undefined
Mutant 424 in q.js: object_create replaced with Q.defer
Mutant 425 in q.js: object_create replaced with Q.resolve
Mutant 426 in q.js: object_create replaced with Q.reject
Mutant 427 in q.js: defer.prototype replaced with defer.prototype.promiseDispatch
Mutant 428 in q.js: defer.prototype replaced with defer.prototype.fulfill
Mutant 429 in q.js: defer.prototype replaced with defer.prototype.reject
Mutant 430 in q.js: object_create replaced with null
Mutant 431 in q.js: object_create replaced with undefined
Mutant 432 in q.js: object_create replaced with {}
Mutant 433 in q.js: Promise.prototype replaced with Object.prototype
Mutant 434 in q.js: Promise.prototype replaced with null
Mutant 435 in q.js: Promise.prototype replaced with {}
Mutant 436 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 437 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 438 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 439 in q.js: messages replaced with messages.length
Mutant 440 in q.js: messages replaced with messages.includes(undefined)
Mutant 441 in q.js: messages replaced with messages.indexOf(undefined) >= 0
Mutant 442 in q.js: args replaced with args[0]
Mutant 443 in q.js: args replaced with args.slice(1)
Mutant 444 in q.js: args replaced with args.length
Mutant 445 in q.js: op === "when" && operands[1] replaced with op !== "when" && operands[1]
Mutant 446 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[0]
Mutant 447 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 448 in q.js: operands[1] replaced with operands[2]
Mutant 449 in q.js: operands[1] replaced with operands[0]
Mutant 450 in q.js: operands[1] replaced with null
Mutant 451 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(deferredPromise, args)
Mutant 452 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(promise, args)
Mutant 453 in q.js: resolvedPromise.promiseDispatch.apply(resolvedPromise, args) replaced with resolvedPromise.promiseDispatch.apply(resolvedPromise.promise, args)
Mutant 454 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 455 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.bind
Mutant 456 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 457 in q.js: resolvedPromise replaced with resolvedPromise.source
Mutant 458 in q.js: resolvedPromise replaced with resolvedPromise.valueOf()
Mutant 459 in q.js: messages replaced with messages.length
Mutant 460 in q.js: messages replaced with messages.length === 0
Mutant 461 in q.js: messages replaced with resolvedPromise
Mutant 462 in q.js: nearer replaced with nearerValue + 1
Mutant 463 in q.js: nearer replaced with nearerValue - 1
Mutant 464 in q.js: nearer replaced with nearerValue * 2
Mutant 465 in q.js: resolvedPromise replaced with resolvedPromise + 1
Mutant 466 in q.js: resolvedPromise replaced with resolvedPromise * 2
Mutant 467 in q.js: resolvedPromise replaced with resolvedPromise - 1
Mutant 468 in q.js: isPromise(nearerValue) replaced with isPromise(nearerValue) && nearerValue.inspect().state === "fulfilled"
Mutant 469 in q.js: isPromise(nearerValue) replaced with typeof nearerValue === "function"
Mutant 470 in q.js: isPromise(nearerValue) replaced with nearerValue.valueOf() !== nearerValue
Mutant 471 in q.js: isPromise replaced with isPromiseAlike
Mutant 472 in q.js: isPromise replaced with !isPromise
Mutant 473 in q.js: isPromise replaced with isPromiseLike
Mutant 474 in q.js: nearerValue replaced with nearerValue + 1
Mutant 475 in q.js: nearerValue replaced with nearerValue - 1
Mutant 476 in q.js: nearerValue replaced with nearerValue * 2
Mutant 477 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 478 in q.js: !resolvedPromise replaced with messages.length > 0
Mutant 479 in q.js: !resolvedPromise replaced with !Q.longStackSupport
Mutant 480 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 481 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 482 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 483 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 484 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.slice(e.stack.indexOf("\n") + 1)
Mutant 485 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.split("\n").slice(1).join("\n")
Mutant 486 in q.js: e.stack.indexOf replaced with e.stack.includes
Mutant 487 in q.js: e.stack.indexOf replaced with e.stack.match
Mutant 488 in q.js: "\n" replaced with "\t"
Mutant 489 in q.js: "\n" replaced with " "
Mutant 490 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 491 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 492 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport ? hasStacks : !hasStacks
Mutant 493 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise.promiseDispatch.apply(newPromise, message))
Mutant 494 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise.promiseDispatch.call(newPromise, message))
Mutant 495 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise.promiseDispatch.bind(newPromise)(message))
Mutant 496 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 497 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 498 in q.js: newPromise replaced with newPromise.promise
Mutant 499 in q.js: newPromise replaced with newPromise.value
Mutant 500 in q.js: newPromise replaced with newPromise.then(function (value) {
  return value;
})
Mutant 501 in q.js: message replaced with 0
Mutant 502 in q.js: message replaced with null
Mutant 503 in q.js: message replaced with undefined
Mutant 504 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 505 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 506 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 507 in q.js: value replaced with null
Mutant 508 in q.js: value replaced with undefined
Mutant 509 in q.js: value replaced with promise.reject(new Error("test"))
Mutant 510 in q.js: resolvedPromise replaced with resolvedPromise === null
Mutant 511 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 512 in q.js: resolvedPromise replaced with resolvedPromise.promise !== undefined
Mutant 513 in q.js: fulfill(value) replaced with reject(value)
Mutant 514 in q.js: fulfill(value) replaced with resolve(otherValue)
Mutant 515 in q.js: fulfill(value) replaced with fulfill(otherValue)
Mutant 516 in q.js: fulfill replaced with notify
Mutant 517 in q.js: value replaced with undefined
Mutant 518 in q.js: value replaced with null
Mutant 519 in q.js: value replaced with {}
Mutant 520 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 521 in q.js: resolvedPromise replaced with resolvedPromise + 1
Mutant 522 in q.js: resolvedPromise replaced with resolvedPromise.toString()
Mutant 523 in q.js: reject(reason) replaced with deferred.reject(reason)
Mutant 524 in q.js: reject(reason) replaced with become(reject(reason))
Mutant 525 in q.js: reject(reason) replaced with resolvedPromise.reject(reason)
Mutant 526 in q.js: reject replaced with fulfill
Mutant 527 in q.js: reject replaced with notify
Mutant 528 in q.js: reason replaced with null
Mutant 529 in q.js: reason replaced with undefined
Mutant 530 in q.js: reason replaced with 0
Mutant 531 in q.js: resolvedPromise replaced with progressListeners.length
Mutant 532 in q.js: resolvedPromise replaced with progressListeners.length > 0
Mutant 533 in q.js: resolvedPromise replaced with resolvedPromise && progressListeners.length > 0
Mutant 534 in q.js: progressListener replaced with promise
Mutant 535 in q.js: progressListener replaced with reject
Mutant 536 in q.js: progressListener replaced with notify
Mutant 537 in q.js: progress replaced with "progress" + 1
Mutant 538 in q.js: progress replaced with progress.toString()
Mutant 539 in q.js: progress replaced with progress.length
Mutant 540 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 541 in q.js: arguments.length > 2 replaced with arguments[0] > 1
Mutant 542 in q.js: arguments.length > 2 replaced with arguments.length === 1
Mutant 543 in q.js: self.resolve replaced with self.reject
Mutant 544 in q.js: self.resolve replaced with self.notify
Mutant 545 in q.js: self.resolve replaced with self.fulfill
Mutant 546 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 547 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0, 1)
Mutant 548 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 549 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[0])
Mutant 550 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 551 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[1])
Mutant 552 in q.js: array_slice replaced with array_splice
Mutant 553 in q.js: arguments replaced with null
Mutant 554 in q.js: arguments replaced with undefined
Mutant 555 in q.js: arguments replaced with []
Mutant 556 in q.js: 1 replaced with x + 1
Mutant 557 in q.js: self.resolve replaced with self.reject
Mutant 558 in q.js: self.resolve replaced with self.notify
Mutant 559 in q.js: self.resolve replaced with self.fulfill
Mutant 560 in q.js: value replaced with null
Mutant 561 in q.js: value replaced with undefined
Mutant 562 in q.js: value replaced with 0
Mutant 563 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 564 in q.js: typeof resolver !== "function" replaced with typeof resolver !== "object"
Mutant 565 in q.js: typeof resolver !== "function" replaced with resolver === "function"
Mutant 566 in q.js: defer replaced with defer.reject
Mutant 567 in q.js: defer replaced with promise.reject
Mutant 568 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.reject, deferred.reject, deferred.notify)
Mutant 569 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.notify, deferred.notify, deferred.notify)
Mutant 570 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve, deferred.resolve, deferred.resolve)
Mutant 571 in q.js: deferred.resolve replaced with deferred.reject
Mutant 572 in q.js: deferred.resolve replaced with deferred.notify
Mutant 573 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 574 in q.js: deferred.reject replaced with deferred.reject("error")
Mutant 575 in q.js: deferred.reject replaced with deferred.resolve("value")
Mutant 576 in q.js: deferred.reject replaced with deferred.notify("progress")
Mutant 577 in q.js: deferred.notify replaced with deferred.reject
Mutant 578 in q.js: deferred.notify replaced with deferred.fulfill
Mutant 579 in q.js: deferred.notify replaced with deferred.makeNodeResolver
Mutant 580 in q.js: deferred.reject replaced with deferred.resolve
Mutant 581 in q.js: deferred.reject replaced with deferred.notify
Mutant 582 in q.js: deferred.reject replaced with Q.reject
Mutant 583 in q.js: reason replaced with null
Mutant 584 in q.js: reason replaced with undefined
Mutant 585 in q.js: reason replaced with "error"
Mutant 586 in q.js: Q replaced with null
Mutant 587 in q.js: Q replaced with undefined
Mutant 588 in q.js: Q replaced with 0
Mutant 589 in q.js: x replaced with y
Mutant 590 in q.js: x replaced with x + 1
Mutant 591 in q.js: x replaced with null
Mutant 592 in q.js: y replaced with x
Mutant 593 in q.js: y replaced with y + 1
Mutant 594 in q.js: y replaced with x + y
Mutant 595 in q.js: [this, that] replaced with [that, this]
Mutant 596 in q.js: [this, that] replaced with [this, this]
Mutant 597 in q.js: [this, that] replaced with [this, null]
Mutant 598 in q.js: x === y replaced with x < y
Mutant 599 in q.js: x === y replaced with x > y
Mutant 600 in q.js: x === y replaced with x !== y
Mutant 601 in q.js: i < len replaced with i <= len
Mutant 602 in q.js: i < len replaced with i > len
Mutant 603 in q.js: i < len replaced with i >= len
Mutant 604 in q.js: i++ replaced with i--
Mutant 605 in q.js: i++ replaced with i += 2
Mutant 606 in q.js: i++ replaced with i = i + 1
Mutant 607 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, resolve)
Mutant 608 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(reject, reject)
Mutant 609 in q.js: Q replaced with null
Mutant 610 in q.js: Q replaced with undefined
Mutant 611 in q.js: Q replaced with 0
Mutant 612 in q.js: answerPs[i] replaced with answerPs[i] + 1
Mutant 613 in q.js: answerPs[i] replaced with answerPs[i] - 1
Mutant 614 in q.js: answerPs[i] replaced with answerPs[i] * 2
Mutant 615 in q.js: resolve replaced with reject
Mutant 616 in q.js: reject replaced with resolve
Mutant 617 in q.js: this.then replaced with null
Mutant 618 in q.js: this.then replaced with undefined
Mutant 619 in q.js: Q.race replaced with Q.resolve
Mutant 620 in q.js: Q.race replaced with Q.reject
Mutant 621 in q.js: Q.race replaced with Q.all
Mutant 622 in q.js: fallback === void 0 replaced with fallback === null
Mutant 623 in q.js: fallback === void 0 replaced with fallback === "undefined"
Mutant 624 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 625 in q.js: inspect === void 0 replaced with inspect === null
Mutant 626 in q.js: inspect === void 0 replaced with typeof inspect === "object"
Mutant 627 in q.js: object_create replaced with null
Mutant 628 in q.js: object_create replaced with undefined
Mutant 629 in q.js: object_create replaced with {}
Mutant 630 in q.js: Promise.prototype replaced with Object.prototype
Mutant 631 in q.js: Promise.prototype replaced with Function.prototype
Mutant 632 in q.js: Promise.prototype replaced with null
Mutant 633 in q.js: descriptor[op] replaced with descriptor[op] + 1
Mutant 634 in q.js: descriptor[op] replaced with descriptor[op] * 2
Mutant 635 in q.js: descriptor[op] replaced with descriptor[op] - 1
Mutant 636 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args, null)
Mutant 637 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args, undefined)
Mutant 638 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise, args, 0)
Mutant 639 in q.js: promise replaced with null
Mutant 640 in q.js: promise replaced with undefined
Mutant 641 in q.js: promise replaced with "hello"
Mutant 642 in q.js: args replaced with args.slice(1)
Mutant 643 in q.js: args replaced with args.concat(1)
Mutant 644 in q.js: args replaced with args.push(1)
Mutant 645 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.reject)
Mutant 646 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.resolve)
Mutant 647 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.then)
Mutant 648 in q.js: fallback.call replaced with fallback.apply
Mutant 649 in q.js: fallback.call replaced with fallback.bind
Mutant 650 in q.js: promise replaced with null
Mutant 651 in q.js: promise replaced with undefined
Mutant 652 in q.js: promise replaced with "hello"
Mutant 653 in q.js: op replaced with op + 1
Mutant 654 in q.js: op replaced with op.toLowerCase()
Mutant 655 in q.js: op replaced with op.split("").reverse().join("")
Mutant 656 in q.js: args replaced with args[0]
Mutant 657 in q.js: args replaced with args[1]
Mutant 658 in q.js: args replaced with args.slice(1)
Mutant 659 in q.js: reject replaced with resolve
Mutant 660 in q.js: exception replaced with exception.message
Mutant 661 in q.js: exception replaced with new Error("New error message")
Mutant 662 in q.js: exception replaced with null
Mutant 663 in q.js: resolve replaced with !resolve
Mutant 664 in q.js: resolve replaced with resolve(null)
Mutant 665 in q.js: resolve replaced with resolve(undefined)
Mutant 666 in q.js: resolve replaced with deferred.reject
Mutant 667 in q.js: resolve replaced with deferred.notify
Mutant 668 in q.js: result replaced with undefined
Mutant 669 in q.js: result replaced with null
Mutant 670 in q.js: result replaced with {}
Mutant 671 in q.js: inspect replaced with inspect.state
Mutant 672 in q.js: inspect replaced with inspect().state
Mutant 673 in q.js: inspect replaced with inspect.apply(this).state
Mutant 674 in q.js: inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 675 in q.js: inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 676 in q.js: inspected.state === "rejected" replaced with inspected.state !== "fulfilled"
Mutant 677 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 678 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 679 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "rejected"
Mutant 680 in q.js: fulfilled replaced with rejected
Mutant 681 in q.js: value replaced with undefined
Mutant 682 in q.js: value replaced with null
Mutant 683 in q.js: value replaced with "value"
Mutant 684 in q.js: reject replaced with resolve
Mutant 685 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 686 in q.js: typeof rejected === "function" replaced with rejected instanceof Function
Mutant 687 in q.js: typeof rejected === "function" replaced with Object.prototype.toString.call(rejected) === "[object Function]"
Mutant 688 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, self)
Mutant 689 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, this)
Mutant 690 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, null)
Mutant 691 in q.js: exception replaced with exception.message
Mutant 692 in q.js: exception replaced with exception.stack
Mutant 693 in q.js: exception replaced with new Error(exception.message)
Mutant 694 in q.js: rejected replaced with fulfilled
Mutant 695 in q.js: rejected replaced with Q.reject
Mutant 696 in q.js: rejected replaced with Q.resolve
Mutant 697 in q.js: exception replaced with reject(exception)
Mutant 698 in q.js: reject replaced with resolve
Mutant 699 in q.js: newException replaced with reject(new Error(exception))
Mutant 700 in q.js: newException replaced with reject(exception)
Mutant 701 in q.js: exception replaced with exception.message
Mutant 702 in q.js: exception replaced with reject(exception.message)
Mutant 703 in q.js: value replaced with value + 1
Mutant 704 in q.js: value replaced with value - 1
Mutant 705 in q.js: value replaced with value * 2
Mutant 706 in q.js: done replaced with !done
Mutant 707 in q.js: done replaced with done === undefined
Mutant 708 in q.js: done replaced with done !== done
Mutant 709 in q.js: deferred.resolve replaced with deferred.reject
Mutant 710 in q.js: deferred.resolve replaced with deferred.notify
Mutant 711 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 712 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 713 in q.js: _fulfilled(value) replaced with _fulfilled(exception)
Mutant 714 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 715 in q.js: value replaced with null
Mutant 716 in q.js: value replaced with undefined
Mutant 717 in q.js: value replaced with "hello"
Mutant 718 in q.js: done replaced with !done
Mutant 719 in q.js: done replaced with done && false
Mutant 720 in q.js: done replaced with done || true
Mutant 721 in q.js: deferred.resolve replaced with deferred.reject
Mutant 722 in q.js: deferred.resolve replaced with deferred.notify
Mutant 723 in q.js: deferred.resolve replaced with Q.reject
Mutant 724 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 725 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 726 in q.js: exception replaced with exception.message
Mutant 727 in q.js: exception replaced with new Error(exception)
Mutant 728 in q.js: _progressed replaced with _rejected
Mutant 729 in q.js: _progressed replaced with _fulfilled
Mutant 730 in q.js: value replaced with null
Mutant 731 in q.js: value replaced with undefined
Mutant 732 in q.js: value replaced with 0
Mutant 733 in q.js: Q.onerror replaced with Q.onerror()
Mutant 734 in q.js: Q.onerror replaced with Q.onerror.call(null)
Mutant 735 in q.js: Q.onerror replaced with Q.onerror.call(Q)
Mutant 736 in q.js: e replaced with e.message
Mutant 737 in q.js: e replaced with e.name
Mutant 738 in q.js: e replaced with e.stack
Mutant 739 in q.js: !threw replaced with threw
Mutant 740 in q.js: !threw replaced with threw === true
Mutant 741 in q.js: deferred.notify replaced with deferred.reject
Mutant 742 in q.js: deferred.notify replaced with deferred.resolve
Mutant 743 in q.js: deferred.notify replaced with deferred.progress
Mutant 744 in q.js: newValue replaced with null
Mutant 745 in q.js: newValue replaced with undefined
Mutant 746 in q.js: newValue replaced with "<PLACEHOLDER>"
Mutant 747 in q.js: callback replaced with function () {}
Mutant 748 in q.js: callback replaced with function (x) {
  return x + 1;
}
Mutant 749 in q.js: callback replaced with function (x) {
  throw new Error("test");
}
Mutant 750 in q.js: Q replaced with Q.fcall
Mutant 751 in q.js: Q replaced with Q.resolve
Mutant 752 in q.js: Q replaced with Q.reject
Mutant 753 in q.js: callback replaced with Q(null)
Mutant 754 in q.js: callback replaced with Q(undefined)
Mutant 755 in q.js: callback replaced with Q(1)
Mutant 756 in q.js: value replaced with null
Mutant 757 in q.js: value replaced with undefined
Mutant 758 in q.js: value replaced with {}
Mutant 759 in q.js: value replaced with null
Mutant 760 in q.js: value replaced with undefined
Mutant 761 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 762 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(progressed, fulfilled, rejected)
Mutant 763 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, progressed, rejected)
Mutant 764 in q.js: value replaced with null
Mutant 765 in q.js: value replaced with undefined
Mutant 766 in q.js: value replaced with Promise.reject()
Mutant 767 in q.js: fulfilled replaced with rejected
Mutant 768 in q.js: fulfilled replaced with _fulfilled(value)
Mutant 769 in q.js: fulfilled replaced with _rejected(exception)
Mutant 770 in q.js: rejected replaced with resolved
Mutant 771 in q.js: progressed replaced with function () {}
Mutant 772 in q.js: progressed replaced with null
Mutant 773 in q.js: progressed replaced with undefined
Mutant 774 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 775 in q.js: function () {
  return value;
} replaced with function () {
  return undefined;
}
Mutant 776 in q.js: function () {
  return value;
} replaced with function () {
  throw new Error('Test error');
}
Mutant 777 in q.js: Q replaced with 1
Mutant 778 in q.js: Q replaced with null
Mutant 779 in q.js: Q replaced with undefined
Mutant 780 in q.js: promise replaced with null
Mutant 781 in q.js: promise replaced with undefined
Mutant 782 in q.js: promise replaced with 0
Mutant 783 in q.js: value replaced with null
Mutant 784 in q.js: value replaced with undefined
Mutant 785 in q.js: value replaced with 0
Mutant 786 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 787 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 788 in q.js: function () {
  throw reason;
} replaced with function () {
  throw reason.message;
}
Mutant 789 in q.js: promise replaced with Q.reject(reason)
Mutant 790 in q.js: promise replaced with Q.when(promise)
Mutant 791 in q.js: promise replaced with Q.then(promise, function (value) {
  return value;
})
Mutant 792 in q.js: isPromise(value) replaced with isPromise(value) || value.inspect().state === "fulfilled"
Mutant 793 in q.js: isPromise(value) replaced with isPromise(value) && value.inspect().state === "rejected"
Mutant 794 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 795 in q.js: isPromise replaced with isObject
Mutant 796 in q.js: isPromise replaced with isFulfilled
Mutant 797 in q.js: value replaced with value + 1
Mutant 798 in q.js: value replaced with value * 2
Mutant 799 in q.js: value replaced with value - 1
Mutant 800 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 801 in q.js: inspected.state === "fulfilled" replaced with inspected.state !== "pending"
Mutant 802 in q.js: inspected.state === "fulfilled" replaced with inspected.value !== undefined
Mutant 803 in q.js: isObject replaced with isArray
Mutant 804 in q.js: isObject replaced with isString
Mutant 805 in q.js: isObject replaced with isFunction
Mutant 806 in q.js: object replaced with object.then
Mutant 807 in q.js: object replaced with object.thenResolve
Mutant 808 in q.js: object replaced with object.thenReject
Mutant 809 in q.js: isPromise replaced with !isPromise
Mutant 810 in q.js: isPromise replaced with isPromiseAlike
Mutant 811 in q.js: isPromise replaced with isPending
Mutant 812 in q.js: object replaced with null
Mutant 813 in q.js: object replaced with undefined
Mutant 814 in q.js: object replaced with Promise.reject()
Mutant 815 in q.js: isPromise replaced with isPromiseAlike
Mutant 816 in q.js: isPromise replaced with !isPromise
Mutant 817 in q.js: isPromise replaced with isFulfilled
Mutant 818 in q.js: object replaced with object.then
Mutant 819 in q.js: object replaced with object.catch
Mutant 820 in q.js: object replaced with object.finally
Mutant 821 in q.js: object.inspect replaced with object.isFulfilled
Mutant 822 in q.js: object.inspect replaced with object.isRejected
Mutant 823 in q.js: object.inspect replaced with object.then
not replacing object.inspect with object.isFulfilled
not replacing object.inspect with object.isRejected
not replacing object.inspect with object.then
Mutant 824 in q.js: isPromise replaced with isPromiseAlike
Mutant 825 in q.js: isPromise replaced with isFulfilled
Mutant 826 in q.js: isPromise replaced with isRejected
Mutant 827 in q.js: object replaced with object.thenResolve()
Mutant 828 in q.js: object replaced with object.thenReject()
Mutant 829 in q.js: object replaced with object.then(function () {
  throw reason;
})
Mutant 830 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections && false
Mutant 831 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections || true
Mutant 832 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections ? true : false
Mutant 833 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections && false
Mutant 834 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections || true
Mutant 835 in q.js: !trackUnhandledRejections replaced with !trackUnhandledRejections ^ true
Mutant 836 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 837 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.length > 0
Mutant 838 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with !unhandledRejections.includes(promise)
Mutant 839 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, reason)
Mutant 840 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 841 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons.length, 0)
Mutant 842 in q.js: unhandledRejections replaced with unhandledRejections[0]
Mutant 843 in q.js: unhandledRejections replaced with unhandledRejections.indexOf(promise) === -1
Mutant 844 in q.js: promise replaced with promise.then(function () {
  throw new Error("test");
})
Mutant 845 in q.js: promise replaced with promise.then(function () {
  return Q.reject("test");
})
Mutant 846 in q.js: promise replaced with promise.then(function () {
  return Q.resolve("test");
})
Mutant 847 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason)
Mutant 848 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", promise)
Mutant 849 in q.js: "unhandledRejection" replaced with "rejectionHandled"
Mutant 850 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "Handled"
Mutant 851 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "Unhandled"
Mutant 852 in q.js: reason replaced with reason.stack
Mutant 853 in q.js: reason replaced with reason.message
Mutant 854 in q.js: reason replaced with reason.toString()
Mutant 855 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 856 in q.js: reportedUnhandledRejections.push replaced with unhandledReasons.pop
Mutant 857 in q.js: reportedUnhandledRejections.push replaced with unhandledRejections.pop
Mutant 858 in q.js: promise replaced with null
Mutant 859 in q.js: promise replaced with undefined
Mutant 860 in q.js: promise replaced with "promise"
Mutant 861 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 862 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== null
Mutant 863 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined" && reason.stack !== null
Mutant 864 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 865 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 866 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 867 in q.js: reason.stack replaced with reason.stack.length
Mutant 868 in q.js: reason.stack replaced with reason.stack.split("\n").length
Mutant 869 in q.js: reason.stack replaced with reason.stack.replace(/[\n]/g, "")
Mutant 870 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 871 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 872 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.name
Mutant 873 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === true
Mutant 874 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 875 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 876 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections)
Mutant 877 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections)
Mutant 878 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 879 in q.js: array_indexOf replaced with array_findIndex
Mutant 880 in q.js: array_indexOf replaced with array_includes
Mutant 881 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 882 in q.js: unhandledRejections replaced with unhandledRejections.concat()
Mutant 883 in q.js: unhandledRejections replaced with unhandledRejections.splice()
Mutant 884 in q.js: promise replaced with promise.then(function () {})
Mutant 885 in q.js: promise replaced with promise.catch(function () {})
Mutant 886 in q.js: promise replaced with promise.finally(function () {})
Mutant 887 in q.js: at !== -1 replaced with at === -1
Mutant 888 in q.js: at !== -1 replaced with at < -1
Mutant 889 in q.js: at !== -1 replaced with at > -1
Mutant 890 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, reason)
Mutant 891 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, unhandledReasons[at])
Mutant 892 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, unhandledReasons[atReport])
Mutant 893 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 894 in q.js: array_indexOf replaced with array_includes
Mutant 895 in q.js: array_indexOf replaced with array_findIndex
Mutant 896 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 897 in q.js: reportedUnhandledRejections replaced with []
Mutant 898 in q.js: reportedUnhandledRejections replaced with null
Mutant 899 in q.js: promise replaced with reportedUnhandledRejections[at]
Mutant 900 in q.js: promise replaced with unhandledReasons[at]
Mutant 901 in q.js: promise replaced with reason
Mutant 902 in q.js: atReport !== -1 replaced with atReport === -1
Mutant 903 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 904 in q.js: atReport !== -1 replaced with atReport >= -1
Mutant 905 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at])
Mutant 906 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 907 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], null)
Mutant 908 in q.js: "rejectionHandled" replaced with "unhandledRejection"
Mutant 909 in q.js: "rejectionHandled" replaced with "handledRejection"
Mutant 910 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 911 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 912 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 10]
Mutant 913 in q.js: promise replaced with null
Mutant 914 in q.js: promise replaced with undefined
Mutant 915 in q.js: promise replaced with promise.then()
Mutant 916 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 0)
Mutant 917 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, 2)
Mutant 918 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport, reportedUnhandledRejections.length - 1)
Mutant 919 in q.js: reportedUnhandledRejections.splice replaced with reportedUnhandledRejections.length = 0
Mutant 920 in q.js: atReport replaced with atReport + 1
Mutant 921 in q.js: atReport replaced with atReport - 1
Mutant 922 in q.js: atReport replaced with atReport.length - 1
Mutant 923 in q.js: 1 replaced with 2
Mutant 924 in q.js: 1 replaced with 3
Mutant 925 in q.js: 1 replaced with -1
Mutant 926 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at - 1)
Mutant 927 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at + 1)
Mutant 928 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at = 0)
Mutant 929 in q.js: at replaced with at + 1
Mutant 930 in q.js: at replaced with at - 1
Mutant 931 in q.js: at replaced with at + 2
Mutant 932 in q.js: 1 replaced with 0
Mutant 933 in q.js: 1 replaced with -1
Mutant 934 in q.js: 1 replaced with array.length - 1
Mutant 935 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 936 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, -1)
Mutant 937 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 938 in q.js: at replaced with at + 1
Mutant 939 in q.js: at replaced with at - 1
Mutant 940 in q.js: at replaced with at * 2
Mutant 941 in q.js: 1 replaced with 0
Mutant 942 in q.js: 1 replaced with -1
Mutant 943 in q.js: 1 replaced with NaN
Mutant 944 in q.js: resetUnhandledRejections replaced with unhandledReasons.length = 0
Mutant 945 in q.js: resetUnhandledRejections replaced with unhandledRejections.length = 0
Mutant 946 in q.js: rejected replaced with rejected == true
Mutant 947 in q.js: rejected replaced with typeof rejected == "function"
Mutant 948 in q.js: rejected replaced with rejected.call(this, reason)
Mutant 949 in q.js: this replaced with null
Mutant 950 in q.js: this replaced with undefined
Mutant 951 in q.js: this replaced with Promise.resolve()
Mutant 952 in q.js: reason replaced with undefined
Mutant 953 in q.js: reason replaced with null
Mutant 954 in q.js: reason replaced with "some error message"
Mutant 955 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, reason, "foo")
Mutant 956 in q.js: trackRejection(rejection, reason) replaced with trackRejection(rejection, "foo", reason)
Mutant 957 in q.js: trackRejection(rejection, reason) replaced with trackRejection("foo", reason)
Mutant 958 in q.js: trackRejection replaced with untrackRejection
Mutant 959 in q.js: rejection replaced with rejection.message
Mutant 960 in q.js: rejection replaced with null
Mutant 961 in q.js: rejection replaced with undefined
Mutant 962 in q.js: reason replaced with null
Mutant 963 in q.js: reason replaced with undefined
Mutant 964 in q.js: reason replaced with 0
Mutant 965 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 966 in q.js: name === null || name === void 0 replaced with name === "undefined"
Mutant 967 in q.js: name === null || name === void 0 replaced with name === "null"
Mutant 968 in q.js: value.apply(void 0, args) replaced with value.apply(args, void 0)
Mutant 969 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 970 in q.js: value.apply(void 0, args) replaced with value.apply(args[0], args)
Mutant 971 in q.js: value.apply replaced with value.call
Mutant 972 in q.js: value.apply replaced with value.bind
Mutant 973 in q.js: value.apply replaced with value.toString
Mutant 974 in q.js: void 0 replaced with null
Mutant 975 in q.js: void 0 replaced with undefined
Mutant 976 in q.js: args replaced with args.slice()
Mutant 977 in q.js: args replaced with args.concat()
Mutant 978 in q.js: args replaced with args.map(function (arg) {
  return arg;
})
Mutant 979 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args[0])
Mutant 980 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice(1))
Mutant 981 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, [args[0]])
Mutant 982 in q.js: value[name].apply replaced with value[name].call
Mutant 983 in q.js: value[name].apply replaced with value[name].bind
Mutant 984 in q.js: value replaced with null
Mutant 985 in q.js: value replaced with this
Mutant 986 in q.js: value replaced with undefined
Mutant 987 in q.js: args replaced with args.slice()
Mutant 988 in q.js: args replaced with args.concat()
Mutant 989 in q.js: args replaced with args.reverse()
Mutant 990 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.slice())
Mutant 991 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.concat())
Mutant 992 in q.js: value.apply replaced with value.call
Mutant 993 in q.js: value.apply replaced with value.bind
Mutant 994 in q.js: value.apply replaced with value.toString
Mutant 995 in q.js: thisp replaced with undefined
Mutant 996 in q.js: thisp replaced with null
Mutant 997 in q.js: thisp replaced with {}
Mutant 998 in q.js: args replaced with args.slice()
Mutant 999 in q.js: args replaced with args.concat()
Mutant 1000 in q.js: args replaced with [].concat(args)
Mutant 1001 in q.js: object_keys replaced with object_values
Mutant 1002 in q.js: object_keys replaced with object_entries
Mutant 1003 in q.js: value replaced with null
Mutant 1004 in q.js: value replaced with undefined
Mutant 1005 in q.js: value replaced with {}
Mutant 1006 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.resolve(reason))
Mutant 1007 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.reject(reason))
Mutant 1008 in q.js: promise.then(deferred.resolve, deferred.reject, deferred.notify) replaced with promise.then(deferred.notify(reason))
Mutant 1009 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1010 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1011 in q.js: deferred.resolve replaced with deferred.reject(new Error())
Mutant 1012 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1013 in q.js: deferred.reject replaced with null
Mutant 1014 in q.js: deferred.reject replaced with undefined
Mutant 1015 in q.js: deferred.notify replaced with deferred.reject
Mutant 1016 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1017 in q.js: deferred.notify replaced with deferred.progress
Mutant 1018 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1019 in q.js: exception replaced with null
Mutant 1020 in q.js: exception replaced with undefined
Mutant 1021 in q.js: exception replaced with new Error()
Mutant 1022 in q.js: dispatch(object, op, args) replaced with dispatch(object, args, op)
Mutant 1023 in q.js: dispatch(object, op, args) replaced with dispatch(args, op, object)
Mutant 1024 in q.js: object replaced with null
Mutant 1025 in q.js: object replaced with undefined
Mutant 1026 in q.js: object replaced with {}
Mutant 1027 in q.js: op replaced with op + 1
Mutant 1028 in q.js: op replaced with op - 1
Mutant 1029 in q.js: op replaced with op * 2
Mutant 1030 in q.js: args replaced with null
Mutant 1031 in q.js: args replaced with undefined
Mutant 1032 in q.js: args replaced with []
Mutant 1033 in q.js: object replaced with null
Mutant 1034 in q.js: object replaced with undefined
Mutant 1035 in q.js: object replaced with {}
Mutant 1036 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled, rejected, "extra argument")
Mutant 1037 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1038 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(null, null)
Mutant 1039 in q.js: value replaced with value + 1
Mutant 1040 in q.js: value replaced with value * 2
Mutant 1041 in q.js: value replaced with value - 1
Mutant 1042 in q.js: fulfilled replaced with rejected
Mutant 1043 in q.js: fulfilled replaced with undefined
Mutant 1044 in q.js: fulfilled replaced with null
Mutant 1045 in q.js: rejected replaced with undefined
Mutant 1046 in q.js: rejected replaced with null
Mutant 1047 in q.js: rejected replaced with () => {}
Mutant 1048 in q.js: this.all replaced with this.then
Mutant 1049 in q.js: this.all replaced with this.catch
Mutant 1050 in q.js: this.all replaced with this.finally
not replacing this.all with this.then
not replacing this.all with this.then
not replacing this.all with this.catch
not replacing this.all with this.catch
not replacing this.all with this.finally
not replacing this.all with this.finally
Mutant 1051 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(this)
Mutant 1052 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1053 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 1054 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 1055 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 1056 in q.js: void 0 replaced with null
Mutant 1057 in q.js: void 0 replaced with undefined
Mutant 1058 in q.js: void 0 replaced with "undefined"
Mutant 1059 in q.js: array replaced with undefined
Mutant 1060 in q.js: array replaced with null
Mutant 1061 in q.js: array replaced with []
Mutant 1062 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === "undefined"
Mutant 1063 in q.js: typeof StopIteration === "undefined" replaced with StopIteration !== "undefined"
Mutant 1064 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1065 in q.js: generator[verb] replaced with generator[verb] + 1
Mutant 1066 in q.js: generator[verb] replaced with generator[verb] - 1
Mutant 1067 in q.js: generator[verb] replaced with generator[verb] * 2
Mutant 1068 in q.js: arg replaced with null
Mutant 1069 in q.js: arg replaced with undefined
Mutant 1070 in q.js: arg replaced with "foo"
Mutant 1071 in q.js: reject replaced with resolve
Mutant 1072 in q.js: exception replaced with exception.message
Mutant 1073 in q.js: exception replaced with exception.stack
Mutant 1074 in q.js: exception replaced with exception.toString()
Mutant 1075 in q.js: result.done replaced with result.rejected
Mutant 1076 in q.js: result.done replaced with result.isRejected()
Mutant 1077 in q.js: result.done replaced with result.isPending()
Mutant 1078 in q.js: result.value replaced with result.value.then()
Mutant 1079 in q.js: result.value replaced with result.value.catch()
Mutant 1080 in q.js: result.value replaced with result.value.finally()
Mutant 1081 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1082 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, callback)
Mutant 1083 in q.js: when(result.value, callback, errback) replaced with when(result.value, function () {}, function () {})
Mutant 1084 in q.js: result.value replaced with result.value.done
Mutant 1085 in q.js: result.value replaced with result.value.then
Mutant 1086 in q.js: callback replaced with reject
Mutant 1087 in q.js: callback replaced with undefined
Mutant 1088 in q.js: errback replaced with undefined
Mutant 1089 in q.js: errback replaced with null
Mutant 1090 in q.js: errback replaced with function () {}
Mutant 1091 in q.js: arg replaced with undefined
Mutant 1092 in q.js: arg replaced with null
Mutant 1093 in q.js: arg replaced with "foo"
Mutant 1094 in q.js: isStopIteration(exception) replaced with exception.name === "StopIteration"
Mutant 1095 in q.js: isStopIteration(exception) replaced with exception.constructor === StopIteration
Mutant 1096 in q.js: isStopIteration(exception) replaced with exception instanceof StopIteration
Mutant 1097 in q.js: isStopIteration replaced with isStopIteration === true
Mutant 1098 in q.js: isStopIteration replaced with isStopIteration !== false
Mutant 1099 in q.js: isStopIteration replaced with typeof isStopIteration === "function"
Mutant 1100 in q.js: exception replaced with exception.value
Mutant 1101 in q.js: exception replaced with exception.message
Mutant 1102 in q.js: exception replaced with exception.stack
Mutant 1103 in q.js: exception.value replaced with exception.message
Mutant 1104 in q.js: exception.value replaced with exception.stack
Mutant 1105 in q.js: exception.value replaced with null
Mutant 1106 in q.js: reject replaced with Q.reject
Mutant 1107 in q.js: reject replaced with Promise.reject
Mutant 1108 in q.js: exception replaced with exception.message
Mutant 1109 in q.js: exception replaced with exception.stack
Mutant 1110 in q.js: exception replaced with exception.toString()
Mutant 1111 in q.js: when(result, callback, errback) replaced with when(result, errback, callback)
Mutant 1112 in q.js: when(result, callback, errback) replaced with when(result, callback, errback, result)
Mutant 1113 in q.js: when(result, callback, errback) replaced with when(result, callback, errback + result)
Mutant 1114 in q.js: result replaced with result.value
Mutant 1115 in q.js: result replaced with result[0]
Mutant 1116 in q.js: result replaced with result.then(function (value) {
  return value;
})
Mutant 1117 in q.js: callback replaced with errback
Mutant 1118 in q.js: callback replaced with reject
Mutant 1119 in q.js: callback replaced with resolve
Mutant 1120 in q.js: errback replaced with errback.bind(continuer, "throw")
Mutant 1121 in q.js: errback replaced with errback.bind(continuer, "next")
Mutant 1122 in q.js: errback replaced with errback.bind(continuer, "throw", "next")
Mutant 1123 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1124 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1125 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1126 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1127 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1128 in q.js: makeGenerator.apply replaced with makeGenerator.toString
Mutant 1129 in q.js: this replaced with null
Mutant 1130 in q.js: this replaced with undefined
Mutant 1131 in q.js: this replaced with "foo"
Mutant 1132 in q.js: arguments replaced with []
Mutant 1133 in q.js: arguments replaced with null
Mutant 1134 in q.js: arguments replaced with undefined
Mutant 1135 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1136 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 1137 in q.js: continuer.bind replaced with continuer.call
Mutant 1138 in q.js: continuer.bind replaced with continuer.apply
Mutant 1139 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1140 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1141 in q.js: continuer replaced with continuer.bind(continuer, "next", 1)
Mutant 1142 in q.js: "next" replaced with "throw"
Mutant 1143 in q.js: "next" replaced with "return"
Mutant 1144 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "reject")
Mutant 1145 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "resolve")
Mutant 1146 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer, "return")
Mutant 1147 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1148 in q.js: continuer replaced with continuer.bind(null, "throw")
Mutant 1149 in q.js: continuer replaced with continuer.bind(null, "throw", null)
Mutant 1150 in q.js: "throw" replaced with "next"
Mutant 1151 in q.js: "throw" replaced with "return"
Mutant 1152 in q.js: callback replaced with errback
Mutant 1153 in q.js: callback replaced with reject
Mutant 1154 in q.js: Q.done replaced with Q.fail
Mutant 1155 in q.js: Q.done replaced with Q.reject
Mutant 1156 in q.js: Q.done replaced with Q.resolve
Mutant 1157 in q.js: Q.async(makeGenerator)() replaced with Q.async(makeGenerator).next()
Mutant 1158 in q.js: Q.async(makeGenerator)() replaced with Q.async(makeGenerator).then()
Mutant 1159 in q.js: Q.async(makeGenerator)() replaced with Q.async(makeGenerator).catch()
Mutant 1160 in q.js: Q.async replaced with Q.reject
Mutant 1161 in q.js: Q.async replaced with Q.resolve
Mutant 1162 in q.js: Q.async replaced with Q.all
not replacing Q.async with Q.reject
not replacing Q.async with Q.resolve
not replacing Q.async with Q.all
Mutant 1163 in q.js: makeGenerator replaced with makeGenerator.bind(this)
Mutant 1164 in q.js: makeGenerator replaced with makeGenerator.call(this)
Mutant 1165 in q.js: makeGenerator replaced with makeGenerator.apply(this, [])
Mutant 1166 in q.js: all replaced with none
Mutant 1167 in q.js: all replaced with some
Mutant 1168 in q.js: all replaced with any
Mutant 1169 in q.js: arguments replaced with 0
Mutant 1170 in q.js: arguments replaced with null
Mutant 1171 in q.js: arguments replaced with []
Mutant 1172 in q.js: callback.apply(self, args) replaced with callback.apply(self.promiseDispatch(deferred.resolve, op, args))
Mutant 1173 in q.js: callback.apply(self, args) replaced with callback.apply(deferred.resolve(op, args))
Mutant 1174 in q.js: callback.apply(self, args) replaced with callback.apply(deferred.reject(op, args))
Mutant 1175 in q.js: callback.apply replaced with callback.call
Mutant 1176 in q.js: callback.apply replaced with callback.bind
Mutant 1177 in q.js: callback.apply replaced with callback.caller
Mutant 1178 in q.js: self replaced with null
Mutant 1179 in q.js: self replaced with undefined
Mutant 1180 in q.js: self replaced with this
Mutant 1181 in q.js: args replaced with args[0]
Mutant 1182 in q.js: args replaced with args.slice(1)
Mutant 1183 in q.js: args replaced with [args]
Mutant 1184 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op + args)
Mutant 1185 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op - args)
Mutant 1186 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op * args)
Mutant 1187 in q.js: Q(object).dispatch replaced with object.dispatch
Mutant 1188 in q.js: Q replaced with 1
Mutant 1189 in q.js: Q replaced with null
Mutant 1190 in q.js: Q replaced with undefined
Mutant 1191 in q.js: object replaced with null
Mutant 1192 in q.js: object replaced with undefined
Mutant 1193 in q.js: object replaced with {}
Mutant 1194 in q.js: op replaced with op + 1
Mutant 1195 in q.js: op replaced with op - 1
Mutant 1196 in q.js: op replaced with op * 2
Mutant 1197 in q.js: args replaced with args.slice(1)
Mutant 1198 in q.js: args replaced with args.concat(1)
Mutant 1199 in q.js: args replaced with args.reverse()
Mutant 1200 in q.js: defer replaced with deferred.reject
Mutant 1201 in q.js: defer replaced with Q.defer
Mutant 1202 in q.js: defer replaced with Q.reject
Mutant 1203 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1204 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, "foo", args)
Mutant 1205 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, "bar", args)
Mutant 1206 in q.js: self.promiseDispatch replaced with deferred.reject
Mutant 1207 in q.js: self.promiseDispatch replaced with deferred.promise.reject
Mutant 1208 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1209 in q.js: deferred.resolve replaced with undefined
Mutant 1210 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1211 in q.js: op replaced with op + 1
Mutant 1212 in q.js: op replaced with op - 1
Mutant 1213 in q.js: op replaced with op * 2
Mutant 1214 in q.js: args replaced with args[0]
Mutant 1215 in q.js: args replaced with null
Mutant 1216 in q.js: args replaced with args.slice(1)
Mutant 1217 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key])
Mutant 1218 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key, value])
Mutant 1219 in q.js: object replaced with null
Mutant 1220 in q.js: object replaced with undefined
Mutant 1221 in q.js: object replaced with {}
Mutant 1222 in q.js: "get" replaced with "set"
Mutant 1223 in q.js: "get" replaced with "post"
Mutant 1224 in q.js: [key] replaced with [key + 1]
Mutant 1225 in q.js: [key] replaced with [key - 1]
Mutant 1226 in q.js: [key] replaced with ["" + key]
Mutant 1227 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", [key, "wrongKey"])
Mutant 1228 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", [key, undefined])
Mutant 1229 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("get", [key, null])
Mutant 1230 in q.js: "get" replaced with "set"
Mutant 1231 in q.js: "get" replaced with "apply"
Mutant 1232 in q.js: [key] replaced with [key + 1]
Mutant 1233 in q.js: [key] replaced with [key - 1]
Mutant 1234 in q.js: [key] replaced with [key * 2]
Mutant 1235 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1236 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, key])
Mutant 1237 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, value + 1])
Mutant 1238 in q.js: Q replaced with Q.reject
Mutant 1239 in q.js: Q replaced with Q.defer
Mutant 1240 in q.js: Q replaced with Q.all
Mutant 1241 in q.js: object replaced with null
Mutant 1242 in q.js: object replaced with undefined
Mutant 1243 in q.js: object replaced with 0
Mutant 1244 in q.js: "set" replaced with "get"
Mutant 1245 in q.js: "set" replaced with "apply"
Mutant 1246 in q.js: [key, value] replaced with [value, key]
Mutant 1247 in q.js: [key, value] replaced with [key, value, value]
Mutant 1248 in q.js: [key, value] replaced with [key, null]
Mutant 1249 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value, 1])
Mutant 1250 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [value, key])
Mutant 1251 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1252 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1253 in q.js: "set" replaced with "post"
Mutant 1254 in q.js: "set" replaced with "apply"
Mutant 1255 in q.js: [key, value] replaced with [value, key]
Mutant 1256 in q.js: [key, value] replaced with [key, null]
Mutant 1257 in q.js: [key, value] replaced with [key, undefined]
Mutant 1258 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1259 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("get", [key])
Mutant 1260 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("hasOwnProperty", [key])
Mutant 1261 in q.js: object replaced with null
Mutant 1262 in q.js: object replaced with {}
Mutant 1263 in q.js: [key] replaced with [key, value]
Mutant 1264 in q.js: [key] replaced with [key, key]
Mutant 1265 in q.js: [key] replaced with [value, key]
Mutant 1266 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1267 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, null])
Mutant 1268 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, 0])
Mutant 1269 in q.js: "delete" replaced with "set"
Mutant 1270 in q.js: "delete" replaced with "post"
Mutant 1271 in q.js: "delete" replaced with "apply"
Mutant 1272 in q.js: [key] replaced with [key, value]
Mutant 1273 in q.js: [key] replaced with [value]
Mutant 1274 in q.js: [key] replaced with [key, key]
Mutant 1275 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [args, name])
Mutant 1276 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.reverse()])
Mutant 1277 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name + "foo", args])
Mutant 1278 in q.js: object replaced with null
Mutant 1279 in q.js: object replaced with undefined
Mutant 1280 in q.js: object replaced with {}
Mutant 1281 in q.js: "post" replaced with "get"
Mutant 1282 in q.js: "post" replaced with "set"
Mutant 1283 in q.js: [name, args] replaced with [name, args, "extra arg"]
Mutant 1284 in q.js: [name, args] replaced with [name, args.slice(1)]
Mutant 1285 in q.js: [name, args] replaced with [name, args.concat(["extra arg"])]
Mutant 1286 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1287 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args, null])
Mutant 1288 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args.slice(1)])
Mutant 1289 in q.js: "post" replaced with "get"
Mutant 1290 in q.js: "post" replaced with "apply"
Mutant 1291 in q.js: [name, args] replaced with [name, args, null]
Mutant 1292 in q.js: [name, args] replaced with [name, args, undefined]
Mutant 1293 in q.js: [name, args] replaced with [name, args, ""]
Mutant 1294 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1295 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1296 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1297 in q.js: object replaced with promises[index]
Mutant 1298 in q.js: object replaced with promises[promises.length - 1 - index]
Mutant 1299 in q.js: object replaced with promises[index + 1]
Mutant 1300 in q.js: "post" replaced with "get"
Mutant 1301 in q.js: "post" replaced with "set"
Mutant 1302 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1303 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 0, 2)]
Mutant 1304 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 2, 1)]
Mutant 1305 in q.js: array_slice(arguments, 2) replaced with array_slice(args, 1)
Mutant 1306 in q.js: array_slice(arguments, 2) replaced with array_slice(args, "test")
Mutant 1307 in q.js: array_slice(arguments, 2) replaced with array_slice(args, [])
Mutant 1308 in q.js: arguments replaced with null
Mutant 1309 in q.js: arguments replaced with undefined
Mutant 1310 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("apply", [name, args])
Mutant 1311 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, [args]])
Mutant 1312 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, args, null])
Mutant 1313 in q.js: this.dispatch replaced with this.reject
Mutant 1314 in q.js: "post" replaced with "put"
Mutant 1315 in q.js: "post" replaced with "get"
Mutant 1316 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1317 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 0, 1)]
Mutant 1318 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, 2)]
Mutant 1319 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1320 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 2))
Mutant 1321 in q.js: arguments replaced with undefined
Mutant 1322 in q.js: 1 replaced with 3
Mutant 1323 in q.js: 1 replaced with 4
Mutant 1324 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, args.slice(1)])
Mutant 1325 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, args.concat(["extra"])])
Mutant 1326 in q.js: object replaced with undefined
Mutant 1327 in q.js: object replaced with null
Mutant 1328 in q.js: object replaced with "foo"
Mutant 1329 in q.js: "apply" replaced with "call"
Mutant 1330 in q.js: "apply" replaced with "bind"
Mutant 1331 in q.js: "apply" replaced with "post"
Mutant 1332 in q.js: [void 0, args] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1333 in q.js: [void 0, args] replaced with [void 0, args.concat(array_slice(arguments, 1))]
Mutant 1334 in q.js: [void 0, args] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1335 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1336 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args])
Mutant 1337 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [args, void 0])
Mutant 1338 in q.js: "apply" replaced with "call"
Mutant 1339 in q.js: "apply" replaced with "bind"
Mutant 1340 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1341 in q.js: [void 0, args] replaced with [void 0, args.concat([1])]
Mutant 1342 in q.js: [void 0, args] replaced with [void 0, args.map(function (x) {
  return x + 1;
})]
Mutant 1343 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [null, array_slice(arguments, 1)])
Mutant 1344 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1345 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [void 0, array_slice(arguments, 1)])
Mutant 1346 in q.js: object replaced with undefined
Mutant 1347 in q.js: object replaced with {}
Mutant 1348 in q.js: "apply" replaced with "call"
Mutant 1349 in q.js: "apply" replaced with "bind"
Mutant 1350 in q.js: "apply" replaced with "post"
Mutant 1351 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1352 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 0)]
Mutant 1353 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 1, 2)]
Mutant 1354 in q.js: array_slice(arguments, 1) replaced with array_slice(1 + arguments.length)
Mutant 1355 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[0] + 1)
Mutant 1356 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.slice(1))
Mutant 1357 in q.js: arguments replaced with undefined
Mutant 1358 in q.js: arguments replaced with []
Mutant 1359 in q.js: 1 replaced with 3
Mutant 1360 in q.js: 1 replaced with 4
Mutant 1361 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, array_slice(arguments)])
Mutant 1362 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1363 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1364 in q.js: this.dispatch replaced with this.reject
Mutant 1365 in q.js: "apply" replaced with "call"
Mutant 1366 in q.js: "apply" replaced with "bind"
Mutant 1367 in q.js: "apply" replaced with "valueOf"
Mutant 1368 in q.js: [void 0, array_slice(arguments)] replaced with [null, array_slice(arguments)]
Mutant 1369 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1370 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 0, 1)]
Mutant 1371 in q.js: arguments replaced with "foo"
Mutant 1372 in q.js: object replaced with null
Mutant 1373 in q.js: object replaced with undefined
Mutant 1374 in q.js: object replaced with {}
Mutant 1375 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1376 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1377 in q.js: array_slice(arguments, 1) replaced with array_slice(null, 1)
Mutant 1378 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1379 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1380 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1381 in q.js: 1 replaced with 0
Mutant 1382 in q.js: 1 replaced with -1
Mutant 1383 in q.js: 1 replaced with array.length
Mutant 1384 in q.js: args.concat replaced with args.push
Mutant 1385 in q.js: args.concat replaced with args.slice
Mutant 1386 in q.js: args.concat replaced with args.map
Mutant 1387 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1388 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1389 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1390 in q.js: arguments replaced with null
Mutant 1391 in q.js: arguments replaced with []
Mutant 1392 in q.js: arguments replaced with null
Mutant 1393 in q.js: arguments replaced with []
Mutant 1394 in q.js: arguments replaced with [1, 2, 3]
Mutant 1395 in q.js: args.concat replaced with args + args
Mutant 1396 in q.js: args.concat replaced with args * 2
Mutant 1397 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1398 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1399 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1400 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 1401 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1402 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", ["foo"])
Mutant 1403 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("keys", [1])
Mutant 1404 in q.js: Q replaced with Q.reject
Mutant 1405 in q.js: Q replaced with Q.defer
Mutant 1406 in q.js: Q replaced with Q.when
Mutant 1407 in q.js: object replaced with object.length
Mutant 1408 in q.js: object replaced with object[0]
Mutant 1409 in q.js: object replaced with object.foo
Mutant 1410 in q.js: "keys" replaced with "values"
Mutant 1411 in q.js: "keys" replaced with "length"
Mutant 1412 in q.js: "keys" replaced with "undefined"
Mutant 1413 in q.js: [] replaced with [1]
Mutant 1414 in q.js: [] replaced with [1, 2, 3]
Mutant 1415 in q.js: [] replaced with [1, 2, 3, 4, 5]
Mutant 1416 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1417 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", [])
Mutant 1418 in q.js: this.dispatch("keys", []) replaced with this.dispatch("indexOf", [])
Mutant 1419 in q.js: this.dispatch replaced with this.reject
Mutant 1420 in q.js: "keys" replaced with "values"
Mutant 1421 in q.js: "keys" replaced with "length"
Mutant 1422 in q.js: "keys" replaced with "toString"
Mutant 1423 in q.js: [] replaced with [1]
Mutant 1424 in q.js: [] replaced with null
Mutant 1425 in q.js: [] replaced with undefined
Mutant 1426 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.state === "rejected"
Mutant 1427 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with !isPromise(promise)
Mutant 1428 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with snapshot.state === "pending"
Mutant 1429 in q.js: isPromise replaced with isPromise && false
Mutant 1430 in q.js: isPromise replaced with isPromise || true
Mutant 1431 in q.js: promise replaced with promise.then(function () {
  throw new Error("Injected error");
})
Mutant 1432 in q.js: promise replaced with promise.then(function () {
  return null;
})
Mutant 1433 in q.js: promise replaced with promise.then(function () {
  return "injected value";
})
Mutant 1434 in q.js: promise.inspect replaced with promise.inspect.value
Mutant 1435 in q.js: promise.inspect replaced with promise.inspect.state
Mutant 1436 in q.js: promise.inspect replaced with promise.inspect.reason
Mutant 1437 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1438 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1439 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length - 1
Mutant 1440 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1441 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1442 in q.js: promises replaced with promises.reverse()
Mutant 1443 in q.js: promises replaced with promises.slice(1)
Mutant 1444 in q.js: promises replaced with promises.concat(Q.resolve(42))
Mutant 1445 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1446 in q.js: deferred.notify replaced with deferred.reject
Mutant 1447 in q.js: deferred.notify replaced with undefined
Mutant 1448 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index + 1,
  value: progress
}
Mutant 1449 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index - 1,
  value: progress
}
Mutant 1450 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index * 2,
  value: progress
}
Mutant 1451 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1452 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1453 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1454 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1455 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1456 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1457 in q.js: promises replaced with []
Mutant 1458 in q.js: promises replaced with null
Mutant 1459 in q.js: promises replaced with new Error('foo')
Mutant 1460 in q.js: all replaced with none
Mutant 1461 in q.js: all replaced with any
Mutant 1462 in q.js: all replaced with race
Mutant 1463 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1464 in q.js: promises.length === 0 replaced with promises.length === promises.length
Mutant 1465 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1466 in q.js: Q.resolve replaced with Q.reject
Mutant 1467 in q.js: Q.resolve replaced with Q.defer
Mutant 1468 in q.js: Q.resolve replaced with Q.all
Mutant 1469 in q.js: Q.defer replaced with Q.delay
Mutant 1470 in q.js: Q.defer replaced with Q.reject
Mutant 1471 in q.js: Q.defer replaced with Q.when
Mutant 1472 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onFulfilled, onRejected, onProgress))
Mutant 1473 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onRejected, onFulfilled, onProgress))
Mutant 1474 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise.then(onProgress, onFulfilled, onRejected))
Mutant 1475 in q.js: when replaced with when.reject
Mutant 1476 in q.js: when replaced with when.resolve
Mutant 1477 in q.js: when replaced with when.then
Mutant 1478 in q.js: promise replaced with null
Mutant 1479 in q.js: promise replaced with undefined
Mutant 1480 in q.js: promise replaced with 0
Mutant 1481 in q.js: onFulfilled replaced with onRejected
Mutant 1482 in q.js: onFulfilled replaced with onProgress
Mutant 1483 in q.js: onFulfilled replaced with noop
Mutant 1484 in q.js: onRejected replaced with onRejected.bind(null)
Mutant 1485 in q.js: onRejected replaced with onRejected.call(null)
Mutant 1486 in q.js: onRejected replaced with onRejected.apply(null)
Mutant 1487 in q.js: onProgress replaced with onProgress(null)
Mutant 1488 in q.js: onProgress replaced with onRejected
Mutant 1489 in q.js: onProgress replaced with function () {}
Mutant 1490 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1491 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1492 in q.js: deferred.resolve replaced with Q.reject
Mutant 1493 in q.js: result replaced with promise
Mutant 1494 in q.js: result replaced with undefined
Mutant 1495 in q.js: result replaced with null
Mutant 1496 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1497 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1498 in q.js: pendingCount === 0 replaced with promises.length === 0
Mutant 1499 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1500 in q.js: deferred.reject replaced with deferred.notify
Mutant 1501 in q.js: rejection replaced with null
Mutant 1502 in q.js: rejection replaced with undefined
Mutant 1503 in q.js: rejection replaced with "rejected"
Mutant 1504 in q.js: any replaced with all
Mutant 1505 in q.js: any replaced with allResolved
Mutant 1506 in q.js: any replaced with allSettled
Mutant 1507 in q.js: this replaced with this.all
Mutant 1508 in q.js: this replaced with this.any
Mutant 1509 in q.js: this replaced with this.allResolved
Mutant 1510 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(Q.allSettled)
Mutant 1511 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(Q.all)
Mutant 1512 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(Q.any)
Mutant 1513 in q.js: allResolved replaced with any
Mutant 1514 in q.js: allResolved replaced with allSettled
Mutant 1515 in q.js: allResolved replaced with deferred.reject
Mutant 1516 in q.js: "allResolved" replaced with "allRejected"
Mutant 1517 in q.js: "allResolved" replaced with "anyResolved"
Mutant 1518 in q.js: "allResolved" replaced with "allSettled"
Mutant 1519 in q.js: "allSettled" replaced with "any"
Mutant 1520 in q.js: "allSettled" replaced with "allResolved"
Mutant 1521 in q.js: "allSettled" replaced with "fail"
Mutant 1522 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1523 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve)
Mutant 1524 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.then)
Mutant 1525 in q.js: array_map replaced with array_filter
Mutant 1526 in q.js: array_map replaced with array_reduce
Mutant 1527 in q.js: array_map replaced with array_slice
Mutant 1528 in q.js: promises replaced with promises.length
Mutant 1529 in q.js: promises replaced with promises.slice(1)
Mutant 1530 in q.js: promises replaced with promises.reverse()
Mutant 1531 in q.js: Q replaced with Q.resolve()
Mutant 1532 in q.js: Q replaced with Q.reject()
Mutant 1533 in q.js: Q replaced with Q.defer()
Mutant 1534 in q.js: when(promise, noop, noop) replaced with when(promise.then())
Mutant 1535 in q.js: when(promise, noop, noop) replaced with when(promise.reject())
Mutant 1536 in q.js: when(promise, noop, noop) replaced with when(promise.cancel())
Mutant 1537 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 1538 in q.js: promise replaced with promise.then(function (value) {
  return value * 2;
})
Mutant 1539 in q.js: promise replaced with promise.then(function (value) {
  return value - 1;
})
Mutant 1540 in q.js: noop replaced with Q.resolve()
Mutant 1541 in q.js: noop replaced with Q.reject()
Mutant 1542 in q.js: noop replaced with Q.defer()
Mutant 1543 in q.js: noop replaced with function () {
  throw new Error("Rejected promise");
}
Mutant 1544 in q.js: noop replaced with function () {
  return "Fulfilled promise";
}
Mutant 1545 in q.js: noop replaced with function () {
  return Q.reject("Rejected promise");
}
Mutant 1546 in q.js: this replaced with null
Mutant 1547 in q.js: this replaced with undefined
Mutant 1548 in q.js: this replaced with Promise.reject()
Mutant 1549 in q.js: promises replaced with promises.reverse()
Mutant 1550 in q.js: promises replaced with promises.slice(1)
Mutant 1551 in q.js: promises replaced with promises.concat(deferred.promise)
Mutant 1552 in q.js: promise replaced with promise.reject()
Mutant 1553 in q.js: promise replaced with promise.resolve()
Mutant 1554 in q.js: promise replaced with promise.notify()
Mutant 1555 in q.js: promise.inspect replaced with promise.inspect.foo
Mutant 1556 in q.js: promise.inspect replaced with promise.inspect + 1
Mutant 1557 in q.js: promise.then(regardless, regardless) replaced with promise.then(undefined, undefined)
Mutant 1558 in q.js: promise.then(regardless, regardless) replaced with promise.then(null, null)
Mutant 1559 in q.js: regardless replaced with regardless()
Mutant 1560 in q.js: regardless replaced with function () {
  return promise.inspect();
}
Mutant 1561 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, void 0)
Mutant 1562 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(void 0, resolved)
Mutant 1563 in q.js: Q replaced with Q.reject
Mutant 1564 in q.js: Q replaced with Q.defer
Mutant 1565 in q.js: Q replaced with Q.when
Mutant 1566 in q.js: object replaced with null
Mutant 1567 in q.js: object replaced with undefined
Mutant 1568 in q.js: void 0 replaced with undefined
Mutant 1569 in q.js: void 0 replaced with null
Mutant 1570 in q.js: void 0 replaced with "foo"
Mutant 1571 in q.js: rejected replaced with function (error) {
  throw error;
}
Mutant 1572 in q.js: rejected replaced with function (error) {
  console.log(error);
}
Mutant 1573 in q.js: rejected replaced with function (error) {
  return Q.reject(error);
}
Mutant 1574 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1575 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1576 in q.js: this.then(void 0, rejected) replaced with this.then(NaN, rejected)
Mutant 1577 in q.js: void 0 replaced with null
Mutant 1578 in q.js: void 0 replaced with undefined
Mutant 1579 in q.js: void 0 replaced with 0
Mutant 1580 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(progressed, void 0, void 0)
Mutant 1581 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(void 0, progressed, void 0)
Mutant 1582 in q.js: object replaced with null
Mutant 1583 in q.js: object replaced with undefined
Mutant 1584 in q.js: void 0 replaced with null
Mutant 1585 in q.js: void 0 replaced with undefined
Mutant 1586 in q.js: void 0 replaced with 0
Mutant 1587 in q.js: void 0 replaced with null
Mutant 1588 in q.js: void 0 replaced with undefined
Mutant 1589 in q.js: void 0 replaced with 1
Mutant 1590 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1591 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1592 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(this, this, progressed)
Mutant 1593 in q.js: void 0 replaced with null
Mutant 1594 in q.js: void 0 replaced with undefined
Mutant 1595 in q.js: void 0 replaced with this
Mutant 1596 in q.js: progressed replaced with null
Mutant 1597 in q.js: progressed replaced with undefined
Mutant 1598 in q.js: progressed replaced with function (value) {
  return value;
}
Mutant 1599 in q.js: Q replaced with Q.reject
Mutant 1600 in q.js: Q replaced with Q.defer
Mutant 1601 in q.js: Q replaced with Q.when
Mutant 1602 in q.js: object replaced with object + 1
Mutant 1603 in q.js: object replaced with object - 1
Mutant 1604 in q.js: object replaced with object * 2
Mutant 1605 in q.js: callback replaced with Q.reject()
Mutant 1606 in q.js: callback replaced with Q.resolve()
Mutant 1607 in q.js: callback replaced with Q.notify()
Mutant 1608 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply(null, [])
Mutant 1609 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply(null, [undefined])
Mutant 1610 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply(null, [null])
Mutant 1611 in q.js: Q replaced with null
Mutant 1612 in q.js: Q replaced with undefined
Mutant 1613 in q.js: Q replaced with 0
Mutant 1614 in q.js: callback replaced with callback(promise)
Mutant 1615 in q.js: callback replaced with promise.then(callback)
Mutant 1616 in q.js: callback replaced with undefined
Mutant 1617 in q.js: callback.fcall replaced with Q.when
Mutant 1618 in q.js: callback.fcall replaced with Q.reject
Mutant 1619 in q.js: callback.fcall replaced with Q.resolve
not replacing callback.fcall with Q.when
not replacing callback.fcall with Q.when
not replacing callback.fcall with Q.reject
not replacing callback.fcall with Q.reject
not replacing callback.fcall with Q.resolve
not replacing callback.fcall with Q.resolve
Mutant 1620 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1621 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress[0])
Mutant 1622 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress.slice())
Mutant 1623 in q.js: Q replaced with Q.reject
Mutant 1624 in q.js: Q replaced with Q.defer
Mutant 1625 in q.js: Q replaced with Q.when
Mutant 1626 in q.js: object replaced with null
Mutant 1627 in q.js: object replaced with undefined
Mutant 1628 in q.js: object replaced with 42
Mutant 1629 in q.js: fulfilled replaced with rejected
Mutant 1630 in q.js: fulfilled replaced with progress
Mutant 1631 in q.js: rejected replaced with rejected(new Error("This is a bug"))
Mutant 1632 in q.js: rejected replaced with resolved(null)
Mutant 1633 in q.js: progress replaced with null
Mutant 1634 in q.js: progress replaced with undefined
Mutant 1635 in q.js: progress replaced with function () {}
Mutant 1636 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, null)
Mutant 1637 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(error, undefined)
Mutant 1638 in q.js: makeStackTraceLong(error, promise) replaced with makeStackTraceLong(null, error)
Mutant 1639 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(null, null, null)
Mutant 1640 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(undefined, undefined, undefined)
Mutant 1641 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(false, false, false)
Mutant 1642 in q.js: fulfilled replaced with rejected
Mutant 1643 in q.js: fulfilled replaced with fulfilled(1)
Mutant 1644 in q.js: fulfilled replaced with undefined
Mutant 1645 in q.js: rejected replaced with undefined
Mutant 1646 in q.js: rejected replaced with null
Mutant 1647 in q.js: rejected replaced with true
Mutant 1648 in q.js: progress replaced with void 0
Mutant 1649 in q.js: progress replaced with null
Mutant 1650 in q.js: progress replaced with NaN
Mutant 1651 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1652 in q.js: onUnhandledError replaced with onUnhandledError.bind(undefined)
Mutant 1653 in q.js: onUnhandledError replaced with onUnhandledError.bind(function () {})
Mutant 1654 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1655 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1656 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(this, onUnhandledError)
Mutant 1657 in q.js: void 0 replaced with null
Mutant 1658 in q.js: void 0 replaced with false
Mutant 1659 in q.js: void 0 replaced with 0
Mutant 1660 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1661 in q.js: onUnhandledError replaced with null
Mutant 1662 in q.js: onUnhandledError replaced with undefined
Mutant 1663 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, null)
Mutant 1664 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(null, ms)
Mutant 1665 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(error, ms)
Mutant 1666 in q.js: object replaced with undefined
Mutant 1667 in q.js: object replaced with 0
Mutant 1668 in q.js: ms replaced with 0
Mutant 1669 in q.js: ms replaced with ms + 1
Mutant 1670 in q.js: ms replaced with ms - 1
Mutant 1671 in q.js: error replaced with null
Mutant 1672 in q.js: error replaced with new Error("Different error message")
Mutant 1673 in q.js: error replaced with undefined
Mutant 1674 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1675 in q.js: !error || "string" === typeof error replaced with !error || "string" !== typeof error
Mutant 1676 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1677 in q.js: deferred.reject replaced with null
Mutant 1678 in q.js: deferred.reject replaced with undefined
Mutant 1679 in q.js: error replaced with null
Mutant 1680 in q.js: error replaced with "error"
Mutant 1681 in q.js: error replaced with new Error()
Mutant 1682 in q.js: clearTimeout replaced with clearInterval
Mutant 1683 in q.js: clearTimeout replaced with console.log
Mutant 1684 in q.js: timeoutId replaced with "timeoutId"
Mutant 1685 in q.js: timeoutId replaced with timeoutId + 1
Mutant 1686 in q.js: timeoutId replaced with undefined
Mutant 1687 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1688 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1689 in q.js: deferred.resolve replaced with undefined
Mutant 1690 in q.js: value replaced with null
Mutant 1691 in q.js: value replaced with undefined
Mutant 1692 in q.js: value replaced with new Error("test")
Mutant 1693 in q.js: clearTimeout replaced with clearInterval
Mutant 1694 in q.js: timeoutId replaced with 0
Mutant 1695 in q.js: timeoutId replaced with null
Mutant 1696 in q.js: timeoutId replaced with undefined
Mutant 1697 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1698 in q.js: deferred.reject replaced with undefined
Mutant 1699 in q.js: exception replaced with null
Mutant 1700 in q.js: exception replaced with new Error("Different error message")
Mutant 1701 in q.js: exception replaced with undefined
Mutant 1702 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1703 in q.js: timeout === void 0 replaced with timeout == void 0
Mutant 1704 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1705 in q.js: Q replaced with Q.reject
Mutant 1706 in q.js: Q replaced with Q.defer
Mutant 1707 in q.js: Q replaced with Q.when
Mutant 1708 in q.js: object replaced with null
Mutant 1709 in q.js: object replaced with undefined
Mutant 1710 in q.js: object replaced with 42
Mutant 1711 in q.js: timeout replaced with timeout + 1000
Mutant 1712 in q.js: timeout replaced with timeout - 1000
Mutant 1713 in q.js: timeout replaced with timeout * 2
Mutant 1714 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1715 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1716 in q.js: deferred.resolve replaced with null
Mutant 1717 in q.js: value replaced with null
Mutant 1718 in q.js: value replaced with undefined
Mutant 1719 in q.js: value replaced with 0
Mutant 1720 in q.js: Q replaced with null
Mutant 1721 in q.js: Q replaced with undefined
Mutant 1722 in q.js: callback replaced with null
Mutant 1723 in q.js: callback replaced with undefined
Mutant 1724 in q.js: callback replaced with function () {}
Mutant 1725 in q.js: args replaced with args.reverse()
Mutant 1726 in q.js: args replaced with args.slice(1)
Mutant 1727 in q.js: args replaced with args.concat(["foo"])
Mutant 1728 in q.js: defer replaced with deferred
Mutant 1729 in q.js: args replaced with null
Mutant 1730 in q.js: args replaced with void 0
Mutant 1731 in q.js: args replaced with []
Mutant 1732 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1733 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1734 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1735 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1736 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.reject)
Mutant 1737 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1738 in q.js: this.fapply replaced with this.fail
Mutant 1739 in q.js: this.fapply replaced with this.then
Mutant 1740 in q.js: this.fapply replaced with this.catch
not replacing this.fapply with this.fail
not replacing this.fapply with this.fail
not replacing this.fapply with this.then
not replacing this.fapply with this.then
not replacing this.fapply with this.catch
not replacing this.fapply with this.catch
Mutant 1741 in q.js: nodeArgs replaced with nodeArgs.push(undefined)
Mutant 1742 in q.js: nodeArgs replaced with nodeArgs.push(function () {})
Mutant 1743 in q.js: nodeArgs replaced with nodeArgs.push(deferred.makeNodeResolver())
Mutant 1744 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1745 in q.js: deferred.reject replaced with deferred.notify
Mutant 1746 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1747 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1748 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1749 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1).concat(array_slice(arguments, 2)))
Mutant 1750 in q.js: arguments replaced with null
Mutant 1751 in q.js: arguments replaced with undefined
Mutant 1752 in q.js: arguments replaced with []
Mutant 1753 in q.js: 1 replaced with 0
Mutant 1754 in q.js: 1 replaced with 2
Mutant 1755 in q.js: 1 replaced with null
Mutant 1756 in q.js: callback replaced with null
Mutant 1757 in q.js: callback replaced with undefined
Mutant 1758 in q.js: callback replaced with () => {}
Mutant 1759 in q.js: args replaced with array_slice(arguments, 1)
Mutant 1760 in q.js: args replaced with array_slice(arguments, 2)
Mutant 1761 in q.js: args replaced with array_slice(arguments, 3)
Mutant 1762 in q.js: arguments replaced with []
Mutant 1763 in q.js: arguments replaced with [1, 2, 3]
Mutant 1764 in q.js: arguments replaced with [...arguments]
Mutant 1765 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1766 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1767 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1768 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1769 in q.js: deferred.makeNodeResolver() replaced with {}
Mutant 1770 in q.js: this.fapply replaced with this.fail
Mutant 1771 in q.js: this.fapply replaced with this.then
Mutant 1772 in q.js: this.fapply replaced with this.catch
not replacing this.fapply with this.fail
not replacing this.fapply with this.fail
not replacing this.fapply with this.then
not replacing this.fapply with this.then
not replacing this.fapply with this.catch
not replacing this.fapply with this.catch
Mutant 1773 in q.js: nodeArgs replaced with nodeArgs.reverse()
Mutant 1774 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1775 in q.js: nodeArgs replaced with nodeArgs.concat(["dummy arg"])
Mutant 1776 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1777 in q.js: deferred.reject replaced with undefined
Mutant 1778 in q.js: deferred.reject replaced with deferred.notify
Mutant 1779 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1780 in q.js: callback === undefined replaced with typeof callback === "function"
Mutant 1781 in q.js: callback === undefined replaced with callback.length > 0
Mutant 1782 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1783 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1784 in q.js: array_slice(arguments, 1) replaced with array_slice(null)
Mutant 1785 in q.js: arguments replaced with args.slice(1)
Mutant 1786 in q.js: arguments replaced with args.concat(deferred.makeNodeResolver())
Mutant 1787 in q.js: arguments replaced with args.filter(function (arg) {
  return arg !== deferred.makeNodeResolver();
})
Mutant 1788 in q.js: 1 replaced with 2
Mutant 1789 in q.js: 1 replaced with 0
Mutant 1790 in q.js: 1 replaced with -1
Mutant 1791 in q.js: baseArgs.concat replaced with baseArgs.slice
Mutant 1792 in q.js: baseArgs.concat replaced with baseArgs.push
Mutant 1793 in q.js: baseArgs.concat replaced with baseArgs.pop
Mutant 1794 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1795 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1796 in q.js: array_slice(arguments) replaced with array_slice(arguments, 3)
Mutant 1797 in q.js: array_slice replaced with array_slice.length
Mutant 1798 in q.js: arguments replaced with []
Mutant 1799 in q.js: arguments replaced with null
Mutant 1800 in q.js: arguments replaced with undefined
Mutant 1801 in q.js: defer replaced with undefined
Mutant 1802 in q.js: defer replaced with null
Mutant 1803 in q.js: defer replaced with deferred
Mutant 1804 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1805 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1806 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1807 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(undefined)
Mutant 1808 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1809 in q.js: Q replaced with deferred
Mutant 1810 in q.js: callback replaced with null
Mutant 1811 in q.js: callback replaced with undefined
Mutant 1812 in q.js: callback replaced with function () {}
Mutant 1813 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1814 in q.js: deferred.reject replaced with deferred.notify
Mutant 1815 in q.js: deferred.reject replaced with undefined
Mutant 1816 in q.js: arguments replaced with void 0
Mutant 1817 in q.js: arguments replaced with null
Mutant 1818 in q.js: arguments replaced with this
Mutant 1819 in q.js: args.unshift replaced with args.push
Mutant 1820 in q.js: args.unshift replaced with args.concat
Mutant 1821 in q.js: args.unshift replaced with args.shift
Mutant 1822 in q.js: this replaced with null
Mutant 1823 in q.js: this replaced with void 0
Mutant 1824 in q.js: this replaced with undefined
Mutant 1825 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null, args)
Mutant 1826 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined, args)
Mutant 1827 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(() => {}, args)
Mutant 1828 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1829 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1830 in q.js: void 0 replaced with null
Mutant 1831 in q.js: void 0 replaced with undefined
Mutant 1832 in q.js: void 0 replaced with function () {}
Mutant 1833 in q.js: args replaced with args.slice(1)
Mutant 1834 in q.js: args replaced with args.concat([1, 2, 3])
Mutant 1835 in q.js: args replaced with args.reverse()
Mutant 1836 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1837 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1838 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1839 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1840 in q.js: arguments replaced with array_slice(arguments, 0, -1)
Mutant 1841 in q.js: arguments replaced with array_slice(arguments, -1)
Mutant 1842 in q.js: 2 replaced with 1
Mutant 1843 in q.js: 2 replaced with 3
Mutant 1844 in q.js: 2 replaced with baseArgs.length
Mutant 1845 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1846 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, arguments.length - 1)
Mutant 1847 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, arguments.length + 1)
Mutant 1848 in q.js: arguments replaced with 1 + 1
Mutant 1849 in q.js: arguments replaced with "hello world"
Mutant 1850 in q.js: arguments replaced with null
Mutant 1851 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1852 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1853 in q.js: nodeArgs.push replaced with nodeArgs.length = 0
Mutant 1854 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1855 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1856 in q.js: deferred.makeNodeResolver() replaced with Q.reject
Mutant 1857 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1858 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[0])
Mutant 1859 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments.slice())
Mutant 1860 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, [].slice.call(arguments))
Mutant 1861 in q.js: callback.apply replaced with callback.call
Mutant 1862 in q.js: callback.apply replaced with callback.bind
Mutant 1863 in q.js: callback.apply replaced with callback.toString
Mutant 1864 in q.js: thisp replaced with null
Mutant 1865 in q.js: thisp replaced with undefined
Mutant 1866 in q.js: thisp replaced with this
Mutant 1867 in q.js: arguments replaced with function () {
  return 42;
}
Mutant 1868 in q.js: arguments replaced with function () {
  return this;
}
Mutant 1869 in q.js: arguments replaced with function () {
  return null;
}
Mutant 1870 in q.js: Q replaced with undefined
Mutant 1871 in q.js: Q replaced with null
Mutant 1872 in q.js: Q replaced with 0
Mutant 1873 in q.js: bound replaced with this
Mutant 1874 in q.js: bound replaced with null
Mutant 1875 in q.js: bound replaced with undefined
Mutant 1876 in q.js: nodeArgs replaced with nodeArgs.slice()
Mutant 1877 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1878 in q.js: nodeArgs replaced with nodeArgs.map(function (x) {
  return x;
})
Mutant 1879 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1880 in q.js: deferred.reject replaced with deferred.makeNodeResolver()
Mutant 1881 in q.js: deferred.reject replaced with Q.reject
Mutant 1882 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1883 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 2)
Mutant 1884 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments.length)
Mutant 1885 in q.js: arguments replaced with null
Mutant 1886 in q.js: arguments replaced with undefined
Mutant 1887 in q.js: arguments replaced with 0
Mutant 1888 in q.js: 0 replaced with 1
Mutant 1889 in q.js: 0 replaced with -1
Mutant 1890 in q.js: 0 replaced with null
Mutant 1891 in q.js: args.unshift replaced with args.push
Mutant 1892 in q.js: args.unshift replaced with args.shift
Mutant 1893 in q.js: args.unshift replaced with args.pop
Mutant 1894 in q.js: this replaced with null
Mutant 1895 in q.js: this replaced with undefined
Mutant 1896 in q.js: this replaced with function () {}
Mutant 1897 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1898 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1899 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args)
Mutant 1900 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1901 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1902 in q.js: void 0 replaced with null
Mutant 1903 in q.js: void 0 replaced with undefined
Mutant 1904 in q.js: void 0 replaced with this
Mutant 1905 in q.js: args replaced with null
Mutant 1906 in q.js: args replaced with undefined
Mutant 1907 in q.js: args replaced with []
Mutant 1908 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice())
Mutant 1909 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat([]))
Mutant 1910 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.filter(Boolean))
Mutant 1911 in q.js: Q replaced with undefined
Mutant 1912 in q.js: Q replaced with null
Mutant 1913 in q.js: object replaced with null
Mutant 1914 in q.js: object replaced with undefined
Mutant 1915 in q.js: object replaced with {}
Mutant 1916 in q.js: name replaced with "newName"
Mutant 1917 in q.js: name replaced with null
Mutant 1918 in q.js: name replaced with undefined
Mutant 1919 in q.js: args replaced with args[0]
Mutant 1920 in q.js: args replaced with args.slice(1)
Mutant 1921 in q.js: args replaced with args.concat(["extra argument"])
Mutant 1922 in q.js: args || [] replaced with []
Mutant 1923 in q.js: args || [] replaced with undefined
Mutant 1924 in q.js: args || [] replaced with null
Mutant 1925 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1926 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1927 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1928 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(true)
Mutant 1929 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().reverse()
Mutant 1930 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().toString()
Mutant 1931 in q.js: deferred.makeNodeResolver replaced with undefined
Mutant 1932 in q.js: deferred.makeNodeResolver replaced with null
Mutant 1933 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1934 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
Mutant 1935 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1936 in q.js: this.dispatch replaced with this.makeNodeResolver
Mutant 1937 in q.js: this.dispatch replaced with deferred.reject
not replacing this.dispatch with this.makeNodeResolver
not replacing this.dispatch with this.makeNodeResolver
not replacing this.dispatch with deferred.reject
not replacing this.dispatch with deferred.reject
Mutant 1938 in q.js: "post" replaced with "get"
Mutant 1939 in q.js: "post" replaced with "put"
Mutant 1940 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1941 in q.js: deferred.reject replaced with null
Mutant 1942 in q.js: deferred.reject replaced with deferred.notify
Mutant 1943 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1944 in q.js: array_slice(arguments, 2) replaced with array_slice(array_slice(arguments, 2))
Mutant 1945 in q.js: array_slice(arguments, 2) replaced with array_slice([arguments[2]])
Mutant 1946 in q.js: arguments replaced with args.length
Mutant 1947 in q.js: arguments replaced with args[0]
Mutant 1948 in q.js: arguments replaced with args.slice(1)
Mutant 1949 in q.js: 2 replaced with 1
Mutant 1950 in q.js: 2 replaced with 3
Mutant 1951 in q.js: 2 replaced with 0
Mutant 1952 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1953 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1954 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1955 in q.js: deferred.makeNodeResolver() replaced with function () {}
Mutant 1956 in q.js: deferred.makeNodeResolver() replaced with function (error) {
  throw error;
}
Mutant 1957 in q.js: deferred.makeNodeResolver() replaced with function (error) {
  console.log(error);
}
Mutant 1958 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1959 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [nodeArgs, name])
Mutant 1960 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs.reverse()])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [nodeArgs, name])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs.reverse()])
Mutant 1961 in q.js: Q replaced with this
Mutant 1962 in q.js: Q replaced with null
Mutant 1963 in q.js: Q replaced with console.log
Mutant 1964 in q.js: object replaced with null
Mutant 1965 in q.js: object replaced with undefined
Mutant 1966 in q.js: object replaced with {}
Mutant 1967 in q.js: "post" replaced with "get"
Mutant 1968 in q.js: "post" replaced with "put"
Mutant 1969 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1970 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, undefined]
Mutant 1971 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1972 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1973 in q.js: deferred.reject replaced with deferred.notify
Mutant 1974 in q.js: deferred.reject replaced with deferred.reject("new error")
Mutant 1975 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1976 in q.js: array_slice(arguments, 1) replaced with array_slice(nodeArgs, 1)
Mutant 1977 in q.js: array_slice(arguments, 1) replaced with array_slice(baseArgs, 2)
Mutant 1978 in q.js: arguments replaced with null
Mutant 1979 in q.js: arguments replaced with undefined
Mutant 1980 in q.js: arguments replaced with []
Mutant 1981 in q.js: 1 replaced with 2
Mutant 1982 in q.js: 1 replaced with nodeArgs.length
Mutant 1983 in q.js: 1 replaced with args.length
Mutant 1984 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1985 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1986 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1987 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1988 in q.js: deferred.makeNodeResolver() replaced with () => {}
Mutant 1989 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1990 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("send", [name, nodeArgs])
Mutant 1991 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs.concat(1)])
Mutant 1992 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs.slice(1)])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("send", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs.concat(1)])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs.slice(1)])
Mutant 1993 in q.js: "post" replaced with "send"
Mutant 1994 in q.js: "post" replaced with "get"
Mutant 1995 in q.js: "post" replaced with "apply"
Mutant 1996 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1997 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.concat([null])]
Mutant 1998 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(0, -1)]
Mutant 1999 in q.js: deferred.reject replaced with deferred.resolve
Mutant 2000 in q.js: deferred.reject replaced with Q.reject
Mutant 2001 in q.js: deferred.reject replaced with null
Mutant 2002 in q.js: Q(object).nodeify replaced with object.nodeify
Mutant 2003 in q.js: Q replaced with null
Mutant 2004 in q.js: Q replaced with undefined
Mutant 2005 in q.js: Q replaced with 0
Mutant 2006 in q.js: object replaced with null
Mutant 2007 in q.js: object replaced with undefined
Mutant 2008 in q.js: object replaced with {}
Mutant 2009 in q.js: nodeback replaced with nodeback()
Mutant 2010 in q.js: nodeback replaced with null
Mutant 2011 in q.js: nodeback replaced with undefined
Mutant 2012 in q.js: nodeback replaced with !nodeback
Mutant 2013 in q.js: nodeback replaced with nodeback.call(null)
Mutant 2014 in q.js: nodeback replaced with nodeback.length
Mutant 2015 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 2016 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 2017 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 2018 in q.js: null replaced with undefined
Mutant 2019 in q.js: null replaced with "hello"
Mutant 2020 in q.js: null replaced with Q.reject(new Error("something went wrong"))
Mutant 2021 in q.js: value replaced with undefined
Mutant 2022 in q.js: value replaced with null
Mutant 2023 in q.js: value replaced with 0
Mutant 2024 in q.js: nodeback replaced with undefined
Mutant 2025 in q.js: nodeback replaced with null
Mutant 2026 in q.js: error replaced with null
Mutant 2027 in q.js: error replaced with undefined
Mutant 2028 in q.js: error replaced with "error"
Mutant 2029 in q.js: captureLine replaced with captureLine + 1
Mutant 2030 in q.js: captureLine replaced with captureLine * 2
Mutant 2031 in q.js: captureLine replaced with captureLine - 1
Mutant 2032 in queue.js: Q.defer replaced with Q.reject
Mutant 2033 in queue.js: Q.defer replaced with Q.resolve
Mutant 2034 in queue.js: Q.defer replaced with Q.all
Mutant 2035 in queue.js: Q.defer replaced with Q.reject
Mutant 2036 in queue.js: Q.defer replaced with Q.resolve
Mutant 2037 in queue.js: ends.promise.get replaced with ends.promise.then
Mutant 2038 in queue.js: ends.promise.get replaced with ends.promise.catch
Mutant 2039 in queue.js: ends.promise.get replaced with ends.promise.finally
Mutant 2040 in queue.js: "head" replaced with "tail"
Mutant 2041 in queue.js: "head" replaced with "head.tail"
Mutant 2042 in queue.js: "head" replaced with "null"
Mutant 2043 in queue.js: "tail" replaced with "head"
Mutant 2044 in queue.js: "tail" replaced with "tail" + "1"
Mutant 2045 in queue.js: "tail" replaced with "tail" - 1
Mutant 2046 in queue.js: closed.resolve replaced with closed.reject
Mutant 2047 in queue.js: error replaced with null
Mutant 2048 in queue.js: error replaced with undefined
Mutant 2049 in queue.js: error replaced with Q.reject(new Error("Queue is closed"))
Mutant 2050 in queue.js: Q.reject replaced with Q.resolve
Mutant 2051 in queue.js: Q.reject replaced with Q.all
Mutant 2052 in queue.js: error replaced with error.message
Mutant 2053 in queue.js: error replaced with new Error("Different error message")
Mutant 2054 in queue.js: error replaced with null
Mutant 2055 in queue.js: ends.resolve replaced with ends.reject
Mutant 2056 in queue.js: ends.resolve replaced with closed.reject
[32m14:52:21 (3125) INFO Instrumenter[39m Instrumented 2 source file(s) with 2057 mutant(s)
[32m14:52:22 (3125) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m14:52:24 (3125) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m14:52:24 (3125) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m14:52:30 (3125) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6792 ms, overhead 1 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~2h 51m) 2/2057 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 48m) 3/2057 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 25m) 5/2057 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 47m) 6/2057 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 33m) 8/2057 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 47m) 9/2057 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 37m) 11/2057 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 47m) 12/2057 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 38m) 14/2057 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 8m) 18/2057 tested (14 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 16m) 19/2057 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 13m) 21/2057 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 20m) 22/2057 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 17m) 24/2057 tested (20 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 23m) 25/2057 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 20m) 27/2057 tested (23 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 25m) 28/2057 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 22m) 30/2057 tested (26 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 26m) 31/2057 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 30m) 32/2057 tested (28 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 28m) 34/2057 tested (30 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 31m) 35/2057 tested (31 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 29m) 37/2057 tested (33 survived, 0 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 32m) 38/2057 tested (34 survived, 0 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 19m) 42/2057 tested (35 survived, 0 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 22m) 43/2057 tested (35 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 30m) 43/2057 tested (35 survived, 1 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 33m) 44/2057 tested (35 survived, 2 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 36m) 45/2057 tested (35 survived, 3 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 43m) 45/2057 tested (35 survived, 3 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 45m) 46/2057 tested (35 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 48m) 47/2057 tested (36 survived, 4 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 50m) 48/2057 tested (36 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 52m) 49/2057 tested (37 survived, 5 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 49m) 51/2057 tested (39 survived, 5 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 56m) 51/2057 tested (39 survived, 5 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 53m) 53/2057 tested (40 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 46m) 56/2057 tested (41 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 52m) 56/2057 tested (41 survived, 6 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 49m) 58/2057 tested (42 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 51m) 59/2057 tested (43 survived, 7 timed out)
Mutation testing 2% (elapsed: ~7m, remaining: ~3h 57m) 59/2057 tested (43 survived, 7 timed out)
Mutation testing 2% (elapsed: ~7m, remaining: ~3h 54m) 61/2057 tested (44 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 52m) 63/2057 tested (45 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 57m) 63/2057 tested (45 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 40m) 69/2057 tested (45 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 42m) 70/2057 tested (46 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 40m) 72/2057 tested (48 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 41m) 73/2057 tested (49 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 40m) 75/2057 tested (51 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 41m) 76/2057 tested (52 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 39m) 78/2057 tested (54 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 41m) 79/2057 tested (55 survived, 9 timed out)
Mutation testing 3% (elapsed: ~9m, remaining: ~3h 39m) 81/2057 tested (57 survived, 9 timed out)
Mutation testing 3% (elapsed: ~9m, remaining: ~3h 40m) 82/2057 tested (58 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 39m) 84/2057 tested (60 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 40m) 85/2057 tested (61 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 38m) 87/2057 tested (63 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 40m) 88/2057 tested (64 survived, 9 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 43m) 88/2057 tested (64 survived, 9 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 44m) 89/2057 tested (64 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 45m) 90/2057 tested (64 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 49m) 90/2057 tested (64 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 47m) 92/2057 tested (65 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 51m) 92/2057 tested (65 survived, 12 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 49m) 94/2057 tested (66 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 43m) 98/2057 tested (67 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 44m) 99/2057 tested (68 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 45m) 100/2057 tested (69 survived, 13 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 43m) 102/2057 tested (71 survived, 13 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 44m) 103/2057 tested (72 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 43m) 105/2057 tested (74 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 43m) 106/2057 tested (75 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 42m) 108/2057 tested (77 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 43m) 109/2057 tested (78 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 42m) 111/2057 tested (80 survived, 13 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 42m) 112/2057 tested (81 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 41m) 114/2057 tested (83 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 42m) 115/2057 tested (84 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 41m) 117/2057 tested (86 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 41m) 118/2057 tested (87 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 40m) 120/2057 tested (89 survived, 13 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 41m) 121/2057 tested (90 survived, 13 timed out)
Mutation testing 5% (elapsed: ~14m, remaining: ~3h 40m) 123/2057 tested (92 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 40m) 124/2057 tested (93 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 39m) 126/2057 tested (95 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 40m) 127/2057 tested (96 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 39m) 129/2057 tested (98 survived, 13 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 39m) 130/2057 tested (99 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 38m) 132/2057 tested (101 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 39m) 133/2057 tested (102 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 38m) 135/2057 tested (104 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 38m) 136/2057 tested (105 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 39m) 137/2057 tested (106 survived, 13 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 38m) 139/2057 tested (108 survived, 13 timed out)
Mutation testing 6% (elapsed: ~16m, remaining: ~3h 39m) 140/2057 tested (109 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 34m) 144/2057 tested (111 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 33m) 146/2057 tested (112 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 34m) 147/2057 tested (113 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 30m) 151/2057 tested (114 survived, 13 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 30m) 152/2057 tested (114 survived, 14 timed out)
Mutation testing 7% (elapsed: ~17m, remaining: ~3h 21m) 160/2057 tested (114 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 16m) 165/2057 tested (114 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 16m) 167/2057 tested (116 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 16m) 168/2057 tested (117 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 16m) 170/2057 tested (119 survived, 14 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 16m) 171/2057 tested (120 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 173/2057 tested (122 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 174/2057 tested (123 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 15m) 176/2057 tested (125 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 177/2057 tested (126 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 15m) 179/2057 tested (128 survived, 14 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 16m) 180/2057 tested (129 survived, 14 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 15m) 182/2057 tested (131 survived, 14 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 16m) 183/2057 tested (132 survived, 14 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 15m) 185/2057 tested (134 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 16m) 186/2057 tested (135 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 16m) 187/2057 tested (136 survived, 14 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 16m) 189/2057 tested (138 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 16m) 190/2057 tested (139 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 15m) 192/2057 tested (141 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 16m) 193/2057 tested (142 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 15m) 195/2057 tested (144 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 16m) 196/2057 tested (145 survived, 14 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 15m) 198/2057 tested (147 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 16m) 199/2057 tested (148 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 15m) 201/2057 tested (150 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 15m) 202/2057 tested (151 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 15m) 204/2057 tested (153 survived, 14 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 15m) 205/2057 tested (154 survived, 14 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 15m) 207/2057 tested (156 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 15m) 208/2057 tested (157 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 14m) 210/2057 tested (159 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 15m) 211/2057 tested (160 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 14m) 213/2057 tested (162 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 15m) 214/2057 tested (163 survived, 14 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 14m) 216/2057 tested (165 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 15m) 217/2057 tested (166 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 14m) 219/2057 tested (168 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 14m) 220/2057 tested (169 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 14m) 222/2057 tested (171 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 14m) 223/2057 tested (172 survived, 14 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 15m) 224/2057 tested (173 survived, 14 timed out)
Mutation testing 10% (elapsed: ~24m, remaining: ~3h 14m) 226/2057 tested (175 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 14m) 227/2057 tested (176 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 14m) 229/2057 tested (178 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 14m) 230/2057 tested (179 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 14m) 232/2057 tested (181 survived, 14 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 14m) 233/2057 tested (182 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 13m) 235/2057 tested (184 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 14m) 236/2057 tested (185 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 240/2057 tested (186 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 242/2057 tested (186 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 243/2057 tested (186 survived, 14 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 11m) 244/2057 tested (187 survived, 14 timed out)
Mutation testing 11% (elapsed: ~26m, remaining: ~3h 11m) 246/2057 tested (189 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 11m) 247/2057 tested (190 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 11m) 249/2057 tested (192 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 10m) 251/2057 tested (193 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 10m) 253/2057 tested (195 survived, 14 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 10m) 254/2057 tested (196 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 9m) 256/2057 tested (198 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 10m) 257/2057 tested (199 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 9m) 259/2057 tested (201 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 10m) 260/2057 tested (202 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 9m) 262/2057 tested (204 survived, 14 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 9m) 263/2057 tested (205 survived, 14 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 9m) 265/2057 tested (207 survived, 14 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 9m) 266/2057 tested (208 survived, 14 timed out)
Mutation testing 12% (elapsed: ~28m, remaining: ~3h 9m) 267/2057 tested (209 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 9m) 269/2057 tested (211 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 9m) 270/2057 tested (212 survived, 14 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 9m) 272/2057 tested (214 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 273/2057 tested (215 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 275/2057 tested (217 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 276/2057 tested (218 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 8m) 278/2057 tested (220 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 9m) 279/2057 tested (221 survived, 14 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 8m) 281/2057 tested (223 survived, 14 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 282/2057 tested (224 survived, 14 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 284/2057 tested (226 survived, 14 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 285/2057 tested (227 survived, 14 timed out)
Mutation testing 13% (elapsed: ~30m, remaining: ~3h 8m) 287/2057 tested (229 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 8m) 288/2057 tested (230 survived, 14 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 7m) 290/2057 tested (232 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 8m) 291/2057 tested (233 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 293/2057 tested (235 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 294/2057 tested (236 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 296/2057 tested (238 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 297/2057 tested (239 survived, 14 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 7m) 299/2057 tested (241 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 300/2057 tested (242 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 302/2057 tested (244 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 303/2057 tested (245 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 304/2057 tested (246 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 6m) 306/2057 tested (248 survived, 14 timed out)
Mutation testing 14% (elapsed: ~32m, remaining: ~3h 7m) 307/2057 tested (249 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 309/2057 tested (251 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 310/2057 tested (252 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 312/2057 tested (254 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 313/2057 tested (255 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 315/2057 tested (257 survived, 14 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 6m) 316/2057 tested (258 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 318/2057 tested (260 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 6m) 319/2057 tested (261 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 321/2057 tested (263 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 322/2057 tested (264 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 324/2057 tested (266 survived, 14 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 5m) 325/2057 tested (267 survived, 14 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 5m) 327/2057 tested (269 survived, 14 timed out)
Mutation testing 15% (elapsed: ~35m, remaining: ~3h 5m) 328/2057 tested (270 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 330/2057 tested (272 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 5m) 331/2057 tested (273 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 333/2057 tested (275 survived, 14 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~3h 4m) 334/2057 tested (276 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 336/2057 tested (278 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 337/2057 tested (279 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 339/2057 tested (281 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 4m) 340/2057 tested (282 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 3m) 342/2057 tested (283 survived, 14 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~3h 3m) 344/2057 tested (285 survived, 14 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 345/2057 tested (286 survived, 14 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 347/2057 tested (288 survived, 14 timed out)
Mutation testing 16% (elapsed: ~37m, remaining: ~3h 3m) 348/2057 tested (289 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 2m) 350/2057 tested (291 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 3m) 351/2057 tested (292 survived, 14 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~3h 2m) 353/2057 tested (294 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 356/2057 tested (295 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 357/2057 tested (296 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 359/2057 tested (298 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 360/2057 tested (299 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 362/2057 tested (301 survived, 14 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~3h 1m) 363/2057 tested (302 survived, 14 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 0m) 365/2057 tested (304 survived, 14 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 0m) 366/2057 tested (305 survived, 14 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 0m) 368/2057 tested (307 survived, 14 timed out)
Mutation testing 17% (elapsed: ~39m, remaining: ~3h 0m) 369/2057 tested (308 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~3h 0m) 371/2057 tested (310 survived, 14 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~3h 0m) 372/2057 tested (311 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 0m) 374/2057 tested (313 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~3h 0m) 375/2057 tested (314 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 59m) 377/2057 tested (316 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 59m) 378/2057 tested (317 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 59m) 380/2057 tested (319 survived, 14 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 59m) 381/2057 tested (320 survived, 14 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 59m) 383/2057 tested (322 survived, 14 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 59m) 384/2057 tested (323 survived, 14 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 58m) 386/2057 tested (325 survived, 14 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 59m) 387/2057 tested (326 survived, 14 timed out)
Mutation testing 18% (elapsed: ~41m, remaining: ~2h 58m) 389/2057 tested (328 survived, 14 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 57m) 392/2057 tested (329 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 57m) 393/2057 tested (330 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 57m) 395/2057 tested (332 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 57m) 396/2057 tested (333 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 57m) 398/2057 tested (335 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 57m) 399/2057 tested (336 survived, 14 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 56m) 401/2057 tested (338 survived, 14 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 57m) 402/2057 tested (339 survived, 14 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 404/2057 tested (341 survived, 14 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 405/2057 tested (342 survived, 14 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 406/2057 tested (343 survived, 14 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 408/2057 tested (345 survived, 14 timed out)
Mutation testing 19% (elapsed: ~43m, remaining: ~2h 56m) 409/2057 tested (346 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 413/2057 tested (348 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 55m) 414/2057 tested (348 survived, 14 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 418/2057 tested (348 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 53m) 419/2057 tested (348 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 420/2057 tested (348 survived, 15 timed out)
Mutation testing 20% (elapsed: ~44m, remaining: ~2h 54m) 421/2057 tested (348 survived, 15 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 422/2057 tested (348 survived, 16 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 422/2057 tested (348 survived, 16 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 55m) 423/2057 tested (348 survived, 17 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 425/2057 tested (348 survived, 18 timed out)
Mutation testing 20% (elapsed: ~45m, remaining: ~2h 54m) 426/2057 tested (349 survived, 18 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 51m) 433/2057 tested (350 survived, 18 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 50m) 438/2057 tested (350 survived, 18 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 50m) 438/2057 tested (350 survived, 18 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 49m) 442/2057 tested (350 survived, 19 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 49m) 443/2057 tested (350 survived, 20 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 48m) 446/2057 tested (351 survived, 20 timed out)
Mutation testing 21% (elapsed: ~46m, remaining: ~2h 48m) 447/2057 tested (352 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 48m) 449/2057 tested (354 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 48m) 450/2057 tested (355 survived, 20 timed out)
Mutation testing 21% (elapsed: ~47m, remaining: ~2h 48m) 452/2057 tested (356 survived, 20 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 47m) 455/2057 tested (358 survived, 20 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 47m) 455/2057 tested (358 survived, 20 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 47m) 456/2057 tested (358 survived, 21 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 47m) 458/2057 tested (360 survived, 21 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 47m) 459/2057 tested (361 survived, 21 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 47m) 461/2057 tested (363 survived, 21 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 47m) 462/2057 tested (364 survived, 21 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 47m) 464/2057 tested (366 survived, 21 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 47m) 465/2057 tested (367 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 46m) 467/2057 tested (369 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 46m) 468/2057 tested (370 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 46m) 470/2057 tested (372 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 46m) 471/2057 tested (373 survived, 21 timed out)
Mutation testing 22% (elapsed: ~49m, remaining: ~2h 46m) 473/2057 tested (375 survived, 21 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 46m) 474/2057 tested (376 survived, 21 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 46m) 476/2057 tested (378 survived, 21 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 46m) 477/2057 tested (379 survived, 21 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 45m) 479/2057 tested (381 survived, 21 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 45m) 480/2057 tested (382 survived, 21 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 45m) 482/2057 tested (384 survived, 21 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 45m) 483/2057 tested (385 survived, 21 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 45m) 485/2057 tested (387 survived, 21 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 45m) 486/2057 tested (388 survived, 21 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 45m) 487/2057 tested (389 survived, 21 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 45m) 489/2057 tested (391 survived, 21 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 45m) 490/2057 tested (392 survived, 21 timed out)
Mutation testing 23% (elapsed: ~51m, remaining: ~2h 44m) 492/2057 tested (394 survived, 21 timed out)
Mutation testing 23% (elapsed: ~52m, remaining: ~2h 44m) 493/2057 tested (395 survived, 21 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 43m) 497/2057 tested (396 survived, 21 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 43m) 498/2057 tested (396 survived, 22 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 43m) 499/2057 tested (397 survived, 22 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 43m) 501/2057 tested (399 survived, 22 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 43m) 502/2057 tested (399 survived, 22 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 43m) 503/2057 tested (399 survived, 23 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 44m) 503/2057 tested (399 survived, 23 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 43m) 506/2057 tested (399 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 43m) 506/2057 tested (399 survived, 24 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 44m) 507/2057 tested (399 survived, 25 timed out)
Mutation testing 24% (elapsed: ~53m, remaining: ~2h 44m) 508/2057 tested (399 survived, 26 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 44m) 508/2057 tested (399 survived, 26 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 44m) 510/2057 tested (399 survived, 27 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 43m) 512/2057 tested (401 survived, 27 timed out)
Mutation testing 24% (elapsed: ~54m, remaining: ~2h 44m) 513/2057 tested (402 survived, 27 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 43m) 515/2057 tested (404 survived, 27 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 43m) 516/2057 tested (405 survived, 27 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 43m) 518/2057 tested (407 survived, 27 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 43m) 519/2057 tested (408 survived, 27 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 43m) 521/2057 tested (409 survived, 27 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 41m) 525/2057 tested (410 survived, 27 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 42m) 526/2057 tested (410 survived, 27 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 41m) 528/2057 tested (410 survived, 28 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 41m) 529/2057 tested (410 survived, 28 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 42m) 529/2057 tested (410 survived, 28 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 42m) 530/2057 tested (410 survived, 28 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 41m) 532/2057 tested (411 survived, 28 timed out)
Mutation testing 25% (elapsed: ~56m, remaining: ~2h 42m) 533/2057 tested (412 survived, 28 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 41m) 535/2057 tested (414 survived, 28 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 41m) 536/2057 tested (415 survived, 28 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 41m) 538/2057 tested (417 survived, 28 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 41m) 539/2057 tested (418 survived, 28 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 41m) 541/2057 tested (420 survived, 28 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 41m) 542/2057 tested (421 survived, 28 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 40m) 544/2057 tested (423 survived, 28 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 40m) 545/2057 tested (424 survived, 28 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 40m) 547/2057 tested (426 survived, 28 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 40m) 548/2057 tested (427 survived, 28 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 40m) 549/2057 tested (428 survived, 28 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 40m) 551/2057 tested (430 survived, 28 timed out)
Mutation testing 26% (elapsed: ~58m, remaining: ~2h 40m) 552/2057 tested (431 survived, 28 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 40m) 554/2057 tested (433 survived, 28 timed out)
Mutation testing 26% (elapsed: ~59m, remaining: ~2h 40m) 555/2057 tested (434 survived, 28 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 39m) 557/2057 tested (436 survived, 28 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 39m) 558/2057 tested (437 survived, 28 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 39m) 560/2057 tested (439 survived, 28 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 39m) 561/2057 tested (440 survived, 28 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 39m) 563/2057 tested (442 survived, 28 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 39m) 564/2057 tested (443 survived, 28 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 38m) 566/2057 tested (445 survived, 28 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 38m) 567/2057 tested (446 survived, 28 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 38m) 569/2057 tested (448 survived, 28 timed out)
Mutation testing 27% (elapsed: ~1h 0m, remaining: ~2h 38m) 570/2057 tested (449 survived, 28 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 38m) 572/2057 tested (451 survived, 28 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 38m) 573/2057 tested (452 survived, 28 timed out)
Mutation testing 27% (elapsed: ~1h 1m, remaining: ~2h 38m) 575/2057 tested (454 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 38m) 576/2057 tested (455 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 37m) 578/2057 tested (457 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 37m) 579/2057 tested (458 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 37m) 581/2057 tested (460 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 37m) 582/2057 tested (461 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 37m) 584/2057 tested (463 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 37m) 585/2057 tested (464 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 36m) 587/2057 tested (466 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 36m) 588/2057 tested (467 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 37m) 589/2057 tested (468 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 36m) 591/2057 tested (470 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 36m) 592/2057 tested (471 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 36m) 594/2057 tested (473 survived, 28 timed out)
Mutation testing 28% (elapsed: ~1h 3m, remaining: ~2h 36m) 595/2057 tested (474 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 36m) 597/2057 tested (476 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 36m) 598/2057 tested (477 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 35m) 600/2057 tested (479 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 35m) 601/2057 tested (480 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 35m) 603/2057 tested (482 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 35m) 604/2057 tested (483 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 35m) 606/2057 tested (485 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 35m) 607/2057 tested (486 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 34m) 609/2057 tested (488 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 34m) 610/2057 tested (489 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 34m) 612/2057 tested (491 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 34m) 613/2057 tested (492 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 5m, remaining: ~2h 34m) 615/2057 tested (494 survived, 28 timed out)
Mutation testing 29% (elapsed: ~1h 6m, remaining: ~2h 34m) 616/2057 tested (495 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 618/2057 tested (497 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 34m) 619/2057 tested (498 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 33m) 621/2057 tested (500 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 33m) 622/2057 tested (501 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 33m) 624/2057 tested (503 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 625/2057 tested (504 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 33m) 626/2057 tested (505 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 32m) 630/2057 tested (506 survived, 28 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 32m) 631/2057 tested (506 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 32m) 631/2057 tested (506 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 7m, remaining: ~2h 32m) 632/2057 tested (506 survived, 30 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 32m) 633/2057 tested (506 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 32m) 634/2057 tested (507 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 33m) 634/2057 tested (507 survived, 31 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 33m) 635/2057 tested (507 survived, 32 timed out)
Mutation testing 30% (elapsed: ~1h 8m, remaining: ~2h 33m) 636/2057 tested (507 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 33m) 638/2057 tested (509 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 33m) 639/2057 tested (510 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 33m) 640/2057 tested (511 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 32m) 642/2057 tested (513 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 33m) 642/2057 tested (513 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 32m) 644/2057 tested (514 survived, 34 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 33m) 644/2057 tested (514 survived, 34 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 33m) 645/2057 tested (514 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 32m) 647/2057 tested (516 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 32m) 648/2057 tested (517 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 32m) 650/2057 tested (519 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 32m) 651/2057 tested (520 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 10m, remaining: ~2h 32m) 653/2057 tested (522 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 32m) 654/2057 tested (523 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 31m) 656/2057 tested (525 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 11m, remaining: ~2h 32m) 657/2057 tested (526 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 31m) 659/2057 tested (528 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 31m) 660/2057 tested (529 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 31m) 662/2057 tested (531 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 30m) 666/2057 tested (532 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 30m) 668/2057 tested (532 survived, 35 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 30m) 669/2057 tested (532 survived, 36 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 30m) 669/2057 tested (532 survived, 36 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 30m) 670/2057 tested (532 survived, 37 timed out)
Mutation testing 32% (elapsed: ~1h 12m, remaining: ~2h 30m) 671/2057 tested (532 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 30m) 672/2057 tested (533 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 30m) 674/2057 tested (535 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 30m) 675/2057 tested (536 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 29m) 677/2057 tested (538 survived, 38 timed out)
Mutation testing 32% (elapsed: ~1h 13m, remaining: ~2h 29m) 678/2057 tested (539 survived, 38 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 29m) 680/2057 tested (541 survived, 38 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 680/2057 tested (541 survived, 38 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 681/2057 tested (541 survived, 39 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 29m) 682/2057 tested (541 survived, 40 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 30m) 682/2057 tested (541 survived, 40 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 30m) 683/2057 tested (541 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 30m) 684/2057 tested (541 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 30m) 685/2057 tested (541 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 687/2057 tested (542 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 688/2057 tested (543 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 689/2057 tested (544 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 29m) 690/2057 tested (544 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 30m) 690/2057 tested (544 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 30m) 691/2057 tested (544 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 30m) 692/2057 tested (544 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 29m) 694/2057 tested (544 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 30m) 694/2057 tested (544 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 30m) 695/2057 tested (544 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 16m, remaining: ~2h 30m) 696/2057 tested (544 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 30m) 696/2057 tested (544 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 30m) 697/2057 tested (544 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 30m) 697/2057 tested (544 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 30m) 698/2057 tested (544 survived, 48 timed out)
Mutation testing 33% (elapsed: ~1h 17m, remaining: ~2h 30m) 699/2057 tested (544 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 30m) 700/2057 tested (544 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 701/2057 tested (544 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 702/2057 tested (544 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 703/2057 tested (544 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 704/2057 tested (545 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 706/2057 tested (547 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 30m) 706/2057 tested (547 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 707/2057 tested (547 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 708/2057 tested (547 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 709/2057 tested (547 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 710/2057 tested (547 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 31m) 710/2057 tested (547 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 19m, remaining: ~2h 30m) 712/2057 tested (547 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 714/2057 tested (547 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 714/2057 tested (547 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 715/2057 tested (547 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 30m) 716/2057 tested (547 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 31m) 716/2057 tested (547 survived, 54 timed out)
Mutation testing 34% (elapsed: ~1h 20m, remaining: ~2h 31m) 717/2057 tested (547 survived, 55 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 31m) 718/2057 tested (547 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 31m) 718/2057 tested (547 survived, 56 timed out)
Mutation testing 34% (elapsed: ~1h 21m, remaining: ~2h 31m) 719/2057 tested (547 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 31m) 720/2057 tested (548 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 31m) 721/2057 tested (548 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 31m) 721/2057 tested (548 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 722/2057 tested (548 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 723/2057 tested (548 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 723/2057 tested (548 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 724/2057 tested (548 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 31m) 725/2057 tested (548 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 32m) 725/2057 tested (548 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 726/2057 tested (548 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 727/2057 tested (548 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 727/2057 tested (548 survived, 64 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 728/2057 tested (548 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 730/2057 tested (550 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 23m, remaining: ~2h 32m) 731/2057 tested (551 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 31m) 733/2057 tested (553 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 31m) 734/2057 tested (554 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 31m) 736/2057 tested (556 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 31m) 737/2057 tested (557 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 31m) 739/2057 tested (559 survived, 65 timed out)
Mutation testing 35% (elapsed: ~1h 24m, remaining: ~2h 30m) 740/2057 tested (560 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 742/2057 tested (562 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 743/2057 tested (563 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 745/2057 tested (565 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 30m) 746/2057 tested (566 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 29m) 748/2057 tested (568 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 29m) 749/2057 tested (569 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 29m) 751/2057 tested (571 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 29m) 752/2057 tested (572 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 29m) 754/2057 tested (574 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 29m) 755/2057 tested (575 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 28m) 757/2057 tested (577 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 26m, remaining: ~2h 28m) 758/2057 tested (578 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 28m) 760/2057 tested (580 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 27m, remaining: ~2h 28m) 761/2057 tested (581 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 28m) 763/2057 tested (583 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 28m) 764/2057 tested (584 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 27m) 766/2057 tested (586 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 27m) 767/2057 tested (587 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 27m) 768/2057 tested (588 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 27m) 770/2057 tested (590 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 27m) 771/2057 tested (591 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 27m) 773/2057 tested (593 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 26m) 774/2057 tested (594 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 26m) 776/2057 tested (596 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 26m) 777/2057 tested (597 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 26m) 779/2057 tested (599 survived, 65 timed out)
Mutation testing 37% (elapsed: ~1h 29m, remaining: ~2h 26m) 780/2057 tested (600 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 25m) 782/2057 tested (602 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 25m) 783/2057 tested (603 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 25m) 785/2057 tested (605 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 25m) 786/2057 tested (606 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 25m) 788/2057 tested (608 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 25m) 789/2057 tested (609 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 24m) 791/2057 tested (611 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 24m) 792/2057 tested (612 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 24m) 794/2057 tested (614 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 24m) 795/2057 tested (615 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 24m) 797/2057 tested (617 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 24m) 798/2057 tested (618 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 24m) 799/2057 tested (619 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 23m) 801/2057 tested (621 survived, 65 timed out)
Mutation testing 38% (elapsed: ~1h 31m, remaining: ~2h 23m) 802/2057 tested (622 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 21m) 809/2057 tested (623 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 21m) 810/2057 tested (624 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 21m) 812/2057 tested (626 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 21m) 813/2057 tested (627 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 21m) 815/2057 tested (629 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 21m) 816/2057 tested (630 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 20m) 818/2057 tested (632 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 20m) 819/2057 tested (633 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 20m) 821/2057 tested (635 survived, 65 timed out)
Mutation testing 39% (elapsed: ~1h 33m, remaining: ~2h 20m) 822/2057 tested (636 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 20m) 824/2057 tested (638 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 20m) 825/2057 tested (639 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 19m) 827/2057 tested (641 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 19m) 828/2057 tested (642 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 19m) 830/2057 tested (644 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 19m) 831/2057 tested (645 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 19m) 833/2057 tested (647 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 19m) 834/2057 tested (648 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 18m) 836/2057 tested (650 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 18m) 837/2057 tested (651 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 18m) 839/2057 tested (653 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 18m) 840/2057 tested (654 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 18m) 841/2057 tested (655 survived, 65 timed out)
Mutation testing 40% (elapsed: ~1h 35m, remaining: ~2h 18m) 843/2057 tested (657 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 17m) 844/2057 tested (658 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 17m) 846/2057 tested (660 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 17m) 847/2057 tested (661 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 17m) 849/2057 tested (663 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 17m) 850/2057 tested (664 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 16m) 852/2057 tested (666 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 16m) 853/2057 tested (667 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 16m) 855/2057 tested (669 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 16m) 856/2057 tested (670 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 16m) 858/2057 tested (672 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 16m) 859/2057 tested (673 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 37m, remaining: ~2h 15m) 861/2057 tested (675 survived, 65 timed out)
Mutation testing 41% (elapsed: ~1h 38m, remaining: ~2h 15m) 862/2057 tested (676 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 15m) 864/2057 tested (678 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 15m) 865/2057 tested (679 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 15m) 867/2057 tested (681 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 15m) 868/2057 tested (682 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 14m) 870/2057 tested (684 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 14m) 871/2057 tested (684 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 14m) 872/2057 tested (684 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 14m) 873/2057 tested (684 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 14m) 875/2057 tested (686 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 14m) 876/2057 tested (687 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 39m, remaining: ~2h 14m) 878/2057 tested (689 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 14m) 878/2057 tested (689 survived, 65 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 14m) 879/2057 tested (689 survived, 66 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 14m) 880/2057 tested (689 survived, 67 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 14m) 880/2057 tested (689 survived, 67 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 14m) 882/2057 tested (690 survived, 68 timed out)
Mutation testing 42% (elapsed: ~1h 40m, remaining: ~2h 14m) 883/2057 tested (691 survived, 68 timed out)
Mutation testing 42% (elapsed: ~1h 41m, remaining: ~2h 14m) 884/2057 tested (692 survived, 68 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 13m) 885/2057 tested (692 survived, 69 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 14m) 885/2057 tested (692 survived, 69 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 14m) 886/2057 tested (692 survived, 70 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 14m) 887/2057 tested (692 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 41m, remaining: ~2h 14m) 888/2057 tested (693 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 13m) 890/2057 tested (695 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 13m) 892/2057 tested (696 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 12m) 896/2057 tested (697 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 12m) 897/2057 tested (698 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 11m) 900/2057 tested (700 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 42m, remaining: ~2h 11m) 902/2057 tested (701 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 11m) 903/2057 tested (702 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 43m, remaining: ~2h 11m) 905/2057 tested (704 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 11m) 906/2057 tested (705 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 10m) 908/2057 tested (707 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 10m) 909/2057 tested (708 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 10m) 911/2057 tested (710 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 10m) 912/2057 tested (711 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 10m) 914/2057 tested (713 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 10m) 915/2057 tested (714 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 9m) 917/2057 tested (716 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 9m) 918/2057 tested (717 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 44m, remaining: ~2h 9m) 920/2057 tested (719 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 9m) 921/2057 tested (720 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 9m) 923/2057 tested (722 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 45m, remaining: ~2h 9m) 924/2057 tested (723 survived, 71 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 8m) 926/2057 tested (725 survived, 71 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 8m) 927/2057 tested (726 survived, 71 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 8m) 929/2057 tested (728 survived, 71 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 8m) 930/2057 tested (729 survived, 71 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 8m) 932/2057 tested (731 survived, 71 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 8m) 933/2057 tested (732 survived, 71 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 8m) 934/2057 tested (733 survived, 71 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 8m) 935/2057 tested (733 survived, 72 timed out)
Mutation testing 45% (elapsed: ~1h 46m, remaining: ~2h 7m) 936/2057 tested (734 survived, 72 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 7m) 938/2057 tested (736 survived, 72 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 7m) 939/2057 tested (737 survived, 72 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 7m) 941/2057 tested (739 survived, 72 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 7m) 942/2057 tested (740 survived, 72 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 6m) 944/2057 tested (742 survived, 72 timed out)
Mutation testing 45% (elapsed: ~1h 47m, remaining: ~2h 6m) 945/2057 tested (743 survived, 72 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 6m) 947/2057 tested (745 survived, 72 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 6m) 948/2057 tested (746 survived, 72 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 6m) 950/2057 tested (748 survived, 72 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 6m) 951/2057 tested (749 survived, 72 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 6m) 951/2057 tested (749 survived, 72 timed out)
Mutation testing 46% (elapsed: ~1h 48m, remaining: ~2h 6m) 952/2057 tested (749 survived, 73 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 953/2057 tested (749 survived, 74 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 953/2057 tested (749 survived, 74 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 954/2057 tested (749 survived, 75 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 955/2057 tested (749 survived, 76 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 6m) 956/2057 tested (750 survived, 76 timed out)
Mutation testing 46% (elapsed: ~1h 49m, remaining: ~2h 5m) 958/2057 tested (752 survived, 76 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 959/2057 tested (753 survived, 76 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 961/2057 tested (755 survived, 76 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 962/2057 tested (756 survived, 76 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 964/2057 tested (758 survived, 76 timed out)
Mutation testing 46% (elapsed: ~1h 50m, remaining: ~2h 5m) 965/2057 tested (759 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~2h 4m) 967/2057 tested (761 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 968/2057 tested (762 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 970/2057 tested (764 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 971/2057 tested (765 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 973/2057 tested (767 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 4m) 974/2057 tested (768 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 51m, remaining: ~2h 3m) 976/2057 tested (770 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 977/2057 tested (771 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 979/2057 tested (773 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 980/2057 tested (774 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 981/2057 tested (775 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 983/2057 tested (777 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 52m, remaining: ~2h 3m) 984/2057 tested (778 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 2m) 986/2057 tested (780 survived, 76 timed out)
Mutation testing 47% (elapsed: ~1h 53m, remaining: ~2h 2m) 987/2057 tested (781 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~2h 2m) 989/2057 tested (783 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~2h 2m) 990/2057 tested (784 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~2h 2m) 992/2057 tested (786 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 53m, remaining: ~2h 1m) 993/2057 tested (787 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 1m) 995/2057 tested (789 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 1m) 996/2057 tested (790 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 1m) 998/2057 tested (792 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 1m) 999/2057 tested (793 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 0m) 1001/2057 tested (795 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 54m, remaining: ~2h 0m) 1002/2057 tested (796 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 0m) 1004/2057 tested (798 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 0m) 1005/2057 tested (799 survived, 76 timed out)
Mutation testing 48% (elapsed: ~1h 55m, remaining: ~2h 0m) 1006/2057 tested (800 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~2h 0m) 1008/2057 tested (800 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~2h 0m) 1009/2057 tested (800 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 55m, remaining: ~2h 0m) 1010/2057 tested (800 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 59m) 1012/2057 tested (800 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 59m) 1013/2057 tested (800 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 59m) 1015/2057 tested (800 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 59m) 1016/2057 tested (801 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 59m) 1018/2057 tested (803 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 56m, remaining: ~1h 59m) 1019/2057 tested (804 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 58m) 1020/2057 tested (805 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 58m) 1022/2057 tested (807 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 58m) 1023/2057 tested (808 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 58m) 1025/2057 tested (810 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 58m) 1026/2057 tested (811 survived, 76 timed out)
Mutation testing 49% (elapsed: ~1h 57m, remaining: ~1h 57m) 1028/2057 tested (813 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 57m) 1029/2057 tested (814 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 57m) 1031/2057 tested (816 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 57m) 1032/2057 tested (817 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 57m) 1034/2057 tested (819 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 57m) 1035/2057 tested (820 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 58m, remaining: ~1h 56m) 1037/2057 tested (822 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 56m) 1038/2057 tested (823 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 56m) 1040/2057 tested (825 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 56m) 1041/2057 tested (826 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 56m) 1043/2057 tested (828 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 56m) 1044/2057 tested (829 survived, 76 timed out)
Mutation testing 50% (elapsed: ~1h 59m, remaining: ~1h 55m) 1046/2057 tested (831 survived, 76 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 55m) 1047/2057 tested (832 survived, 76 timed out)
Mutation testing 50% (elapsed: ~2h 0m, remaining: ~1h 55m) 1049/2057 tested (834 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 55m) 1050/2057 tested (835 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 55m) 1052/2057 tested (837 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 55m) 1053/2057 tested (838 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 0m, remaining: ~1h 54m) 1055/2057 tested (840 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 54m) 1056/2057 tested (841 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 54m) 1057/2057 tested (842 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 54m) 1059/2057 tested (844 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 54m) 1060/2057 tested (845 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 53m) 1062/2057 tested (847 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 1m, remaining: ~1h 53m) 1063/2057 tested (848 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 53m) 1065/2057 tested (850 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 53m) 1066/2057 tested (851 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 53m) 1068/2057 tested (853 survived, 76 timed out)
Mutation testing 51% (elapsed: ~2h 2m, remaining: ~1h 53m) 1069/2057 tested (854 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 52m) 1071/2057 tested (856 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 2m, remaining: ~1h 52m) 1072/2057 tested (857 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 52m) 1074/2057 tested (859 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 52m) 1075/2057 tested (860 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 52m) 1077/2057 tested (862 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 52m) 1078/2057 tested (863 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 51m) 1080/2057 tested (865 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 3m, remaining: ~1h 51m) 1081/2057 tested (866 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 51m) 1083/2057 tested (868 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 51m) 1084/2057 tested (869 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 51m) 1086/2057 tested (871 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 51m) 1087/2057 tested (872 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 50m) 1089/2057 tested (874 survived, 76 timed out)
Mutation testing 52% (elapsed: ~2h 4m, remaining: ~1h 50m) 1090/2057 tested (875 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 50m) 1092/2057 tested (877 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 50m) 1093/2057 tested (878 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 50m) 1095/2057 tested (880 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 50m) 1096/2057 tested (881 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 49m) 1097/2057 tested (882 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 5m, remaining: ~1h 49m) 1099/2057 tested (884 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 49m) 1100/2057 tested (885 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 49m) 1102/2057 tested (887 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 49m) 1103/2057 tested (888 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 48m) 1105/2057 tested (890 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 48m) 1106/2057 tested (891 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 6m, remaining: ~1h 48m) 1108/2057 tested (893 survived, 76 timed out)
Mutation testing 53% (elapsed: ~2h 7m, remaining: ~1h 48m) 1109/2057 tested (894 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 48m) 1111/2057 tested (896 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 48m) 1112/2057 tested (897 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 47m) 1114/2057 tested (899 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 47m) 1115/2057 tested (900 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 7m, remaining: ~1h 47m) 1117/2057 tested (902 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 47m) 1118/2057 tested (903 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 47m) 1120/2057 tested (905 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 47m) 1121/2057 tested (906 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 46m) 1123/2057 tested (908 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 46m) 1124/2057 tested (909 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 8m, remaining: ~1h 46m) 1126/2057 tested (911 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 46m) 1127/2057 tested (912 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 46m) 1129/2057 tested (914 survived, 76 timed out)
Mutation testing 54% (elapsed: ~2h 9m, remaining: ~1h 46m) 1130/2057 tested (915 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 45m) 1132/2057 tested (917 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 45m) 1133/2057 tested (918 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 9m, remaining: ~1h 45m) 1135/2057 tested (920 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 45m) 1136/2057 tested (921 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 45m) 1137/2057 tested (922 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 45m) 1139/2057 tested (924 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 44m) 1140/2057 tested (925 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 44m) 1142/2057 tested (927 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 10m, remaining: ~1h 44m) 1143/2057 tested (928 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1145/2057 tested (930 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 44m) 1146/2057 tested (931 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 43m) 1148/2057 tested (933 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 43m) 1149/2057 tested (934 survived, 76 timed out)
Mutation testing 55% (elapsed: ~2h 11m, remaining: ~1h 43m) 1151/2057 tested (936 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 11m, remaining: ~1h 43m) 1152/2057 tested (937 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1154/2057 tested (939 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 43m) 1155/2057 tested (940 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 42m) 1157/2057 tested (942 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 42m) 1158/2057 tested (943 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 42m) 1160/2057 tested (945 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 12m, remaining: ~1h 42m) 1161/2057 tested (946 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1163/2057 tested (948 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 42m) 1164/2057 tested (949 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 41m) 1166/2057 tested (951 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 41m) 1167/2057 tested (952 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 41m) 1169/2057 tested (954 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 13m, remaining: ~1h 41m) 1170/2057 tested (955 survived, 76 timed out)
Mutation testing 56% (elapsed: ~2h 14m, remaining: ~1h 41m) 1171/2057 tested (956 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 41m) 1173/2057 tested (958 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 41m) 1174/2057 tested (959 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 40m) 1176/2057 tested (961 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 40m) 1177/2057 tested (962 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 14m, remaining: ~1h 40m) 1179/2057 tested (964 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1180/2057 tested (965 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 40m) 1182/2057 tested (967 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 39m) 1183/2057 tested (968 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 39m) 1185/2057 tested (970 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 39m) 1186/2057 tested (971 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 15m, remaining: ~1h 39m) 1188/2057 tested (973 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1189/2057 tested (974 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 39m) 1191/2057 tested (976 survived, 76 timed out)
Mutation testing 57% (elapsed: ~2h 16m, remaining: ~1h 38m) 1192/2057 tested (977 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 38m) 1194/2057 tested (979 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 38m) 1195/2057 tested (980 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 16m, remaining: ~1h 38m) 1197/2057 tested (982 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 38m) 1198/2057 tested (983 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 37m) 1200/2057 tested (985 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 37m) 1201/2057 tested (986 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 37m) 1203/2057 tested (988 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 37m) 1204/2057 tested (989 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 17m, remaining: ~1h 37m) 1206/2057 tested (991 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1207/2057 tested (992 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 37m) 1208/2057 tested (993 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 36m) 1210/2057 tested (995 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 36m) 1211/2057 tested (996 survived, 76 timed out)
Mutation testing 58% (elapsed: ~2h 18m, remaining: ~1h 36m) 1213/2057 tested (998 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 18m, remaining: ~1h 36m) 1214/2057 tested (999 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1216/2057 tested (1001 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 36m) 1217/2057 tested (1002 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 35m) 1219/2057 tested (1004 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 35m) 1220/2057 tested (1005 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 35m) 1222/2057 tested (1007 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 19m, remaining: ~1h 35m) 1223/2057 tested (1008 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1225/2057 tested (1010 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 35m) 1226/2057 tested (1011 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 34m) 1228/2057 tested (1013 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 34m) 1229/2057 tested (1014 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 34m) 1231/2057 tested (1016 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 20m, remaining: ~1h 34m) 1232/2057 tested (1017 survived, 76 timed out)
Mutation testing 59% (elapsed: ~2h 21m, remaining: ~1h 34m) 1234/2057 tested (1019 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 33m) 1235/2057 tested (1020 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 33m) 1237/2057 tested (1022 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 33m) 1238/2057 tested (1023 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 33m) 1240/2057 tested (1025 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 21m, remaining: ~1h 33m) 1241/2057 tested (1026 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1243/2057 tested (1028 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1244/2057 tested (1029 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1246/2057 tested (1031 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1247/2057 tested (1032 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1248/2057 tested (1033 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 22m, remaining: ~1h 32m) 1250/2057 tested (1035 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 32m) 1251/2057 tested (1036 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 31m) 1253/2057 tested (1038 survived, 76 timed out)
Mutation testing 60% (elapsed: ~2h 23m, remaining: ~1h 31m) 1254/2057 tested (1039 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 31m) 1256/2057 tested (1041 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 31m) 1257/2057 tested (1042 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 23m, remaining: ~1h 31m) 1259/2057 tested (1044 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 31m) 1260/2057 tested (1045 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1262/2057 tested (1047 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1263/2057 tested (1048 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1265/2057 tested (1050 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1266/2057 tested (1051 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 24m, remaining: ~1h 30m) 1268/2057 tested (1053 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 30m) 1269/2057 tested (1054 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1271/2057 tested (1056 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1272/2057 tested (1057 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1274/2057 tested (1059 survived, 76 timed out)
Mutation testing 61% (elapsed: ~2h 25m, remaining: ~1h 29m) 1275/2057 tested (1060 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 25m, remaining: ~1h 29m) 1277/2057 tested (1062 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1278/2057 tested (1063 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1280/2057 tested (1065 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1281/2057 tested (1066 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1283/2057 tested (1068 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1284/2057 tested (1069 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 26m, remaining: ~1h 28m) 1285/2057 tested (1070 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1287/2057 tested (1072 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1288/2057 tested (1073 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1290/2057 tested (1075 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1291/2057 tested (1076 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1293/2057 tested (1078 survived, 76 timed out)
Mutation testing 62% (elapsed: ~2h 27m, remaining: ~1h 27m) 1294/2057 tested (1079 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1296/2057 tested (1081 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1297/2057 tested (1082 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1299/2057 tested (1084 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1300/2057 tested (1085 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1302/2057 tested (1087 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 28m, remaining: ~1h 26m) 1303/2057 tested (1088 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1305/2057 tested (1090 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1306/2057 tested (1091 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1308/2057 tested (1093 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1309/2057 tested (1094 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1311/2057 tested (1096 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 29m, remaining: ~1h 25m) 1312/2057 tested (1097 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 24m) 1314/2057 tested (1099 survived, 76 timed out)
Mutation testing 63% (elapsed: ~2h 30m, remaining: ~1h 24m) 1315/2057 tested (1100 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 24m) 1317/2057 tested (1102 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 24m) 1318/2057 tested (1103 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 24m) 1320/2057 tested (1105 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 30m, remaining: ~1h 24m) 1321/2057 tested (1106 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1323/2057 tested (1108 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1324/2057 tested (1109 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1325/2057 tested (1110 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1327/2057 tested (1112 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 23m) 1328/2057 tested (1113 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 31m, remaining: ~1h 22m) 1330/2057 tested (1115 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1331/2057 tested (1116 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1333/2057 tested (1118 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1334/2057 tested (1119 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1336/2057 tested (1121 survived, 76 timed out)
Mutation testing 64% (elapsed: ~2h 32m, remaining: ~1h 22m) 1337/2057 tested (1122 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 32m, remaining: ~1h 21m) 1339/2057 tested (1124 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1340/2057 tested (1125 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1342/2057 tested (1127 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1343/2057 tested (1128 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1345/2057 tested (1130 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 21m) 1346/2057 tested (1131 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 33m, remaining: ~1h 20m) 1348/2057 tested (1133 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1349/2057 tested (1134 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1351/2057 tested (1136 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1352/2057 tested (1137 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1354/2057 tested (1139 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 20m) 1355/2057 tested (1140 survived, 76 timed out)
Mutation testing 65% (elapsed: ~2h 34m, remaining: ~1h 19m) 1357/2057 tested (1142 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1358/2057 tested (1143 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1360/2057 tested (1145 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1361/2057 tested (1146 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1362/2057 tested (1147 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1364/2057 tested (1149 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 35m, remaining: ~1h 19m) 1365/2057 tested (1150 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1367/2057 tested (1152 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1368/2057 tested (1153 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1370/2057 tested (1155 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1371/2057 tested (1156 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 18m) 1373/2057 tested (1158 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 36m, remaining: ~1h 17m) 1374/2057 tested (1159 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 17m) 1376/2057 tested (1161 survived, 76 timed out)
Mutation testing 66% (elapsed: ~2h 37m, remaining: ~1h 17m) 1377/2057 tested (1162 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1379/2057 tested (1164 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1380/2057 tested (1165 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 17m) 1382/2057 tested (1167 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 37m, remaining: ~1h 16m) 1383/2057 tested (1168 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1385/2057 tested (1170 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1386/2057 tested (1171 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1388/2057 tested (1173 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 16m) 1389/2057 tested (1174 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 15m) 1391/2057 tested (1176 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 38m, remaining: ~1h 15m) 1392/2057 tested (1177 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1394/2057 tested (1179 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1395/2057 tested (1180 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1397/2057 tested (1182 survived, 76 timed out)
Mutation testing 67% (elapsed: ~2h 39m, remaining: ~1h 15m) 1398/2057 tested (1183 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 14m) 1400/2057 tested (1185 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 39m, remaining: ~1h 14m) 1401/2057 tested (1186 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1402/2057 tested (1187 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1404/2057 tested (1189 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1405/2057 tested (1190 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1407/2057 tested (1192 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 14m) 1408/2057 tested (1193 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 40m, remaining: ~1h 13m) 1410/2057 tested (1195 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1411/2057 tested (1196 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1413/2057 tested (1198 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1414/2057 tested (1199 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1416/2057 tested (1201 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 13m) 1417/2057 tested (1202 survived, 76 timed out)
Mutation testing 68% (elapsed: ~2h 41m, remaining: ~1h 12m) 1419/2057 tested (1204 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1420/2057 tested (1205 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1422/2057 tested (1207 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1423/2057 tested (1208 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 12m) 1425/2057 tested (1210 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 11m) 1426/2057 tested (1211 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 42m, remaining: ~1h 11m) 1428/2057 tested (1213 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1429/2057 tested (1214 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1431/2057 tested (1216 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1432/2057 tested (1217 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 11m) 1433/2057 tested (1218 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 10m) 1435/2057 tested (1220 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 43m, remaining: ~1h 10m) 1436/2057 tested (1221 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 10m) 1438/2057 tested (1223 survived, 76 timed out)
Mutation testing 69% (elapsed: ~2h 44m, remaining: ~1h 10m) 1439/2057 tested (1224 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 10m) 1441/2057 tested (1226 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 10m) 1442/2057 tested (1227 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 9m) 1444/2057 tested (1229 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 44m, remaining: ~1h 9m) 1445/2057 tested (1230 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1447/2057 tested (1232 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1448/2057 tested (1233 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1450/2057 tested (1235 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 9m) 1451/2057 tested (1236 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 8m) 1453/2057 tested (1238 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 45m, remaining: ~1h 8m) 1454/2057 tested (1239 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 8m) 1456/2057 tested (1241 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 8m) 1457/2057 tested (1242 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 8m) 1459/2057 tested (1244 survived, 76 timed out)
Mutation testing 70% (elapsed: ~2h 46m, remaining: ~1h 8m) 1460/2057 tested (1245 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 7m) 1462/2057 tested (1247 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 46m, remaining: ~1h 7m) 1463/2057 tested (1248 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 7m) 1465/2057 tested (1250 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 7m) 1466/2057 tested (1251 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 7m) 1468/2057 tested (1253 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 7m) 1469/2057 tested (1254 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 6m) 1470/2057 tested (1255 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 47m, remaining: ~1h 6m) 1472/2057 tested (1257 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 6m) 1473/2057 tested (1258 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 6m) 1475/2057 tested (1260 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 6m) 1476/2057 tested (1261 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 6m) 1478/2057 tested (1263 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 5m) 1479/2057 tested (1264 survived, 76 timed out)
Mutation testing 71% (elapsed: ~2h 48m, remaining: ~1h 5m) 1481/2057 tested (1266 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 5m) 1482/2057 tested (1267 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 5m) 1484/2057 tested (1269 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 5m) 1485/2057 tested (1270 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1487/2057 tested (1272 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1488/2057 tested (1273 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 49m, remaining: ~1h 4m) 1490/2057 tested (1275 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 4m) 1491/2057 tested (1276 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 4m) 1493/2057 tested (1278 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 4m) 1494/2057 tested (1279 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1496/2057 tested (1281 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1497/2057 tested (1282 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 50m, remaining: ~1h 3m) 1499/2057 tested (1284 survived, 76 timed out)
Mutation testing 72% (elapsed: ~2h 51m, remaining: ~1h 3m) 1500/2057 tested (1285 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 3m) 1502/2057 tested (1287 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 3m) 1503/2057 tested (1288 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1505/2057 tested (1290 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1506/2057 tested (1291 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 51m, remaining: ~1h 2m) 1507/2057 tested (1292 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 2m) 1509/2057 tested (1294 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 2m) 1510/2057 tested (1295 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 2m) 1512/2057 tested (1297 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 2m) 1513/2057 tested (1298 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1516/2057 tested (1300 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 52m, remaining: ~1h 1m) 1517/2057 tested (1301 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 1m) 1519/2057 tested (1303 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 1m) 1520/2057 tested (1304 survived, 76 timed out)
Mutation testing 73% (elapsed: ~2h 53m, remaining: ~1h 0m) 1522/2057 tested (1306 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1523/2057 tested (1307 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1525/2057 tested (1309 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 53m, remaining: ~1h 0m) 1526/2057 tested (1310 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~1h 0m) 1528/2057 tested (1312 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~1h 0m) 1529/2057 tested (1313 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1531/2057 tested (1315 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1532/2057 tested (1316 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1533/2057 tested (1317 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 54m, remaining: ~59m) 1535/2057 tested (1319 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~59m) 1536/2057 tested (1320 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~59m) 1538/2057 tested (1322 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~59m) 1539/2057 tested (1323 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~58m) 1541/2057 tested (1325 survived, 76 timed out)
Mutation testing 74% (elapsed: ~2h 55m, remaining: ~58m) 1542/2057 tested (1326 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 55m, remaining: ~58m) 1544/2057 tested (1328 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~58m) 1545/2057 tested (1329 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~58m) 1547/2057 tested (1331 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1548/2057 tested (1332 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1550/2057 tested (1334 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1551/2057 tested (1335 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 56m, remaining: ~57m) 1553/2057 tested (1337 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~57m) 1554/2057 tested (1338 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~57m) 1556/2057 tested (1340 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1557/2057 tested (1341 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1559/2057 tested (1343 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1560/2057 tested (1344 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 57m, remaining: ~56m) 1562/2057 tested (1346 survived, 76 timed out)
Mutation testing 75% (elapsed: ~2h 58m, remaining: ~56m) 1563/2057 tested (1347 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~56m) 1565/2057 tested (1349 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1566/2057 tested (1350 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1568/2057 tested (1352 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1569/2057 tested (1353 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 58m, remaining: ~55m) 1571/2057 tested (1355 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~55m) 1572/2057 tested (1356 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~55m) 1573/2057 tested (1357 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1575/2057 tested (1359 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1576/2057 tested (1360 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1578/2057 tested (1362 survived, 76 timed out)
Mutation testing 76% (elapsed: ~2h 59m, remaining: ~54m) 1579/2057 tested (1363 survived, 76 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~54m) 1581/2057 tested (1365 survived, 76 timed out)
Mutation testing 76% (elapsed: ~3h 0m, remaining: ~54m) 1582/2057 tested (1366 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1584/2057 tested (1368 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1585/2057 tested (1369 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1587/2057 tested (1371 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 0m, remaining: ~53m) 1588/2057 tested (1372 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~53m) 1590/2057 tested (1374 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~53m) 1591/2057 tested (1375 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1593/2057 tested (1377 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1594/2057 tested (1378 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1596/2057 tested (1380 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 1m, remaining: ~52m) 1597/2057 tested (1381 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~52m) 1599/2057 tested (1383 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~52m) 1600/2057 tested (1384 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~51m) 1602/2057 tested (1386 survived, 76 timed out)
Mutation testing 77% (elapsed: ~3h 2m, remaining: ~51m) 1603/2057 tested (1387 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~51m) 1605/2057 tested (1389 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 2m, remaining: ~51m) 1606/2057 tested (1390 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~51m) 1608/2057 tested (1392 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1609/2057 tested (1393 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1610/2057 tested (1394 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1612/2057 tested (1396 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1613/2057 tested (1397 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 3m, remaining: ~50m) 1615/2057 tested (1399 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~50m) 1616/2057 tested (1400 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1618/2057 tested (1402 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1619/2057 tested (1403 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1621/2057 tested (1405 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1622/2057 tested (1406 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 4m, remaining: ~49m) 1624/2057 tested (1408 survived, 76 timed out)
Mutation testing 78% (elapsed: ~3h 5m, remaining: ~49m) 1625/2057 tested (1409 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1627/2057 tested (1411 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1628/2057 tested (1412 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1630/2057 tested (1414 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1631/2057 tested (1415 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 5m, remaining: ~48m) 1633/2057 tested (1417 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~48m) 1634/2057 tested (1418 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1636/2057 tested (1420 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1637/2057 tested (1421 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1639/2057 tested (1423 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1640/2057 tested (1424 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 6m, remaining: ~47m) 1642/2057 tested (1426 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~47m) 1643/2057 tested (1427 survived, 76 timed out)
Mutation testing 79% (elapsed: ~3h 7m, remaining: ~46m) 1645/2057 tested (1429 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1646/2057 tested (1430 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1647/2057 tested (1431 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1649/2057 tested (1433 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 7m, remaining: ~46m) 1650/2057 tested (1434 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~46m) 1652/2057 tested (1436 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1653/2057 tested (1437 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1655/2057 tested (1439 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1656/2057 tested (1440 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1658/2057 tested (1442 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 8m, remaining: ~45m) 1659/2057 tested (1443 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~45m) 1661/2057 tested (1445 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~44m) 1662/2057 tested (1446 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~44m) 1664/2057 tested (1448 survived, 76 timed out)
Mutation testing 80% (elapsed: ~3h 9m, remaining: ~44m) 1665/2057 tested (1449 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~44m) 1667/2057 tested (1451 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 9m, remaining: ~44m) 1668/2057 tested (1452 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~44m) 1670/2057 tested (1454 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~43m) 1671/2057 tested (1455 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~43m) 1673/2057 tested (1457 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~43m) 1674/2057 tested (1458 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~43m) 1676/2057 tested (1460 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 10m, remaining: ~43m) 1677/2057 tested (1461 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~43m) 1679/2057 tested (1463 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~42m) 1680/2057 tested (1464 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~42m) 1682/2057 tested (1466 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~42m) 1683/2057 tested (1467 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~42m) 1684/2057 tested (1468 survived, 76 timed out)
Mutation testing 81% (elapsed: ~3h 11m, remaining: ~42m) 1686/2057 tested (1470 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~42m) 1687/2057 tested (1471 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~41m) 1689/2057 tested (1473 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~41m) 1690/2057 tested (1474 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~41m) 1692/2057 tested (1476 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~41m) 1693/2057 tested (1477 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 12m, remaining: ~41m) 1695/2057 tested (1479 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~41m) 1696/2057 tested (1480 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~40m) 1698/2057 tested (1482 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~40m) 1699/2057 tested (1483 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~40m) 1701/2057 tested (1485 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~40m) 1702/2057 tested (1486 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 13m, remaining: ~40m) 1704/2057 tested (1488 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~40m) 1705/2057 tested (1489 survived, 76 timed out)
Mutation testing 82% (elapsed: ~3h 14m, remaining: ~39m) 1707/2057 tested (1491 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~39m) 1708/2057 tested (1492 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~39m) 1710/2057 tested (1494 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~39m) 1711/2057 tested (1495 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 14m, remaining: ~39m) 1713/2057 tested (1497 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~39m) 1714/2057 tested (1498 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~38m) 1715/2057 tested (1499 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~38m) 1717/2057 tested (1501 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~38m) 1718/2057 tested (1502 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~38m) 1720/2057 tested (1504 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 15m, remaining: ~38m) 1721/2057 tested (1505 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~37m) 1723/2057 tested (1507 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~37m) 1724/2057 tested (1508 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~37m) 1726/2057 tested (1510 survived, 76 timed out)
Mutation testing 83% (elapsed: ~3h 16m, remaining: ~37m) 1727/2057 tested (1511 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~37m) 1729/2057 tested (1513 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 16m, remaining: ~37m) 1730/2057 tested (1514 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~36m) 1732/2057 tested (1516 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~36m) 1733/2057 tested (1517 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~36m) 1735/2057 tested (1519 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~36m) 1736/2057 tested (1520 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~36m) 1738/2057 tested (1522 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 17m, remaining: ~36m) 1739/2057 tested (1523 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~35m) 1741/2057 tested (1525 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~35m) 1742/2057 tested (1526 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~35m) 1744/2057 tested (1528 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~35m) 1745/2057 tested (1529 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~35m) 1746/2057 tested (1530 survived, 76 timed out)
Mutation testing 84% (elapsed: ~3h 18m, remaining: ~35m) 1748/2057 tested (1532 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~35m) 1749/2057 tested (1533 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~34m) 1751/2057 tested (1535 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~34m) 1752/2057 tested (1536 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~34m) 1754/2057 tested (1538 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~34m) 1755/2057 tested (1539 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 19m, remaining: ~34m) 1757/2057 tested (1541 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~34m) 1758/2057 tested (1542 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~33m) 1760/2057 tested (1544 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~33m) 1761/2057 tested (1545 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~33m) 1763/2057 tested (1547 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~33m) 1764/2057 tested (1548 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 20m, remaining: ~33m) 1766/2057 tested (1550 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~32m) 1767/2057 tested (1551 survived, 76 timed out)
Mutation testing 85% (elapsed: ~3h 21m, remaining: ~32m) 1769/2057 tested (1553 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~32m) 1770/2057 tested (1554 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~32m) 1772/2057 tested (1556 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~32m) 1773/2057 tested (1557 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 21m, remaining: ~32m) 1774/2057 tested (1558 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~31m) 1776/2057 tested (1560 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~31m) 1777/2057 tested (1561 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~31m) 1779/2057 tested (1563 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~31m) 1780/2057 tested (1564 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~31m) 1782/2057 tested (1566 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 22m, remaining: ~31m) 1783/2057 tested (1567 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~30m) 1785/2057 tested (1569 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~30m) 1786/2057 tested (1570 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~30m) 1788/2057 tested (1572 survived, 76 timed out)
Mutation testing 86% (elapsed: ~3h 23m, remaining: ~30m) 1789/2057 tested (1573 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~30m) 1791/2057 tested (1575 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 23m, remaining: ~30m) 1792/2057 tested (1576 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~29m) 1794/2057 tested (1578 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~29m) 1795/2057 tested (1579 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~29m) 1797/2057 tested (1581 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~29m) 1798/2057 tested (1582 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~29m) 1800/2057 tested (1584 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 24m, remaining: ~29m) 1801/2057 tested (1585 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~28m) 1803/2057 tested (1587 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~28m) 1804/2057 tested (1588 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~28m) 1805/2057 tested (1589 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~28m) 1807/2057 tested (1591 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~28m) 1808/2057 tested (1592 survived, 76 timed out)
Mutation testing 87% (elapsed: ~3h 25m, remaining: ~28m) 1810/2057 tested (1594 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~27m) 1811/2057 tested (1595 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~27m) 1813/2057 tested (1597 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~27m) 1814/2057 tested (1598 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~27m) 1816/2057 tested (1600 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~27m) 1817/2057 tested (1601 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 26m, remaining: ~27m) 1819/2057 tested (1603 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~26m) 1820/2057 tested (1604 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~26m) 1822/2057 tested (1606 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~26m) 1823/2057 tested (1607 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~26m) 1825/2057 tested (1609 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~26m) 1826/2057 tested (1610 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 27m, remaining: ~26m) 1828/2057 tested (1612 survived, 76 timed out)
Mutation testing 88% (elapsed: ~3h 28m, remaining: ~25m) 1829/2057 tested (1613 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~25m) 1831/2057 tested (1615 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~25m) 1832/2057 tested (1616 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~25m) 1834/2057 tested (1618 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~25m) 1835/2057 tested (1619 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 28m, remaining: ~25m) 1837/2057 tested (1621 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~24m) 1838/2057 tested (1622 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~24m) 1840/2057 tested (1624 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~24m) 1841/2057 tested (1625 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~24m) 1843/2057 tested (1627 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~24m) 1844/2057 tested (1628 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 29m, remaining: ~24m) 1845/2057 tested (1629 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~23m) 1847/2057 tested (1631 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~23m) 1848/2057 tested (1632 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~23m) 1850/2057 tested (1634 survived, 76 timed out)
Mutation testing 89% (elapsed: ~3h 30m, remaining: ~23m) 1851/2057 tested (1635 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~23m) 1853/2057 tested (1637 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 30m, remaining: ~23m) 1854/2057 tested (1638 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~22m) 1856/2057 tested (1640 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~22m) 1857/2057 tested (1641 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~22m) 1859/2057 tested (1643 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~22m) 1860/2057 tested (1644 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~22m) 1862/2057 tested (1646 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 31m, remaining: ~22m) 1863/2057 tested (1647 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~21m) 1865/2057 tested (1649 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~21m) 1866/2057 tested (1650 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~21m) 1868/2057 tested (1652 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~21m) 1869/2057 tested (1653 survived, 76 timed out)
Mutation testing 90% (elapsed: ~3h 32m, remaining: ~21m) 1871/2057 tested (1655 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 32m, remaining: ~21m) 1872/2057 tested (1656 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~20m) 1874/2057 tested (1658 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~20m) 1875/2057 tested (1659 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~20m) 1877/2057 tested (1661 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~20m) 1878/2057 tested (1662 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~20m) 1879/2057 tested (1663 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 33m, remaining: ~20m) 1881/2057 tested (1665 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~19m) 1882/2057 tested (1666 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~19m) 1884/2057 tested (1668 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~19m) 1885/2057 tested (1669 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~19m) 1887/2057 tested (1671 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~19m) 1888/2057 tested (1672 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 34m, remaining: ~18m) 1890/2057 tested (1674 survived, 76 timed out)
Mutation testing 91% (elapsed: ~3h 35m, remaining: ~18m) 1891/2057 tested (1675 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~18m) 1893/2057 tested (1677 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~18m) 1894/2057 tested (1678 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~18m) 1896/2057 tested (1680 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~18m) 1897/2057 tested (1681 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 35m, remaining: ~17m) 1899/2057 tested (1683 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~17m) 1900/2057 tested (1684 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~17m) 1902/2057 tested (1686 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~17m) 1903/2057 tested (1687 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~17m) 1905/2057 tested (1689 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~17m) 1906/2057 tested (1690 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 36m, remaining: ~16m) 1908/2057 tested (1692 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~16m) 1909/2057 tested (1693 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~16m) 1911/2057 tested (1695 survived, 76 timed out)
Mutation testing 92% (elapsed: ~3h 37m, remaining: ~16m) 1912/2057 tested (1696 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~16m) 1914/2057 tested (1698 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~16m) 1915/2057 tested (1699 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 37m, remaining: ~15m) 1917/2057 tested (1701 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~15m) 1918/2057 tested (1702 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~15m) 1919/2057 tested (1703 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~15m) 1921/2057 tested (1705 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~15m) 1922/2057 tested (1706 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~15m) 1924/2057 tested (1708 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 38m, remaining: ~15m) 1925/2057 tested (1709 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~14m) 1927/2057 tested (1711 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~14m) 1928/2057 tested (1712 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~14m) 1930/2057 tested (1714 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~14m) 1931/2057 tested (1715 survived, 76 timed out)
Mutation testing 93% (elapsed: ~3h 39m, remaining: ~14m) 1933/2057 tested (1717 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 39m, remaining: ~13m) 1934/2057 tested (1718 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~13m) 1936/2057 tested (1720 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~13m) 1937/2057 tested (1721 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~13m) 1939/2057 tested (1723 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~13m) 1940/2057 tested (1724 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~13m) 1942/2057 tested (1726 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 40m, remaining: ~12m) 1943/2057 tested (1727 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~12m) 1945/2057 tested (1729 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~12m) 1946/2057 tested (1730 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~12m) 1948/2057 tested (1732 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~12m) 1949/2057 tested (1733 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~12m) 1951/2057 tested (1735 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 41m, remaining: ~11m) 1952/2057 tested (1736 survived, 76 timed out)
Mutation testing 94% (elapsed: ~3h 42m, remaining: ~11m) 1954/2057 tested (1738 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~11m) 1955/2057 tested (1739 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~11m) 1956/2057 tested (1740 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~11m) 1958/2057 tested (1742 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~11m) 1959/2057 tested (1743 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 42m, remaining: ~10m) 1961/2057 tested (1745 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~10m) 1962/2057 tested (1746 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~10m) 1964/2057 tested (1748 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~10m) 1965/2057 tested (1749 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~10m) 1967/2057 tested (1751 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~10m) 1968/2057 tested (1752 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 43m, remaining: ~9m) 1970/2057 tested (1754 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~9m) 1971/2057 tested (1755 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~9m) 1973/2057 tested (1757 survived, 76 timed out)
Mutation testing 95% (elapsed: ~3h 44m, remaining: ~9m) 1974/2057 tested (1758 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~9m) 1976/2057 tested (1760 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~9m) 1977/2057 tested (1761 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 44m, remaining: ~8m) 1979/2057 tested (1763 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~8m) 1980/2057 tested (1764 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~8m) 1982/2057 tested (1766 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~8m) 1983/2057 tested (1767 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~8m) 1985/2057 tested (1769 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~8m) 1986/2057 tested (1770 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 45m, remaining: ~7m) 1988/2057 tested (1772 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~7m) 1989/2057 tested (1773 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~7m) 1991/2057 tested (1775 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~7m) 1992/2057 tested (1776 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~7m) 1994/2057 tested (1778 survived, 76 timed out)
Mutation testing 96% (elapsed: ~3h 46m, remaining: ~7m) 1995/2057 tested (1779 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 46m, remaining: ~6m) 1996/2057 tested (1780 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~6m) 1998/2057 tested (1782 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~6m) 1999/2057 tested (1783 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~6m) 2001/2057 tested (1785 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~6m) 2002/2057 tested (1786 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~6m) 2004/2057 tested (1788 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 47m, remaining: ~5m) 2005/2057 tested (1789 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~5m) 2007/2057 tested (1791 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~5m) 2008/2057 tested (1792 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~5m) 2010/2057 tested (1794 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~5m) 2011/2057 tested (1795 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~4m) 2013/2057 tested (1797 survived, 76 timed out)
Mutation testing 97% (elapsed: ~3h 48m, remaining: ~4m) 2014/2057 tested (1798 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~4m) 2016/2057 tested (1800 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~4m) 2017/2057 tested (1801 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~4m) 2019/2057 tested (1803 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~4m) 2020/2057 tested (1804 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~3m) 2022/2057 tested (1806 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 49m, remaining: ~3m) 2023/2057 tested (1807 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~3m) 2025/2057 tested (1809 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~3m) 2026/2057 tested (1810 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~3m) 2028/2057 tested (1812 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~2m) 2032/2057 tested (1813 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~2m) 2033/2057 tested (1814 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 50m, remaining: ~2m) 2035/2057 tested (1816 survived, 76 timed out)
Mutation testing 98% (elapsed: ~3h 51m, remaining: ~2m) 2036/2057 tested (1817 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: ~2m) 2038/2057 tested (1819 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: ~2m) 2039/2057 tested (1820 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: ~1m) 2041/2057 tested (1822 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: ~1m) 2042/2057 tested (1823 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 51m, remaining: ~1m) 2043/2057 tested (1824 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: ~1m) 2045/2057 tested (1826 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: ~1m) 2046/2057 tested (1827 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: ~1m) 2048/2057 tested (1829 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: <1m) 2049/2057 tested (1830 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: <1m) 2051/2057 tested (1832 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 52m, remaining: <1m) 2052/2057 tested (1833 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: <1m) 2054/2057 tested (1835 survived, 76 timed out)
Mutation testing 99% (elapsed: ~3h 53m, remaining: <1m) 2055/2057 tested (1836 survived, 76 timed out)

All tests
  ✓ All tests (killed 143)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap !== "undefined") {

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {});

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", null);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", 0);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "hello"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           1 + 1("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("buggy", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(null, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap(undefined, definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", definition + 1);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", definition * 2);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", definition - 1);

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define !== "function" && define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "undefined" && define.amd) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (define.amd && typeof define !== "function") {

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           void 0(definition);

[Survived] PrecomputedMutator
q.js:47:9
-           define(definition);
+           null(definition);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function (error) {
+     throw error;
+   });

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function (error) {
+     console.log(error);
+   });

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(function (error) {
+     return error;
+   });

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "undefined" && ses.ok()) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "undefined" || ses.ok()) {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "undefined" && ses.ok() && Math.random() > 0.5) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.isNotOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOkay()) {

[Survived] PrecomputedMutator
q.js:51:14
-           if (!ses.ok()) {
+           if (!ses.makeQ()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window === "undefined" || typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" || typeof self === "undefined") {

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = 1 + 1();

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = "string"();

[Survived] PrecomputedMutator
q.js:66:20
-           global.Q = definition();
+           global.Q = null();

[Survived] PrecomputedMutator
q.js:121:17
-               if (domain) {
+               if (domain && false) {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.run();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.bind();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length > 0) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length === 0) {

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, "0");

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   clearTimeout(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(function () {
+     flush();
+   }, 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain + 1) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain.foo) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.run();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:178:13
-           if (!flushing) {
+           if (flushing + 1) {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "string") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(self);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush());

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(flush());

[Survived] PrecomputedMutator
q.js:206:30
-                   setImmediate(flush);
+                   setImmediate(runSingle(flush));

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "function") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port2.onmessage(0);

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.onmessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(null);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(undefined);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush.bind(null), 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(requestTick.bind(null), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:228:13
-               requestPortTick();
+               requestTick();

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1000);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(requestTick, 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, Math.random());

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (!flushing || true) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing && false) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing ? false : true) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (length - 1);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (length + 1);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (this.hasOwnProperty(index)) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (this[index] !== undefined) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (Object.prototype.hasOwnProperty.call(this, index)) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (++index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index++ >= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 1 >= length) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index == length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index *= 2) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index in this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index > this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this.length) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index++], index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index * 2], index);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = undefined(basis, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index++], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index + 1], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index - 1], index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i === this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = 0) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i + 1] === value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] == value) {

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, [value, index, self]));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self, undefined));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, self, null));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(this, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(Object.create(null), value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, "foo", index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key in object.prototype) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of Object.keys(object)) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) || object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(undefined, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key * 2)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key++);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key + 1);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(key - 1);

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_keys(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           object_hasOwnProperty(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:9
-           object_toString(exception) === "[object StopIteration]" ||
+           array_map(exception) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.prototype) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== undefined) {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "string" && error !== null && error.stack

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (hasStacks && promise.stack && typeof error === "undefined" && error !== null && error.stack

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.source; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise + 1; !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise.then(); !!p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !p; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p !== promise; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; p.source !== promise; p = p.source) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p && p.source; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p || p.source; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p ? p.source : null; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.reverse()) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.slice(1)) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.concat([1, 2, 3])) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ < p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ !== p.stackCounter)) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: 0,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__" + 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__" + "1", {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__" + null, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.length);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.toUpperCase());

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.split(""));

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.code);

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.concat("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.pop("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:30
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.slice("\n" + STACK_JUMP_SEPARATOR + "\n");

[Survived] PrecomputedMutator
q.js:396:42
-           var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
+           var concatedStacks = stacks.join("\n" + "From previous event:" + "\n");

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split(""));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.toUpperCase());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.slice(1));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "error", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "trace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack.toUpperCase(),
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\r\n");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\u2028");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = Math.floor(Math.random() * array.length); i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > 0; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i *= 2) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) || isNodeFrame(line) || line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (isInternalFrame(line) && isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) || !isNodeFrame(line) || line) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isPromiseAlike(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("\t");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:30
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.indexOf("module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.toLowerCase());

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.replace("module.js", "node.js"));

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt2) {

[Survived] PrecomputedMutator
q.js:424:9
-       if (attempt1) {
+       if (attempt3) {

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "string"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1] + 1)];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[2] + 1)];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split(".")[0]);

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[0]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2.length) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2.pop()) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.replace(":", ""));

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3.join(":")) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], undefined(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], NaN(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], -1(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3.length)];

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[0](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber[1](stackLine);

[Survived] PrecomputedMutator
q.js:442:33
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber.length(stackLine);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.substring(1));

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.toUpperCase());

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] === null) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber[0] === undefined) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber[0] === "undefined") {

[Survived] PrecomputedMutator
q.js:466:21
-           var lines = e.stack.split("\n");
+           var lines = e.stack.slice("\n");

[Survived] PrecomputedMutator
q.js:466:21
-           var lines = e.stack.split("\n");
+           var lines = e.stack.substr("\n");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\r");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\f");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\v");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[lines.length - 1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("@@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(":")[2]);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[0] === qFileName) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[1] >= qStartingLine) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber[1] <= qEndingLine) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console === "undefined") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "object") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(this, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(null, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback.apply(window, arguments));

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.toString(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, function () {
+     return arguments;
+   });

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:558:20
-       var deferred = object_create(defer.prototype);
+       var deferred = Q.resolve(defer.prototype);

[Survived] PrecomputedMutator
q.js:558:20
-       var deferred = object_create(defer.prototype);
+       var deferred = Q.reject(defer.prototype);

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op !== "when" && operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[0]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(null);

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(promise, args);

[Survived] PrecomputedMutator
q.js:570:17
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promise, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.promise, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.source, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise.valueOf(), args);

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length === 0) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (resolvedPromise) {

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue + 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue - 1(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:27
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearerValue * 2(resolvedPromise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise + 1);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise * 2);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise - 1);

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue) && nearerValue.inspect().state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (typeof nearerValue === "function") {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue.valueOf() !== nearerValue) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseLike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (messages.length > 0) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (!Q.longStackSupport) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.slice(e.stack.indexOf("\n") + 1));

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.split("\n").slice(1).join("\n"));

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.includes("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.match("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport ? hasStacks : !hasStacks) {

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.promiseDispatch.apply(newPromise, message));

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.promise, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.value, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise.then(function (value) {
+     return value;
+   }), message);

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === null) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.promise !== undefined) {

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(resolve(otherValue));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(otherValue));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(notify(value));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill({}));

[Survived] PrecomputedMutator
q.js:649:13
-           if (resolvedPromise) {
+           if (resolvedPromise + 1) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (progressListeners.length) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (progressListeners.length > 0) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise && progressListeners.length > 0) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   promise(progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   reject(progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   notify(progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener("progress" + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress.toString());

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress.length);

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments[0] > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 1) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[0]));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.length));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[1]));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_splice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(null, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(undefined, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice([], 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, x + 1));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(0);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (typeof resolver !== "object") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver === "function") {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = promise.reject();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.resolve);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject("error"), deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve("value"), deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify("progress"), deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.fulfill);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.makeNodeResolver);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           Q.reject(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return null(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return undefined(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return 0(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(null).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x + y);

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, null]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x < y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x > y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i >= len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = i + 1) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               null(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               undefined(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               0(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] + 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] - 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] * 2).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return null(Q.race);

[Survived] PrecomputedMutator
q.js:773:12
-       return this.then(Q.race);
+       return undefined(Q.race);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === "undefined") {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (typeof inspect === "object") {

[Survived] PrecomputedMutator
q.js:807:17
-               if (descriptor[op]) {
+               if (descriptor[op] + 1) {

[Survived] PrecomputedMutator
q.js:808:26
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args, null);

[Survived] PrecomputedMutator
q.js:808:26
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args, undefined);

[Survived] PrecomputedMutator
q.js:808:26
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args, 0);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply("hello", args);

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(1));

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.reject);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.resolve);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.then);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.apply(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.bind(promise, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call("hello", op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op.toLowerCase(), args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op.split("").reverse().join(""), args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[0]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args[1]);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = resolve(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(exception.message);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("New error message"));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect().state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.apply(this).state) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:861:13
-           if (typeof rejected === "function") {
+           if (rejected instanceof Function) {

[Survived] PrecomputedMutator
q.js:861:13
-           if (typeof rejected === "function") {
+           if (Object.prototype.toString.call(rejected) === "[object Function]") {

[Survived] PrecomputedMutator
q.js:862:13
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self);

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(value + 1) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(value - 1) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(value * 2) : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(0);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror()) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror.call(null)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror.call(Q)) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.message);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.name);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(e.stack);

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === true) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.resolve(newValue);

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.progress(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify("<PLACEHOLDER>");

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(function () {});

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(function (x) {
+     return x + 1;
+   });

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(function (x) {
+     throw new Error("test");
+   });

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.fcall(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.resolve(callback);

[Survived] PrecomputedMutator
q.js:934:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q(null));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q(undefined));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q(1));

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall({}).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(progressed, fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, progressed, rejected);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(null).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(Promise.reject()).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(_fulfilled(value), rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(_rejected(exception), rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, resolved, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return undefined;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     throw new Error('Test error');
+   });

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return 1(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return null(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:12
-       return Q(promise).thenResolve(value);
+       return undefined(promise).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(0).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(0);

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw reason.message;
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.reject(reason)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.when(promise)).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(Q.then(promise, function (value) {
+     return value;
+   })).thenReject(reason);

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) || value.inspect().state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromise(value) && value.inspect().state === "rejected") {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isObject(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value * 2)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value - 1)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.value !== undefined) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isPromise(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPending(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(undefined) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(Promise.reject()) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromiseAlike(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isFulfilled(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.then) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.catch) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.finally) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || object.isFulfilled().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || object.isRejected().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:34
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object) || object.then().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isRejected(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.thenResolve()) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.thenReject()) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.then(function () {
+     throw reason;
+   })) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections && false) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections || true) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections ? true : false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections && false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections || true) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (!trackUnhandledRejections ^ true) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.length > 0) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (!unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons.length, 0) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections[0], promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.indexOf(promise) === -1, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     throw new Error("test");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.reject("test");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.resolve("test");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "Handled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "Unhandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.stack, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.message, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason.toString(), promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   unhandledReasons.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push("promise");

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined" && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.pop(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.shift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.unshift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.length);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.split("\n").length);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.stack.replace(/[\n]/g, ""));

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === true) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(reportedUnhandledRejections);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.splice(), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at > -1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledReasons[atReport]);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport >= -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("unhandledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:34
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("handledRejection", unhandledReasons[at], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 10], promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], null);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], undefined);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then());

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, reportedUnhandledRejections.length - 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.length = 0(atReport, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport + 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length - 1, 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 2);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 3);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at = 0);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at * 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, NaN);

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledReasons.length = 0();

[Survived] PrecomputedMutator
q.js:1122:5
-       resetUnhandledRejections();
+       unhandledRejections.length = 0();

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected == true) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (typeof rejected == "function") {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected.call(this, reason)) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, reason, "foo");

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection(rejection, "foo", reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       trackRejection("foo", reason);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.message, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, 0);

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === "undefined") {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === "null") {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args, void 0);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args[0], args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.map(function (arg) {
+     return arg;
+   }));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args[0]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice(1));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, [args[0]]);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].call(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].bind(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(this, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.reverse());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply({}, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, [].concat(args));

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_entries(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.progress);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(new Error());

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, args, op);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(args, op, object);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, null);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, undefined);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, []);

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, rejected, "extra argument");

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, null);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value + 1).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value * 2).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value - 1).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, () => {});

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.then().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.catch().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.finally().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply("undefined", array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator[verb] + 1(arg);

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator[verb] - 1(arg);

[Survived] PrecomputedMutator
q.js:1298:30
-                       result = generator[verb](arg);
+                       result = generator[verb] * 2(arg);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("foo");

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return resolve(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(exception.toString());

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.rejected) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isRejected()) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isPending()) {

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.then());

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.catch());

[Survived] PrecomputedMutator
q.js:1303:30
-                       return Q(result.value);
+                       return Q(result.value.finally());

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, function () {}, function () {});

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value.done, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value.then, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, undefined, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, undefined);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, null);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, function () {});

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb]("foo");

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.name === "StopIteration") {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception.constructor === StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (exception instanceof StopIteration) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration === true(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration !== false(exception)) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (typeof isStopIteration === "function"(exception)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.value)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.stack)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.message);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception.stack);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return Promise.reject(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.toString());

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, errback, callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback, result);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback + result);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result[0], callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.then(function (value) {
+     return value;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, resolve, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, errback.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, errback.bind(continuer, "next"));

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, errback.bind(continuer, "throw", "next"));

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.toString(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply("foo", arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.call(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.apply(continuer, "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next", 1), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "reject");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "resolve");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw"), "throw");

[Survived] PrecomputedMutator
q.js:1324:38
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(null, "throw", null), "throw");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.resolve(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator).next());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator).then());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator).catch());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.reject(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.resolve(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:12
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.all(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.bind(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(this))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(this, []))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, any(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(0)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self.promiseDispatch(deferred.resolve, op, args));

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(deferred.resolve(op, args));

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(deferred.reject(op, args));

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.caller(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(this, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, [args]);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return object.dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return 1(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return null(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return undefined(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q({}).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat(1));

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.reverse());

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = deferred.reject();

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = Q.defer();

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = Q.reject();

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, "foo", args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, "bar", args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           deferred.promise.reject(deferred.resolve, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args[0]);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(undefined).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q({}).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", ["" + key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, "wrongKey"]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key, null]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("apply", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.reject(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.defer(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.all(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(0).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("apply", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value, 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.promiseDispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("apply", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("hasOwnProperty", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q(null).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q({}).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [value, key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, 0]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("apply", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, key]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name + "foo", args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args, "extra arg"]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(["extra arg"])]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, null]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, null]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, undefined]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, ""]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(promises[index]).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(promises[promises.length - 1 - index]).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(promises[index + 1]).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(args, 1)]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(args, "test")]);

[Survived] PrecomputedMutator
q.js:1494:46
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(args, [])]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(null, 2)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(undefined, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("apply", [name, args]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, [args]]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, args, null]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.reject("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("get", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments.slice(1))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1500:64
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.concat(["extra"])]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q("foo").dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("post", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.concat(array_slice(arguments, 1))]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [args, void 0]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.concat([1])]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.map(function (x) {
+     return x + 1;
+   })]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [null, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q({}).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("post", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(1 + arguments.length)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments[0] + 1)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments.slice(1))]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(undefined, 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:72
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.reject("apply", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("valueOf", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [null, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice("foo")]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q({});

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 2), 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 3), 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, array.length);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.push(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.slice(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.map(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([]);

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               args + args(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:13
-               args.concat(array_slice(arguments))
+               args * 2(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 3))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(array_slice(arguments, 0, 1)))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", ["foo"]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.when(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.length).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object[0]).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.foo).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("undefined", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1, 2, 3, 4, 5]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("indexOf", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.reject("keys", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   !isPromise(promise)

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   snapshot.state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   isPromise && false(promise) &&

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
+                   isPromise || true(promise) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     throw new Error("Injected error");
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return null;
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return "injected value";
+   })) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.inspect.reason()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length - 1) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.reverse());

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat(Q.resolve(42)));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           undefined({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index + 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index - 1,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index * 2,
+     value: progress
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve([]);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(new Error('foo'));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return race(this);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length === promises.length) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.all();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.delay();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.reject();

[Survived] PrecomputedMutator
q.js:1634:20
-       var deferred = Q.defer();
+       var deferred = Q.when();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onFulfilled, onRejected, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onRejected, onFulfilled, onProgress));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(onProgress, onFulfilled, onRejected));

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.reject(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.resolve(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when.then(promise, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(null, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(undefined, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(0, onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected.bind(null), onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected.call(null), onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected.apply(null), onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onProgress(null));

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, function () {});

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               Q.reject(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject("rejected");

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return allResolved(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.all);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.any);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(this.allResolved);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Q.allSettled);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Q.all);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(Q.any);

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(any, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "anyResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "any");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "fail");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.then);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_slice(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.length, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.reverse(), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject());

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer());

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then());

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.reject());

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.cancel());

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function (value) {
+     return value + 1;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function (value) {
+     return value * 2;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function (value) {
+     return value - 1;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Q.resolve(), noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Q.reject(), noop);

[Survived] PrecomputedMutator
q.js:1685:34
-               return when(promise, noop, noop);
+               return when(promise, Q.defer(), noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     throw new Error("Rejected promise");
+   });

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     return "Fulfilled promise";
+   });

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, function () {
+     return Q.reject("Rejected promise");
+   });

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(Promise.reject());

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.reverse()).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.concat(deferred.promise)).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.reject());

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.resolve());

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.notify());

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.inspect.foo();

[Survived] PrecomputedMutator
q.js:1716:24
-                   return promise.inspect();
+                   return promise.inspect + 1();

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(undefined, undefined);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(null, null);

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, regardless());

[Survived] PrecomputedMutator
q.js:1718:45
-               return promise.then(regardless, regardless);
+               return promise.then(regardless, function () {
+     return promise.inspect();
+   });

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, void 0);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.reject(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.defer(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q.when(object).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(null).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(undefined).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then("foo", rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (error) {
+     throw error;
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (error) {
+     console.log(error);
+   });

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, function (error) {
+     return Q.reject(error);
+   });

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(NaN, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(0, rejected);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(progressed, void 0, void 0);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, progressed, void 0);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(null).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(undefined).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, 1, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(this, this, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, this, progressed);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, null);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, undefined);

[Survived] PrecomputedMutator
q.js:1756:38
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, function (value) {
+     return value;
+   });

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.reject(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.defer(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.when(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(object + 1)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(object - 1)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(object * 2)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](Q.reject());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](Q.resolve());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](Q.notify());

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply(null, [])) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply(null, [undefined])) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply(null, [null])) {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = null(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = undefined(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = 0(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback(promise));

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(promise.then(callback));

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(undefined);

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return Q.when().then(function () {

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return Q.reject().then(function () {

[Survived] PrecomputedMutator
q.js:1787:16
-           return callback.fcall().then(function () {
+           return Q.resolve().then(function () {

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress[0]);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress.slice());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.reject(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.defer(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q.when(object).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(42).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progress, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected(new Error("This is a bug")), progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, resolved(null), progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, function () {});

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, null);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(error, undefined);

[Survived] PrecomputedMutator
q.js:1808:13
-               makeStackTraceLong(error, promise);
+               makeStackTraceLong(null, error);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(null, null, null) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, undefined, undefined) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(false, false, false) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled(1), rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, undefined, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, null, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, true, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, void 0) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, NaN) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(undefined));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(function () {}));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(this, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(false, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(0, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(null, ms);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(error, ms);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(0).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(0, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms - 1, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (!error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           undefined(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(new Error());

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           console.log(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout("timeoutId");

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(timeoutId + 1);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           undefined(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(new Error("test"));

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           undefined(exception);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:1857:25
-           deferred.reject(exception);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout == void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.reject(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.defer(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.when(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(42).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout + 1000);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout - 1000);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(timeout * 2);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               null(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return null(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return undefined(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args.reverse());

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args.slice(1));

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(args.concat(["foo"]));

[Survived] PrecomputedMutator
q.js:1904:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(void 0);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(deferred.reject));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fail(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.then(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.catch(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.push(undefined)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.push(function () {})).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.push(deferred.makeNodeResolver())).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(array_slice(arguments, 1).concat(array_slice(arguments, 2)));

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(() => {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([...arguments]);

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push({});

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fail(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.then(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.catch(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.reverse()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs.concat(["dummy arg"])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (typeof callback === "function") {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback.length > 0) {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(args.slice(1), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(args.concat(deferred.makeNodeResolver()), 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(args.filter(function (arg) {
+     return arg !== deferred.makeNodeResolver();
+   }), 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.slice(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.push(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:24
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.pop(array_slice(arguments));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice.length(arguments));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = undefined();

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = null();

[Survived] PrecomputedMutator
q.js:1949:24
-           var deferred = defer();
+           var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(undefined));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(void 0);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(null);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.concat(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(void 0);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(() => {}, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(function () {}, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat([1, 2, 3]));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.reverse());

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 1), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 0, -1), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, -1), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, baseArgs.length);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, arguments.length - 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, arguments.length + 1));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(1 + 1));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice("hello world"));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.length = 0(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(Q.reject);

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[0]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments.slice());

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, [].slice.call(arguments));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.toString(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(this, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, function () {
+     return 42;
+   });

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, function () {
+     return this;
+   });

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           undefined(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           null(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:9
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           0(bound).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(this).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice()).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.map(function (x) {
+     return x;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(Q.reject);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(0, 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(function () {});

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, null);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, undefined);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, []);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice());

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat([]));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.filter(Boolean));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return undefined(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return null(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("newName", args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(null, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(undefined, args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args[0]);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(true));

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().reverse());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().toString());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null());

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.makeNodeResolver("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       deferred.reject("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([arguments[2]]);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(args.length, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(args[0], 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(args.slice(1), 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function () {});

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function (error) {
+     throw error;
+   });

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(function (error) {
+     console.log(error);
+   });

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       null(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       console.log(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(null).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q({}).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, undefined]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject("new error"));

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(baseArgs, 2);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, nodeArgs.length);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, args.length);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => {});

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.concat(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("apply", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.concat([null])]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(0, -1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(Q.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return object.nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return null(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return undefined(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return 0(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q({}).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback());

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(null);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(undefined);

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback.call(null)) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback.length) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback("hello", value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(Q.reject(new Error("something went wrong")), value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 0);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   undefined(error);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback("error");

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.reject();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.resolve();

[Survived] PrecomputedMutator
queue.js:6:16
-       var ends = Q.defer();
+       var ends = Q.all();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.resolve();

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.then("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.catch("head");

[Survived] PrecomputedMutator
queue.js:18:26
-               var result = ends.promise.get("head");
+               var result = ends.promise.finally("head");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("null");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" + "1");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail" - 1);

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.reject(new Error("Queue is closed")));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.all(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(error.message)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(new Error("Different error message"))};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.reject(end);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   10.65 |      143 |        76 |       1838 |        0 |        0 |
 q.js     |   10.78 |      143 |        76 |       1813 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         25 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m18:45:49 (3125) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m18:45:49 (3125) INFO MutationTestExecutor[39m Done in 233 minutes 29 seconds.

real	233m30.798s
user	41m35.132s
sys	7m6.057s
