*** using precomputed mutations ***
[32m23:08:21 (3103) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m23:08:21 (3103) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m23:08:21 (3103) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/q/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m23:08:22 (3103) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m23:08:22 (3103) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m23:08:22 (3103) INFO ProjectReader[39m Found 2 of 4261 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 1980 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.25/mutants.json ***
Mutant 0 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap !== "function"
Mutant 1 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "undefined"
Mutant 2 in q.js: typeof bootstrap === "function" replaced with typeof bootstrap === "object"
Mutant 3 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition + 1)
Mutant 4 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition - 1)
Mutant 5 in q.js: bootstrap("promise", definition) replaced with bootstrap("promise", definition * 2)
Mutant 6 in q.js: bootstrap replaced with "promise"
Mutant 7 in q.js: bootstrap replaced with null
Mutant 8 in q.js: bootstrap replaced with undefined
Mutant 9 in q.js: "promise" replaced with "promise2"
Mutant 10 in q.js: "promise" replaced with "promise" + 1
Mutant 11 in q.js: "promise" replaced with "promise" * 2
Mutant 12 in q.js: definition replaced with function () {
  throw new Error("I'm a bug!");
}
Mutant 13 in q.js: definition replaced with function () {
  return "I'm a bug!";
}
Mutant 14 in q.js: definition replaced with function () {
  return;
}
Mutant 15 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "function" && typeof module === "function"
Mutant 16 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "object" && typeof module === "undefined"
Mutant 17 in q.js: typeof exports === "object" && typeof module === "object" replaced with typeof exports === "undefined" && typeof module === "object"
Mutant 18 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.test
Mutant 19 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.test()
Mutant 20 in q.js: typeof define === "function" && define.amd replaced with typeof define === "function" && define.amd && define.amd.test === "test"
Mutant 21 in q.js: definition replaced with definition()
Mutant 22 in q.js: definition replaced with null
Mutant 23 in q.js: definition replaced with undefined
Mutant 24 in q.js: typeof ses !== "undefined" replaced with typeof ses === "undefined"
Mutant 25 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "object"
Mutant 26 in q.js: typeof ses !== "undefined" replaced with typeof ses !== "function"
Mutant 27 in q.js: !ses.ok() replaced with ses.notOk()
Mutant 28 in q.js: !ses.ok() replaced with ses.isNotOk()
Mutant 29 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" && typeof self !== "undefined"
Mutant 30 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" ^ typeof self !== "undefined"
Mutant 31 in q.js: typeof window !== "undefined" || typeof self !== "undefined" replaced with typeof window !== "undefined" || typeof self !== "undefined" || typeof global !== "undefined"
Mutant 32 in q.js: captureLine replaced with captureLine + 1
Mutant 33 in q.js: captureLine replaced with captureLine - 1
Mutant 34 in q.js: captureLine replaced with captureLine * 2
Mutant 35 in q.js: head.next replaced with head.next.next
Mutant 36 in q.js: head.next replaced with head.next.task
Mutant 37 in q.js: head.next replaced with head.next.next.task
Mutant 38 in q.js: domain replaced with !domain
Mutant 39 in q.js: domain replaced with domain + 1
Mutant 40 in q.js: domain replaced with domain.length
Mutant 41 in q.js: domain.enter replaced with domain.exit
Mutant 42 in q.js: domain.enter replaced with domain.run
Mutant 43 in q.js: domain.enter replaced with domain.bind
Mutant 44 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, undefined)
Mutant 45 in q.js: runSingle(task, domain) replaced with runSingle(task, null, domain)
Mutant 46 in q.js: runSingle(task, domain) replaced with runSingle(task, domain, function () {})
Mutant 47 in q.js: task replaced with null
Mutant 48 in q.js: task replaced with undefined
Mutant 49 in q.js: task replaced with () => {}
Mutant 50 in q.js: domain replaced with null
Mutant 51 in q.js: domain replaced with undefined
Mutant 52 in q.js: domain replaced with 0
Mutant 53 in q.js: laterQueue.length replaced with laterQueue.length + 1
Mutant 54 in q.js: laterQueue.length replaced with laterQueue.length - 1
Mutant 55 in q.js: laterQueue.length replaced with laterQueue.length * 2
Mutant 56 in q.js: laterQueue.pop replaced with laterQueue.shift
Mutant 57 in q.js: laterQueue.pop replaced with laterQueue.length
Mutant 58 in q.js: runSingle replaced with noop
Mutant 59 in q.js: runSingle replaced with undefined
Mutant 60 in q.js: task replaced with undefined
Mutant 61 in q.js: task replaced with null
Mutant 62 in q.js: task replaced with () => {}
Mutant 63 in q.js: task replaced with !task
Mutant 64 in q.js: task replaced with task + 1
Mutant 65 in q.js: task replaced with task * 2
Mutant 66 in q.js: isNodeJS replaced with !isNodeJS
Mutant 67 in q.js: domain replaced with domain.exit()
Mutant 68 in q.js: domain replaced with domain.enter()
Mutant 69 in q.js: domain replaced with domain.exit() && domain.enter()
Mutant 70 in q.js: domain.exit replaced with domain.enter
Mutant 71 in q.js: domain.exit replaced with domain.run
Mutant 72 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush())
Mutant 73 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush.call())
Mutant 74 in q.js: setTimeout replaced with setInterval
Mutant 75 in q.js: setTimeout replaced with requestAnimationFrame
Mutant 76 in q.js: flush replaced with flush()
Mutant 77 in q.js: flush replaced with flush(1)
Mutant 78 in q.js: flush replaced with flush.call(this)
Mutant 79 in q.js: 0 replaced with 1
Mutant 80 in q.js: 0 replaced with -1
Mutant 81 in q.js: 0 replaced with Infinity
Mutant 82 in q.js: domain replaced with !domain
Mutant 83 in q.js: domain replaced with domain && false
Mutant 84 in q.js: domain replaced with domain || true
Mutant 85 in q.js: domain.enter replaced with domain.exit
Mutant 86 in q.js: domain replaced with !domain
Mutant 87 in q.js: domain replaced with domain.foo
Mutant 88 in q.js: domain replaced with domain()
Mutant 89 in q.js: domain.exit replaced with domain.enter
Mutant 90 in q.js: !flushing replaced with flushing
Mutant 91 in q.js: !flushing replaced with flushing === true
Mutant 92 in q.js: flush replaced with flush()
Mutant 93 in q.js: flush replaced with flush(1)
Mutant 94 in q.js: flush replaced with flush(function () {})
Mutant 95 in q.js: typeof window !== "undefined" replaced with typeof window === "undefined"
Mutant 96 in q.js: typeof window !== "undefined" replaced with typeof window !== "object"
Mutant 97 in q.js: typeof window !== "undefined" replaced with typeof window !== "function"
Mutant 98 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(undefined)
Mutant 99 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(null)
Mutant 100 in q.js: setImmediate.bind(window, flush) replaced with setImmediate.bind(0)
Mutant 101 in q.js: setImmediate.bind replaced with setInterval.bind
Mutant 102 in q.js: setImmediate.bind replaced with requestAnimationFrame.bind
Mutant 103 in q.js: window replaced with null
Mutant 104 in q.js: window replaced with undefined
Mutant 105 in q.js: window replaced with this
Mutant 106 in q.js: flush replaced with flush + 1
Mutant 107 in q.js: flush replaced with flush - 1
Mutant 108 in q.js: flush replaced with flush * 2
Mutant 109 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel === "undefined"
Mutant 110 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "object"
Mutant 111 in q.js: typeof MessageChannel !== "undefined" replaced with typeof MessageChannel !== "function"
Mutant 112 in q.js: channel.port2.postMessage replaced with channel.port1.postMessage
Mutant 113 in q.js: 0 replaced with 1
Mutant 114 in q.js: 0 replaced with "hello"
Mutant 115 in q.js: 0 replaced with function () {
  return 1;
}
Mutant 116 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 117 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 118 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, null)
Mutant 119 in q.js: setTimeout replaced with setInterval
Mutant 120 in q.js: flush replaced with flush()
Mutant 121 in q.js: 0 replaced with 1
Mutant 122 in q.js: 0 replaced with -1
Mutant 123 in q.js: 0 replaced with NaN
Mutant 124 in q.js: requestPortTick replaced with requestTick
Mutant 125 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 1)
Mutant 126 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, -1)
Mutant 127 in q.js: setTimeout(flush, 0) replaced with setTimeout(flush, 0, 0)
Mutant 128 in q.js: setTimeout replaced with setInterval
Mutant 129 in q.js: flush replaced with flush()
Mutant 130 in q.js: 0 replaced with 1
Mutant 131 in q.js: 0 replaced with -1
Mutant 132 in q.js: 0 replaced with null
Mutant 133 in q.js: laterQueue.push replaced with laterQueue.unshift
Mutant 134 in q.js: laterQueue.push replaced with laterQueue.pop
Mutant 135 in q.js: laterQueue.push replaced with laterQueue.shift
Mutant 136 in q.js: task replaced with null
Mutant 137 in q.js: task replaced with undefined
Mutant 138 in q.js: task replaced with {}
Mutant 139 in q.js: !flushing replaced with flushing
Mutant 140 in q.js: !flushing replaced with flushing && !flushing
Mutant 141 in q.js: call.apply(f, arguments) replaced with call.apply(f, null)
Mutant 142 in q.js: call.apply(f, arguments) replaced with call.apply(f, 0)
Mutant 143 in q.js: call.apply replaced with call.bind
Mutant 144 in q.js: call.apply replaced with call.call
Mutant 145 in q.js: f replaced with f + 1
Mutant 146 in q.js: f replaced with f * 2
Mutant 147 in q.js: f replaced with f - 1
Mutant 148 in q.js: arguments replaced with arguments[0]
Mutant 149 in q.js: arguments replaced with arguments[1]
Mutant 150 in q.js: arguments replaced with arguments[2]
Mutant 151 in q.js: Array.prototype.slice replaced with Array.prototype.reverse
Mutant 152 in q.js: Array.prototype.slice replaced with Array.prototype.concat
Mutant 153 in q.js: Array.prototype.slice replaced with Array.prototype.filter
Mutant 154 in q.js: arguments.length === 1 replaced with arguments.length > 1
Mutant 155 in q.js: arguments.length === 1 replaced with arguments.length === 0
Mutant 156 in q.js: arguments.length === 1 replaced with arguments.length !== 1
Mutant 157 in q.js: 1 replaced with 0
Mutant 158 in q.js: 1 replaced with length
Mutant 159 in q.js: 1 replaced with length + 1
Mutant 160 in q.js: index in this replaced with index > this.length
Mutant 161 in q.js: index in this replaced with index < this.length
Mutant 162 in q.js: index in this replaced with index !== this.length
Mutant 163 in q.js: ++index >= length replaced with index > length
Mutant 164 in q.js: ++index >= length replaced with index + 1 >= length
Mutant 165 in q.js: ++index >= length replaced with index + 2 >= length
Mutant 166 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (i <= length; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 167 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (i < length - 1; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 168 in q.js: // reduce
for (; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
} replaced with for (i < length + 1; index < length; index++) {
  // account for the possibility that the array is sparse
  if (index in this) {
    basis = callback(basis, this[index], index);
  }
}
Mutant 169 in q.js: index < length replaced with index > length
Mutant 170 in q.js: index < length replaced with index <= length
Mutant 171 in q.js: index < length replaced with index >= length
Mutant 172 in q.js: index++ replaced with index--
Mutant 173 in q.js: index++ replaced with index += 2
Mutant 174 in q.js: index++ replaced with index = 0
Mutant 175 in q.js: index in this replaced with index > this.length
Mutant 176 in q.js: index in this replaced with index < this.length
Mutant 177 in q.js: index in this replaced with index === this.length
Mutant 178 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index + 1)
Mutant 179 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index - 1)
Mutant 180 in q.js: callback(basis, this[index], index) replaced with callback(basis, this[index], index * 2)
Mutant 181 in q.js: basis replaced with basis + 1
Mutant 182 in q.js: basis replaced with basis - 1
Mutant 183 in q.js: basis replaced with basis * 2
Mutant 184 in q.js: this[index] replaced with this[index] + 1
Mutant 185 in q.js: this[index] replaced with this[index] * 2
Mutant 186 in q.js: this[index] replaced with this[index] - 1
Mutant 187 in q.js: index replaced with index + 1
Mutant 188 in q.js: index replaced with index - 1
Mutant 189 in q.js: index replaced with index * 2
Mutant 190 in q.js: i < this.length replaced with i <= this.length
Mutant 191 in q.js: i < this.length replaced with i > this.length
Mutant 192 in q.js: i < this.length replaced with i >= this.length
Mutant 193 in q.js: i++ replaced with i--
Mutant 194 in q.js: i++ replaced with i += 2
Mutant 195 in q.js: i++ replaced with i = i + 1
Mutant 196 in q.js: this[i] === value replaced with this[i] !== value
Mutant 197 in q.js: this[i] === value replaced with this[i] > value
Mutant 198 in q.js: this[i] === value replaced with this[i] < value
Mutant 199 in q.js: collect.push replaced with collect.pop
Mutant 200 in q.js: collect.push replaced with collect.shift
Mutant 201 in q.js: collect.push replaced with collect.unshift
Mutant 202 in q.js: callback.call replaced with callback.apply
Mutant 203 in q.js: callback.call replaced with callback.bind
Mutant 204 in q.js: thisp replaced with null
Mutant 205 in q.js: thisp replaced with undefined
Mutant 206 in q.js: thisp replaced with 0
Mutant 207 in q.js: value replaced with undefined
Mutant 208 in q.js: value replaced with null
Mutant 209 in q.js: value replaced with "foo"
Mutant 210 in q.js: index replaced with index + 1
Mutant 211 in q.js: index replaced with index - 1
Mutant 212 in q.js: index replaced with index * 2
Mutant 213 in q.js: self replaced with null
Mutant 214 in q.js: self replaced with undefined
Mutant 215 in q.js: self replaced with this
Mutant 216 in q.js: for (var key in object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
} replaced with for (var key of object) {
  if (object_hasOwnProperty(object, key)) {
    keys.push(key);
  }
}
Mutant 217 in q.js: object replaced with null
Mutant 218 in q.js: object replaced with undefined
Mutant 219 in q.js: object replaced with {}
Mutant 220 in q.js: object_hasOwnProperty(object, key) replaced with !object_hasOwnProperty(object, key)
Mutant 221 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && object[key] === undefined
Mutant 222 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key) && typeof object[key] === "undefined"
Mutant 223 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key + 1)
Mutant 224 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, key - 1)
Mutant 225 in q.js: object_hasOwnProperty(object, key) replaced with object_hasOwnProperty(object, "key")
Mutant 226 in q.js: object replaced with null
Mutant 227 in q.js: object replaced with {}
Mutant 228 in q.js: key replaced with key + 1
Mutant 229 in q.js: key replaced with key - 1
Mutant 230 in q.js: key replaced with key * 2
Mutant 231 in q.js: key replaced with this[index]
Mutant 232 in q.js: key replaced with this[index].key
Mutant 233 in q.js: Object replaced with null
Mutant 234 in q.js: Object replaced with undefined
Mutant 235 in q.js: Object replaced with {}
Mutant 236 in q.js: value replaced with value + 1
Mutant 237 in q.js: value replaced with value * 2
Mutant 238 in q.js: value replaced with value - 1
Mutant 239 in q.js: exception replaced with exception.message
Mutant 240 in q.js: exception replaced with exception.stack
Mutant 241 in q.js: exception replaced with exception.name
Mutant 242 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue === "undefined"
Mutant 243 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" || ReturnValue === "undefined"
Mutant 244 in q.js: typeof ReturnValue !== "undefined" replaced with typeof ReturnValue !== "undefined" && ReturnValue !== "undefined"
Mutant 245 in q.js: hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack replaced with promise.stack && typeof error === "object" && error !== null && error.stack
Mutant 246 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.value) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 247 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.promise) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 248 in q.js: for (var p = promise; !!p; p = p.source) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
} replaced with for (var p = promise; !!p; p = p.source.then) {
  if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
    object_defineProperty(error, "__minimumStackCounter__", {
      value: p.stackCounter,
      configurable: true
    });
    stacks.unshift(p.stack);
  }
}
Mutant 249 in q.js: !!p replaced with !p
Mutant 250 in q.js: !!p replaced with p.length
Mutant 251 in q.js: p = p.source replaced with p = p.source.slice()
Mutant 252 in q.js: p = p.source replaced with p = p.source.concat()
Mutant 253 in q.js: p = p.source replaced with p = p.source.reverse()
Mutant 254 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ < p.stackCounter
Mutant 255 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ !== p.stackCounter
Mutant 256 in q.js: p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter) replaced with p.stack && error.__minimumStackCounter__ === p.stackCounter
Mutant 257 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter + 1,
  configurable: true
})
Mutant 258 in q.js: object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter,
  configurable: true
}) replaced with object_defineProperty(error, "__minimumStackCounter__", {
  value: p.stackCounter - 1,
  configurable: true
})
Mutant 259 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCounter__" + 1
Mutant 260 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCounter__" - 1
Mutant 261 in q.js: "__minimumStackCounter__" replaced with "__minimumStackCounter__" * 2
Mutant 262 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter + 1,
  configurable: true
}
Mutant 263 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter - 1,
  configurable: true
}
Mutant 264 in q.js: {
  value: p.stackCounter,
  configurable: true
} replaced with {
  value: p.stackCounter * 2,
  configurable: true
}
Mutant 265 in q.js: stacks.unshift replaced with stacks.push
Mutant 266 in q.js: stacks.unshift replaced with stacks.shift
Mutant 267 in q.js: stacks.unshift replaced with stacks.pop
Mutant 268 in q.js: p.stack replaced with p.stack + "foo"
Mutant 269 in q.js: p.stack replaced with p.stack.toUpperCase()
Mutant 270 in q.js: p.stack replaced with p.stack.split("").reverse().join("")
Mutant 271 in q.js: stacks.unshift replaced with stacks.push
Mutant 272 in q.js: stacks.unshift replaced with stacks.pop
Mutant 273 in q.js: stacks.unshift replaced with stacks.shift
Mutant 274 in q.js: error.stack replaced with error.message
Mutant 275 in q.js: error.stack replaced with error.name
Mutant 276 in q.js: error.stack replaced with error.toString()
Mutant 277 in q.js: concatedStacks replaced with concatedStacks.split("\n")
Mutant 278 in q.js: concatedStacks replaced with concatedStacks.replace(/\n/g, " ")
Mutant 279 in q.js: concatedStacks replaced with concatedStacks.slice(0, -1)
Mutant 280 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  enumerable: true
})
Mutant 281 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  writable: true
})
Mutant 282 in q.js: object_defineProperty(error, "stack", {
  value: stack,
  configurable: true
}) replaced with object_defineProperty(error, "stack", {
  value: stack,
  configurable: false
})
Mutant 283 in q.js: "stack" replaced with "stacktrace"
Mutant 284 in q.js: "stack" replaced with "stackTrace"
Mutant 285 in q.js: "stack" replaced with "errorStack"
Mutant 286 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack + "foo",
  configurable: true
}
Mutant 287 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  enumerable: true
}
Mutant 288 in q.js: {
  value: stack,
  configurable: true
} replaced with {
  value: stack,
  writable: false
}
Mutant 289 in q.js: "\n" replaced with "\t"
Mutant 290 in q.js: "\n" replaced with " "
Mutant 291 in q.js: "\n" replaced with "\\n"
Mutant 292 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = 1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 293 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = -1; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 294 in q.js: for (var i = 0; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
} replaced with for (var i = array.length; i < lines.length; ++i) {
  var line = lines[i];
  if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
    desiredLines.push(line);
  }
}
Mutant 295 in q.js: i < lines.length replaced with i <= lines.length
Mutant 296 in q.js: i < lines.length replaced with i > lines.length
Mutant 297 in q.js: i < lines.length replaced with i == lines.length
Mutant 298 in q.js: ++i replaced with i--
Mutant 299 in q.js: ++i replaced with i += 2
Mutant 300 in q.js: ++i replaced with i = 0
Mutant 301 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && !line
Mutant 302 in q.js: !isInternalFrame(line) && !isNodeFrame(line) && line replaced with !isInternalFrame(line) && !isNodeFrame(line) && line.indexOf("at ") === 0
Mutant 303 in q.js: isInternalFrame replaced with isExternalFrame
Mutant 304 in q.js: line replaced with line + 1
Mutant 305 in q.js: line replaced with line - 1
Mutant 306 in q.js: line replaced with line * 2
Mutant 307 in q.js: isNodeFrame replaced with isPromiseAlike
Mutant 308 in q.js: isNodeFrame replaced with object_defineProperty
Mutant 309 in q.js: desiredLines.push replaced with desiredLines.pop
Mutant 310 in q.js: desiredLines.push replaced with desiredLines.shift
Mutant 311 in q.js: desiredLines.push replaced with desiredLines.unshift
Mutant 312 in q.js: line replaced with line + 1
Mutant 313 in q.js: line replaced with line - 1
Mutant 314 in q.js: line replaced with line * 2
Mutant 315 in q.js: "\n" replaced with " "
Mutant 316 in q.js: "\n" replaced with "<br>"
Mutant 317 in q.js: "\n" replaced with "<br/>"
Mutant 318 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 319 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 320 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 321 in q.js: stackLine.indexOf replaced with stackLine.includes
Mutant 322 in q.js: stackLine.indexOf replaced with stackLine.match
Mutant 323 in q.js: stackLine.indexOf replaced with stackLine.search
Mutant 324 in q.js: stackLine replaced with stackLine.split("@")[1]
Mutant 325 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 326 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 327 in q.js: attempt1 replaced with attempt1[1] !== undefined
Mutant 328 in q.js: attempt1 replaced with attempt1.length > 1
Mutant 329 in q.js: attempt1 replaced with attempt1[1] !== null
Mutant 330 in q.js: Number replaced with "string"
Mutant 331 in q.js: Number replaced with null
Mutant 332 in q.js: Number replaced with undefined
Mutant 333 in q.js: attempt1[2] replaced with attempt1[1]
Mutant 334 in q.js: attempt1[2] replaced with attempt1[3]
Mutant 335 in q.js: attempt1[2] replaced with attempt2[2]
Mutant 336 in q.js: stackLine replaced with stackLine.split("at ")[1]
Mutant 337 in q.js: stackLine replaced with stackLine.split("at ")[0]
Mutant 338 in q.js: stackLine replaced with stackLine.split("at ")[2]
Mutant 339 in q.js: attempt2 replaced with attempt2[1] > 0
Mutant 340 in q.js: attempt2 replaced with attempt2[1] !== attempt2[0]
Mutant 341 in q.js: attempt2 replaced with attempt2[1] === attempt2[0]
Mutant 342 in q.js: Number replaced with "0"
Mutant 343 in q.js: Number replaced with null
Mutant 344 in q.js: Number replaced with undefined
Mutant 345 in q.js: attempt2[2] replaced with attempt2[1]
Mutant 346 in q.js: attempt2[2] replaced with attempt2[3]
Mutant 347 in q.js: attempt2[2] replaced with attempt2[4]
Mutant 348 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 349 in q.js: stackLine replaced with stackLine.split(" ")[1]
Mutant 350 in q.js: stackLine replaced with stackLine.split(" ")[2]
Mutant 351 in q.js: attempt3 replaced with attempt3[1]
Mutant 352 in q.js: attempt3 replaced with attempt3[0]
Mutant 353 in q.js: attempt3 replaced with attempt3[2]
Mutant 354 in q.js: Number replaced with 0
Mutant 355 in q.js: Number replaced with null
Mutant 356 in q.js: Number replaced with NaN
Mutant 357 in q.js: attempt3[2] replaced with attempt3[1]
Mutant 358 in q.js: attempt3[2] replaced with attempt3[3]
Mutant 359 in q.js: attempt3[2] replaced with attempt3[4]
Mutant 360 in q.js: stackLine replaced with stackLine.split("@")[0]
Mutant 361 in q.js: stackLine replaced with stackLine.split(":")[0]
Mutant 362 in q.js: stackLine replaced with stackLine.split(" ")[0]
Mutant 363 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === undefined
Mutant 364 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 365 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === "undefined"
Mutant 366 in q.js: !hasStacks replaced with hasStacks === false
Mutant 367 in q.js: !hasStacks replaced with stacks.length > 0
Mutant 368 in q.js: !hasStacks replaced with typeof stacks !== "undefined"
Mutant 369 in q.js: "\n" replaced with "\t"
Mutant 370 in q.js: "\n" replaced with " "
Mutant 371 in q.js: "\n" replaced with "|"
Mutant 372 in q.js: lines[0].indexOf replaced with lines[1].indexOf
Mutant 373 in q.js: lines[0].indexOf replaced with lines[lines.length - 1].indexOf
Mutant 374 in q.js: "@" replaced with "#"
Mutant 375 in q.js: "@" replaced with "%"
Mutant 376 in q.js: "@" replaced with "*"
Mutant 377 in q.js: firstLine replaced with firstLine.split(" ")[0]
Mutant 378 in q.js: firstLine replaced with firstLine.split(" ")[1]
Mutant 379 in q.js: firstLine replaced with firstLine.split(" ").length
Mutant 380 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber === null
Mutant 381 in q.js: !fileNameAndLineNumber replaced with typeof fileNameAndLineNumber === "undefined"
Mutant 382 in q.js: !fileNameAndLineNumber replaced with fileNameAndLineNumber.length === 0
Mutant 383 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with console.warn !== "function"
Mutant 384 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console.warn !== "function"
Mutant 385 in q.js: typeof console !== "undefined" && typeof console.warn === "function" replaced with typeof console !== "undefined" && console.warn !== "function"
Mutant 386 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, null)
Mutant 387 in q.js: callback.apply(callback, arguments) replaced with callback.apply(callback, [])
Mutant 388 in q.js: callback.apply replaced with callback.call
Mutant 389 in q.js: callback.apply replaced with callback.bind
Mutant 390 in q.js: arguments replaced with null
Mutant 391 in q.js: arguments replaced with undefined
Mutant 392 in q.js: arguments replaced with {}
Mutant 393 in q.js: value instanceof Promise replaced with value === Promise
Mutant 394 in q.js: value instanceof Promise replaced with value.constructor === Promise
Mutant 395 in q.js: value instanceof Promise replaced with Object.getPrototypeOf(value) === Promise.prototype
Mutant 396 in q.js: isPromiseAlike(value) replaced with value instanceof Promise
Mutant 397 in q.js: isPromiseAlike(value) replaced with value.then
Mutant 398 in q.js: isPromiseAlike(value) replaced with value.constructor.name === "Promise"
Mutant 399 in q.js: isPromiseAlike replaced with typeof value === "object"
Mutant 400 in q.js: value replaced with value.then()
Mutant 401 in q.js: value replaced with Promise.resolve(value)
Mutant 402 in q.js: value replaced with Q.resolve(value)
Mutant 403 in q.js: value replaced with value + 1
Mutant 404 in q.js: value replaced with value - 1
Mutant 405 in q.js: value replaced with value * 2
Mutant 406 in q.js: fulfill replaced with reject
Mutant 407 in q.js: value replaced with null
Mutant 408 in q.js: value replaced with undefined
Mutant 409 in q.js: object_create replaced with null
Mutant 410 in q.js: object_create replaced with undefined
Mutant 411 in q.js: object_create replaced with {}
Mutant 412 in q.js: object_create replaced with null
Mutant 413 in q.js: object_create replaced with undefined
Mutant 414 in q.js: object_create replaced with {}
Mutant 415 in q.js: Promise.prototype replaced with Object.prototype
Mutant 416 in q.js: Promise.prototype replaced with Promise.reject(new Error())
Mutant 417 in q.js: Promise.prototype replaced with Q.resolve(new Error())
Mutant 418 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 419 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 420 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 421 in q.js: messages replaced with messages.length
Mutant 422 in q.js: messages replaced with messages[0]
Mutant 423 in q.js: messages replaced with !resolvedPromise
Mutant 424 in q.js: args replaced with []
Mutant 425 in q.js: args replaced with null
Mutant 426 in q.js: args replaced with "foo"
Mutant 427 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[2]
Mutant 428 in q.js: op === "when" && operands[1] replaced with op === "when" && !operands[1]
Mutant 429 in q.js: op === "when" && operands[1] replaced with op === "when" && operands[1] === 0
Mutant 430 in q.js: progressListeners.push replaced with progressListeners.pop
Mutant 431 in q.js: progressListeners.push replaced with progressListeners.shift
Mutant 432 in q.js: progressListeners.push replaced with progressListeners.unshift
Mutant 433 in q.js: operands[1] replaced with operands[2]
Mutant 434 in q.js: operands[1] replaced with operands[0]
Mutant 435 in q.js: operands[1] replaced with operands[3]
Mutant 436 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.call
Mutant 437 in q.js: resolvedPromise.promiseDispatch.apply replaced with resolvedPromise.promiseDispatch.bind
Mutant 438 in q.js: resolvedPromise replaced with null
Mutant 439 in q.js: resolvedPromise replaced with undefined
Mutant 440 in q.js: resolvedPromise replaced with messages
Mutant 441 in q.js: args replaced with [args]
Mutant 442 in q.js: args replaced with args.slice()
Mutant 443 in q.js: args replaced with args.concat()
Mutant 444 in q.js: messages replaced with messages.length
Mutant 445 in q.js: messages replaced with messages[0]
Mutant 446 in q.js: messages replaced with !messages
Mutant 447 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 448 in q.js: resolvedPromise replaced with reject(resolvedPromise)
Mutant 449 in q.js: resolvedPromise replaced with fulfill(resolvedPromise)
Mutant 450 in q.js: isPromise(nearerValue) replaced with nearerValue === null
Mutant 451 in q.js: isPromise(nearerValue) replaced with nearerValue === undefined
Mutant 452 in q.js: isPromise(nearerValue) replaced with nearerValue === 0
Mutant 453 in q.js: isPromise replaced with isPromiseAlike
Mutant 454 in q.js: isPromise replaced with !isPromise
Mutant 455 in q.js: isPromise replaced with isPromise || isPromiseAlike
Mutant 456 in q.js: nearerValue replaced with nearerValue + 1
Mutant 457 in q.js: nearerValue replaced with nearerValue * 2
Mutant 458 in q.js: nearerValue replaced with nearerValue - 1
Mutant 459 in q.js: !resolvedPromise replaced with resolvedPromise
Mutant 460 in q.js: !resolvedPromise replaced with resolvedPromise === undefined
Mutant 461 in q.js: !resolvedPromise replaced with resolvedPromise.state === "fulfilled"
Mutant 462 in q.js: Q.longStackSupport && hasStacks replaced with !Q.longStackSupport && hasStacks
Mutant 463 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 464 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 465 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.length
Mutant 466 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.indexOf("\n") - 1
Mutant 467 in q.js: e.stack.indexOf("\n") + 1 replaced with e.stack.lastIndexOf("\n") + 1
Mutant 468 in q.js: e.stack.indexOf replaced with e.stack.includes
Mutant 469 in q.js: "\n" replaced with "\t"
Mutant 470 in q.js: "\n" replaced with " "
Mutant 471 in q.js: "\n" replaced with "Hello, world!"
Mutant 472 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport || hasStacks
Mutant 473 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport && !hasStacks
Mutant 474 in q.js: Q.longStackSupport && hasStacks replaced with Q.longStackSupport ^ hasStacks
Mutant 475 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message[0])
Mutant 476 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.slice(1))
Mutant 477 in q.js: newPromise.promiseDispatch.apply(newPromise, message) replaced with newPromise.promiseDispatch.apply(newPromise, message.concat(newPromise))
Mutant 478 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.call
Mutant 479 in q.js: newPromise.promiseDispatch.apply replaced with newPromise.promiseDispatch.bind
Mutant 480 in q.js: newPromise replaced with null
Mutant 481 in q.js: newPromise replaced with undefined
Mutant 482 in q.js: newPromise replaced with 0
Mutant 483 in q.js: message replaced with message.slice(1)
Mutant 484 in q.js: message replaced with message.concat(["new message"])
Mutant 485 in q.js: message replaced with message.pop()
Mutant 486 in q.js: resolvedPromise replaced with !resolvedPromise
Mutant 487 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 488 in q.js: resolvedPromise replaced with resolvedPromise.isFulfilled()
Mutant 489 in q.js: Q replaced with undefined
Mutant 490 in q.js: Q replaced with null
Mutant 491 in q.js: value replaced with value + 1
Mutant 492 in q.js: value replaced with value * 2
Mutant 493 in q.js: value replaced with value - 1
Mutant 494 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 495 in q.js: resolvedPromise replaced with resolvedPromise.isFulfilled()
Mutant 496 in q.js: resolvedPromise replaced with resolvedPromise.isRejected()
Mutant 497 in q.js: become replaced with deferred.reject
Mutant 498 in q.js: become replaced with deferred.notify
Mutant 499 in q.js: become replaced with deferred.resolve
Mutant 500 in q.js: fulfill(value) replaced with fulfill(value + 1)
Mutant 501 in q.js: fulfill(value) replaced with reject(value)
Mutant 502 in q.js: fulfill(value) replaced with fulfill(value * 2)
Mutant 503 in q.js: value replaced with null
Mutant 504 in q.js: value replaced with undefined
Mutant 505 in q.js: value replaced with 0
Mutant 506 in q.js: resolvedPromise replaced with resolvedPromise === true
Mutant 507 in q.js: resolvedPromise replaced with resolvedPromise !== false
Mutant 508 in q.js: resolvedPromise replaced with resolvedPromise !== undefined
Mutant 509 in q.js: reject(reason) replaced with reject(new Error(reason))
Mutant 510 in q.js: reject(reason) replaced with reject(reason + "!")
Mutant 511 in q.js: reject(reason) replaced with reject(reason.toUpperCase())
Mutant 512 in q.js: reject replaced with undefined
Mutant 513 in q.js: reason replaced with null
Mutant 514 in q.js: reason replaced with undefined
Mutant 515 in q.js: reason replaced with 0
Mutant 516 in q.js: resolvedPromise replaced with resolvedPromise.promise
Mutant 517 in q.js: resolvedPromise replaced with promise.resolvedPromise
Mutant 518 in q.js: resolvedPromise replaced with deferred.promise
Mutant 519 in q.js: progressListener replaced with progressListeners[0]
Mutant 520 in q.js: progressListener replaced with progressListeners.length
Mutant 521 in q.js: progress replaced with progress + 1
Mutant 522 in q.js: progress replaced with progress - 1
Mutant 523 in q.js: progress replaced with progress * 2
Mutant 524 in q.js: error replaced with error.message
Mutant 525 in q.js: error replaced with error.stack
Mutant 526 in q.js: error replaced with error.name
Mutant 527 in q.js: arguments.length > 2 replaced with arguments.length > 1
Mutant 528 in q.js: arguments.length > 2 replaced with arguments.length === 2
Mutant 529 in q.js: arguments.length > 2 replaced with arguments.length < 2
Mutant 530 in q.js: self.resolve replaced with self.reject
Mutant 531 in q.js: self.resolve replaced with self.notify
Mutant 532 in q.js: self.resolve replaced with self.fulfill
Mutant 533 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 534 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0, 1)
Mutant 535 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 1, 2)
Mutant 536 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments.length)
Mutant 537 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[1])
Mutant 538 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments[0])
Mutant 539 in q.js: arguments replaced with arguments[0]
Mutant 540 in q.js: arguments replaced with arguments.length
Mutant 541 in q.js: arguments replaced with arguments.slice(1)
Mutant 542 in q.js: 1 replaced with 3
Mutant 543 in q.js: 1 replaced with 4
Mutant 544 in q.js: self.resolve replaced with self.reject
Mutant 545 in q.js: self.resolve replaced with self.notify
Mutant 546 in q.js: self.resolve replaced with self.fulfill
Mutant 547 in q.js: value replaced with null
Mutant 548 in q.js: value replaced with undefined
Mutant 549 in q.js: value replaced with 0
Mutant 550 in q.js: typeof resolver !== "function" replaced with resolver !== "function"
Mutant 551 in q.js: typeof resolver !== "function" replaced with resolver !== function () {}
Mutant 552 in q.js: typeof resolver !== "function" replaced with resolver !== Promise.resolve
Mutant 553 in q.js: defer replaced with defer.promise
Mutant 554 in q.js: defer replaced with defer.resolve
Mutant 555 in q.js: defer replaced with defer.reject
Mutant 556 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve(null), deferred.reject(null), deferred.notify(null))
Mutant 557 in q.js: resolver(deferred.resolve, deferred.reject, deferred.notify) replaced with resolver(deferred.resolve(undefined), deferred.reject(undefined), deferred.notify(undefined))
Mutant 558 in q.js: deferred.resolve replaced with deferred.reject
Mutant 559 in q.js: deferred.resolve replaced with deferred.notify
Mutant 560 in q.js: deferred.resolve replaced with deferred.fulfill
Mutant 561 in q.js: deferred.reject replaced with deferred.fulfill
Mutant 562 in q.js: deferred.reject replaced with deferred.notify
Mutant 563 in q.js: deferred.reject replaced with deferred.resolve
Mutant 564 in q.js: deferred.notify replaced with deferred.notify(progress)
Mutant 565 in q.js: deferred.notify replaced with deferred.notify(undefined)
Mutant 566 in q.js: deferred.notify replaced with deferred.notify(null)
Mutant 567 in q.js: deferred.reject replaced with deferred.resolve
Mutant 568 in q.js: deferred.reject replaced with deferred.notify
Mutant 569 in q.js: deferred.reject replaced with deferred.makeNodeResolver
Mutant 570 in q.js: reason replaced with null
Mutant 571 in q.js: reason replaced with undefined
Mutant 572 in q.js: reason replaced with "Error"
Mutant 573 in q.js: Q replaced with Q.reject
Mutant 574 in q.js: Q replaced with Q.resolve
Mutant 575 in q.js: Q replaced with Q.all
Mutant 576 in q.js: x replaced with y
Mutant 577 in q.js: x replaced with x + 1
Mutant 578 in q.js: x replaced with x * 2
Mutant 579 in q.js: y replaced with x
Mutant 580 in q.js: y replaced with y + 1
Mutant 581 in q.js: y replaced with Q.resolve(y)
Mutant 582 in q.js: [this, that] replaced with [that, this]
Mutant 583 in q.js: [this, that] replaced with [this, this]
Mutant 584 in q.js: [this, that] replaced with [that, null]
Mutant 585 in q.js: x === y replaced with x !== y
Mutant 586 in q.js: x === y replaced with x < y
Mutant 587 in q.js: x === y replaced with x > y
Mutant 588 in q.js: i < len replaced with i <= len
Mutant 589 in q.js: i < len replaced with i > len
Mutant 590 in q.js: i < len replaced with i == len
Mutant 591 in q.js: i++ replaced with i--
Mutant 592 in q.js: i++ replaced with i += 2
Mutant 593 in q.js: i++ replaced with i = 0
Mutant 594 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, 1)
Mutant 595 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, "foo")
Mutant 596 in q.js: Q(answerPs[i]).then(resolve, reject) replaced with Q(answerPs[i]).then(resolve, reject, null)
Mutant 597 in q.js: Q replaced with Q.reject
Mutant 598 in q.js: Q replaced with Q.resolve
Mutant 599 in q.js: Q replaced with Q.all
Mutant 600 in q.js: answerPs[i] replaced with answerPs[i] + 1
Mutant 601 in q.js: answerPs[i] replaced with answerPs[i] * 2
Mutant 602 in q.js: answerPs[i] replaced with answerPs[i] - 1
Mutant 603 in q.js: resolve replaced with reject
Mutant 604 in q.js: resolve replaced with undefined
Mutant 605 in q.js: reject replaced with resolve
Mutant 606 in q.js: Q.race replaced with Q.reject
Mutant 607 in q.js: Q.race replaced with Q.resolve
Mutant 608 in q.js: Q.race replaced with Q.all
Mutant 609 in q.js: fallback === void 0 replaced with fallback === null
Mutant 610 in q.js: fallback === void 0 replaced with fallback === undefined
Mutant 611 in q.js: fallback === void 0 replaced with fallback === "function"
Mutant 612 in q.js: inspect === void 0 replaced with inspect !== void 0
Mutant 613 in q.js: inspect === void 0 replaced with inspect === null
Mutant 614 in q.js: inspect === void 0 replaced with inspect === undefined
Mutant 615 in q.js: object_create replaced with null
Mutant 616 in q.js: object_create replaced with undefined
Mutant 617 in q.js: object_create replaced with {}
Mutant 618 in q.js: Promise.prototype replaced with Object.prototype
Mutant 619 in q.js: Promise.prototype replaced with Promise.reject
Mutant 620 in q.js: Promise.prototype replaced with Q.reject
Mutant 621 in q.js: descriptor[op] replaced with descriptor[op] = function () {}
Mutant 622 in q.js: descriptor[op] replaced with descriptor[op] = null
Mutant 623 in q.js: descriptor[op] replaced with descriptor[op] = function () {
  throw new Error();
}
Mutant 624 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.reject(args))
Mutant 625 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.resolve(args))
Mutant 626 in q.js: descriptor[op].apply(promise, args) replaced with descriptor[op].apply(promise.then(args))
Mutant 627 in q.js: promise replaced with null
Mutant 628 in q.js: promise replaced with undefined
Mutant 629 in q.js: promise replaced with {}
Mutant 630 in q.js: args replaced with args[0]
Mutant 631 in q.js: args replaced with args.slice(1)
Mutant 632 in q.js: args replaced with args.concat(descriptor[op])
Mutant 633 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.resolve(op, args))
Mutant 634 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.reject(op, args))
Mutant 635 in q.js: fallback.call(promise, op, args) replaced with fallback.call(promise.then(op, args))
Mutant 636 in q.js: promise replaced with null
Mutant 637 in q.js: promise replaced with undefined
Mutant 638 in q.js: promise replaced with {}
Mutant 639 in q.js: op replaced with op + 1
Mutant 640 in q.js: op replaced with op * 2
Mutant 641 in q.js: op replaced with op - 1
Mutant 642 in q.js: args replaced with null
Mutant 643 in q.js: args replaced with undefined
Mutant 644 in q.js: args replaced with "foo"
Mutant 645 in q.js: reject replaced with resolve
Mutant 646 in q.js: exception replaced with null
Mutant 647 in q.js: exception replaced with new Error("Different error message")
Mutant 648 in q.js: exception replaced with {
  message: "Different error message"
}
Mutant 649 in q.js: resolve replaced with !resolve
Mutant 650 in q.js: resolve replaced with resolve(null)
Mutant 651 in q.js: resolve replaced with resolve(undefined)
Mutant 652 in q.js: result replaced with null
Mutant 653 in q.js: result replaced with undefined
Mutant 654 in q.js: inspect replaced with inspect.state
Mutant 655 in q.js: inspect replaced with inspect.value
Mutant 656 in q.js: inspect replaced with inspect.reason
Mutant 657 in q.js: inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 658 in q.js: inspected.state === "rejected" replaced with inspected.state !== "pending"
Mutant 659 in q.js: inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 660 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "fulfilled"
Mutant 661 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state !== "rejected"
Mutant 662 in q.js: inspected.state === "pending" || inspected.state === "rejected" replaced with inspected.state === "pending"
Mutant 663 in q.js: fulfilled replaced with rejected
Mutant 664 in q.js: fulfilled replaced with undefined
Mutant 665 in q.js: fulfilled replaced with null
Mutant 666 in q.js: value replaced with null
Mutant 667 in q.js: value replaced with undefined
Mutant 668 in q.js: value replaced with 0
Mutant 669 in q.js: exception replaced with "newException"
Mutant 670 in q.js: typeof rejected === "function" replaced with rejected !== null
Mutant 671 in q.js: typeof rejected === "function" replaced with typeof rejected !== "undefined"
Mutant 672 in q.js: typeof rejected === "function" replaced with rejected !== void 0
Mutant 673 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, this)
Mutant 674 in q.js: makeStackTraceLong(exception, self) replaced with makeStackTraceLong(exception, null)
Mutant 675 in q.js: exception replaced with exception.message
Mutant 676 in q.js: exception replaced with exception.stack
Mutant 677 in q.js: exception replaced with exception.name
Mutant 678 in q.js: self replaced with self.promiseDispatch
Mutant 679 in q.js: self replaced with self.promiseDispatch.bind(self)
Mutant 680 in q.js: self replaced with self.promiseDispatch.call(self)
Mutant 681 in q.js: exception replaced with null
Mutant 682 in q.js: exception replaced with undefined
Mutant 683 in q.js: exception replaced with new Error()
Mutant 684 in q.js: reject replaced with resolve
Mutant 685 in q.js: newException replaced with newException.message
Mutant 686 in q.js: newException replaced with newException.stack
Mutant 687 in q.js: newException replaced with newException.toString()
Mutant 688 in q.js: reject replaced with resolve
Mutant 689 in q.js: reject replaced with Q.reject
Mutant 690 in q.js: exception replaced with null
Mutant 691 in q.js: exception replaced with undefined
Mutant 692 in q.js: exception replaced with new Error("custom error message")
Mutant 693 in q.js: progressed replaced with progressed + 1
Mutant 694 in q.js: progressed replaced with progressed - 1
Mutant 695 in q.js: progressed replaced with progressed * 2
Mutant 696 in q.js: value replaced with null
Mutant 697 in q.js: value replaced with undefined
Mutant 698 in q.js: value replaced with "foo"
Mutant 699 in q.js: done replaced with !done
Mutant 700 in q.js: done replaced with done && false
Mutant 701 in q.js: done replaced with done || true
Mutant 702 in q.js: deferred.resolve replaced with deferred.reject
Mutant 703 in q.js: deferred.resolve replaced with deferred.notify
Mutant 704 in q.js: deferred.resolve replaced with deferred.then
Mutant 705 in q.js: _fulfilled(value) replaced with _rejected(value)
Mutant 706 in q.js: _fulfilled(value) replaced with _progressed(value)
Mutant 707 in q.js: value replaced with null
Mutant 708 in q.js: value replaced with undefined
Mutant 709 in q.js: done replaced with !done
Mutant 710 in q.js: done replaced with done && false
Mutant 711 in q.js: done replaced with done || true
Mutant 712 in q.js: deferred.resolve replaced with deferred.reject
Mutant 713 in q.js: deferred.resolve replaced with deferred.notify
Mutant 714 in q.js: deferred.resolve replaced with deferred.then
Mutant 715 in q.js: _rejected(exception) replaced with _fulfilled(exception)
Mutant 716 in q.js: _rejected(exception) replaced with _rejected(null)
Mutant 717 in q.js: _rejected(exception) replaced with _progressed(exception)
Mutant 718 in q.js: exception replaced with exception.message
Mutant 719 in q.js: exception replaced with exception.stack
Mutant 720 in q.js: _progressed replaced with _rejected
Mutant 721 in q.js: _progressed replaced with _fulfilled
Mutant 722 in q.js: value replaced with null
Mutant 723 in q.js: value replaced with undefined
Mutant 724 in q.js: value replaced with 0
Mutant 725 in q.js: Q.onerror replaced with Q.onerror(e)
Mutant 726 in q.js: Q.onerror replaced with Q.onerror(new Error())
Mutant 727 in q.js: Q.onerror replaced with Q.onerror(null)
Mutant 728 in q.js: e replaced with null
Mutant 729 in q.js: e replaced with undefined
Mutant 730 in q.js: e replaced with "error"
Mutant 731 in q.js: !threw replaced with threw
Mutant 732 in q.js: !threw replaced with threw === true
Mutant 733 in q.js: deferred.notify replaced with deferred.reject
Mutant 734 in q.js: newValue replaced with null
Mutant 735 in q.js: newValue replaced with undefined
Mutant 736 in q.js: newValue replaced with "foo"
Mutant 737 in q.js: Q replaced with Q.reject
Mutant 738 in q.js: Q replaced with Q.resolve
Mutant 739 in q.js: Q replaced with Q.defer
Mutant 740 in q.js: promise replaced with null
Mutant 741 in q.js: promise replaced with undefined
Mutant 742 in q.js: promise replaced with Q.reject()
Mutant 743 in q.js: callback replaced with callback.bind(null)
Mutant 744 in q.js: callback replaced with callback.apply(null, [value])
Mutant 745 in q.js: callback replaced with callback.call(null, value)
Mutant 746 in q.js: callback replaced with Q.reject(value)
Mutant 747 in q.js: callback replaced with Q.resolve(value)
Mutant 748 in q.js: callback replaced with Q.defer()
Mutant 749 in q.js: value replaced with null
Mutant 750 in q.js: value replaced with undefined
Mutant 751 in q.js: value replaced with () => value
Mutant 752 in q.js: value replaced with null
Mutant 753 in q.js: value replaced with undefined
Mutant 754 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed)
Mutant 755 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(fulfilled, rejected, progressed, "extra argument")
Mutant 756 in q.js: Q(value).then(fulfilled, rejected, progressed) replaced with Q(value).then(rejected, fulfilled, progressed, null)
Mutant 757 in q.js: value replaced with undefined
Mutant 758 in q.js: value replaced with 0
Mutant 759 in q.js: fulfilled replaced with rejected
Mutant 760 in q.js: fulfilled replaced with undefined
Mutant 761 in q.js: fulfilled replaced with null
Mutant 762 in q.js: rejected replaced with resolved
Mutant 763 in q.js: rejected replaced with undefined
Mutant 764 in q.js: progressed replaced with rejected
Mutant 765 in q.js: progressed replaced with fulfilled
Mutant 766 in q.js: progressed replaced with function (value) {
  return value;
}
Mutant 767 in q.js: this.then replaced with this.then.catch
Mutant 768 in q.js: this.then replaced with this.then.reject
Mutant 769 in q.js: this.then replaced with this.then.resolve
Mutant 770 in q.js: function () {
  return value;
} replaced with function () {
  return;
}
Mutant 771 in q.js: function () {
  return value;
} replaced with function () {
  return null;
}
Mutant 772 in q.js: function () {
  return value;
} replaced with function () {
  return false;
}
Mutant 773 in q.js: promise replaced with null
Mutant 774 in q.js: promise replaced with undefined
Mutant 775 in q.js: promise replaced with Q.reject(new Error("error"))
Mutant 776 in q.js: value replaced with null
Mutant 777 in q.js: value replaced with undefined
Mutant 778 in q.js: value replaced with "foo"
Mutant 779 in q.js: function () {
  throw reason;
} replaced with function () {
  throw new Error(reason);
}
Mutant 780 in q.js: function () {
  throw reason;
} replaced with function () {
  return reason;
}
Mutant 781 in q.js: function () {
  throw reason;
} replaced with function () {
  return;
}
Mutant 782 in q.js: promise replaced with null
Mutant 783 in q.js: promise replaced with undefined
Mutant 784 in q.js: promise replaced with {}
Mutant 785 in q.js: reason replaced with null
Mutant 786 in q.js: reason replaced with undefined
Mutant 787 in q.js: reason replaced with "error"
Mutant 788 in q.js: isPromise(value) replaced with !isPromise(value)
Mutant 789 in q.js: isPromise(value) replaced with isPromiseAlike(value)
Mutant 790 in q.js: isPromise(value) replaced with isFulfilled(value)
Mutant 791 in q.js: value replaced with value + 1
Mutant 792 in q.js: value replaced with value - 1
Mutant 793 in q.js: value replaced with value * 2
Mutant 794 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "rejected"
Mutant 795 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "pending"
Mutant 796 in q.js: inspected.state === "fulfilled" replaced with inspected.state === "fulfilled" && inspected.value === undefined
Mutant 797 in q.js: isObject replaced with isArray
Mutant 798 in q.js: isObject replaced with isFunction
Mutant 799 in q.js: isObject replaced with isString
Mutant 800 in q.js: object replaced with object.then
Mutant 801 in q.js: object replaced with object.then(function () {
  return value;
})
Mutant 802 in q.js: object replaced with object.then(function () {
  throw reason;
})
Mutant 803 in q.js: isPromise replaced with !isPromise
Mutant 804 in q.js: isPromise replaced with isPromiseAlike
Mutant 805 in q.js: isPromise replaced with isFulfilled
Mutant 806 in q.js: object replaced with null
Mutant 807 in q.js: object replaced with undefined
Mutant 808 in q.js: object replaced with {}
Mutant 809 in q.js: this.inspect replaced with this.inspect.then
Mutant 810 in q.js: this.inspect replaced with this.inspect.resolve
Mutant 811 in q.js: this.inspect replaced with this.inspect.reject
not replacing this.inspect with this.inspect.then
not replacing this.inspect with this.inspect.resolve
not replacing this.inspect with this.inspect.reject
Mutant 812 in q.js: isPromise replaced with !isPromise
Mutant 813 in q.js: isPromise replaced with isPromise === false
Mutant 814 in q.js: isPromise replaced with isPromise !== true
Mutant 815 in q.js: object replaced with !object
Mutant 816 in q.js: object replaced with object + 1
Mutant 817 in q.js: object replaced with object.length
Mutant 818 in q.js: this.inspect replaced with this.inspect.state
Mutant 819 in q.js: this.inspect replaced with this.inspect.value
Mutant 820 in q.js: this.inspect replaced with this.inspect.reason
not replacing this.inspect with this.inspect.state
not replacing this.inspect with this.inspect.value
not replacing this.inspect with this.inspect.reason
Mutant 821 in q.js: isPromise replaced with isPromiseAlike
Mutant 822 in q.js: isPromise replaced with !isPromise
Mutant 823 in q.js: isPromise replaced with isFulfilled
Mutant 824 in q.js: object replaced with object.then()
Mutant 825 in q.js: object replaced with object.then(function () {
  return reason;
})
Mutant 826 in q.js: object replaced with object.then(function () {
  throw reason;
})
Mutant 827 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === true
Mutant 828 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections !== true
Mutant 829 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 830 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections
Mutant 831 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.includes(promise)
Mutant 832 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with promise in unhandledRejections
Mutant 833 in q.js: array_indexOf(unhandledRejections, promise) !== -1 replaced with unhandledRejections.indexOf(promise) !== -1
Mutant 834 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections, reason)
Mutant 835 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections, promise)
Mutant 836 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledReasons, promise)
Mutant 837 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 838 in q.js: array_indexOf replaced with array_includes
Mutant 839 in q.js: array_indexOf replaced with array_findIndex
Mutant 840 in q.js: unhandledRejections replaced with unhandledRejections.length
Mutant 841 in q.js: unhandledRejections replaced with unhandledReasons.length
Mutant 842 in q.js: unhandledRejections replaced with reportedUnhandledRejections.length
Mutant 843 in q.js: promise replaced with promise.then(function () {
  throw new Error("something went wrong");
})
Mutant 844 in q.js: promise replaced with promise.then(function () {
  return Q.reject("something went wrong");
})
Mutant 845 in q.js: promise replaced with promise.then(function () {
  return Q.reject(new Error("something went wrong"));
})
Mutant 846 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("rejectionHandled", reason, promise)
Mutant 847 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, reason)
Mutant 848 in q.js: process.emit("unhandledRejection", reason, promise) replaced with process.emit("unhandledRejection", reason, null)
Mutant 849 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "foo"
Mutant 850 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "bar"
Mutant 851 in q.js: "unhandledRejection" replaced with "unhandledRejection" + "baz"
Mutant 852 in q.js: reason replaced with null
Mutant 853 in q.js: reason replaced with {}
Mutant 854 in q.js: reason replaced with new Error()
Mutant 855 in q.js: promise replaced with promise.then(function () {
  throw new Error("test");
})
Mutant 856 in q.js: promise replaced with promise.then(function () {
  return Q.reject("test");
})
Mutant 857 in q.js: promise replaced with promise.then(function () {
  return Q.fulfill("test");
})
Mutant 858 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.pop
Mutant 859 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.shift
Mutant 860 in q.js: reportedUnhandledRejections.push replaced with reportedUnhandledRejections.unshift
Mutant 861 in q.js: unhandledRejections.push replaced with unhandledRejections.pop
Mutant 862 in q.js: unhandledRejections.push replaced with unhandledRejections.shift
Mutant 863 in q.js: unhandledRejections.push replaced with unhandledRejections.unshift
Mutant 864 in q.js: promise replaced with null
Mutant 865 in q.js: promise replaced with undefined
Mutant 866 in q.js: promise replaced with Promise.reject()
Mutant 867 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== "undefined"
Mutant 868 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== undefined
Mutant 869 in q.js: reason && typeof reason.stack !== "undefined" replaced with reason && reason.stack !== null
Mutant 870 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 871 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 872 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 873 in q.js: reason.stack replaced with reason.message
Mutant 874 in q.js: reason.stack replaced with reason.name
Mutant 875 in q.js: reason.stack replaced with reason.code
Mutant 876 in q.js: unhandledReasons.push replaced with unhandledReasons.pop
Mutant 877 in q.js: unhandledReasons.push replaced with unhandledReasons.shift
Mutant 878 in q.js: unhandledReasons.push replaced with unhandledReasons.unshift
Mutant 879 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.message
Mutant 880 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.stack
Mutant 881 in q.js: "(no stack) " + reason replaced with "(no stack) " + reason.toString()
Mutant 882 in q.js: !trackUnhandledRejections replaced with trackUnhandledRejections === false
Mutant 883 in q.js: !trackUnhandledRejections replaced with typeof trackUnhandledRejections !== "boolean"
Mutant 884 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(1), promise)
Mutant 885 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(-1), promise)
Mutant 886 in q.js: array_indexOf(unhandledRejections, promise) replaced with array_indexOf(unhandledRejections.slice(0, -1), promise)
Mutant 887 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 888 in q.js: array_indexOf replaced with array_includes
Mutant 889 in q.js: array_indexOf replaced with array_findIndex
Mutant 890 in q.js: unhandledRejections replaced with unhandledRejections.slice()
Mutant 891 in q.js: unhandledRejections replaced with unhandledRejections.concat()
Mutant 892 in q.js: unhandledRejections replaced with unhandledRejections.filter(function (rejection) {
  return rejection === promise;
})
Mutant 893 in q.js: promise replaced with promise.then(function () {})
Mutant 894 in q.js: promise replaced with promise.catch(function () {})
Mutant 895 in q.js: promise replaced with promise.finally(function () {})
Mutant 896 in q.js: at !== -1 replaced with at === -1
Mutant 897 in q.js: at !== -1 replaced with at < -1
Mutant 898 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.length)
Mutant 899 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections[0])
Mutant 900 in q.js: array_indexOf(reportedUnhandledRejections, promise) replaced with array_indexOf(reportedUnhandledRejections.pop())
Mutant 901 in q.js: array_indexOf replaced with array_lastIndexOf
Mutant 902 in q.js: array_indexOf replaced with array_includes
Mutant 903 in q.js: array_indexOf replaced with array_findIndex
Mutant 904 in q.js: reportedUnhandledRejections replaced with unhandledRejections
Mutant 905 in q.js: reportedUnhandledRejections replaced with reportedUnhandledRejections.slice()
Mutant 906 in q.js: reportedUnhandledRejections replaced with []
Mutant 907 in q.js: promise replaced with promise.then(function () {})
Mutant 908 in q.js: promise replaced with promise.catch(function () {})
Mutant 909 in q.js: promise replaced with promise.finally(function () {})
Mutant 910 in q.js: atReport !== -1 replaced with atReport > -1
Mutant 911 in q.js: atReport !== -1 replaced with atReport === -1
Mutant 912 in q.js: atReport !== -1 replaced with atReport < -1
Mutant 913 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at])
Mutant 914 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at])
Mutant 915 in q.js: process.emit("rejectionHandled", unhandledReasons[at], promise) replaced with process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at])
Mutant 916 in q.js: unhandledReasons[at] replaced with unhandledReasons[at + 1]
Mutant 917 in q.js: unhandledReasons[at] replaced with unhandledReasons[at - 1]
Mutant 918 in q.js: unhandledReasons[at] replaced with unhandledReasons[at] = "new reason"
Mutant 919 in q.js: promise replaced with promise.then()
Mutant 920 in q.js: promise replaced with promise.catch()
Mutant 921 in q.js: promise replaced with promise.finally()
Mutant 922 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport = 1)
Mutant 923 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport = at)
Mutant 924 in q.js: reportedUnhandledRejections.splice(atReport, 1) replaced with reportedUnhandledRejections.splice(atReport = array_indexOf(reportedUnhandledRejections, promise))
Mutant 925 in q.js: atReport replaced with atReport.length
Mutant 926 in q.js: atReport replaced with atReport.pop()
Mutant 927 in q.js: atReport replaced with atReport.shift()
Mutant 928 in q.js: 1 replaced with -1
Mutant 929 in q.js: 1 replaced with 0
Mutant 930 in q.js: 1 replaced with 10
Mutant 931 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 0)
Mutant 932 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, -1)
Mutant 933 in q.js: unhandledRejections.splice(at, 1) replaced with unhandledRejections.splice(at, 2)
Mutant 934 in q.js: at replaced with at - 1
Mutant 935 in q.js: at replaced with at + 1
Mutant 936 in q.js: at replaced with at * 2
Mutant 937 in q.js: 1 replaced with 0
Mutant 938 in q.js: 1 replaced with -1
Mutant 939 in q.js: 1 replaced with 2
Mutant 940 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 0)
Mutant 941 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, 2)
Mutant 942 in q.js: unhandledReasons.splice(at, 1) replaced with unhandledReasons.splice(at, unhandledReasons.length - 1)
Mutant 943 in q.js: at replaced with at + 1
Mutant 944 in q.js: at replaced with at - 1
Mutant 945 in q.js: at replaced with at + 2
Mutant 946 in q.js: 1 replaced with 0
Mutant 947 in q.js: 1 replaced with -1
Mutant 948 in q.js: 1 replaced with unhandledReasons.length
Mutant 949 in q.js: rejected replaced with !rejected
Mutant 950 in q.js: rejected replaced with rejected && false
Mutant 951 in q.js: rejected replaced with rejected || true
Mutant 952 in q.js: this replaced with null
Mutant 953 in q.js: this replaced with undefined
Mutant 954 in q.js: this replaced with 0
Mutant 955 in q.js: reason replaced with null
Mutant 956 in q.js: reason replaced with undefined
Mutant 957 in q.js: reason replaced with "some string"
Mutant 958 in q.js: trackRejection replaced with untrackRejection
Mutant 959 in q.js: rejection replaced with null
Mutant 960 in q.js: rejection replaced with undefined
Mutant 961 in q.js: rejection replaced with rejection.reason
Mutant 962 in q.js: reason replaced with null
Mutant 963 in q.js: reason replaced with undefined
Mutant 964 in q.js: reason replaced with new Error()
Mutant 965 in q.js: name === null || name === void 0 replaced with name === undefined
Mutant 966 in q.js: name === null || name === void 0 replaced with name == null
Mutant 967 in q.js: name === null || name === void 0 replaced with name === void 0
Mutant 968 in q.js: value.apply(void 0, args) replaced with value.apply(null, args)
Mutant 969 in q.js: value.apply(void 0, args) replaced with value.apply(args, null)
Mutant 970 in q.js: value.apply(void 0, args) replaced with value.apply(args, void 0)
Mutant 971 in q.js: value.apply replaced with value.call
Mutant 972 in q.js: value.apply replaced with value.bind
Mutant 973 in q.js: value.apply replaced with value.toString
Mutant 974 in q.js: void 0 replaced with null
Mutant 975 in q.js: void 0 replaced with undefined
Mutant 976 in q.js: void 0 replaced with 0
Mutant 977 in q.js: args replaced with args.slice()
Mutant 978 in q.js: args replaced with args.concat()
Mutant 979 in q.js: args replaced with args.map(function (x) {
  return x;
})
Mutant 980 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.slice())
Mutant 981 in q.js: value[name].apply(value, args) replaced with value[name].apply(value, args.concat())
Mutant 982 in q.js: value[name].apply replaced with value[name].call
Mutant 983 in q.js: value[name].apply replaced with value[name].bind
Mutant 984 in q.js: value replaced with null
Mutant 985 in q.js: value replaced with undefined
Mutant 986 in q.js: value replaced with {}
Mutant 987 in q.js: args replaced with null
Mutant 988 in q.js: args replaced with []
Mutant 989 in q.js: args replaced with [1, 2, 3]
Mutant 990 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.slice())
Mutant 991 in q.js: value.apply(thisp, args) replaced with value.apply(thisp, args.concat())
Mutant 992 in q.js: value.apply replaced with value.call
Mutant 993 in q.js: value.apply replaced with value.bind
Mutant 994 in q.js: value.apply replaced with value.toString
Mutant 995 in q.js: thisp replaced with null
Mutant 996 in q.js: thisp replaced with undefined
Mutant 997 in q.js: thisp replaced with 0
Mutant 998 in q.js: args replaced with args.slice()
Mutant 999 in q.js: args replaced with args.concat()
Mutant 1000 in q.js: args replaced with args.map(function (x) {
  return x * 2;
})
Mutant 1001 in q.js: object_keys replaced with object_values
Mutant 1002 in q.js: object_keys replaced with object_entries
Mutant 1003 in q.js: value replaced with null
Mutant 1004 in q.js: value replaced with undefined
Mutant 1005 in q.js: value replaced with {}
Mutant 1006 in q.js: promise.then replaced with promise.catch
Mutant 1007 in q.js: promise.then replaced with promise.finally
Mutant 1008 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1009 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1010 in q.js: deferred.resolve replaced with Q.reject
Mutant 1011 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1012 in q.js: deferred.reject replaced with deferred.notify
Mutant 1013 in q.js: deferred.reject replaced with deferred.reject(new Error())
Mutant 1014 in q.js: deferred.notify replaced with deferred.reject
Mutant 1015 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1016 in q.js: deferred.notify replaced with deferred.progress
Mutant 1017 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1018 in q.js: deferred.reject replaced with deferred.notify
Mutant 1019 in q.js: exception replaced with null
Mutant 1020 in q.js: exception replaced with undefined
Mutant 1021 in q.js: exception replaced with false
Mutant 1022 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[0])
Mutant 1023 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args[1])
Mutant 1024 in q.js: dispatch(object, op, args) replaced with dispatch(object, op, args.slice(1))
Mutant 1025 in q.js: dispatch replaced with "dispatch"
Mutant 1026 in q.js: dispatch replaced with "dispatch" + 1
Mutant 1027 in q.js: object replaced with null
Mutant 1028 in q.js: object replaced with undefined
Mutant 1029 in q.js: object replaced with {}
Mutant 1030 in q.js: op replaced with op + 1
Mutant 1031 in q.js: op replaced with op * 2
Mutant 1032 in q.js: op replaced with op - 1
Mutant 1033 in q.js: args replaced with args[0]
Mutant 1034 in q.js: args replaced with args.slice(1)
Mutant 1035 in q.js: args replaced with args.length
Mutant 1036 in q.js: Q replaced with Q.reject
Mutant 1037 in q.js: Q replaced with Q.fulfill
Mutant 1038 in q.js: Q replaced with Q.defer
Mutant 1039 in q.js: object replaced with null
Mutant 1040 in q.js: object replaced with undefined
Mutant 1041 in q.js: object replaced with {}
Mutant 1042 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(rejected, fulfilled)
Mutant 1043 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(fulfilled)
Mutant 1044 in q.js: Q(value).spread(fulfilled, rejected) replaced with Q(value).spread(null, fulfilled)
Mutant 1045 in q.js: value replaced with undefined
Mutant 1046 in q.js: value replaced with 0
Mutant 1047 in q.js: fulfilled replaced with rejected
Mutant 1048 in q.js: fulfilled replaced with undefined
Mutant 1049 in q.js: fulfilled replaced with null
Mutant 1050 in q.js: rejected replaced with resolved
Mutant 1051 in q.js: rejected replaced with undefined
Mutant 1052 in q.js: rejected replaced with null
Mutant 1053 in q.js: this.all replaced with this.any
Mutant 1054 in q.js: this.all replaced with this.some
Mutant 1055 in q.js: this.all replaced with this.none
not replacing this.all with this.any
not replacing this.all with this.any
not replacing this.all with this.some
not replacing this.all with this.some
not replacing this.all with this.none
not replacing this.all with this.none
Mutant 1056 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(null)
Mutant 1057 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(undefined)
Mutant 1058 in q.js: fulfilled.apply(void 0, array) replaced with fulfilled.apply(this)
Mutant 1059 in q.js: fulfilled.apply replaced with rejected.apply
Mutant 1060 in q.js: fulfilled.apply replaced with fulfilled.call
Mutant 1061 in q.js: fulfilled.apply replaced with fulfilled.bind
Mutant 1062 in q.js: void 0 replaced with null
Mutant 1063 in q.js: void 0 replaced with undefined
Mutant 1064 in q.js: void 0 replaced with {}
Mutant 1065 in q.js: array replaced with array[0]
Mutant 1066 in q.js: array replaced with array.slice(1)
Mutant 1067 in q.js: array replaced with array.concat(array)
Mutant 1068 in q.js: typeof StopIteration === "undefined" replaced with StopIteration === "undefined"
Mutant 1069 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration !== "undefined"
Mutant 1070 in q.js: typeof StopIteration === "undefined" replaced with typeof StopIteration === "object"
Mutant 1071 in q.js: arg replaced with null
Mutant 1072 in q.js: arg replaced with undefined
Mutant 1073 in q.js: arg replaced with 0
Mutant 1074 in q.js: reject replaced with resolve
Mutant 1075 in q.js: exception replaced with null
Mutant 1076 in q.js: exception replaced with undefined
Mutant 1077 in q.js: exception replaced with "error"
Mutant 1078 in q.js: result.done replaced with result.fail
Mutant 1079 in q.js: result.done replaced with result.value
Mutant 1080 in q.js: result.done replaced with result.isRejected
Mutant 1081 in q.js: when(result.value, callback, errback) replaced with when(result.value, errback, callback)
Mutant 1082 in q.js: when(result.value, callback, errback) replaced with when(result.value, callback, callback)
Mutant 1083 in q.js: when(result.value, callback, errback) replaced with when(result.value, function () {}, function () {})
Mutant 1084 in q.js: result.value replaced with result.value + 1
Mutant 1085 in q.js: result.value replaced with result.value * 2
Mutant 1086 in q.js: result.value replaced with result.value - 1
Mutant 1087 in q.js: callback replaced with reject
Mutant 1088 in q.js: callback replaced with undefined
Mutant 1089 in q.js: errback replaced with reject
Mutant 1090 in q.js: errback replaced with resolve
Mutant 1091 in q.js: arg replaced with null
Mutant 1092 in q.js: arg replaced with undefined
Mutant 1093 in q.js: arg replaced with 0
Mutant 1094 in q.js: isStopIteration(exception) replaced with isStopIteration(exception) && exception.value !== undefined
Mutant 1095 in q.js: isStopIteration(exception) replaced with isStopIteration(exception) || exception.value === undefined
Mutant 1096 in q.js: isStopIteration(exception) replaced with typeof exception.value === "undefined"
Mutant 1097 in q.js: exception replaced with exception.message
Mutant 1098 in q.js: exception replaced with exception.stack
Mutant 1099 in q.js: exception.value replaced with exception
Mutant 1100 in q.js: exception.value replaced with null
Mutant 1101 in q.js: exception.value replaced with undefined
Mutant 1102 in q.js: reject replaced with resolve
Mutant 1103 in q.js: exception replaced with exception.message
Mutant 1104 in q.js: exception replaced with exception.stack
Mutant 1105 in q.js: exception replaced with null
Mutant 1106 in q.js: when(result, callback, errback) replaced with when(result, errback, callback)
Mutant 1107 in q.js: when(result, callback, errback) replaced with when(result, callback, errback, null)
Mutant 1108 in q.js: when(result, callback, errback) replaced with when(result, callback, errback, undefined)
Mutant 1109 in q.js: when replaced with Q.reject
Mutant 1110 in q.js: when replaced with Q.resolve
Mutant 1111 in q.js: when replaced with Q.all
Mutant 1112 in q.js: result replaced with result.value
Mutant 1113 in q.js: result replaced with result.then(function (value) {
  return value;
})
Mutant 1114 in q.js: callback replaced with errback
Mutant 1115 in q.js: callback replaced with reject
Mutant 1116 in q.js: callback replaced with resolve
Mutant 1117 in q.js: errback replaced with reject
Mutant 1118 in q.js: errback replaced with resolve
Mutant 1119 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(null)
Mutant 1120 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply(undefined)
Mutant 1121 in q.js: makeGenerator.apply(this, arguments) replaced with makeGenerator.apply({})
Mutant 1122 in q.js: makeGenerator.apply replaced with makeGenerator.call
Mutant 1123 in q.js: makeGenerator.apply replaced with makeGenerator.bind
Mutant 1124 in q.js: this replaced with null
Mutant 1125 in q.js: this replaced with undefined
Mutant 1126 in q.js: this replaced with {}
Mutant 1127 in q.js: arguments replaced with null
Mutant 1128 in q.js: arguments replaced with undefined
Mutant 1129 in q.js: arguments replaced with []
Mutant 1130 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "throw")
Mutant 1131 in q.js: continuer.bind(continuer, "next") replaced with continuer.bind(continuer, "return")
Mutant 1132 in q.js: continuer replaced with continuer.bind(continuer, "throw")
Mutant 1133 in q.js: continuer replaced with continuer.bind(continuer, "next")
Mutant 1134 in q.js: continuer replaced with continuer.bind(continuer, "return")
Mutant 1135 in q.js: "next" replaced with "throw"
Mutant 1136 in q.js: "next" replaced with "return"
Mutant 1137 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "throw"))
Mutant 1138 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "next"))
Mutant 1139 in q.js: continuer.bind(continuer, "throw") replaced with continuer.bind(continuer.bind(continuer, "return"))
Mutant 1140 in q.js: "throw" replaced with "send"
Mutant 1141 in q.js: "throw" replaced with "next"
Mutant 1142 in q.js: callback replaced with errback
Mutant 1143 in q.js: callback replaced with reject
Mutant 1144 in q.js: Q.done replaced with Q.fail
Mutant 1145 in q.js: Q.done replaced with Q.reject
Mutant 1146 in q.js: Q.done replaced with Q.resolve
Mutant 1147 in q.js: makeGenerator replaced with makeGenerator()
Mutant 1148 in q.js: makeGenerator replaced with makeGenerator.call(null)
Mutant 1149 in q.js: makeGenerator replaced with makeGenerator.apply(spawn, [])
Mutant 1150 in q.js: all replaced with none
Mutant 1151 in q.js: all replaced with some
Mutant 1152 in q.js: all replaced with every
Mutant 1153 in q.js: arguments replaced with [1, 2, 3]
Mutant 1154 in q.js: arguments replaced with null
Mutant 1155 in q.js: arguments replaced with undefined
Mutant 1156 in q.js: callback.apply(self, args) replaced with callback.apply(self, args[0])
Mutant 1157 in q.js: callback.apply(self, args) replaced with callback.apply(args[0], args[1])
Mutant 1158 in q.js: callback.apply(self, args) replaced with callback.apply(args[0], self)
Mutant 1159 in q.js: callback.apply replaced with callback.call
Mutant 1160 in q.js: callback.apply replaced with callback.bind
Mutant 1161 in q.js: callback.apply replaced with callback.apply.bind
Mutant 1162 in q.js: self replaced with null
Mutant 1163 in q.js: self replaced with undefined
Mutant 1164 in q.js: self replaced with {}
Mutant 1165 in q.js: args replaced with args[0]
Mutant 1166 in q.js: args replaced with args.slice(1)
Mutant 1167 in q.js: args replaced with args.concat(["extra argument"])
Mutant 1168 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op + args)
Mutant 1169 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.slice())
Mutant 1170 in q.js: Q(object).dispatch(op, args) replaced with Q(object).dispatch(op, args.concat())
Mutant 1171 in q.js: Q replaced with Q.reject
Mutant 1172 in q.js: Q replaced with Q.resolve
Mutant 1173 in q.js: Q replaced with Q.defer
Mutant 1174 in q.js: object replaced with null
Mutant 1175 in q.js: object replaced with undefined
Mutant 1176 in q.js: object replaced with 0
Mutant 1177 in q.js: op replaced with op + 1
Mutant 1178 in q.js: op replaced with op - 1
Mutant 1179 in q.js: op replaced with op * 2
Mutant 1180 in q.js: args replaced with args[0]
Mutant 1181 in q.js: args replaced with args.slice(1)
Mutant 1182 in q.js: args replaced with args.concat(args)
Mutant 1183 in q.js: defer replaced with deferred
Mutant 1184 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.reject, op, args)
Mutant 1185 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.slice(1))
Mutant 1186 in q.js: self.promiseDispatch(deferred.resolve, op, args) replaced with self.promiseDispatch(deferred.resolve, op, args.concat([1]))
Mutant 1187 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1188 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1189 in q.js: deferred.resolve replaced with deferred.resolve(null)
Mutant 1190 in q.js: op replaced with op + 1
Mutant 1191 in q.js: op replaced with op - 1
Mutant 1192 in q.js: op replaced with op * 2
Mutant 1193 in q.js: args replaced with null
Mutant 1194 in q.js: args replaced with undefined
Mutant 1195 in q.js: args replaced with []
Mutant 1196 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1197 in q.js: Q(object).dispatch("get", [key]) replaced with Q(object).dispatch("post", [key, undefined])
Mutant 1198 in q.js: Q replaced with Q.reject
Mutant 1199 in q.js: Q replaced with Q.defer
Mutant 1200 in q.js: object replaced with null
Mutant 1201 in q.js: object replaced with {}
Mutant 1202 in q.js: "get" replaced with "set"
Mutant 1203 in q.js: "get" replaced with "post"
Mutant 1204 in q.js: [key] replaced with [key + 1]
Mutant 1205 in q.js: [key] replaced with [key - 1]
Mutant 1206 in q.js: [key] replaced with [key * 2]
Mutant 1207 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("set", [key])
Mutant 1208 in q.js: this.dispatch("get", [key]) replaced with this.dispatch("post", [key])
Mutant 1209 in q.js: "get" replaced with "set"
Mutant 1210 in q.js: "get" replaced with "post"
Mutant 1211 in q.js: [key] replaced with [key + 1]
Mutant 1212 in q.js: [key] replaced with [key - 1]
Mutant 1213 in q.js: [key] replaced with [key * 2]
Mutant 1214 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value, key])
Mutant 1215 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [key, key])
Mutant 1216 in q.js: Q(object).dispatch("set", [key, value]) replaced with Q(object).dispatch("set", [value])
Mutant 1217 in q.js: Q replaced with Q.reject
Mutant 1218 in q.js: Q replaced with Q.defer
Mutant 1219 in q.js: Q replaced with Q.all
Mutant 1220 in q.js: object replaced with null
Mutant 1221 in q.js: object replaced with undefined
Mutant 1222 in q.js: object replaced with {}
Mutant 1223 in q.js: "set" replaced with "get"
Mutant 1224 in q.js: "set" replaced with "post"
Mutant 1225 in q.js: [key, value] replaced with [value, key]
Mutant 1226 in q.js: [key, value] replaced with [key, value, null]
Mutant 1227 in q.js: [key, value] replaced with [value, key, value]
Mutant 1228 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, value + 1])
Mutant 1229 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, null])
Mutant 1230 in q.js: this.dispatch("set", [key, value]) replaced with this.dispatch("set", [key, "new value"])
Mutant 1231 in q.js: this.dispatch replaced with this.promiseDispatch
Mutant 1232 in q.js: "set" replaced with "setValue"
Mutant 1233 in q.js: "set" replaced with "setProperty"
Mutant 1234 in q.js: "set" replaced with "setter"
Mutant 1235 in q.js: [key, value] replaced with [value, key]
Mutant 1236 in q.js: [key, value] replaced with [key, value + 1]
Mutant 1237 in q.js: [key, value] replaced with [key, Q(value)]
Mutant 1238 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, undefined])
Mutant 1239 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, null])
Mutant 1240 in q.js: Q(object).dispatch("delete", [key]) replaced with Q(object).dispatch("set", [key, ""])
Mutant 1241 in q.js: Q replaced with Q.reject
Mutant 1242 in q.js: object replaced with {}
Mutant 1243 in q.js: [key] replaced with [key, value]
Mutant 1244 in q.js: [key] replaced with [key, "value"]
Mutant 1245 in q.js: [key] replaced with [key, undefined]
Mutant 1246 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("set", [key, undefined])
Mutant 1247 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("get", [key])
Mutant 1248 in q.js: this.dispatch("delete", [key]) replaced with this.dispatch("post", [key, undefined])
Mutant 1249 in q.js: "delete" replaced with "set"
Mutant 1250 in q.js: "delete" replaced with "get"
Mutant 1251 in q.js: "delete" replaced with "post"
Mutant 1252 in q.js: [key] replaced with [key, value]
Mutant 1253 in q.js: [key] replaced with [key + 1]
Mutant 1254 in q.js: [key] replaced with [key - 1]
Mutant 1255 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.slice(1)])
Mutant 1256 in q.js: Q(object).dispatch("post", [name, args]) replaced with Q(object).dispatch("post", [name, args.reverse()])
Mutant 1257 in q.js: Q replaced with Q.reject
Mutant 1258 in q.js: Q replaced with Q.resolve
Mutant 1259 in q.js: Q replaced with Q.defer
Mutant 1260 in q.js: object replaced with null
Mutant 1261 in q.js: object replaced with undefined
Mutant 1262 in q.js: object replaced with {}
Mutant 1263 in q.js: "post" replaced with "get"
Mutant 1264 in q.js: "post" replaced with "set"
Mutant 1265 in q.js: [name, args] replaced with [name, args.concat(array_slice(arguments, 2))]
Mutant 1266 in q.js: [name, args] replaced with [name, args.slice(0, args.length - 1)]
Mutant 1267 in q.js: [name, args] replaced with [name, args.reverse()]
Mutant 1268 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [args, name])
Mutant 1269 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args, 1])
Mutant 1270 in q.js: this.dispatch("post", [name, args]) replaced with this.dispatch("post", [name, args + 1])
Mutant 1271 in q.js: "post" replaced with "put"
Mutant 1272 in q.js: "post" replaced with "get"
Mutant 1273 in q.js: [name, args] replaced with [name, args, 1]
Mutant 1274 in q.js: [name, args] replaced with [name, args, null]
Mutant 1275 in q.js: [name, args] replaced with [name, args, undefined]
Mutant 1276 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1277 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 3)])
Mutant 1278 in q.js: Q(object).dispatch("post", [name, array_slice(arguments, 2)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 4)])
Mutant 1279 in q.js: object replaced with null
Mutant 1280 in q.js: object replaced with undefined
Mutant 1281 in q.js: object replaced with Q(object).then(function () {
  return object;
})
Mutant 1282 in q.js: "post" replaced with "get"
Mutant 1283 in q.js: "post" replaced with "set"
Mutant 1284 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 1)]
Mutant 1285 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 0, 2)]
Mutant 1286 in q.js: [name, array_slice(arguments, 2)] replaced with [name, array_slice(arguments, 2, 1)]
Mutant 1287 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1288 in q.js: 2 replaced with -1
Mutant 1289 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 2)])
Mutant 1290 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, 2)])
Mutant 1291 in q.js: this.dispatch("post", [name, array_slice(arguments, 1)]) replaced with this.dispatch("post", [name, array_slice(arguments, 1, -1)])
Mutant 1292 in q.js: "post" replaced with "put"
Mutant 1293 in q.js: "post" replaced with "patch"
Mutant 1294 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 2)]
Mutant 1295 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 0, 1)]
Mutant 1296 in q.js: [name, array_slice(arguments, 1)] replaced with [name, array_slice(arguments, 1, 2)]
Mutant 1297 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 0, 1))
Mutant 1298 in q.js: array_slice(arguments, 1) replaced with array_slice(array_slice(arguments, 1, 2))
Mutant 1299 in q.js: arguments replaced with array_slice(arguments, 1)
Mutant 1300 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1301 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("call", [void 0, args])
Mutant 1302 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, [args]])
Mutant 1303 in q.js: Q(object).dispatch("apply", [void 0, args]) replaced with Q(object).dispatch("apply", [void 0, args.concat(args)])
Mutant 1304 in q.js: Q replaced with Q.reject
Mutant 1305 in q.js: Q replaced with Q.resolve
Mutant 1306 in q.js: Q replaced with Q.defer
Mutant 1307 in q.js: object replaced with null
Mutant 1308 in q.js: object replaced with undefined
Mutant 1309 in q.js: "apply" replaced with "call"
Mutant 1310 in q.js: "apply" replaced with "bind"
Mutant 1311 in q.js: "apply" replaced with "concat"
Mutant 1312 in q.js: [void 0, args] replaced with [void 0, args.slice(1)]
Mutant 1313 in q.js: [void 0, args] replaced with [void 0, args.reverse()]
Mutant 1314 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [null, args])
Mutant 1315 in q.js: this.dispatch("apply", [void 0, args]) replaced with this.dispatch("apply", [void 0, args.slice(1)])
Mutant 1316 in q.js: "apply" replaced with "call"
Mutant 1317 in q.js: "apply" replaced with "bind"
Mutant 1318 in q.js: "apply" replaced with "apply" + "call"
Mutant 1319 in q.js: [void 0, args] replaced with [void 0, args, void 0]
Mutant 1320 in q.js: [void 0, args] replaced with [void 0, args, null]
Mutant 1321 in q.js: [void 0, args] replaced with [void 0, args, undefined]
Mutant 1322 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("call", [void 0, array_slice(arguments, 1)])
Mutant 1323 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1324 in q.js: Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]) replaced with Q(object).dispatch("post", [name, array_slice(arguments, 1)])
Mutant 1325 in q.js: Q replaced with Q.reject
Mutant 1326 in q.js: Q replaced with Q.resolve
Mutant 1327 in q.js: Q replaced with Q.defer
Mutant 1328 in q.js: object replaced with null
Mutant 1329 in q.js: object replaced with undefined
Mutant 1330 in q.js: "apply" replaced with "call"
Mutant 1331 in q.js: "apply" replaced with "bind"
Mutant 1332 in q.js: "apply" replaced with "post"
Mutant 1333 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1334 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 3)]
Mutant 1335 in q.js: [void 0, array_slice(arguments, 1)] replaced with [void 0, array_slice(arguments, 4)]
Mutant 1336 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1337 in q.js: array_slice(arguments, 1) replaced with array_slice([], 1)
Mutant 1338 in q.js: arguments replaced with array_slice(arguments, 0, 1)
Mutant 1339 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [this, array_slice(arguments)])
Mutant 1340 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 1)])
Mutant 1341 in q.js: this.dispatch("apply", [void 0, array_slice(arguments)]) replaced with this.dispatch("apply", [void 0, array_slice(arguments, 2)])
Mutant 1342 in q.js: "apply" replaced with "call"
Mutant 1343 in q.js: "apply" replaced with "bind"
Mutant 1344 in q.js: "apply" replaced with "post"
Mutant 1345 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 1)]
Mutant 1346 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 2)]
Mutant 1347 in q.js: [void 0, array_slice(arguments)] replaced with [void 0, array_slice(arguments, 3)]
Mutant 1348 in q.js: arguments replaced with array_slice(arguments, 1, 2)
Mutant 1349 in q.js: arguments replaced with array_slice(arguments, 1, 3)
Mutant 1350 in q.js: object replaced with undefined
Mutant 1351 in q.js: object replaced with null
Mutant 1352 in q.js: object replaced with {}
Mutant 1353 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1354 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 1)
Mutant 1355 in q.js: array_slice(arguments, 1) replaced with array_slice([], 1)
Mutant 1356 in q.js: arguments replaced with null
Mutant 1357 in q.js: arguments replaced with []
Mutant 1358 in q.js: arguments replaced with [1, 2, 3]
Mutant 1359 in q.js: 1 replaced with 0
Mutant 1360 in q.js: 1 replaced with -1
Mutant 1361 in q.js: 1 replaced with array.length
Mutant 1362 in q.js: args.concat replaced with args.length
Mutant 1363 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1364 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1365 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1366 in q.js: arguments replaced with arguments[0]
Mutant 1367 in q.js: arguments replaced with arguments.slice(1)
Mutant 1368 in q.js: arguments replaced with [].concat(arguments)
Mutant 1369 in q.js: arguments replaced with args.slice(1)
Mutant 1370 in q.js: arguments replaced with args.concat([])
Mutant 1371 in q.js: arguments replaced with args.slice(0, -1)
Mutant 1372 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1373 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1374 in q.js: arguments replaced with null
Mutant 1375 in q.js: arguments replaced with undefined
Mutant 1376 in q.js: arguments replaced with []
Mutant 1377 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("values", [])
Mutant 1378 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("length", [])
Mutant 1379 in q.js: Q(object).dispatch("keys", []) replaced with Q(object).dispatch("toString", [])
Mutant 1380 in q.js: Q replaced with Q.reject
Mutant 1381 in q.js: Q replaced with Q.defer
Mutant 1382 in q.js: Q replaced with Q.when
Mutant 1383 in q.js: object replaced with object.undefined
Mutant 1384 in q.js: object replaced with object.null
Mutant 1385 in q.js: object replaced with object.undefined.undefined
Mutant 1386 in q.js: "keys" replaced with "values"
Mutant 1387 in q.js: "keys" replaced with "length"
Mutant 1388 in q.js: "keys" replaced with "toString"
Mutant 1389 in q.js: [] replaced with [1]
Mutant 1390 in q.js: [] replaced with null
Mutant 1391 in q.js: [] replaced with undefined
Mutant 1392 in q.js: this.dispatch("keys", []) replaced with this.dispatch("values", [])
Mutant 1393 in q.js: this.dispatch("keys", []) replaced with this.dispatch("length", [])
Mutant 1394 in q.js: this.dispatch("keys", []) replaced with this.dispatch("slice", [1])
Mutant 1395 in q.js: this.dispatch replaced with Q.dispatch
Mutant 1396 in q.js: this.dispatch replaced with Promise.prototype.dispatch
Mutant 1397 in q.js: "keys" replaced with "values"
Mutant 1398 in q.js: "keys" replaced with "length"
Mutant 1399 in q.js: "keys" replaced with "toString"
Mutant 1400 in q.js: [] replaced with [1]
Mutant 1401 in q.js: [] replaced with [1, 2, 3]
Mutant 1402 in q.js: [] replaced with [1, 2, 3, 4, 5]
Mutant 1403 in q.js: defer replaced with deferred
Mutant 1404 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "rejected"
Mutant 1405 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "pending"
Mutant 1406 in q.js: isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled" replaced with promise.inspect().state === "fulfilled" && promise.inspect().value === undefined
Mutant 1407 in q.js: promise replaced with promise.then(function () {
  return;
})
Mutant 1408 in q.js: promise replaced with promise.catch(function () {
  return;
})
Mutant 1409 in q.js: promise replaced with promise.finally(function () {
  return;
})
Mutant 1410 in q.js: promise.inspect replaced with promise.state
Mutant 1411 in q.js: promise.inspect replaced with promise.value
Mutant 1412 in q.js: promise.inspect replaced with promise.reject
Mutant 1413 in q.js: --pendingCount === 0 replaced with pendingCount < 0
Mutant 1414 in q.js: --pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1415 in q.js: --pendingCount === 0 replaced with promises.length === 0
Mutant 1416 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1417 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1418 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1419 in q.js: promises replaced with promises.slice(1)
Mutant 1420 in q.js: promises replaced with promises.concat([Q.reject()])
Mutant 1421 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.inspect().state === "rejected";
})
Mutant 1422 in q.js: deferred.notify replaced with deferred.reject
Mutant 1423 in q.js: deferred.notify replaced with deferred.resolve
Mutant 1424 in q.js: deferred.notify replaced with deferred.progress
Mutant 1425 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress + 1
}
Mutant 1426 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress - 1
}
Mutant 1427 in q.js: {
  index: index,
  value: progress
} replaced with {
  index: index,
  value: progress * 2
}
Mutant 1428 in q.js: pendingCount === 0 replaced with pendingCount < 0
Mutant 1429 in q.js: pendingCount === 0 replaced with pendingCount === promises.length
Mutant 1430 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1431 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1432 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1433 in q.js: deferred.resolve replaced with deferred.cancel
Mutant 1434 in q.js: promises replaced with promises.slice(1)
Mutant 1435 in q.js: promises replaced with promises.concat([])
Mutant 1436 in q.js: promises replaced with promises.map(function (promise) {
  return promise.then(function (value) {
    return value;
  });
})
Mutant 1437 in q.js: all replaced with any
Mutant 1438 in q.js: all replaced with allSettled
Mutant 1439 in q.js: all replaced with allResolved
Mutant 1440 in q.js: this replaced with null
Mutant 1441 in q.js: this replaced with undefined
Mutant 1442 in q.js: this replaced with []
Mutant 1443 in q.js: promises.length === 0 replaced with promises.length > 0
Mutant 1444 in q.js: promises.length === 0 replaced with promises.length !== 0
Mutant 1445 in q.js: promises.length === 0 replaced with promises.length < 0
Mutant 1446 in q.js: Q.resolve replaced with Q.reject
Mutant 1447 in q.js: Q.resolve replaced with Q.defer
Mutant 1448 in q.js: Q.resolve replaced with Q.when
Mutant 1449 in q.js: when(promise, onFulfilled, onRejected, onProgress) replaced with when(promise, onRejected, onFulfilled, onProgress)
Mutant 1450 in q.js: promise replaced with promise.then()
Mutant 1451 in q.js: promise replaced with promise.catch()
Mutant 1452 in q.js: promise replaced with promise.finally()
Mutant 1453 in q.js: onFulfilled replaced with onRejected
Mutant 1454 in q.js: onFulfilled replaced with onProgress
Mutant 1455 in q.js: onFulfilled replaced with noop
Mutant 1456 in q.js: onRejected replaced with onFulfilled
Mutant 1457 in q.js: onRejected replaced with onProgress
Mutant 1458 in q.js: onRejected replaced with deferred.resolve
Mutant 1459 in q.js: onProgress replaced with onRejected
Mutant 1460 in q.js: onProgress replaced with onFulfilled
Mutant 1461 in q.js: onProgress replaced with noop
Mutant 1462 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1463 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1464 in q.js: result replaced with promise
Mutant 1465 in q.js: result replaced with index
Mutant 1466 in q.js: result replaced with progress
Mutant 1467 in q.js: pendingCount === 0 replaced with pendingCount > 0
Mutant 1468 in q.js: pendingCount === 0 replaced with pendingCount < promises.length
Mutant 1469 in q.js: pendingCount === 0 replaced with promises.length > 0
Mutant 1470 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1471 in q.js: deferred.reject replaced with deferred.notify
Mutant 1472 in q.js: deferred.reject replaced with deferred.inspect
Mutant 1473 in q.js: rejection replaced with rejection.message
Mutant 1474 in q.js: rejection replaced with rejection.stack
Mutant 1475 in q.js: rejection replaced with rejection.name
Mutant 1476 in q.js: any replaced with all
Mutant 1477 in q.js: any replaced with none
Mutant 1478 in q.js: any replaced with some
Mutant 1479 in q.js: this replaced with null
Mutant 1480 in q.js: this replaced with undefined
Mutant 1481 in q.js: this replaced with []
Mutant 1482 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allSettled, "allSettled", "allResolved")
Mutant 1483 in q.js: deprecate(allResolved, "allResolved", "allSettled") replaced with deprecate(allResolved, "allSettled", "allResolved")
Mutant 1484 in q.js: allResolved replaced with allRejected
Mutant 1485 in q.js: allResolved replaced with anyResolved
Mutant 1486 in q.js: allResolved replaced with allSettled
Mutant 1487 in q.js: "allResolved" replaced with "allRejected"
Mutant 1488 in q.js: "allResolved" replaced with "anyResolved"
Mutant 1489 in q.js: "allResolved" replaced with "allSettled"
Mutant 1490 in q.js: "allSettled" replaced with "allResolved"
Mutant 1491 in q.js: "allSettled" replaced with "any"
Mutant 1492 in q.js: "allSettled" replaced with "all"
Mutant 1493 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.reject)
Mutant 1494 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.resolve)
Mutant 1495 in q.js: array_map(promises, Q) replaced with array_map(promises, Q.defer)
Mutant 1496 in q.js: array_map replaced with array_filter
Mutant 1497 in q.js: array_map replaced with array_reduce
Mutant 1498 in q.js: array_map replaced with array_find
Mutant 1499 in q.js: promises replaced with promises.slice(0, promises.length - 1)
Mutant 1500 in q.js: promises replaced with promises.concat([Q.reject()])
Mutant 1501 in q.js: promises replaced with promises.map(function (promise) {
  return Q.reject(promise);
})
Mutant 1502 in q.js: Q replaced with Q.reject
Mutant 1503 in q.js: Q replaced with Q.resolve
Mutant 1504 in q.js: Q replaced with Q.defer
Mutant 1505 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop))
Mutant 1506 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop, noop))
Mutant 1507 in q.js: when(promise, noop, noop) replaced with when(promise.then(noop, noop, noop, noop))
Mutant 1508 in q.js: promise replaced with promise.then(function (value) {
  return value + 1;
})
Mutant 1509 in q.js: promise replaced with promise.then(function (value) {
  return value * 2;
})
Mutant 1510 in q.js: noop replaced with Q.reject
Mutant 1511 in q.js: noop replaced with Q.resolve
Mutant 1512 in q.js: noop replaced with Q.defer
Mutant 1513 in q.js: allResolved replaced with allSettled
Mutant 1514 in q.js: allResolved replaced with any
Mutant 1515 in q.js: this replaced with null
Mutant 1516 in q.js: this replaced with undefined
Mutant 1517 in q.js: this replaced with []
Mutant 1518 in q.js: promises replaced with promises.slice(1)
Mutant 1519 in q.js: promises replaced with promises.concat(["new promise"])
Mutant 1520 in q.js: promises replaced with promises.filter(function (promise) {
  return promise.isFulfilled();
})
Mutant 1521 in q.js: promise replaced with promise.then(function () {
  throw new Error("Dummy error");
})
Mutant 1522 in q.js: promise replaced with promise.then(function () {
  return Q.reject("Dummy error");
})
Mutant 1523 in q.js: promise replaced with promise.then(function () {
  return Q.resolve("Dummy value");
})
Mutant 1524 in q.js: promise.then(regardless, regardless) replaced with promise.then(promise, promise)
Mutant 1525 in q.js: promise.then(regardless, regardless) replaced with promise.then(null, null)
Mutant 1526 in q.js: regardless replaced with rejected
Mutant 1527 in q.js: regardless replaced with noop
Mutant 1528 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(rejected, void 0)
Mutant 1529 in q.js: Q(object).then(void 0, rejected) replaced with Q(object).then(null, rejected)
Mutant 1530 in q.js: object replaced with undefined
Mutant 1531 in q.js: void 0 replaced with null
Mutant 1532 in q.js: void 0 replaced with undefined
Mutant 1533 in q.js: void 0 replaced with function () {}
Mutant 1534 in q.js: rejected replaced with fulfilled
Mutant 1535 in q.js: this.then(void 0, rejected) replaced with this.then(null, rejected)
Mutant 1536 in q.js: this.then(void 0, rejected) replaced with this.then(undefined, rejected)
Mutant 1537 in q.js: this.then(void 0, rejected) replaced with this.then("", rejected)
Mutant 1538 in q.js: void 0 replaced with null
Mutant 1539 in q.js: void 0 replaced with undefined
Mutant 1540 in q.js: void 0 replaced with function () {}
Mutant 1541 in q.js: rejected replaced with resolved
Mutant 1542 in q.js: rejected replaced with deferred.reject(rejection)
Mutant 1543 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(null, null, progressed)
Mutant 1544 in q.js: Q(object).then(void 0, void 0, progressed) replaced with Q(object).then(undefined, undefined, progressed)
Mutant 1545 in q.js: object replaced with function () {}
Mutant 1546 in q.js: void 0 replaced with null
Mutant 1547 in q.js: void 0 replaced with undefined
Mutant 1548 in q.js: void 0 replaced with function () {}
Mutant 1549 in q.js: void 0 replaced with null
Mutant 1550 in q.js: void 0 replaced with undefined
Mutant 1551 in q.js: void 0 replaced with function () {}
Mutant 1552 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(null, null, progressed)
Mutant 1553 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(undefined, undefined, progressed)
Mutant 1554 in q.js: this.then(void 0, void 0, progressed) replaced with this.then(void 0, void 0, progressed.bind(this))
Mutant 1555 in q.js: void 0 replaced with null
Mutant 1556 in q.js: void 0 replaced with undefined
Mutant 1557 in q.js: void 0 replaced with function () {}
Mutant 1558 in q.js: void 0 replaced with null
Mutant 1559 in q.js: void 0 replaced with undefined
Mutant 1560 in q.js: void 0 replaced with this
Mutant 1561 in q.js: Q replaced with Q.reject
Mutant 1562 in q.js: Q replaced with Q.resolve
Mutant 1563 in q.js: Q replaced with Q.defer
Mutant 1564 in q.js: object replaced with null
Mutant 1565 in q.js: object replaced with undefined
Mutant 1566 in q.js: object replaced with 0
Mutant 1567 in q.js: callback replaced with callback.fcall()
Mutant 1568 in q.js: callback replaced with callback.fcall().then()
Mutant 1569 in q.js: callback replaced with callback.fcall().then(function (value) {
  return value;
})
Mutant 1570 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply !== "function"
Mutant 1571 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply !== callback
Mutant 1572 in q.js: !callback || typeof callback.apply !== "function" replaced with callback.apply === "function"
Mutant 1573 in q.js: Q replaced with Q.reject
Mutant 1574 in q.js: Q replaced with Q.defer
Mutant 1575 in q.js: Q replaced with Q.when
Mutant 1576 in q.js: callback replaced with callback.fcall()
Mutant 1577 in q.js: callback replaced with callback.call()
Mutant 1578 in q.js: callback replaced with callback.apply()
Mutant 1579 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(rejected, fulfilled, progress)
Mutant 1580 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress + 1)
Mutant 1581 in q.js: Q(object).done(fulfilled, rejected, progress) replaced with Q(object).done(fulfilled, rejected, progress * 2)
Mutant 1582 in q.js: object replaced with null
Mutant 1583 in q.js: object replaced with undefined
Mutant 1584 in q.js: object replaced with 0
Mutant 1585 in q.js: fulfilled replaced with rejected
Mutant 1586 in q.js: fulfilled replaced with progressed
Mutant 1587 in q.js: fulfilled replaced with void 0
Mutant 1588 in q.js: rejected replaced with resolved
Mutant 1589 in q.js: rejected replaced with fulfilled
Mutant 1590 in q.js: progress replaced with null
Mutant 1591 in q.js: progress replaced with undefined
Mutant 1592 in q.js: progress replaced with () => {}
Mutant 1593 in q.js: error replaced with null
Mutant 1594 in q.js: error replaced with undefined
Mutant 1595 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, rejected, function () {})
Mutant 1596 in q.js: this.then(fulfilled, rejected, progress) replaced with this.then(fulfilled, function () {}, progress)
Mutant 1597 in q.js: fulfilled replaced with rejected
Mutant 1598 in q.js: fulfilled replaced with undefined
Mutant 1599 in q.js: rejected replaced with fulfilled
Mutant 1600 in q.js: rejected replaced with undefined
Mutant 1601 in q.js: progress replaced with null
Mutant 1602 in q.js: progress replaced with undefined
Mutant 1603 in q.js: progress replaced with () => {}
Mutant 1604 in q.js: onUnhandledError replaced with onUnhandledError.bind(null)
Mutant 1605 in q.js: onUnhandledError replaced with onUnhandledError.call(null)
Mutant 1606 in q.js: onUnhandledError replaced with onUnhandledError.apply(null)
Mutant 1607 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(null, onUnhandledError)
Mutant 1608 in q.js: promise.then(void 0, onUnhandledError) replaced with promise.then(undefined, onUnhandledError)
Mutant 1609 in q.js: void 0 replaced with null
Mutant 1610 in q.js: void 0 replaced with undefined
Mutant 1611 in q.js: void 0 replaced with "foo"
Mutant 1612 in q.js: onUnhandledError replaced with onUnhandledError()
Mutant 1613 in q.js: onUnhandledError replaced with null
Mutant 1614 in q.js: onUnhandledError replaced with function () {}
Mutant 1615 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, null)
Mutant 1616 in q.js: Q(object).timeout(ms, error) replaced with Q(object).timeout(ms, new Error())
Mutant 1617 in q.js: object replaced with undefined
Mutant 1618 in q.js: object replaced with 0
Mutant 1619 in q.js: ms replaced with ms + 1
Mutant 1620 in q.js: ms replaced with ms - 1
Mutant 1621 in q.js: ms replaced with ms * 2
Mutant 1622 in q.js: error replaced with null
Mutant 1623 in q.js: error replaced with undefined
Mutant 1624 in q.js: error replaced with "error"
Mutant 1625 in q.js: defer replaced with deferred
Mutant 1626 in q.js: !error || "string" === typeof error replaced with error && "string" === typeof error
Mutant 1627 in q.js: !error || "string" === typeof error replaced with error || "string" !== typeof error
Mutant 1628 in q.js: !error || "string" === typeof error replaced with error && "string" !== typeof error
Mutant 1629 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1630 in q.js: deferred.reject replaced with null
Mutant 1631 in q.js: error replaced with null
Mutant 1632 in q.js: error replaced with undefined
Mutant 1633 in q.js: error replaced with "error"
Mutant 1634 in q.js: clearTimeout replaced with clearInterval
Mutant 1635 in q.js: timeoutId replaced with null
Mutant 1636 in q.js: timeoutId replaced with undefined
Mutant 1637 in q.js: timeoutId replaced with 0
Mutant 1638 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1639 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1640 in q.js: value replaced with null
Mutant 1641 in q.js: value replaced with undefined
Mutant 1642 in q.js: clearTimeout replaced with clearInterval
Mutant 1643 in q.js: timeoutId replaced with null
Mutant 1644 in q.js: timeoutId replaced with undefined
Mutant 1645 in q.js: timeoutId replaced with 0
Mutant 1646 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1647 in q.js: deferred.reject replaced with null
Mutant 1648 in q.js: deferred.reject replaced with undefined
Mutant 1649 in q.js: timeout === void 0 replaced with timeout !== void 0
Mutant 1650 in q.js: timeout === void 0 replaced with timeout === null
Mutant 1651 in q.js: timeout === void 0 replaced with timeout === 0
Mutant 1652 in q.js: Q replaced with Q.reject
Mutant 1653 in q.js: Q replaced with Q.defer
Mutant 1654 in q.js: Q replaced with Q.when
Mutant 1655 in q.js: object replaced with null
Mutant 1656 in q.js: object replaced with undefined
Mutant 1657 in q.js: object replaced with 0
Mutant 1658 in q.js: timeout replaced with 0
Mutant 1659 in q.js: timeout replaced with null
Mutant 1660 in q.js: timeout replaced with undefined
Mutant 1661 in q.js: deferred.resolve replaced with deferred.reject
Mutant 1662 in q.js: deferred.resolve replaced with deferred.notify
Mutant 1663 in q.js: deferred.resolve replaced with null
Mutant 1664 in q.js: value replaced with undefined
Mutant 1665 in q.js: value replaced with null
Mutant 1666 in q.js: value replaced with 0
Mutant 1667 in q.js: Q replaced with Q.reject
Mutant 1668 in q.js: Q replaced with Q.defer
Mutant 1669 in q.js: Q replaced with Q.when
Mutant 1670 in q.js: callback replaced with null
Mutant 1671 in q.js: callback replaced with undefined
Mutant 1672 in q.js: callback replaced with function () {}
Mutant 1673 in q.js: args replaced with null
Mutant 1674 in q.js: args replaced with undefined
Mutant 1675 in q.js: args replaced with []
Mutant 1676 in q.js: args replaced with null
Mutant 1677 in q.js: args replaced with undefined
Mutant 1678 in q.js: args replaced with 0
Mutant 1679 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1680 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1681 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1682 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1683 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1684 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1685 in q.js: this.fapply replaced with this.fail
Mutant 1686 in q.js: this.fapply replaced with this.then
Mutant 1687 in q.js: this.fapply replaced with this.catch
not replacing this.fapply with this.fail
not replacing this.fapply with this.fail
not replacing this.fapply with this.then
not replacing this.fapply with this.then
not replacing this.fapply with this.catch
not replacing this.fapply with this.catch
Mutant 1688 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1689 in q.js: deferred.reject replaced with deferred.notify
Mutant 1690 in q.js: deferred.reject replaced with deferred.reject(new Error("Different error message"))
Mutant 1691 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1692 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1693 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1694 in q.js: arguments replaced with null
Mutant 1695 in q.js: arguments replaced with undefined
Mutant 1696 in q.js: arguments replaced with []
Mutant 1697 in q.js: 1 replaced with 0
Mutant 1698 in q.js: 1 replaced with 2
Mutant 1699 in q.js: 1 replaced with null
Mutant 1700 in q.js: callback replaced with null
Mutant 1701 in q.js: callback replaced with undefined
Mutant 1702 in q.js: callback replaced with function () {}
Mutant 1703 in q.js: args replaced with null
Mutant 1704 in q.js: args replaced with undefined
Mutant 1705 in q.js: arguments replaced with null
Mutant 1706 in q.js: arguments replaced with undefined
Mutant 1707 in q.js: arguments replaced with []
Mutant 1708 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1709 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1710 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1711 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1712 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1713 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1714 in q.js: nodeArgs replaced with null
Mutant 1715 in q.js: nodeArgs replaced with undefined
Mutant 1716 in q.js: nodeArgs replaced with []
Mutant 1717 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1718 in q.js: deferred.reject replaced with null
Mutant 1719 in q.js: deferred.reject replaced with deferred.notify
Mutant 1720 in q.js: callback === undefined replaced with callback !== undefined
Mutant 1721 in q.js: callback === undefined replaced with callback !== null
Mutant 1722 in q.js: callback === undefined replaced with callback !== "undefined"
Mutant 1723 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1724 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 0)
Mutant 1725 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, -1)
Mutant 1726 in q.js: arguments replaced with null
Mutant 1727 in q.js: arguments replaced with undefined
Mutant 1728 in q.js: arguments replaced with []
Mutant 1729 in q.js: 1 replaced with 2
Mutant 1730 in q.js: 1 replaced with 3
Mutant 1731 in q.js: 1 replaced with 0
Mutant 1732 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1733 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1734 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1735 in q.js: arguments replaced with null
Mutant 1736 in q.js: arguments replaced with undefined
Mutant 1737 in q.js: arguments replaced with []
Mutant 1738 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1739 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1740 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1741 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1742 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1743 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function (err) {
  throw err;
})
Mutant 1744 in q.js: Q replaced with deferred
Mutant 1745 in q.js: callback replaced with null
Mutant 1746 in q.js: callback replaced with undefined
Mutant 1747 in q.js: callback replaced with function () {}
Mutant 1748 in q.js: nodeArgs replaced with nodeArgs.slice(0)
Mutant 1749 in q.js: nodeArgs replaced with nodeArgs.concat([])
Mutant 1750 in q.js: nodeArgs replaced with nodeArgs.filter(function () {
  return true;
})
Mutant 1751 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1752 in q.js: deferred.reject replaced with deferred.notify
Mutant 1753 in q.js: deferred.reject replaced with undefined
Mutant 1754 in q.js: arguments replaced with arguments.length
Mutant 1755 in q.js: arguments replaced with arguments[0]
Mutant 1756 in q.js: arguments replaced with arguments[arguments.length - 1]
Mutant 1757 in q.js: args.unshift replaced with args.push
Mutant 1758 in q.js: args.unshift replaced with args.pop
Mutant 1759 in q.js: args.unshift replaced with args.shift
Mutant 1760 in q.js: this replaced with null
Mutant 1761 in q.js: this replaced with undefined
Mutant 1762 in q.js: this replaced with 0
Mutant 1763 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(null)
Mutant 1764 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(undefined)
Mutant 1765 in q.js: Q.denodeify.apply(void 0, args) replaced with Q.denodeify.apply(this)
Mutant 1766 in q.js: Q.denodeify.apply replaced with Q.denodeify.call
Mutant 1767 in q.js: Q.denodeify.apply replaced with Q.denodeify.bind
Mutant 1768 in q.js: void 0 replaced with null
Mutant 1769 in q.js: void 0 replaced with undefined
Mutant 1770 in q.js: void 0 replaced with function () {}
Mutant 1771 in q.js: args replaced with args[0]
Mutant 1772 in q.js: args replaced with args.slice(1)
Mutant 1773 in q.js: args replaced with args.concat([deferred.makeNodeResolver()])
Mutant 1774 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1775 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1776 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 0)
Mutant 1777 in q.js: arguments replaced with array_slice(arguments, 2)
Mutant 1778 in q.js: arguments replaced with array_slice(arguments, 3)
Mutant 1779 in q.js: arguments replaced with array_slice(arguments, 4)
Mutant 1780 in q.js: 2 replaced with 1
Mutant 1781 in q.js: 2 replaced with 3
Mutant 1782 in q.js: 2 replaced with 0
Mutant 1783 in q.js: array_slice(arguments) replaced with array_slice(arguments, 1)
Mutant 1784 in q.js: array_slice(arguments) replaced with array_slice(arguments, 0, 1)
Mutant 1785 in q.js: array_slice(arguments) replaced with array_slice(arguments, 2)
Mutant 1786 in q.js: arguments replaced with null
Mutant 1787 in q.js: arguments replaced with undefined
Mutant 1788 in q.js: arguments replaced with []
Mutant 1789 in q.js: defer replaced with deferred
Mutant 1790 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1791 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1792 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1793 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(null)
Mutant 1794 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(function () {})
Mutant 1795 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver(deferred.reject)
Mutant 1796 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments.length)
Mutant 1797 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, arguments[0])
Mutant 1798 in q.js: callback.apply(thisp, arguments) replaced with callback.apply(thisp, null)
Mutant 1799 in q.js: callback.apply replaced with callback.call
Mutant 1800 in q.js: callback.apply replaced with callback.bind
Mutant 1801 in q.js: thisp replaced with null
Mutant 1802 in q.js: thisp replaced with undefined
Mutant 1803 in q.js: thisp replaced with {}
Mutant 1804 in q.js: arguments replaced with null
Mutant 1805 in q.js: arguments replaced with undefined
Mutant 1806 in q.js: arguments replaced with []
Mutant 1807 in q.js: bound replaced with null
Mutant 1808 in q.js: bound replaced with undefined
Mutant 1809 in q.js: bound replaced with () => {}
Mutant 1810 in q.js: nodeArgs replaced with nodeArgs.slice(1)
Mutant 1811 in q.js: nodeArgs replaced with nodeArgs.concat(1)
Mutant 1812 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1813 in q.js: deferred.reject replaced with null
Mutant 1814 in q.js: deferred.reject replaced with undefined
Mutant 1815 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 1)
Mutant 1816 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 2)
Mutant 1817 in q.js: array_slice(arguments, 0) replaced with array_slice(arguments, 3)
Mutant 1818 in q.js: arguments replaced with null
Mutant 1819 in q.js: arguments replaced with undefined
Mutant 1820 in q.js: arguments replaced with []
Mutant 1821 in q.js: 0 replaced with 1
Mutant 1822 in q.js: 0 replaced with -1
Mutant 1823 in q.js: 0 replaced with "hello"
Mutant 1824 in q.js: args.unshift replaced with args.shift
Mutant 1825 in q.js: args.unshift replaced with args.pop
Mutant 1826 in q.js: this replaced with null
Mutant 1827 in q.js: this replaced with undefined
Mutant 1828 in q.js: this replaced with {}
Mutant 1829 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(null, args)
Mutant 1830 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(undefined, args)
Mutant 1831 in q.js: Q.nbind.apply(void 0, args) replaced with Q.nbind.apply(this, args)
Mutant 1832 in q.js: Q.nbind.apply replaced with Q.nbind.call
Mutant 1833 in q.js: Q.nbind.apply replaced with Q.nbind.bind
Mutant 1834 in q.js: Q.nbind.apply replaced with Q.nbind.apply.bind
Mutant 1835 in q.js: void 0 replaced with null
Mutant 1836 in q.js: void 0 replaced with this
Mutant 1837 in q.js: void 0 replaced with 0
Mutant 1838 in q.js: args replaced with args.slice(0)
Mutant 1839 in q.js: args replaced with args.concat()
Mutant 1840 in q.js: args replaced with args.map(function (x) {
  return x;
})
Mutant 1841 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.slice(1))
Mutant 1842 in q.js: Q(object).npost(name, args) replaced with Q(object).npost(name, args.concat(deferred.makeNodeResolver()))
Mutant 1843 in q.js: Q replaced with "Q"
Mutant 1844 in q.js: Q replaced with null
Mutant 1845 in q.js: object replaced with null
Mutant 1846 in q.js: object replaced with undefined
Mutant 1847 in q.js: object replaced with {}
Mutant 1848 in q.js: name replaced with "name".toUpperCase()
Mutant 1849 in q.js: name replaced with name.length
Mutant 1850 in q.js: name replaced with name.toLowerCase()
Mutant 1851 in q.js: args replaced with args[0]
Mutant 1852 in q.js: args replaced with args.length
Mutant 1853 in q.js: args replaced with args.pop()
Mutant 1854 in q.js: args || [] replaced with null
Mutant 1855 in q.js: args || [] replaced with undefined
Mutant 1856 in q.js: args || [] replaced with []
Mutant 1857 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1858 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1859 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1860 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1861 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1862 in q.js: deferred.makeNodeResolver() replaced with deferred.makeNodeResolver().bind(null)
Mutant 1863 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [nodeArgs, name])
Mutant 1864 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, null])
Mutant 1865 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [nodeArgs, name])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, null])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1866 in q.js: "post" replaced with "get"
Mutant 1867 in q.js: "post" replaced with "put"
Mutant 1868 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1869 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 1870 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1871 in q.js: deferred.reject replaced with null
Mutant 1872 in q.js: deferred.reject replaced with undefined
Mutant 1873 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 1)
Mutant 1874 in q.js: array_slice(arguments, 2) replaced with array_slice(arguments, 3)
Mutant 1875 in q.js: array_slice(arguments, 2) replaced with array_slice([1, 2, 3])
Mutant 1876 in q.js: arguments replaced with null
Mutant 1877 in q.js: arguments replaced with undefined
Mutant 1878 in q.js: arguments replaced with 0
Mutant 1879 in q.js: 2 replaced with 1
Mutant 1880 in q.js: 2 replaced with 3
Mutant 1881 in q.js: 2 replaced with 4
Mutant 1882 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1883 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1884 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1885 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1886 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1887 in q.js: deferred.makeNodeResolver() replaced with () => {}
Mutant 1888 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("get", [name, nodeArgs])
Mutant 1889 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, null])
Mutant 1890 in q.js: Q(object).dispatch("post", [name, nodeArgs]) replaced with Q(object).dispatch("post", [name, nodeArgs, function () {}])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("get", [name, nodeArgs])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, null])
not replacing Q(object).dispatch("post", [name, nodeArgs]) with Q(object).dispatch("post", [name, nodeArgs, function () {}])
Mutant 1891 in q.js: Q replaced with Q.reject
Mutant 1892 in q.js: Q replaced with Q.resolve
Mutant 1893 in q.js: Q replaced with Q.defer
Mutant 1894 in q.js: object replaced with undefined
Mutant 1895 in q.js: "post" replaced with "get"
Mutant 1896 in q.js: "post" replaced with "put"
Mutant 1897 in q.js: [name, nodeArgs] replaced with [nodeArgs, name]
Mutant 1898 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.reverse()]
Mutant 1899 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1900 in q.js: deferred.reject replaced with null
Mutant 1901 in q.js: deferred.reject replaced with undefined
Mutant 1902 in q.js: array_slice(arguments, 1) replaced with array_slice(arguments, 2)
Mutant 1903 in q.js: array_slice(arguments, 1) replaced with array_slice(nodeArgs, 1)
Mutant 1904 in q.js: array_slice(arguments, 1) replaced with array_slice(args, 1)
Mutant 1905 in q.js: array_slice replaced with array_slice.length
Mutant 1906 in q.js: arguments replaced with null
Mutant 1907 in q.js: arguments replaced with undefined
Mutant 1908 in q.js: arguments replaced with []
Mutant 1909 in q.js: 1 replaced with 2
Mutant 1910 in q.js: 1 replaced with 0
Mutant 1911 in q.js: 1 replaced with -1
Mutant 1912 in q.js: nodeArgs.push replaced with nodeArgs.unshift
Mutant 1913 in q.js: nodeArgs.push replaced with nodeArgs.pop
Mutant 1914 in q.js: nodeArgs.push replaced with nodeArgs.shift
Mutant 1915 in q.js: deferred.makeNodeResolver() replaced with null
Mutant 1916 in q.js: deferred.makeNodeResolver() replaced with undefined
Mutant 1917 in q.js: deferred.makeNodeResolver() replaced with () => {}
Mutant 1918 in q.js: deferred.makeNodeResolver replaced with deferred.reject
Mutant 1919 in q.js: deferred.makeNodeResolver replaced with deferred.resolve
Mutant 1920 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("get", [name, nodeArgs])
Mutant 1921 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, 1])
Mutant 1922 in q.js: this.dispatch("post", [name, nodeArgs]) replaced with this.dispatch("post", [name, nodeArgs, function () {}])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("get", [name, nodeArgs])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, 1])
not replacing this.dispatch("post", [name, nodeArgs]) with this.dispatch("post", [name, nodeArgs, function () {}])
Mutant 1923 in q.js: "post" replaced with "send"
Mutant 1924 in q.js: "post" replaced with "get"
Mutant 1925 in q.js: "post" replaced with "dispatch"
Mutant 1926 in q.js: [name, nodeArgs] replaced with [name, nodeArgs, null]
Mutant 1927 in q.js: [name, nodeArgs] replaced with [name, nodeArgs.slice(1)]
Mutant 1928 in q.js: deferred.reject replaced with deferred.resolve
Mutant 1929 in q.js: deferred.reject replaced with null
Mutant 1930 in q.js: deferred.reject replaced with undefined
Mutant 1931 in q.js: Q replaced with Q.all
Mutant 1932 in q.js: Q replaced with Q.reject
Mutant 1933 in q.js: Q replaced with Q.defer
Mutant 1934 in q.js: object replaced with null
Mutant 1935 in q.js: object replaced with undefined
Mutant 1936 in q.js: object replaced with 0
Mutant 1937 in q.js: nodeback replaced with nodeback(error, null)
Mutant 1938 in q.js: nodeback replaced with nodeback(null, error)
Mutant 1939 in q.js: nodeback replaced with nodeback(error)
Mutant 1940 in q.js: nodeback replaced with !nodeback
Mutant 1941 in q.js: nodeback replaced with nodeback()
Mutant 1942 in q.js: nodeback replaced with nodeback.call()
Mutant 1943 in q.js: nodeback(null, value) replaced with nodeback(undefined, value)
Mutant 1944 in q.js: nodeback(null, value) replaced with nodeback(value, null)
Mutant 1945 in q.js: nodeback(null, value) replaced with nodeback(value, undefined)
Mutant 1946 in q.js: null replaced with undefined
Mutant 1947 in q.js: null replaced with 0
Mutant 1948 in q.js: null replaced with ""
Mutant 1949 in q.js: value replaced with null
Mutant 1950 in q.js: value replaced with undefined
Mutant 1951 in q.js: value replaced with 0
Mutant 1952 in q.js: nodeback replaced with null
Mutant 1953 in q.js: nodeback replaced with undefined
Mutant 1954 in q.js: nodeback replaced with 0
Mutant 1955 in q.js: error replaced with null
Mutant 1956 in q.js: error replaced with undefined
Mutant 1957 in q.js: error replaced with new Error()
Mutant 1958 in q.js: captureLine replaced with captureLine + 1
Mutant 1959 in q.js: captureLine replaced with captureLine - 1
Mutant 1960 in q.js: captureLine replaced with captureLine * 2
Mutant 1961 in queue.js: Q.defer replaced with Q.reject
Mutant 1962 in queue.js: Q.defer replaced with Q.resolve
Mutant 1963 in queue.js: "head" replaced with "tail"
Mutant 1964 in queue.js: "head" replaced with "head.tail"
Mutant 1965 in queue.js: "head" replaced with "head.tail.head"
Mutant 1966 in queue.js: "tail" replaced with "head"
Mutant 1967 in queue.js: "tail" replaced with "tail.head"
Mutant 1968 in queue.js: "tail" replaced with "tail.tail"
Mutant 1969 in queue.js: closed.resolve replaced with closed.reject
Mutant 1970 in queue.js: error replaced with null
Mutant 1971 in queue.js: error replaced with undefined
Mutant 1972 in queue.js: error replaced with Q.reject(new Error("Queue is closed"))
Mutant 1973 in queue.js: Q.reject replaced with Q.resolve
Mutant 1974 in queue.js: error replaced with null
Mutant 1975 in queue.js: error replaced with undefined
Mutant 1976 in queue.js: error replaced with Q.reject(new Error("Can't get value from closed queue"))
Mutant 1977 in queue.js: ends.resolve replaced with ends.reject
Mutant 1978 in queue.js: ends.resolve replaced with closed.resolve
Mutant 1979 in queue.js: ends.resolve replaced with next.reject
[32m23:08:23 (3103) INFO Instrumenter[39m Instrumented 2 source file(s) with 1980 mutant(s)
[32m23:08:23 (3103) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m23:08:25 (3103) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m23:08:25 (3103) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m23:08:32 (3103) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 6 seconds (net 6754 ms, overhead 0 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~1h 49m) 3/1980 tested (1 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 44m) 4/1980 tested (2 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~2h 44m) 6/1980 tested (4 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 7m) 7/1980 tested (5 survived, 0 timed out)
Mutation testing 0% (elapsed: <1m, remaining: ~3h 2m) 9/1980 tested (7 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 17m) 10/1980 tested (8 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 11m) 12/1980 tested (10 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 21m) 13/1980 tested (11 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~3h 16m) 15/1980 tested (13 survived, 0 timed out)
Mutation testing 0% (elapsed: ~1m, remaining: ~2h 52m) 19/1980 tested (14 survived, 0 timed out)
Mutation testing 1% (elapsed: ~1m, remaining: ~2h 59m) 20/1980 tested (15 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~2h 58m) 22/1980 tested (17 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 4m) 23/1980 tested (18 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 10m) 24/1980 tested (19 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 7m) 26/1980 tested (21 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 12m) 27/1980 tested (22 survived, 0 timed out)
Mutation testing 1% (elapsed: ~2m, remaining: ~3h 10m) 29/1980 tested (24 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 15m) 30/1980 tested (25 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 1m) 34/1980 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 5m) 35/1980 tested (27 survived, 0 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 9m) 36/1980 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 18m) 36/1980 tested (27 survived, 1 timed out)
Mutation testing 1% (elapsed: ~3m, remaining: ~3h 21m) 37/1980 tested (27 survived, 2 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 24m) 38/1980 tested (27 survived, 3 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 32m) 38/1980 tested (27 survived, 3 timed out)
Mutation testing 1% (elapsed: ~4m, remaining: ~3h 35m) 39/1980 tested (27 survived, 4 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 38m) 40/1980 tested (27 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 46m) 40/1980 tested (27 survived, 5 timed out)
Mutation testing 2% (elapsed: ~4m, remaining: ~3h 43m) 42/1980 tested (28 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 45m) 43/1980 tested (29 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 42m) 45/1980 tested (31 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 44m) 46/1980 tested (32 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 36m) 49/1980 tested (33 survived, 6 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 38m) 50/1980 tested (33 survived, 7 timed out)
Mutation testing 2% (elapsed: ~5m, remaining: ~3h 40m) 51/1980 tested (34 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 38m) 53/1980 tested (36 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 35m) 55/1980 tested (37 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 37m) 56/1980 tested (38 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 39m) 57/1980 tested (39 survived, 7 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 40m) 58/1980 tested (39 survived, 8 timed out)
Mutation testing 2% (elapsed: ~6m, remaining: ~3h 42m) 59/1980 tested (40 survived, 8 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 40m) 61/1980 tested (40 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 31m) 65/1980 tested (41 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 29m) 67/1980 tested (42 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 30m) 68/1980 tested (43 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 29m) 70/1980 tested (45 survived, 9 timed out)
Mutation testing 3% (elapsed: ~7m, remaining: ~3h 30m) 71/1980 tested (46 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 28m) 73/1980 tested (48 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 30m) 74/1980 tested (49 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 28m) 76/1980 tested (51 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 30m) 77/1980 tested (52 survived, 9 timed out)
Mutation testing 3% (elapsed: ~8m, remaining: ~3h 28m) 79/1980 tested (54 survived, 9 timed out)
Mutation testing 4% (elapsed: ~8m, remaining: ~3h 29m) 80/1980 tested (55 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 28m) 82/1980 tested (57 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 29m) 83/1980 tested (58 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 28m) 85/1980 tested (60 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 29m) 86/1980 tested (61 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 32m) 86/1980 tested (61 survived, 9 timed out)
Mutation testing 4% (elapsed: ~9m, remaining: ~3h 33m) 87/1980 tested (61 survived, 10 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 35m) 88/1980 tested (61 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 38m) 88/1980 tested (61 survived, 11 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 36m) 90/1980 tested (62 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 40m) 90/1980 tested (62 survived, 12 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 41m) 91/1980 tested (62 survived, 13 timed out)
Mutation testing 4% (elapsed: ~10m, remaining: ~3h 39m) 93/1980 tested (62 survived, 14 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 35m) 96/1980 tested (63 survived, 14 timed out)
Mutation testing 4% (elapsed: ~11m, remaining: ~3h 36m) 97/1980 tested (64 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 35m) 99/1980 tested (66 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 36m) 100/1980 tested (67 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 34m) 102/1980 tested (69 survived, 14 timed out)
Mutation testing 5% (elapsed: ~11m, remaining: ~3h 35m) 103/1980 tested (70 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 34m) 105/1980 tested (72 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 35m) 106/1980 tested (73 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 33m) 108/1980 tested (75 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 34m) 109/1980 tested (76 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 33m) 111/1980 tested (78 survived, 14 timed out)
Mutation testing 5% (elapsed: ~12m, remaining: ~3h 34m) 112/1980 tested (79 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 34m) 113/1980 tested (80 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 33m) 115/1980 tested (82 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 34m) 116/1980 tested (83 survived, 14 timed out)
Mutation testing 5% (elapsed: ~13m, remaining: ~3h 33m) 118/1980 tested (85 survived, 14 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 33m) 119/1980 tested (86 survived, 14 timed out)
Mutation testing 6% (elapsed: ~13m, remaining: ~3h 32m) 121/1980 tested (88 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 33m) 122/1980 tested (89 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 32m) 124/1980 tested (91 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 32m) 125/1980 tested (92 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 31m) 127/1980 tested (94 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 32m) 128/1980 tested (95 survived, 14 timed out)
Mutation testing 6% (elapsed: ~14m, remaining: ~3h 31m) 130/1980 tested (97 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 31m) 131/1980 tested (98 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 30m) 133/1980 tested (100 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 31m) 134/1980 tested (101 survived, 14 timed out)
Mutation testing 6% (elapsed: ~15m, remaining: ~3h 28m) 137/1980 tested (103 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 25m) 140/1980 tested (104 survived, 14 timed out)
Mutation testing 7% (elapsed: ~15m, remaining: ~3h 23m) 143/1980 tested (105 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 25m) 143/1980 tested (105 survived, 14 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 17m) 150/1980 tested (105 survived, 15 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 13m) 154/1980 tested (105 survived, 15 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 12m) 156/1980 tested (107 survived, 15 timed out)
Mutation testing 7% (elapsed: ~16m, remaining: ~3h 13m) 157/1980 tested (108 survived, 15 timed out)
Mutation testing 8% (elapsed: ~16m, remaining: ~3h 12m) 159/1980 tested (110 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 13m) 160/1980 tested (111 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 12m) 162/1980 tested (113 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 13m) 163/1980 tested (114 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 12m) 165/1980 tested (116 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 13m) 166/1980 tested (117 survived, 15 timed out)
Mutation testing 8% (elapsed: ~17m, remaining: ~3h 12m) 168/1980 tested (119 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 12m) 169/1980 tested (120 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 12m) 171/1980 tested (122 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 12m) 172/1980 tested (123 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 12m) 174/1980 tested (125 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 12m) 175/1980 tested (126 survived, 15 timed out)
Mutation testing 8% (elapsed: ~18m, remaining: ~3h 11m) 177/1980 tested (128 survived, 15 timed out)
Mutation testing 8% (elapsed: ~19m, remaining: ~3h 12m) 178/1980 tested (129 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 11m) 180/1980 tested (131 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 12m) 181/1980 tested (132 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 11m) 183/1980 tested (134 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 11m) 184/1980 tested (135 survived, 15 timed out)
Mutation testing 9% (elapsed: ~19m, remaining: ~3h 11m) 186/1980 tested (137 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 11m) 187/1980 tested (138 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 12m) 188/1980 tested (139 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 11m) 190/1980 tested (141 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 12m) 191/1980 tested (142 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 11m) 193/1980 tested (144 survived, 15 timed out)
Mutation testing 9% (elapsed: ~20m, remaining: ~3h 11m) 194/1980 tested (145 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 11m) 196/1980 tested (147 survived, 15 timed out)
Mutation testing 9% (elapsed: ~21m, remaining: ~3h 11m) 197/1980 tested (148 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 10m) 199/1980 tested (150 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 11m) 200/1980 tested (151 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 10m) 202/1980 tested (153 survived, 15 timed out)
Mutation testing 10% (elapsed: ~21m, remaining: ~3h 11m) 203/1980 tested (154 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 10m) 205/1980 tested (156 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 10m) 206/1980 tested (157 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 10m) 208/1980 tested (159 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 10m) 209/1980 tested (160 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 10m) 211/1980 tested (162 survived, 15 timed out)
Mutation testing 10% (elapsed: ~22m, remaining: ~3h 10m) 212/1980 tested (163 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 9m) 214/1980 tested (165 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 10m) 215/1980 tested (166 survived, 15 timed out)
Mutation testing 10% (elapsed: ~23m, remaining: ~3h 9m) 217/1980 tested (168 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 9m) 218/1980 tested (169 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 9m) 220/1980 tested (171 survived, 15 timed out)
Mutation testing 11% (elapsed: ~23m, remaining: ~3h 9m) 221/1980 tested (172 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 10m) 222/1980 tested (173 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 9m) 224/1980 tested (175 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 9m) 225/1980 tested (176 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 9m) 227/1980 tested (178 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 9m) 228/1980 tested (179 survived, 15 timed out)
Mutation testing 11% (elapsed: ~24m, remaining: ~3h 8m) 230/1980 tested (181 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 9m) 231/1980 tested (182 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 6m) 235/1980 tested (184 survived, 15 timed out)
Mutation testing 11% (elapsed: ~25m, remaining: ~3h 6m) 237/1980 tested (184 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 6m) 238/1980 tested (184 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 6m) 239/1980 tested (184 survived, 15 timed out)
Mutation testing 12% (elapsed: ~25m, remaining: ~3h 6m) 241/1980 tested (186 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 6m) 242/1980 tested (187 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 5m) 245/1980 tested (189 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 5m) 246/1980 tested (190 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 5m) 248/1980 tested (192 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 5m) 249/1980 tested (193 survived, 15 timed out)
Mutation testing 12% (elapsed: ~26m, remaining: ~3h 4m) 251/1980 tested (195 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 5m) 252/1980 tested (196 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 4m) 254/1980 tested (198 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 4m) 255/1980 tested (199 survived, 15 timed out)
Mutation testing 12% (elapsed: ~27m, remaining: ~3h 4m) 257/1980 tested (201 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 4m) 258/1980 tested (202 survived, 15 timed out)
Mutation testing 13% (elapsed: ~27m, remaining: ~3h 4m) 260/1980 tested (204 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 4m) 261/1980 tested (205 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 3m) 263/1980 tested (207 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 4m) 264/1980 tested (208 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 4m) 265/1980 tested (209 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 3m) 267/1980 tested (211 survived, 15 timed out)
Mutation testing 13% (elapsed: ~28m, remaining: ~3h 4m) 268/1980 tested (212 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 3m) 270/1980 tested (214 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 3m) 271/1980 tested (215 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 3m) 273/1980 tested (217 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 3m) 274/1980 tested (218 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 3m) 276/1980 tested (220 survived, 15 timed out)
Mutation testing 13% (elapsed: ~29m, remaining: ~3h 3m) 277/1980 tested (221 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 2m) 279/1980 tested (223 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 3m) 280/1980 tested (224 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 2m) 282/1980 tested (226 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 2m) 283/1980 tested (227 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 2m) 285/1980 tested (229 survived, 15 timed out)
Mutation testing 14% (elapsed: ~30m, remaining: ~3h 2m) 286/1980 tested (230 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 2m) 288/1980 tested (232 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 2m) 289/1980 tested (233 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 1m) 291/1980 tested (235 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 2m) 292/1980 tested (236 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 1m) 294/1980 tested (238 survived, 15 timed out)
Mutation testing 14% (elapsed: ~31m, remaining: ~3h 1m) 295/1980 tested (239 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 1m) 297/1980 tested (241 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 1m) 298/1980 tested (242 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 1m) 300/1980 tested (244 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 1m) 301/1980 tested (245 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 1m) 302/1980 tested (246 survived, 15 timed out)
Mutation testing 15% (elapsed: ~32m, remaining: ~3h 1m) 304/1980 tested (248 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 1m) 305/1980 tested (249 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 0m) 307/1980 tested (251 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 0m) 308/1980 tested (252 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 0m) 310/1980 tested (254 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 0m) 311/1980 tested (255 survived, 15 timed out)
Mutation testing 15% (elapsed: ~33m, remaining: ~3h 0m) 313/1980 tested (257 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~3h 0m) 314/1980 tested (258 survived, 15 timed out)
Mutation testing 15% (elapsed: ~34m, remaining: ~2h 59m) 316/1980 tested (260 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~3h 0m) 317/1980 tested (261 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 59m) 319/1980 tested (263 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 59m) 320/1980 tested (264 survived, 15 timed out)
Mutation testing 16% (elapsed: ~34m, remaining: ~2h 59m) 322/1980 tested (266 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 59m) 323/1980 tested (267 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 59m) 325/1980 tested (269 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 59m) 326/1980 tested (270 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 57m) 330/1980 tested (271 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 57m) 332/1980 tested (273 survived, 15 timed out)
Mutation testing 16% (elapsed: ~35m, remaining: ~2h 57m) 333/1980 tested (274 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~2h 56m) 335/1980 tested (276 survived, 15 timed out)
Mutation testing 16% (elapsed: ~36m, remaining: ~2h 56m) 336/1980 tested (277 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 56m) 338/1980 tested (279 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 56m) 339/1980 tested (280 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 56m) 341/1980 tested (282 survived, 15 timed out)
Mutation testing 17% (elapsed: ~36m, remaining: ~2h 54m) 345/1980 tested (283 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 54m) 346/1980 tested (284 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 54m) 348/1980 tested (286 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 54m) 349/1980 tested (287 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 54m) 350/1980 tested (288 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 54m) 352/1980 tested (290 survived, 15 timed out)
Mutation testing 17% (elapsed: ~37m, remaining: ~2h 54m) 353/1980 tested (291 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 53m) 355/1980 tested (293 survived, 15 timed out)
Mutation testing 17% (elapsed: ~38m, remaining: ~2h 54m) 356/1980 tested (294 survived, 15 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 53m) 358/1980 tested (296 survived, 15 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 53m) 359/1980 tested (297 survived, 15 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 53m) 361/1980 tested (299 survived, 15 timed out)
Mutation testing 18% (elapsed: ~38m, remaining: ~2h 53m) 362/1980 tested (300 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 53m) 364/1980 tested (302 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 53m) 365/1980 tested (303 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 368/1980 tested (305 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 369/1980 tested (306 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 371/1980 tested (308 survived, 15 timed out)
Mutation testing 18% (elapsed: ~39m, remaining: ~2h 52m) 372/1980 tested (309 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 52m) 373/1980 tested (310 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 51m) 375/1980 tested (312 survived, 15 timed out)
Mutation testing 18% (elapsed: ~40m, remaining: ~2h 52m) 376/1980 tested (313 survived, 15 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 51m) 378/1980 tested (315 survived, 15 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 51m) 379/1980 tested (316 survived, 15 timed out)
Mutation testing 19% (elapsed: ~40m, remaining: ~2h 51m) 381/1980 tested (318 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 51m) 382/1980 tested (319 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 51m) 384/1980 tested (321 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 51m) 385/1980 tested (322 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 50m) 387/1980 tested (324 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 50m) 388/1980 tested (325 survived, 15 timed out)
Mutation testing 19% (elapsed: ~41m, remaining: ~2h 50m) 390/1980 tested (327 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 50m) 391/1980 tested (328 survived, 15 timed out)
Mutation testing 19% (elapsed: ~42m, remaining: ~2h 50m) 393/1980 tested (330 survived, 15 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 49m) 396/1980 tested (331 survived, 15 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 47m) 401/1980 tested (332 survived, 15 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 46m) 404/1980 tested (332 survived, 15 timed out)
Mutation testing 20% (elapsed: ~42m, remaining: ~2h 46m) 405/1980 tested (332 survived, 15 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 46m) 406/1980 tested (332 survived, 15 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 46m) 407/1980 tested (332 survived, 16 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 47m) 407/1980 tested (332 survived, 16 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 47m) 408/1980 tested (332 survived, 17 timed out)
Mutation testing 20% (elapsed: ~43m, remaining: ~2h 47m) 409/1980 tested (332 survived, 18 timed out)
Mutation testing 21% (elapsed: ~43m, remaining: ~2h 44m) 417/1980 tested (332 survived, 18 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 43m) 420/1980 tested (333 survived, 18 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 44m) 420/1980 tested (333 survived, 18 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 43m) 423/1980 tested (333 survived, 19 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 43m) 424/1980 tested (334 survived, 19 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 43m) 425/1980 tested (334 survived, 20 timed out)
Mutation testing 21% (elapsed: ~44m, remaining: ~2h 44m) 425/1980 tested (334 survived, 20 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 43m) 427/1980 tested (334 survived, 21 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 43m) 429/1980 tested (336 survived, 21 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 43m) 430/1980 tested (337 survived, 21 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 43m) 432/1980 tested (339 survived, 21 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 43m) 433/1980 tested (340 survived, 21 timed out)
Mutation testing 21% (elapsed: ~45m, remaining: ~2h 42m) 435/1980 tested (342 survived, 21 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 42m) 437/1980 tested (343 survived, 21 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 43m) 437/1980 tested (343 survived, 21 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 42m) 439/1980 tested (344 survived, 22 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 42m) 440/1980 tested (345 survived, 22 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 42m) 442/1980 tested (346 survived, 22 timed out)
Mutation testing 22% (elapsed: ~46m, remaining: ~2h 42m) 444/1980 tested (348 survived, 22 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 42m) 445/1980 tested (349 survived, 22 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 41m) 447/1980 tested (351 survived, 22 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 41m) 448/1980 tested (352 survived, 22 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 41m) 450/1980 tested (354 survived, 22 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 41m) 451/1980 tested (355 survived, 22 timed out)
Mutation testing 22% (elapsed: ~47m, remaining: ~2h 41m) 453/1980 tested (357 survived, 22 timed out)
Mutation testing 22% (elapsed: ~48m, remaining: ~2h 41m) 454/1980 tested (358 survived, 22 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 40m) 456/1980 tested (360 survived, 22 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 41m) 457/1980 tested (361 survived, 22 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 40m) 459/1980 tested (363 survived, 22 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 40m) 460/1980 tested (364 survived, 22 timed out)
Mutation testing 23% (elapsed: ~48m, remaining: ~2h 40m) 462/1980 tested (366 survived, 22 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 40m) 463/1980 tested (367 survived, 22 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 40m) 465/1980 tested (369 survived, 22 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 40m) 466/1980 tested (370 survived, 22 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 468/1980 tested (372 survived, 22 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 40m) 469/1980 tested (373 survived, 22 timed out)
Mutation testing 23% (elapsed: ~49m, remaining: ~2h 39m) 471/1980 tested (375 survived, 22 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 39m) 472/1980 tested (376 survived, 22 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 39m) 473/1980 tested (377 survived, 22 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 39m) 475/1980 tested (379 survived, 22 timed out)
Mutation testing 23% (elapsed: ~50m, remaining: ~2h 40m) 475/1980 tested (379 survived, 22 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 39m) 478/1980 tested (380 survived, 23 timed out)
Mutation testing 24% (elapsed: ~50m, remaining: ~2h 39m) 479/1980 tested (380 survived, 23 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 39m) 480/1980 tested (380 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 39m) 482/1980 tested (382 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 38m) 484/1980 tested (383 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 38m) 485/1980 tested (384 survived, 24 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 38m) 486/1980 tested (384 survived, 25 timed out)
Mutation testing 24% (elapsed: ~51m, remaining: ~2h 37m) 491/1980 tested (384 survived, 25 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 37m) 491/1980 tested (384 survived, 25 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 37m) 492/1980 tested (384 survived, 26 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 37m) 493/1980 tested (384 survived, 27 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 38m) 493/1980 tested (384 survived, 27 timed out)
Mutation testing 24% (elapsed: ~52m, remaining: ~2h 38m) 494/1980 tested (384 survived, 28 timed out)
Mutation testing 25% (elapsed: ~52m, remaining: ~2h 38m) 496/1980 tested (386 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 38m) 497/1980 tested (387 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 37m) 499/1980 tested (389 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 37m) 500/1980 tested (390 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 37m) 502/1980 tested (392 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 37m) 503/1980 tested (393 survived, 28 timed out)
Mutation testing 25% (elapsed: ~53m, remaining: ~2h 37m) 505/1980 tested (395 survived, 28 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 36m) 507/1980 tested (396 survived, 28 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 37m) 507/1980 tested (396 survived, 28 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 37m) 508/1980 tested (396 survived, 29 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 37m) 509/1980 tested (397 survived, 29 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 37m) 510/1980 tested (397 survived, 29 timed out)
Mutation testing 25% (elapsed: ~54m, remaining: ~2h 36m) 513/1980 tested (397 survived, 29 timed out)
Mutation testing 25% (elapsed: ~55m, remaining: ~2h 36m) 514/1980 tested (397 survived, 29 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 36m) 515/1980 tested (397 survived, 29 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 36m) 516/1980 tested (397 survived, 29 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 37m) 517/1980 tested (398 survived, 29 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 37m) 518/1980 tested (399 survived, 29 timed out)
Mutation testing 26% (elapsed: ~55m, remaining: ~2h 36m) 520/1980 tested (401 survived, 29 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 36m) 521/1980 tested (402 survived, 29 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 36m) 523/1980 tested (404 survived, 29 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 36m) 524/1980 tested (405 survived, 29 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 36m) 526/1980 tested (407 survived, 29 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 36m) 527/1980 tested (408 survived, 29 timed out)
Mutation testing 26% (elapsed: ~56m, remaining: ~2h 35m) 529/1980 tested (410 survived, 29 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 35m) 530/1980 tested (411 survived, 29 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 35m) 532/1980 tested (413 survived, 29 timed out)
Mutation testing 26% (elapsed: ~57m, remaining: ~2h 35m) 533/1980 tested (414 survived, 29 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 35m) 535/1980 tested (416 survived, 29 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 35m) 536/1980 tested (417 survived, 29 timed out)
Mutation testing 27% (elapsed: ~57m, remaining: ~2h 35m) 538/1980 tested (419 survived, 29 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 35m) 539/1980 tested (420 survived, 29 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 34m) 541/1980 tested (422 survived, 29 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 34m) 542/1980 tested (423 survived, 29 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 34m) 543/1980 tested (424 survived, 29 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 34m) 545/1980 tested (426 survived, 29 timed out)
Mutation testing 27% (elapsed: ~58m, remaining: ~2h 34m) 546/1980 tested (427 survived, 29 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 34m) 548/1980 tested (429 survived, 29 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 34m) 549/1980 tested (430 survived, 29 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 33m) 551/1980 tested (432 survived, 29 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 33m) 552/1980 tested (433 survived, 29 timed out)
Mutation testing 27% (elapsed: ~59m, remaining: ~2h 33m) 554/1980 tested (435 survived, 29 timed out)
Mutation testing 28% (elapsed: ~59m, remaining: ~2h 33m) 555/1980 tested (436 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 33m) 557/1980 tested (438 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 33m) 558/1980 tested (439 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 32m) 560/1980 tested (441 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 33m) 561/1980 tested (442 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 32m) 563/1980 tested (444 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 0m, remaining: ~2h 32m) 564/1980 tested (445 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 32m) 566/1980 tested (447 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 32m) 567/1980 tested (448 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 32m) 569/1980 tested (450 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 32m) 570/1980 tested (451 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 32m) 571/1980 tested (452 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 1m, remaining: ~2h 31m) 573/1980 tested (454 survived, 29 timed out)
Mutation testing 28% (elapsed: ~1h 2m, remaining: ~2h 31m) 574/1980 tested (455 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 31m) 576/1980 tested (457 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 31m) 577/1980 tested (458 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 31m) 579/1980 tested (460 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 31m) 580/1980 tested (461 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 2m, remaining: ~2h 30m) 582/1980 tested (463 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 30m) 583/1980 tested (464 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 30m) 585/1980 tested (466 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 30m) 586/1980 tested (467 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 30m) 588/1980 tested (469 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 30m) 589/1980 tested (470 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 3m, remaining: ~2h 30m) 591/1980 tested (472 survived, 29 timed out)
Mutation testing 29% (elapsed: ~1h 4m, remaining: ~2h 30m) 592/1980 tested (473 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 594/1980 tested (475 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 595/1980 tested (476 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 597/1980 tested (478 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 598/1980 tested (479 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 4m, remaining: ~2h 29m) 600/1980 tested (481 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 29m) 601/1980 tested (482 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 603/1980 tested (484 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 604/1980 tested (485 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 606/1980 tested (487 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 607/1980 tested (488 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 5m, remaining: ~2h 28m) 609/1980 tested (490 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 28m) 610/1980 tested (491 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 28m) 611/1980 tested (492 survived, 29 timed out)
Mutation testing 30% (elapsed: ~1h 6m, remaining: ~2h 27m) 613/1980 tested (494 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 27m) 614/1980 tested (495 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 26m) 618/1980 tested (496 survived, 29 timed out)
Mutation testing 31% (elapsed: ~1h 6m, remaining: ~2h 26m) 620/1980 tested (496 survived, 30 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 26m) 620/1980 tested (496 survived, 30 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 26m) 621/1980 tested (496 survived, 31 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 27m) 621/1980 tested (496 survived, 31 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 27m) 622/1980 tested (496 survived, 32 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 27m) 623/1980 tested (496 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 7m, remaining: ~2h 27m) 623/1980 tested (496 survived, 33 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 27m) 624/1980 tested (496 survived, 34 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 27m) 625/1980 tested (496 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 28m) 625/1980 tested (496 survived, 35 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 28m) 626/1980 tested (496 survived, 36 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 28m) 627/1980 tested (496 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 8m, remaining: ~2h 27m) 629/1980 tested (498 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 27m) 630/1980 tested (499 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 630/1980 tested (499 survived, 37 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 631/1980 tested (499 survived, 38 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 632/1980 tested (499 survived, 39 timed out)
Mutation testing 31% (elapsed: ~1h 9m, remaining: ~2h 28m) 633/1980 tested (500 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 9m, remaining: ~2h 27m) 635/1980 tested (502 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 636/1980 tested (503 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 638/1980 tested (505 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 639/1980 tested (506 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 641/1980 tested (508 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 27m) 642/1980 tested (509 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 10m, remaining: ~2h 26m) 644/1980 tested (511 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 645/1980 tested (512 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 647/1980 tested (514 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 26m) 648/1980 tested (515 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 652/1980 tested (516 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 652/1980 tested (516 survived, 39 timed out)
Mutation testing 32% (elapsed: ~1h 11m, remaining: ~2h 25m) 653/1980 tested (516 survived, 40 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 654/1980 tested (516 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 656/1980 tested (518 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 657/1980 tested (519 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 659/1980 tested (521 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 660/1980 tested (522 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 12m, remaining: ~2h 25m) 662/1980 tested (524 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 663/1980 tested (525 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 663/1980 tested (525 survived, 41 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 664/1980 tested (525 survived, 42 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 665/1980 tested (525 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 665/1980 tested (525 survived, 43 timed out)
Mutation testing 33% (elapsed: ~1h 13m, remaining: ~2h 25m) 666/1980 tested (525 survived, 44 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 25m) 667/1980 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 25m) 667/1980 tested (525 survived, 45 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 25m) 668/1980 tested (525 survived, 46 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 25m) 669/1980 tested (525 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 26m) 669/1980 tested (525 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 14m, remaining: ~2h 25m) 671/1980 tested (525 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 25m) 672/1980 tested (525 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 25m) 673/1980 tested (525 survived, 47 timed out)
Mutation testing 33% (elapsed: ~1h 15m, remaining: ~2h 26m) 673/1980 tested (525 survived, 47 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 674/1980 tested (525 survived, 48 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 675/1980 tested (525 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 15m, remaining: ~2h 26m) 676/1980 tested (525 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 677/1980 tested (525 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 678/1980 tested (525 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 25m) 680/1980 tested (527 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 680/1980 tested (527 survived, 49 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 681/1980 tested (527 survived, 50 timed out)
Mutation testing 34% (elapsed: ~1h 16m, remaining: ~2h 26m) 682/1980 tested (527 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 26m) 682/1980 tested (527 survived, 51 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 26m) 683/1980 tested (527 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 26m) 683/1980 tested (527 survived, 52 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 26m) 684/1980 tested (527 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 26m) 685/1980 tested (527 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 17m, remaining: ~2h 26m) 686/1980 tested (527 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 687/1980 tested (527 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 687/1980 tested (527 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 27m) 688/1980 tested (527 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 690/1980 tested (528 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 691/1980 tested (528 survived, 53 timed out)
Mutation testing 34% (elapsed: ~1h 18m, remaining: ~2h 26m) 692/1980 tested (528 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 26m) 693/1980 tested (528 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 26m) 694/1980 tested (529 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 26m) 696/1980 tested (531 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 26m) 697/1980 tested (532 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 25m) 699/1980 tested (534 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 19m, remaining: ~2h 26m) 699/1980 tested (534 survived, 53 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 26m) 700/1980 tested (534 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 26m) 701/1980 tested (534 survived, 54 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 26m) 702/1980 tested (534 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 26m) 702/1980 tested (534 survived, 55 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 26m) 703/1980 tested (534 survived, 56 timed out)
Mutation testing 35% (elapsed: ~1h 20m, remaining: ~2h 26m) 705/1980 tested (534 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 26m) 705/1980 tested (534 survived, 57 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 26m) 706/1980 tested (534 survived, 58 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 26m) 707/1980 tested (534 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 26m) 707/1980 tested (534 survived, 59 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 26m) 708/1980 tested (534 survived, 60 timed out)
Mutation testing 35% (elapsed: ~1h 21m, remaining: ~2h 26m) 709/1980 tested (534 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 26m) 709/1980 tested (534 survived, 61 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 26m) 710/1980 tested (534 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 26m) 711/1980 tested (535 survived, 62 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 26m) 712/1980 tested (535 survived, 63 timed out)
Mutation testing 35% (elapsed: ~1h 22m, remaining: ~2h 27m) 712/1980 tested (535 survived, 63 timed out)
Mutation testing 36% (elapsed: ~1h 22m, remaining: ~2h 27m) 713/1980 tested (535 survived, 64 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 27m) 714/1980 tested (535 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 27m) 714/1980 tested (535 survived, 65 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 27m) 715/1980 tested (535 survived, 66 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 27m) 716/1980 tested (535 survived, 67 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 27m) 716/1980 tested (535 survived, 67 timed out)
Mutation testing 36% (elapsed: ~1h 23m, remaining: ~2h 27m) 717/1980 tested (535 survived, 68 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 27m) 718/1980 tested (535 survived, 69 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 27m) 718/1980 tested (535 survived, 69 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 27m) 719/1980 tested (535 survived, 70 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 27m) 720/1980 tested (535 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 27m) 721/1980 tested (536 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 24m, remaining: ~2h 27m) 723/1980 tested (538 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 27m) 724/1980 tested (539 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 27m) 726/1980 tested (541 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 27m) 727/1980 tested (542 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 26m) 729/1980 tested (544 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 26m) 730/1980 tested (545 survived, 71 timed out)
Mutation testing 36% (elapsed: ~1h 25m, remaining: ~2h 26m) 732/1980 tested (547 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 26m) 733/1980 tested (548 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 25m) 735/1980 tested (550 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 25m) 736/1980 tested (551 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 25m) 738/1980 tested (553 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 25m) 739/1980 tested (554 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 26m, remaining: ~2h 25m) 741/1980 tested (556 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 25m) 742/1980 tested (557 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 744/1980 tested (559 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 745/1980 tested (560 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 746/1980 tested (561 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 748/1980 tested (563 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 27m, remaining: ~2h 24m) 749/1980 tested (564 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 24m) 751/1980 tested (566 survived, 71 timed out)
Mutation testing 37% (elapsed: ~1h 28m, remaining: ~2h 23m) 752/1980 tested (567 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 23m) 754/1980 tested (569 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 23m) 755/1980 tested (570 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 23m) 757/1980 tested (572 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 28m, remaining: ~2h 23m) 758/1980 tested (573 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 760/1980 tested (575 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 761/1980 tested (576 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 763/1980 tested (578 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 764/1980 tested (579 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 766/1980 tested (581 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 29m, remaining: ~2h 22m) 767/1980 tested (582 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 21m) 769/1980 tested (584 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 21m) 770/1980 tested (585 survived, 71 timed out)
Mutation testing 38% (elapsed: ~1h 30m, remaining: ~2h 21m) 772/1980 tested (587 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 30m, remaining: ~2h 21m) 773/1980 tested (588 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 30m, remaining: ~2h 20m) 775/1980 tested (590 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 30m, remaining: ~2h 20m) 776/1980 tested (591 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 20m) 778/1980 tested (593 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 20m) 779/1980 tested (594 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 20m) 781/1980 tested (596 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 20m) 782/1980 tested (597 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 20m) 783/1980 tested (598 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 31m, remaining: ~2h 19m) 785/1980 tested (600 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 19m) 786/1980 tested (601 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 19m) 788/1980 tested (603 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 19m) 789/1980 tested (604 survived, 71 timed out)
Mutation testing 39% (elapsed: ~1h 32m, remaining: ~2h 19m) 791/1980 tested (606 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 32m, remaining: ~2h 19m) 792/1980 tested (607 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 32m, remaining: ~2h 18m) 794/1980 tested (609 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 18m) 795/1980 tested (610 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 17m) 798/1980 tested (612 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 16m) 803/1980 tested (612 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 16m) 805/1980 tested (614 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 16m) 806/1980 tested (615 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 33m, remaining: ~2h 16m) 808/1980 tested (617 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 16m) 809/1980 tested (618 survived, 71 timed out)
Mutation testing 40% (elapsed: ~1h 34m, remaining: ~2h 15m) 811/1980 tested (620 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 15m) 812/1980 tested (621 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 15m) 814/1980 tested (623 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 15m) 815/1980 tested (624 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 34m, remaining: ~2h 14m) 817/1980 tested (626 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 14m) 818/1980 tested (627 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 14m) 820/1980 tested (629 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 14m) 821/1980 tested (630 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 14m) 823/1980 tested (632 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 14m) 824/1980 tested (633 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 35m, remaining: ~2h 13m) 826/1980 tested (635 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 13m) 827/1980 tested (636 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 13m) 829/1980 tested (638 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 13m) 830/1980 tested (639 survived, 71 timed out)
Mutation testing 41% (elapsed: ~1h 36m, remaining: ~2h 13m) 831/1980 tested (640 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 13m) 833/1980 tested (642 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 36m, remaining: ~2h 13m) 834/1980 tested (643 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 12m) 836/1980 tested (645 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 11m) 840/1980 tested (646 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 11m) 841/1980 tested (647 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 11m) 843/1980 tested (649 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 11m) 844/1980 tested (650 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 37m, remaining: ~2h 11m) 846/1980 tested (652 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 11m) 847/1980 tested (653 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 10m) 849/1980 tested (655 survived, 71 timed out)
Mutation testing 42% (elapsed: ~1h 38m, remaining: ~2h 10m) 850/1980 tested (656 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 10m) 852/1980 tested (658 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 10m) 853/1980 tested (659 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 38m, remaining: ~2h 10m) 855/1980 tested (661 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 9m) 856/1980 tested (662 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 9m) 858/1980 tested (664 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 9m) 859/1980 tested (665 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 9m) 860/1980 tested (666 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 9m) 862/1980 tested (668 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 39m, remaining: ~2h 9m) 863/1980 tested (669 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 8m) 865/1980 tested (671 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 8m) 867/1980 tested (672 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 8m) 869/1980 tested (674 survived, 71 timed out)
Mutation testing 43% (elapsed: ~1h 40m, remaining: ~2h 8m) 870/1980 tested (675 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 7m) 872/1980 tested (677 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 40m, remaining: ~2h 7m) 873/1980 tested (678 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 7m) 875/1980 tested (680 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 7m) 876/1980 tested (681 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 7m) 878/1980 tested (683 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 7m) 879/1980 tested (684 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 7m) 880/1980 tested (684 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 41m, remaining: ~2h 6m) 882/1980 tested (684 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 6m) 883/1980 tested (685 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 6m) 884/1980 tested (686 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 6m) 886/1980 tested (688 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 6m) 887/1980 tested (689 survived, 71 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 6m) 888/1980 tested (689 survived, 72 timed out)
Mutation testing 44% (elapsed: ~1h 42m, remaining: ~2h 6m) 888/1980 tested (689 survived, 72 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 6m) 889/1980 tested (689 survived, 73 timed out)
Mutation testing 44% (elapsed: ~1h 43m, remaining: ~2h 6m) 890/1980 tested (689 survived, 74 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 6m) 891/1980 tested (690 survived, 74 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 5m) 893/1980 tested (692 survived, 74 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 6m) 893/1980 tested (692 survived, 74 timed out)
Mutation testing 45% (elapsed: ~1h 43m, remaining: ~2h 6m) 894/1980 tested (692 survived, 75 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 895/1980 tested (692 survived, 76 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 895/1980 tested (692 survived, 76 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 6m) 896/1980 tested (692 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 5m) 898/1980 tested (694 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 5m) 899/1980 tested (695 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 44m, remaining: ~2h 4m) 904/1980 tested (696 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 4m) 905/1980 tested (697 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 4m) 907/1980 tested (699 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 4m) 908/1980 tested (700 survived, 77 timed out)
Mutation testing 45% (elapsed: ~1h 45m, remaining: ~2h 4m) 910/1980 tested (702 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~2h 3m) 911/1980 tested (703 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 45m, remaining: ~2h 3m) 913/1980 tested (705 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 3m) 914/1980 tested (706 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 3m) 916/1980 tested (708 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 3m) 917/1980 tested (709 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 2m) 919/1980 tested (711 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 2m) 920/1980 tested (712 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 46m, remaining: ~2h 2m) 922/1980 tested (714 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 2m) 923/1980 tested (715 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 2m) 925/1980 tested (717 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 2m) 926/1980 tested (718 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 1m) 928/1980 tested (720 survived, 77 timed out)
Mutation testing 46% (elapsed: ~1h 47m, remaining: ~2h 1m) 929/1980 tested (721 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 47m, remaining: ~2h 1m) 931/1980 tested (723 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~2h 1m) 932/1980 tested (724 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~2h 1m) 934/1980 tested (726 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~2h 1m) 935/1980 tested (727 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~2h 0m) 937/1980 tested (729 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~2h 0m) 938/1980 tested (730 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 48m, remaining: ~2h 0m) 940/1980 tested (732 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 0m) 941/1980 tested (733 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~2h 0m) 942/1980 tested (734 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~1h 59m) 944/1980 tested (736 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~1h 59m) 945/1980 tested (737 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~1h 59m) 947/1980 tested (739 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 49m, remaining: ~1h 59m) 948/1980 tested (740 survived, 77 timed out)
Mutation testing 47% (elapsed: ~1h 50m, remaining: ~1h 59m) 950/1980 tested (742 survived, 77 timed out)
Mutation testing 48% (elapsed: ~1h 50m, remaining: ~1h 59m) 951/1980 tested (743 survived, 77 timed out)
Mutation testing 48% (elapsed: ~1h 50m, remaining: ~1h 58m) 953/1980 tested (745 survived, 77 timed out)
Mutation testing 48% (elapsed: ~1h 50m, remaining: ~1h 58m) 954/1980 tested (746 survived, 77 timed out)
Mutation testing 48% (elapsed: ~1h 50m, remaining: ~1h 58m) 955/1980 tested (747 survived, 77 timed out)
Mutation testing 48% (elapsed: ~1h 50m, remaining: ~1h 58m) 956/1980 tested (747 survived, 78 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~1h 58m) 956/1980 tested (747 survived, 78 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~1h 58m) 957/1980 tested (747 survived, 79 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~1h 58m) 958/1980 tested (747 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~1h 58m) 959/1980 tested (748 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~1h 58m) 961/1980 tested (750 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 51m, remaining: ~1h 58m) 962/1980 tested (751 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 58m) 964/1980 tested (753 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 57m) 965/1980 tested (754 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 57m) 967/1980 tested (756 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 57m) 968/1980 tested (757 survived, 80 timed out)
Mutation testing 48% (elapsed: ~1h 52m, remaining: ~1h 57m) 970/1980 tested (759 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 52m, remaining: ~1h 57m) 971/1980 tested (760 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 56m) 973/1980 tested (762 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 56m) 974/1980 tested (763 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 56m) 976/1980 tested (765 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 56m) 977/1980 tested (766 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 56m) 979/1980 tested (768 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 53m, remaining: ~1h 56m) 980/1980 tested (769 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 55m) 982/1980 tested (771 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 55m) 983/1980 tested (772 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 55m) 985/1980 tested (774 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 55m) 986/1980 tested (775 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 55m) 988/1980 tested (777 survived, 80 timed out)
Mutation testing 49% (elapsed: ~1h 54m, remaining: ~1h 55m) 989/1980 tested (778 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 55m, remaining: ~1h 54m) 991/1980 tested (780 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 55m, remaining: ~1h 54m) 992/1980 tested (781 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 55m, remaining: ~1h 54m) 993/1980 tested (782 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 55m, remaining: ~1h 54m) 995/1980 tested (784 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 55m, remaining: ~1h 54m) 996/1980 tested (785 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 55m, remaining: ~1h 53m) 998/1980 tested (787 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 53m) 999/1980 tested (788 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 53m) 1001/1980 tested (790 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 53m) 1002/1980 tested (791 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 53m) 1004/1980 tested (793 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 53m) 1005/1980 tested (794 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 56m, remaining: ~1h 52m) 1007/1980 tested (795 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 52m) 1008/1980 tested (795 survived, 80 timed out)
Mutation testing 50% (elapsed: ~1h 57m, remaining: ~1h 52m) 1009/1980 tested (795 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 57m, remaining: ~1h 52m) 1011/1980 tested (795 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 57m, remaining: ~1h 52m) 1012/1980 tested (795 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 57m, remaining: ~1h 52m) 1014/1980 tested (795 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 57m, remaining: ~1h 52m) 1015/1980 tested (796 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 51m) 1017/1980 tested (798 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 51m) 1018/1980 tested (799 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 51m) 1020/1980 tested (801 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 51m) 1021/1980 tested (802 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 51m) 1022/1980 tested (803 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 58m, remaining: ~1h 50m) 1024/1980 tested (805 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 50m) 1025/1980 tested (806 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 50m) 1027/1980 tested (808 survived, 80 timed out)
Mutation testing 51% (elapsed: ~1h 59m, remaining: ~1h 50m) 1028/1980 tested (809 survived, 80 timed out)
Mutation testing 52% (elapsed: ~1h 59m, remaining: ~1h 50m) 1030/1980 tested (811 survived, 80 timed out)
Mutation testing 52% (elapsed: ~1h 59m, remaining: ~1h 50m) 1031/1980 tested (812 survived, 80 timed out)
Mutation testing 52% (elapsed: ~1h 59m, remaining: ~1h 49m) 1033/1980 tested (814 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 49m) 1034/1980 tested (815 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 49m) 1036/1980 tested (817 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 49m) 1037/1980 tested (818 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 49m) 1039/1980 tested (820 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 49m) 1040/1980 tested (821 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 0m, remaining: ~1h 48m) 1042/1980 tested (823 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 48m) 1043/1980 tested (824 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 48m) 1045/1980 tested (826 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 48m) 1046/1980 tested (827 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 48m) 1048/1980 tested (829 survived, 80 timed out)
Mutation testing 52% (elapsed: ~2h 1m, remaining: ~1h 47m) 1049/1980 tested (830 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 1m, remaining: ~1h 47m) 1051/1980 tested (832 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 47m) 1052/1980 tested (833 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 47m) 1053/1980 tested (834 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 47m) 1055/1980 tested (836 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 47m) 1056/1980 tested (837 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 46m) 1058/1980 tested (839 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 2m, remaining: ~1h 46m) 1059/1980 tested (840 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 46m) 1061/1980 tested (842 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 46m) 1062/1980 tested (843 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 46m) 1064/1980 tested (845 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 46m) 1065/1980 tested (846 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 45m) 1067/1980 tested (848 survived, 80 timed out)
Mutation testing 53% (elapsed: ~2h 3m, remaining: ~1h 45m) 1068/1980 tested (849 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 4m, remaining: ~1h 45m) 1070/1980 tested (851 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 4m, remaining: ~1h 45m) 1071/1980 tested (852 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 4m, remaining: ~1h 45m) 1073/1980 tested (854 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 4m, remaining: ~1h 45m) 1074/1980 tested (855 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 4m, remaining: ~1h 44m) 1076/1980 tested (857 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 4m, remaining: ~1h 44m) 1077/1980 tested (858 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 44m) 1079/1980 tested (860 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 44m) 1080/1980 tested (861 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 44m) 1082/1980 tested (863 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 43m) 1083/1980 tested (864 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 43m) 1085/1980 tested (866 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 5m, remaining: ~1h 43m) 1086/1980 tested (867 survived, 80 timed out)
Mutation testing 54% (elapsed: ~2h 6m, remaining: ~1h 43m) 1087/1980 tested (868 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 6m, remaining: ~1h 43m) 1089/1980 tested (870 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 6m, remaining: ~1h 43m) 1090/1980 tested (871 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 6m, remaining: ~1h 42m) 1092/1980 tested (873 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 6m, remaining: ~1h 42m) 1093/1980 tested (874 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 6m, remaining: ~1h 42m) 1095/1980 tested (876 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 42m) 1096/1980 tested (877 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 42m) 1098/1980 tested (879 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 42m) 1099/1980 tested (880 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 41m) 1101/1980 tested (882 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 41m) 1102/1980 tested (883 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 7m, remaining: ~1h 41m) 1104/1980 tested (885 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 41m) 1105/1980 tested (886 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 41m) 1107/1980 tested (888 survived, 80 timed out)
Mutation testing 55% (elapsed: ~2h 8m, remaining: ~1h 40m) 1108/1980 tested (889 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 8m, remaining: ~1h 40m) 1110/1980 tested (891 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 8m, remaining: ~1h 40m) 1111/1980 tested (892 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 8m, remaining: ~1h 40m) 1113/1980 tested (894 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 40m) 1114/1980 tested (895 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 40m) 1116/1980 tested (897 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 39m) 1117/1980 tested (898 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 39m) 1119/1980 tested (900 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 39m) 1120/1980 tested (901 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 9m, remaining: ~1h 39m) 1121/1980 tested (902 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 39m) 1123/1980 tested (904 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 39m) 1124/1980 tested (905 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 38m) 1126/1980 tested (907 survived, 80 timed out)
Mutation testing 56% (elapsed: ~2h 10m, remaining: ~1h 38m) 1127/1980 tested (908 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 10m, remaining: ~1h 38m) 1129/1980 tested (910 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 10m, remaining: ~1h 38m) 1130/1980 tested (911 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 38m) 1132/1980 tested (913 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 38m) 1133/1980 tested (914 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 37m) 1135/1980 tested (916 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 37m) 1136/1980 tested (917 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 37m) 1138/1980 tested (919 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 11m, remaining: ~1h 37m) 1139/1980 tested (920 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 37m) 1141/1980 tested (922 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 36m) 1142/1980 tested (923 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 36m) 1144/1980 tested (925 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 36m) 1145/1980 tested (926 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 36m) 1147/1980 tested (928 survived, 80 timed out)
Mutation testing 57% (elapsed: ~2h 12m, remaining: ~1h 36m) 1148/1980 tested (929 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 35m) 1150/1980 tested (931 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 35m) 1151/1980 tested (932 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 35m) 1152/1980 tested (933 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 35m) 1154/1980 tested (935 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 35m) 1155/1980 tested (936 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 13m, remaining: ~1h 35m) 1157/1980 tested (938 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 35m) 1158/1980 tested (939 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 34m) 1160/1980 tested (941 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 34m) 1161/1980 tested (942 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 34m) 1163/1980 tested (944 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 34m) 1164/1980 tested (945 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 14m, remaining: ~1h 34m) 1166/1980 tested (947 survived, 80 timed out)
Mutation testing 58% (elapsed: ~2h 15m, remaining: ~1h 34m) 1167/1980 tested (948 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 15m, remaining: ~1h 33m) 1169/1980 tested (950 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 15m, remaining: ~1h 33m) 1170/1980 tested (951 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 15m, remaining: ~1h 33m) 1172/1980 tested (953 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 15m, remaining: ~1h 33m) 1173/1980 tested (954 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 15m, remaining: ~1h 33m) 1175/1980 tested (956 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 32m) 1176/1980 tested (957 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 32m) 1178/1980 tested (959 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 32m) 1179/1980 tested (960 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 32m) 1181/1980 tested (962 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 32m) 1182/1980 tested (963 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 16m, remaining: ~1h 32m) 1183/1980 tested (964 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 31m) 1185/1980 tested (966 survived, 80 timed out)
Mutation testing 59% (elapsed: ~2h 17m, remaining: ~1h 31m) 1186/1980 tested (967 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 17m, remaining: ~1h 31m) 1188/1980 tested (969 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 17m, remaining: ~1h 31m) 1189/1980 tested (970 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 17m, remaining: ~1h 31m) 1191/1980 tested (972 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 17m, remaining: ~1h 31m) 1192/1980 tested (973 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 30m) 1194/1980 tested (975 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 30m) 1195/1980 tested (976 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 30m) 1197/1980 tested (978 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 30m) 1198/1980 tested (979 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 30m) 1200/1980 tested (981 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 18m, remaining: ~1h 30m) 1201/1980 tested (982 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 29m) 1203/1980 tested (984 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 29m) 1204/1980 tested (985 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 29m) 1206/1980 tested (987 survived, 80 timed out)
Mutation testing 60% (elapsed: ~2h 19m, remaining: ~1h 29m) 1207/1980 tested (988 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 19m, remaining: ~1h 29m) 1208/1980 tested (989 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 19m, remaining: ~1h 28m) 1210/1980 tested (991 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 28m) 1211/1980 tested (992 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 28m) 1213/1980 tested (994 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 28m) 1214/1980 tested (995 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 28m) 1216/1980 tested (997 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 28m) 1217/1980 tested (998 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 20m, remaining: ~1h 27m) 1219/1980 tested (1000 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 27m) 1220/1980 tested (1001 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 27m) 1222/1980 tested (1003 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 27m) 1223/1980 tested (1004 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 27m) 1225/1980 tested (1006 survived, 80 timed out)
Mutation testing 61% (elapsed: ~2h 21m, remaining: ~1h 27m) 1226/1980 tested (1007 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 21m, remaining: ~1h 26m) 1228/1980 tested (1009 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 26m) 1229/1980 tested (1010 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 26m) 1231/1980 tested (1012 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 26m) 1232/1980 tested (1013 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 26m) 1234/1980 tested (1015 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 26m) 1235/1980 tested (1016 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 22m, remaining: ~1h 25m) 1236/1980 tested (1017 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 25m) 1238/1980 tested (1019 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 25m) 1239/1980 tested (1020 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 25m) 1241/1980 tested (1022 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 25m) 1242/1980 tested (1023 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 24m) 1244/1980 tested (1025 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 23m, remaining: ~1h 24m) 1245/1980 tested (1026 survived, 80 timed out)
Mutation testing 62% (elapsed: ~2h 24m, remaining: ~1h 24m) 1247/1980 tested (1028 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 24m, remaining: ~1h 24m) 1248/1980 tested (1029 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 24m, remaining: ~1h 24m) 1250/1980 tested (1031 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 24m, remaining: ~1h 24m) 1251/1980 tested (1032 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 24m, remaining: ~1h 23m) 1253/1980 tested (1034 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 24m, remaining: ~1h 23m) 1254/1980 tested (1035 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 23m) 1256/1980 tested (1037 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 23m) 1257/1980 tested (1038 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 23m) 1259/1980 tested (1040 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 23m) 1260/1980 tested (1041 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 22m) 1262/1980 tested (1043 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 25m, remaining: ~1h 22m) 1263/1980 tested (1044 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 22m) 1265/1980 tested (1046 survived, 80 timed out)
Mutation testing 63% (elapsed: ~2h 26m, remaining: ~1h 22m) 1266/1980 tested (1047 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 26m, remaining: ~1h 22m) 1268/1980 tested (1049 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 26m, remaining: ~1h 22m) 1269/1980 tested (1050 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 26m, remaining: ~1h 21m) 1270/1980 tested (1051 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 26m, remaining: ~1h 21m) 1272/1980 tested (1053 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 21m) 1273/1980 tested (1054 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 21m) 1275/1980 tested (1056 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 21m) 1276/1980 tested (1057 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 21m) 1278/1980 tested (1059 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 20m) 1279/1980 tested (1060 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 27m, remaining: ~1h 20m) 1281/1980 tested (1062 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 20m) 1282/1980 tested (1063 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 20m) 1284/1980 tested (1065 survived, 80 timed out)
Mutation testing 64% (elapsed: ~2h 28m, remaining: ~1h 20m) 1285/1980 tested (1066 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 28m, remaining: ~1h 19m) 1287/1980 tested (1068 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 28m, remaining: ~1h 19m) 1288/1980 tested (1069 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 28m, remaining: ~1h 19m) 1290/1980 tested (1071 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 19m) 1291/1980 tested (1072 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 19m) 1293/1980 tested (1074 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 19m) 1294/1980 tested (1075 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 18m) 1296/1980 tested (1077 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 18m) 1297/1980 tested (1078 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 29m, remaining: ~1h 18m) 1299/1980 tested (1080 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 18m) 1300/1980 tested (1081 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 18m) 1302/1980 tested (1083 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 18m) 1303/1980 tested (1084 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 17m) 1305/1980 tested (1086 survived, 80 timed out)
Mutation testing 65% (elapsed: ~2h 30m, remaining: ~1h 17m) 1306/1980 tested (1087 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 30m, remaining: ~1h 17m) 1307/1980 tested (1088 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 17m) 1309/1980 tested (1090 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 17m) 1310/1980 tested (1091 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 17m) 1312/1980 tested (1093 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 16m) 1313/1980 tested (1094 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 16m) 1315/1980 tested (1096 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 31m, remaining: ~1h 16m) 1316/1980 tested (1097 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 16m) 1318/1980 tested (1099 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 16m) 1319/1980 tested (1100 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 15m) 1321/1980 tested (1102 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 15m) 1322/1980 tested (1103 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 15m) 1324/1980 tested (1105 survived, 80 timed out)
Mutation testing 66% (elapsed: ~2h 32m, remaining: ~1h 15m) 1325/1980 tested (1106 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 15m) 1327/1980 tested (1108 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 15m) 1328/1980 tested (1109 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 14m) 1330/1980 tested (1111 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 14m) 1331/1980 tested (1112 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 14m) 1333/1980 tested (1114 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 33m, remaining: ~1h 14m) 1334/1980 tested (1115 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 14m) 1336/1980 tested (1117 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 14m) 1337/1980 tested (1118 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 13m) 1339/1980 tested (1120 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 13m) 1340/1980 tested (1121 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 13m) 1342/1980 tested (1123 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 34m, remaining: ~1h 13m) 1343/1980 tested (1124 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 13m) 1344/1980 tested (1125 survived, 80 timed out)
Mutation testing 67% (elapsed: ~2h 35m, remaining: ~1h 13m) 1346/1980 tested (1127 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 35m, remaining: ~1h 12m) 1347/1980 tested (1128 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 35m, remaining: ~1h 12m) 1349/1980 tested (1130 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 35m, remaining: ~1h 12m) 1350/1980 tested (1131 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 35m, remaining: ~1h 12m) 1352/1980 tested (1133 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 12m) 1353/1980 tested (1134 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 12m) 1355/1980 tested (1136 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 11m) 1356/1980 tested (1137 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 11m) 1358/1980 tested (1139 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 11m) 1359/1980 tested (1140 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 36m, remaining: ~1h 11m) 1361/1980 tested (1142 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 11m) 1362/1980 tested (1143 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 10m) 1364/1980 tested (1145 survived, 80 timed out)
Mutation testing 68% (elapsed: ~2h 37m, remaining: ~1h 10m) 1365/1980 tested (1146 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 37m, remaining: ~1h 10m) 1367/1980 tested (1148 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 37m, remaining: ~1h 10m) 1368/1980 tested (1149 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 37m, remaining: ~1h 10m) 1370/1980 tested (1151 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 10m) 1371/1980 tested (1152 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 9m) 1373/1980 tested (1154 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 9m) 1374/1980 tested (1155 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 9m) 1376/1980 tested (1157 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 9m) 1377/1980 tested (1158 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 38m, remaining: ~1h 9m) 1379/1980 tested (1160 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 9m) 1380/1980 tested (1161 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 9m) 1381/1980 tested (1162 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 8m) 1383/1980 tested (1164 survived, 80 timed out)
Mutation testing 69% (elapsed: ~2h 39m, remaining: ~1h 8m) 1384/1980 tested (1165 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 39m, remaining: ~1h 8m) 1386/1980 tested (1167 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 39m, remaining: ~1h 8m) 1387/1980 tested (1168 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 8m) 1389/1980 tested (1170 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 7m) 1390/1980 tested (1171 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 7m) 1392/1980 tested (1173 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 7m) 1393/1980 tested (1174 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 7m) 1395/1980 tested (1176 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 40m, remaining: ~1h 7m) 1396/1980 tested (1177 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 7m) 1398/1980 tested (1179 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 6m) 1399/1980 tested (1180 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 6m) 1401/1980 tested (1182 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 6m) 1402/1980 tested (1183 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 6m) 1404/1980 tested (1185 survived, 80 timed out)
Mutation testing 70% (elapsed: ~2h 41m, remaining: ~1h 6m) 1405/1980 tested (1186 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1407/1980 tested (1188 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1408/1980 tested (1189 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1410/1980 tested (1191 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1411/1980 tested (1192 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1413/1980 tested (1194 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 42m, remaining: ~1h 5m) 1414/1980 tested (1195 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 5m) 1415/1980 tested (1196 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1417/1980 tested (1198 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1418/1980 tested (1199 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1420/1980 tested (1201 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1421/1980 tested (1202 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 43m, remaining: ~1h 4m) 1423/1980 tested (1204 survived, 80 timed out)
Mutation testing 71% (elapsed: ~2h 44m, remaining: ~1h 4m) 1424/1980 tested (1205 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 44m, remaining: ~1h 3m) 1426/1980 tested (1207 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 44m, remaining: ~1h 3m) 1427/1980 tested (1208 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 44m, remaining: ~1h 3m) 1429/1980 tested (1210 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 44m, remaining: ~1h 3m) 1430/1980 tested (1211 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 44m, remaining: ~1h 3m) 1432/1980 tested (1213 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1433/1980 tested (1214 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1435/1980 tested (1216 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1436/1980 tested (1217 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1438/1980 tested (1219 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1439/1980 tested (1220 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 45m, remaining: ~1h 2m) 1441/1980 tested (1222 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 1m) 1442/1980 tested (1223 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 1m) 1444/1980 tested (1225 survived, 80 timed out)
Mutation testing 72% (elapsed: ~2h 46m, remaining: ~1h 1m) 1445/1980 tested (1226 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 46m, remaining: ~1h 1m) 1447/1980 tested (1228 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 46m, remaining: ~1h 1m) 1448/1980 tested (1229 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 46m, remaining: ~1h 0m) 1450/1980 tested (1231 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1451/1980 tested (1232 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1453/1980 tested (1234 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1454/1980 tested (1235 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1455/1980 tested (1236 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1457/1980 tested (1238 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 47m, remaining: ~1h 0m) 1458/1980 tested (1239 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~59m) 1460/1980 tested (1241 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~59m) 1461/1980 tested (1242 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~59m) 1463/1980 tested (1244 survived, 80 timed out)
Mutation testing 73% (elapsed: ~2h 48m, remaining: ~59m) 1464/1980 tested (1245 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 48m, remaining: ~59m) 1466/1980 tested (1247 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 48m, remaining: ~59m) 1467/1980 tested (1248 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1469/1980 tested (1250 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1470/1980 tested (1251 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1472/1980 tested (1253 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1473/1980 tested (1254 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~58m) 1475/1980 tested (1256 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 49m, remaining: ~57m) 1476/1980 tested (1257 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1478/1980 tested (1259 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1479/1980 tested (1260 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1481/1980 tested (1262 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1482/1980 tested (1263 survived, 80 timed out)
Mutation testing 74% (elapsed: ~2h 50m, remaining: ~57m) 1484/1980 tested (1265 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 50m, remaining: ~56m) 1487/1980 tested (1266 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~56m) 1488/1980 tested (1267 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~56m) 1490/1980 tested (1269 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~56m) 1491/1980 tested (1270 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~55m) 1493/1980 tested (1272 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~55m) 1494/1980 tested (1273 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 51m, remaining: ~55m) 1496/1980 tested (1275 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~55m) 1497/1980 tested (1276 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~55m) 1499/1980 tested (1278 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~55m) 1500/1980 tested (1279 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~55m) 1501/1980 tested (1280 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~54m) 1503/1980 tested (1282 survived, 80 timed out)
Mutation testing 75% (elapsed: ~2h 52m, remaining: ~54m) 1504/1980 tested (1283 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~54m) 1506/1980 tested (1285 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~54m) 1507/1980 tested (1286 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~54m) 1509/1980 tested (1288 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~54m) 1510/1980 tested (1289 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~53m) 1512/1980 tested (1291 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 53m, remaining: ~53m) 1513/1980 tested (1292 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~53m) 1515/1980 tested (1294 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~53m) 1516/1980 tested (1295 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~53m) 1518/1980 tested (1297 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~52m) 1519/1980 tested (1298 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~52m) 1521/1980 tested (1300 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 54m, remaining: ~52m) 1522/1980 tested (1301 survived, 80 timed out)
Mutation testing 76% (elapsed: ~2h 55m, remaining: ~52m) 1524/1980 tested (1303 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 55m, remaining: ~52m) 1525/1980 tested (1304 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 55m, remaining: ~52m) 1527/1980 tested (1306 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 55m, remaining: ~51m) 1528/1980 tested (1307 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 55m, remaining: ~51m) 1530/1980 tested (1309 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 55m, remaining: ~51m) 1531/1980 tested (1310 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~51m) 1532/1980 tested (1311 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~51m) 1534/1980 tested (1313 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~51m) 1535/1980 tested (1314 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~50m) 1537/1980 tested (1316 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~50m) 1538/1980 tested (1317 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 56m, remaining: ~50m) 1540/1980 tested (1319 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~50m) 1541/1980 tested (1320 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~50m) 1543/1980 tested (1322 survived, 80 timed out)
Mutation testing 77% (elapsed: ~2h 57m, remaining: ~50m) 1544/1980 tested (1323 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 57m, remaining: ~49m) 1546/1980 tested (1325 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 57m, remaining: ~49m) 1547/1980 tested (1326 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 57m, remaining: ~49m) 1549/1980 tested (1328 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~49m) 1550/1980 tested (1329 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~49m) 1552/1980 tested (1331 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~49m) 1553/1980 tested (1332 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~48m) 1555/1980 tested (1334 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~48m) 1556/1980 tested (1335 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 58m, remaining: ~48m) 1558/1980 tested (1337 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~48m) 1559/1980 tested (1338 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~48m) 1561/1980 tested (1340 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~47m) 1562/1980 tested (1341 survived, 80 timed out)
Mutation testing 78% (elapsed: ~2h 59m, remaining: ~47m) 1563/1980 tested (1342 survived, 80 timed out)
Mutation testing 79% (elapsed: ~2h 59m, remaining: ~47m) 1565/1980 tested (1344 survived, 80 timed out)
Mutation testing 79% (elapsed: ~2h 59m, remaining: ~47m) 1566/1980 tested (1345 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~47m) 1568/1980 tested (1347 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~47m) 1569/1980 tested (1348 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~46m) 1571/1980 tested (1350 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~46m) 1572/1980 tested (1351 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~46m) 1574/1980 tested (1353 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 0m, remaining: ~46m) 1575/1980 tested (1354 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~46m) 1577/1980 tested (1356 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~46m) 1578/1980 tested (1357 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~45m) 1580/1980 tested (1359 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~45m) 1581/1980 tested (1360 survived, 80 timed out)
Mutation testing 79% (elapsed: ~3h 1m, remaining: ~45m) 1583/1980 tested (1362 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 1m, remaining: ~45m) 1584/1980 tested (1363 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~45m) 1586/1980 tested (1365 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~45m) 1587/1980 tested (1366 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~44m) 1589/1980 tested (1368 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~44m) 1590/1980 tested (1369 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~44m) 1592/1980 tested (1371 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 2m, remaining: ~44m) 1593/1980 tested (1372 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~44m) 1594/1980 tested (1373 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~44m) 1596/1980 tested (1375 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~43m) 1597/1980 tested (1376 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~43m) 1599/1980 tested (1378 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~43m) 1600/1980 tested (1379 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 3m, remaining: ~43m) 1602/1980 tested (1381 survived, 80 timed out)
Mutation testing 80% (elapsed: ~3h 4m, remaining: ~43m) 1603/1980 tested (1382 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~43m) 1605/1980 tested (1384 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~42m) 1606/1980 tested (1385 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~42m) 1608/1980 tested (1387 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~42m) 1609/1980 tested (1388 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 4m, remaining: ~42m) 1611/1980 tested (1390 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~42m) 1612/1980 tested (1391 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~41m) 1614/1980 tested (1393 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~41m) 1615/1980 tested (1394 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~41m) 1617/1980 tested (1396 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~41m) 1618/1980 tested (1397 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 5m, remaining: ~41m) 1620/1980 tested (1399 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~41m) 1621/1980 tested (1400 survived, 80 timed out)
Mutation testing 81% (elapsed: ~3h 6m, remaining: ~40m) 1623/1980 tested (1402 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 6m, remaining: ~40m) 1624/1980 tested (1403 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 6m, remaining: ~40m) 1625/1980 tested (1404 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 6m, remaining: ~40m) 1627/1980 tested (1406 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 6m, remaining: ~40m) 1628/1980 tested (1407 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~40m) 1630/1980 tested (1409 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~40m) 1631/1980 tested (1410 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~39m) 1633/1980 tested (1412 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~39m) 1634/1980 tested (1413 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~39m) 1636/1980 tested (1415 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 7m, remaining: ~39m) 1637/1980 tested (1416 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~39m) 1639/1980 tested (1418 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~39m) 1640/1980 tested (1419 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~38m) 1642/1980 tested (1421 survived, 80 timed out)
Mutation testing 82% (elapsed: ~3h 8m, remaining: ~38m) 1643/1980 tested (1422 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 8m, remaining: ~38m) 1645/1980 tested (1424 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 8m, remaining: ~38m) 1646/1980 tested (1425 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~38m) 1648/1980 tested (1427 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1649/1980 tested (1428 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1651/1980 tested (1430 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1652/1980 tested (1431 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1653/1980 tested (1432 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 9m, remaining: ~37m) 1655/1980 tested (1434 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~37m) 1656/1980 tested (1435 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~36m) 1658/1980 tested (1437 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~36m) 1659/1980 tested (1438 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~36m) 1661/1980 tested (1440 survived, 80 timed out)
Mutation testing 83% (elapsed: ~3h 10m, remaining: ~36m) 1662/1980 tested (1441 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 10m, remaining: ~36m) 1664/1980 tested (1443 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~36m) 1665/1980 tested (1444 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1667/1980 tested (1446 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1668/1980 tested (1447 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1670/1980 tested (1449 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1671/1980 tested (1450 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 11m, remaining: ~35m) 1673/1980 tested (1452 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~35m) 1674/1980 tested (1453 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1676/1980 tested (1455 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1677/1980 tested (1456 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1679/1980 tested (1458 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1680/1980 tested (1459 survived, 80 timed out)
Mutation testing 84% (elapsed: ~3h 12m, remaining: ~34m) 1681/1980 tested (1460 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~34m) 1683/1980 tested (1462 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1684/1980 tested (1463 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1686/1980 tested (1465 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1687/1980 tested (1466 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1689/1980 tested (1468 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 13m, remaining: ~33m) 1690/1980 tested (1469 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~33m) 1692/1980 tested (1471 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1693/1980 tested (1472 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1695/1980 tested (1474 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1696/1980 tested (1475 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1698/1980 tested (1477 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 14m, remaining: ~32m) 1699/1980 tested (1478 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 15m, remaining: ~31m) 1701/1980 tested (1480 survived, 80 timed out)
Mutation testing 85% (elapsed: ~3h 15m, remaining: ~31m) 1702/1980 tested (1481 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 15m, remaining: ~31m) 1704/1980 tested (1483 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 15m, remaining: ~31m) 1705/1980 tested (1484 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 15m, remaining: ~31m) 1707/1980 tested (1486 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 15m, remaining: ~31m) 1708/1980 tested (1487 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1710/1980 tested (1489 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1711/1980 tested (1490 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1713/1980 tested (1492 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1714/1980 tested (1493 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1716/1980 tested (1495 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 16m, remaining: ~30m) 1717/1980 tested (1496 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~30m) 1718/1980 tested (1497 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~29m) 1720/1980 tested (1499 survived, 80 timed out)
Mutation testing 86% (elapsed: ~3h 17m, remaining: ~29m) 1721/1980 tested (1500 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 17m, remaining: ~29m) 1723/1980 tested (1502 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 17m, remaining: ~29m) 1724/1980 tested (1503 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 17m, remaining: ~29m) 1726/1980 tested (1505 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~29m) 1727/1980 tested (1506 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1729/1980 tested (1508 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1730/1980 tested (1509 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1732/1980 tested (1511 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1733/1980 tested (1512 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 18m, remaining: ~28m) 1735/1980 tested (1514 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~27m) 1736/1980 tested (1515 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~27m) 1738/1980 tested (1517 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~27m) 1739/1980 tested (1518 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~27m) 1741/1980 tested (1520 survived, 80 timed out)
Mutation testing 87% (elapsed: ~3h 19m, remaining: ~27m) 1742/1980 tested (1521 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 19m, remaining: ~27m) 1744/1980 tested (1523 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1745/1980 tested (1524 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1747/1980 tested (1526 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1748/1980 tested (1527 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1750/1980 tested (1529 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1751/1980 tested (1530 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 20m, remaining: ~26m) 1753/1980 tested (1532 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1754/1980 tested (1533 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1755/1980 tested (1534 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1757/1980 tested (1536 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1758/1980 tested (1537 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1760/1980 tested (1539 survived, 80 timed out)
Mutation testing 88% (elapsed: ~3h 21m, remaining: ~25m) 1761/1980 tested (1540 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1763/1980 tested (1542 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1764/1980 tested (1543 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1766/1980 tested (1545 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1767/1980 tested (1546 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1769/1980 tested (1548 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 22m, remaining: ~24m) 1770/1980 tested (1549 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1772/1980 tested (1551 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1773/1980 tested (1552 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1775/1980 tested (1554 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1776/1980 tested (1555 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1778/1980 tested (1557 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 23m, remaining: ~23m) 1779/1980 tested (1558 survived, 80 timed out)
Mutation testing 89% (elapsed: ~3h 24m, remaining: ~22m) 1781/1980 tested (1560 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~22m) 1782/1980 tested (1561 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~22m) 1783/1980 tested (1562 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~22m) 1785/1980 tested (1564 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~22m) 1786/1980 tested (1565 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 24m, remaining: ~21m) 1788/1980 tested (1567 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~21m) 1789/1980 tested (1568 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~21m) 1791/1980 tested (1570 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~21m) 1792/1980 tested (1571 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~21m) 1794/1980 tested (1573 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~21m) 1795/1980 tested (1574 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 25m, remaining: ~20m) 1797/1980 tested (1576 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~20m) 1798/1980 tested (1577 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~20m) 1800/1980 tested (1579 survived, 80 timed out)
Mutation testing 90% (elapsed: ~3h 26m, remaining: ~20m) 1801/1980 tested (1580 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 26m, remaining: ~20m) 1803/1980 tested (1582 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 26m, remaining: ~20m) 1804/1980 tested (1583 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 26m, remaining: ~19m) 1806/1980 tested (1585 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~19m) 1807/1980 tested (1586 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~19m) 1808/1980 tested (1587 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~19m) 1810/1980 tested (1589 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~19m) 1811/1980 tested (1590 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~19m) 1813/1980 tested (1592 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 27m, remaining: ~19m) 1814/1980 tested (1593 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~18m) 1816/1980 tested (1595 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~18m) 1817/1980 tested (1596 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~18m) 1819/1980 tested (1598 survived, 80 timed out)
Mutation testing 91% (elapsed: ~3h 28m, remaining: ~18m) 1820/1980 tested (1599 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 28m, remaining: ~18m) 1822/1980 tested (1601 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 28m, remaining: ~17m) 1823/1980 tested (1602 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~17m) 1825/1980 tested (1604 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~17m) 1826/1980 tested (1605 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~17m) 1828/1980 tested (1607 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~17m) 1829/1980 tested (1608 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~17m) 1831/1980 tested (1610 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 29m, remaining: ~16m) 1832/1980 tested (1611 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~16m) 1833/1980 tested (1612 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~16m) 1835/1980 tested (1614 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~16m) 1836/1980 tested (1615 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~16m) 1838/1980 tested (1617 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~16m) 1839/1980 tested (1618 survived, 80 timed out)
Mutation testing 92% (elapsed: ~3h 30m, remaining: ~15m) 1841/1980 tested (1620 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~15m) 1842/1980 tested (1621 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~15m) 1844/1980 tested (1623 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~15m) 1845/1980 tested (1624 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~15m) 1847/1980 tested (1626 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~15m) 1848/1980 tested (1627 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 31m, remaining: ~14m) 1850/1980 tested (1629 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~14m) 1851/1980 tested (1630 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~14m) 1853/1980 tested (1632 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~14m) 1854/1980 tested (1633 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~14m) 1856/1980 tested (1635 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~14m) 1857/1980 tested (1636 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 32m, remaining: ~13m) 1859/1980 tested (1638 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 33m, remaining: ~13m) 1860/1980 tested (1639 survived, 80 timed out)
Mutation testing 93% (elapsed: ~3h 33m, remaining: ~13m) 1861/1980 tested (1640 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~13m) 1863/1980 tested (1642 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~13m) 1864/1980 tested (1643 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~13m) 1866/1980 tested (1645 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 33m, remaining: ~12m) 1867/1980 tested (1646 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~12m) 1869/1980 tested (1648 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~12m) 1870/1980 tested (1649 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~12m) 1872/1980 tested (1651 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~12m) 1873/1980 tested (1652 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~12m) 1875/1980 tested (1654 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 34m, remaining: ~11m) 1876/1980 tested (1655 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 35m, remaining: ~11m) 1878/1980 tested (1657 survived, 80 timed out)
Mutation testing 94% (elapsed: ~3h 35m, remaining: ~11m) 1879/1980 tested (1658 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~11m) 1881/1980 tested (1660 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~11m) 1882/1980 tested (1661 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~11m) 1883/1980 tested (1662 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 35m, remaining: ~10m) 1885/1980 tested (1664 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~10m) 1886/1980 tested (1665 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~10m) 1888/1980 tested (1667 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~10m) 1889/1980 tested (1668 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~10m) 1891/1980 tested (1670 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~10m) 1892/1980 tested (1671 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 36m, remaining: ~9m) 1894/1980 tested (1673 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 37m, remaining: ~9m) 1895/1980 tested (1674 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 37m, remaining: ~9m) 1897/1980 tested (1676 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 37m, remaining: ~9m) 1898/1980 tested (1677 survived, 80 timed out)
Mutation testing 95% (elapsed: ~3h 37m, remaining: ~9m) 1900/1980 tested (1679 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 37m, remaining: ~9m) 1901/1980 tested (1680 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 37m, remaining: ~8m) 1903/1980 tested (1682 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~8m) 1904/1980 tested (1683 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~8m) 1906/1980 tested (1685 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~8m) 1907/1980 tested (1686 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~8m) 1909/1980 tested (1688 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~8m) 1910/1980 tested (1689 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 38m, remaining: ~7m) 1912/1980 tested (1691 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~7m) 1913/1980 tested (1692 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~7m) 1915/1980 tested (1694 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~7m) 1916/1980 tested (1695 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~7m) 1917/1980 tested (1696 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~6m) 1919/1980 tested (1698 survived, 80 timed out)
Mutation testing 96% (elapsed: ~3h 39m, remaining: ~6m) 1920/1980 tested (1699 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~6m) 1922/1980 tested (1701 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~6m) 1923/1980 tested (1702 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~6m) 1925/1980 tested (1704 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~6m) 1926/1980 tested (1705 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~5m) 1928/1980 tested (1707 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 40m, remaining: ~5m) 1929/1980 tested (1708 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~5m) 1931/1980 tested (1710 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~5m) 1932/1980 tested (1711 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~5m) 1934/1980 tested (1713 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~5m) 1935/1980 tested (1714 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~4m) 1937/1980 tested (1716 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 41m, remaining: ~4m) 1938/1980 tested (1717 survived, 80 timed out)
Mutation testing 97% (elapsed: ~3h 42m, remaining: ~4m) 1940/1980 tested (1719 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~4m) 1941/1980 tested (1720 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~4m) 1943/1980 tested (1722 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~4m) 1944/1980 tested (1723 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~3m) 1946/1980 tested (1725 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 42m, remaining: ~3m) 1947/1980 tested (1726 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~3m) 1949/1980 tested (1728 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~3m) 1950/1980 tested (1729 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~3m) 1952/1980 tested (1731 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~3m) 1953/1980 tested (1732 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~2m) 1954/1980 tested (1733 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 43m, remaining: ~2m) 1956/1980 tested (1735 survived, 80 timed out)
Mutation testing 98% (elapsed: ~3h 44m, remaining: ~2m) 1957/1980 tested (1736 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: ~2m) 1961/1980 tested (1737 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: ~1m) 1963/1980 tested (1739 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: ~1m) 1964/1980 tested (1740 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: ~1m) 1966/1980 tested (1742 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 44m, remaining: ~1m) 1967/1980 tested (1743 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: ~1m) 1969/1980 tested (1745 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: ~1m) 1970/1980 tested (1746 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: <1m) 1972/1980 tested (1748 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: <1m) 1973/1980 tested (1749 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: <1m) 1975/1980 tested (1751 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 45m, remaining: <1m) 1976/1980 tested (1752 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 46m, remaining: <1m) 1978/1980 tested (1754 survived, 80 timed out)
Mutation testing 99% (elapsed: ~3h 46m, remaining: <1m) 1979/1980 tested (1755 survived, 80 timed out)

All tests
  ✓ All tests (killed 144)

[Survived] PrecomputedMutator
q.js:38:9
-       if (typeof bootstrap === "function") {
+       if (typeof bootstrap === "object") {

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition + 1);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition - 1);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           bootstrap("promise", definition * 2);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           "promise"("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           null("promise", definition);

[Survived] PrecomputedMutator
q.js:39:9
-           bootstrap("promise", definition);
+           undefined("promise", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("promise2", definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("promise" + 1, definition);

[Survived] PrecomputedMutator
q.js:39:19
-           bootstrap("promise", definition);
+           bootstrap("promise" * 2, definition);

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     throw new Error("I'm a bug!");
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return "I'm a bug!";
+   });

[Survived] PrecomputedMutator
q.js:39:30
-           bootstrap("promise", definition);
+           bootstrap("promise", function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.test) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.test()) {

[Survived] PrecomputedMutator
q.js:46:16
-       } else if (typeof define === "function" && define.amd) {
+       } else if (typeof define === "function" && define.amd && define.amd.test === "test") {

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(definition());

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(null);

[Survived] PrecomputedMutator
q.js:47:16
-           define(definition);
+           define(undefined);

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses === "undefined") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "object") {

[Survived] PrecomputedMutator
q.js:50:16
-       } else if (typeof ses !== "undefined") {
+       } else if (typeof ses !== "function") {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.notOk()) {

[Survived] PrecomputedMutator
q.js:51:13
-           if (!ses.ok()) {
+           if (ses.isNotOk()) {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" && typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" ^ typeof self !== "undefined") {

[Survived] PrecomputedMutator
q.js:58:16
-       } else if (typeof window !== "undefined" || typeof self !== "undefined") {
+       } else if (typeof window !== "undefined" || typeof self !== "undefined" || typeof global !== "undefined") {

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.exit();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.run();

[Survived] PrecomputedMutator
q.js:123:17
-                   domain.enter();
+                   domain.bind();

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, undefined);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, null, domain);

[Survived] PrecomputedMutator
q.js:125:13
-               runSingle(task, domain);
+               runSingle(task, domain, function () {});

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, null);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, undefined);

[Survived] PrecomputedMutator
q.js:125:29
-               runSingle(task, domain);
+               runSingle(task, 0);

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length - 1) {

[Survived] PrecomputedMutator
q.js:128:16
-           while (laterQueue.length) {
+           while (laterQueue.length * 2) {

[Survived] PrecomputedMutator
q.js:129:20
-               task = laterQueue.pop();
+               task = laterQueue.shift();

[Survived] PrecomputedMutator
q.js:130:13
-               runSingle(task);
+               noop(task);

[Survived] PrecomputedMutator
q.js:130:23
-               runSingle(task);
+               runSingle(() => {});

[Survived] PrecomputedMutator
q.js:140:17
-               if (isNodeJS) {
+               if (!isNodeJS) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.enter()) {

[Survived] PrecomputedMutator
q.js:147:21
-                   if (domain) {
+                   if (domain.exit() && domain.enter()) {

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.enter();

[Survived] PrecomputedMutator
q.js:148:21
-                       domain.exit();
+                       domain.run();

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush());

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setTimeout(flush.call());

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:150:17
-                   setTimeout(flush, 0);
+                   requestAnimationFrame(flush, 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush(1), 0);

[Survived] PrecomputedMutator
q.js:150:28
-                   setTimeout(flush, 0);
+                   setTimeout(flush.call(this), 0);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:150:35
-                   setTimeout(flush, 0);
+                   setTimeout(flush, Infinity);

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (!domain) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain && false) {

[Survived] PrecomputedMutator
q.js:151:21
-                   if (domain) {
+                   if (domain || true) {

[Survived] PrecomputedMutator
q.js:152:21
-                       domain.enter();
+                       domain.exit();

[Survived] PrecomputedMutator
q.js:167:13
-               domain.exit();
+               domain.enter();

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window === "undefined") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "object") {

[Survived] PrecomputedMutator
q.js:202:13
-           if (typeof window !== "undefined") {
+           if (typeof window !== "function") {

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(0);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setInterval.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:27
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = requestAnimationFrame.bind(window, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(null, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(undefined, flush);

[Survived] PrecomputedMutator
q.js:203:45
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(this, flush);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush + 1);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush - 1);

[Survived] PrecomputedMutator
q.js:203:53
-               requestTick = setImmediate.bind(window, flush);
+               requestTick = setImmediate.bind(window, flush * 2);

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel === "undefined") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "object") {

[Survived] PrecomputedMutator
q.js:210:16
-       } else if (typeof MessageChannel !== "undefined") {
+       } else if (typeof MessageChannel !== "function") {

[Survived] PrecomputedMutator
q.js:224:13
-               channel.port2.postMessage(0);
+               channel.port1.postMessage(0);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(1);

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage("hello");

[Survived] PrecomputedMutator
q.js:224:39
-               channel.port2.postMessage(0);
+               channel.port2.postMessage(function () {
+     return 1;
+   });

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:227:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:227:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:227:31
-               setTimeout(flush, 0);
+               setTimeout(flush, NaN);

[Survived] PrecomputedMutator
q.js:228:13
-               requestPortTick();
+               requestTick();

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setTimeout(flush, 0, 0);

[Survived] PrecomputedMutator
q.js:234:13
-               setTimeout(flush, 0);
+               setInterval(flush, 0);

[Survived] PrecomputedMutator
q.js:234:24
-               setTimeout(flush, 0);
+               setTimeout(flush(), 0);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, 1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, -1);

[Survived] PrecomputedMutator
q.js:234:31
-               setTimeout(flush, 0);
+               setTimeout(flush, null);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.unshift(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.pop(task);

[Survived] PrecomputedMutator
q.js:241:9
-           laterQueue.push(task);
+           laterQueue.shift(task);

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing) {

[Survived] PrecomputedMutator
q.js:242:13
-           if (!flushing) {
+           if (flushing && !flushing) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length === 0) {

[Survived] PrecomputedMutator
q.js:277:13
-           if (arguments.length === 1) {
+           if (arguments.length !== 1) {

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (0);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (length);

[Survived] PrecomputedMutator
q.js:288:22
-               } while (1);
+               } while (length + 1);

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index > this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index < this.length) {

[Survived] PrecomputedMutator
q.js:281:21
-                   if (index in this) {
+                   if (index !== this.length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index > length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 1 >= length) {

[Survived] PrecomputedMutator
q.js:285:21
-                   if (++index >= length) {
+                   if (index + 2 >= length) {

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (i <= length; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (i < length - 1; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:9
-           for (; index < length; index++) {
-               // account for the possibility that the array is sparse
-               if (index in this) {
-                   basis = callback(basis, this[index], index);
-               }
-           }
+           for (i < length + 1; index < length; index++) {
+     // account for the possibility that the array is sparse
+     if (index in this) {
+       basis = callback(basis, this[index], index);
+     }
+   }

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index > length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index <= length; index++) {

[Survived] PrecomputedMutator
q.js:291:16
-           for (; index < length; index++) {
+           for (; index >= length; index++) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index--) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index += 2) {

[Survived] PrecomputedMutator
q.js:291:32
-           for (; index < length; index++) {
+           for (; index < length; index = 0) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index > this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index < this.length) {

[Survived] PrecomputedMutator
q.js:293:17
-               if (index in this) {
+               if (index === this.length) {

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:25
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis + 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis - 1, this[index], index);

[Survived] PrecomputedMutator
q.js:294:34
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis * 2, this[index], index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] + 1, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] * 2, index);

[Survived] PrecomputedMutator
q.js:294:41
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index] - 1, index);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index + 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index - 1);

[Survived] PrecomputedMutator
q.js:294:54
-                   basis = callback(basis, this[index], index);
+                   basis = callback(basis, this[index], index * 2);

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i <= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i > this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:25
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i >= this.length; i++) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i--) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i += 2) {

[Survived] PrecomputedMutator
q.js:304:42
-           for (var i = 0; i < this.length; i++) {
+           for (var i = 0; i < this.length; i = i + 1) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] !== value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] > value) {

[Survived] PrecomputedMutator
q.js:305:17
-               if (this[i] === value) {
+               if (this[i] < value) {

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.pop(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.shift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:13
-               collect.push(callback.call(thisp, value, index, self));
+               collect.unshift(callback.call(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.apply(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:26
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.bind(thisp, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(null, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(undefined, value, index, self));

[Survived] PrecomputedMutator
q.js:318:40
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(0, value, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, undefined, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, null, index, self));

[Survived] PrecomputedMutator
q.js:318:47
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, "foo", index, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index + 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index - 1, self));

[Survived] PrecomputedMutator
q.js:318:54
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index * 2, self));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, null));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, undefined));

[Survived] PrecomputedMutator
q.js:318:61
-               collect.push(callback.call(thisp, value, index, self));
+               collect.push(callback.call(thisp, value, index, this));

[Survived] PrecomputedMutator
q.js:339:5
-       for (var key in object) {
-           if (object_hasOwnProperty(object, key)) {
-               keys.push(key);
-           }
-       }
+       for (var key of object) {
+     if (object_hasOwnProperty(object, key)) {
+       keys.push(key);
+     }
+   }

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in null) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in undefined) {

[Survived] PrecomputedMutator
q.js:339:21
-       for (var key in object) {
+       for (var key in {}) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (!object_hasOwnProperty(object, key)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && object[key] === undefined) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key) && typeof object[key] === "undefined") {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:340:13
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, "key")) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(null, key)) {

[Survived] PrecomputedMutator
q.js:340:35
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty({}, key)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key + 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key - 1)) {

[Survived] PrecomputedMutator
q.js:340:43
-           if (object_hasOwnProperty(object, key)) {
+           if (object_hasOwnProperty(object, key * 2)) {

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[index]);

[Survived] PrecomputedMutator
q.js:341:23
-               keys.push(key);
+               keys.push(this[index].key);

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.message) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.stack) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:358:25
-           object_toString(exception) === "[object StopIteration]" ||
+           object_toString(exception.name) === "[object StopIteration]" ||

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue === "undefined") {

[Survived] PrecomputedMutator
q.js:366:5
-   if (typeof ReturnValue !== "undefined") {
+   if (typeof ReturnValue !== "undefined" && ReturnValue !== "undefined") {

[Survived] PrecomputedMutator
q.js:381:9
-       if (hasStacks &&
-           promise.stack &&
-           typeof error === "object" &&
-           error !== null &&
-           error.stack
+       if (promise.stack && typeof error === "object" && error !== null && error.stack

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.value) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.promise) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:9
-           for (var p = promise; !!p; p = p.source) {
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
-                   stacks.unshift(p.stack);
-               }
-           }
+           for (var p = promise; !!p; p = p.source.then) {
+     if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+       object_defineProperty(error, "__minimumStackCounter__", {
+         value: p.stackCounter,
+         configurable: true
+       });
+       stacks.unshift(p.stack);
+     }
+   }

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !p; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:31
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; p.length; p = p.source) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.slice()) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.concat()) {

[Survived] PrecomputedMutator
q.js:388:36
-           for (var p = promise; !!p; p = p.source) {
+           for (var p = promise; !!p; p = p.source.reverse()) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ < p.stackCounter) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ !== p.stackCounter) {

[Survived] PrecomputedMutator
q.js:389:17
-               if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {
+               if (p.stack && error.__minimumStackCounter__ === p.stackCounter) {

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:17
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__" + 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__" - 1, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:46
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__" * 2, {value: p.stackCounter, configurable: true});

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter + 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter - 1,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:390:73
-                   object_defineProperty(error, "__minimumStackCounter__", {value: p.stackCounter, configurable: true});
+                   object_defineProperty(error, "__minimumStackCounter__", {
+     value: p.stackCounter * 2,
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.push(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.shift(p.stack);

[Survived] PrecomputedMutator
q.js:391:17
-                   stacks.unshift(p.stack);
+                   stacks.pop(p.stack);

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack + "foo");

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.toUpperCase());

[Survived] PrecomputedMutator
q.js:391:32
-                   stacks.unshift(p.stack);
+                   stacks.unshift(p.stack.split("").reverse().join(""));

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.push(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.pop(error.stack);

[Survived] PrecomputedMutator
q.js:394:9
-           stacks.unshift(error.stack);
+           stacks.shift(error.stack);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.message);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.name);

[Survived] PrecomputedMutator
q.js:394:24
-           stacks.unshift(error.stack);
+           stacks.unshift(error.toString());

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.split("\n"));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.replace(/\n/g, " "));

[Survived] PrecomputedMutator
q.js:397:39
-           var stack = filterStackString(concatedStacks);
+           var stack = filterStackString(concatedStacks.slice(0, -1));

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: true
+   });

[Survived] PrecomputedMutator
q.js:398:9
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     configurable: false
+   });

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stacktrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stackTrace", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:38
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "errorStack", {value: stack, configurable: true});

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack + "foo",
+     configurable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     enumerable: true
+   });

[Survived] PrecomputedMutator
q.js:398:47
-           object_defineProperty(error, "stack", {value: stack, configurable: true});
+           object_defineProperty(error, "stack", {
+     value: stack,
+     writable: false
+   });

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\t");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split(" ");

[Survived] PrecomputedMutator
q.js:403:35
-       var lines = stackString.split("\n");
+       var lines = stackString.split("\\n");

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = 1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = -1; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:5
-       for (var i = 0; i < lines.length; ++i) {
-           var line = lines[i];
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
-               desiredLines.push(line);
-           }
-       }
+       for (var i = array.length; i < lines.length; ++i) {
+     var line = lines[i];
+     if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+       desiredLines.push(line);
+     }
+   }

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i <= lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i > lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:21
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i == lines.length; ++i) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i--) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i += 2) {

[Survived] PrecomputedMutator
q.js:405:39
-       for (var i = 0; i < lines.length; ++i) {
+       for (var i = 0; i < lines.length; i = 0) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && !line) {

[Survived] PrecomputedMutator
q.js:408:13
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isNodeFrame(line) && line.indexOf("at ") === 0) {

[Survived] PrecomputedMutator
q.js:408:14
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isExternalFrame(line) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line + 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line - 1) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:30
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line * 2) && !isNodeFrame(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !isPromiseAlike(line) && line) {

[Survived] PrecomputedMutator
q.js:408:40
-           if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
+           if (!isInternalFrame(line) && !object_defineProperty(line) && line) {

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.pop(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.shift(line);

[Survived] PrecomputedMutator
q.js:409:13
-               desiredLines.push(line);
+               desiredLines.unshift(line);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line + 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line - 1);

[Survived] PrecomputedMutator
q.js:409:31
-               desiredLines.push(line);
+               desiredLines.push(line * 2);

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join(" ");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br>");

[Survived] PrecomputedMutator
q.js:412:30
-       return desiredLines.join("\n");
+       return desiredLines.join("<br/>");

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.includes("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.match("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:416:12
-       return stackLine.indexOf("(module.js:") !== -1 ||
+       return stackLine.search("(module.js:") !== -1 ||

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.includes("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.match("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:417:12
-              stackLine.indexOf("(node.js:") !== -1;
+              stackLine.search("(node.js:") !== -1;

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split("@")[1]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:423:57
-       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
+       var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], "string"(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], null(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:30
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], undefined(attempt1[2])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[1])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt1[3])];

[Survived] PrecomputedMutator
q.js:425:37
-           return [attempt1[1], Number(attempt1[2])];
+           return [attempt1[1], Number(attempt2[2])];

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[1]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[0]);

[Survived] PrecomputedMutator
q.js:429:53
-       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
+       var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine.split("at ")[2]);

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] > 0) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] !== attempt2[0]) {

[Survived] PrecomputedMutator
q.js:430:9
-       if (attempt2) {
+       if (attempt2[1] === attempt2[0]) {

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[1])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[3])];

[Survived] PrecomputedMutator
q.js:431:37
-           return [attempt2[1], Number(attempt2[2])];
+           return [attempt2[1], Number(attempt2[4])];

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[1]);

[Survived] PrecomputedMutator
q.js:435:42
-       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
+       var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine.split(" ")[2]);

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[1]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[0]) {

[Survived] PrecomputedMutator
q.js:436:9
-       if (attempt3) {
+       if (attempt3[2]) {

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], 0(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], null(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:30
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], NaN(attempt3[2])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[1])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[3])];

[Survived] PrecomputedMutator
q.js:437:37
-           return [attempt3[1], Number(attempt3[2])];
+           return [attempt3[1], Number(attempt3[4])];

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split("@")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(":")[0]);

[Survived] PrecomputedMutator
q.js:442:58
-       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
+       var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber === undefined) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:444:9
-       if (!fileNameAndLineNumber) {
+       if (typeof fileNameAndLineNumber === "undefined") {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (hasStacks === false) {

[Survived] PrecomputedMutator
q.js:459:9
-       if (!hasStacks) {
+       if (typeof stacks !== "undefined") {

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("\t");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split(" ");

[Survived] PrecomputedMutator
q.js:466:35
-           var lines = e.stack.split("\n");
+           var lines = e.stack.split("|");

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:25
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[lines.length - 1].indexOf("@") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("#") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("%") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:467:42
-           var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
+           var firstLine = lines[0].indexOf("*") > 0 ? lines[1] : lines[2];

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(" ")[0]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(" ")[1]);

[Survived] PrecomputedMutator
q.js:468:62
-           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
+           var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine.split(" ").length);

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber === null) {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (typeof fileNameAndLineNumber === "undefined") {

[Survived] PrecomputedMutator
q.js:469:13
-           if (!fileNameAndLineNumber) {
+           if (fileNameAndLineNumber.length === 0) {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:480:13
-           if (typeof console !== "undefined" &&
-               typeof console.warn === "function") {
+           if (typeof console !== "undefined" && console.warn !== "function") {

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, []);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.call(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:16
-           return callback.apply(callback, arguments);
+           return callback.bind(callback, arguments);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, null);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, undefined);

[Survived] PrecomputedMutator
q.js:485:41
-           return callback.apply(callback, arguments);
+           return callback.apply(callback, {});

[Survived] PrecomputedMutator
q.js:501:9
-       if (value instanceof Promise) {
+       if (value === Promise) {

[Survived] PrecomputedMutator
q.js:506:9
-       if (isPromiseAlike(value)) {
+       if (value.then) {

[Survived] PrecomputedMutator
q.js:559:33
-       var promise = object_create(Promise.prototype);
+       var promise = object_create(Q.resolve(new Error()));

[Survived] PrecomputedMutator
q.js:563:13
-           if (messages) {
+           if (!resolvedPromise) {

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[2]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && !operands[1]) { // progress operand

[Survived] PrecomputedMutator
q.js:565:17
-               if (op === "when" && operands[1]) { // progress operand
+               if (op === "when" && operands[1] === 0) { // progress operand

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.pop(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.shift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:17
-                   progressListeners.push(operands[1]);
+                   progressListeners.unshift(operands[1]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[2]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[0]);

[Survived] PrecomputedMutator
q.js:566:40
-                   progressListeners.push(operands[1]);
+                   progressListeners.push(operands[3]);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(null, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:570:55
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(messages, args);

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.slice());

[Survived] PrecomputedMutator
q.js:570:72
-                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
+                   resolvedPromise.promiseDispatch.apply(resolvedPromise, args.concat());

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages.length) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (messages[0]) {

[Survived] PrecomputedMutator
q.js:577:13
-           if (messages) {
+           if (!messages) {

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(resolvedPromise.promise);

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(reject(resolvedPromise));

[Survived] PrecomputedMutator
q.js:580:34
-           var nearerValue = nearer(resolvedPromise);
+           var nearerValue = nearer(fulfill(resolvedPromise));

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === null) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === undefined) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (nearerValue === 0) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (!isPromise(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:13
-           if (isPromise(nearerValue)) {
+           if (isPromise || isPromiseAlike(nearerValue)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue + 1)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue * 2)) {

[Survived] PrecomputedMutator
q.js:581:23
-           if (isPromise(nearerValue)) {
+           if (isPromise(nearerValue - 1)) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise === undefined) {

[Survived] PrecomputedMutator
q.js:588:13
-           if (!resolvedPromise) {
+           if (resolvedPromise.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (!Q.longStackSupport && hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:594:9
-       if (Q.longStackSupport && hasStacks) {
+       if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.length);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\n") - 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.lastIndexOf("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:47
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.includes("\n") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("\t") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf(" ") + 1);

[Survived] PrecomputedMutator
q.js:604:63
-               promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
+               promise.stack = e.stack.substring(e.stack.indexOf("Hello, world!") + 1);

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport || hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport && !hasStacks) {

[Survived] PrecomputedMutator
q.js:616:13
-           if (Q.longStackSupport && hasStacks) {
+           if (Q.longStackSupport ^ hasStacks) {

[Survived] PrecomputedMutator
q.js:624:17
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(newPromise));

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(null, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(undefined, message);

[Survived] PrecomputedMutator
q.js:624:50
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(0, message);

[Survived] PrecomputedMutator
q.js:624:62
-                   newPromise.promiseDispatch.apply(newPromise, message);
+                   newPromise.promiseDispatch.apply(newPromise, message.concat(["new message"]));

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise === true) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.isFulfilled()) {

[Survived] PrecomputedMutator
q.js:642:13
-           if (resolvedPromise) {
+           if (resolvedPromise.isRejected()) {

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           deferred.reject(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           deferred.notify(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:9
-           become(fulfill(value));
+           deferred.resolve(fulfill(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value + 1));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(reject(value));

[Survived] PrecomputedMutator
q.js:646:16
-           become(fulfill(value));
+           become(fulfill(value * 2));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(null));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(undefined));

[Survived] PrecomputedMutator
q.js:646:24
-           become(fulfill(value));
+           become(fulfill(0));

[Survived] PrecomputedMutator
q.js:649:13
-           if (resolvedPromise) {
+           if (resolvedPromise !== undefined) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (resolvedPromise.promise) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (promise.resolvedPromise) {

[Survived] PrecomputedMutator
q.js:656:13
-           if (resolvedPromise) {
+           if (deferred.promise) {

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners[0](progress);

[Survived] PrecomputedMutator
q.js:662:17
-                   progressListener(progress);
+                   progressListeners.length(progress);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress + 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress - 1);

[Survived] PrecomputedMutator
q.js:662:34
-                   progressListener(progress);
+                   progressListener(progress * 2);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(error.message);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(error.stack);

[Survived] PrecomputedMutator
q.js:679:25
-               self.reject(error);
+               self.reject(error.name);

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length > 1) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length === 2) {

[Survived] PrecomputedMutator
q.js:680:20
-           } else if (arguments.length > 2) {
+           } else if (arguments.length < 2) {

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.reject(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.notify(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:13
-               self.resolve(array_slice(arguments, 1));
+               self.fulfill(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 1, 2));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.length));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[1]));

[Survived] PrecomputedMutator
q.js:681:26
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[0]));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments[0], 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.length, 1));

[Survived] PrecomputedMutator
q.js:681:38
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments.slice(1), 1));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 3));

[Survived] PrecomputedMutator
q.js:681:49
-               self.resolve(array_slice(arguments, 1));
+               self.resolve(array_slice(arguments, 4));

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.reject(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.notify(value);

[Survived] PrecomputedMutator
q.js:683:13
-               self.resolve(value);
+               self.fulfill(value);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(null);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(undefined);

[Survived] PrecomputedMutator
q.js:683:26
-               self.resolve(value);
+               self.resolve(0);

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== "function") {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== function () {}) {

[Survived] PrecomputedMutator
q.js:697:9
-       if (typeof resolver !== "function") {
+       if (resolver !== Promise.resolve) {

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.promise();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.resolve();

[Survived] PrecomputedMutator
q.js:700:20
-       var deferred = defer();
+       var deferred = defer.reject();

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve(null), deferred.reject(null), deferred.notify(null));

[Survived] PrecomputedMutator
q.js:702:9
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve(undefined), deferred.reject(undefined), deferred.notify(undefined));

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.reject, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.notify, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:18
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.fulfill, deferred.reject, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.fulfill, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.notify, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:36
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.resolve, deferred.notify);

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(progress));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(undefined));

[Survived] PrecomputedMutator
q.js:702:53
-           resolver(deferred.resolve, deferred.reject, deferred.notify);
+           resolver(deferred.resolve, deferred.reject, deferred.notify(null));

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.resolve(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.notify(reason);

[Survived] PrecomputedMutator
q.js:704:9
-           deferred.reject(reason);
+           deferred.makeNodeResolver(reason);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:704:25
-           deferred.reject(reason);
+           deferred.reject("Error");

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.reject(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.resolve(x).join(y);

[Survived] PrecomputedMutator
q.js:739:12
-       return Q(x).join(y);
+       return Q.all(x).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(y).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x + 1).join(y);

[Survived] PrecomputedMutator
q.js:739:14
-       return Q(x).join(y);
+       return Q(x * 2).join(y);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(x);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(y + 1);

[Survived] PrecomputedMutator
q.js:739:22
-       return Q(x).join(y);
+       return Q(x).join(Q.resolve(y));

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([this, this]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:743:14
-       return Q([this, that]).spread(function (x, y) {
+       return Q([that, null]).spread(function (x, y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x !== y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x < y) {

[Survived] PrecomputedMutator
q.js:744:13
-           if (x === y) {
+           if (x > y) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i <= len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i > len; i++) {

[Survived] PrecomputedMutator
q.js:766:48
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i == len; i++) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i--) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i += 2) {

[Survived] PrecomputedMutator
q.js:766:57
-           for (var i = 0, len = answerPs.length; i < len; i++) {
+           for (var i = 0, len = answerPs.length; i < len; i = 0) {

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, 1);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, "foo");

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, reject, null);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.reject(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.resolve(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:13
-               Q(answerPs[i]).then(resolve, reject);
+               Q.all(answerPs[i]).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] + 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] * 2).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:15
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i] - 1).then(resolve, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(reject, reject);

[Survived] PrecomputedMutator
q.js:767:33
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(undefined, reject);

[Survived] PrecomputedMutator
q.js:767:42
-               Q(answerPs[i]).then(resolve, reject);
+               Q(answerPs[i]).then(resolve, resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.reject);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.resolve);

[Survived] PrecomputedMutator
q.js:773:22
-       return this.then(Q.race);
+       return this.then(Q.all);

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === null) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === undefined) {

[Survived] PrecomputedMutator
q.js:789:9
-       if (fallback === void 0) {
+       if (fallback === "function") {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect !== void 0) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === null) {

[Survived] PrecomputedMutator
q.js:796:9
-       if (inspect === void 0) {
+       if (inspect === undefined) {

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(null, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:808:47
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply({}, args);

[Survived] PrecomputedMutator
q.js:808:56
-                   result = descriptor[op].apply(promise, args);
+                   result = descriptor[op].apply(promise, args.concat(descriptor[op]));

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.resolve(op, args));

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.reject(op, args));

[Survived] PrecomputedMutator
q.js:810:26
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise.then(op, args));

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(null, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(undefined, op, args);

[Survived] PrecomputedMutator
q.js:810:40
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call({}, op, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op + 1, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op * 2, args);

[Survived] PrecomputedMutator
q.js:810:49
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op - 1, args);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, null);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, undefined);

[Survived] PrecomputedMutator
q.js:810:53
-                   result = fallback.call(promise, op, args);
+                   result = fallback.call(promise, op, "foo");

[Survived] PrecomputedMutator
q.js:813:22
-               result = reject(exception);
+               result = resolve(exception);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(null);

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject(new Error("Different error message"));

[Survived] PrecomputedMutator
q.js:813:29
-               result = reject(exception);
+               result = reject({
+     message: "Different error message"
+   });

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.state) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.value) {

[Survived] PrecomputedMutator
q.js:823:9
-       if (inspect) {
+       if (inspect.reason) {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state !== "pending") {

[Survived] PrecomputedMutator
q.js:825:13
-           if (inspected.state === "rejected") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "fulfilled") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state !== "rejected") {

[Survived] PrecomputedMutator
q.js:831:17
-               if (inspected.state === "pending" ||
-                   inspected.state === "rejected") {
+               if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch);

[Survived] PrecomputedMutator
q.js:862:43
-               makeStackTraceLong(exception, self);
+               makeStackTraceLong(exception, self.promiseDispatch.bind(self));

[Survived] PrecomputedMutator
q.js:869:16
-           return reject(exception);
+           return Q.reject(exception);

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed + 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed - 1(value) : value;

[Survived] PrecomputedMutator
q.js:873:51
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed * 2(value) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(null) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed(undefined) : value;

[Survived] PrecomputedMutator
q.js:873:62
-           return typeof progressed === "function" ? progressed(value) : value;
+           return typeof progressed === "function" ? progressed("foo") : value;

[Survived] PrecomputedMutator
q.js:885:17
-               if (done) {
+               if (done && false) {

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _rejected(value);

[Survived] PrecomputedMutator
q.js:899:24
-               newValue = _progressed(value);
+               newValue = _fulfilled(value);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(null);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(undefined);

[Survived] PrecomputedMutator
q.js:899:36
-               newValue = _progressed(value);
+               newValue = _progressed(0);

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(e)) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(new Error())) {

[Survived] PrecomputedMutator
q.js:902:17
-               if (Q.onerror) {
+               if (Q.onerror(null)) {

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror(undefined);

[Survived] PrecomputedMutator
q.js:903:27
-                   Q.onerror(e);
+                   Q.onerror("error");

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw) {

[Survived] PrecomputedMutator
q.js:909:13
-           if (!threw) {
+           if (threw === true) {

[Survived] PrecomputedMutator
q.js:910:13
-               deferred.notify(newValue);
+               deferred.reject(newValue);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(null);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify(undefined);

[Survived] PrecomputedMutator
q.js:910:29
-               deferred.notify(newValue);
+               deferred.notify("foo");

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.reject(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.resolve(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:12
-       return Q(promise).tap(callback);
+       return Q.defer(promise).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(null).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(undefined).tap(callback);

[Survived] PrecomputedMutator
q.js:918:14
-       return Q(promise).tap(callback);
+       return Q(Q.reject()).tap(callback);

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.bind(null));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.apply(null, [value]));

[Survived] PrecomputedMutator
q.js:918:27
-       return Q(promise).tap(callback);
+       return Q(promise).tap(callback.call(null, value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q.reject(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q.resolve(value));

[Survived] PrecomputedMutator
q.js:934:18
-       callback = Q(callback);
+       callback = Q(Q.defer());

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:31
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(() => value).thenResolve(value);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(null);

[Survived] PrecomputedMutator
q.js:937:50
-           return callback.fcall(value).thenResolve(value);
+           return callback.fcall(value).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed);

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, progressed, "extra argument");

[Survived] PrecomputedMutator
q.js:959:12
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, fulfilled, progressed, null);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(undefined).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:14
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(0).then(fulfilled, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(rejected, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(undefined, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:26
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(null, rejected, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, resolved, progressed);

[Survived] PrecomputedMutator
q.js:959:37
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, undefined, progressed);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, rejected);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:959:47
-       return Q(value).then(fulfilled, rejected, progressed);
+       return Q(value).then(fulfilled, rejected, function (value) {
+     return value;
+   });

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.then.catch(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.then.reject(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:12
-       return this.then(function () { return value; });
+       return this.then.resolve(function () { return value; });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return null;
+   });

[Survived] PrecomputedMutator
q.js:963:22
-       return this.then(function () { return value; });
+       return this.then(function () {
+     return false;
+   });

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(null).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(undefined).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:14
-       return Q(promise).thenResolve(value);
+       return Q(Q.reject(new Error("error"))).thenResolve(value);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(null);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve(undefined);

[Survived] PrecomputedMutator
q.js:967:35
-       return Q(promise).thenResolve(value);
+       return Q(promise).thenResolve("foo");

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     throw new Error(reason);
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return reason;
+   });

[Survived] PrecomputedMutator
q.js:971:22
-       return this.then(function () { throw reason; });
+       return this.then(function () {
+     return;
+   });

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(null).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q(undefined).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:14
-       return Q(promise).thenReject(reason);
+       return Q({}).thenReject(reason);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(null);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject(undefined);

[Survived] PrecomputedMutator
q.js:975:34
-       return Q(promise).thenReject(reason);
+       return Q(promise).thenReject("error");

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (!isPromise(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isPromiseAlike(value)) {

[Survived] PrecomputedMutator
q.js:991:9
-       if (isPromise(value)) {
+       if (isFulfilled(value)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value + 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value - 1)) {

[Survived] PrecomputedMutator
q.js:991:19
-       if (isPromise(value)) {
+       if (isPromise(value * 2)) {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "rejected") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "pending") {

[Survived] PrecomputedMutator
q.js:993:13
-           if (inspected.state === "fulfilled") {
+           if (inspected.state === "fulfilled" && inspected.value === undefined) {

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return !isPromise(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromiseAlike(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:12
-       return isPromise(object) && object.inspect().state === "pending";
+       return isFulfilled(object) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(null) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise(undefined) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1020:22
-       return isPromise(object) && object.inspect().state === "pending";
+       return isPromise({}) && object.inspect().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.then().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.resolve().state === "pending";

[Survived] PrecomputedMutator
q.js:1024:12
-       return this.inspect().state === "pending";
+       return this.inspect.reject().state === "pending";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !!isPromise(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise === false(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:13
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise !== true(object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(!object) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object + 1) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1033:23
-       return !isPromise(object) || object.inspect().state === "fulfilled";
+       return !isPromise(object.length) || object.inspect().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.state().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.value().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1037:12
-       return this.inspect().state === "fulfilled";
+       return this.inspect.reason().state === "fulfilled";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromiseAlike(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return !isPromise(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:12
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isFulfilled(object) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.then()) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.then(function () {
+     return reason;
+   })) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1045:22
-       return isPromise(object) && object.inspect().state === "rejected";
+       return isPromise(object.then(function () {
+     throw reason;
+   })) && object.inspect().state === "rejected";

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === true) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections !== true) {

[Survived] PrecomputedMutator
q.js:1067:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1073:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.includes(promise)) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (promise in unhandledRejections) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (unhandledRejections.indexOf(promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, reason) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:17
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledReasons.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:31
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(reportedUnhandledRejections.length, promise) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     throw new Error("something went wrong");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.reject("something went wrong");
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1078:52
-               if (array_indexOf(unhandledRejections, promise) !== -1) {
+               if (array_indexOf(unhandledRejections, promise.then(function () {
+     return Q.reject(new Error("something went wrong"));
+   })) !== -1) {

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("rejectionHandled", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, reason);

[Survived] PrecomputedMutator
q.js:1079:17
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, null);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "foo", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "bar", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:30
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection" + "baz", reason, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", null, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", {}, promise);

[Survived] PrecomputedMutator
q.js:1079:52
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", new Error(), promise);

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     throw new Error("test");
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     return Q.reject("test");
+   }));

[Survived] PrecomputedMutator
q.js:1079:60
-                   process.emit("unhandledRejection", reason, promise);
+                   process.emit("unhandledRejection", reason, promise.then(function () {
+     return Q.fulfill("test");
+   }));

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1080:17
-                   reportedUnhandledRejections.push(promise);
+                   reportedUnhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.pop(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.shift(promise);

[Survived] PrecomputedMutator
q.js:1085:5
-       unhandledRejections.push(promise);
+       unhandledRejections.unshift(promise);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(null);

[Survived] PrecomputedMutator
q.js:1085:30
-       unhandledRejections.push(promise);
+       unhandledRejections.push(undefined);

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== "undefined") {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== undefined) {

[Survived] PrecomputedMutator
q.js:1086:9
-       if (reason && typeof reason.stack !== "undefined") {
+       if (reason && reason.stack !== null) {

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.pop(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.shift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:9
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.unshift(reason.stack);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.message);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.name);

[Survived] PrecomputedMutator
q.js:1087:31
-           unhandledReasons.push(reason.stack);
+           unhandledReasons.push(reason.code);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.pop("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.shift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1089:9
-           unhandledReasons.push("(no stack) " + reason);
+           unhandledReasons.unshift("(no stack) " + reason);

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (trackUnhandledRejections === false) {

[Survived] PrecomputedMutator
q.js:1094:9
-       if (!trackUnhandledRejections) {
+       if (typeof trackUnhandledRejections !== "boolean") {

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(1), promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(-1), promise);

[Survived] PrecomputedMutator
q.js:1098:14
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(0, -1), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.concat(), promise);

[Survived] PrecomputedMutator
q.js:1098:28
-       var at = array_indexOf(unhandledRejections, promise);
+       var at = array_indexOf(unhandledRejections.filter(function (rejection) {
+     return rejection === promise;
+   }), promise);

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at === -1) {

[Survived] PrecomputedMutator
q.js:1099:9
-       if (at !== -1) {
+       if (at < -1) {

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.length);

[Survived] PrecomputedMutator
q.js:1102:32
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections[0]);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(unhandledRejections, promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections.slice(), promise);

[Survived] PrecomputedMutator
q.js:1102:46
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf([], promise);

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.then(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.catch(function () {}));

[Survived] PrecomputedMutator
q.js:1102:75
-                   var atReport = array_indexOf(reportedUnhandledRejections, promise);
+                   var atReport = array_indexOf(reportedUnhandledRejections, promise.finally(function () {}));

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport > -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport === -1) {

[Survived] PrecomputedMutator
q.js:1103:21
-                   if (atReport !== -1) {
+                   if (atReport < -1) {

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], reportedUnhandledRejections[at]);

[Survived] PrecomputedMutator
q.js:1104:21
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], unhandledReasons[at]);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at + 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at - 1], promise);

[Survived] PrecomputedMutator
q.js:1104:54
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at] = "new reason", promise);

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.then());

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.catch());

[Survived] PrecomputedMutator
q.js:1104:76
-                       process.emit("rejectionHandled", unhandledReasons[at], promise);
+                       process.emit("rejectionHandled", unhandledReasons[at], promise.finally());

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport = 1);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport = at);

[Survived] PrecomputedMutator
q.js:1105:21
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport = array_indexOf(reportedUnhandledRejections, promise));

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.length, 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.pop(), 1);

[Survived] PrecomputedMutator
q.js:1105:56
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport.shift(), 1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, -1);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 0);

[Survived] PrecomputedMutator
q.js:1105:66
-                       reportedUnhandledRejections.splice(atReport, 1);
+                       reportedUnhandledRejections.splice(atReport, 10);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:9
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1109:36
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at * 2, 1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1109:40
-           unhandledRejections.splice(at, 1);
+           unhandledRejections.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 2);

[Survived] PrecomputedMutator
q.js:1110:9
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length - 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at - 1, 1);

[Survived] PrecomputedMutator
q.js:1110:33
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at + 2, 1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, 0);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, -1);

[Survived] PrecomputedMutator
q.js:1110:37
-           unhandledReasons.splice(at, 1);
+           unhandledReasons.splice(at, unhandledReasons.length);

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (!rejected) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected && false) {

[Survived] PrecomputedMutator
q.js:1139:17
-               if (rejected) {
+               if (rejected || true) {

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(null);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(undefined);

[Survived] PrecomputedMutator
q.js:1140:34
-                   untrackRejection(this);
+                   untrackRejection(0);

[Survived] PrecomputedMutator
q.js:1151:5
-       trackRejection(rejection, reason);
+       untrackRejection(rejection, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(null, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(undefined, reason);

[Survived] PrecomputedMutator
q.js:1151:20
-       trackRejection(rejection, reason);
+       trackRejection(rejection.reason, reason);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, null);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, undefined);

[Survived] PrecomputedMutator
q.js:1151:31
-       trackRejection(rejection, reason);
+       trackRejection(rejection, new Error());

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === undefined) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name == null) {

[Survived] PrecomputedMutator
q.js:1178:17
-               if (name === null || name === void 0) {
+               if (name === void 0) {

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args, null);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.apply(args, void 0);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:24
-                   return value.apply(void 0, args);
+                   return value.toString(void 0, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1179:36
-                   return value.apply(void 0, args);
+                   return value.apply(0, args);

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.slice());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1179:44
-                   return value.apply(void 0, args);
+                   return value.apply(void 0, args.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.slice());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, args.concat());

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].call(value, args);

[Survived] PrecomputedMutator
q.js:1181:24
-                   return value[name].apply(value, args);
+                   return value[name].bind(value, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(null, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1181:42
-                   return value[name].apply(value, args);
+                   return value[name].apply({}, args);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, null);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, []);

[Survived] PrecomputedMutator
q.js:1181:49
-                   return value[name].apply(value, args);
+                   return value[name].apply(value, [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.call(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.bind(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:20
-               return value.apply(thisp, args);
+               return value.toString(thisp, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(null, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1185:32
-               return value.apply(thisp, args);
+               return value.apply(0, args);

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.slice());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.concat());

[Survived] PrecomputedMutator
q.js:1185:39
-               return value.apply(thisp, args);
+               return value.apply(thisp, args.map(function (x) {
+     return x * 2;
+   }));

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_values(value);

[Survived] PrecomputedMutator
q.js:1188:20
-               return object_keys(value);
+               return object_entries(value);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(null);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys(undefined);

[Survived] PrecomputedMutator
q.js:1188:32
-               return object_keys(value);
+               return object_keys({});

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.reject);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.resolve);

[Survived] PrecomputedMutator
q.js:1204:61
-               promise.then(deferred.resolve, deferred.reject, deferred.notify);
+               promise.then(deferred.resolve, deferred.reject, deferred.progress);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1206:13
-               deferred.reject(exception);
+               deferred.notify(exception);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1206:29
-               deferred.reject(exception);
+               deferred.reject(false);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[1]);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "dispatch"(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:16
-           return dispatch(object, op, args);
+           return "dispatch" + 1(object, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(null, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch(undefined, op, args);

[Survived] PrecomputedMutator
q.js:1226:25
-           return dispatch(object, op, args);
+           return dispatch({}, op, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op + 1, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op * 2, args);

[Survived] PrecomputedMutator
q.js:1226:33
-           return dispatch(object, op, args);
+           return dispatch(object, op - 1, args);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args[0]);

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1226:37
-           return dispatch(object, op, args);
+           return dispatch(object, op, args.length);

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.reject(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.fulfill(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:16
-           return Q(object).inspect();
+           return Q.defer(object).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(null).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q(undefined).inspect();

[Survived] PrecomputedMutator
q.js:1228:18
-           return Q(object).inspect();
+           return Q({}).inspect();

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled);

[Survived] PrecomputedMutator
q.js:1244:12
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, fulfilled);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(undefined).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:14
-       return Q(value).spread(fulfilled, rejected);
+       return Q(0).spread(fulfilled, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(rejected, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1244:28
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(null, rejected);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, resolved);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, undefined);

[Survived] PrecomputedMutator
q.js:1244:39
-       return Q(value).spread(fulfilled, rejected);
+       return Q(value).spread(fulfilled, null);

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.any().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.some().then(function (array) {

[Survived] PrecomputedMutator
q.js:1248:12
-       return this.all().then(function (array) {
+       return this.none().then(function (array) {

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(this);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return rejected.apply(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.call(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:16
-           return fulfilled.apply(void 0, array);
+           return fulfilled.bind(void 0, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(null, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(undefined, array);

[Survived] PrecomputedMutator
q.js:1249:32
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply({}, array);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array[0]);

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.slice(1));

[Survived] PrecomputedMutator
q.js:1249:40
-           return fulfilled.apply(void 0, array);
+           return fulfilled.apply(void 0, array.concat(array));

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (StopIteration === "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration !== "undefined") {

[Survived] PrecomputedMutator
q.js:1295:17
-               if (typeof StopIteration === "undefined") {
+               if (typeof StopIteration === "object") {

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1298:46
-                       result = generator[verb](arg);
+                       result = generator[verb](0);

[Survived] PrecomputedMutator
q.js:1300:28
-                       return reject(exception);
+                       return resolve(exception);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(null);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject(undefined);

[Survived] PrecomputedMutator
q.js:1300:35
-                       return reject(exception);
+                       return reject("error");

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.fail) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.value) {

[Survived] PrecomputedMutator
q.js:1302:21
-                   if (result.done) {
+                   if (result.isRejected) {

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, errback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, callback);

[Survived] PrecomputedMutator
q.js:1305:28
-                       return when(result.value, callback, errback);
+                       return when(result.value, function () {}, function () {});

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value + 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value * 2, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:33
-                       return when(result.value, callback, errback);
+                       return when(result.value - 1, callback, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, reject, errback);

[Survived] PrecomputedMutator
q.js:1305:47
-                       return when(result.value, callback, errback);
+                       return when(result.value, undefined, errback);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, reject);

[Survived] PrecomputedMutator
q.js:1305:57
-                       return when(result.value, callback, errback);
+                       return when(result.value, callback, resolve);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](null);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](undefined);

[Survived] PrecomputedMutator
q.js:1311:46
-                       result = generator[verb](arg);
+                       result = generator[verb](0);

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception) && exception.value !== undefined) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception) || exception.value === undefined) {

[Survived] PrecomputedMutator
q.js:1313:25
-                       if (isStopIteration(exception)) {
+                       if (typeof exception.value === "undefined") {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.message)) {

[Survived] PrecomputedMutator
q.js:1313:41
-                       if (isStopIteration(exception)) {
+                       if (isStopIteration(exception.stack)) {

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(exception);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(null);

[Survived] PrecomputedMutator
q.js:1314:34
-                           return Q(exception.value);
+                           return Q(undefined);

[Survived] PrecomputedMutator
q.js:1316:32
-                           return reject(exception);
+                           return resolve(exception);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.message);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(exception.stack);

[Survived] PrecomputedMutator
q.js:1316:39
-                           return reject(exception);
+                           return reject(null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, errback, callback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback, null);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return when(result, callback, errback, undefined);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.reject(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.resolve(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:24
-                   return when(result, callback, errback);
+                   return Q.all(result, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.value, callback, errback);

[Survived] PrecomputedMutator
q.js:1319:29
-                   return when(result, callback, errback);
+                   return when(result.then(function (value) {
+     return value;
+   }), callback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, errback, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, reject, errback);

[Survived] PrecomputedMutator
q.js:1319:37
-                   return when(result, callback, errback);
+                   return when(result, resolve, errback);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, reject);

[Survived] PrecomputedMutator
q.js:1319:47
-                   return when(result, callback, errback);
+                   return when(result, callback, resolve);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({});

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.call(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:25
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.bind(this, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1322:45
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, null);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, undefined);

[Survived] PrecomputedMutator
q.js:1322:51
-           var generator = makeGenerator.apply(this, arguments);
+           var generator = makeGenerator.apply(this, []);

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:24
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "throw"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "next"), "next");

[Survived] PrecomputedMutator
q.js:1323:39
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer.bind(continuer, "return"), "next");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "throw");

[Survived] PrecomputedMutator
q.js:1323:50
-           var callback = continuer.bind(continuer, "next");
+           var callback = continuer.bind(continuer, "return");

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "throw"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "next"));

[Survived] PrecomputedMutator
q.js:1324:23
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer.bind(continuer, "return"));

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "send");

[Survived] PrecomputedMutator
q.js:1324:49
-           var errback = continuer.bind(continuer, "throw");
+           var errback = continuer.bind(continuer, "next");

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return errback();

[Survived] PrecomputedMutator
q.js:1325:16
-           return callback();
+           return reject();

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.fail(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.reject(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:5
-       Q.done(Q.async(makeGenerator)());
+       Q.resolve(Q.async(makeGenerator)());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator())());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.call(null))());

[Survived] PrecomputedMutator
q.js:1338:20
-       Q.done(Q.async(makeGenerator)());
+       Q.done(Q.async(makeGenerator.apply(spawn, []))());

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, none(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, some(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:30
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, every(arguments)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all([1, 2, 3])], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(null)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1389:34
-           return spread([this, all(arguments)], function (self, args) {
+           return spread([this, all(undefined)], function (self, args) {

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args[0], args[1]);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply(args[0], self);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.call(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:20
-               return callback.apply(self, args);
+               return callback.apply.bind(self, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(null, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1390:35
-               return callback.apply(self, args);
+               return callback.apply({}, args);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args[0]);

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.slice(1));

[Survived] PrecomputedMutator
q.js:1390:41
-               return callback.apply(self, args);
+               return callback.apply(self, args.concat(["extra argument"]));

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice());

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat());

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.reject(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.resolve(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:12
-       return Q(object).dispatch(op, args);
+       return Q.defer(object).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(null).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(undefined).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:14
-       return Q(object).dispatch(op, args);
+       return Q(0).dispatch(op, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op + 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op - 1, args);

[Survived] PrecomputedMutator
q.js:1404:31
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op * 2, args);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args[0]);

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1404:35
-       return Q(object).dispatch(op, args);
+       return Q(object).dispatch(op, args.concat(args));

[Survived] PrecomputedMutator
q.js:1409:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.slice(1));

[Survived] PrecomputedMutator
q.js:1411:9
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, args.concat([1]));

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.reject, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.notify, op, args);

[Survived] PrecomputedMutator
q.js:1411:30
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve(null), op, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op + 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op - 1, args);

[Survived] PrecomputedMutator
q.js:1411:48
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op * 2, args);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, null);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, undefined);

[Survived] PrecomputedMutator
q.js:1411:52
-           self.promiseDispatch(deferred.resolve, op, args);
+           self.promiseDispatch(deferred.resolve, op, []);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.reject(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:12
-       return Q(object).dispatch("get", [key]);
+       return Q.defer(object).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q(null).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:14
-       return Q(object).dispatch("get", [key]);
+       return Q({}).dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1423:31
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1423:38
-       return Q(object).dispatch("get", [key]);
+       return Q(object).dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:12
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1427:26
-       return this.dispatch("get", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key + 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key - 1]);

[Survived] PrecomputedMutator
q.js:1427:33
-       return this.dispatch("get", [key]);
+       return this.dispatch("get", [key * 2]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, key]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.reject(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.defer(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:12
-       return Q(object).dispatch("set", [key, value]);
+       return Q.all(object).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(null).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q(undefined).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:14
-       return Q(object).dispatch("set", [key, value]);
+       return Q({}).dispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("get", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:31
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("post", [key, value]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [key, value, null]);

[Survived] PrecomputedMutator
q.js:1438:38
-       return Q(object).dispatch("set", [key, value]);
+       return Q(object).dispatch("set", [value, key, value]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, "new value"]);

[Survived] PrecomputedMutator
q.js:1442:12
-       return this.dispatch("set", [key, value]);
+       return this.promiseDispatch("set", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setValue", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setProperty", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:26
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("setter", [key, value]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [value, key]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, value + 1]);

[Survived] PrecomputedMutator
q.js:1442:33
-       return this.dispatch("set", [key, value]);
+       return this.dispatch("set", [key, Q(value)]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, null]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("set", [key, ""]);

[Survived] PrecomputedMutator
q.js:1453:12
-       return Q(object).dispatch("delete", [key]);
+       return Q.reject(object).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:14
-       return Q(object).dispatch("delete", [key]);
+       return Q({}).dispatch("delete", [key]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, "value"]);

[Survived] PrecomputedMutator
q.js:1453:41
-       return Q(object).dispatch("delete", [key]);
+       return Q(object).dispatch("delete", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1458:12
-       return this.dispatch("delete", [key]);
+       return this.dispatch("post", [key, undefined]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("set", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("get", [key]);

[Survived] PrecomputedMutator
q.js:1458:26
-       return this.dispatch("delete", [key]);
+       return this.dispatch("post", [key]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key, value]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key + 1]);

[Survived] PrecomputedMutator
q.js:1458:36
-       return this.dispatch("delete", [key]);
+       return this.dispatch("delete", [key - 1]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.reject(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.resolve(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:12
-       return Q(object).dispatch("post", [name, args]);
+       return Q.defer(object).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(null).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q(undefined).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:14
-       return Q(object).dispatch("post", [name, args]);
+       return Q({}).dispatch("post", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:31
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("set", [name, args]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.concat(array_slice(arguments, 2))]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.slice(0, args.length - 1)]);

[Survived] PrecomputedMutator
q.js:1476:39
-       return Q(object).dispatch("post", [name, args]);
+       return Q(object).dispatch("post", [name, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [args, name]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, 1]);

[Survived] PrecomputedMutator
q.js:1481:12
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args + 1]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("put", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:26
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("get", [name, args]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, 1]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, null]);

[Survived] PrecomputedMutator
q.js:1481:34
-       return this.dispatch("post", [name, args]);
+       return this.dispatch("post", [name, args, undefined]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1494:12
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(null).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(undefined).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:14
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(Q(object).then(function () {
+     return object;
+   })).dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("get", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:31
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("set", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 0, 2)]);

[Survived] PrecomputedMutator
q.js:1494:39
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 2, 1)]);

[Survived] PrecomputedMutator
q.js:1494:58
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(array_slice(arguments, 2), 2)]);

[Survived] PrecomputedMutator
q.js:1494:69
-       return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, -1)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:12
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, -1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("put", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:26
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("patch", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 0, 1)]);

[Survived] PrecomputedMutator
q.js:1500:34
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(arguments, 1, 2)]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 0, 1))]);

[Survived] PrecomputedMutator
q.js:1500:41
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 1, 2))]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1500:53
-       return this.dispatch("post", [name, array_slice(arguments, 1)]);
+       return this.dispatch("post", [name, array_slice(array_slice(arguments, 3), 1)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, [args]]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.concat(args)]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.reject(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.resolve(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:12
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q.defer(object).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(null).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:14
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(undefined).dispatch("apply", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:31
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("concat", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1509:40
-       return Q(object).dispatch("apply", [void 0, args]);
+       return Q(object).dispatch("apply", [void 0, args.reverse()]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [null, args]);

[Survived] PrecomputedMutator
q.js:1513:12
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args.slice(1)]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("bind", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:26
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply" + "call", [void 0, args]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, void 0]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, null]);

[Survived] PrecomputedMutator
q.js:1513:35
-       return this.dispatch("apply", [void 0, args]);
+       return this.dispatch("apply", [void 0, args, undefined]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("post", [name, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.reject(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.resolve(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:12
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q.defer(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(null).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:14
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(undefined).dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("call", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("bind", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:31
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("post", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1523:40
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 4)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 0)]);

[Survived] PrecomputedMutator
q.js:1523:49
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice([], 1)]);

[Survived] PrecomputedMutator
q.js:1523:61
-       return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
+       return Q(object).dispatch("apply", [void 0, array_slice(array_slice(arguments, 0, 1), 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [this, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:12
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("call", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("bind", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:26
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("post", [void 0, array_slice(arguments)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 1)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 2)]);

[Survived] PrecomputedMutator
q.js:1527:35
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(arguments, 3)]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 2))]);

[Survived] PrecomputedMutator
q.js:1527:56
-       return this.dispatch("apply", [void 0, array_slice(arguments)]);
+       return this.dispatch("apply", [void 0, array_slice(array_slice(arguments, 1, 3))]);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(undefined);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q(null);

[Survived] PrecomputedMutator
q.js:1537:21
-       var promise = Q(object);
+       var promise = Q({});

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:1538:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1538:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([1, 2, 3], 1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1538:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, array.length);

[Survived] PrecomputedMutator
q.js:1542:13
-               args.concat(array_slice(arguments))
+               args.length(array_slice(arguments))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 0, 1))

[Survived] PrecomputedMutator
q.js:1542:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments[0]))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments.slice(1)))

[Survived] PrecomputedMutator
q.js:1542:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([].concat(arguments)))

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(1));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.concat([]));

[Survived] PrecomputedMutator
q.js:1548:28
-       var args = array_slice(arguments);
+       var args = array_slice(args.slice(0, -1));

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 1))

[Survived] PrecomputedMutator
q.js:1552:25
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(arguments, 2))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(null))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice(undefined))

[Survived] PrecomputedMutator
q.js:1552:37
-               args.concat(array_slice(arguments))
+               args.concat(array_slice([]))

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.reject(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.defer(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:12
-       return Q(object).dispatch("keys", []);
+       return Q.when(object).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.undefined).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.null).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:14
-       return Q(object).dispatch("keys", []);
+       return Q(object.undefined.undefined).dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1564:31
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", null);

[Survived] PrecomputedMutator
q.js:1564:39
-       return Q(object).dispatch("keys", []);
+       return Q(object).dispatch("keys", undefined);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return this.dispatch("slice", [1]);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return Q.dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1568:12
-       return this.dispatch("keys", []);
+       return Promise.prototype.dispatch("keys", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("values", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("length", []);

[Survived] PrecomputedMutator
q.js:1568:26
-       return this.dispatch("keys", []);
+       return this.dispatch("toString", []);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3]);

[Survived] PrecomputedMutator
q.js:1568:34
-       return this.dispatch("keys", []);
+       return this.dispatch("keys", [1, 2, 3, 4, 5]);

[Survived] PrecomputedMutator
q.js:1584:24
-           var deferred = defer();
+           var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "rejected"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "pending"

[Survived] PrecomputedMutator
q.js:1588:17
-                   isPromise(promise) &&
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   promise.inspect().state === "fulfilled" && promise.inspect().value === undefined

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.then(function () {
+     return;
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.catch(function () {
+     return;
+   })) &&

[Survived] PrecomputedMutator
q.js:1588:27
-                   isPromise(promise) &&
+                   isPromise(promise.finally(function () {
+     return;
+   })) &&

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.state()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.value()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1589:29
-                   (snapshot = promise.inspect()).state === "fulfilled"
+                   (snapshot = promise.reject()).state === "fulfilled"

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1598:29
-                           if (--pendingCount === 0) {
+                           if (promises.length === 0) {

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1599:29
-                               deferred.resolve(promises);
+                               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.concat([Q.reject()]));

[Survived] PrecomputedMutator
q.js:1599:46
-                               deferred.resolve(promises);
+                               deferred.resolve(promises.filter(function (promise) {
+     return promise.inspect().state === "rejected";
+   }));

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.reject({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.resolve({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:25
-                           deferred.notify({ index: index, value: progress });
+                           deferred.progress({ index: index, value: progress });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress + 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress - 1
+   });

[Survived] PrecomputedMutator
q.js:1604:41
-                           deferred.notify({ index: index, value: progress });
+                           deferred.notify({
+     index: index,
+     value: progress * 2
+   });

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount < 0) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount === promises.length) {

[Survived] PrecomputedMutator
q.js:1609:13
-           if (pendingCount === 0) {
+           if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.reject(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.notify(promises);

[Survived] PrecomputedMutator
q.js:1610:13
-               deferred.resolve(promises);
+               deferred.cancel(promises);

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.slice(1));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.concat([]));

[Survived] PrecomputedMutator
q.js:1610:30
-               deferred.resolve(promises);
+               deferred.resolve(promises.map(function (promise) {
+     return promise.then(function (value) {
+       return value;
+     });
+   }));

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1617:12
-       return all(this);
+       return allResolved(this);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(null);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all(undefined);

[Survived] PrecomputedMutator
q.js:1617:16
-       return all(this);
+       return all([]);

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length !== 0) {

[Survived] PrecomputedMutator
q.js:1630:9
-       if (promises.length === 0) {
+       if (promises.length < 0) {

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.reject();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.defer();

[Survived] PrecomputedMutator
q.js:1631:16
-           return Q.resolve();
+           return Q.when();

[Survived] PrecomputedMutator
q.js:1641:9
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.then(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.catch(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:14
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise.finally(), onFulfilled, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onRejected, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onProgress, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:23
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, noop, onRejected, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onFulfilled, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onProgress, onProgress);

[Survived] PrecomputedMutator
q.js:1641:36
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, deferred.resolve, onProgress);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onRejected);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, onFulfilled);

[Survived] PrecomputedMutator
q.js:1641:48
-           when(promise, onFulfilled, onRejected, onProgress);
+           when(promise, onFulfilled, onRejected, noop);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.reject(result);

[Survived] PrecomputedMutator
q.js:1643:13
-               deferred.resolve(result);
+               deferred.notify(result);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(promise);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(index);

[Survived] PrecomputedMutator
q.js:1643:30
-               deferred.resolve(result);
+               deferred.resolve(progress);

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount > 0) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (pendingCount < promises.length) {

[Survived] PrecomputedMutator
q.js:1647:17
-               if (pendingCount === 0) {
+               if (promises.length > 0) {

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.resolve(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.notify(rejection);

[Survived] PrecomputedMutator
q.js:1653:17
-                   deferred.reject(rejection);
+                   deferred.inspect(rejection);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.message);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.stack);

[Survived] PrecomputedMutator
q.js:1653:33
-                   deferred.reject(rejection);
+                   deferred.reject(rejection.name);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return all(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return none(this);

[Survived] PrecomputedMutator
q.js:1668:12
-       return any(this);
+       return some(this);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(null);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any(undefined);

[Survived] PrecomputedMutator
q.js:1668:16
-       return any(this);
+       return any([]);

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:17
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:27
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allSettled, "allResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allRejected", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "anyResolved", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:40
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allSettled", "allSettled");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "allResolved");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "any");

[Survived] PrecomputedMutator
q.js:1680:55
-   Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
+   Q.allResolved = deprecate(allResolved, "allResolved", "all");

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_filter(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_reduce(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:20
-           promises = array_map(promises, Q);
+           promises = array_find(promises, Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.slice(0, promises.length - 1), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.concat([Q.reject()]), Q);

[Survived] PrecomputedMutator
q.js:1683:30
-           promises = array_map(promises, Q);
+           promises = array_map(promises.map(function (promise) {
+     return Q.reject(promise);
+   }), Q);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.reject);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.resolve);

[Survived] PrecomputedMutator
q.js:1683:40
-           promises = array_map(promises, Q);
+           promises = array_map(promises, Q.defer);

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop, noop));

[Survived] PrecomputedMutator
q.js:1685:20
-               return when(promise, noop, noop);
+               return when(promise.then(noop, noop, noop, noop));

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function (value) {
+     return value + 1;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:25
-               return when(promise, noop, noop);
+               return when(promise.then(function (value) {
+     return value * 2;
+   }), noop, noop);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, Q.reject);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, Q.resolve);

[Survived] PrecomputedMutator
q.js:1685:40
-               return when(promise, noop, noop);
+               return when(promise, noop, Q.defer);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return allSettled(this);

[Survived] PrecomputedMutator
q.js:1693:12
-       return allResolved(this);
+       return any(this);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(null);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved(undefined);

[Survived] PrecomputedMutator
q.js:1693:24
-       return allResolved(this);
+       return allResolved([]);

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.slice(1)).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.concat(["new promise"])).allSettled();

[Survived] PrecomputedMutator
q.js:1701:14
-       return Q(promises).allSettled();
+       return Q(promises.filter(function (promise) {
+     return promise.isFulfilled();
+   })).allSettled();

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function () {
+     throw new Error("Dummy error");
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function () {
+     return Q.reject("Dummy error");
+   }));

[Survived] PrecomputedMutator
q.js:1714:25
-               promise = Q(promise);
+               promise = Q(promise.then(function () {
+     return Q.resolve("Dummy value");
+   }));

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(promise, promise);

[Survived] PrecomputedMutator
q.js:1718:20
-               return promise.then(regardless, regardless);
+               return promise.then(null, null);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(rejected, regardless);

[Survived] PrecomputedMutator
q.js:1718:33
-               return promise.then(regardless, regardless);
+               return promise.then(noop, regardless);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(rejected, void 0);

[Survived] PrecomputedMutator
q.js:1734:12
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:14
-       return Q(object).then(void 0, rejected);
+       return Q(undefined).then(void 0, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(null, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1734:27
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(function () {}, rejected);

[Survived] PrecomputedMutator
q.js:1734:35
-       return Q(object).then(void 0, rejected);
+       return Q(object).then(void 0, fulfilled);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:12
-       return this.then(void 0, rejected);
+       return this.then("", rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(null, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(undefined, rejected);

[Survived] PrecomputedMutator
q.js:1739:22
-       return this.then(void 0, rejected);
+       return this.then(function () {}, rejected);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, resolved);

[Survived] PrecomputedMutator
q.js:1739:30
-       return this.then(void 0, rejected);
+       return this.then(void 0, deferred.reject(rejection));

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:12
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:14
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(function () {}).then(void 0, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:27
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1752:35
-       return Q(object).then(void 0, void 0, progressed);
+       return Q(object).then(void 0, function () {}, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:12
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, void 0, progressed.bind(this));

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(null, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(undefined, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:22
-       return this.then(void 0, void 0, progressed);
+       return this.then(function () {}, void 0, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, null, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, undefined, progressed);

[Survived] PrecomputedMutator
q.js:1756:30
-       return this.then(void 0, void 0, progressed);
+       return this.then(void 0, this, progressed);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.reject(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.resolve(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:12
-       return Q(object)["finally"](callback);
+       return Q.defer(object)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(null)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(undefined)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:14
-       return Q(object)["finally"](callback);
+       return Q(0)["finally"](callback);

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall().then());

[Survived] PrecomputedMutator
q.js:1772:33
-       return Q(object)["finally"](callback);
+       return Q(object)["finally"](callback.fcall().then(function (value) {
+     return value;
+   }));

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply !== "function") {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply !== callback) {

[Survived] PrecomputedMutator
q.js:1777:9
-       if (!callback || typeof callback.apply !== "function") {
+       if (callback.apply === "function") {

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.reject(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.defer(callback);

[Survived] PrecomputedMutator
q.js:1780:16
-       callback = Q(callback);
+       callback = Q.when(callback);

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.fcall());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.call());

[Survived] PrecomputedMutator
q.js:1780:18
-       callback = Q(callback);
+       callback = Q(callback.apply());

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress + 1);

[Survived] PrecomputedMutator
q.js:1800:12
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, progress * 2);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(null).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(undefined).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:14
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(0).done(fulfilled, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(rejected, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(progressed, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:27
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(void 0, rejected, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, resolved, progress);

[Survived] PrecomputedMutator
q.js:1800:38
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, fulfilled, progress);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, null);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, undefined);

[Survived] PrecomputedMutator
q.js:1800:48
-       return Q(object).done(fulfilled, rejected, progress);
+       return Q(object).done(fulfilled, rejected, () => {});

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(null);

[Survived] PrecomputedMutator
q.js:1810:27
-                   Q.onerror(error);
+                   Q.onerror(undefined);

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, function () {}) :

[Survived] PrecomputedMutator
q.js:1819:9
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, function () {}, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(rejected, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:19
-           this.then(fulfilled, rejected, progress) :
+           this.then(undefined, rejected, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, fulfilled, progress) :

[Survived] PrecomputedMutator
q.js:1819:30
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, undefined, progress) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, null) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, undefined) :

[Survived] PrecomputedMutator
q.js:1819:40
-           this.then(fulfilled, rejected, progress) :
+           this.then(fulfilled, rejected, () => {}) :

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.bind(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.call(null));

[Survived] PrecomputedMutator
q.js:1823:48
-           onUnhandledError = process.domain.bind(onUnhandledError);
+           onUnhandledError = process.domain.bind(onUnhandledError.apply(null));

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:5
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(null, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then(undefined, onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:18
-       promise.then(void 0, onUnhandledError);
+       promise.then("foo", onUnhandledError);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, onUnhandledError());

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, null);

[Survived] PrecomputedMutator
q.js:1826:26
-       promise.then(void 0, onUnhandledError);
+       promise.then(void 0, function () {});

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:12
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, new Error());

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(undefined).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:14
-       return Q(object).timeout(ms, error);
+       return Q(0).timeout(ms, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms + 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms - 1, error);

[Survived] PrecomputedMutator
q.js:1839:30
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms * 2, error);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, null);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, undefined);

[Survived] PrecomputedMutator
q.js:1839:34
-       return Q(object).timeout(ms, error);
+       return Q(object).timeout(ms, "error");

[Survived] PrecomputedMutator
q.js:1843:20
-       var deferred = defer();
+       var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" === typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error || "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1845:13
-           if (!error || "string" === typeof error) {
+           if (error && "string" !== typeof error) {

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           deferred.resolve(error);

[Survived] PrecomputedMutator
q.js:1849:9
-           deferred.reject(error);
+           null(error);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(null);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject(undefined);

[Survived] PrecomputedMutator
q.js:1849:25
-           deferred.reject(error);
+           deferred.reject("error");

[Survived] PrecomputedMutator
q.js:1853:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1853:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1854:9
-           deferred.resolve(value);
+           deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1854:26
-           deferred.resolve(value);
+           deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1856:9
-           clearTimeout(timeoutId);
+           clearInterval(timeoutId);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(null);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(undefined);

[Survived] PrecomputedMutator
q.js:1856:22
-           clearTimeout(timeoutId);
+           clearTimeout(0);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           deferred.resolve(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           null(exception);

[Survived] PrecomputedMutator
q.js:1857:9
-           deferred.reject(exception);
+           undefined(exception);

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout !== void 0) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === null) {

[Survived] PrecomputedMutator
q.js:1873:9
-       if (timeout === void 0) {
+       if (timeout === 0) {

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.reject(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.defer(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:12
-       return Q(object).delay(timeout);
+       return Q.when(object).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(null).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(undefined).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:14
-       return Q(object).delay(timeout);
+       return Q(0).delay(timeout);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(0);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(null);

[Survived] PrecomputedMutator
q.js:1877:28
-       return Q(object).delay(timeout);
+       return Q(object).delay(undefined);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.reject(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               deferred.notify(value);

[Survived] PrecomputedMutator
q.js:1884:13
-               deferred.resolve(value);
+               null(value);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(undefined);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(null);

[Survived] PrecomputedMutator
q.js:1884:30
-               deferred.resolve(value);
+               deferred.resolve(0);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.reject(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.defer(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:12
-       return Q(callback).nfapply(args);
+       return Q.when(callback).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1900:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply([]);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1905:32
-       var nodeArgs = array_slice(args);
+       var nodeArgs = array_slice(0);

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1906:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fail(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.then(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:5
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.catch(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1907:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.reject(new Error("Different error message")));

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:16
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1921:28
-       var args = array_slice(arguments, 1);
+       var args = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1921:39
-       var args = array_slice(arguments, 1);
+       var args = array_slice(arguments, null);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(null).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(undefined).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:14
-       return Q(callback).nfapply(args);
+       return Q(function () {}).nfapply(args);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(null);

[Survived] PrecomputedMutator
q.js:1922:32
-       return Q(callback).nfapply(args);
+       return Q(callback).nfapply(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1926:32
-       var nodeArgs = array_slice(arguments);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1928:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(null).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(undefined).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:17
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply([]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1929:32
-       this.fapply(nodeArgs).fail(deferred.reject);
+       this.fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== undefined) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== null) {

[Survived] PrecomputedMutator
q.js:1943:9
-       if (callback === undefined) {
+       if (callback !== "undefined") {

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1946:20
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:1946:32
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1946:43
-       var baseArgs = array_slice(arguments, 1);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1948:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1948:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1950:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function (err) {
+     throw err;
+   }));

[Survived] PrecomputedMutator
q.js:1951:9
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           deferred(callback).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:11
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(function () {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.slice(0)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.concat([])).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:28
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs.filter(function () {
+     return true;
+   })).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(deferred.notify);

[Survived] PrecomputedMutator
q.js:1951:43
-           Q(callback).fapply(nodeArgs).fail(deferred.reject);
+           Q(callback).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments.length);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[0]);

[Survived] PrecomputedMutator
q.js:1958:28
-       var args = array_slice(arguments);
+       var args = array_slice(arguments[arguments.length - 1]);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.push(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1959:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1959:18
-       args.unshift(this);
+       args.unshift(0);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(this);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:12
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(null, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1960:30
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(function () {}, args);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args[0]);

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.slice(1));

[Survived] PrecomputedMutator
q.js:1960:38
-       return Q.denodeify.apply(void 0, args);
+       return Q.denodeify.apply(void 0, args.concat([deferred.makeNodeResolver()]));

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:20
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 2), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 3), 2);

[Survived] PrecomputedMutator
q.js:1964:32
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(array_slice(arguments, 4), 2);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1964:43
-       var baseArgs = array_slice(arguments, 2);
+       var baseArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 0, 1));

[Survived] PrecomputedMutator
q.js:1966:40
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(arguments, 2));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(null));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice(undefined));

[Survived] PrecomputedMutator
q.js:1966:52
-           var nodeArgs = baseArgs.concat(array_slice(arguments));
+           var nodeArgs = baseArgs.concat(array_slice([]));

[Survived] PrecomputedMutator
q.js:1967:24
-           var deferred = defer();
+           var deferred = deferred();

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:9
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(null));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(function () {}));

[Survived] PrecomputedMutator
q.js:1968:23
-           nodeArgs.push(deferred.makeNodeResolver());
+           nodeArgs.push(deferred.makeNodeResolver(deferred.reject));

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments.length);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, arguments[0]);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.call(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:20
-               return callback.apply(thisp, arguments);
+               return callback.bind(thisp, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(null, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply(undefined, arguments);

[Survived] PrecomputedMutator
q.js:1970:35
-               return callback.apply(thisp, arguments);
+               return callback.apply({}, arguments);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, null);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, undefined);

[Survived] PrecomputedMutator
q.js:1970:42
-               return callback.apply(thisp, arguments);
+               return callback.apply(thisp, []);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(null).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(undefined).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:11
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(() => {}).fapply(nodeArgs).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.slice(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:25
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs.concat(1)).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(null);

[Survived] PrecomputedMutator
q.js:1972:40
-           Q(bound).fapply(nodeArgs).fail(deferred.reject);
+           Q(bound).fapply(nodeArgs).fail(undefined);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:1978:16
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(null, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice(undefined, 0);

[Survived] PrecomputedMutator
q.js:1978:28
-       var args = array_slice(arguments, 0);
+       var args = array_slice([], 0);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:1978:39
-       var args = array_slice(arguments, 0);
+       var args = array_slice(arguments, "hello");

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.shift(this);

[Survived] PrecomputedMutator
q.js:1979:5
-       args.unshift(this);
+       args.pop(this);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(null);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift(undefined);

[Survived] PrecomputedMutator
q.js:1979:18
-       args.unshift(this);
+       args.unshift({});

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(undefined, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.call(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:12
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply.bind(void 0, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(null, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(this, args);

[Survived] PrecomputedMutator
q.js:1980:26
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(0, args);

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.slice(0));

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.concat());

[Survived] PrecomputedMutator
q.js:1980:34
-       return Q.nbind.apply(void 0, args);
+       return Q.nbind.apply(void 0, args.map(function (x) {
+     return x;
+   }));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.slice(1));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.concat(deferred.makeNodeResolver()));

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return "Q"(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:12
-       return Q(object).npost(name, args);
+       return null(object).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(null).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q(undefined).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:14
-       return Q(object).npost(name, args);
+       return Q({}).npost(name, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost("name".toUpperCase(), args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.length, args);

[Survived] PrecomputedMutator
q.js:1994:28
-       return Q(object).npost(name, args);
+       return Q(object).npost(name.toLowerCase(), args);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args[0]);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.length);

[Survived] PrecomputedMutator
q.js:1994:34
-       return Q(object).npost(name, args);
+       return Q(object).npost(name, args.pop());

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(null);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice(undefined);

[Survived] PrecomputedMutator
q.js:1999:32
-       var nodeArgs = array_slice(args || []);
+       var nodeArgs = array_slice([]);

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2001:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.makeNodeResolver().bind(null));

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2002:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:20
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice([1, 2, 3]);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(null, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(undefined, 2);

[Survived] PrecomputedMutator
q.js:2019:32
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(0, 2);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 1);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 3);

[Survived] PrecomputedMutator
q.js:2019:43
-       var nodeArgs = array_slice(arguments, 2);
+       var nodeArgs = array_slice(arguments, 4);

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2021:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => {});

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.reject(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.resolve(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:5
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q.defer(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:7
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(undefined).dispatch("post", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:24
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("put", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [nodeArgs, name]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:32
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs.reverse()]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2022:55
-       Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       Q(object).dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(nodeArgs, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(args, 1);

[Survived] PrecomputedMutator
q.js:2029:20
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice.length(arguments, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(null, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(undefined, 1);

[Survived] PrecomputedMutator
q.js:2029:32
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice([], 1);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 2);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, 0);

[Survived] PrecomputedMutator
q.js:2029:43
-       var nodeArgs = array_slice(arguments, 1);
+       var nodeArgs = array_slice(arguments, -1);

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.unshift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.pop(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:5
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.shift(deferred.makeNodeResolver());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(null);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(undefined);

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(() => {});

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.reject());

[Survived] PrecomputedMutator
q.js:2031:19
-       nodeArgs.push(deferred.makeNodeResolver());
+       nodeArgs.push(deferred.resolve());

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, 1]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:5
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, function () {}]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("send", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("get", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:19
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("dispatch", [name, nodeArgs]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs, null]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:27
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs.slice(1)]).fail(deferred.reject);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(deferred.resolve);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(null);

[Survived] PrecomputedMutator
q.js:2032:50
-       this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
+       this.dispatch("post", [name, nodeArgs]).fail(undefined);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.all(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.reject(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:12
-       return Q(object).nodeify(nodeback);
+       return Q.defer(object).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(null).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(undefined).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:14
-       return Q(object).nodeify(nodeback);
+       return Q(0).nodeify(nodeback);

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(error, null));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(null, error));

[Survived] PrecomputedMutator
q.js:2048:30
-       return Q(object).nodeify(nodeback);
+       return Q(object).nodeify(nodeback(error));

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (!nodeback) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback()) {

[Survived] PrecomputedMutator
q.js:2052:9
-       if (nodeback) {
+       if (nodeback.call()) {

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, null);

[Survived] PrecomputedMutator
q.js:2055:17
-                   nodeback(null, value);
+                   nodeback(value, undefined);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(undefined, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback(0, value);

[Survived] PrecomputedMutator
q.js:2055:26
-                   nodeback(null, value);
+                   nodeback("", value);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, null);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, undefined);

[Survived] PrecomputedMutator
q.js:2055:32
-                   nodeback(null, value);
+                   nodeback(null, 0);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   null(error);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   undefined(error);

[Survived] PrecomputedMutator
q.js:2059:17
-                   nodeback(error);
+                   0(error);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(null);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(undefined);

[Survived] PrecomputedMutator
q.js:2059:26
-                   nodeback(error);
+                   nodeback(new Error());

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.reject();

[Survived] PrecomputedMutator
queue.js:7:18
-       var closed = Q.defer();
+       var closed = Q.resolve();

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail");

[Survived] PrecomputedMutator
queue.js:18:43
-               var result = ends.promise.get("head");
+               var result = ends.promise.get("head.tail.head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail.head");

[Survived] PrecomputedMutator
queue.js:19:45
-               ends.promise = ends.promise.get("tail");
+               ends.promise = ends.promise.get("tail.tail");

[Survived] PrecomputedMutator
queue.js:21:17
-                   closed.resolve(error);
+                   closed.reject(error);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(null);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(undefined);

[Survived] PrecomputedMutator
queue.js:21:32
-                   closed.resolve(error);
+                   closed.resolve(Q.reject(new Error("Queue is closed")));

[Survived] PrecomputedMutator
queue.js:28:30
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.resolve(error)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(null)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(undefined)};

[Survived] PrecomputedMutator
queue.js:28:39
-               var end = {head: Q.reject(error)};
+               var end = {head: Q.reject(Q.reject(new Error("Can't get value from closed queue")))};

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               ends.reject(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               closed.resolve(end);

[Survived] PrecomputedMutator
queue.js:30:13
-               ends.resolve(end);
+               next.reject(end);

Ran 0.96 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   11.31 |      144 |        80 |       1756 |        0 |        0 |
 q.js     |   11.42 |      144 |        80 |       1737 |        0 |        0 |
 queue.js |    0.00 |        0 |         0 |         19 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m02:54:44 (3103) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/q/reports/mutation/mutation.html
[32m02:54:44 (3103) INFO MutationTestExecutor[39m Done in 226 minutes 23 seconds.

real	226m24.783s
user	40m5.796s
sys	6m54.155s
