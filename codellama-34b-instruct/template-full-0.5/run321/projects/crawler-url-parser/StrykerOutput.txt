*** using precomputed mutations ***
[32m15:34:44 (2553) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m15:34:44 (2553) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m15:34:44 (2553) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m15:34:45 (2553) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m15:34:45 (2553) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m15:34:45 (2553) INFO ProjectReader[39m Found 1 of 741 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 279 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_0.5/mutants.json ***
Mutant 0 in crawler-url-parser.js: str replaced with str.substring(1)
Mutant 1 in crawler-url-parser.js: str replaced with str.toUpperCase()
Mutant 2 in crawler-url-parser.js: str replaced with str.replace("a", "b")
Mutant 3 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === undefined
Mutant 4 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === null
Mutant 5 in crawler-url-parser.js: typeof currentUrlStr === 'undefined' replaced with currentUrlStr === void 0
Mutant 6 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr || _has_illegal_chars(currentUrlStr)
Mutant 7 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr && !_has_illegal_chars(currentUrlStr)
Mutant 8 in crawler-url-parser.js: currentUrlStr && _has_illegal_chars(currentUrlStr) replaced with currentUrlStr.length > 0 && _has_illegal_chars(currentUrlStr)
Mutant 9 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with baseUrlStr && _has_illegal_chars(baseUrlStr) === false
Mutant 10 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with baseUrlStr && _has_illegal_chars(baseUrlStr) === true
Mutant 11 in crawler-url-parser.js: baseUrlStr && _has_illegal_chars(baseUrlStr) replaced with !baseUrlStr || _has_illegal_chars(baseUrlStr)
Mutant 12 in crawler-url-parser.js: baseUrlStr replaced with null
Mutant 13 in crawler-url-parser.js: baseUrlStr replaced with undefined
Mutant 14 in crawler-url-parser.js: baseUrlStr replaced with ""
Mutant 15 in crawler-url-parser.js: /^\/\// replaced with /^http:\/\/(?!localhost)/
Mutant 16 in crawler-url-parser.js: /^\/\// replaced with /^(?!https?:\/\/)/
Mutant 17 in crawler-url-parser.js: currentUrlStr.replace(/#.*$/, '') replaced with currentUrlStr.replace(/^#.*$/, '')
Mutant 18 in crawler-url-parser.js: currentUrlStr.replace(/#.*$/, '') replaced with currentUrlStr.replace(/#.*$/g, '')
Mutant 19 in crawler-url-parser.js: currentUrlStr.replace(/#.*$/, '') replaced with currentUrlStr.replace(/#.*$/, 'foo')
Mutant 20 in crawler-url-parser.js: /#.*$/ replaced with /\/\/.*$/
Mutant 21 in crawler-url-parser.js: /#.*$/ replaced with /^#.*$/
Mutant 22 in crawler-url-parser.js: 'http://' replaced with ''
Mutant 23 in crawler-url-parser.js: baseUrlStr.replace(/#.*$/, '') replaced with baseUrlStr.replace(/#.*$/, ' ')
Mutant 24 in crawler-url-parser.js: baseUrlStr.replace(/#.*$/, '') replaced with baseUrlStr.replace(/#.*$/, 'something')
Mutant 25 in crawler-url-parser.js: baseUrlStr.replace(/#.*$/, '') replaced with baseUrlStr.replace(/#.*$/, '^')
Mutant 26 in crawler-url-parser.js: /#.*$/ replaced with /[^\/]+$/
Mutant 27 in crawler-url-parser.js: /#.*$/ replaced with /\/[^\/]+$/
Mutant 28 in crawler-url-parser.js: /#.*$/ replaced with /[^/]+$/
Mutant 29 in crawler-url-parser.js: '' replaced with '#'
Mutant 30 in crawler-url-parser.js: '' replaced with '?'
Mutant 31 in crawler-url-parser.js: '' replaced with '#' + encodeURIComponent(str)
Mutant 32 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.substring(1)
Mutant 33 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.split('').reverse().join('')
Mutant 34 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.toUpperCase()
Mutant 35 in crawler-url-parser.js: currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/, 'http://') replaced with currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/, '')
Mutant 36 in crawler-url-parser.js: /^(?!(?:\w+:)?\/\/)/ replaced with /^(?!(?:\w+:)?\/\/)|(^(?!(?:\w+:)?\/\/)\w+)/
Mutant 37 in crawler-url-parser.js: /^(?!(?:\w+:)?\/\/)/ replaced with /^(?!(?:\w+:)?\/\/)|(^(?!(?:\w+:)?\/\/)\w+:\/\/)/
Mutant 38 in crawler-url-parser.js: /^(?!(?:\w+:)?\/\/)/ replaced with /^(?!(?:\w+:)?\/\/)|(^(?!(?:\w+:)?\/\/)\w+:\/\/[^\/]+)/
Mutant 39 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, false)
Mutant 40 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, true, false)
Mutant 41 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, true)
Mutant 42 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr + "foo"
Mutant 43 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr.split("").reverse().join("")
Mutant 44 in crawler-url-parser.js: true replaced with false
Mutant 45 in crawler-url-parser.js: true replaced with null
Mutant 46 in crawler-url-parser.js: true replaced with URL.parse(currentUrlStr)
Mutant 47 in crawler-url-parser.js: true replaced with false
Mutant 48 in crawler-url-parser.js: true replaced with undefined
Mutant 49 in crawler-url-parser.js: true replaced with null
Mutant 50 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'https:'
Mutant 51 in crawler-url-parser.js: parsedUrl.protocol && parsedUrl.protocol != 'http:' && parsedUrl.protocol != 'https:' replaced with parsedUrl.protocol && parsedUrl.protocol != 'http:'
Mutant 52 in crawler-url-parser.js: parsedUrl.host == null && baseUrlStr replaced with parsedUrl.host == null || baseUrlStr
Mutant 53 in crawler-url-parser.js: parsedUrl.host == null && baseUrlStr replaced with parsedUrl.host == null && !baseUrlStr
Mutant 54 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, false, false)
Mutant 55 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(null, true, true)
Mutant 56 in crawler-url-parser.js: URL.parse(baseUrlStr, true, true) replaced with URL.parse(baseUrlStr, true, false)
Mutant 57 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toLowerCase()
Mutant 58 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.toUpperCase()
Mutant 59 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.split('').reverse().join('')
Mutant 60 in crawler-url-parser.js: true replaced with false
Mutant 61 in crawler-url-parser.js: true replaced with false
Mutant 62 in crawler-url-parser.js: true replaced with null
Mutant 63 in crawler-url-parser.js: true replaced with undefined
Mutant 64 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.protocol
Mutant 65 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.host
Mutant 66 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.pathname
Mutant 67 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedUrl, parsedBaseUrl)
Mutant 68 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedUrl, baseUrlStr)
Mutant 69 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl.pathname, parsedUrl.pathname)
Mutant 70 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl.href, parsedUrl.href)
Mutant 71 in crawler-url-parser.js: URL.resolve(parsedBaseUrl, parsedUrl) replaced with URL.resolve(parsedBaseUrl.pathname, parsedUrl.path)
Mutant 72 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.protocol
Mutant 73 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.host
Mutant 74 in crawler-url-parser.js: parsedBaseUrl replaced with parsedBaseUrl.pathname
Mutant 75 in crawler-url-parser.js: parsedUrl replaced with URL.parse(currentUrlStr, true, false)
Mutant 76 in crawler-url-parser.js: parsedUrl replaced with URL.parse(currentUrlStr, false, true)
Mutant 77 in crawler-url-parser.js: parsedUrl replaced with URL.parse(currentUrlStr, true, true)
Mutant 78 in crawler-url-parser.js: URL.format replaced with URL.resolve
Mutant 79 in crawler-url-parser.js: URL.format replaced with URL.parse
Mutant 80 in crawler-url-parser.js: URL.format replaced with URL.toString
Mutant 81 in crawler-url-parser.js: absoluteUrl replaced with URL.parse(currentUrlStr, true, false)
Mutant 82 in crawler-url-parser.js: absoluteUrl replaced with URL.parse(currentUrlStr, true, true)
Mutant 83 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, false)
Mutant 84 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, true, false)
Mutant 85 in crawler-url-parser.js: URL.parse(currentUrlStr, true, true) replaced with URL.parse(currentUrlStr, false, true)
Mutant 86 in crawler-url-parser.js: currentUrlStr replaced with currentUrlStr + 'test'
Mutant 87 in crawler-url-parser.js: true replaced with false
Mutant 88 in crawler-url-parser.js: true replaced with !parsedUrl.host
Mutant 89 in crawler-url-parser.js: true replaced with parsedUrl.pathname === ''
Mutant 90 in crawler-url-parser.js: true replaced with false
Mutant 91 in crawler-url-parser.js: true replaced with null
Mutant 92 in crawler-url-parser.js: true replaced with undefined
Mutant 93 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.path
Mutant 94 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.host
Mutant 95 in crawler-url-parser.js: parsedUrl replaced with parsedUrl.protocol
Mutant 96 in crawler-url-parser.js: ret.host replaced with ret.hostname
Mutant 97 in crawler-url-parser.js: ret.host replaced with ret.protocol
Mutant 98 in crawler-url-parser.js: ret.host replaced with ret.port
Mutant 99 in crawler-url-parser.js: ret.host replaced with ret.hostname
Mutant 100 in crawler-url-parser.js: ret.host replaced with ret.protocol
Mutant 101 in crawler-url-parser.js: ret.host replaced with ret.pathname
Mutant 102 in crawler-url-parser.js: "=" replaced with "!="
Mutant 103 in crawler-url-parser.js: "=" replaced with "%"
Mutant 104 in crawler-url-parser.js: sourceUrl replaced with sourceUrl + "?utm_source=mutation"
Mutant 105 in crawler-url-parser.js: data replaced with null
Mutant 106 in crawler-url-parser.js: data replaced with ""
Mutant 107 in crawler-url-parser.js: data replaced with "<html><head></head><body></body></html>"
Mutant 108 in crawler-url-parser.js: 'base' replaced with 'base' + 'a'
Mutant 109 in crawler-url-parser.js: 'base' replaced with 'base' + 'b'
Mutant 110 in crawler-url-parser.js: 'base' replaced with 'base' + 'c'
Mutant 111 in crawler-url-parser.js: 'href' replaced with 'src'
Mutant 112 in crawler-url-parser.js: 'href' replaced with 'alt'
Mutant 113 in crawler-url-parser.js: 'href' replaced with 'title'
Mutant 114 in crawler-url-parser.js: 'a' replaced with 'div'
Mutant 115 in crawler-url-parser.js: 'a' replaced with 'a[href]'
Mutant 116 in crawler-url-parser.js: 'a' replaced with 'a:not([href])'
Mutant 117 in crawler-url-parser.js: 'href' replaced with 'src'
Mutant 118 in crawler-url-parser.js: 'href' replaced with 'href', 'src'
Mutant 119 in crawler-url-parser.js: 'href' replaced with 'href' || 'src'
Mutant 120 in crawler-url-parser.js: typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href) replaced with typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href) || href.includes("../")
Mutant 121 in crawler-url-parser.js: href replaced with $(this).attr('href').length
Mutant 122 in crawler-url-parser.js: href replaced with href.indexOf('http')
Mutant 123 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href, baseUrlStr)
Mutant 124 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href, baseUrlStr + "?query=param")
Mutant 125 in crawler-url-parser.js: parse(href, baseUrlStr) replaced with parse(href, baseUrlStr, false)
Mutant 126 in crawler-url-parser.js: href replaced with href + 'a'
Mutant 127 in crawler-url-parser.js: href replaced with href.toUpperCase()
Mutant 128 in crawler-url-parser.js: href replaced with href.split('/')[0]
Mutant 129 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.replace("http", "https")
Mutant 130 in crawler-url-parser.js: baseUrlStr replaced with baseUrlStr.replace("www.", "")
Mutant 131 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with currentUrl || currentUrl.url
Mutant 132 in crawler-url-parser.js: currentUrl && currentUrl.url replaced with !currentUrl || currentUrl.url
Mutant 133 in crawler-url-parser.js: urlMap.has(currentUrl.url) replaced with urlMap.has(currentUrl.url) || urlMap.has(currentUrl.baseurl)
Mutant 134 in crawler-url-parser.js: urlMap.has(currentUrl.url) replaced with urlMap.has(currentUrl.url) && !urlMap.has(currentUrl.baseurl)
Mutant 135 in crawler-url-parser.js: urlMap.has(currentUrl.url) replaced with urlMap.has(currentUrl.url) && urlMap.has(currentUrl.baseurl)
Mutant 136 in crawler-url-parser.js: urlMap.has replaced with urlMap.hasOwnProperty
Mutant 137 in crawler-url-parser.js: urlMap.has replaced with urlMap.get
Mutant 138 in crawler-url-parser.js: urlMap.has replaced with urlMap.includes
Mutant 139 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url + "xyz"
Mutant 140 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url.substring(1)
Mutant 141 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.url.split("/")[0]
Mutant 142 in crawler-url-parser.js: urlMap.get replaced with urlMap.set
Mutant 143 in crawler-url-parser.js: urlMap.get replaced with urlMap.put
Mutant 144 in crawler-url-parser.js: urlMap.get replaced with urlMap.merge
Mutant 145 in crawler-url-parser.js: currentUrl.url replaced with null
Mutant 146 in crawler-url-parser.js: currentUrl.url replaced with undefined
Mutant 147 in crawler-url-parser.js: currentUrl.url replaced with ""
Mutant 148 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.includes(text)
Mutant 149 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.indexOf(text) !== -1
Mutant 150 in crawler-url-parser.js: !tmpUrl.text.includes(text) replaced with tmpUrl.text.match(text)
Mutant 151 in crawler-url-parser.js: text replaced with text + "bug"
Mutant 152 in crawler-url-parser.js: text replaced with text.toUpperCase()
Mutant 153 in crawler-url-parser.js: text replaced with text.substring(1)
Mutant 154 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url, currentUrl.baseurl)
Mutant 155 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.url + currentUrl.baseurl)
Mutant 156 in crawler-url-parser.js: urlMap.set(currentUrl.url, currentUrl) replaced with urlMap.set(currentUrl.baseurl + currentUrl.url)
Mutant 157 in crawler-url-parser.js: currentUrl.url replaced with currentUrl.baseurl
Mutant 158 in crawler-url-parser.js: currentUrl.url replaced with parsedUrl.href
Mutant 159 in crawler-url-parser.js: currentUrl.url replaced with URL.resolve(baseUrl, parsedUrl)
Mutant 160 in crawler-url-parser.js: currentUrl replaced with currentUrl.url
Mutant 161 in crawler-url-parser.js: currentUrl replaced with currentUrl.host
Mutant 162 in crawler-url-parser.js: currentUrl replaced with currentUrl.path
Mutant 163 in crawler-url-parser.js: baseUrlStr replaced with "null"
Mutant 164 in crawler-url-parser.js: urlMap.values() replaced with urlMap.keys()
Mutant 165 in crawler-url-parser.js: urlMap.values() replaced with urlMap.entries()
Mutant 166 in crawler-url-parser.js: urlMap.values() replaced with urlMap.values().reverse()
Mutant 167 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(currentUrl.protocol, baseUrl.protocol)
Mutant 168 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(currentUrl.host, baseUrl.host)
Mutant 169 in crawler-url-parser.js: gettype(currentUrl, baseUrl) replaced with gettype(currentUrl.path, baseUrl.path)
Mutant 170 in crawler-url-parser.js: currentUrl replaced with null
Mutant 171 in crawler-url-parser.js: currentUrl replaced with currentUrl.baseurl
Mutant 172 in crawler-url-parser.js: currentUrl replaced with baseUrl
Mutant 173 in crawler-url-parser.js: baseUrl replaced with baseUrl.toString()
Mutant 174 in crawler-url-parser.js: baseUrl replaced with baseUrl.href
Mutant 175 in crawler-url-parser.js: baseUrl replaced with baseUrl.origin
Mutant 176 in crawler-url-parser.js: urlMap.values() replaced with urlMap.keys()
Mutant 177 in crawler-url-parser.js: urlMap.values() replaced with urlMap.entries()
Mutant 178 in crawler-url-parser.js: urlMap.values() replaced with urlMap.values().reverse()
Mutant 179 in crawler-url-parser.js: typeof linkurl == "string" replaced with linkurl.length > 0
Mutant 180 in crawler-url-parser.js: linkurl replaced with linkurl.path
Mutant 181 in crawler-url-parser.js: linkurl replaced with linkurl.host
Mutant 182 in crawler-url-parser.js: linkurl replaced with linkurl.protocol
Mutant 183 in crawler-url-parser.js: typeof pageurl == "string" replaced with typeof pageurl === "undefined"
Mutant 184 in crawler-url-parser.js: typeof pageurl == "string" replaced with typeof pageurl === "number"
Mutant 185 in crawler-url-parser.js: typeof pageurl == "string" replaced with typeof pageurl === "object"
Mutant 186 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/index\.[a-z]+$/, '')
Mutant 187 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/index\.[a-z]+$/, 'index.html')
Mutant 188 in crawler-url-parser.js: linkurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with linkurl_path.replace(/index\.[a-z]+$/, 'index.htm')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/index\.[a-z]+$/, '')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/index\.[a-z]+$/, 'index.html')
not replacing linkurl_path.replace(/\/index\.[a-z]+$/, '/') with linkurl_path.replace(/index\.[a-z]+$/, 'index.htm')
Mutant 189 in crawler-url-parser.js: linkurl_path.replace replaced with linkurl_path.replaceAll
not replacing linkurl_path.replace with linkurl_path.replaceAll
not replacing linkurl_path.replace with linkurl_path.replaceAll
Mutant 190 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/g
Mutant 191 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/i
Mutant 192 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/m
Mutant 193 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 194 in crawler-url-parser.js: '/' replaced with ' '
Mutant 195 in crawler-url-parser.js: '/' replaced with '|'
Mutant 196 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/g
Mutant 197 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/i
Mutant 198 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/m
Mutant 199 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 200 in crawler-url-parser.js: '/' replaced with '#'
Mutant 201 in crawler-url-parser.js: '/' replaced with '?'
Mutant 202 in crawler-url-parser.js: pageurl_path.replace(/\/index\.[a-z]+$/, '/') replaced with pageurl_path.replace(/\/index\.[a-z]+$/, '')
not replacing pageurl_path.replace(/\/index\.[a-z]+$/, '/') with pageurl_path.replace(/\/index\.[a-z]+$/, '')
Mutant 203 in crawler-url-parser.js: pageurl_path.replace replaced with pageurl_path.replaceAll
not replacing pageurl_path.replace with pageurl_path.replaceAll
not replacing pageurl_path.replace with pageurl_path.replaceAll
Mutant 204 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/g
Mutant 205 in crawler-url-parser.js: /\/index\.[a-z]+$/ replaced with /\/index\.[a-z]+$/i
Mutant 206 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 207 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/g
Mutant 208 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/i
Mutant 209 in crawler-url-parser.js: /\/default\.[a-z]+$/ replaced with /\/default\.[a-z]+$/m
Mutant 210 in crawler-url-parser.js: '/' replaced with '\\'
Mutant 211 in crawler-url-parser.js: '/' replaced with ' '
Mutant 212 in crawler-url-parser.js: '/' replaced with ''
Mutant 213 in crawler-url-parser.js: "/" replaced with "\\"
Mutant 214 in crawler-url-parser.js: "/" replaced with "\\/"
Mutant 215 in crawler-url-parser.js: "/" replaced with "\\s+"
Mutant 216 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with linkurl.host.includes(pageurl.host)
Mutant 217 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with pageurl.host.indexOf(linkurl.host) > -1
Mutant 218 in crawler-url-parser.js: pageurl.host == linkurl.host replaced with linkurl.host != pageurl.host
Mutant 219 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff == 1
Mutant 220 in crawler-url-parser.js: part_count_diff == 0 replaced with part_count_diff == -1
Mutant 221 in crawler-url-parser.js: part_count_diff == 0 replaced with linkurl_parts.length == pageurl_parts.length
Mutant 222 in crawler-url-parser.js: linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, " ")
Mutant 223 in crawler-url-parser.js: linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, ".")
Mutant 224 in crawler-url-parser.js: linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "\\")
Mutant 225 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/g
Mutant 226 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/i
Mutant 227 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*)[\/]?$/m
Mutant 228 in crawler-url-parser.js: "" replaced with "/"
Mutant 229 in crawler-url-parser.js: "" replaced with "/" + linkurl_path.replace(/\/[^\/]+\.[a-z]+$/, "")
Mutant 230 in crawler-url-parser.js: pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "a")
Mutant 231 in crawler-url-parser.js: pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "\\")
Mutant 232 in crawler-url-parser.js: pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "") replaced with pageurl_path.replace(/(\/[^\/]*)[\/]?$/, " ")
Mutant 233 in crawler-url-parser.js: pageurl_path.replace replaced with pageurl_path.replaceAll
Mutant 234 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*\/?)[\/]?$/
Mutant 235 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*\/?)[\/]?$/g
Mutant 236 in crawler-url-parser.js: /(\/[^\/]*)[\/]?$/ replaced with /(\/[^\/]*\/?)[\/]?$/i
Mutant 237 in crawler-url-parser.js: "" replaced with "/"
Mutant 238 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part === pageurl_without_last_part
Mutant 239 in crawler-url-parser.js: linkurl_without_last_part == pageurl_without_last_part replaced with linkurl_without_last_part !== pageurl_without_last_part
Mutant 240 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff > 1
Mutant 241 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff < 1
Mutant 242 in crawler-url-parser.js: part_count_diff == 1 replaced with part_count_diff != 1
Mutant 243 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.startsWith(pageurl_path)
Mutant 244 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.indexOf(pageurl_path) === 0
Mutant 245 in crawler-url-parser.js: linkurl_path.includes(pageurl_path) replaced with linkurl_path.match(pageurl_path)
Mutant 246 in crawler-url-parser.js: linkurl_path.includes replaced with linkurl_path.endsWith
Mutant 247 in crawler-url-parser.js: pageurl_path replaced with pageurl_path + "foo"
Mutant 248 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.length
Mutant 249 in crawler-url-parser.js: pageurl_path replaced with pageurl_path.substring(1)
Mutant 250 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff > -1
Mutant 251 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff !== -1
Mutant 252 in crawler-url-parser.js: part_count_diff == -1 replaced with part_count_diff < -1
Mutant 253 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.contains(pageurl_path)
Mutant 254 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with pageurl_path.startsWith(linkurl_path)
Mutant 255 in crawler-url-parser.js: pageurl_path.includes(linkurl_path) replaced with linkurl_path.indexOf(pageurl_path) > -1
Mutant 256 in crawler-url-parser.js: pageurl_path.includes replaced with pageurl_path.endsWith
Mutant 257 in crawler-url-parser.js: pageurl_path.includes replaced with pageurl_path.indexOf
Mutant 258 in crawler-url-parser.js: linkurl_path replaced with linkurl_path + '/'
Mutant 259 in crawler-url-parser.js: linkurl_path replaced with linkurl_path.split('/').pop()
Mutant 260 in crawler-url-parser.js: linkurl_path replaced with linkurl_path.substring(0, linkurl_path.indexOf('/'))
Mutant 261 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain === pageurl.domain
Mutant 262 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain != pageurl.domain
Mutant 263 in crawler-url-parser.js: linkurl.domain == pageurl.domain replaced with linkurl.domain !== pageurl.domain
Mutant 264 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len > pageurl_subdomain_len
Mutant 265 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len != pageurl_subdomain_len
Mutant 266 in crawler-url-parser.js: linkurl_subdomain_len < pageurl_subdomain_len replaced with linkurl_subdomain_len === pageurl_subdomain_len
Mutant 267 in crawler-url-parser.js: !module.parent replaced with module.parent
Mutant 268 in crawler-url-parser.js: !module.parent replaced with module.parent.exports
Mutant 269 in crawler-url-parser.js: !module.parent replaced with module.parent.name
Mutant 270 in crawler-url-parser.js: console.log replaced with console.error
Mutant 271 in crawler-url-parser.js: console.log replaced with console.warn
Mutant 272 in crawler-url-parser.js: console.log replaced with console.info
Mutant 273 in crawler-url-parser.js: parse replaced with parseInt
Mutant 274 in crawler-url-parser.js: parse replaced with String
Mutant 275 in crawler-url-parser.js: parse replaced with URL
Mutant 276 in crawler-url-parser.js: url replaced with url.substring(0, 4)
Mutant 277 in crawler-url-parser.js: url replaced with url.length
Mutant 278 in crawler-url-parser.js: url replaced with url.indexOf("https")
[32m15:34:45 (2553) INFO Instrumenter[39m Instrumented 1 source file(s) with 279 mutant(s)
[33m15:34:45 (2553) WARN DisableTypeChecksPreprocessor[39m Unable to disable type checking for file "/home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/test/05_tubitak.html". Shouldn't type checking be disabled for this file? Consider configuring a more restrictive "disableTypeChecks" settings (or turn it completely off with `false`) ParseError: Parse error in /home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/test/05_tubitak.html (73:43) Opening tag "a" not terminated.
    at ngHtmlParser (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:28:15)
    at async parse (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/parsers/html-parser.js:11:18)
    at async DisableTypeChecksPreprocessor.disableTypeChecks [as impl] (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/instrumenter/dist/src/disable-type-checks.js:28:17)
    at async file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:27:41
    at async Promise.all (index 736)
    at async DisableTypeChecksPreprocessor.preprocess (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/disable-type-checks-preprocessor.js:24:9)
    at async MultiPreprocessor.preprocess (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/sandbox/multi-preprocessor.js:8:13)
    at async MutantInstrumenterExecutor.execute (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/process/2-mutant-instrumenter-executor.js:30:9)
    at async Stryker.runMutationTest (file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/node_modules/@stryker-mutator/core/dist/src/stryker.js:33:48)
[33m15:34:45 (2553) WARN DisableTypeChecksPreprocessor[39m (disable "warnings.preprocessorErrors" to ignore this warning
[32m15:34:45 (2553) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m15:34:46 (2553) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m15:34:46 (2553) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m15:34:51 (2553) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 4 seconds (net 4629 ms, overhead 0 ms).
Mutation testing 0% (elapsed: <1m, remaining: ~23m) 2/279 tested (2 survived, 0 timed out)
Mutation testing 1% (elapsed: <1m, remaining: ~18m) 5/279 tested (4 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~15m) 9/279 tested (6 survived, 0 timed out)
Mutation testing 4% (elapsed: <1m, remaining: ~14m) 12/279 tested (7 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~14m) 15/279 tested (7 survived, 0 timed out)
Mutation testing 6% (elapsed: ~1m, remaining: ~15m) 17/279 tested (7 survived, 0 timed out)
Mutation testing 7% (elapsed: ~1m, remaining: ~15m) 20/279 tested (9 survived, 0 timed out)
Mutation testing 8% (elapsed: ~1m, remaining: ~14m) 23/279 tested (10 survived, 0 timed out)
Mutation testing 9% (elapsed: ~1m, remaining: ~14m) 26/279 tested (13 survived, 0 timed out)
Mutation testing 10% (elapsed: ~1m, remaining: ~14m) 29/279 tested (13 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~14m) 32/279 tested (15 survived, 0 timed out)
Mutation testing 12% (elapsed: ~2m, remaining: ~13m) 35/279 tested (16 survived, 0 timed out)
Mutation testing 13% (elapsed: ~2m, remaining: ~13m) 38/279 tested (18 survived, 0 timed out)
Mutation testing 14% (elapsed: ~2m, remaining: ~13m) 41/279 tested (21 survived, 0 timed out)
Mutation testing 15% (elapsed: ~2m, remaining: ~13m) 44/279 tested (22 survived, 0 timed out)
Mutation testing 16% (elapsed: ~2m, remaining: ~13m) 47/279 tested (25 survived, 0 timed out)
Mutation testing 17% (elapsed: ~2m, remaining: ~12m) 50/279 tested (28 survived, 0 timed out)
Mutation testing 18% (elapsed: ~3m, remaining: ~12m) 53/279 tested (28 survived, 0 timed out)
Mutation testing 20% (elapsed: ~3m, remaining: ~12m) 56/279 tested (29 survived, 0 timed out)
Mutation testing 21% (elapsed: ~3m, remaining: ~12m) 59/279 tested (30 survived, 0 timed out)
Mutation testing 22% (elapsed: ~3m, remaining: ~12m) 62/279 tested (32 survived, 0 timed out)
Mutation testing 23% (elapsed: ~3m, remaining: ~12m) 65/279 tested (34 survived, 0 timed out)
Mutation testing 24% (elapsed: ~3m, remaining: ~11m) 68/279 tested (34 survived, 0 timed out)
Mutation testing 25% (elapsed: ~4m, remaining: ~11m) 71/279 tested (35 survived, 0 timed out)
Mutation testing 26% (elapsed: ~4m, remaining: ~11m) 75/279 tested (35 survived, 0 timed out)
Mutation testing 27% (elapsed: ~4m, remaining: ~11m) 78/279 tested (38 survived, 0 timed out)
Mutation testing 29% (elapsed: ~4m, remaining: ~11m) 81/279 tested (39 survived, 0 timed out)
Mutation testing 30% (elapsed: ~4m, remaining: ~10m) 84/279 tested (40 survived, 0 timed out)
Mutation testing 31% (elapsed: ~4m, remaining: ~10m) 87/279 tested (42 survived, 0 timed out)
Mutation testing 31% (elapsed: ~5m, remaining: ~10m) 89/279 tested (44 survived, 0 timed out)
Mutation testing 32% (elapsed: ~5m, remaining: ~10m) 92/279 tested (47 survived, 0 timed out)
Mutation testing 33% (elapsed: ~5m, remaining: ~10m) 93/279 tested (48 survived, 0 timed out)
Mutation testing 34% (elapsed: ~5m, remaining: ~10m) 96/279 tested (48 survived, 0 timed out)
Mutation testing 35% (elapsed: ~5m, remaining: ~10m) 100/279 tested (49 survived, 0 timed out)
Mutation testing 36% (elapsed: ~5m, remaining: ~9m) 103/279 tested (49 survived, 0 timed out)
Mutation testing 38% (elapsed: ~6m, remaining: ~9m) 107/279 tested (50 survived, 0 timed out)
Mutation testing 39% (elapsed: ~6m, remaining: ~9m) 110/279 tested (50 survived, 0 timed out)
Mutation testing 40% (elapsed: ~6m, remaining: ~9m) 113/279 tested (50 survived, 0 timed out)
Mutation testing 41% (elapsed: ~6m, remaining: ~9m) 117/279 tested (51 survived, 0 timed out)
Mutation testing 43% (elapsed: ~6m, remaining: ~8m) 120/279 tested (52 survived, 0 timed out)
Mutation testing 44% (elapsed: ~6m, remaining: ~8m) 123/279 tested (54 survived, 0 timed out)
Mutation testing 45% (elapsed: ~7m, remaining: ~8m) 126/279 tested (57 survived, 0 timed out)
Mutation testing 46% (elapsed: ~7m, remaining: ~8m) 129/279 tested (57 survived, 0 timed out)
Mutation testing 47% (elapsed: ~7m, remaining: ~8m) 132/279 tested (59 survived, 0 timed out)
Mutation testing 48% (elapsed: ~7m, remaining: ~8m) 135/279 tested (60 survived, 0 timed out)
Mutation testing 49% (elapsed: ~7m, remaining: ~7m) 138/279 tested (63 survived, 0 timed out)
Mutation testing 50% (elapsed: ~7m, remaining: ~7m) 141/279 tested (65 survived, 0 timed out)
Mutation testing 51% (elapsed: ~8m, remaining: ~7m) 144/279 tested (66 survived, 0 timed out)
Mutation testing 53% (elapsed: ~8m, remaining: ~7m) 148/279 tested (66 survived, 0 timed out)
Mutation testing 54% (elapsed: ~8m, remaining: ~7m) 151/279 tested (69 survived, 0 timed out)
Mutation testing 54% (elapsed: ~8m, remaining: ~7m) 153/279 tested (71 survived, 0 timed out)
Mutation testing 56% (elapsed: ~8m, remaining: ~6m) 157/279 tested (72 survived, 0 timed out)
Mutation testing 57% (elapsed: ~8m, remaining: ~6m) 160/279 tested (72 survived, 0 timed out)
Mutation testing 58% (elapsed: ~9m, remaining: ~6m) 163/279 tested (72 survived, 0 timed out)
Mutation testing 59% (elapsed: ~9m, remaining: ~6m) 166/279 tested (73 survived, 0 timed out)
Mutation testing 60% (elapsed: ~9m, remaining: ~6m) 169/279 tested (73 survived, 0 timed out)
Mutation testing 61% (elapsed: ~9m, remaining: ~5m) 172/279 tested (73 survived, 0 timed out)
Mutation testing 62% (elapsed: ~9m, remaining: ~5m) 175/279 tested (73 survived, 0 timed out)
Mutation testing 63% (elapsed: ~9m, remaining: ~5m) 178/279 tested (73 survived, 0 timed out)
Mutation testing 64% (elapsed: ~10m, remaining: ~5m) 181/279 tested (74 survived, 0 timed out)
Mutation testing 65% (elapsed: ~10m, remaining: ~5m) 184/279 tested (74 survived, 0 timed out)
Mutation testing 67% (elapsed: ~10m, remaining: ~5m) 187/279 tested (75 survived, 0 timed out)
Mutation testing 67% (elapsed: ~10m, remaining: ~5m) 189/279 tested (75 survived, 0 timed out)
Mutation testing 68% (elapsed: ~10m, remaining: ~4m) 192/279 tested (77 survived, 0 timed out)
Mutation testing 69% (elapsed: ~10m, remaining: ~4m) 195/279 tested (78 survived, 0 timed out)
Mutation testing 70% (elapsed: ~11m, remaining: ~4m) 198/279 tested (80 survived, 0 timed out)
Mutation testing 72% (elapsed: ~11m, remaining: ~4m) 201/279 tested (83 survived, 0 timed out)
Mutation testing 73% (elapsed: ~11m, remaining: ~4m) 204/279 tested (85 survived, 0 timed out)
Mutation testing 74% (elapsed: ~11m, remaining: ~4m) 207/279 tested (88 survived, 0 timed out)
Mutation testing 75% (elapsed: ~11m, remaining: ~3m) 210/279 tested (91 survived, 0 timed out)
Mutation testing 76% (elapsed: ~11m, remaining: ~3m) 213/279 tested (94 survived, 0 timed out)
Mutation testing 77% (elapsed: ~12m, remaining: ~3m) 216/279 tested (94 survived, 0 timed out)
Mutation testing 78% (elapsed: ~12m, remaining: ~3m) 219/279 tested (94 survived, 0 timed out)
Mutation testing 79% (elapsed: ~12m, remaining: ~3m) 222/279 tested (95 survived, 0 timed out)
Mutation testing 80% (elapsed: ~12m, remaining: ~3m) 225/279 tested (95 survived, 0 timed out)
Mutation testing 81% (elapsed: ~12m, remaining: ~2m) 228/279 tested (98 survived, 0 timed out)
Mutation testing 82% (elapsed: ~12m, remaining: ~2m) 231/279 tested (98 survived, 0 timed out)
Mutation testing 83% (elapsed: ~13m, remaining: ~2m) 234/279 tested (98 survived, 0 timed out)
Mutation testing 84% (elapsed: ~13m, remaining: ~2m) 237/279 tested (101 survived, 0 timed out)
Mutation testing 86% (elapsed: ~13m, remaining: ~2m) 240/279 tested (102 survived, 0 timed out)
Mutation testing 87% (elapsed: ~13m, remaining: ~2m) 243/279 tested (102 survived, 0 timed out)
Mutation testing 88% (elapsed: ~13m, remaining: ~1m) 246/279 tested (105 survived, 0 timed out)
Mutation testing 89% (elapsed: ~13m, remaining: ~1m) 249/279 tested (105 survived, 0 timed out)
Mutation testing 90% (elapsed: ~14m, remaining: ~1m) 252/279 tested (106 survived, 0 timed out)
Mutation testing 91% (elapsed: ~14m, remaining: ~1m) 255/279 tested (107 survived, 0 timed out)
Mutation testing 92% (elapsed: ~14m, remaining: ~1m) 258/279 tested (107 survived, 0 timed out)
Mutation testing 93% (elapsed: ~14m, remaining: ~1m) 261/279 tested (108 survived, 0 timed out)
Mutation testing 94% (elapsed: ~14m, remaining: <1m) 264/279 tested (109 survived, 0 timed out)
Mutation testing 95% (elapsed: ~14m, remaining: <1m) 267/279 tested (109 survived, 0 timed out)
Mutation testing 96% (elapsed: ~15m, remaining: <1m) 270/279 tested (112 survived, 0 timed out)
Mutation testing 97% (elapsed: ~15m, remaining: <1m) 273/279 tested (115 survived, 0 timed out)
Mutation testing 98% (elapsed: ~15m, remaining: <1m) 275/279 tested (117 survived, 0 timed out)
Mutation testing 99% (elapsed: ~15m, remaining: <1m) 278/279 tested (120 survived, 0 timed out)

All tests
  ✓ All tests (killed 158)

[Survived] PrecomputedMutator
crawler-url-parser.js:16:73
-   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str);
+   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str.substring(1));

[Survived] PrecomputedMutator
crawler-url-parser.js:16:73
-   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str);
+   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str.toUpperCase());

[Survived] PrecomputedMutator
crawler-url-parser.js:16:73
-   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str);
+   	return /[^a-z0-9\:\/\?\#\[\]\@\!\$\&\'\(\)\*\+\,\;\=\.\-\_\~\%]/i.test(str.replace("a", "b"));

[Survived] PrecomputedMutator
crawler-url-parser.js:31:6
-   	if (typeof currentUrlStr === 'undefined') return null;
+   	if (currentUrlStr === undefined) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:31:6
-   	if (typeof currentUrlStr === 'undefined') return null;
+   	if (currentUrlStr === void 0) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:32:6
-   	if (currentUrlStr && _has_illegal_chars(currentUrlStr)) return null;
+   	if (currentUrlStr.length > 0 && _has_illegal_chars(currentUrlStr)) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:33:6
-   	if (baseUrlStr && _has_illegal_chars(baseUrlStr)) return null;
+   	if (baseUrlStr && _has_illegal_chars(baseUrlStr) === true) return null;

[Survived] PrecomputedMutator
crawler-url-parser.js:36:18
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/^#.*$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:18
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/#.*$/g, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:36:40
-   	currentUrlStr = currentUrlStr.replace(/#.*$/, '');
+   	currentUrlStr = currentUrlStr.replace(/^#.*$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:16
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:16
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, 'something');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:16
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '^');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:43
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:40:43
-   		baseUrlStr = baseUrlStr.replace(/#.*$/, '');
+   		baseUrlStr = baseUrlStr.replace(/#.*$/, '?');

[Survived] PrecomputedMutator
crawler-url-parser.js:42:41
-   		if (!/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr)) {
+   		if (!/^\.*\/|^(?!localhost)\w+:/.test(currentUrlStr.toUpperCase())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:43:42
-   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/, 'http://');
+   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)|(^(?!(?:\w+:)?\/\/)\w+)/, 'http://');

[Survived] PrecomputedMutator
crawler-url-parser.js:43:42
-   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/, 'http://');
+   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)|(^(?!(?:\w+:)?\/\/)\w+:\/\/)/, 'http://');

[Survived] PrecomputedMutator
crawler-url-parser.js:43:42
-   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)/, 'http://');
+   			currentUrlStr = currentUrlStr.replace(/^(?!(?:\w+:)?\/\/)|(^(?!(?:\w+:)?\/\/)\w+:\/\/[^\/]+)/, 'http://');

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:18
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, null, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:43
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, URL.parse(currentUrlStr), true);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:47:49
-   	let parsedUrl = URL.parse(currentUrlStr, true, true);
+   	let parsedUrl = URL.parse(currentUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:23
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:45
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:55:51
-   		let parsedBaseUrl = URL.parse(baseUrlStr, true, true);
+   		let parsedBaseUrl = URL.parse(baseUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:59:31
-   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl));
+   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl.href, parsedUrl.href));

[Survived] PrecomputedMutator
crawler-url-parser.js:59:58
-   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl));
+   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, URL.parse(currentUrlStr, true, false)));

[Survived] PrecomputedMutator
crawler-url-parser.js:59:58
-   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl));
+   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, URL.parse(currentUrlStr, false, true)));

[Survived] PrecomputedMutator
crawler-url-parser.js:59:58
-   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, parsedUrl));
+   		let absoluteUrl = URL.parse(URL.resolve(parsedBaseUrl, URL.parse(currentUrlStr, true, true)));

[Survived] PrecomputedMutator
crawler-url-parser.js:60:19
-   		currentUrlStr = URL.format(absoluteUrl);
+   		currentUrlStr = URL.parse(absoluteUrl);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:14
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, false, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, !parsedUrl.host, true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:39
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, parsedUrl.pathname === '', true);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, null);

[Survived] PrecomputedMutator
crawler-url-parser.js:63:45
-   	parsedUrl = URL.parse(currentUrlStr, true, true);
+   	parsedUrl = URL.parse(currentUrlStr, true, undefined);

[Survived] PrecomputedMutator
crawler-url-parser.js:71:6
-   	if (ret.host) {
+   	if (ret.protocol) {

[Survived] PrecomputedMutator
crawler-url-parser.js:85:22
-   	var baseUrl = parse(sourceUrl);
+   	var baseUrl = parse(sourceUrl + "?utm_source=mutation");

[Survived] PrecomputedMutator
crawler-url-parser.js:93:4
-   	$('a').each(function (i, el) {
+   	$('a[href]').each(function (i, el) {

[Survived] PrecomputedMutator
crawler-url-parser.js:94:27
-   		let href = $(this).attr('href');
+   		let href = $(this).attr('href' || 'src');

[Survived] PrecomputedMutator
crawler-url-parser.js:97:92
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test($(this).attr('href').length)) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:97:92
-   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href)) return;
+   		if (typeof href == "undefined" || href.length < 3 || /^(javascript|mailto:|ftp:)/ig.test(href.indexOf('http'))) return;

[Survived] PrecomputedMutator
crawler-url-parser.js:99:20
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse(href, baseUrlStr);

[Survived] PrecomputedMutator
crawler-url-parser.js:99:20
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse(href, baseUrlStr + "?query=param");

[Survived] PrecomputedMutator
crawler-url-parser.js:99:20
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse(href, baseUrlStr, false);

[Survived] PrecomputedMutator
crawler-url-parser.js:99:32
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse(href, baseUrlStr.replace("http", "https"));

[Survived] PrecomputedMutator
crawler-url-parser.js:99:32
-   		let currentUrl = parse(href, baseUrlStr);
+   		let currentUrl = parse(href, baseUrlStr.replace("www.", ""));

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url) && !urlMap.has(currentUrl.baseurl)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url) && urlMap.has(currentUrl.baseurl)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.hasOwnProperty(currentUrl.url)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:8
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.get(currentUrl.url)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:19
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url + "xyz")) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:19
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url.substring(1))) {

[Survived] PrecomputedMutator
crawler-url-parser.js:102:19
-   			if (urlMap.has(currentUrl.url)) {
+   			if (urlMap.has(currentUrl.url.split("/")[0])) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.includes(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.indexOf(text) !== -1) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:9
-   				if (!tmpUrl.text.includes(text)) {
+   				if (tmpUrl.text.match(text)) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text + "bug")) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.toUpperCase())) {

[Survived] PrecomputedMutator
crawler-url-parser.js:104:31
-   				if (!tmpUrl.text.includes(text)) {
+   				if (!tmpUrl.text.includes(text.substring(1))) {

[Survived] PrecomputedMutator
crawler-url-parser.js:116:16
-   	urlMap.delete(baseUrlStr);
+   	urlMap.delete("null");

[Survived] PrecomputedMutator
crawler-url-parser.js:138:6
-   	if (typeof linkurl == "string") linkurl = parse(linkurl);
+   	if (linkurl.length > 0) linkurl = parse(linkurl);

[Survived] PrecomputedMutator
crawler-url-parser.js:146:17
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/index\.[a-z]+$/, '').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:38
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/g, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:38
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/i, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:38
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/m, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:71
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/g, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:71
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/i, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:71
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/m, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '\\');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '#');

[Survived] PrecomputedMutator
crawler-url-parser.js:146:93
-   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	linkurl_path = linkurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '?');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:17
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/g, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:38
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/i, '/').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:58
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '\\').replace(/\/default\.[a-z]+$/, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:71
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/g, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:71
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/i, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:71
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/m, '/');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:93
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '\\');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:93
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, ' ');

[Survived] PrecomputedMutator
crawler-url-parser.js:147:93
-   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '/');
+   	pageurl_path = pageurl_path.replace(/\/index\.[a-z]+$/, '/').replace(/\/default\.[a-z]+$/, '');

[Survived] PrecomputedMutator
crawler-url-parser.js:160:7
-   		if (part_count_diff == 0) {
+   		if (linkurl_parts.length == pageurl_parts.length) {

[Survived] PrecomputedMutator
crawler-url-parser.js:161:57
-   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/g, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:161:57
-   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/i, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:161:57
-   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let linkurl_without_last_part = linkurl_path.replace(/(\/[^\/]*)[\/]?$/m, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:162:57
-   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*\/?)[\/]?$/, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:162:57
-   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*\/?)[\/]?$/g, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:162:57
-   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*)[\/]?$/, "");
+   			let pageurl_without_last_part = pageurl_path.replace(/(\/[^\/]*\/?)[\/]?$/i, "");

[Survived] PrecomputedMutator
crawler-url-parser.js:163:8
-   			if (linkurl_without_last_part == pageurl_without_last_part) return "samelevel"
+   			if (linkurl_without_last_part === pageurl_without_last_part) return "samelevel"

[Survived] PrecomputedMutator
crawler-url-parser.js:165:8
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.startsWith(pageurl_path)) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:8
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.indexOf(pageurl_path) === 0) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:8
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.match(pageurl_path)) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:165:30
-   			if (linkurl_path.includes(pageurl_path)) return "sublevel";
+   			if (linkurl_path.includes(pageurl_path.substring(1))) return "sublevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:167:8
-   			if (pageurl_path.includes(linkurl_path)) return "uplevel";
+   			if (pageurl_path.startsWith(linkurl_path)) return "uplevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:167:30
-   			if (pageurl_path.includes(linkurl_path)) return "uplevel";
+   			if (pageurl_path.includes(linkurl_path.split('/').pop())) return "uplevel";

[Survived] PrecomputedMutator
crawler-url-parser.js:171:13
-   	} else if (linkurl.domain == pageurl.domain) {
+   	} else if (linkurl.domain === pageurl.domain) {

[Survived] PrecomputedMutator
crawler-url-parser.js:185:5
-   if (!module.parent) {
+   if (module.parent) {

[Survived] PrecomputedMutator
crawler-url-parser.js:185:5
-   if (!module.parent) {
+   if (module.parent.exports) {

[Survived] PrecomputedMutator
crawler-url-parser.js:185:5
-   if (!module.parent) {
+   if (module.parent.name) {

[Survived] PrecomputedMutator
crawler-url-parser.js:186:2
-   	console.log("for testing purpose");
+   	console.error("for testing purpose");

[Survived] PrecomputedMutator
crawler-url-parser.js:186:2
-   	console.log("for testing purpose");
+   	console.warn("for testing purpose");

[Survived] PrecomputedMutator
crawler-url-parser.js:186:2
-   	console.log("for testing purpose");
+   	console.info("for testing purpose");

[Survived] PrecomputedMutator
crawler-url-parser.js:205:12
-   	let res = parse(url);
+   	let res = parseInt(url);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:12
-   	let res = parse(url);
+   	let res = String(url);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:12
-   	let res = parse(url);
+   	let res = URL(url);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.substring(0, 4));

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.length);

[Survived] PrecomputedMutator
crawler-url-parser.js:205:18
-   	let res = parse(url);
+   	let res = parse(url.indexOf("https"));

Ran 1.00 tests per mutant on average.
-----------------------|---------|----------|-----------|------------|----------|----------|
File                   | % score | # killed | # timeout | # survived | # no cov | # errors |
-----------------------|---------|----------|-----------|------------|----------|----------|
All files              |   56.63 |      158 |         0 |        121 |        0 |        0 |
 crawler-url-parser.js |   56.63 |      158 |         0 |        121 |        0 |        0 |
-----------------------|---------|----------|-----------|------------|----------|----------|
[32m15:50:22 (2553) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/crawler-url-parser/reports/mutation/mutation.html
[32m15:50:22 (2553) INFO MutationTestExecutor[39m Done in 15 minutes 38 seconds.

real	15m39.877s
user	11m46.178s
sys	0m55.826s
