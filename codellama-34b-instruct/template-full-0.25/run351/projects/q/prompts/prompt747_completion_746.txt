  Option 1: The PLACEHOLDER can be replaced with:
```
promise.then(onFulfilled, onRejected, onProgress)
```
This would result in different behavior because `promise.then` returns a new promise that is resolved with the return value of `onFulfilled` or `onRejected`, while the original code fragment uses `when` to wait for the promise to be settled and then calls `onFulfilled` or `onRejected` with the promise's state.

Option 2: The PLACEHOLDER can be replaced with:
```
promise.then(onRejected, onFulfilled, onProgress)
```
This would result in different behavior because `promise.then` returns a new promise that is resolved with the return value of `onRejected` or `onFulfilled`, while the original code fragment uses `when` to wait for the promise to be settled and then calls `onFulfilled` or `onRejected` with the promise's state.

Option 3: The PLACEHOLDER can