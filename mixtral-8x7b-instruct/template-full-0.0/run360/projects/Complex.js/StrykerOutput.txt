*** using precomputed mutations ***
[32m01:30:55 (2918) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m01:30:55 (2918) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m01:30:56 (2918) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/Complex.js/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m01:30:56 (2918) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m01:30:56 (2918) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m01:30:56 (2918) INFO ProjectReader[39m Found 1 of 1982 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 962 mutants from MUTATION_TESTING/template-full_mixtral-8x7b-instruct_0.0/mutants.json ***
Mutant 0 in complex.js: Math.abs replaced with 1
Mutant 1 in complex.js: x replaced with 1
Mutant 2 in complex.js: x replaced with x * x
Mutant 3 in complex.js: x replaced with Math.exp(x)
Mutant 4 in complex.js: x replaced with 1
Mutant 5 in complex.js: x replaced with x * x
Mutant 6 in complex.js: -x replaced with 0
Mutant 7 in complex.js: -x replaced with -1
Mutant 8 in complex.js: -b > x || x > b replaced with -b >= x || x >= b
Mutant 9 in complex.js: -b > x || x > b replaced with Math.abs(x) > Math.abs(b)
Mutant 10 in complex.js: -b > x || x > b replaced with x > b && x < -b
Mutant 11 in complex.js: Math.cos replaced with Math.sin
Mutant 12 in complex.js: x replaced with 1
Mutant 13 in complex.js: x replaced with x * x
Mutant 14 in complex.js: x replaced with Math.random()
Mutant 15 in complex.js: Math.abs replaced with Math.sqrt
Mutant 16 in complex.js: Math.abs replaced with Math.exp
Mutant 17 in complex.js: x replaced with 0
Mutant 18 in complex.js: x replaced with 1
Mutant 19 in complex.js: x replaced with Math.random()
Mutant 20 in complex.js: y replaced with 0
Mutant 21 in complex.js: y replaced with 1 / b
Mutant 22 in complex.js: y replaced with Math.random()
Mutant 23 in complex.js: a < 3000 && b < 3000 replaced with a === 0 && b === 0
Mutant 24 in complex.js: a < 3000 && b < 3000 replaced with Math.abs(a) < 3000 && Math.abs(b) < 3000
Mutant 25 in complex.js: a < 3000 && b < 3000 replaced with hypot(a, b) < 3000
Mutant 26 in complex.js: Math.sqrt replaced with 1 * Math.sqrt
Mutant 27 in complex.js: Math.sqrt replaced with Math.SQRT2
Mutant 28 in complex.js: Math.sqrt replaced with Math.hypot
Mutant 29 in complex.js: a * a + b * b replaced with 1 * 1 + 1 * 1
Mutant 30 in complex.js: a * a + b * b replaced with Math.pow(a, 2) + Math.pow(b, 2)
Mutant 31 in complex.js: a * a + b * b replaced with hypot(a, b)
Mutant 32 in complex.js: a < b replaced with a > b
Mutant 33 in complex.js: a < b replaced with a == b
Mutant 34 in complex.js: a < b replaced with a >= b
Mutant 35 in complex.js: Math.sqrt replaced with 1.41421356
Mutant 36 in complex.js: 1 + b * b replaced with Math.sqrt(1 + b * b)
Mutant 37 in complex.js: 1 + b * b replaced with 1 / (1 + b * b)
Mutant 38 in complex.js: 1 + b * b replaced with Math.exp(b * b)
Mutant 39 in complex.js: SyntaxError replaced with 'Invalid Param'
Mutant 40 in complex.js: SyntaxError replaced with 12345
Mutant 41 in complex.js: 'Invalid Param' replaced with 'Bogus error message'
Mutant 42 in complex.js: 'Invalid Param' replaced with 1 / 0
Mutant 43 in complex.js: 'Invalid Param' replaced with new Error('Invalid Param')
Mutant 44 in complex.js: Math.abs replaced with 1 / Math.abs
Mutant 45 in complex.js: Math.abs replaced with Math.sqrt
Mutant 46 in complex.js: Math.abs replaced with Math.exp
Mutant 47 in complex.js: a replaced with 1
Mutant 48 in complex.js: a replaced with Math.abs(a) + Math.abs(b)
Mutant 49 in complex.js: a replaced with Math.random()
Mutant 50 in complex.js: Math.abs replaced with 1 / _b
Mutant 51 in complex.js: b replaced with -b
Mutant 52 in complex.js: b replaced with 1 / b
Mutant 53 in complex.js: b replaced with Math.random()
Mutant 54 in complex.js: a === 0 replaced with a > 0
Mutant 55 in complex.js: a === 0 replaced with true
Mutant 56 in complex.js: a === 0 replaced with 1 < 0
Mutant 57 in complex.js: Math.log replaced with 1 / Math.log
Mutant 58 in complex.js: Math.log replaced with Math.SQRT2
Mutant 59 in complex.js: _b replaced with 1
Mutant 60 in complex.js: _b replaced with Math.random()
Mutant 61 in complex.js: _b replaced with z['im']
Mutant 62 in complex.js: b === 0 replaced with b > 0
Mutant 63 in complex.js: b === 0 replaced with true
Mutant 64 in complex.js: b === 0 replaced with b !== 0
Mutant 65 in complex.js: Math.log replaced with 1 / Math.E
Mutant 66 in complex.js: _a replaced with 0
Mutant 67 in complex.js: _a replaced with 1
Mutant 68 in complex.js: _a replaced with Infinity
Mutant 69 in complex.js: Math.log replaced with 1.2 * Math.log
Mutant 70 in complex.js: Math.log replaced with Math.log10
Mutant 71 in complex.js: Math.log replaced with Math.SQRT2 * Math.log
Mutant 72 in complex.js: a * a + b * b replaced with 1 * 1 + b * b
Mutant 73 in complex.js: Math.log replaced with Math.log10
Mutant 74 in complex.js: Math.log replaced with Math.log2
Mutant 75 in complex.js: Math.log replaced with Math.exp
Mutant 76 in complex.js: a * a + b * b replaced with b * b + a * a
Mutant 77 in complex.js: a * a + b * b replaced with Math.abs(a) * Math.abs(a) + Math.abs(b) * Math.abs(b)
Mutant 78 in complex.js: a * a + b * b replaced with a * a + b * b * 1.000001
Mutant 79 in complex.js: a === undefined || a === null replaced with a == undefined || a == null
Mutant 80 in complex.js: a === undefined || a === null replaced with a === void 0 || a === null
Mutant 81 in complex.js: b !== undefined replaced with true
Mutant 82 in complex.js: b !== undefined replaced with 1
Mutant 83 in complex.js: b !== undefined replaced with null
Mutant 84 in complex.js: typeof a replaced with 'string'
Mutant 85 in complex.js: typeof a replaced with null
Mutant 86 in complex.js: typeof a replaced with a instanceof Object
Mutant 87 in complex.js: 'im' in a && 're' in a replaced with 'im' in window && 're' in window
Mutant 88 in complex.js: 'im' in a && 're' in a replaced with 'im' in a && a.hasOwnProperty('re')
Mutant 89 in complex.js: 'im' in a && 're' in a replaced with 'im' in a && Object.prototype.toString.call(a.re) === '[object Number]'
Mutant 90 in complex.js: 'abs' in a && 'arg' in a replaced with 'abs' in Object(a) && 'arg' in Object(a)
Mutant 91 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with a['abs'] > 1e10 && a['arg'] !== undefined
Mutant 92 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with !Number.isInteger(a['abs']) && a['arg'] !== undefined
Mutant 93 in complex.js: !Number.isFinite(a['abs']) && Number.isFinite(a['arg']) replaced with isNaN(a['abs']) && a['arg'] !== undefined
Mutant 94 in complex.js: Number.isFinite replaced with typeof a['abs'] === 'number'
Mutant 95 in complex.js: a['abs'] replaced with 1 / a['abs']
Mutant 96 in complex.js: a['abs'] replaced with Math.abs(a)
Mutant 97 in complex.js: a['abs'] replaced with a['abs'] * a['abs']
Mutant 98 in complex.js: Number.isFinite replaced with parseFloat
Mutant 99 in complex.js: Number.isFinite replaced with Math.isFinite
Mutant 100 in complex.js: a['arg'] replaced with Math.random()
Mutant 101 in complex.js: Math.cos replaced with Math.sin
Mutant 102 in complex.js: a['arg'] replaced with 1
Mutant 103 in complex.js: a['arg'] replaced with 'pi'
Mutant 104 in complex.js: a['arg'] replaced with Math.PI
Mutant 105 in complex.js: Math.sin replaced with 1
Mutant 106 in complex.js: Math.sin replaced with Math.cos
Mutant 107 in complex.js: a['arg'] replaced with 1
Mutant 108 in complex.js: a['arg'] replaced with Math.random()
Mutant 109 in complex.js: a['arg'] replaced with z['re']
Mutant 110 in complex.js: 'r' in a && 'phi' in a replaced with 'r' in arguments && 'phi' in arguments
Mutant 111 in complex.js: !Number.isFinite(a['r']) && Number.isFinite(a['phi']) replaced with a['r'] > 1e10 || a['r'] < -1e10
Mutant 112 in complex.js: Number.isFinite replaced with typeof a['r'] === 'number'
Mutant 113 in complex.js: Number.isFinite replaced with a['r'] !== Infinity
Mutant 114 in complex.js: a['r'] replaced with 1 / a['r']
Mutant 115 in complex.js: Number.isFinite replaced with Infinity
Mutant 116 in complex.js: a['phi'] replaced with null
Mutant 117 in complex.js: a['phi'] replaced with 're'
Mutant 118 in complex.js: Math.cos replaced with Math.sin
Mutant 119 in complex.js: Math.cos replaced with Math.cosh
Mutant 120 in complex.js: Math.cos replaced with 1
Mutant 121 in complex.js: a['phi'] replaced with 0
Mutant 122 in complex.js: a['phi'] replaced with Math.random()
Mutant 123 in complex.js: a['phi'] replaced with this.phi
Mutant 124 in complex.js: Math.sin replaced with 0
Mutant 125 in complex.js: a['phi'] replaced with 0
Mutant 126 in complex.js: a['phi'] replaced with Math.random()
Mutant 127 in complex.js: a['phi'] replaced with this.phi
Mutant 128 in complex.js: a.length === 2 replaced with 'im' in a && 're' in a
Mutant 129 in complex.js: a.length === 2 replaced with Array.isArray(a) && a.length === 2
Mutant 130 in complex.js: a.length === 2 replaced with Object.prototype.toString.call(a) === '[object Array]' && a.length === 2
Mutant 131 in complex.js: parser_exit replaced with NaN
Mutant 132 in complex.js: parser_exit replaced with {}
Mutant 133 in complex.js: parser_exit replaced with 1 / 0
Mutant 134 in complex.js: a.match replaced with JSON.parse
Mutant 135 in complex.js: a.match replaced with eval
Mutant 136 in complex.js: a.match replaced with document.querySelector
Mutant 137 in complex.js: tokens === null replaced with tokens === undefined
Mutant 138 in complex.js: i < tokens.length replaced with i < tokens.length - 1
Mutant 139 in complex.js: i < tokens.length replaced with i <= tokens.length
Mutant 140 in complex.js: i < tokens.length replaced with i > -1
Mutant 141 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === '' || c === '\t' || c === '\n'
Mutant 142 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === ' ' || c === '\t' || c === '\r'
Mutant 143 in complex.js: c === ' ' || c === '\t' || c === '\n' replaced with c === '\u00A0' || c === '\u0009' || c === '\u000A'
Mutant 144 in complex.js: c === '+' replaced with c === '+ '
Mutant 145 in complex.js: c === '-' replaced with c === '⁻'
Mutant 146 in complex.js: c === 'i' || c === 'I' replaced with c.toString().toLowerCase() === 'i'
Mutant 147 in complex.js: c === 'i' || c === 'I' replaced with ['i', 'I'].includes(c)
Mutant 148 in complex.js: c === 'i' || c === 'I' replaced with c === 'infinity' || c === 'INFINITY'
Mutant 149 in complex.js: plus + minus === 0 replaced with plus + minus >= 1
Mutant 150 in complex.js: plus + minus === 0 replaced with plus + minus > 0
Mutant 151 in complex.js: plus + minus === 0 replaced with isNaN(plus + minus)
Mutant 152 in complex.js: parser_exit replaced with NaN
Mutant 153 in complex.js: parser_exit replaced with 0
Mutant 154 in complex.js: parser_exit replaced with null
Mutant 155 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with true
Mutant 156 in complex.js: tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1]) replaced with tokens[i + 1] !== undefined
Mutant 157 in complex.js: isNaN replaced with 0
Mutant 158 in complex.js: isNaN replaced with false
Mutant 159 in complex.js: tokens[i + 1] replaced with parseFloat(c)
Mutant 160 in complex.js: tokens[i + 1] replaced with tokens[i - 1]
Mutant 161 in complex.js: tokens[i + 1] replaced with null
Mutant 162 in complex.js: parseFloat replaced with 0.1 * parseFloat
Mutant 163 in complex.js: parseFloat replaced with Math.floor
Mutant 164 in complex.js: parseFloat replaced with isNaN
Mutant 165 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with '1'
Mutant 166 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with Math.random()
Mutant 167 in complex.js: (minus % 2 ? '-' : '') + tokens[i + 1] replaced with this['im']
Mutant 168 in complex.js: (minus % 2 ? '-' : '') + '1' replaced with '1'
Mutant 169 in complex.js: plus + minus === 0 || isNaN(c) replaced with plus + minus > 1
Mutant 170 in complex.js: plus + minus === 0 || isNaN(c) replaced with isNaN(c) || c === ''
Mutant 171 in complex.js: plus + minus === 0 || isNaN(c) replaced with c.trim() === ''
Mutant 172 in complex.js: isNaN replaced with 1 / 0
Mutant 173 in complex.js: isNaN replaced with true
Mutant 174 in complex.js: c replaced with 'foo'
Mutant 175 in complex.js: c replaced with this.re
Mutant 176 in complex.js: parser_exit replaced with NaN
Mutant 177 in complex.js: parser_exit replaced with 0
Mutant 178 in complex.js: parser_exit replaced with null
Mutant 179 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with typeof tokens[i + 1] === 'string' && (tokens[i + 1].toLowerCase() === 'i' || tokens[i + 1].toLowerCase() === 'j')
Mutant 180 in complex.js: tokens[i + 1] === 'i' || tokens[i + 1] === 'I' replaced with ['i', 'j'].includes(tokens[i + 1])
Mutant 181 in complex.js: parseFloat replaced with 1.0
Mutant 182 in complex.js: parseFloat replaced with Math.E
Mutant 183 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 3 ? '-' : '') + c
Mutant 184 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '+' : '-') + c
Mutant 185 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '-' : '') + c * 2
Mutant 186 in complex.js: (minus % 2 ? '-' : '') + c replaced with (minus % 2 ? '-' : '+') + c
Mutant 187 in complex.js: plus + minus > 0 replaced with plus > 0
Mutant 188 in complex.js: plus + minus > 0 replaced with true
Mutant 189 in complex.js: plus + minus > 0 replaced with plus + minus >= 10
Mutant 190 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with z['re'] === NaN || z['im'] === NaN
Mutant 191 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with isFinite(z['re']) && isFinite(z['im'])
Mutant 192 in complex.js: isNaN(z['re']) || isNaN(z['im']) replaced with typeof z['re'] === 'number' && typeof z['im'] === 'number'
Mutant 193 in complex.js: isNaN replaced with z['re'] === Infinity
Mutant 194 in complex.js: z['re'] replaced with 0
Mutant 195 in complex.js: z['re'] replaced with this['im']
Mutant 196 in complex.js: z['re'] replaced with Math.random()
Mutant 197 in complex.js: isNaN replaced with 0
Mutant 198 in complex.js: isNaN replaced with null
Mutant 199 in complex.js: isNaN replaced with this.re
Mutant 200 in complex.js: z['im'] replaced with 0
Mutant 201 in complex.js: z['im'] replaced with Math.random()
Mutant 202 in complex.js: !(this instanceof Complex) replaced with this.constructor !== Complex
Mutant 203 in complex.js: !(this instanceof Complex) replaced with this.constructor !== Function.prototype.constructor
Mutant 204 in complex.js: !(this instanceof Complex) replaced with this.prototype === undefined
Mutant 205 in complex.js: parse(a, b) replaced with parse(parse(0, 0))
Mutant 206 in complex.js: parse(a, b) replaced with parse(parse(null, null))
Mutant 207 in complex.js: parse(a, b) replaced with parse(parse(this.re, this.im))
Mutant 208 in complex.js: parse replaced with null
Mutant 209 in complex.js: parse replaced with {}
Mutant 210 in complex.js: a replaced with 0
Mutant 211 in complex.js: a replaced with null
Mutant 212 in complex.js: a replaced with new Complex(1, 1)
Mutant 213 in complex.js: b replaced with 0
Mutant 214 in complex.js: b replaced with this.re
Mutant 215 in complex.js: b replaced with Math.random()
Mutant 216 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 217 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 218 in complex.js: this['isInfinite'] replaced with this['re'] > Number.MAX_VALUE
Mutant 219 in complex.js: z['isInfinite'] replaced with true
Mutant 220 in complex.js: z['isInfinite'] replaced with 1 === 1
Mutant 221 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 222 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['re'] === Infinity || z['re'] === Infinity
Mutant 223 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isZero']() || z['re'] === Infinity
Mutant 224 in complex.js: z['isInfinite'] replaced with true
Mutant 225 in complex.js: z['isInfinite'] replaced with 1 / 0
Mutant 226 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isInfinite']() || z['isInfinite']()
Mutant 227 in complex.js: this['isInfinite']() && z['isInfinite']() replaced with this['isZero']() && z['isZero']()
Mutant 228 in complex.js: z['isInfinite'] replaced with 1 / z['im'] === Infinity
Mutant 229 in complex.js: z['isInfinite'] replaced with z['im'] === 0 || z['im'] === Infinity
Mutant 230 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isZero']()
Mutant 231 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['re'] === Infinity || z['re'] === Infinity
Mutant 232 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isZero']() || z['isZero']()
Mutant 233 in complex.js: this['isInfinite'] replaced with this['im'] !== 0
Mutant 234 in complex.js: z['isInfinite'] replaced with true
Mutant 235 in complex.js: this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']() replaced with this['isInfinite']() || z['isZero']()
Mutant 236 in complex.js: this['isInfinite'] replaced with this['re'] === Infinity
Mutant 237 in complex.js: z['isZero'] replaced with 1 === 1
Mutant 238 in complex.js: z['isZero'] replaced with this.re === 0
Mutant 239 in complex.js: this['isZero'] replaced with 1 === 1
Mutant 240 in complex.js: this['isZero'] replaced with false
Mutant 241 in complex.js: z['isInfinite'] replaced with 1 / z['im']
Mutant 242 in complex.js: z['isInfinite'] replaced with 0
Mutant 243 in complex.js: z['isInfinite'] replaced with z['im'] === 0
Mutant 244 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this['isInfinite']() && z['isInfinite']()
Mutant 245 in complex.js: this['isInfinite']() || z['isInfinite']() replaced with this.isInfinite() || z.isFinite()
Mutant 246 in complex.js: this['isInfinite'] replaced with this['re'] === Infinity
Mutant 247 in complex.js: this['isInfinite'] replaced with true
Mutant 248 in complex.js: z['isInfinite'] replaced with true
Mutant 249 in complex.js: z['isInfinite'] replaced with z['re'] === Infinity
Mutant 250 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] + this['im'] === 0
Mutant 251 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with z['im'] === this['im']
Mutant 252 in complex.js: z['im'] === 0 && this['im'] === 0 replaced with !z['im'] && this['im'] === 0
Mutant 253 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isZero']() || z['isInfinite']()
Mutant 254 in complex.js: this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']() replaced with this['isZero']() === z['isZero']()
Mutant 255 in complex.js: this['isZero'] replaced with this['re'] === 0 && this['im'] === 0
Mutant 256 in complex.js: z['isZero'] replaced with z['re'] === 0
Mutant 257 in complex.js: z['isZero'] replaced with true
Mutant 258 in complex.js: this['isInfinite'] replaced with this['re'] === Infinity
Mutant 259 in complex.js: this['isInfinite'] replaced with z['re'] === Infinity
Mutant 260 in complex.js: z['isInfinite'] replaced with true
Mutant 261 in complex.js: z['isInfinite'] replaced with z['re'] === Infinity
Mutant 262 in complex.js: z['isInfinite'] replaced with z['im'] === Infinity
Mutant 263 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isZero']() || z['isInfinite']()
Mutant 264 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isNaN']() || z['isInfinite']()
Mutant 265 in complex.js: this['isInfinite']() || z['isZero']() replaced with this['isInfinite']() || z.isInfinite()
Mutant 266 in complex.js: this['isInfinite'] replaced with this['re'] === Infinity
Mutant 267 in complex.js: z['isZero'] replaced with z['re'] === 0
Mutant 268 in complex.js: z['isZero'] replaced with true
Mutant 269 in complex.js: this['isZero']() || z['isInfinite']() replaced with this['re'] === 0
Mutant 270 in complex.js: this['isZero']() || z['isInfinite']() replaced with z['re'] === Infinity
Mutant 271 in complex.js: this['isZero']() || z['isInfinite']() replaced with !this['isFinite']() || z['isZero']()
Mutant 272 in complex.js: z['isInfinite'] replaced with z['re'] === 0
Mutant 273 in complex.js: z['isInfinite'] replaced with z['im'] === Infinity
Mutant 274 in complex.js: 0 === d replaced with d > 0
Mutant 275 in complex.js: 0 === d replaced with d >= 0
Mutant 276 in complex.js: 0 === d replaced with 1 / d
Mutant 277 in complex.js: Math.abs(c) < Math.abs(d) replaced with Math.abs(c) <= Math.abs(d)
Mutant 278 in complex.js: Math.abs(c) < Math.abs(d) replaced with c === 0
Mutant 279 in complex.js: Math.abs(c) < Math.abs(d) replaced with d === 0
Mutant 280 in complex.js: Math.abs replaced with d / c
Mutant 281 in complex.js: Math.abs replaced with c / d
Mutant 282 in complex.js: c replaced with d / c
Mutant 283 in complex.js: c replaced with 1 / c
Mutant 284 in complex.js: c replaced with d + c
Mutant 285 in complex.js: Math.abs replaced with 1 / Math.abs
Mutant 286 in complex.js: Math.abs replaced with Math.sqrt
Mutant 287 in complex.js: Math.abs replaced with Math.exp
Mutant 288 in complex.js: d replaced with 1 / d
Mutant 289 in complex.js: d replaced with d * c
Mutant 290 in complex.js: z['isZero']() replaced with z['re'] === 0
Mutant 291 in complex.js: z['isZero']() replaced with this['re'] === 0
Mutant 292 in complex.js: z['isZero']() replaced with z.isZero()
Mutant 293 in complex.js: z['isZero'] replaced with z['re'] === 0 && z['im'] === 0
Mutant 294 in complex.js: z['isZero'] replaced with this['re'] === 0 && this['im'] === 0
Mutant 295 in complex.js: z['isZero'] replaced with true
Mutant 296 in complex.js: z['im'] === 0 replaced with z['im'] !== 0
Mutant 297 in complex.js: z['im'] === 0 replaced with z['re'] === 0
Mutant 298 in complex.js: z['im'] === 0 replaced with z['im'] > 0
Mutant 299 in complex.js: b === 0 && a > 0 replaced with b > 0 && a > 0
Mutant 300 in complex.js: b === 0 && a > 0 replaced with Math.abs(b) === 0 && a > 0
Mutant 301 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(0)
Mutant 302 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(1)
Mutant 303 in complex.js: Math.pow(a, z['re']) replaced with Math.pow(this['im'])
Mutant 304 in complex.js: a replaced with 1
Mutant 305 in complex.js: a replaced with this['re'] * this['re']
Mutant 306 in complex.js: a replaced with Math.sqrt(this['re'])
Mutant 307 in complex.js: z['re'] replaced with 1
Mutant 308 in complex.js: z['re'] replaced with this['re'] * this['re']
Mutant 309 in complex.js: z['re'] replaced with Math.random()
Mutant 310 in complex.js: a === 0 replaced with a < Number.EPSILON
Mutant 311 in complex.js: a === 0 replaced with 1 / a === 0
Mutant 312 in complex.js: a === 0 replaced with Math.abs(a) < Number.EPSILON
Mutant 313 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] / 2 + 2) % 2
Mutant 314 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['re'] * 2 + 4) % 4
Mutant 315 in complex.js: (z['re'] % 4 + 4) % 4 replaced with (z['im'] % 4 + 4) % 4
Mutant 316 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, 0)
Mutant 317 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(a, z['re'])
Mutant 318 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(z['im'], z['re'])
Mutant 319 in complex.js: b replaced with 1
Mutant 320 in complex.js: b replaced with a
Mutant 321 in complex.js: b replaced with 0
Mutant 322 in complex.js: z['re'] replaced with z['re'] * 0
Mutant 323 in complex.js: z['re'] replaced with z['im']
Mutant 324 in complex.js: z['re'] replaced with Math.random()
Mutant 325 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, -z['re'])
Mutant 326 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b * z['re'])
Mutant 327 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(Math.abs(b), z['re'])
Mutant 328 in complex.js: b replaced with 1
Mutant 329 in complex.js: b replaced with this['im']
Mutant 330 in complex.js: b replaced with Math.exp(0)
Mutant 331 in complex.js: z['re'] replaced with z['im']
Mutant 332 in complex.js: z['re'] replaced with 0
Mutant 333 in complex.js: z['re'] replaced with Math.random()
Mutant 334 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(-b, z['re'])
Mutant 335 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b * z['re'])
Mutant 336 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(Math.abs(b), z['re'])
Mutant 337 in complex.js: b replaced with 0
Mutant 338 in complex.js: b replaced with 1
Mutant 339 in complex.js: z['re'] replaced with z['im']
Mutant 340 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(b, 0)
Mutant 341 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(z['im'], z['re'])
Mutant 342 in complex.js: Math.pow(b, z['re']) replaced with Math.pow(Math.pow(b, z['re']), 0)
Mutant 343 in complex.js: b replaced with this['im']
Mutant 344 in complex.js: b replaced with 0
Mutant 345 in complex.js: z['re'] replaced with z['im']
Mutant 346 in complex.js: z['re'] replaced with 0
Mutant 347 in complex.js: z['re'] replaced with Math.random()
Mutant 348 in complex.js: a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0 replaced with a == 0 && b == 0 && z['re'] >= 0 && z['im'] > 0
Mutant 349 in complex.js: Math.atan2(b, a) replaced with Math.atan2(-b, a)
Mutant 350 in complex.js: Math.atan2 replaced with Math.atan
Mutant 351 in complex.js: b replaced with -b
Mutant 352 in complex.js: a replaced with this['im']
Mutant 353 in complex.js: a replaced with 0
Mutant 354 in complex.js: a replaced with Math.atan(b / a)
Mutant 355 in complex.js: logHypot(a, b) replaced with logHypot(1)
Mutant 356 in complex.js: a replaced with 1
Mutant 357 in complex.js: a replaced with b
Mutant 358 in complex.js: a replaced with Math.sqrt(2)
Mutant 359 in complex.js: b replaced with 1
Mutant 360 in complex.js: b replaced with Math.sqrt(b * b)
Mutant 361 in complex.js: b replaced with this['im']
Mutant 362 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['re'] * Math.log(Math.abs(z))
Mutant 363 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['im'] * loh + z['re'] * arg
Mutant 364 in complex.js: z['re'] * loh - z['im'] * arg replaced with z['re'] * loh + z['im'] * arg
Mutant 365 in complex.js: Math.cos replaced with Math.acos
Mutant 366 in complex.js: Math.cos replaced with Math.sin
Mutant 367 in complex.js: Math.cos replaced with 1 / Math.cos
Mutant 368 in complex.js: b replaced with -b
Mutant 369 in complex.js: b replaced with 0
Mutant 370 in complex.js: b replaced with 1
Mutant 371 in complex.js: Math.sin replaced with Math.sinh
Mutant 372 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 373 in complex.js: Math.sin replaced with Math.asin
Mutant 374 in complex.js: b replaced with 0
Mutant 375 in complex.js: b replaced with this['re']
Mutant 376 in complex.js: b replaced with Math.random()
Mutant 377 in complex.js: this['abs'] replaced with this['re'] * this['re'] + this['im'] * this['im']
Mutant 378 in complex.js: this['abs'] replaced with 1 / this['re']
Mutant 379 in complex.js: a >= 0 replaced with a > 0
Mutant 380 in complex.js: a >= 0 replaced with true
Mutant 381 in complex.js: a >= 0 replaced with this['re'] >= 0
Mutant 382 in complex.js: b === 0 replaced with b == 0
Mutant 383 in complex.js: b === 0 replaced with 1 / b === 0
Mutant 384 in complex.js: b === 0 replaced with b !== 0 && b !== 0
Mutant 385 in complex.js: Math.sqrt replaced with a * a
Mutant 386 in complex.js: a replaced with -a
Mutant 387 in complex.js: a replaced with 1 / a
Mutant 388 in complex.js: 2.0 * (r + a) replaced with 2 * r + a
Mutant 389 in complex.js: 2.0 * (r + a) replaced with 2 * (r - a)
Mutant 390 in complex.js: 2.0 * (r + a) replaced with Math.sqrt(4 * r * r + a * a)
Mutant 391 in complex.js: Math.abs replaced with -Math.abs
Mutant 392 in complex.js: b replaced with -b
Mutant 393 in complex.js: b replaced with 0
Mutant 394 in complex.js: b replaced with Math.random()
Mutant 395 in complex.js: Math.sqrt replaced with 2 * r
Mutant 396 in complex.js: 2 * (r - a) replaced with Math.sqrt(2.0 * (r + a))
Mutant 397 in complex.js: 2 * (r - a) replaced with 2 * (r + a)
Mutant 398 in complex.js: 2 * (r - a) replaced with Math.abs(2 * (r - a))
Mutant 399 in complex.js: a <= 0 replaced with a < 0
Mutant 400 in complex.js: Math.sqrt replaced with Math.abs
Mutant 401 in complex.js: Math.sqrt replaced with Math.exp
Mutant 402 in complex.js: 2.0 * (r - a) replaced with 2 * (r - a)
Mutant 403 in complex.js: 2.0 * (r - a) replaced with 2.0 * (r + a)
Mutant 404 in complex.js: Math.abs replaced with -Math.abs
Mutant 405 in complex.js: Math.abs replaced with Math.sqrt
Mutant 406 in complex.js: Math.abs replaced with 1 / Math.abs
Mutant 407 in complex.js: b replaced with -Math.abs(b)
Mutant 408 in complex.js: b replaced with 0
Mutant 409 in complex.js: b replaced with Math.random()
Mutant 410 in complex.js: Math.sqrt replaced with 2 * Math.abs
Mutant 411 in complex.js: Math.sqrt replaced with Math.exp * 0.5
Mutant 412 in complex.js: Math.sqrt replaced with 1 / Math.sqrt
Mutant 413 in complex.js: 2 * (r + a) replaced with r - a
Mutant 414 in complex.js: 2 * (r + a) replaced with r * a
Mutant 415 in complex.js: 2 * (r + a) replaced with r + a + 1
Mutant 416 in complex.js: this['re'] replaced with this['re'] + 1
Mutant 417 in complex.js: this['re'] replaced with Math.random()
Mutant 418 in complex.js: this['re'] replaced with this['im']
Mutant 419 in complex.js: this['im'] === 0 replaced with this['im'] > 0
Mutant 420 in complex.js: this['im'] === 0 replaced with Math.abs(this['im']) < 0.00001
Mutant 421 in complex.js: this['im'] === 0 replaced with !this.hasOwnProperty('im')
Mutant 422 in complex.js: Math.cos replaced with Math.acos
Mutant 423 in complex.js: Math.cos replaced with 1 / Math.tan
Mutant 424 in complex.js: Math.cos replaced with Math.exp * Math.sin
Mutant 425 in complex.js: this['im'] replaced with 0
Mutant 426 in complex.js: this['im'] replaced with this['re']
Mutant 427 in complex.js: this['im'] replaced with Math.random()
Mutant 428 in complex.js: Math.sin replaced with Math.sinh
Mutant 429 in complex.js: Math.sin replaced with this.im
Mutant 430 in complex.js: this['im'] replaced with 0
Mutant 431 in complex.js: this['im'] replaced with this['re']
Mutant 432 in complex.js: this['im'] replaced with 1 / this['im']
Mutant 433 in complex.js: a replaced with a * 0
Mutant 434 in complex.js: a replaced with a + 1
Mutant 435 in complex.js: a replaced with 1 / a
Mutant 436 in complex.js: Math.cos replaced with Math.cosh
Mutant 437 in complex.js: b replaced with 0
Mutant 438 in complex.js: b replaced with this['im'] * Math.random()
Mutant 439 in complex.js: b replaced with this['re']
Mutant 440 in complex.js: b replaced with 0
Mutant 441 in complex.js: b replaced with b + 1
Mutant 442 in complex.js: b replaced with Math.random()
Mutant 443 in complex.js: Math.exp replaced with Math.log
Mutant 444 in complex.js: a replaced with 0
Mutant 445 in complex.js: a replaced with this['re']
Mutant 446 in complex.js: a replaced with Math.random()
Mutant 447 in complex.js: Math.sin replaced with Math.asin
Mutant 448 in complex.js: Math.sin replaced with 1 / Math.tan
Mutant 449 in complex.js: Math.sin replaced with Math.sinh
Mutant 450 in complex.js: b replaced with 2 * this['im']
Mutant 451 in complex.js: b replaced with Math.exp(this['re']) * Math.sin(this['im'])
Mutant 452 in complex.js: b replaced with Math.sin(this['re'] + this['im'])
Mutant 453 in complex.js: b === 0 && a > 0 replaced with b === 0 && a >= 0
Mutant 454 in complex.js: b === 0 && a > 0 replaced with Math.abs(b) === 0 && a > 0
Mutant 455 in complex.js: b === 0 && a > 0 replaced with b === 0 && a > 1
Mutant 456 in complex.js: logHypot(a, b) replaced with logHypot(Math.hypot(this['im'], this['re']))
Mutant 457 in complex.js: logHypot(a, b) replaced with logHypot(Math.sqrt(a * a + b * b))
Mutant 458 in complex.js: a replaced with 1
Mutant 459 in complex.js: a replaced with this['re'] * this['re']
Mutant 460 in complex.js: a replaced with Math.log(Math.abs(a))
Mutant 461 in complex.js: b replaced with this['im']
Mutant 462 in complex.js: b replaced with 0
Mutant 463 in complex.js: b replaced with 1 / b
Mutant 464 in complex.js: Math.atan2 replaced with Math.atan
Mutant 465 in complex.js: b replaced with 1
Mutant 466 in complex.js: b replaced with this['im'] / a
Mutant 467 in complex.js: b replaced with -this['im']
Mutant 468 in complex.js: a replaced with this['re']
Mutant 469 in complex.js: a replaced with 0
Mutant 470 in complex.js: a replaced with Math.random()
Mutant 471 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['im'], this['re'])
Mutant 472 in complex.js: hypot(this['re'], this['im']) replaced with hypot(this['re'] * this['im'])
Mutant 473 in complex.js: hypot(this['re'], this['im']) replaced with hypot(Math.hypot(this['re'], this['im']))
Mutant 474 in complex.js: hypot replaced with Math.hypot
Mutant 475 in complex.js: this['re'] replaced with this['re'] * 2
Mutant 476 in complex.js: this['re'] replaced with Math.random()
Mutant 477 in complex.js: this['re'] replaced with this['im']
Mutant 478 in complex.js: this['im'] replaced with 0
Mutant 479 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2([this['im'], this['re']])
Mutant 480 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(Math.atan(this['im'] / this['re']))
Mutant 481 in complex.js: Math.atan2(this['im'], this['re']) replaced with Math.atan2(this['re'] / this['im'])
Mutant 482 in complex.js: this['im'] replaced with 1.0
Mutant 483 in complex.js: this['im'] replaced with this['re']
Mutant 484 in complex.js: this['im'] replaced with Math.random()
Mutant 485 in complex.js: this['re'] replaced with this['im']
Mutant 486 in complex.js: this['re'] replaced with 0
Mutant 487 in complex.js: this['re'] replaced with Math.random()
Mutant 488 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 489 in complex.js: Math.sin replaced with Math.asin
Mutant 490 in complex.js: Math.sin replaced with Math.sinh
Mutant 491 in complex.js: a replaced with 1
Mutant 492 in complex.js: a replaced with this['re'] * this['re']
Mutant 493 in complex.js: a replaced with Math.sin(Math.PI / 2)
Mutant 494 in complex.js: cosh replaced with Math.exp
Mutant 495 in complex.js: cosh replaced with Math.abs
Mutant 496 in complex.js: cosh replaced with Math.sin
Mutant 497 in complex.js: b replaced with b * Math.random()
Mutant 498 in complex.js: b replaced with this['im'] + 1
Mutant 499 in complex.js: b replaced with Math.sin(this['re'])
Mutant 500 in complex.js: Math.cos replaced with 1 / Math.cos
Mutant 501 in complex.js: Math.cos replaced with Math.sin
Mutant 502 in complex.js: Math.cos replaced with Math.acos
Mutant 503 in complex.js: a replaced with 1 / Math.cos(a)
Mutant 504 in complex.js: a replaced with Math.sin(b)
Mutant 505 in complex.js: a replaced with Math.sin(a + b)
Mutant 506 in complex.js: sinh replaced with 0
Mutant 507 in complex.js: b replaced with b * Math.random()
Mutant 508 in complex.js: b replaced with this['im'] * Math.E
Mutant 509 in complex.js: b replaced with Math.sin(Math.abs(b))
Mutant 510 in complex.js: Math.cos replaced with 1 / Math.cos
Mutant 511 in complex.js: Math.cos replaced with Math.sin
Mutant 512 in complex.js: Math.cos replaced with Math.acos
Mutant 513 in complex.js: a replaced with 1
Mutant 514 in complex.js: a replaced with this['re'] * this['re']
Mutant 515 in complex.js: a replaced with Math.cos(Math.PI / 2)
Mutant 516 in complex.js: cosh replaced with Math.cos
Mutant 517 in complex.js: cosh replaced with this['re']
Mutant 518 in complex.js: b replaced with 0
Mutant 519 in complex.js: b replaced with this['re']
Mutant 520 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 521 in complex.js: Math.sin replaced with Math.sinh
Mutant 522 in complex.js: Math.sin replaced with Math.asin
Mutant 523 in complex.js: a replaced with 0
Mutant 524 in complex.js: sinh replaced with Math.sinh
Mutant 525 in complex.js: sinh replaced with 0
Mutant 526 in complex.js: sinh replaced with this.sinh
Mutant 527 in complex.js: b replaced with 0
Mutant 528 in complex.js: Math.cos replaced with 1 / Math.cos
Mutant 529 in complex.js: Math.cos replaced with Math.acos
Mutant 530 in complex.js: a replaced with 1
Mutant 531 in complex.js: a replaced with this['re'] * this['re']
Mutant 532 in complex.js: a replaced with Math.cos(a)
Mutant 533 in complex.js: cosh replaced with Math.cosh
Mutant 534 in complex.js: cosh replaced with this.cosh
Mutant 535 in complex.js: cosh replaced with 0
Mutant 536 in complex.js: b replaced with Math.cos(b)
Mutant 537 in complex.js: b replaced with this['im']
Mutant 538 in complex.js: b replaced with 0
Mutant 539 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 540 in complex.js: a replaced with 0
Mutant 541 in complex.js: a replaced with 1 / a
Mutant 542 in complex.js: a replaced with b
Mutant 543 in complex.js: sinh replaced with 1 / sinh
Mutant 544 in complex.js: sinh replaced with Math.sinh
Mutant 545 in complex.js: sinh replaced with this.sinh
Mutant 546 in complex.js: b replaced with 0
Mutant 547 in complex.js: b replaced with 1 / b
Mutant 548 in complex.js: b replaced with Math.exp(b)
Mutant 549 in complex.js: Math.cos replaced with 1 / Math.cos
Mutant 550 in complex.js: Math.cos replaced with Math.sin
Mutant 551 in complex.js: a replaced with -a
Mutant 552 in complex.js: a replaced with 1 / a
Mutant 553 in complex.js: a replaced with Math.abs(a)
Mutant 554 in complex.js: cosh replaced with Math.cos
Mutant 555 in complex.js: cosh replaced with Math.exp
Mutant 556 in complex.js: cosh replaced with 1 / Math.cosh
Mutant 557 in complex.js: b replaced with 0
Mutant 558 in complex.js: b replaced with 1
Mutant 559 in complex.js: b replaced with this['im']
Mutant 560 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 561 in complex.js: Math.sin replaced with Math.sinh
Mutant 562 in complex.js: Math.sin replaced with Math.asin
Mutant 563 in complex.js: a replaced with 0
Mutant 564 in complex.js: a replaced with this['re']
Mutant 565 in complex.js: a replaced with Math.random()
Mutant 566 in complex.js: sinh replaced with Math.sinh
Mutant 567 in complex.js: sinh replaced with 1 / b
Mutant 568 in complex.js: b replaced with 0
Mutant 569 in complex.js: b replaced with this['im'] + 1
Mutant 570 in complex.js: b replaced with Math.sin(b)
Mutant 571 in complex.js: cosh replaced with Math.cos
Mutant 572 in complex.js: cosh replaced with Math.exp
Mutant 573 in complex.js: cosh replaced with this['re'] * this['re'] - this['im'] * this['im']
Mutant 574 in complex.js: 2 * b replaced with b * 2
Mutant 575 in complex.js: 2 * b replaced with Math.sqrt(4 * b * b)
Mutant 576 in complex.js: 2 * b replaced with this['im'] * 2
Mutant 577 in complex.js: 2 * a replaced with 2 * this['re']
Mutant 578 in complex.js: 2 * a replaced with Math.sqrt(2) * a
Mutant 579 in complex.js: 2 * a replaced with 2 * Math.random()
Mutant 580 in complex.js: Math.cos replaced with 1 / Math.cos
Mutant 581 in complex.js: Math.cos replaced with Math.sin
Mutant 582 in complex.js: a replaced with 0
Mutant 583 in complex.js: b replaced with 1
Mutant 584 in complex.js: b replaced with b * b
Mutant 585 in complex.js: b replaced with Math.random()
Mutant 586 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 587 in complex.js: Math.sin replaced with Math.asin
Mutant 588 in complex.js: Math.sin replaced with Math.sinh
Mutant 589 in complex.js: a replaced with 0
Mutant 590 in complex.js: sinh replaced with Math.sin
Mutant 591 in complex.js: sinh replaced with 1 / Math.tan
Mutant 592 in complex.js: sinh replaced with Math.asin
Mutant 593 in complex.js: b replaced with 0
Mutant 594 in complex.js: b replaced with 1
Mutant 595 in complex.js: b replaced with this['im']
Mutant 596 in complex.js: cosh replaced with Math.cos
Mutant 597 in complex.js: cosh replaced with Math.exp
Mutant 598 in complex.js: cosh replaced with 1 / Math.cos
Mutant 599 in complex.js: 2 * b replaced with b * b
Mutant 600 in complex.js: Math.cos replaced with Math.sin
Mutant 601 in complex.js: 2 * a replaced with 2 * this['re']
Mutant 602 in complex.js: 2 * a replaced with Math.sqrt(2) * a
Mutant 603 in complex.js: 2 * a replaced with 2 * Math.abs(a)
Mutant 604 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 605 in complex.js: Math.sin replaced with Math.sinh
Mutant 606 in complex.js: Math.sin replaced with Math.asin
Mutant 607 in complex.js: Math.cos replaced with 1 / Math.cos
Mutant 608 in complex.js: Math.cos replaced with Math.acos
Mutant 609 in complex.js: a replaced with 0
Mutant 610 in complex.js: sinh replaced with Math.sin
Mutant 611 in complex.js: sinh replaced with 0
Mutant 612 in complex.js: sinh replaced with this['im'] * this['im']
Mutant 613 in complex.js: b replaced with 0
Mutant 614 in complex.js: b replaced with 1 / b
Mutant 615 in complex.js: b replaced with -b
Mutant 616 in complex.js: a === 0 replaced with a > 0
Mutant 617 in complex.js: a === 0 replaced with 1 / a === 0
Mutant 618 in complex.js: a === 0 replaced with Math.abs(a) < Number.EPSILON
Mutant 619 in complex.js: b === 1 replaced with b === -1
Mutant 620 in complex.js: b === 1 replaced with b === this.im
Mutant 621 in complex.js: b === 1 replaced with b === 0
Mutant 622 in complex.js: b === -1 replaced with b === 1
Mutant 623 in complex.js: b === -1 replaced with b === 0
Mutant 624 in complex.js: b === -1 replaced with b === -2
Mutant 625 in complex.js: b === 0 replaced with b == 0
Mutant 626 in complex.js: b === 0 replaced with b < 0.00001
Mutant 627 in complex.js: b === 0 replaced with !b
Mutant 628 in complex.js: Math.atan2(1, a) replaced with Math.atan2(2, a)
Mutant 629 in complex.js: Math.atan2(1, a) replaced with Math.atan2(1, b)
Mutant 630 in complex.js: Math.atan2(1, a) replaced with Math.atan2(Math.random(), a)
Mutant 631 in complex.js: Math.atan2 replaced with 1 / Math.atan
Mutant 632 in complex.js: Math.atan2 replaced with Math.atanh
Mutant 633 in complex.js: 1 replaced with 2 * b / a
Mutant 634 in complex.js: 1 replaced with Math.atan2(b, a)
Mutant 635 in complex.js: 1 replaced with 0
Mutant 636 in complex.js: a replaced with 1
Mutant 637 in complex.js: a replaced with this['im']
Mutant 638 in complex.js: a === 0 && b === 0 replaced with a == 0 && b == 0
Mutant 639 in complex.js: a === 0 && b === 0 replaced with a * a + b * b < Number.EPSILON
Mutant 640 in complex.js: a === 0 && b === 0 replaced with a == 0 && b == 0
Mutant 641 in complex.js: a === 0 && b === 0 replaced with a * a + b * b === 0
Mutant 642 in complex.js: a === 0 && b === 0 replaced with 1 / (a * a + b * b)
Mutant 643 in complex.js: sinh replaced with Math.sin
Mutant 644 in complex.js: sinh replaced with 1 / Math.sin
Mutant 645 in complex.js: a replaced with 1
Mutant 646 in complex.js: a replaced with this['re'] + 1
Mutant 647 in complex.js: a replaced with Math.sin(a)
Mutant 648 in complex.js: Math.cos replaced with Math.SQRT2 * Math.SQRT2
Mutant 649 in complex.js: Math.cos replaced with Math.abs
Mutant 650 in complex.js: b replaced with 1
Mutant 651 in complex.js: b replaced with this['im'] * this['im']
Mutant 652 in complex.js: b replaced with Math.random()
Mutant 653 in complex.js: cosh replaced with Math.cos
Mutant 654 in complex.js: cosh replaced with 1 / cosh
Mutant 655 in complex.js: a replaced with 1
Mutant 656 in complex.js: a replaced with this['re'] * this['re']
Mutant 657 in complex.js: a replaced with Math.random()
Mutant 658 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 659 in complex.js: Math.sin replaced with Math.asin
Mutant 660 in complex.js: Math.sin replaced with Math.sinh
Mutant 661 in complex.js: b replaced with b * Math.random()
Mutant 662 in complex.js: b replaced with b + 1
Mutant 663 in complex.js: b replaced with Math.exp(b)
Mutant 664 in complex.js: cosh replaced with Math.cos
Mutant 665 in complex.js: cosh replaced with this.cosh
Mutant 666 in complex.js: a replaced with 1
Mutant 667 in complex.js: a replaced with this['re'] * 2
Mutant 668 in complex.js: a replaced with Math.cos(a)
Mutant 669 in complex.js: Math.cos replaced with 1 / Math.cos
Mutant 670 in complex.js: Math.cos replaced with Math.exp
Mutant 671 in complex.js: Math.cos replaced with Math.sin
Mutant 672 in complex.js: b replaced with 1
Mutant 673 in complex.js: b replaced with this['im'] * this['im']
Mutant 674 in complex.js: b replaced with Math.random()
Mutant 675 in complex.js: sinh replaced with 1 / sinh
Mutant 676 in complex.js: sinh replaced with Math.sinh
Mutant 677 in complex.js: sinh replaced with this.sinh
Mutant 678 in complex.js: a replaced with 0
Mutant 679 in complex.js: a replaced with 1 / a
Mutant 680 in complex.js: a replaced with Math.random()
Mutant 681 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 682 in complex.js: Math.sin replaced with Math.sinh
Mutant 683 in complex.js: Math.sin replaced with Math.asin
Mutant 684 in complex.js: b replaced with b * 2
Mutant 685 in complex.js: b replaced with -b
Mutant 686 in complex.js: b replaced with 1 / b
Mutant 687 in complex.js: cosh replaced with Math.cos
Mutant 688 in complex.js: a replaced with 2 * a
Mutant 689 in complex.js: a replaced with Math.cos(a)
Mutant 690 in complex.js: a replaced with this['re'] * this['re']
Mutant 691 in complex.js: Math.cos replaced with Math.sin
Mutant 692 in complex.js: Math.cos replaced with 1
Mutant 693 in complex.js: Math.cos replaced with this.cosh
Mutant 694 in complex.js: b replaced with Math.sin(b)
Mutant 695 in complex.js: b replaced with 0
Mutant 696 in complex.js: b replaced with 1 / b
Mutant 697 in complex.js: sinh replaced with Math.sinh
Mutant 698 in complex.js: a replaced with 0
Mutant 699 in complex.js: a replaced with this['re'] * this['re']
Mutant 700 in complex.js: a replaced with 1 / this['re']
Mutant 701 in complex.js: Math.sin replaced with 1 / Math.tan
Mutant 702 in complex.js: Math.sin replaced with Math.sinh
Mutant 703 in complex.js: Math.sin replaced with Math.asin
Mutant 704 in complex.js: b replaced with 0
Mutant 705 in complex.js: b replaced with 1 / b
Mutant 706 in complex.js: b replaced with Math.atan2(b, a)
Mutant 707 in complex.js: cosh replaced with Math.cos
Mutant 708 in complex.js: cosh replaced with Math.E
Mutant 709 in complex.js: a replaced with 2 * a
Mutant 710 in complex.js: a replaced with a + 1
Mutant 711 in complex.js: a replaced with Math.cos(a)
Mutant 712 in complex.js: Math.cos replaced with Math.cosh
Mutant 713 in complex.js: Math.cos replaced with Math.sin
Mutant 714 in complex.js: Math.cos replaced with Math.tan
Mutant 715 in complex.js: b replaced with 1 / b
Mutant 716 in complex.js: b replaced with Math.abs(b)
Mutant 717 in complex.js: b replaced with b + 1
Mutant 718 in complex.js: sinh replaced with Math.sinh
Mutant 719 in complex.js: a replaced with 0
Mutant 720 in complex.js: a replaced with this['re']
Mutant 721 in complex.js: a replaced with Math.random()
Mutant 722 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 723 in complex.js: Math.sin replaced with Math.sinh
Mutant 724 in complex.js: Math.sin replaced with Math.asin
Mutant 725 in complex.js: b replaced with 0
Mutant 726 in complex.js: b replaced with 1 / b
Mutant 727 in complex.js: b replaced with Math.atan(1 / b)
Mutant 728 in complex.js: Math.cos replaced with 1 / Math.cos
Mutant 729 in complex.js: Math.cos replaced with Math.sin
Mutant 730 in complex.js: 2 * b replaced with 0
Mutant 731 in complex.js: 2 * b replaced with this['im']
Mutant 732 in complex.js: 2 * b replaced with 2 * Math.random()
Mutant 733 in complex.js: cosh replaced with Math.cos
Mutant 734 in complex.js: cosh replaced with 1 / Math.cos
Mutant 735 in complex.js: 2 * a replaced with Math.sqrt(a * a)
Mutant 736 in complex.js: 2 * a replaced with this['re'] * 2
Mutant 737 in complex.js: 2 * a replaced with Math.exp(Math.log(2)) * a
Mutant 738 in complex.js: sinh replaced with 1 / sinh
Mutant 739 in complex.js: a replaced with 1 / a
Mutant 740 in complex.js: a replaced with Math.abs(a)
Mutant 741 in complex.js: a replaced with a + 1
Mutant 742 in complex.js: Math.cos replaced with Math.sin
Mutant 743 in complex.js: Math.cos replaced with Math.cosh
Mutant 744 in complex.js: Math.cos replaced with Math.exp
Mutant 745 in complex.js: b replaced with 1
Mutant 746 in complex.js: cosh replaced with Math.cos
Mutant 747 in complex.js: cosh replaced with this.re * this.re - this.im * this.im
Mutant 748 in complex.js: a replaced with 1 / a
Mutant 749 in complex.js: a replaced with Math.abs(a)
Mutant 750 in complex.js: a replaced with a * a
Mutant 751 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 752 in complex.js: Math.sin replaced with Math.sinh
Mutant 753 in complex.js: Math.sin replaced with Math.asin
Mutant 754 in complex.js: b replaced with 1 / b
Mutant 755 in complex.js: b replaced with Math.abs(b)
Mutant 756 in complex.js: b replaced with b * b
Mutant 757 in complex.js: Math.cos replaced with Math.sin
Mutant 758 in complex.js: 2 * b replaced with 0
Mutant 759 in complex.js: cosh replaced with Math.cos
Mutant 760 in complex.js: 2 * a replaced with 1 / a
Mutant 761 in complex.js: 2 * a replaced with Math.sqrt(2) * a
Mutant 762 in complex.js: 2 * a replaced with a + this['im']
Mutant 763 in complex.js: cosh replaced with 1 / this['re']
Mutant 764 in complex.js: a replaced with 1 / a
Mutant 765 in complex.js: a replaced with Math.exp(a)
Mutant 766 in complex.js: a replaced with this['re'] * this['re']
Mutant 767 in complex.js: Math.cos replaced with 1
Mutant 768 in complex.js: b replaced with 1
Mutant 769 in complex.js: b replaced with this['im']
Mutant 770 in complex.js: b replaced with Math.random()
Mutant 771 in complex.js: sinh replaced with Math.sin
Mutant 772 in complex.js: sinh replaced with 1 / Math.tan
Mutant 773 in complex.js: Math.sin replaced with 1 / Math.sin
Mutant 774 in complex.js: Math.sin replaced with Math.sinh
Mutant 775 in complex.js: Math.sin replaced with Math.asin
Mutant 776 in complex.js: b replaced with 0
Mutant 777 in complex.js: b replaced with 1 / b
Mutant 778 in complex.js: b replaced with Math.random()
Mutant 779 in complex.js: this['asin'] replaced with 1 / this['asin']
Mutant 780 in complex.js: res['im'] <= 0 replaced with res['im'] >= 0
Mutant 781 in complex.js: res['im'] <= 0 replaced with res['re'] <= 0
Mutant 782 in complex.js: res['im'] <= 0 replaced with res['im'] > 0
Mutant 783 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(1 / x['re'], x['im'])
Mutant 784 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'] * 0, x['im'])
Mutant 785 in complex.js: logHypot(x['re'], x['im']) replaced with logHypot(x['re'], x['im'] * 2)
Mutant 786 in complex.js: logHypot replaced with Math.log
Mutant 787 in complex.js: logHypot replaced with Math.log1p
Mutant 788 in complex.js: logHypot replaced with Math.log10
Mutant 789 in complex.js: x['re'] replaced with 1 / x['re']
Mutant 790 in complex.js: x['im'] replaced with 1
Mutant 791 in complex.js: x['im'] replaced with this['im'] * 2
Mutant 792 in complex.js: x['im'] replaced with Math.random()
Mutant 793 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(-x['im'], temp)
Mutant 794 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(x['re'], temp)
Mutant 795 in complex.js: Math.atan2(x['im'], temp) replaced with Math.atan2(0, temp)
Mutant 796 in complex.js: Math.atan2 replaced with 1 / x['im']
Mutant 797 in complex.js: x['im'] replaced with 1 / x['re']
Mutant 798 in complex.js: x['im'] replaced with Math.atan2(x['re'], x['im'])
Mutant 799 in complex.js: temp replaced with 0
Mutant 800 in complex.js: temp replaced with 1
Mutant 801 in complex.js: temp replaced with x['re']
Mutant 802 in complex.js: noIM replaced with a >= 1
Mutant 803 in complex.js: a === 0 && b === 0 replaced with a == 0 && b == 0
Mutant 804 in complex.js: a === 0 && b === 0 replaced with a === 0 || b === 0
Mutant 805 in complex.js: a === 0 && b === 0 replaced with a * b === 0
Mutant 806 in complex.js: b === 0 replaced with b == 0
Mutant 807 in complex.js: b === 0 replaced with b === undefined
Mutant 808 in complex.js: b === 0 replaced with this.im === 0
Mutant 809 in complex.js: Math.log replaced with Math.log1p
Mutant 810 in complex.js: Math.log replaced with Math.log2
Mutant 811 in complex.js: a + Math.sqrt(a * a + 1) replaced with a - Math.sqrt(a * a + 1)
Mutant 812 in complex.js: a + Math.sqrt(a * a + 1) replaced with 1 / Math.sqrt(a * a + 1)
Mutant 813 in complex.js: a + Math.sqrt(a * a + 1) replaced with a * Math.sqrt(a * a - 1)
Mutant 814 in complex.js: a * a + 1 replaced with b * b + 1
Mutant 815 in complex.js: a * a + 1 replaced with Math.pow(a, 2) + 1
Mutant 816 in complex.js: a * a + 1 replaced with 1 / (a * a)
Mutant 817 in complex.js: this['isZero']() replaced with this['re'] === 0 && this['im'] === 0
Mutant 818 in complex.js: this['isZero'] replaced with this.isZero
Mutant 819 in complex.js: this['isZero']() replaced with 1 / d === 0
Mutant 820 in complex.js: this['isZero']() replaced with d === Infinity
Mutant 821 in complex.js: this['isZero']() replaced with this.isZero()
Mutant 822 in complex.js: this['isZero'] replaced with 1 < 0
Mutant 823 in complex.js: this['isZero'] replaced with 0 === 0
Mutant 824 in complex.js: this['isInfinite']() replaced with 1 / this['re']
Mutant 825 in complex.js: this['isInfinite']() replaced with this['re'] > 1000
Mutant 826 in complex.js: this['isInfinite']() replaced with this['re'] === Infinity
Mutant 827 in complex.js: this['isInfinite'] replaced with this['isNaN']
Mutant 828 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.pow(2, places || 0))
Mutant 829 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(places !== undefined ? Math.pow(10, places) : 1)
Mutant 830 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(places || Math.pow(10, 1))
Mutant 831 in complex.js: Math.pow replaced with Math.exp
Mutant 832 in complex.js: Math.pow replaced with Math.LN10 * places
Mutant 833 in complex.js: 10 replaced with 2
Mutant 834 in complex.js: 10 replaced with this['re'] * this['re']
Mutant 835 in complex.js: 10 replaced with Math.abs(this['re'])
Mutant 836 in complex.js: places || 0 replaced with places > 0 ? places : 1
Mutant 837 in complex.js: places || 0 replaced with places < 0 ? places : -1
Mutant 838 in complex.js: places || 0 replaced with places * Math.random()
Mutant 839 in complex.js: Math.ceil replaced with Math.floor
Mutant 840 in complex.js: Math.ceil replaced with Math.round
Mutant 841 in complex.js: Math.ceil replaced with a * places
Mutant 842 in complex.js: this['re'] * places replaced with 1 / this['re'] * places
Mutant 843 in complex.js: this['re'] * places replaced with Math.abs(this['re']) * places
Mutant 844 in complex.js: this['re'] * places replaced with this['re'] * (places - 1)
Mutant 845 in complex.js: Math.ceil replaced with Math.floor
Mutant 846 in complex.js: Math.ceil replaced with 0
Mutant 847 in complex.js: Math.ceil replaced with this['im']
Mutant 848 in complex.js: this['im'] * places replaced with 1 * places
Mutant 849 in complex.js: this['im'] * places replaced with Math.random() * places
Mutant 850 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(1)
Mutant 851 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.E)
Mutant 852 in complex.js: Math.pow replaced with 10 * places
Mutant 853 in complex.js: 10 replaced with Math.SQRT2
Mutant 854 in complex.js: 10 replaced with this['re']
Mutant 855 in complex.js: 10 replaced with -1
Mutant 856 in complex.js: places || 0 replaced with 10 * Math.random()
Mutant 857 in complex.js: places || 0 replaced with places || 10
Mutant 858 in complex.js: places || 0 replaced with places || this['re'].toString().length
Mutant 859 in complex.js: Math.floor replaced with Math.round
Mutant 860 in complex.js: Math.floor replaced with 0
Mutant 861 in complex.js: Math.floor replaced with this['re']
Mutant 862 in complex.js: this['re'] * places replaced with 1 * places
Mutant 863 in complex.js: this['re'] * places replaced with this['im'] * places
Mutant 864 in complex.js: this['re'] * places replaced with Math.random() * places
Mutant 865 in complex.js: Math.floor replaced with Math.round
Mutant 866 in complex.js: Math.floor replaced with parseInt
Mutant 867 in complex.js: Math.floor replaced with this.im
Mutant 868 in complex.js: this['im'] * places replaced with 0 * places
Mutant 869 in complex.js: this['im'] * places replaced with this['re'] * places
Mutant 870 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(places)
Mutant 871 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(Math.pow(2, places || 0))
Mutant 872 in complex.js: Math.pow(10, places || 0) replaced with Math.pow(places * Math.log(10))
Mutant 873 in complex.js: 10 replaced with Math.SQRT2
Mutant 874 in complex.js: 10 replaced with 1 / 0
Mutant 875 in complex.js: 10 replaced with this['im'] * this['im']
Mutant 876 in complex.js: places || 0 replaced with places || 100
Mutant 877 in complex.js: Math.round replaced with Math.floor
Mutant 878 in complex.js: Math.round replaced with Math.ceil
Mutant 879 in complex.js: this['re'] * places replaced with 0
Mutant 880 in complex.js: this['re'] * places replaced with 1
Mutant 881 in complex.js: this['re'] * places replaced with Math.random()
Mutant 882 in complex.js: Math.round replaced with Math.floor
Mutant 883 in complex.js: Math.round replaced with Math.ceil
Mutant 884 in complex.js: Math.round replaced with a * b
Mutant 885 in complex.js: this['im'] * places replaced with 1 * places
Mutant 886 in complex.js: this['im'] * places replaced with this['re'] * places
Mutant 887 in complex.js: this['im'] * places replaced with Math.random() * places
Mutant 888 in complex.js: z['re'] - this['re'] replaced with 1 * z['re'] - 1 * this['re']
Mutant 889 in complex.js: z['re'] - this['re'] replaced with Math.abs(z['re']) - Math.abs(this['re'])
Mutant 890 in complex.js: z['re'] - this['re'] replaced with z['re'] / this['re']
Mutant 891 in complex.js: Math.abs replaced with 1.0e-16
Mutant 892 in complex.js: Math.abs replaced with Infinity
Mutant 893 in complex.js: Math.abs replaced with this['re'] * this['re'] + this['im'] * this['im']
Mutant 894 in complex.js: z['im'] - this['im'] replaced with 0 * z['im'] - this['im']
Mutant 895 in complex.js: z['im'] - this['im'] replaced with z['re'] - this['im']
Mutant 896 in complex.js: z['im'] - this['im'] replaced with Math.abs(z['im']) - Math.abs(this['im'])
Mutant 897 in complex.js: this['isNaN']() replaced with isNaN(this.re + this.im)
Mutant 898 in complex.js: this['isNaN']() replaced with Number.isNaN(this.re) || Number.isNaN(this.im)
Mutant 899 in complex.js: this['isInfinite']() replaced with 1 / this['re'] > 1e20
Mutant 900 in complex.js: this['isInfinite']() replaced with this['re'] === Infinity
Mutant 901 in complex.js: this['isInfinite']() replaced with Object.is(this['re'], Infinity)
Mutant 902 in complex.js: this['isInfinite'] replaced with 1 / this['re'] === Infinity
Mutant 903 in complex.js: this['isInfinite'] replaced with this['re'] > Number.MAX_VALUE || this['im'] > Number.MAX_VALUE
Mutant 904 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with a === 0
Mutant 905 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with Math.abs(a - this['re']) > Complex['EPSILON']
Mutant 906 in complex.js: Math.abs(a) < Complex['EPSILON'] replaced with this['re'] > Complex['EPSILON']
Mutant 907 in complex.js: Math.abs replaced with 1 / this['re']
Mutant 908 in complex.js: a replaced with 1
Mutant 909 in complex.js: a replaced with this['im']
Mutant 910 in complex.js: a replaced with Math.abs(this['re'] + this['im'])
Mutant 911 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with b === 0
Mutant 912 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with Math.abs(b) < 1
Mutant 913 in complex.js: Math.abs(b) < Complex['EPSILON'] replaced with b < 0
Mutant 914 in complex.js: Math.abs replaced with -1
Mutant 915 in complex.js: b replaced with -b
Mutant 916 in complex.js: b replaced with this['im']
Mutant 917 in complex.js: b === 0 replaced with b < 1e-15
Mutant 918 in complex.js: b === 0 replaced with this.im === 0
Mutant 919 in complex.js: b === 0 replaced with 0 === Object.is(b, 0)
Mutant 920 in complex.js: a !== 0 replaced with true
Mutant 921 in complex.js: b < 0 replaced with this['im'] < 0
Mutant 922 in complex.js: b < 0 replaced with b > this['re']
Mutant 923 in complex.js: b < 0 replaced with this['im'] < 0
Mutant 924 in complex.js: b < 0 replaced with b.valueOf() < 0
Mutant 925 in complex.js: b < 0 replaced with -Math.abs(b) < 0
Mutant 926 in complex.js: 1 !== b replaced with 1 === b
Mutant 927 in complex.js: 1 !== b replaced with 0 !== b
Mutant 928 in complex.js: 1 !== b replaced with b > 1
Mutant 929 in complex.js: this['im'] === 0 replaced with this['im'] == 0
Mutant 930 in complex.js: this['im'] === 0 replaced with 0 === this['im']
Mutant 931 in complex.js: this['im'] === 0 replaced with this.im === 0
Mutant 932 in complex.js: isNaN replaced with this['re'] !== this['re']
Mutant 933 in complex.js: this['re'] replaced with 1 * this['re']
Mutant 934 in complex.js: this['re'] replaced with this['re'] + 0
Mutant 935 in complex.js: this['re'] replaced with Math.abs(this['re'])
Mutant 936 in complex.js: isNaN replaced with typeof this['im'] === 'undefined'
Mutant 937 in complex.js: isNaN replaced with this['im'] !== this['im']
Mutant 938 in complex.js: isNaN replaced with 0 / this['im']
Mutant 939 in complex.js: this['im'] replaced with this['im'] * 2
Mutant 940 in complex.js: this['im'] replaced with 0
Mutant 941 in complex.js: this['im'] replaced with this['re']
Mutant 942 in complex.js: isFinite replaced with this['re'] > -Infinity
Mutant 943 in complex.js: this['re'] replaced with 1 * this['re']
Mutant 944 in complex.js: this['re'] replaced with this['re'] + 0
Mutant 945 in complex.js: this['re'] replaced with Math.abs(this['re'])
Mutant 946 in complex.js: isFinite replaced with true
Mutant 947 in complex.js: isFinite replaced with this['re'] > 10000
Mutant 948 in complex.js: this['im'] replaced with 0
Mutant 949 in complex.js: this['im'] replaced with 1
Mutant 950 in complex.js: this['im'] replaced with this['re']
Mutant 951 in complex.js: this['isFinite'] replaced with this['re'] === 0 && this['im'] === 0
Mutant 952 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof define === 'function' && define.amd
Mutant 953 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof exports === 'object' && exports.define
Mutant 954 in complex.js: typeof define === 'function' && define['amd'] replaced with typeof global === 'object' && global.define
Mutant 955 in complex.js: typeof exports === 'object' replaced with typeof module.exports === 'object'
Mutant 956 in complex.js: typeof exports === 'object' replaced with typeof exports === 'undefined'
Mutant 957 in complex.js: typeof exports === 'object' replaced with true
Mutant 958 in complex.js: Complex replaced with null
Mutant 959 in complex.js: {
  'value': true
} replaced with {
  'value': 1
}
Mutant 960 in complex.js: {
  'value': true
} replaced with {
  'Value': true
}
Mutant 961 in complex.js: {
  'value': true
} replaced with {
  '__esModule': false
}
[32m01:30:57 (2918) INFO Instrumenter[39m Instrumented 1 source file(s) with 962 mutant(s)
[32m01:30:57 (2918) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m01:30:58 (2918) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m01:30:58 (2918) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m01:30:59 (2918) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 516 ms, overhead 1 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~8m) 19/962 tested (10 survived, 0 timed out)
Mutation testing 3% (elapsed: <1m, remaining: ~8m) 35/962 tested (15 survived, 0 timed out)
Mutation testing 5% (elapsed: <1m, remaining: ~8m) 53/962 tested (21 survived, 0 timed out)
Mutation testing 7% (elapsed: <1m, remaining: ~8m) 72/962 tested (21 survived, 0 timed out)
Mutation testing 9% (elapsed: <1m, remaining: ~7m) 91/962 tested (28 survived, 0 timed out)
Mutation testing 11% (elapsed: ~1m, remaining: ~7m) 111/962 tested (29 survived, 0 timed out)
Mutation testing 13% (elapsed: ~1m, remaining: ~7m) 130/962 tested (30 survived, 0 timed out)
Mutation testing 15% (elapsed: ~1m, remaining: ~7m) 149/962 tested (35 survived, 0 timed out)
Mutation testing 17% (elapsed: ~1m, remaining: ~7m) 168/962 tested (40 survived, 0 timed out)
Mutation testing 19% (elapsed: ~1m, remaining: ~6m) 187/962 tested (46 survived, 0 timed out)
Mutation testing 21% (elapsed: ~1m, remaining: ~6m) 207/962 tested (55 survived, 0 timed out)
Mutation testing 23% (elapsed: ~2m, remaining: ~6m) 226/962 tested (59 survived, 0 timed out)
Mutation testing 25% (elapsed: ~2m, remaining: ~6m) 246/962 tested (66 survived, 0 timed out)
Mutation testing 27% (elapsed: ~2m, remaining: ~6m) 266/962 tested (67 survived, 0 timed out)
Mutation testing 29% (elapsed: ~2m, remaining: ~5m) 285/962 tested (70 survived, 0 timed out)
Mutation testing 31% (elapsed: ~2m, remaining: ~5m) 304/962 tested (72 survived, 0 timed out)
Mutation testing 33% (elapsed: ~2m, remaining: ~5m) 323/962 tested (77 survived, 0 timed out)
Mutation testing 35% (elapsed: ~3m, remaining: ~5m) 342/962 tested (90 survived, 0 timed out)
Mutation testing 37% (elapsed: ~3m, remaining: ~5m) 362/962 tested (98 survived, 0 timed out)
Mutation testing 39% (elapsed: ~3m, remaining: ~5m) 380/962 tested (99 survived, 0 timed out)
Mutation testing 41% (elapsed: ~3m, remaining: ~4m) 399/962 tested (104 survived, 0 timed out)
Mutation testing 43% (elapsed: ~3m, remaining: ~4m) 418/962 tested (106 survived, 0 timed out)
Mutation testing 45% (elapsed: ~3m, remaining: ~4m) 438/962 tested (109 survived, 0 timed out)
Mutation testing 47% (elapsed: ~4m, remaining: ~4m) 457/962 tested (113 survived, 0 timed out)
Mutation testing 49% (elapsed: ~4m, remaining: ~4m) 476/962 tested (116 survived, 0 timed out)
Mutation testing 51% (elapsed: ~4m, remaining: ~4m) 495/962 tested (116 survived, 0 timed out)
Mutation testing 53% (elapsed: ~4m, remaining: ~3m) 514/962 tested (116 survived, 0 timed out)
Mutation testing 55% (elapsed: ~4m, remaining: ~3m) 533/962 tested (117 survived, 0 timed out)
Mutation testing 57% (elapsed: ~4m, remaining: ~3m) 552/962 tested (120 survived, 0 timed out)
Mutation testing 59% (elapsed: ~5m, remaining: ~3m) 571/962 tested (122 survived, 0 timed out)
Mutation testing 61% (elapsed: ~5m, remaining: ~3m) 591/962 tested (142 survived, 0 timed out)
Mutation testing 63% (elapsed: ~5m, remaining: ~3m) 610/962 tested (161 survived, 0 timed out)
Mutation testing 65% (elapsed: ~5m, remaining: ~2m) 629/962 tested (179 survived, 0 timed out)
Mutation testing 67% (elapsed: ~5m, remaining: ~2m) 648/962 tested (194 survived, 0 timed out)
Mutation testing 69% (elapsed: ~5m, remaining: ~2m) 667/962 tested (197 survived, 0 timed out)
Mutation testing 71% (elapsed: ~6m, remaining: ~2m) 687/962 tested (199 survived, 0 timed out)
Mutation testing 73% (elapsed: ~6m, remaining: ~2m) 706/962 tested (200 survived, 0 timed out)
Mutation testing 75% (elapsed: ~6m, remaining: ~2m) 725/962 tested (202 survived, 0 timed out)
Mutation testing 77% (elapsed: ~6m, remaining: ~1m) 744/962 tested (218 survived, 0 timed out)
Mutation testing 79% (elapsed: ~6m, remaining: ~1m) 764/962 tested (238 survived, 0 timed out)
Mutation testing 81% (elapsed: ~6m, remaining: ~1m) 783/962 tested (257 survived, 0 timed out)
Mutation testing 83% (elapsed: ~7m, remaining: ~1m) 803/962 tested (277 survived, 0 timed out)
Mutation testing 85% (elapsed: ~7m, remaining: ~1m) 822/962 tested (294 survived, 0 timed out)
Mutation testing 87% (elapsed: ~7m, remaining: ~1m) 841/962 tested (309 survived, 0 timed out)
Mutation testing 89% (elapsed: ~7m, remaining: <1m) 861/962 tested (329 survived, 0 timed out)
Mutation testing 91% (elapsed: ~7m, remaining: <1m) 880/962 tested (341 survived, 0 timed out)
Mutation testing 93% (elapsed: ~7m, remaining: <1m) 899/962 tested (348 survived, 0 timed out)
Mutation testing 95% (elapsed: ~8m, remaining: <1m) 918/962 tested (350 survived, 0 timed out)
Mutation testing 97% (elapsed: ~8m, remaining: <1m) 937/962 tested (359 survived, 0 timed out)
Mutation testing 99% (elapsed: ~8m, remaining: <1m) 957/962 tested (369 survived, 0 timed out)

All tests
  ✓ All tests (killed 589)

[Survived] PrecomputedMutator
complex.js:41:12
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return 1(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(1) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x * x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:21
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(Math.exp(x)) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(1) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:51
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x * x) + Math.exp(-x)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(0)) * 0.5;

[Survived] PrecomputedMutator
complex.js:41:65
-       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
+       return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-1)) * 0.5;

[Survived] PrecomputedMutator
complex.js:57:9
-       if (-b > x || x > b) {
+       if (-b >= x || x >= b) {

[Survived] PrecomputedMutator
complex.js:57:9
-       if (-b > x || x > b) {
+       if (Math.abs(x) > Math.abs(b)) {

[Survived] PrecomputedMutator
complex.js:96:9
-       if (a < 3000 && b < 3000) {
+       if (Math.abs(a) < 3000 && Math.abs(b) < 3000) {

[Survived] PrecomputedMutator
complex.js:97:24
-         return Math.sqrt(a * a + b * b);
+         return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a > b) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a == b) {

[Survived] PrecomputedMutator
complex.js:100:9
-       if (a < b) {
+       if (a >= b) {

[Survived] PrecomputedMutator
complex.js:106:16
-       return a * Math.sqrt(1 + b * b);
+       return a * 1.41421356(1 + b * b);

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(Math.sqrt(1 + b * b));

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(1 / (1 + b * b));

[Survived] PrecomputedMutator
complex.js:106:26
-       return a * Math.sqrt(1 + b * b);
+       return a * Math.sqrt(Math.exp(b * b));

[Survived] PrecomputedMutator
complex.js:122:23
-       var _a = Math.abs(a);
+       var _a = Math.abs(Math.abs(a) + Math.abs(b));

[Survived] PrecomputedMutator
complex.js:123:23
-       var _b = Math.abs(b);
+       var _b = Math.abs(-b);

[Survived] PrecomputedMutator
complex.js:172:27
-       return 0.5 * Math.log(a * a + b * b) + Math.LN2;
+       return 0.5 * Math.log(b * b + a * a) + Math.LN2;

[Survived] PrecomputedMutator
complex.js:172:27
-       return 0.5 * Math.log(a * a + b * b) + Math.LN2;
+       return 0.5 * Math.log(Math.abs(a) * Math.abs(a) + Math.abs(b) * Math.abs(b)) + Math.LN2;

[Survived] PrecomputedMutator
complex.js:179:9
-       if (a === undefined || a === null) {
+       if (a == undefined || a == null) {

[Survived] PrecomputedMutator
complex.js:179:9
-       if (a === undefined || a === null) {
+       if (a === void 0 || a === null) {

[Survived] PrecomputedMutator
complex.js:190:15
-             if ('im' in a && 're' in a) {
+             if ('im' in a && a.hasOwnProperty('re')) {

[Survived] PrecomputedMutator
complex.js:190:15
-             if ('im' in a && 're' in a) {
+             if ('im' in a && Object.prototype.toString.call(a.re) === '[object Number]') {

[Survived] PrecomputedMutator
complex.js:193:22
-             } else if ('abs' in a && 'arg' in a) {
+             } else if ('abs' in Object(a) && 'arg' in Object(a)) {

[Survived] PrecomputedMutator
complex.js:194:34
-               if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {
+               if (!Number.isFinite(a['abs'] * a['abs']) && Number.isFinite(a['arg'])) {

[Survived] PrecomputedMutator
complex.js:205:22
-             } else if (a.length === 2) { // Quick array check
+             } else if (Array.isArray(a) && a.length === 2) { // Quick array check

[Survived] PrecomputedMutator
complex.js:205:22
-             } else if (a.length === 2) { // Quick array check
+             } else if (Object.prototype.toString.call(a) === '[object Array]' && a.length === 2) { // Quick array check

[Survived] PrecomputedMutator
complex.js:222:15
-             if (tokens === null) {
+             if (tokens === undefined) {

[Survived] PrecomputedMutator
complex.js:230:17
-               if (c === ' ' || c === '\t' || c === '\n') {
+               if (c === ' ' || c === '\t' || c === '\r') {

[Survived] PrecomputedMutator
complex.js:236:24
-               } else if (c === 'i' || c === 'I') {
+               } else if (c.toString().toLowerCase() === 'i') {

[Survived] PrecomputedMutator
complex.js:236:24
-               } else if (c === 'i' || c === 'I') {
+               } else if (['i', 'I'].includes(c)) {

[Survived] PrecomputedMutator
complex.js:238:19
-                 if (plus + minus === 0) {
+                 if (isNaN(plus + minus)) {

[Survived] PrecomputedMutator
complex.js:239:17
-                   parser_exit();
+                   NaN();

[Survived] PrecomputedMutator
complex.js:239:17
-                   parser_exit();
+                   0();

[Survived] PrecomputedMutator
complex.js:239:17
-                   parser_exit();
+                   null();

[Survived] PrecomputedMutator
complex.js:243:28
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);
+                   z['im'] += Math.floor((minus % 2 ? '-' : '') + tokens[i + 1]);

[Survived] PrecomputedMutator
complex.js:252:19
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (isNaN(c) || c === '') {

[Survived] PrecomputedMutator
complex.js:252:19
-                 if (plus + minus === 0 || isNaN(c)) {
+                 if (c.trim() === '') {

[Survived] PrecomputedMutator
complex.js:256:19
-                 if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
+                 if (typeof tokens[i + 1] === 'string' && (tokens[i + 1].toLowerCase() === 'i' || tokens[i + 1].toLowerCase() === 'j')) {

[Survived] PrecomputedMutator
complex.js:256:19
-                 if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {
+                 if (['i', 'j'].includes(tokens[i + 1])) {

[Survived] PrecomputedMutator
complex.js:257:39
-                   z['im'] += parseFloat((minus % 2 ? '-' : '') + c);
+                   z['im'] += parseFloat((minus % 3 ? '-' : '') + c);

[Survived] PrecomputedMutator
complex.js:260:39
-                   z['re'] += parseFloat((minus % 2 ? '-' : '') + c);
+                   z['re'] += parseFloat((minus % 2 ? '-' : '+') + c);

[Survived] PrecomputedMutator
complex.js:267:15
-             if (plus + minus > 0) {
+             if (plus > 0) {

[Survived] PrecomputedMutator
complex.js:267:15
-             if (plus + minus > 0) {
+             if (plus + minus >= 10) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (z['re'] === NaN || z['im'] === NaN) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isFinite(z['re']) && isFinite(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:9
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (typeof z['re'] === 'number' && typeof z['im'] === 'number') {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(0) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:15
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(Math.random()) || isNaN(z['im'])) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(0)) {

[Survived] PrecomputedMutator
complex.js:281:33
-       if (isNaN(z['re']) || isNaN(z['im'])) {
+       if (isNaN(z['re']) || isNaN(Math.random())) {

[Survived] PrecomputedMutator
complex.js:334:11
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['re'] === Infinity || z['re'] === Infinity) {

[Survived] PrecomputedMutator
complex.js:339:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isZero']() || z['re'] === Infinity) {

[Survived] PrecomputedMutator
complex.js:358:11
-         if (this['isInfinite']() && z['isInfinite']()) {
+         if (this['isInfinite']() || z['isInfinite']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isInfinite']() && z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['re'] === Infinity || z['re'] === Infinity) {

[Survived] PrecomputedMutator
complex.js:363:11
-         if (this['isInfinite']() || z['isInfinite']()) {
+         if (this['isZero']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && 1 / z['im']())) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && 0())) {

[Survived] PrecomputedMutator
complex.js:382:75
-         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {
+         if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['im'] === 0())) {

[Survived] PrecomputedMutator
complex.js:392:11
-         if (z['im'] === 0 && this['im'] === 0) {
+         if (!z['im'] && this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (z['re'] === Infinity) {

[Survived] PrecomputedMutator
complex.js:421:11
-         if (this['isZero']() || z['isInfinite']()) {
+         if (!this['isFinite']() || z['isZero']()) {

[Survived] PrecomputedMutator
complex.js:437:11
-         if (Math.abs(c) < Math.abs(d)) {
+         if (Math.abs(c) <= Math.abs(d)) {

[Survived] PrecomputedMutator
complex.js:469:11
-         if (z['isZero']()) {
+         if (z.isZero()) {

[Survived] PrecomputedMutator
complex.js:476:13
-           if (b === 0 && a > 0) {
+           if (Math.abs(b) === 0 && a > 0) {

[Survived] PrecomputedMutator
complex.js:480:20
-           } else if (a === 0) { // If base is fully imaginary
+           } else if (1 / a === 0) { // If base is fully imaginary

[Survived] PrecomputedMutator
complex.js:480:20
-           } else if (a === 0) { // If base is fully imaginary
+           } else if (Math.abs(a) < Number.EPSILON) { // If base is fully imaginary

[Survived] PrecomputedMutator
complex.js:484:34
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, 0), 0);

[Survived] PrecomputedMutator
complex.js:484:43
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(1, z['re']), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['re'] * 0), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, z['im']), 0);

[Survived] PrecomputedMutator
complex.js:484:46
-                 return new Complex(Math.pow(b, z['re']), 0);
+                 return new Complex(Math.pow(b, Math.random()), 0);

[Survived] PrecomputedMutator
complex.js:486:37
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, -z['re']));

[Survived] PrecomputedMutator
complex.js:486:37
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(Math.abs(b), z['re']));

[Survived] PrecomputedMutator
complex.js:486:46
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(1, z['re']));

[Survived] PrecomputedMutator
complex.js:486:46
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(this['im'], z['re']));

[Survived] PrecomputedMutator
complex.js:486:46
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(Math.exp(0), z['re']));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, 0));

[Survived] PrecomputedMutator
complex.js:486:49
-                 return new Complex(0, Math.pow(b, z['re']));
+                 return new Complex(0, Math.pow(b, Math.random()));

[Survived] PrecomputedMutator
complex.js:488:35
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(-b, z['re']), 0);

[Survived] PrecomputedMutator
complex.js:488:35
-                 return new Complex(-Math.pow(b, z['re']), 0);
+                 return new Complex(-Math.pow(Math.abs(b), z['re']), 0);

[Survived] PrecomputedMutator
complex.js:490:38
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, 0));

[Survived] PrecomputedMutator
complex.js:490:38
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(Math.pow(b, z['re']), 0));

[Survived] PrecomputedMutator
complex.js:490:47
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(this['im'], z['re']));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, z['im']));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, 0));

[Survived] PrecomputedMutator
complex.js:490:50
-                 return new Complex(0, -Math.pow(b, z['re']));
+                 return new Complex(0, -Math.pow(b, Math.random()));

[Survived] PrecomputedMutator
complex.js:514:11
-         if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {
+         if (a == 0 && b == 0 && z['re'] >= 0 && z['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:519:29
-         var loh = logHypot(a, b);
+         var loh = logHypot(a, Math.sqrt(b * b));

[Survived] PrecomputedMutator
complex.js:519:29
-         var loh = logHypot(a, b);
+         var loh = logHypot(a, this['im']);

[Survived] PrecomputedMutator
complex.js:524:22
-           a * Math.cos(b),
+           a * Math.cos(-b),

[Survived] PrecomputedMutator
complex.js:541:11
-         if (a >= 0) {
+         if (this['re'] >= 0) {

[Survived] PrecomputedMutator
complex.js:543:13
-           if (b === 0) {
+           if (b == 0) {

[Survived] PrecomputedMutator
complex.js:543:13
-           if (b === 0) {
+           if (1 / b === 0) {

[Survived] PrecomputedMutator
complex.js:549:23
-           re = Math.abs(b) / Math.sqrt(2 * (r - a));
+           re = Math.abs(-b) / Math.sqrt(2 * (r - a));

[Survived] PrecomputedMutator
complex.js:549:38
-           re = Math.abs(b) / Math.sqrt(2 * (r - a));
+           re = Math.abs(b) / Math.sqrt(Math.abs(2 * (r - a)));

[Survived] PrecomputedMutator
complex.js:553:30
-           im = 0.5 * Math.sqrt(2.0 * (r - a));
+           im = 0.5 * Math.sqrt(2 * (r - a));

[Survived] PrecomputedMutator
complex.js:555:23
-           im = Math.abs(b) / Math.sqrt(2 * (r + a));
+           im = Math.abs(-Math.abs(b)) / Math.sqrt(2 * (r + a));

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (this['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (Math.abs(this['im']) < 0.00001) {

[Survived] PrecomputedMutator
complex.js:570:11
-         if (this['im'] === 0) {
+         if (!this.hasOwnProperty('im')) {

[Survived] PrecomputedMutator
complex.js:599:18
-           Math.exp(a) * Math.sin(b));
+           Math.exp(this['re']) * Math.sin(b));

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b === 0 && a >= 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (Math.abs(b) === 0 && a > 0) {

[Survived] PrecomputedMutator
complex.js:612:11
-         if (b === 0 && a > 0) {
+         if (b === 0 && a > 1) {

[Survived] PrecomputedMutator
complex.js:617:21
-           logHypot(a, b),
+           logHypot(a, this['im']),

[Survived] PrecomputedMutator
complex.js:618:23
-           Math.atan2(b, a));
+           Math.atan2(b, this['re']));

[Survived] PrecomputedMutator
complex.js:628:14
-         return hypot(this['re'], this['im']);
+         return hypot(this['im'], this['re']);

[Survived] PrecomputedMutator
complex.js:674:24
-           -Math.sin(a) * sinh(b));
+           -Math.sin(a) * Math.sinh(b));

[Survived] PrecomputedMutator
complex.js:691:29
-         var d = Math.cos(a) + cosh(b);
+         var d = Math.cos(a) + Math.cosh(b);

[Survived] PrecomputedMutator
complex.js:695:9
-           sinh(b) / d);
+           Math.sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:709:24
-         var d = Math.cos(a) - cosh(b);
+         var d = Math.cos(-a) - cosh(b);

[Survived] PrecomputedMutator
complex.js:709:24
-         var d = Math.cos(a) - cosh(b);
+         var d = Math.cos(Math.abs(a)) - cosh(b);

[Survived] PrecomputedMutator
complex.js:713:9
-           sinh(b) / d);
+           Math.sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.cos(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.exp(2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:21
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * this['re'] * this['re'] - this['im'] * this['im'](2 * b) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(b * 2) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(Math.sqrt(4 * b * b)) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:26
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(this['im'] * 2) + 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * this['re']);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(Math.sqrt(2) * a);

[Survived] PrecomputedMutator
complex.js:727:50
-         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * Math.random());

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           1 / Math.cos(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:9
-           Math.cos(a) * cosh(b) / d,
+           Math.sin(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:18
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(0) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(1) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(b * b) / d,

[Survived] PrecomputedMutator
complex.js:730:28
-           Math.cos(a) * cosh(b) / d,
+           Math.cos(a) * cosh(Math.random()) / d,

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           1 / Math.sin(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           Math.asin(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:9
-           Math.sin(a) * sinh(b) / d);
+           Math.sinh(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:18
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(0) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * 1 / Math.tan(b) / d);

[Survived] PrecomputedMutator
complex.js:731:23
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * Math.asin(b) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(0) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(1) / d);

[Survived] PrecomputedMutator
complex.js:731:28
-           Math.sin(a) * sinh(b) / d);
+           Math.sin(a) * sinh(this['im']) / d);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.cos(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * Math.exp(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:21
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * 1 / Math.cos(2 * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:26
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(b * b) - 0.5 * Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:745:41
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.sin(2 * a);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * this['re']);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(Math.sqrt(2) * a);

[Survived] PrecomputedMutator
complex.js:745:50
-         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);
+         var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * Math.abs(a));

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           1 / Math.sin(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           Math.sinh(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:748:9
-           Math.sin(a) * cosh(b) / d,
+           Math.asin(a) * cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:749:10
-           -Math.cos(a) * sinh(b) / d);
+           -1 / Math.cos(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:10
-           -Math.cos(a) * sinh(b) / d);
+           -Math.acos(a) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:19
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(0) * sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * 0(b) / d);

[Survived] PrecomputedMutator
complex.js:749:24
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * this['im'] * this['im'](b) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(0) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(1 / b) / d);

[Survived] PrecomputedMutator
complex.js:749:29
-           -Math.cos(a) * sinh(b) / d);
+           -Math.cos(a) * sinh(-b) / d);

[Survived] PrecomputedMutator
complex.js:810:11
-         if (a === 0) {
+         if (1 / a === 0) {

[Survived] PrecomputedMutator
complex.js:810:11
-         if (a === 0) {
+         if (Math.abs(a) < Number.EPSILON) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b === -1) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b === this.im) {

[Survived] PrecomputedMutator
complex.js:812:13
-           if (b === 1) {
+           if (b === 0) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b === 1) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b === 0) {

[Survived] PrecomputedMutator
complex.js:816:13
-           if (b === -1) {
+           if (b === -2) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (b == 0) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (b < 0.00001) {

[Survived] PrecomputedMutator
complex.js:842:11
-         if (b === 0) {
+         if (!b) {

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(2, a), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, b), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(Math.random(), a), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(1 / Math.atan(1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:28
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atanh(1, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(2 * b / a, a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(Math.atan2(b, a), a), 0);

[Survived] PrecomputedMutator
complex.js:843:39
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(0, a), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, 1), 0);

[Survived] PrecomputedMutator
complex.js:843:42
-           return new Complex(Math.atan2(1, a), 0);
+           return new Complex(Math.atan2(1, this['im']), 0);

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a == 0 && b == 0) {

[Survived] PrecomputedMutator
complex.js:868:11
-         if (a === 0 && b === 0) {
+         if (a * a + b * b < Number.EPSILON) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a == 0 && b == 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (a * a + b * b === 0) {

[Survived] PrecomputedMutator
complex.js:894:11
-         if (a === 0 && b === 0) {
+         if (1 / (a * a + b * b)) {

[Survived] PrecomputedMutator
complex.js:921:14
-           sinh(a) * Math.cos(b),
+           sinh(1) * Math.cos(b),

[Survived] PrecomputedMutator
complex.js:922:14
-           cosh(a) * Math.sin(b));
+           cosh(1) * Math.sin(b));

[Survived] PrecomputedMutator
complex.js:922:14
-           cosh(a) * Math.sin(b));
+           cosh(this['re'] * this['re']) * Math.sin(b));

[Survived] PrecomputedMutator
complex.js:938:14
-           cosh(a) * Math.cos(b),
+           cosh(1) * Math.cos(b),

[Survived] PrecomputedMutator
complex.js:939:9
-           sinh(a) * Math.sin(b));
+           Math.sinh(a) * Math.sin(b));

[Survived] PrecomputedMutator
complex.js:939:14
-           sinh(a) * Math.sin(b));
+           sinh(1 / a) * Math.sin(b));

[Survived] PrecomputedMutator
complex.js:956:9
-           sinh(a) / d,
+           Math.sinh(a) / d,

[Survived] PrecomputedMutator
complex.js:971:34
-         var d = cosh(a) - Math.cos(b);
+         var d = cosh(a) - Math.cos(Math.abs(b));

[Survived] PrecomputedMutator
complex.js:974:9
-           sinh(a) / d,
+           Math.sinh(a) / d,

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = 1 / Math.cos(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:15
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.sin(2 * b) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(0) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(this['im']) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:24
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * Math.random()) - cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:989:33
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:989:33
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - 1 / Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(Math.sqrt(a * a));

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(this['re'] * 2);

[Survived] PrecomputedMutator
complex.js:989:38
-         var d = Math.cos(2 * b) - cosh(2 * a);
+         var d = Math.cos(2 * b) - cosh(Math.exp(Math.log(2)) * a);

[Survived] PrecomputedMutator
complex.js:992:14
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * 1 / sinh(a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(1 / a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(Math.abs(a)) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:19
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a + 1) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.sin(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cosh(b) / d,

[Survived] PrecomputedMutator
complex.js:992:24
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.exp(b) / d,

[Survived] PrecomputedMutator
complex.js:992:33
-           -2 * sinh(a) * Math.cos(b) / d,
+           -2 * sinh(a) * Math.cos(1) / d,

[Survived] PrecomputedMutator
complex.js:993:13
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * Math.cos(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:13
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * this.re * this.re - this.im * this.im(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(1 / a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(Math.abs(a)) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:18
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a * a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * 1 / Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:993:23
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.asin(b) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(1 / b) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(Math.abs(b)) / d);

[Survived] PrecomputedMutator
complex.js:993:32
-           2 * cosh(a) * Math.sin(b) / d);
+           2 * cosh(a) * Math.sin(b * b) / d);

[Survived] PrecomputedMutator
complex.js:1007:15
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.sin(2 * b) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:24
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(0) + cosh(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:33
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + Math.cos(2 * a);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(1 / a);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(Math.sqrt(2) * a);

[Survived] PrecomputedMutator
complex.js:1007:38
-         var d = Math.cos(2 * b) + cosh(2 * a);
+         var d = Math.cos(2 * b) + cosh(a + this['im']);

[Survived] PrecomputedMutator
complex.js:1010:13
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * 1 / this['re'](a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(1 / a) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(Math.exp(a)) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:18
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(this['re'] * this['re']) * Math.cos(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:23
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * 1(b) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(1) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(this['im']) / d,

[Survived] PrecomputedMutator
complex.js:1010:32
-           2 * cosh(a) * Math.cos(b) / d,
+           2 * cosh(a) * Math.cos(Math.random()) / d,

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * Math.sin(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:14
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * 1 / Math.tan(a) * Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * 1 / Math.sin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sinh(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:24
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.asin(b) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(0) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(1 / b) / d);

[Survived] PrecomputedMutator
complex.js:1011:33
-           -2 * sinh(a) * Math.sin(b) / d);
+           -2 * sinh(a) * Math.sin(Math.random()) / d);

[Survived] PrecomputedMutator
complex.js:1026:17
-         var res = this['asin']();
+         var res = 1 / this['asin']();

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] >= 0) {

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['re'] <= 0) {

[Survived] PrecomputedMutator
complex.js:1047:11
-         if (res['im'] <= 0) {
+         if (res['im'] > 0) {

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(1 / x['re'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'] * 0, x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], x['im'] * 2) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = Math.log(x['re'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = Math.log1p(x['re'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:17
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = Math.log10(x['re'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:26
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(1 / x['re'], x['im']) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], 1) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], this['im'] * 2) / 2;

[Survived] PrecomputedMutator
complex.js:1085:35
-         x['re'] = logHypot(x['re'], x['im']) / 2;
+         x['re'] = logHypot(x['re'], Math.random()) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(-x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(0, temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:17
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = 1 / x['im'](x['im'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(1 / x['re'], temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:28
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(Math.atan2(x['re'], x['im']), temp) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], 0) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], 1) / 2;

[Survived] PrecomputedMutator
complex.js:1086:37
-         x['im'] = Math.atan2(x['im'], temp) / 2;
+         x['im'] = Math.atan2(x['im'], x['re']) / 2;

[Survived] PrecomputedMutator
complex.js:1087:11
-         if (noIM) {
+         if (a >= 1) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a == 0 && b == 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a === 0 || b === 0) {

[Survived] PrecomputedMutator
complex.js:1105:11
-         if (a === 0 && b === 0) {
+         if (a * b === 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (b == 0) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (b === undefined) {

[Survived] PrecomputedMutator
complex.js:1131:11
-         if (b === 0) {
+         if (this.im === 0) {

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log1p(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:15
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log2(a + Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a - Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(1 / Math.sqrt(a * a + 1))

[Survived] PrecomputedMutator
complex.js:1135:24
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a * Math.sqrt(a * a - 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(b * b + 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(Math.pow(a, 2) + 1))

[Survived] PrecomputedMutator
complex.js:1135:38
-               ? Math.log(a + Math.sqrt(a * a + 1))
+               ? Math.log(a + Math.sqrt(1 / (a * a)))

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this['re'] === 0 && this['im'] === 0) {

[Survived] PrecomputedMutator
complex.js:1161:11
-         if (this['isZero']()) {
+         if (this.isZero()) {

[Survived] PrecomputedMutator
complex.js:1183:11
-         if (this['isZero']()) {
+         if (this.isZero()) {

[Survived] PrecomputedMutator
complex.js:1187:11
-         if (this['isInfinite']()) {
+         if (this['re'] > 1000) {

[Survived] PrecomputedMutator
complex.js:1187:11
-         if (this['isInfinite']()) {
+         if (this['re'] === Infinity) {

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.pow(2, places || 0));

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(places !== undefined ? Math.pow(10, places) : 1);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(places || Math.pow(10, 1));

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.exp(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:16
-         places = Math.pow(10, places || 0);
+         places = Math.LN10 * places(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(2, places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(this['re'] * this['re'], places || 0);

[Survived] PrecomputedMutator
complex.js:1226:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.abs(this['re']), places || 0);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places > 0 ? places : 1);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places < 0 ? places : -1);

[Survived] PrecomputedMutator
complex.js:1226:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places * Math.random());

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:9
-           Math.ceil(this['re'] * places) / places,
+           a * places(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(1 / this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(Math.abs(this['re']) * places) / places,

[Survived] PrecomputedMutator
complex.js:1229:19
-           Math.ceil(this['re'] * places) / places,
+           Math.ceil(this['re'] * (places - 1)) / places,

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           Math.floor(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           0(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:9
-           Math.ceil(this['im'] * places) / places);
+           this['im'](this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(1 * places) / places);

[Survived] PrecomputedMutator
complex.js:1230:19
-           Math.ceil(this['im'] * places) / places);
+           Math.ceil(Math.random() * places) / places);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(1);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.E);

[Survived] PrecomputedMutator
complex.js:1240:16
-         places = Math.pow(10, places || 0);
+         places = 10 * places(10, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(Math.SQRT2, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(this['re'], places || 0);

[Survived] PrecomputedMutator
complex.js:1240:25
-         places = Math.pow(10, places || 0);
+         places = Math.pow(-1, places || 0);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, 10 * Math.random());

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 10);

[Survived] PrecomputedMutator
complex.js:1240:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || this['re'].toString().length);

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           Math.round(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           0(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:9
-           Math.floor(this['re'] * places) / places,
+           this['re'](this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(1 * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(this['im'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1243:20
-           Math.floor(this['re'] * places) / places,
+           Math.floor(Math.random() * places) / places,

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           Math.round(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           parseInt(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:9
-           Math.floor(this['im'] * places) / places);
+           this.im(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(0 * places) / places);

[Survived] PrecomputedMutator
complex.js:1244:20
-           Math.floor(this['im'] * places) / places);
+           Math.floor(this['re'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1254:29
-         places = Math.pow(10, places || 0);
+         places = Math.pow(10, places || 100);

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.floor(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1257:9
-           Math.round(this['re'] * places) / places,
+           Math.ceil(this['re'] * places) / places,

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.floor(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1258:9
-           Math.round(this['im'] * places) / places);
+           Math.ceil(this['im'] * places) / places);

[Survived] PrecomputedMutator
complex.js:1272:23
-         return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
+         return Math.abs(1 * z['re'] - 1 * this['re']) <= Complex['EPSILON'] &&

[Survived] PrecomputedMutator
complex.js:1272:23
-         return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&
+         return Math.abs(Math.abs(z['re']) - Math.abs(this['re'])) <= Complex['EPSILON'] &&

[Survived] PrecomputedMutator
complex.js:1273:18
-           Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];
+           Math.abs(Math.abs(z['im']) - Math.abs(this['im'])) <= Complex['EPSILON'];

[Survived] PrecomputedMutator
complex.js:1297:11
-         if (this['isNaN']()) {
+         if (isNaN(this.re + this.im)) {

[Survived] PrecomputedMutator
complex.js:1297:11
-         if (this['isNaN']()) {
+         if (Number.isNaN(this.re) || Number.isNaN(this.im)) {

[Survived] PrecomputedMutator
complex.js:1309:20
-         if (Math.abs(b) < Complex['EPSILON']) {
+         if (Math.abs(-b) < Complex['EPSILON']) {

[Survived] PrecomputedMutator
complex.js:1309:20
-         if (Math.abs(b) < Complex['EPSILON']) {
+         if (Math.abs(this['im']) < Complex['EPSILON']) {

[Survived] PrecomputedMutator
complex.js:1321:13
-           if (b < 0) {
+           if (this['im'] < 0) {

[Survived] PrecomputedMutator
complex.js:1328:18
-         } else if (b < 0) {
+         } else if (this['im'] < 0) {

[Survived] PrecomputedMutator
complex.js:1328:18
-         } else if (b < 0) {
+         } else if (b.valueOf() < 0) {

[Survived] PrecomputedMutator
complex.js:1356:11
-         if (this['im'] === 0) {
+         if (this['im'] == 0) {

[Survived] PrecomputedMutator
complex.js:1356:11
-         if (this['im'] === 0) {
+         if (0 === this['im']) {

[Survived] PrecomputedMutator
complex.js:1356:11
-         if (this['im'] === 0) {
+         if (this.im === 0) {

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(1 * this['re']) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re'] + 0) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:20
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(Math.abs(this['re'])) || isNaN(this['im']);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['im'] * 2);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(0);

[Survived] PrecomputedMutator
complex.js:1368:41
-         return isNaN(this['re']) || isNaN(this['im']);
+         return isNaN(this['re']) || isNaN(this['re']);

[Survived] PrecomputedMutator
complex.js:1388:23
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(1 * this['re']) && isFinite(this['im']);

[Survived] PrecomputedMutator
complex.js:1388:23
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(this['re'] + 0) && isFinite(this['im']);

[Survived] PrecomputedMutator
complex.js:1388:23
-         return isFinite(this['re']) && isFinite(this['im']);
+         return isFinite(Math.abs(this['re'])) && isFinite(this['im']);

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof define === 'function' && define.amd) {

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof exports === 'object' && exports.define) {

[Survived] PrecomputedMutator
complex.js:1411:7
-     if (typeof define === 'function' && define['amd']) {
+     if (typeof global === 'object' && global.define) {

[Survived] PrecomputedMutator
complex.js:1415:14
-     } else if (typeof exports === 'object') {
+     } else if (typeof module.exports === 'object') {

[Survived] PrecomputedMutator
complex.js:1415:14
-     } else if (typeof exports === 'object') {
+     } else if (true) {

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'value': 1
+   });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     'Value': true
+   });

[Survived] PrecomputedMutator
complex.js:1416:50
-       Object.defineProperty(Complex, "__esModule", { 'value': true });
+       Object.defineProperty(Complex, "__esModule", {
+     '__esModule': false
+   });

Ran 1.00 tests per mutant on average.
------------|---------|----------|-----------|------------|----------|----------|
File        | % score | # killed | # timeout | # survived | # no cov | # errors |
------------|---------|----------|-----------|------------|----------|----------|
All files   |   61.23 |      589 |         0 |        373 |        0 |        0 |
 complex.js |   61.23 |      589 |         0 |        373 |        0 |        0 |
------------|---------|----------|-----------|------------|----------|----------|
[32m01:39:21 (2918) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/Complex.js/reports/mutation/mutation.html
[32m01:39:21 (2918) INFO MutationTestExecutor[39m Done in 8 minutes 26 seconds.

real	8m27.413s
user	8m36.841s
sys	1m27.322s
