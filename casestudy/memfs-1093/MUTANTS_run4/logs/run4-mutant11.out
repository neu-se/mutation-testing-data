
> memfs@4.15.1 test
> jest --maxWorkers 2

FAIL src/fsa-to-node/__tests__/FsaNodeFs.test.ts
  ● FsaNodeFs › .truncate() › can truncate a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .ftruncate() › can truncate a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .appendFile() › can create a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .appendFile() › can append to a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .appendFile() › can append to a file - 2

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .appendFile() › can append to a file - 2

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .write() › can write to a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .write() › can write to a file twice sequentially

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .writev() › can write to a file two buffers

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .access() › files › succeeds on file "write" check, on writable file system

    EACCESS: error occurred, access '/folder/file'

      144 |
      145 | export function createError(errorCode: string, func = '', path = '', path2 = '', Constructor = Error) {
    > 146 |   const error = new Constructor(formatError(errorCode, func, path, path2));
          |                 ^
      147 |   (error as any).code = errorCode;
      148 |
      149 |   if (path) {

      at Object.createError (src/node/util.ts:146:17)
      at src/fsa-to-node/FsaNodeFs.ts:412:26

  ● FsaNodeFs › .rename() › can rename a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .copyFile() › can copy a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .writeFile() › can create a new file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .createWriteStream() › can use stream to write to a new file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "ABCDEF",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "ABCDEF",
      }

      735 |       await new Promise(resolve => stream.once('close', resolve));
      736 |       expect(stream.bytesWritten).toBe(6);
    > 737 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      738 |         '/mountpoint/folder/file': 'test',
      739 |         '/mountpoint/folder/file2': 'ABCDEF',
      740 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:737:28)

  ● FsaNodeFs › .createWriteStream() › can use stream to write to a new file using strings

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "ABCDEF",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "ABCDEF",
      }

      752 |       await new Promise(resolve => stream.once('close', resolve));
      753 |       expect(stream.bytesWritten).toBe(6);
    > 754 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      755 |         '/mountpoint/folder/file': 'test',
      756 |         '/mountpoint/folder/file2': 'ABCDEF',
      757 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:754:28)

  ● FsaNodeFs › .createWriteStream() › can use stream to overwrite existing file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
    -   "/mountpoint/folder/file": "ABC",
    +   "/mountpoint/folder/file": "test",
    +   "/mountpoint/folder/file.crswap": "ABC",
      }

      768 |       await new Promise(resolve => stream.once('close', resolve));
      769 |       expect(stream.bytesWritten).toBe(3);
    > 770 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      771 |         '/mountpoint/folder/file': 'ABC',
      772 |         '/mountpoint/empty-folder': null,
      773 |         '/mountpoint/f.html': 'test',

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:770:28)

  ● FsaNodeFs › .createWriteStream() › can write by file descriptor

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
    -   "/mountpoint/folder/file": "tBCt",
    +   "/mountpoint/folder/file": "test",
    +   "/mountpoint/folder/file.crswap": "tBCt",
      }

      783 |       await new Promise(resolve => stream.once('close', resolve));
      784 |       expect(stream.bytesWritten).toBe(2);
    > 785 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      786 |         '/mountpoint/folder/file': 'tBCt',
      787 |         '/mountpoint/empty-folder': null,
      788 |         '/mountpoint/f.html': 'test',

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:785:28)

  ● FsaNodeFs › .createWriteStream() › does not close file if "autoClose" is false

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at Task.code (src/fsa-to-node/FsaNodeWriteStream.ts:99:14)
      at work (src/thingies/concurrency.ts:24:20)

  ● FsaNodeFs › .createWriteStream() › can use stream to add to existing file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
    -   "/mountpoint/folder/file": "ABCt",
    +   "/mountpoint/folder/file": "test",
    +   "/mountpoint/folder/file.crswap": "ABCt",
      }

      838 |       await new Promise(resolve => stream.once('close', resolve));
      839 |       expect(stream.bytesWritten).toBe(3);
    > 840 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      841 |         '/mountpoint/folder/file': 'ABCt',
      842 |         '/mountpoint/empty-folder': null,
      843 |         '/mountpoint/f.html': 'test',

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:840:28)

  ● FsaNodeFs › .createWriteStream() › can use stream to add to existing file at specified offset

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
    -   "/mountpoint/folder/file": "tABt",
    +   "/mountpoint/folder/file": "test",
    +   "/mountpoint/folder/file.crswap": "tABt",
      }

      853 |       await new Promise(resolve => stream.once('close', resolve));
      854 |       expect(stream.bytesWritten).toBe(2);
    > 855 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      856 |         '/mountpoint/folder/file': 'tABt',
      857 |         '/mountpoint/empty-folder': null,
      858 |         '/mountpoint/f.html': 'test',

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:855:28)

  ● FsaNodeFs › .createReadStream() › can pipe fs.ReadStream to fs.WriteStream

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "test",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "test",
      }

      890 |       readStream.pipe(writeStream);
      891 |       await new Promise(resolve => writeStream.once('close', resolve));
    > 892 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      893 |         '/mountpoint/folder/file': 'test',
      894 |         '/mountpoint/folder/file2': 'test',
      895 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:892:28)

  ● FsaNodeFs › .createReadStream() › can write to already open file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "test",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "test",
      }

      926 |       readStream.pipe(writeStream);
      927 |       await new Promise(resolve => writeStream.once('close', resolve));
    > 928 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      929 |         '/mountpoint/folder/file': 'test',
      930 |         '/mountpoint/folder/file2': 'test',
      931 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:928:28)

  ● FsaNodeFs › .createReadStream() › can read a specified slice of a file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "es",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "es",
      }

      940 |       readStream.pipe(writeStream);
      941 |       await new Promise(resolve => writeStream.once('close', resolve));
    > 942 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      943 |         '/mountpoint/folder/file': 'test',
      944 |         '/mountpoint/folder/file2': 'es',
      945 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:942:28)

FAIL src/__tests__/promises.test.ts (6.008 s)
  ● Promises API › FileHandle › fd › FileHandle should have a fd property

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › appendFile(data[, options]) › Append data to an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › appendFile(data[, options]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › chmod(mode) › Change mode of existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › chmod(mode) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › chown(uid, gid) › Change uid and gid of existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › chown(uid, gid) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › supports createWriteStream()

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate._onImmediate (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at src/volume.ts:2403:18
      at Immediate.<anonymous> (src/volume.ts:584:9)

  ● Promises API › FileHandle › supports createWriteStream()

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate._onImmediate (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at src/volume.ts:2569:18
      at Immediate.<anonymous> (src/volume.ts:584:9)

  ● Promises API › FileHandle › supports createWriteStream()

    thrown: "Exceeded timeout of 5000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      107 |         });
      108 |     });
    > 109 |     it('supports createWriteStream()', async () => {
          |     ^
      110 |       const vol = new Volume();
      111 |       const fh = await vol.promises.open('/test.txt', 'wx', 0o600);
      112 |       const writeStream = fh.createWriteStream({});

      at src/__tests__/promises.test.ts:109:5
      at src/__tests__/promises.test.ts:6:3
      at Object.<anonymous> (src/__tests__/promises.test.ts:5:1)

  ● Promises API › FileHandle › datasync() › Synchronize data with an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › datasync() › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › read(buffer, offset, length, position) › Read data from an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › read(buffer, offset, length, position) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › readv(buffers, position) › Read data from an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › readv(buffers, position) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › readFile([options]) › Read data from an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › readFile([options]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › stat() › Return stats of an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › stat() › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › truncate([len]) › Truncate an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › truncate([len]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › utimes(atime, mtime) › Changes times of an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › utimes(atime, mtime) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › write(buffer[, offset[, length[, position]]]) › Write data to an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › write(buffer[, offset[, length[, position]]]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › writev(buffers[, position]) › Write data to an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › writev(buffers[, position]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › writeFile(data[, options]) › Write data to an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › writeFile(data[, options]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › appendFile(path, data[, options]) › Append data to existing file using FileHandle

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › readFile(id[, options]) › Read existing file using FileHandle

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › writeFile(id, data[, options]) › Write data to existing file using FileHandle

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

FAIL src/crud/__tests__/matryoshka.test.ts
  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

PASS src/__tests__/volume/writeFileSync.test.ts
PASS src/node-to-fsa/__tests__/NodeFileSystemDirectoryHandle.test.ts
PASS src/__tests__/volume/readFile.test.ts
FAIL src/crud-to-cas/__tests__/CrudCas.test.ts
  ● CrudCas on FsaCrud › .put() › can store a blob

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .get() › can retrieve existing blob

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .get() › throws if blob does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .get() › throws if blob contents does not match the hash

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .get() › does not throw if integrity check is skipped

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .info() › can retrieve existing blob info

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .info() › throws if blob does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .del() › can delete an existing blob

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .del() › throws if blob does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .del() › does not throw if "silent" flag is provided

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

PASS src/__tests__/node.test.ts
PASS src/__tests__/index.test.ts
PASS src/snapshot/__tests__/json.test.ts
PASS src/__tests__/volume/writeSync.test.ts
FAIL src/node-to-fsa/__tests__/NodeFileSystemFileHandle.test.ts
  ● NodeFileSystemFileHandle › .createWritable() › .truncate() › can truncate file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .truncate() › can truncate file - 2

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .truncate() › can truncate up

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .truncate() › on up truncation bytes are nulled

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › overwrites the file when write is being executed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › writes at file start

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › can seek and then write

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › does not commit changes before .close() is called

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › does not commit changes if .abort() is called and removes the swap file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(options) › can write at offset, when providing position in write call

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(options) › can seek and then write

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(options) › can seek and then write

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

PASS src/__tests__/volume/closeSync.test.ts
PASS src/__tests__/volume/write.test.ts
PASS src/snapshot/__tests__/binary.test.ts
FAIL src/fsa-to-crud/__tests__/FsaCrud.test.ts
  ● FsaCrud › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

PASS src/__tests__/volume/readdirSync.test.ts
FAIL src/crud-to-cas/__tests__/CrudCasBase.test.ts
  ● CrudCas on FsaCrud › can use a custom hashing digest type

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › can use custom folder sharding strategy

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

PASS src/node-to-fsa/__tests__/NodeFileSystemSyncAccessHandle.test.ts
PASS src/node-to-crud/__tests__/FsaCrud.test.ts
PASS src/__tests__/volume/openSync.test.ts
PASS src/__tests__/volume/copyFileSync.test.ts
PASS src/__tests__/volume/mkdirSync.test.ts
PASS src/__tests__/volume/copyFile.test.ts
PASS src/snapshot/__tests__/sync.test.ts
PASS src/__tests__/volume/renameSync.test.ts
PASS src/__tests__/volume/utimesSync.test.ts
PASS src/__tests__/volume/rmSync.test.ts
PASS src/__tests__/volume/chmodSync.test.ts
PASS src/__tests__/volume/statSync.test.ts
PASS src/__tests__/volume/readSync.test.ts
PASS src/__tests__/volume/lutimesSync.test.ts
PASS src/__tests__/volume/rmPromise.test.ts
PASS src/__tests__/volume/appendFileSync.test.ts
PASS src/__tests__/volume/realpathSync.test.ts
PASS src/node-to-fsa/__tests__/NodeFileSystemWritableFileStream.test.ts
PASS src/snapshot/__tests__/async.test.ts
PASS src/node-to-fsa/__tests__/NodeFileSystemHandle.test.ts
FAIL src/node-to-fsa/__tests__/scenarios.test.ts
  ● scenarios › can init FSA from an arbitrary FS folder and execute operations

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

PASS src/print/__tests__/index.test.ts
FAIL src/__tests__/volume/WriteStream.test.ts
  ● WriteStream › should emit EACCES error when file has insufficient permissions

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate._onImmediate (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at src/volume.ts:2569:18
      at Immediate.<anonymous> (src/volume.ts:584:9)

FAIL src/__tests__/volume/ReadStream.test.ts
  ● ReadStream › should emit EACCES error when containing directory has insufficient permissions

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate._onImmediate (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at src/volume.ts:2403:18
      at Immediate.<anonymous> (src/volume.ts:584:9)

PASS src/__tests__/volume/exists.test.ts
node:events:515
    throw err; // Unhandled 'error' event
    ^

Error: Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')
    at Volume.closeFile (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:813:24)
    at Immediate._onImmediate (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:582:25)
    at processImmediate (node:internal/timers:483:21))
    at Volume.ReadStream.emit (node:events:513:17)
    at /Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:2403:18
    at Immediate.<anonymous> (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:584:9)
    at processImmediate (node:internal/timers:483:21) {
  code: 'ERR_UNHANDLED_ERROR',
  context: TypeError: Cannot read properties of undefined (reading 'fd')
      at Volume.closeFile (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:813:24)
      at Immediate._onImmediate (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21)
}

Node.js v20.19.0
PASS src/__tests__/volume/appendFile.test.ts
PASS src/__tests__/volume/FileHandle.test.ts
PASS src/__tests__/volume/rename.test.ts
PASS src/__tests__/volume/existsSync.test.ts
PASS src/fsa-to-node/__tests__/util.test.ts
PASS src/__tests__/volume/toString.test.ts
PASS src/node-to-fsa/__tests__/util.test.ts
PASS src/__tests__/setTimeoutUnref.test.ts
PASS src/__tests__/process.test.ts
PASS src/__tests__/setImmediate.test.ts
node:events:515
    throw err; // Unhandled 'error' event
    ^

Error: Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')
    at Volume.closeFile (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:813:24)
    at Immediate._onImmediate (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:582:25)
    at processImmediate (node:internal/timers:483:21))
    at Volume.ReadStream.emit (node:events:513:17)
    at /Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:2403:18
    at Immediate.<anonymous> (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:584:9)
    at processImmediate (node:internal/timers:483:21) {
  code: 'ERR_UNHANDLED_ERROR',
  context: TypeError: Cannot read properties of undefined (reading 'fd')
      at Volume.closeFile (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:813:24)
      at Immediate._onImmediate (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21)
}

Node.js v20.19.0
node:events:515
    throw err; // Unhandled 'error' event
    ^

Error: Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')
    at Volume.closeFile (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:813:24)
    at Immediate._onImmediate (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:582:25)
    at processImmediate (node:internal/timers:483:21))
    at Volume.ReadStream.emit (node:events:513:17)
    at /Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:2403:18
    at Immediate.<anonymous> (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:584:9)
    at processImmediate (node:internal/timers:483:21) {
  code: 'ERR_UNHANDLED_ERROR',
  context: TypeError: Cannot read properties of undefined (reading 'fd')
      at Volume.closeFile (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:813:24)
      at Immediate._onImmediate (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21)
}

Node.js v20.19.0
node:events:515
    throw err; // Unhandled 'error' event
    ^

Error: Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')
    at Volume.closeFile (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:813:24)
    at Immediate._onImmediate (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:582:25)
    at processImmediate (node:internal/timers:483:21))
    at Volume.ReadStream.emit (node:events:513:17)
    at /Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:2403:18
    at Immediate.<anonymous> (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:584:9)
    at processImmediate (node:internal/timers:483:21) {
  code: 'ERR_UNHANDLED_ERROR',
  context: TypeError: Cannot read properties of undefined (reading 'fd')
      at Volume.closeFile (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:813:24)
      at Immediate._onImmediate (/Users/franktip/git/mutation-testing-data/casestudy/memfs-1093/memfs/src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21)
}

Node.js v20.19.0
FAIL src/__tests__/volume.test.ts
  ● Test suite failed to run

    Jest worker encountered 4 child process exceptions, exceeding retry limit

      at ChildProcessWorker.initialize (node_modules/jest-worker/build/workers/ChildProcessWorker.js:181:21)

Summary of all failing tests
FAIL src/fsa-to-node/__tests__/FsaNodeFs.test.ts
  ● FsaNodeFs › .truncate() › can truncate a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .ftruncate() › can truncate a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .appendFile() › can create a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .appendFile() › can append to a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .appendFile() › can append to a file - 2

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .appendFile() › can append to a file - 2

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .write() › can write to a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .write() › can write to a file twice sequentially

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .writev() › can write to a file two buffers

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .access() › files › succeeds on file "write" check, on writable file system

    EACCESS: error occurred, access '/folder/file'

      144 |
      145 | export function createError(errorCode: string, func = '', path = '', path2 = '', Constructor = Error) {
    > 146 |   const error = new Constructor(formatError(errorCode, func, path, path2));
          |                 ^
      147 |   (error as any).code = errorCode;
      148 |
      149 |   if (path) {

      at Object.createError (src/node/util.ts:146:17)
      at src/fsa-to-node/FsaNodeFs.ts:412:26

  ● FsaNodeFs › .rename() › can rename a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .copyFile() › can copy a file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .writeFile() › can create a new file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaNodeFs › .createWriteStream() › can use stream to write to a new file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "ABCDEF",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "ABCDEF",
      }

      735 |       await new Promise(resolve => stream.once('close', resolve));
      736 |       expect(stream.bytesWritten).toBe(6);
    > 737 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      738 |         '/mountpoint/folder/file': 'test',
      739 |         '/mountpoint/folder/file2': 'ABCDEF',
      740 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:737:28)

  ● FsaNodeFs › .createWriteStream() › can use stream to write to a new file using strings

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "ABCDEF",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "ABCDEF",
      }

      752 |       await new Promise(resolve => stream.once('close', resolve));
      753 |       expect(stream.bytesWritten).toBe(6);
    > 754 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      755 |         '/mountpoint/folder/file': 'test',
      756 |         '/mountpoint/folder/file2': 'ABCDEF',
      757 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:754:28)

  ● FsaNodeFs › .createWriteStream() › can use stream to overwrite existing file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
    -   "/mountpoint/folder/file": "ABC",
    +   "/mountpoint/folder/file": "test",
    +   "/mountpoint/folder/file.crswap": "ABC",
      }

      768 |       await new Promise(resolve => stream.once('close', resolve));
      769 |       expect(stream.bytesWritten).toBe(3);
    > 770 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      771 |         '/mountpoint/folder/file': 'ABC',
      772 |         '/mountpoint/empty-folder': null,
      773 |         '/mountpoint/f.html': 'test',

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:770:28)

  ● FsaNodeFs › .createWriteStream() › can write by file descriptor

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
    -   "/mountpoint/folder/file": "tBCt",
    +   "/mountpoint/folder/file": "test",
    +   "/mountpoint/folder/file.crswap": "tBCt",
      }

      783 |       await new Promise(resolve => stream.once('close', resolve));
      784 |       expect(stream.bytesWritten).toBe(2);
    > 785 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      786 |         '/mountpoint/folder/file': 'tBCt',
      787 |         '/mountpoint/empty-folder': null,
      788 |         '/mountpoint/f.html': 'test',

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:785:28)

  ● FsaNodeFs › .createWriteStream() › does not close file if "autoClose" is false

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at Task.code (src/fsa-to-node/FsaNodeWriteStream.ts:99:14)
      at work (src/thingies/concurrency.ts:24:20)

  ● FsaNodeFs › .createWriteStream() › can use stream to add to existing file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
    -   "/mountpoint/folder/file": "ABCt",
    +   "/mountpoint/folder/file": "test",
    +   "/mountpoint/folder/file.crswap": "ABCt",
      }

      838 |       await new Promise(resolve => stream.once('close', resolve));
      839 |       expect(stream.bytesWritten).toBe(3);
    > 840 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      841 |         '/mountpoint/folder/file': 'ABCt',
      842 |         '/mountpoint/empty-folder': null,
      843 |         '/mountpoint/f.html': 'test',

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:840:28)

  ● FsaNodeFs › .createWriteStream() › can use stream to add to existing file at specified offset

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
    -   "/mountpoint/folder/file": "tABt",
    +   "/mountpoint/folder/file": "test",
    +   "/mountpoint/folder/file.crswap": "tABt",
      }

      853 |       await new Promise(resolve => stream.once('close', resolve));
      854 |       expect(stream.bytesWritten).toBe(2);
    > 855 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      856 |         '/mountpoint/folder/file': 'tABt',
      857 |         '/mountpoint/empty-folder': null,
      858 |         '/mountpoint/f.html': 'test',

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:855:28)

  ● FsaNodeFs › .createReadStream() › can pipe fs.ReadStream to fs.WriteStream

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "test",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "test",
      }

      890 |       readStream.pipe(writeStream);
      891 |       await new Promise(resolve => writeStream.once('close', resolve));
    > 892 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      893 |         '/mountpoint/folder/file': 'test',
      894 |         '/mountpoint/folder/file2': 'test',
      895 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:892:28)

  ● FsaNodeFs › .createReadStream() › can write to already open file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "test",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "test",
      }

      926 |       readStream.pipe(writeStream);
      927 |       await new Promise(resolve => writeStream.once('close', resolve));
    > 928 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      929 |         '/mountpoint/folder/file': 'test',
      930 |         '/mountpoint/folder/file2': 'test',
      931 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:928:28)

  ● FsaNodeFs › .createReadStream() › can read a specified slice of a file

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 2

      Object {
        "/mountpoint/empty-folder": null,
        "/mountpoint/f.html": "test",
        "/mountpoint/folder/file": "test",
    -   "/mountpoint/folder/file2": "es",
    +   "/mountpoint/folder/file2": "",
    +   "/mountpoint/folder/file2.crswap": "es",
      }

      940 |       readStream.pipe(writeStream);
      941 |       await new Promise(resolve => writeStream.once('close', resolve));
    > 942 |       expect(vol.toJSON()).toStrictEqual({
          |                            ^
      943 |         '/mountpoint/folder/file': 'test',
      944 |         '/mountpoint/folder/file2': 'es',
      945 |         '/mountpoint/empty-folder': null,

      at Object.<anonymous> (src/fsa-to-node/__tests__/FsaNodeFs.test.ts:942:28)

FAIL src/__tests__/promises.test.ts (6.008 s)
  ● Promises API › FileHandle › fd › FileHandle should have a fd property

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › appendFile(data[, options]) › Append data to an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › appendFile(data[, options]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › chmod(mode) › Change mode of existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › chmod(mode) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › chown(uid, gid) › Change uid and gid of existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › chown(uid, gid) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › supports createWriteStream()

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate._onImmediate (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at src/volume.ts:2403:18
      at Immediate.<anonymous> (src/volume.ts:584:9)

  ● Promises API › FileHandle › supports createWriteStream()

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate._onImmediate (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at src/volume.ts:2569:18
      at Immediate.<anonymous> (src/volume.ts:584:9)

  ● Promises API › FileHandle › supports createWriteStream()

    thrown: "Exceeded timeout of 5000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      107 |         });
      108 |     });
    > 109 |     it('supports createWriteStream()', async () => {
          |     ^
      110 |       const vol = new Volume();
      111 |       const fh = await vol.promises.open('/test.txt', 'wx', 0o600);
      112 |       const writeStream = fh.createWriteStream({});

      at src/__tests__/promises.test.ts:109:5
      at src/__tests__/promises.test.ts:6:3
      at Object.<anonymous> (src/__tests__/promises.test.ts:5:1)

  ● Promises API › FileHandle › datasync() › Synchronize data with an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › datasync() › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › read(buffer, offset, length, position) › Read data from an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › read(buffer, offset, length, position) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › readv(buffers, position) › Read data from an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › readv(buffers, position) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › readFile([options]) › Read data from an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › readFile([options]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › stat() › Return stats of an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › stat() › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › truncate([len]) › Truncate an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › truncate([len]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › utimes(atime, mtime) › Changes times of an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › utimes(atime, mtime) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › write(buffer[, offset[, length[, position]]]) › Write data to an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › write(buffer[, offset[, length[, position]]]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › writev(buffers[, position]) › Write data to an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › writev(buffers[, position]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › writeFile(data[, options]) › Write data to an existing file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › FileHandle › writeFile(data[, options]) › Reject when the file handle was closed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › appendFile(path, data[, options]) › Append data to existing file using FileHandle

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › readFile(id[, options]) › Read existing file using FileHandle

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● Promises API › writeFile(id, data[, options]) › Write data to existing file using FileHandle

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

FAIL src/crud/__tests__/matryoshka.test.ts
  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(memfs)) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(memfs))) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(memfs)))) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fs(fsa(fs(fsa(memfs))))) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CRUD matryoshka › crud(fsa(fs(fsa(fs(fsa(memfs)))))) › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

FAIL src/crud-to-cas/__tests__/CrudCas.test.ts
  ● CrudCas on FsaCrud › .put() › can store a blob

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .get() › can retrieve existing blob

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .get() › throws if blob does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .get() › throws if blob contents does not match the hash

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .get() › does not throw if integrity check is skipped

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .info() › can retrieve existing blob info

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .info() › throws if blob does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .del() › can delete an existing blob

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .del() › throws if blob does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › .del() › does not throw if "silent" flag is provided

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

FAIL src/node-to-fsa/__tests__/NodeFileSystemFileHandle.test.ts
  ● NodeFileSystemFileHandle › .createWritable() › .truncate() › can truncate file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .truncate() › can truncate file - 2

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .truncate() › can truncate up

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .truncate() › on up truncation bytes are nulled

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › overwrites the file when write is being executed

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › writes at file start

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › can seek and then write

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › does not commit changes before .close() is called

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(chunk) › does not commit changes if .abort() is called and removes the swap file

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(options) › can write at offset, when providing position in write call

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(options) › can seek and then write

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● NodeFileSystemFileHandle › .createWritable() › .write(options) › can seek and then write

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

FAIL src/fsa-to-crud/__tests__/FsaCrud.test.ts
  ● FsaCrud › .put() › can store a resource at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .put() › can store a resource in two levels deep collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .put() › can overwrite existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .put() › can choose to throw if item already exists

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .put() › can choose to throw if item does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .get() › throws if resource does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .get() › can fetch an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .del() › when collection is found but resource is not › throws by default

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .del() › when collection is found but resource is not › does not throw when "silent" flag set

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .del() › deletes an existing resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .info() › can retrieve information about a resource

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .info() › can retrieve information about a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .info() › throws when resource not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .info() › throws when collection not found

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .drop() › can recursively delete a collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .drop() › throws if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .drop() › when "silent" flag set, does not throw if collection does not exist

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .drop() › can recursively delete everything from root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .scan() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .scan() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .list() › can retrieve a list of resources and collections at root

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● FsaCrud › .list() › throws when trying to list a non-existing collection

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

FAIL src/crud-to-cas/__tests__/CrudCasBase.test.ts
  ● CrudCas on FsaCrud › can use a custom hashing digest type

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

  ● CrudCas on FsaCrud › can use custom folder sharding strategy

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

FAIL src/node-to-fsa/__tests__/scenarios.test.ts
  ● scenarios › can init FSA from an arbitrary FS folder and execute operations

    TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate.<anonymous> (src/volume.ts:582:25)

FAIL src/__tests__/volume/WriteStream.test.ts
  ● WriteStream › should emit EACCES error when file has insufficient permissions

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate._onImmediate (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at src/volume.ts:2569:18
      at Immediate.<anonymous> (src/volume.ts:584:9)

FAIL src/__tests__/volume/ReadStream.test.ts
  ● ReadStream › should emit EACCES error when containing directory has insufficient permissions

    Unhandled error. (TypeError: Cannot read properties of undefined (reading 'fd')

      811 |
      812 |   private closeFile(file: File) {
    > 813 |     if (!this.fds[file.fd]) return;
          |                        ^
      814 |
      815 |     this.openFiles--;
      816 |     delete this.fds[file.fd];

      at Volume.closeFile (src/volume.ts:813:24)
      at Immediate._onImmediate (src/volume.ts:582:25)
      at processImmediate (node:internal/timers:483:21))
      at src/volume.ts:2403:18
      at Immediate.<anonymous> (src/volume.ts:584:9)

FAIL src/__tests__/volume.test.ts
  ● Test suite failed to run

    Jest worker encountered 4 child process exceptions, exceeding retry limit

      at ChildProcessWorker.initialize (node_modules/jest-worker/build/workers/ChildProcessWorker.js:181:21)


Test Suites: 11 failed, 43 passed, 54 total
Tests:       213 failed, 3 skipped, 626 passed, 842 total
Snapshots:   14 passed, 14 total
Time:        48.77 s
Ran all test suites.
