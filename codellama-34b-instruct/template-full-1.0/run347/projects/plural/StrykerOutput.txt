*** using precomputed mutations ***
[32m12:28:48 (2633) INFO ConfigReader[39m No config file specified. Running with command line arguments.
[32m12:28:48 (2633) INFO ConfigReader[39m Use `stryker init` command to generate your config file.
[33m12:28:48 (2633) WARN PluginLoader[39m Error during loading "@stryker-mutator/karma-runner" plugin:
  Cannot find module 'karma'
Require stack:
- /home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/node_modules/@stryker-mutator/util/dist/src/require-resolve.js
[33m12:28:48 (2633) WARN OptionsValidator[39m Unknown stryker config option "usePrecomputed".
[33m12:28:48 (2633) WARN OptionsValidator[39m Possible causes:
     * Is it a typo on your end?
     * Did you only write this property as a comment? If so, please postfix it with "_comment".
     * You might be missing a plugin that is supposed to use it. Stryker loaded plugins from: ["@stryker-mutator/*"]
     * The plugin that is using it did not contribute explicit validation. 
     (disable "warnings.unknownOptions" to ignore this warning)
[32m12:28:49 (2633) INFO ProjectReader[39m Found 1 of 632 file(s) to be mutated.
*** using precomputed mutator ***
*** retrieving 308 mutants from MUTATION_TESTING/template-full_codellama-34b-instruct_1.0/mutants.json ***
Mutant 0 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, -2)
Mutant 1 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, -9)
Mutant 2 in index.js: Object.prototype.toString.call(obj).slice(8, -1) replaced with Object.prototype.toString.call(obj).slice(8, -1, 7)
Mutant 3 in index.js: obj replaced with addRule(/[aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
})
Mutant 4 in index.js: obj replaced with addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
})
Mutant 5 in index.js: obj replaced with addRule(/[aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 2) + 'ies';
})
Mutant 6 in index.js: 8 replaced with 7
Mutant 7 in index.js: 8 replaced with 10
Mutant 8 in index.js: -1 replaced with 0
Mutant 9 in index.js: -1 replaced with Math.floor(str.length / 2)
Mutant 10 in index.js: -1 replaced with str.length * 2
Mutant 11 in index.js: rules.unshift replaced with rules.push
Mutant 12 in index.js: rules.unshift replaced with rules.shift
Mutant 13 in index.js: rules.unshift replaced with rules.pop
Mutant 14 in index.js: [match, result] replaced with [result, match]
Mutant 15 in index.js: [match, result] replaced with [match, null]
Mutant 16 in index.js: [match, result] replaced with [match, undefined]
Mutant 17 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiouy]y$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
})
Mutant 18 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
})
Mutant 19 in index.js: addRule(/[^aeiou]y$|quy$/i, function (w) {
  return w.substr(0, w.length - 1) + 'ies';
}) replaced with addRule(/[^aeiouy]y$/i, function (w) {
  return w.replace(/y$/, 'ies');
})
Mutant 20 in index.js: /[^aeiou]y$|quy$/i replaced with /[^aeiou]y$/i
Mutant 21 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'oes';
}
Mutant 22 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'x';
}
Mutant 23 in index.js: function (w) {
  return w.substr(0, w.length - 1) + 'ies';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'yz';
}
Mutant 24 in index.js: w.substr(0, w.length - 1) replaced with w.substr(1, w.length - 1)
Mutant 25 in index.js: w.substr(0, w.length - 1) replaced with w.substr(0, w.length)
Mutant 26 in index.js: w.substr(0, w.length - 1) replaced with w.substr(w.length - 2, w.length)
Mutant 27 in index.js: w.substr replaced with w.substring
Mutant 28 in index.js: 0 replaced with -1
Mutant 29 in index.js: w.length - 1 replaced with w.length * 2
Mutant 30 in index.js: w.length - 1 replaced with w.length + 1
Mutant 31 in index.js: w.length - 1 replaced with w.length - 3
Mutant 32 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return '';
})
Mutant 33 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 'is';
})
Mutant 34 in index.js: addRule(/x$|ch$|s$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/x$|ch$|s$/i, function (w) {
  return w + 'ifies';
})
Mutant 35 in index.js: /x$|ch$|s$/i replaced with /x\|ch\|s$/i
Mutant 36 in index.js: /x$|ch$|s$/i replaced with /x|ch|s$/i
Mutant 37 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'is';
}
Mutant 38 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.slice(0, -1) + 'es';
}
Mutant 39 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w[0] + 'es';
}
Mutant 40 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|fungus|cactus|focus/i, function (w) {
  return w.substr(0, w.length - 3) + 'i';
})
Mutant 41 in index.js: addRule(/nucleus|syllabus|focus|fungus|cactus/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
}) replaced with addRule(/nucleus|syllabus|fungus|cactus|focus/i, function (w) {
  return w.substr(0, w.length - 2) + 'us';
})
Mutant 42 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /(?<!\w)(nucleus|syllabus|focus|fungus|cactus)/gi
Mutant 43 in index.js: /nucleus|syllabus|focus|fungus|cactus/i replaced with /\b(nucleus|syllabus|focus|fungus|cactus)\b/gi
Mutant 44 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'is';
}
Mutant 45 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'us';
}
Mutant 46 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'i';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'um';
}
Mutant 47 in index.js: w.substr(0, w.length - 2) replaced with w.substr(0, w.length - 1)
Mutant 48 in index.js: w.substr(0, w.length - 2) replaced with w.substr(1, w.length - 2)
Mutant 49 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 1, w.length)
Mutant 50 in index.js: w.substr replaced with w.substring
Mutant 51 in index.js: w.substr replaced with w.lastIndexOf
Mutant 52 in index.js: w.substr replaced with w.indexOf
Mutant 53 in index.js: 0 replaced with 1
Mutant 54 in index.js: 0 replaced with 0.99
Mutant 55 in index.js: 0 replaced with "a"
Mutant 56 in index.js: w.length - 2 replaced with w.length - 4
Mutant 57 in index.js: w.length - 2 replaced with w.length - 5
Mutant 58 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/(?:thesis|crisis)$/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
})
Mutant 59 in index.js: addRule(/thesis|crisis/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
}) replaced with addRule(/(?!thesis|crisis)$/i, function (w) {
  return w.substr(0, w.length - 2) + 'es';
})
Mutant 60 in index.js: /thesis|crisis/i replaced with /thesis|crisis|abstract|summary/i
Mutant 61 in index.js: /thesis|crisis/i replaced with /thesis|crisis|multiplicity/i
Mutant 62 in index.js: /thesis|crisis/i replaced with /thesis|crisis|none/i
Mutant 63 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w + 'es';
}
Mutant 64 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 65 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'es';
} replaced with function (w) {
  return w.replace(/s$/, 'es');
}
Mutant 66 in index.js: w.substr replaced with w.slice
Mutant 67 in index.js: w.substr replaced with w.substring
Mutant 68 in index.js: w.substr replaced with w.charAt
Mutant 69 in index.js: 0 replaced with -1
Mutant 70 in index.js: 0 replaced with length - 1 - w.length
Mutant 71 in index.js: w.length - 2 replaced with w.length - 3
Mutant 72 in index.js: w.length - 2 replaced with w.length - 4
Mutant 73 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 3) + 'ices';
})
Mutant 74 in index.js: addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'ices';
}) replaced with addRule(/appendix|index/i, function (w) {
  return w.substr(0, w.length - 2) + 'i';
})
Mutant 75 in index.js: /appendix|index/i replaced with /appendix|ind|code/i
Mutant 76 in index.js: /appendix|index/i replaced with /appendix|index|[^aeiou]$/i
Mutant 77 in index.js: /appendix|index/i replaced with /appendix|index|[^aeiou]$|2$/i
Mutant 78 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'osis';
}
Mutant 79 in index.js: function (w) {
  return w.substr(0, w.length - 2) + 'ices';
} replaced with function (w) {
  return w.substr(0, w.length - 2) + 'uses';
}
Mutant 80 in index.js: w.substr(0, w.length - 2) replaced with w.substr(0, w.length - 3)
Mutant 81 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 3, 0)
Mutant 82 in index.js: w.substr(0, w.length - 2) replaced with w.substr(w.length - 4, 0)
Mutant 83 in index.js: 0 replaced with 1
Mutant 84 in index.js: 0 replaced with word.length - 1
Mutant 85 in index.js: 0 replaced with Math.floor(word.length / 2)
Mutant 86 in index.js: w.length - 2 replaced with w.length - w.length
Mutant 87 in index.js: w.length - 2 replaced with w.length + w.length
Mutant 88 in index.js: w.length - 2 replaced with w.length / 2
Mutant 89 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 's';
})
Mutant 90 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
})
Mutant 91 in index.js: addRule(/[aeiouy]o$/i, function (w) {
  return w + 's';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es' + 's';
})
Mutant 92 in index.js: /[aeiouy]o$/i replaced with /[^aeiou]o$/i
Mutant 93 in index.js: /[aeiouy]o$/i replaced with /[aeiouy]|o$/i
Mutant 94 in index.js: /[aeiouy]o$/i replaced with /[aeiouy]|(o)$/i
Mutant 95 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'x';
}
Mutant 96 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return w + 'es';
}
Mutant 97 in index.js: function (w) {
  return w + 's';
} replaced with function (w) {
  return 's' + w;
}
Mutant 98 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/g, function (w) {
  return w + 'es';
})
Mutant 99 in index.js: addRule(/[^aeiouy]o$/i, function (w) {
  return w + 'es';
}) replaced with addRule(/[^aeiouy]o$/i, function (w) {
  return w + 's';
})
Mutant 100 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]u$/i
Mutant 101 in index.js: /[^aeiouy]o$/i replaced with /[^aeiouy]y$/i
Mutant 102 in index.js: /[^aeiouy]o$/i replaced with /[^aeiou]o$/i
Mutant 103 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 's';
}
Mutant 104 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w + 'ies';
}
Mutant 105 in index.js: function (w) {
  return w + 'es';
} replaced with function (w) {
  return w.substr(0, w.length - 1) + 'es';
}
Mutant 106 in index.js: w === 'dwarf' || w === 'roof' replaced with w !== 'dwarf' && w !== 'roof'
Mutant 107 in index.js: w === 'dwarf' || w === 'roof' replaced with w === 'dwarf' && w === 'roof'
Mutant 108 in index.js: w === 'dwarf' || w === 'roof' replaced with w.length > 5
Mutant 109 in index.js: w.replace(regex, 'ves') replaced with w.replace(regex, 'verifies')
Mutant 110 in index.js: w.replace(regex, 'ves') replaced with w.replace(regex, 'is')
Mutant 111 in index.js: w.replace(regex, 'ves') replaced with w.replace(regex, '')
Mutant 112 in index.js: 'ves' replaced with 'vozes'
Mutant 113 in index.js: 'ves' replaced with 'es'
Mutant 114 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criteriums')
Mutant 115 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'invalid')
Mutant 116 in index.js: addRule('criterion', 'criteria') replaced with addRule('criterion', 'criterions')
Mutant 117 in index.js: 'criterion' replaced with 'criteria'
Mutant 118 in index.js: 'criterion' replaced with 'criterionz'
Mutant 119 in index.js: 'criteria' replaced with 'criterion'
Mutant 120 in index.js: 'criteria' replaced with 'criterions'
Mutant 121 in index.js: 'criteria' replaced with 'criterionz'
Mutant 122 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bactaria')
Mutant 123 in index.js: addRule('bacterium', 'bacteria') replaced with addRule('bacterium', 'bacteria' + 1)
Mutant 124 in index.js: 'bacterium' replaced with /bacteria$/i.test(w) ? 'bacteria' : 'bacterium'
Mutant 125 in index.js: 'bacterium' replaced with w === 'bacteria' ? 'bacteria' : 'bacterium'
Mutant 126 in index.js: 'bacteria' replaced with 'bacteria' + 's'
Mutant 127 in index.js: 'bacteria' replaced with 'bacteria'[0] + 's'
Mutant 128 in index.js: 'bacteria' replaced with 'bacteria'[Math.floor(Math.random() * 'bacteria'.length)] + 's'
Mutant 129 in index.js: addRule('memo', 'memos') replaced with addRule('memo', () => 'memors')
Mutant 130 in index.js: addRule('memo', 'memos') replaced with addRule('hello', 'hella')
Mutant 131 in index.js: addRule('memo', 'memos') replaced with addRule('M', 'm')
Mutant 132 in index.js: 'memo' replaced with 'meme'
Mutant 133 in index.js: 'memo' replaced with 'memoize'
Mutant 134 in index.js: 'memos' replaced with 'memo'
Mutant 135 in index.js: 'memos' replaced with ' Memory'
Mutant 136 in index.js: 'memos' replaced with 'Memories'
Mutant 137 in index.js: addRule('cello', 'cellos') replaced with addRule('cello', 'crackers')
Mutant 138 in index.js: addRule('cello', 'cellos') replaced with addRule('cello', 'criminies')
Mutant 139 in index.js: addRule('cello', 'cellos') replaced with addRule('cello', 'cello')
Mutant 140 in index.js: 'cellos' replaced with 'cell'
Mutant 141 in index.js: 'cellos' replaced with 'celli'
Mutant 142 in index.js: 'cellos' replaced with 'celle'
Mutant 143 in index.js: addRule('die', 'dice') replaced with addRule('dice', 'strike')
Mutant 144 in index.js: addRule('die', 'dice') replaced with addRule('dice', 'bite')
Mutant 145 in index.js: addRule('die', 'dice') replaced with addRule('dice', 'collie')
Mutant 146 in index.js: 'die' replaced with 'die' + 's'
Mutant 147 in index.js: 'die' replaced with 100
Mutant 148 in index.js: 'die' replaced with 'Hello'
Mutant 149 in index.js: 'dice' replaced with 'dices'
Mutant 150 in index.js: 'dice' replaced with 'eye'
Mutant 151 in index.js: addRule('goose', 'geese') replaced with addRule('babys', 'babies')
Mutant 152 in index.js: addRule('goose', 'geese') replaced with addRule('kit', 'kits')
Mutant 153 in index.js: addRule('goose', 'geese') replaced with addRule('bus', 'buseses')
Mutant 154 in index.js: 'goose' replaced with 'gooses'
Mutant 155 in index.js: 'goose' replaced with 'geese'
Mutant 156 in index.js: 'geese' replaced with 'goosese'
Mutant 157 in index.js: 'geese' replaced with 'goosey'
Mutant 158 in index.js: 'geese' replaced with 'goouses'
Mutant 159 in index.js: addRule('mouse', 'mice') replaced with addRule('mice', 'mouse')
Mutant 160 in index.js: addRule('mouse', 'mice') replaced with addRule('mouses', 'mouse')
Mutant 161 in index.js: addRule('mouse', 'mice') replaced with addRule('mous', 'mouse')
Mutant 162 in index.js: 'mouse' replaced with 'mice'
Mutant 163 in index.js: 'mouse' replaced with 'mat'
Mutant 164 in index.js: 'mouse' replaced with 'house'
Mutant 165 in index.js: 'mice' replaced with 'cat'
Mutant 166 in index.js: 'mice' replaced with 'pants'
Mutant 167 in index.js: 'mice' replaced with 'platoms'
Mutant 168 in index.js: addRule('person', 'people') replaced with addRule('people', 'people')
Mutant 169 in index.js: addRule('person', 'people') replaced with addRule('person', 'people', 'people')
Mutant 170 in index.js: addRule('person', 'people') replaced with addRule('person', null)
Mutant 171 in index.js: 'person' replaced with 'persons'
Mutant 172 in index.js: 'person' replaced with 'people'
Mutant 173 in index.js: 'person' replaced with 'peoples'
Mutant 174 in index.js: 'people' replaced with 'persons'
Mutant 175 in index.js: 'people' replaced with 'antelope'
Mutant 176 in index.js: 'people' replaced with 'zebra'
Mutant 177 in index.js: addRule('chilli', 'chillies') replaced with addRule('chili', 'chillis')
Mutant 178 in index.js: addRule('chilli', 'chillies') replaced with addRule('chilli', 'chillis')
Mutant 179 in index.js: 'chilli' replaced with 'chillis'
Mutant 180 in index.js: 'chilli' replaced with 'cillies'
Mutant 181 in index.js: 'chillies' replaced with 'chili'
Mutant 182 in index.js: 'chillies' replaced with 'chill'
Mutant 183 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^(?:wo)?man$/i, function (w) {
  return w + 's';
})
Mutant 184 in index.js: addRule(/^(?:wo)?man$/i, function (w) {
  return w.replace(/a/, 'e');
}) replaced with addRule(/^(?:wo)?man$/i, function (w) {
  return w.slice(0, w.length - 1) + 'ies';
})
Mutant 185 in index.js: /^(?:wo)?man$/i replaced with /^(?:wo)?\w+/i
Mutant 186 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/[aeiouy]o$/i, 'e');
}
Mutant 187 in index.js: function (w) {
  return w.replace(/a/, 'e');
} replaced with function (w) {
  return w.replace(/^[aeiouy]o$/i, 'e');
}
Mutant 188 in index.js: w.replace(/a/, 'e') replaced with w.replace('^a', 'e')
Mutant 189 in index.js: w.replace(/a/, 'e') replaced with w.replace('/a/', 'e')
Mutant 190 in index.js: w.replace replaced with w.split
Mutant 191 in index.js: w.replace replaced with w.toLowerCase
Mutant 192 in index.js: w.replace replaced with w.includes
Mutant 193 in index.js: /a/ replaced with /a/ig
Mutant 194 in index.js: /a/ replaced with /.*/
Mutant 195 in index.js: /a/ replaced with /\b/
Mutant 196 in index.js: 'e' replaced with ' '
Mutant 197 in index.js: 'e' replaced with 'f'
Mutant 198 in index.js: 'e' replaced with 'a'
Mutant 199 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:buffalo|deer|sheep|goat)\b/i, function (w) {
  return w;
})
Mutant 200 in index.js: addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:bison|cod|deer|fowl|halibut|moose)\b/i, function (w) {
  return w.toLowerCase();
})
Mutant 201 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /^\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i
Mutant 202 in index.js: /\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i replaced with /(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i
Mutant 203 in index.js: function (w) {
  return w;
} replaced with "return w + 's'"
Mutant 204 in index.js: function (w) {
  return w;
} replaced with "return w + 'es'"
Mutant 205 in index.js: function (w) {
  return w;
} replaced with "return w + 'ies'"
Mutant 206 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(/\\b(?:tools|clothes|games|illnesses|misc)s\\b/i)
Mutant 207 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(/\\b(?:trouser|pant|pantie|clothe)s\\b/i)
Mutant 208 in index.js: addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function (w) {
  return w;
}) replaced with addRule(/\\b(?:billiard|bowl|card|dart|skittle|draught)s\\b/i)
Mutant 209 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'gi')
Mutant 210 in index.js: new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i') replaced with new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')es\\b', 'i')
Mutant 211 in index.js: tools.concat(clothes, games, illnesses, misc).join replaced with words.join | replace
Mutant 212 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(["trowsers"])
Mutant 213 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(["trousers", "pantis"])
Mutant 214 in index.js: tools.concat(clothes, games, illnesses, misc) replaced with tools.concat(["trousers", "panties"])
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(["trowsers"])
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(["trousers", "pantis"])
not replacing tools.concat(clothes, games, illnesses, misc) with tools.concat(["trousers", "panties"])
Mutant 215 in index.js: clothes replaced with hats
Mutant 216 in index.js: clothes replaced with obstacles
Mutant 217 in index.js: clothes replaced with charisma
Mutant 218 in index.js: games replaced with {}
Mutant 219 in index.js: games replaced with "puzzles"
Mutant 220 in index.js: games replaced with Math.floor(Math.random() * 10)
Mutant 221 in index.js: illnesses replaced with illnesses.filter(function (word) {
  return word === 'diabete';
})
Mutant 222 in index.js: illnesses replaced with illnesses.map(function (word) {
  return word.substring(0, 3) + 's';
})
Mutant 223 in index.js: illnesses replaced with illnesses.slice(0, -1)
Mutant 224 in index.js: misc replaced with misc.map(Function.prototype.call, [])
Mutant 225 in index.js: misc replaced with misc.filter(Boolean)
Mutant 226 in index.js: misc replaced with misc.splice(0, misc.length)
Mutant 227 in index.js: '|' replaced with ' | '
Mutant 228 in index.js: '|' replaced with ' '
Mutant 229 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toLowerCase();
}
Mutant 230 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + "es";
}
Mutant 231 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.slice(0, -1);
}
Mutant 232 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics[^i]$/i, function (w) {
  return w;
})
Mutant 233 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/g, function (w) {
  return w;
})
Mutant 234 in index.js: addRule(/ics$/i, function (w) {
  return w;
}) replaced with addRule(/ics$/, function (w) {
  return w.repeat(2);
})
Mutant 235 in index.js: /ics$/i replaced with /ic$/i
Mutant 236 in index.js: /ics$/i replaced with /ic$|ci$/i
Mutant 237 in index.js: /ics$/i replaced with /icate$/i
Mutant 238 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w;
}
Mutant 239 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w * 2;
}
Mutant 240 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w + 1;
}
Mutant 241 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/g, function (w) {
  return w.split('').reverse().join('');
})
Mutant 242 in index.js: addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
  return w;
}) replaced with addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/g, function (w) {
  return w.substr(1);
})
Mutant 243 in index.js: /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i replaced with /\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/g
Mutant 244 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.toLowerCase();
}
Mutant 245 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return w.split('').reverse().join('');
}
Mutant 246 in index.js: function (w) {
  return w;
} replaced with function (w) {
  return Math.random() < 0.5 ? w.toUpperCase() : w.toLowerCase();
}
Mutant 247 in index.js: num !== 1 || num === undefined replaced with num === 1
Mutant 248 in index.js: num !== 1 || num === undefined replaced with num !== 1 && num !== undefined
Mutant 249 in index.js: num !== 1 || num === undefined replaced with num !== 1 || typeof num === 'undefined'
Mutant 250 in index.js: i < rules.length replaced with i !== rules.length
Mutant 251 in index.js: i < rules.length replaced with i >= rules.length
Mutant 252 in index.js: i < rules.length replaced with i > rules.length
Mutant 253 in index.js: i++ replaced with i--
Mutant 254 in index.js: i++ replaced with i += 2
Mutant 255 in index.js: i++ replaced with i = rules.length
Mutant 256 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with rule[0].matches(word)
Mutant 257 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with word.match(rule[0])
Mutant 258 in index.js: type(rule[0]) === 'RegExp' && rule[0].test(word) replaced with typeof word === rule[0]
Mutant 259 in index.js: type replaced with typeof rule[0]
Mutant 260 in index.js: type replaced with rule[0].constructor.name
Mutant 261 in index.js: rule[0] replaced with rule[1]
Mutant 262 in index.js: rule[0] replaced with !rule[0]
Mutant 263 in index.js: rule[0] replaced with rule.length
Mutant 264 in index.js: word replaced with 1 + word
Mutant 265 in index.js: word replaced with word + "abc"
Mutant 266 in index.js: word replaced with word + 1
Mutant 267 in index.js: rule[1] replaced with rule[2]
Mutant 268 in index.js: rule[1] replaced with rule[1].toLowerCase()
Mutant 269 in index.js: rule[1] replaced with rule[1].substr(1)
Mutant 270 in index.js: rule[1](word, rule[0]) replaced with rule[1](word + 's', rule[0])
Mutant 271 in index.js: rule[1](word, rule[0]) replaced with rule[1](word + word, rule[0])
Mutant 272 in index.js: rule[1](word, rule[0]) replaced with rule[1](word.toUpperCase(), rule[0])
Mutant 273 in index.js: word replaced with word + 's'
Mutant 274 in index.js: word replaced with word[0] + 's'
Mutant 275 in index.js: word replaced with word.toUpperCase() + 's'
Mutant 276 in index.js: rule[0] replaced with rule[1]
Mutant 277 in index.js: rule[0] replaced with word.match(rule[0])[1]
Mutant 278 in index.js: rule[0] replaced with word.replace(rule[0], '')
Mutant 279 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) !== 'String' || rule[0] !== word
Mutant 280 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) === 'RegExp' && rule[0].test(word)
Mutant 281 in index.js: type(rule[0]) === 'String' && rule[0] === word replaced with type(rule[0]) !== 'RegExp' || rule[0].test(word)
Mutant 282 in index.js: type replaced with rule.type
Mutant 283 in index.js: type replaced with Object.prototype.toString.call
Mutant 284 in index.js: rule[0] replaced with rule[1]
Mutant 285 in index.js: rule[0] replaced with rule[2]
Mutant 286 in index.js: rule[0] replaced with rule[0] + rule[1]
Mutant 287 in index.js: rule[1] replaced with rule[0]
Mutant 288 in index.js: rule[1] replaced with rule[2]
Mutant 289 in index.js: rule[1] replaced with true
Mutant 290 in index.js: rule[1] replaced with rule[2]
Mutant 291 in index.js: rule[1] replaced with rule[0]
Mutant 292 in index.js: rule[1] replaced with rules.length
Mutant 293 in index.js: word replaced with word + "s"
Mutant 294 in index.js: word replaced with word.slice(0, -1)
Mutant 295 in index.js: word replaced with word[word.length - 1]
Mutant 296 in index.js: String.prototype.plural === undefined replaced with String.prototype.plural = function (num) {
  return plural(this, num);
}
Mutant 297 in index.js: plural(this, num) replaced with plural("foo")
Mutant 298 in index.js: plural(this, num) replaced with plural(num + 1)
Mutant 299 in index.js: plural(this, num) replaced with plural(typeof num === "number")
Mutant 300 in index.js: plural replaced with 1
Mutant 301 in index.js: plural replaced with plural * num
Mutant 302 in index.js: plural replaced with plural + num
Mutant 303 in index.js: this replaced with null
Mutant 304 in index.js: this replaced with ''
Mutant 305 in index.js: this replaced with ' '
Mutant 306 in index.js: num replaced with !num
Mutant 307 in index.js: num replaced with num + 1
[32m12:28:49 (2633) INFO Instrumenter[39m Instrumented 1 source file(s) with 308 mutant(s)
[32m12:28:49 (2633) INFO ConcurrencyTokenProvider[39m Creating 1 test runner process(es).
[32m12:28:50 (2633) INFO BroadcastReporter[39m Detected that current console does not support the "progress" reporter, downgrading to "progress-append-only" reporter
[32m12:28:50 (2633) INFO DryRunExecutor[39m Starting initial test run (command test runner with "perTest" coverage analysis). This may take a while.
[32m12:28:50 (2633) INFO DryRunExecutor[39m Initial test run succeeded. Ran 1 tests in 0 seconds (net 507 ms, overhead 1 ms).
Mutation testing 1% (elapsed: <1m, remaining: ~12m) 4/308 tested (1 survived, 1 timed out)
Mutation testing 2% (elapsed: <1m, remaining: ~12m) 8/308 tested (1 survived, 3 timed out)
Mutation testing 8% (elapsed: <1m, remaining: ~5m) 27/308 tested (1 survived, 3 timed out)
Mutation testing 15% (elapsed: <1m, remaining: ~3m) 47/308 tested (2 survived, 3 timed out)
Mutation testing 21% (elapsed: <1m, remaining: ~2m) 67/308 tested (10 survived, 3 timed out)
Mutation testing 28% (elapsed: ~1m, remaining: ~2m) 88/308 tested (11 survived, 3 timed out)
Mutation testing 35% (elapsed: ~1m, remaining: ~2m) 108/308 tested (17 survived, 3 timed out)
Mutation testing 41% (elapsed: ~1m, remaining: ~1m) 128/308 tested (22 survived, 3 timed out)
Mutation testing 48% (elapsed: ~1m, remaining: ~1m) 148/308 tested (29 survived, 3 timed out)
Mutation testing 54% (elapsed: ~1m, remaining: ~1m) 168/308 tested (29 survived, 3 timed out)
Mutation testing 61% (elapsed: ~1m, remaining: ~1m) 188/308 tested (30 survived, 3 timed out)
Mutation testing 67% (elapsed: ~2m, remaining: <1m) 209/308 tested (32 survived, 3 timed out)
Mutation testing 74% (elapsed: ~2m, remaining: <1m) 229/308 tested (34 survived, 3 timed out)
Mutation testing 80% (elapsed: ~2m, remaining: <1m) 249/308 tested (36 survived, 3 timed out)
Mutation testing 87% (elapsed: ~2m, remaining: <1m) 269/308 tested (39 survived, 3 timed out)
Mutation testing 94% (elapsed: ~2m, remaining: <1m) 290/308 tested (45 survived, 3 timed out)

All tests
  ✓ All tests (killed 245)

[Survived] PrecomputedMutator
index.js:6:10
-     return Object.prototype.toString.call(obj).slice(8, -1)
+     return Object.prototype.toString.call(obj).slice(8, -1, 7)

[Survived] PrecomputedMutator
index.js:16:50
-   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substr(0, w.length - 1) + 'ies' })
+   addRule(/[^aeiou]y$|quy$/i, function(w) { return w.substring(0, w.length - 1) + 'ies' })

[Survived] PrecomputedMutator
index.js:22:71
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substring(0, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:80
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0.99, w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:22:80
-   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr(0, w.length - 2) + 'i' });
+   addRule(/nucleus|syllabus|focus|fungus|cactus/i, function(w) { return w.substr("a", w.length - 2) + 'i' });

[Survived] PrecomputedMutator
index.js:23:1
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/(?:thesis|crisis)$/i, function (w) {
+     return w.substr(0, w.length - 2) + 'es';
+   });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|abstract|summary/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|multiplicity/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:9
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis|none/i, function(w) { return w.substr(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.slice(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:23:48
-   addRule(/thesis|crisis/i, function(w) { return w.substr(0, w.length - 2) + 'es' });
+   addRule(/thesis|crisis/i, function(w) { return w.substring(0, w.length - 2) + 'es' });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function (w) {
+     return w + 's';
+   });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function (w) {
+     return w + 'es';
+   });

[Survived] PrecomputedMutator
index.js:27:1
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiouy]o$/i, function (w) {
+     return w + 'es' + 's';
+   });

[Survived] PrecomputedMutator
index.js:27:9
-   addRule(/[aeiouy]o$/i, function(w) { return w + 's' });
+   addRule(/[^aeiou]o$/i, function(w) { return w + 's' });

[Survived] PrecomputedMutator
index.js:28:1
-   addRule(/[^aeiouy]o$/i, function(w) { return w + 'es' });
+   addRule(/[^aeiouy]o$/g, function (w) {
+     return w + 'es';
+   });

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (w === 'dwarf' && w === 'roof') {

[Survived] PrecomputedMutator
index.js:33:7
-     if (w === 'dwarf' || w === 'roof') {
+     if (w.length > 5) {

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bactaria')

[Survived] PrecomputedMutator
index.js:40:1
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteria' + 1)

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteria' + 's')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteria'[0] + 's')

[Survived] PrecomputedMutator
index.js:40:22
-   addRule('bacterium', 'bacteria')
+   addRule('bacterium', 'bacteria'[Math.floor(Math.random() * 'bacteria'.length)] + 's')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cello', 'crackers')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cello', 'criminies')

[Survived] PrecomputedMutator
index.js:42:1
-   addRule('cello', 'cellos')
+   addRule('cello', 'cello')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'cell')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'celli')

[Survived] PrecomputedMutator
index.js:42:18
-   addRule('cello', 'cellos')
+   addRule('cello', 'celle')

[Survived] PrecomputedMutator
index.js:46:1
-   addRule('person', 'people')
+   addRule('person', 'people', 'people')

[Survived] PrecomputedMutator
index.js:49:57
-   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/, 'e') })
+   addRule(/^(?:wo)?man$/i, function(w) { return w.replace(/a/ig, 'e') })

[Survived] PrecomputedMutator
index.js:52:9
-   addRule(/\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function(w) { return w })
+   addRule(/^\b(?:bison|cod|deer|fowl|halibut|moose|sheep)\b/i, function(w) { return w })

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc.filter(Boolean)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:63:71
-   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc).join('|') + ')s\\b', 'i'), function(w) { return w})
+   addRule(new RegExp('\\b(?:' + tools.concat(clothes, games, illnesses, misc.splice(0, misc.length)).join('|') + ')s\\b', 'i'), function(w) { return w})

[Survived] PrecomputedMutator
index.js:67:18
-   addRule(/ics$/i, function(w) { return w })
+   addRule(/ics$/i, function (w) {
+     return w;
+   })

[Survived] PrecomputedMutator
index.js:70:110
-   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function(w) { return w })
+   addRule(/\b(?:tea|sugar|water|air|rice|knowledge|beauty|anger|fear|love|money|research|safety|evidence)\b/i, function (w) {
+     return w.toLowerCase();
+   })

[Survived] PrecomputedMutator
index.js:76:7
-     if (num !== 1 || num === undefined) {
+     if (num !== 1 || typeof num === 'undefined') {

[Survived] PrecomputedMutator
index.js:77:17
-       for (i = 0; i < rules.length; i++) {
+       for (i = 0; i !== rules.length; i++) {

[Survived] PrecomputedMutator
index.js:80:11
-         if (type(rule[0]) === 'RegExp' && rule[0].test(word)) {
+         if (word.match(rule[0])) {

[Survived] PrecomputedMutator
index.js:81:61
-           return type(rule[1]) === 'Function' ? rule[1](word, rule[0]) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word, word.match(rule[0])[1]) : rule[1]

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[1]) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:83:16
-         if (type(rule[0]) === 'String' && rule[0] === word) {
+         if (type(rule[0] + rule[1]) === 'String' && rule[0] === word) {

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[0]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[2]) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:21
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(true) === 'Function' ? rule[1](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[2](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[0](word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:47
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rules.length(word) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word + "s") : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word.slice(0, -1)) : rule[1]

[Survived] PrecomputedMutator
index.js:84:55
-           return type(rule[1]) === 'Function' ? rule[1](word) : rule[1]
+           return type(rule[1]) === 'Function' ? rule[1](word[word.length - 1]) : rule[1]

[Survived] PrecomputedMutator
index.js:103:7
-     if (String.prototype.plural === undefined) {
+     if (String.prototype.plural = function (num) {
+     return plural(this, num);
+   }) {

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural("foo")

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(num + 1)

[Survived] PrecomputedMutator
index.js:105:14
-         return plural(this, num)
+         return plural(typeof num === "number")

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(null, num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural('', num)

[Survived] PrecomputedMutator
index.js:105:21
-         return plural(this, num)
+         return plural(' ', num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, !num)

[Survived] PrecomputedMutator
index.js:105:27
-         return plural(this, num)
+         return plural(this, num + 1)

Ran 0.99 tests per mutant on average.
----------|---------|----------|-----------|------------|----------|----------|
File      | % score | # killed | # timeout | # survived | # no cov | # errors |
----------|---------|----------|-----------|------------|----------|----------|
All files |   80.52 |      245 |         3 |         60 |        0 |        0 |
 index.js |   80.52 |      245 |         3 |         60 |        0 |        0 |
----------|---------|----------|-----------|------------|----------|----------|
[32m12:31:39 (2633) INFO HtmlReporter[39m Your report can be found at: file:///home/runner/work/llm-mutation-testing/llm-mutation-testing/plural/reports/mutation/mutation.html
[32m12:31:39 (2633) INFO MutationTestExecutor[39m Done in 2 minutes 51 seconds.

real	2m52.761s
user	2m42.967s
sys	0m28.079s
